quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Integrability,"@pcarruscag: the approach to use different gradient methods for the convective and viscous terms is relatively common across codes. If it is a computational cost concern, this can be addressed by fusing the kernels. . However, the bigger issue at hand is the other comment that is made in the article about the choice between LSQ and WLSQ/GG for 2nd-order upwind reconstructions: while less accurate, the former is much more robust, while the latter two usually require limiters just to obtain a stable solution on stretched RANS-type meshes, even for flows where we do not expect shocks/discontinuities. The problem with always requiring a limiter is that they stall convergence due to chatter, which apart from the obvious problems, also causes issues for the adjoint. I think everyone has experienced this. Hence the compromise to use both gradients as I note above, which is also stated on p. 9 of Anderson and Bonhaus ""An Implicit Upwind Algorithm for Computing Turbulent Flows on Unstructured Grids."" In that paper they mention an additional interesting point that, in their numerical tests, LSQ outperforms WLSQ/GG for reconstructing nonlinear data at interfaces on highly-stretched meshes. Note the WLSQ/GG gradients are used for the viscous terms, which is important for accuracy. This type of approach is still applied in FUN3D. . If there are any accuracy concerns, we can also address those via our typical verification tools. I agree that we should continue along the path of looking at grid quality issues and how they impact the numerics (potentially adding some grid-based corrections / limiting), but I think the proposed approach in this PR will serve us well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-532883592:1159,interface,interfaces,1159,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-532883592,1,['interface'],['interfaces']
Integrability,"@petebachant thanks for the effort to keep this PR going. I think that @tobadavid would be the best contact for updating the pySU2 wrapper build, as he is the original author. David, if you have a moment, could you please give this a look? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-323252317:131,wrap,wrapper,131,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-323252317,1,['wrap'],['wrapper']
Integrability,"@qwebean The derivative terms you describe would appear in an analytical Jacobian. But SU2 needs the Jacobian of the discrete system. In other words, we don't need to know how the residual depends on the analytical gradient. We need to know how the values at some points ""i"" and ""j"" affects the residual. You want the Jacobian of the residual with respect to individual values at individual nodes, not interpolated functions. You can approximate the derivative (`da/dx`) of some quantity `a` as ""(a_j - a_i)/d_{ij}`, where `d_{ij}` is the distance between the point ""i"" and ""j"". So the Jacobian of (`da/dx`) with respect to `a_i` is (approximately) `-1/d_{ij}`. Does that answer your question? Do you have further questions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1028#issuecomment-652455102:189,depend,depends,189,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-652455102,1,['depend'],['depends']
Integrability,"@rsanfer , I deleted CFEAFSIBoundVariable and kept its data in CFEABoundVariable because:; - It would require two vertex maps to be build, one for vertices another for interfaces.; - It would be less efficient memory wise, the vertex map is size O(N) the number of vertices is O(N^(2/3)) in the worst case, which means eventually having two maps is worse.; - Most FSI cases have a large interface and small fixed boundaries, allocating FSI tractions for the latter is not so bad. I also removed CDiscAdjMeshVariable, as it was empty, and kept only its ""Bound"" counterpart. With this vertex allocation / mapping strategy we always need to instantiate the ""Bound"" version of the class so if the intermediates are empty they can be omitted. Please review the changes and if you have some more thorough tests run them or send them over to me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-526546118:168,interface,interfaces,168,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-526546118,2,['interface'],"['interface', 'interfaces']"
Integrability,"@rsanfer You shouldn't get in touch with the new AD routines at all unless you're using `CDiscAdjMultizoneDriver`.; So in case `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution)` gets executed, that likely means that the if-statement above, `config->GetMultizone_Problem()`, evaluates to true.; Some weeks ago I added another boolean (`CConfig::GetMultiphysicsDiscrete_Adjoint()`) but I was asked to revert that to the line above.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542170904:52,rout,routines,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542170904,1,['rout'],['routines']
Integrability,"@sun5k @rois1995 we now have 2 PR's on the same subject.; This one is already reviewed, and I am not keen on wasting work (mine and others).; The way I see it this PR followed the way we encourage for contributions to SU2, draft PR, etc, and thus it should be integrated.; So, @sun5k can you finish the little things missing here?; That way PR #1788 can then build on top of this.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1275138609:260,integrat,integrated,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1275138609,1,['integrat'],['integrated']
Integrability,"@talbring : as you know, the difference between disabled and active grid movement with 0 velocity is that the former case does not even allocate the memory for the grid velocity at each node, and many conditionals checking for grid movement throughout the solver (fluxes, BCs) are avoided. This was to save memory and effort when grid motion is not needed, however, maybe we need to now change the strategy for multizone problems which may have both fixed and moving zones (perhaps always active with 0 as default). . I am a little surprised they are not the same as well, but somewhere in the code path there must be an issue with this.. my guess is something related to BC_Fluid_Interface() or the transfer structure when grid movement is active on both sides but has a value of 0 on one of the interfaces.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505188890:797,interface,interfaces,797,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505188890,1,['interface'],['interfaces']
Integrability,"@talbring ; Thanks for your help. I want to install SU2 by python wrapper build. So I write a definition file based on yours. However, some errors happened. The reason seems to be python environment. Sorry for troubling you. Could you give me some suggestions, please ?. Best. Here is my definition file.; ```; Bootstrap: docker; From: ubuntu:18.04; ; %post; apt-get -y update; apt-get -y upgrade; apt-get -y install python3 python3-pip git build-essential autoconf openmpi-bin openmpi-common libopenmpi-dev m4 gfortran swig vim; pip3 install mpi4py numpy scipy matplotlib; git clone --depth=1 https://github.com/su2code/SU2; cd SU2; mkdir SU2_Install; autoreconf -i; ./bootstrap; export CXXFLAGS=""-O3 -Wall""; python3 preconfigure.py --enable-autodiff --enable-mpi --enable-PY_WRAPPER --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --prefix=$PWD/SU2_Install; make -j 4 install; make clean; cd ..; pip3 install tensorforce[tf]; git clone https://github.com/tensorforce/tensorforce.git; cd tensorforce/; git checkout major-revision-final; pip3 install -e .; ; %runscript; exec /SU2/bin/$1 $2 ; ```; The error is:; ```; make[3]: Entering directory '/SU2/SU2_BASE/SU2_PY/pySU2'; /bin/bash: python: command not found; swig -DHAVE_MPI -Wall -I/usr/include/python3.6m -I/usr/include/python3.6m -I/root/.local/lib/python2.7/site-packages/mpi4py/include -I/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /SU2/SU2_BASE/../SU2_PY/pySU2/pySU2.i ; /SU2/SU2_BASE/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; Makefile:532: recipe for target 'SU2_APIPYTHON_wrap.cxx' failed; make[3]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[3]: Leaving directory '/SU2/SU2_BASE/SU2_PY/pySU2'; Makefile:525: recipe for target 'all' failed; make[2]: *** [all] Error 2; make[2]: Leaving directory '/SU2/SU2_BASE/SU2_PY/pySU2'; Makefile:441: recipe for target 'install-recursive' failed; make[1]: *** [install-recursive] Error 1; make[1]",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-515298427:66,wrap,wrapper,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-515298427,1,['wrap'],['wrapper']
Integrability,"@talbring I agree with your assessment of Boost. I think it's a heavyweight solution to a lightweight use-case. We could always include just the unit-testing header (they offer a header-only version), but ""people may want to use more and more features of boost,"" as you point out. If we as developers want to add Boost as a formal dependency for SU2, then that seems like a fine route. But I have the feeling that many developers do not want to add a Boost dependency. Honestly, Boost UTF doesn't offer anything that we can't get from Google Test. Catch2 is definitely the simplest and easiest of the unit-testing frameworks I listed. The only sticking point is that it requires c++03, and that the full-feature version requires C++11.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-500393344:331,depend,dependency,331,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-500393344,6,"['depend', 'rout']","['dependency', 'route']"
Integrability,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598751341:494,depend,dependencies,494,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341,4,['depend'],['dependencies']
Integrability,"@talbring That was a good point about placement. I was able to move this implementation to a function called `FixedCL_Convergence()` in the euler solver class. It also allowed me to make it a little more robust. Since it still requires information about the convergence that is calculated in the integration container, the method has to be called `CFluidIteration::Iterate()`. I included the details of the implementation in the Constant CL tutorial on the website. That is in a pull request for the website. Consequently, that [pull request ](https://github.com/su2code/su2code.github.io/pull/16) needs to be approved first so that the regression test for this one can pass. This is because of a change in options in the Fixed CL mode.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/780#issuecomment-534420006:296,integrat,integration,296,https://su2code.github.io,https://github.com/su2code/SU2/pull/780#issuecomment-534420006,1,['integrat'],['integration']
Integrability,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:318,wrap,wrapper,318,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,2,['wrap'],['wrapper']
Integrability,"@talbring how do you want the ""interface"" to work for the user?; Do they modify meson.build?; Do they define environment variables for the root folder of each dependency? (I guess not); Do we force the installation directory? (not a good idea since some components can be installed with apt-get); Do we force them to link only statically / dynamically?; Also are you aware that linker flags for BLAS can be compiler dependent, especially for MKL?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525688282:31,interface,interface,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525688282,3,"['depend', 'interface']","['dependency', 'dependent', 'interface']"
Integrability,"@timjim333 you should probably open a new issue for this, specifying your system, Python environment, and the error messages you get. It may be possible to remove those hardcoded paths, changing. ```make; MPI4PY_INCLUDE = ${HOME}/.local/lib/python2.7/site-packages/mpi4py/include \; -I${PYTHON_SITE_PACKAGES}/mpi4py/include \; -I/Library/Python/2.7/site-packages/mpi4py/include; ```. to. ```make; MPI4PY_INCLUDE = ${PYTHON_SITE_PACKAGES}/mpi4py/include; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-477524398:116,message,messages,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-477524398,1,['message'],['messages']
Integrability,"@timjim333, I checked your grid with just connectivity info and I get the following error messages. Boundary marker BODY, surface element 77477: No corresponding volume element found.; Coordinates of the points; 0.1815790.04981870.0020471; 0.181850.04994770.00205104; 0.1816670.04971090.00204381. Boundary marker BODY, surface element 133348: No corresponding volume element found.; Coordinates of the points; 0.1814850.04947420.00203657; 0.1813090.04968980.00204316; 0.181230.04944470.00204356. Boundary marker BODY, surface element 134774: No corresponding volume element found.; Coordinates of the points; 0.181230.04944470.00204356; 0.1813020.04923740.00202934; 0.1814850.04947420.00203657. Boundary marker BODY, surface element 135217: No corresponding volume element found.; Coordinates of the points; 0.1816670.04971090.00204381; 0.181850.04994770.00205104; 0.1815790.04981870.0020471. So clearly the grid is invalid.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494393404:90,message,messages,90,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494393404,2,['message'],['messages']
Integrability,"@timjim333, create a sequential executable and run it on one core. It may take a couple of minutes, but it is not too bad. Then MPI is not used and you should definitely get the error message. I don't think there will be much of a difference in the release version and develop version for this problem. As far as the MPI is concerned, a one-sided communication is used for the error message. Sometimes the error message is not shown, depending on the MPI distribution and number of cores. Maybe this is something we have to look into. In any case, what MPI distribution are you using?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493889597:184,message,message,184,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493889597,4,"['depend', 'message']","['depending', 'message']"
Integrability,"@vdweide @talbring Ok, thanks you for all your thoughts and help troubleshooting this so far - I guess it might be the SU2 export plugin introducing this as I can't seem to identify the mesh issue within Pointwise itself. I'll contact support and leave a message here if any workarounds are found.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-495885490:255,message,message,255,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-495885490,1,['message'],['message']
Integrability,"@vdweide: yep, definitely a bug. Only the mean flow solver uses that routine. Please feel free to clean this up. I would also like to update the version for the incompressible solver (I think it needs a fix or two)... but we'll get to that after your changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/454#issuecomment-338776498:69,rout,routine,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/454#issuecomment-338776498,1,['rout'],['routine']
Integrability,"A short summary of the things I did in the additional commits:. - I added a consistent error handling that can be used throughout the code. For example if a marker is not specified the error looks like that: ; ```; -------------------------------- Error ---------------------------------; In ""short unsigned int CConfig::GetMarker_CfgFile_TagBound(std::__cxx11::string)"": ; ------------------------------------------------------------------------; The configuration file doesn't have any definition for marker airfoil; ------------------------------------------------------------------------; Exiting now ...; ```; or if a solution cannot be found:. ```; -------------------------------- Error ---------------------------------; In ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; ------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------------------------------------------------; Exiting now ...; ```; In case you want to throw an error, you can simply call the function `SU2_MPI::Error(""Error Message"", CURRENT_FUNCTION)` where `CURRENT_FUNCTION` is a predefined macro which expands to the name of the routine at compile time. I already replaced almost all error messages in the code. - More MPI functions are included in the MPI Wrapper. - The rank/size is now stored in most of the bigger classes and initialized in the constructor. That means there are no calls to MPI_Comm_rank / MPI_Comm_size anymore in every routine ... For convenience there is also a SU2_MPI::GetRank() / SU2_MPI::GetSize(), in case you need it outside of the main classes. Let me know what you think. Not everything I did has to stay the way I implemented it :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-347663941:1140,Message,Message,1140,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-347663941,8,"['Message', 'Wrap', 'message', 'rout']","['Message', 'Wrapper', 'messages', 'routine']"
Integrability,"A simple workaround would be to add an if line before the split:; Line 84 of parse_config.py; if np.size(s2) > 1:; thisval = s2.split('""')[1]; Yes, it requires also ; import numpy as np; at the beginning of the script.; Now it runs with no error message but no output produced.; Also config_gui.py is running, but it opens an empty window,; so apparently this is not good enough. best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/216#issuecomment-241208818:246,message,message,246,https://su2code.github.io,https://github.com/su2code/SU2/issues/216#issuecomment-241208818,2,['message'],['message']
Integrability,"ADME.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10410,Depend,Dependabot,10410,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Depend'],['Dependabot']
Integrability,"APPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pass when compiling CGNS; * `SU2_ENABLE_CODI`: `no|forward|reverse`; * `SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:2802,message,messages,2802,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['message'],['messages']
Integrability,Access solution and primitives **at markers** via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1949:57,wrap,wrapper,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1949,1,['wrap'],['wrapper']
Integrability,Access solution and primitives via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:42,wrap,wrapper,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['wrap'],['wrapper']
Integrability,"Actually, on closer look, this seems ok. I am only averaging the grid velocities on either side of the face, not the solution. That routine might be more efficient as an edge loop, but should be correct. If you're really bored, see pg. 83 for details about the Geometric Conservation Law as implemented there: https://economon.github.io/docs/economon_dissertation.pdf",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594:132,rout,routine,132,https://su2code.github.io,https://github.com/su2code/SU2/issues/1005#issuecomment-635495594,1,['rout'],['routine']
Integrability,"Adaption of the interpolation method NearestNeighbor to turbomachinery applications when rotating frame is used. ## Proposed Changes; *If the flow is solved in a rotating frame, the grid is not actutally rotating. But the interpolation for a sliding interface should be done with an actually rotated boundary. The proposed changes add the function of rotating grid points on the boundary of a zone solved in rotating frame before the interpolation is executed. Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future.*. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ yes ] I am submitting my contribution to the develop branch.; - [ yes ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ yes ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173:250,interface,interface,250,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173,1,['interface'],['interface']
Integrability,"Add <code>labels</code> output which will contain all the matching/intersecting labels i...</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5662,depend,dependency-name,5662,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['depend'],['dependency-name']
Integrability,Add CGNS source to repo and integrate with autoconf/automake for automatic inclusion in build.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/105:28,integrat,integrate,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/105,1,['integrat'],['integrate']
Integrability,Add Python interface for setting AoA and AoS for compressible flow simulations.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045:11,interface,interface,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045,1,['interface'],['interface']
Integrability,"Add a method to the MPI wrappers to get the global communicator or something equivalent, the only way to make this kind of change future-compatible is to break compilation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1180#issuecomment-769962392:24,wrap,wrappers,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/1180#issuecomment-769962392,1,['wrap'],['wrappers']
Integrability,Add an option to meson for extra dependencies (to fix mpich and lapack issues),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1102:33,depend,dependencies,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102,1,['depend'],['dependencies']
Integrability,Add python interface for setting AoA and AoS,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045:11,interface,interface,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045,1,['interface'],['interface']
Integrability,Add the Wtime function to the MPI wrapper (to avoid #ifdefs),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/943:34,wrap,wrapper,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/943,1,['wrap'],['wrapper']
Integrability,"Adding Custom, time-dependent MACH_NUMBER",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1835:20,depend,dependent,20,https://su2code.github.io,https://github.com/su2code/SU2/issues/1835,1,['depend'],['dependent']
Integrability,Adding some additional residual convergence plots sampled from our test cases. Still some work to do to integrate #724 and clean up regressions. ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072901-fa737f00-e523-11e9-9369-92bbea23f1bb.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072920-03645080-e524-11e9-858a-dc7c310a673b.png); ![residual_convergence](https://user-images.githubusercontent.com/4896083/66072950-1414c680-e524-11e9-80eb-0c4b4a5c0aa7.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-537630224:104,integrat,integrate,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-537630224,1,['integrat'],['integrate']
Integrability,"Addressed in #824, error message thrown (it is not easy to implement a good default due to shared code with other CONV_NUM_METHOD_??? options).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/796#issuecomment-569149919:25,message,message,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/796#issuecomment-569149919,1,['message'],['message']
Integrability,Adds the classical fourth-order Runge-Kutta time integration scheme to the finite volume flow solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/376:49,integrat,integration,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/376,1,['integrat'],['integration']
Integrability,"After a lot of configuring and reconfiguring, it turns out the above issue occurs when the system's meson is used instead of the meson.py that ships with SU2. However, I'm not sure this is correct behavior. Shouldn't the choice of the meson executable script be irrelevant? In other words, shouldn't the configuration be dependent on meson.build and not on meson.py? Using system's installed meson should produce the same result as using the meson.py that ships with SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747:321,depend,dependent,321,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747,1,['depend'],['dependent']
Integrability,"After realizing that SU2_MSH was only able to generate halo cells when the periodic BCs didn't share a common edge, @sravya91 and I went through the code that performs this task and fixed a few things to add this capability back. After fixing this we realized that there was an issue within the SU2_CFD when trying to run periodic BCs that touch each other. The issue was traced to the mpi communication routines, and since @economon was working on a revamp of this part of the code, we decided to wait until this was done. I am not sure what has been done here since, but I thought I should mention what has already been done in case you find it useful and can save you some time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-358538787:404,rout,routines,404,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-358538787,1,['rout'],['routines']
Integrability,"Agreed that libraries are great as long as they are optional - sometimes we need them for highly specialized tasks. Btw, is it possible to use your wrapper for other external solvers? For example, it might be worth testing with PETSc again soon for performance reasons. I would encourage making a single base interface for external solvers that talks to the existing structure in SU2, which never needs to change, and then creating the implementations for each solver that adapts the particular solver data structures to the fixed interface (similar with the grid readers and output routines). Is this easy to do now?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524932838:148,wrap,wrapper,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524932838,4,"['interface', 'rout', 'wrap']","['interface', 'routines', 'wrapper']"
Integrability,"Agreed that the style needs some attention. I am open to ideas about this. You may have noticed that I integrated Codacy recently to test it out: https://www.codacy.com. We have the style guide, but honestly, it's not getting much attention. We should automate checks or have scripts that automatically enforce style constraints. Vera++ sounds interesting in this regard. A little while back, @rsanfer and I had been working on indentation issues with the uncrustify tool. Should we open this as an issue and get some input? Find volunteers to look into these things?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323636235:103,integrat,integrated,103,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323636235,2,['integrat'],['integrated']
Integrability,"Agreed, I am not too concerned about reusing the limiter values from a previous iteration. Though it appears to me that we are using the same ""limiter"" boolean for checking whether we need both the mean flow and turbulence limiters in that routine.. perhaps we can separate that into flow and turbulence limiter booleans so they can operate independently (we have GetSpatialOrder_Flow() and GetSpatialOrder_Turb()).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-316276242:240,rout,routine,240,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-316276242,1,['rout'],['routine']
Integrability,Agreed. We do not alter that routine too regularly. Thanks for making that change. I'll merge this in.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201#issuecomment-151210240:29,rout,routine,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/201#issuecomment-151210240,1,['rout'],['routine']
Integrability,"Ah sorry,; SU2_DOT mostly only uses OpenMP in the passive linear system, I'm not sure if @thomasdick Sobolev smoother has some recorded part that involves OpenMP.; For the python wrapper I usually set the number of threads with env var OMP_NUM_THREADS It may be a bit confusing for most users having to specify the number of threads when instantiating the driver :thinking: ; I think disc_adj_flow would be the easiest to adapt. Those tests print a sensitivity at a particular vertex of a marker to be checked by the regression script, so you would have to make sure that's only printed on one rank (for parallel AD).; disc_adj_fea should also be fine for hybrid AD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877:179,wrap,wrapper,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877,1,['wrap'],['wrapper']
Integrability,"Ah, I wasn't aware of the corrected version. Thanks for pointing out my mistake. The corrected version does make more sense, and the main changes seem to be:. + Changing the location of the sqrt in the definition of `Lturb`; + Changing `ch3` from 0.5 to 2.0; + Clarifying that S and Omega should have a factor of sqrt(2). As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. We know that they got a nice range of values for the blending constant on their tests with DDES. The cases I can see where they explicitly show the results of the blending function are:. + Circular cylinder at Re = 50,000 (Travin _et al._ 2002); + Tandem cylinders at Re = 166,000 (Xiao _et al._ 2012); + NACA0021 airfoil in deep stall (Mockett 2009). The tricky thing is that the value of the blending constant is determined by the flow solution, which is determined by the solver. So the values we obtain will be dependent both on the version of DDES used and the nature of the code. We can't expect to match any of these papers exactly. We could also use a simpler flow, such as fully developed channel flow or a flat plate boundary layer. The tradeoff would be simplicity for ease of comparison.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532#issuecomment-388189377:966,depend,dependent,966,https://su2code.github.io,https://github.com/su2code/SU2/pull/532#issuecomment-388189377,2,['depend'],['dependent']
Integrability,"All the TestCases seem broken when I try to run SU2 4.1 compiled from source. When I run the serial_regression.py and parallel_regression.py scripts, I get error messages like . There is no geometry file (GetnZone))!. and mesh files like mesh_ONERAM6_turb_hexa_43008.su2 appear to be missing. When I copy one of these from a 4.0 sample directory (where everything worked) and rerun the test case manually by typing something like. mpirun -n 2 /mit/su2_v4.1/bin/SU2_CFD config_CFD.cfg. it works. Something seems to be missing that generates the mesh files but I'm no SU2 expert, I just install it for the real users. Thanks for any help. ```; Alex; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222:162,message,messages,162,https://su2code.github.io,https://github.com/su2code/SU2/issues/222,1,['message'],['messages']
Integrability,"All,. For whatever it is worth, here are some thoughts. It is clear that we need to strike the right level and hierarchy of abstraction: at the highest level one really ought to be describing the physical problem, not the number of zones or the specific time-stepping algorithm that would be used. But preventing future multi-zone calculations from reaching the (time) order of accuracy desired is also an important issue that SU2 must support (and that I think would be very important for those doing unsteady turbomachinery calculations). Just as important: even for multi-physics problems (say fluid-structure interaction, when the fluid and structural solvers are not closely integrated into the same source) we need to ensure that the time accuracy of the full multi-physics calculation is as high as those of the component physics solvers. This is a very valid and useful discussion and some proposals are on the table. Given that we are planning a developer’s meeting sometime before the end of the year, this may actually be one of the items in the agenda for discussion, so some decisions can be reached that both make sense and minimize the pain of changes for any part of the existing code. I would suggest that the conversation continue and that other proposals are put forward so the discussion can be finalized at the developer’s meeting. Best,. Juan. On Sep 10, 2017, at 1:09 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Dear @rsanfer<https://github.com/rsanfer>,. I agree with you that the outer loop should be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whethe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:680,integrat,integrated,680,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integrated']
Integrability,"All,. I looked a bit more through Eigen and, indeed, the performance is pretty impressive and generally better than MKL and Atlas (the self-tuned implementation of LAPACK) ant most/all matrix sizes. I agree with comments made by @pcarruscg that having a standard for matrix operations throughout the source would clean up /simplify the code considerably and, since it does not seem to impact the AD approach, it should be pursued. It sounds like a quick test branch like @vdweide is suggesting makes sense. A quick driver code to test the performance of the Eigen routines vs MKL makes sense too. The only thing that @vdweide should comment on is how much work it would be to change the LAPACK/BLAS based implementation in the DG-FEM solver to the interface that Eigen exposes. Best,. Juan. On Feb 1, 2019, at 4:19 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Would it be an idea to create a branch to test things out and make a decision based on the results? It would be interesting to see the performance for e.g. the dense matrix multiplications in the DG-solver compared to Intel's MKL. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459705131>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxM1gm0iy_FeGBMFzxVQnYFFzEHt4ks5vJDDlgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459845576:564,rout,routines,564,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459845576,4,"['interface', 'rout']","['interface', 'routines']"
Integrability,"All,. I would agree that we need to look at an existing library and not re-develop one. The standard for dense linear algebra is LAPACK. It has been around forever, relies on BLAS routines, is currently being used in the SU2 higher-order DG-FEM solver. Various computer vendors (including GPU manufacturers) have spent many years optimizing BLAS and LAPACK calls on their own computer architectures. This means that your code is (a) portable and, by linking to the appropriate vendor-provided version of the library (say like Intel’s MKL), (b) you get highest performance. I am not familiar with Eigen (just looked at the web page), but there is an interesting comparison between Eigen and LAPACK (written by the developers of Eigen…take it with a grain of salt) here<http://eigen.tuxfamily.org/index.php?title=FAQ#How_does_Eigen_compare_to_BLAS.2FLAPACK.3F>. If all they say is true, then Eigen would be a very good choice. If it is a bit exaggerated, then maybe LAPACK is better. Does anyone have experience with Eigen? Are there any reasons why LAPACK is better? Can the folks involved in FV and DG-FEM solvers talk to each other before making a decision?. While PETSc is a wonderful library (and parallel), I would hesitate to use it as the solution for the problem that we are trying to solve: it is not the easiest thing to compile and it is most definitely not lightweight. If one also wanted to replace Krylov-space solvers and preconditioners in SU2 the PETSc might make more sense….but it still forces the developer to conform to their view of the world (including matrix setup and decomposition). Best,. Juan. On Jan 31, 2019, at 4:43 PM, Brian Munguía <notifications@github.com<mailto:notifications@github.com>> wrote:. @EduardoMolina<https://github.com/EduardoMolina> and I have discussed this over the past few weeks and are also in favor of using an external library. I don't have a strong opinion on the library we choose, but he seems to be in favor of PETSc<https://www.mcs.anl.gov/p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459566859:180,rout,routines,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459566859,1,['rout'],['routines']
Integrability,"All,. I'll get the chance to jump into this topic which I'm interested in.; As some of you know I'm currently working on sliding meshes and multi-zone problems for turbo-machinery applications.; Currently also the cinterpolator class, in particular for the nearest neighbour interpolation, relies on brute force search algorithms. ; Moreover, a lot of possible (future) interpolation methods may rely on a nearest neighbour search in the very first place (I'm thinking for instance to the construction of a polynomial interpolation pattern which would require to find a bunch of donor points on the donor mesh); This may lead to a dramatic increase of the computational time when dealing with very large problems like for instance unsteady multi-stage turbo-machinery problems, since, for these particular applications, at every time step we will need to reconstruct the communication pattern among rotors and stators.; So the implementation of a clever way to carry out the nearest neighbour search will be mandatory in the future of SU2. I think that it would be very useful to have a reliable and reusable tree search library so that everyone can exploit the same function calls.; For former works I did use the ANN library from the University of Maryland which is distributed under the GNU lesser public license, moreover I talked with Edwin and he also has some routines he wrote himself that could suits this particular problem. Just let me know if and how we can help in solving this thorny problem. Ciao!; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224542664:1367,rout,routines,1367,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224542664,1,['rout'],['routines']
Integrability,"All,. Of course, another approach to verifying which sign is correct is to do an analytic differentiation (using CoDi?) or simply using complex-step on the residual calculation routine to get exact Jacobians (for a particular state) and confirm the correct sign. This does require some code extraction / refactoring to perform the test, but it has the benefit that you would know exactly what the correct answer is for the specific residual implementation. Best,. Juan. On Nov 16, 2018, at 11:03 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede<https://github.com/clarkpede> : I'm interested in your unit testing set up... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/609#issuecomment-439493827>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxInSS3cmLF8iFkD22AoYAp0G3G2yks5uvwvxgaJpZM4YeD9V>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439500791:177,rout,routine,177,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439500791,2,['rout'],['routine']
Integrability,"All,. Thanks for your comments. I think ANNlibrary is no longer maintained. It would be better if we can use a well maintained library in-order to prevent issues in future. Additionally ANNlibrary does not support distributed trees. As far as I know, pointcloud library also does not support distributed trees. I guess we will have to write a wrapper routine using MPI. This will create a local tree for its own portion of the surface mesh. Now distance computation can be done by querying all the trees and using the minimum. One catch here is that we will have to compute distance queries in a group in order to prevent the communication latency eating up the advantage. . Waiting for comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224563432:343,wrap,wrapper,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224563432,2,"['rout', 'wrap']","['routine', 'wrapper']"
Integrability,"All,. The following page has performance comparisons between eigen and mkl (and others):. http://eigen.tuxfamily.org/index.php?title=Benchmark. They are dated 2011, so they are a bit old, but if the quoted performance is real, I would say it is a no-brainer to switch to eigen. If the performance tests (for at least simple things like daxpy and gemm) could be repeated to verify the numbers, that would help us make a final decision. Best,. Juan. On Feb 2, 2019, at 1:58 AM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. @pcarruscag<https://github.com/pcarruscag>, I agree with you it will be hard to beat the MKL (running at 60 percent peak for most of the gemm calls for the DG-solver), but if you don't have any performance loss, that would already be nice, as it improves readability. Furthermore, the performance of the DG solver in combination with the discrete adjoint is horrible, because it relies on my very naive implementation of the matrix products. So it would already be something if we can get an improvement there, although we do not use the DG adjoint solver (yet). For me the easiest way to test things out for the DG-solver would actually be in SU2 itself. @economon<https://github.com/economon> put some nice profiling routines in there for the gemm calls, which can be used without any additional work to test eigen. @pcarruscag<https://github.com/pcarruscag> (or somebody else), could you create a branch in which eigen is downloaded in the external directory? I think I can manage from there. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/643#issuecomment-459952137>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxCgydwy1nS3qPJvyCMJXLXWNMSFsks5vJWEkgaJpZM4adbAo>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459986613:1283,rout,routines,1283,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459986613,2,['rout'],['routines']
Integrability,"All: I have temporarily disabled the regressions for the TestCases repository (the main SU2 repository regressions are still active). The time limit for that repository is only 50 min., as opposed to the 70 min. that we received for the SU2 repo by special request, so it fails essentially every time due to exceeding the limit. Rather than maintain a separate repository in Travis CI for the TestCases repo, I propose that we implement a way to trigger the main repository regression tests with a change to the TestCases repo. This type of dependent build of downstream repos seems possible by using something like the following:. https://github.com/mernst/plume-lib/blob/master/bin/trigger-travis.sh. What do folks think? Anyone interested in helping with this?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/459:541,depend,dependent,541,https://su2code.github.io,https://github.com/su2code/SU2/issues/459,1,['depend'],['dependent']
Integrability,Allow selecting the zone used by the python wrapper (for multizone drivers),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2019:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2019,1,['wrap'],['wrapper']
Integrability,"Alright everyone, this PR is now ready to get merged from my point of view. If there are further concerns regarding particular Testcases please let me know. @pcarruscag did you check airfoil_fsi_rbf and discadj_fsi_airfoil? If yes, your (dis-)approval for this PR would be appreciated (of course from everyone else as well). . I would like to get this integrated before #790 and I would recommend @economon not to start changing reg-test values before this is merged. The code still fixes the initial Issue #735",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-536618994:352,integrat,integrated,352,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-536618994,1,['integrat'],['integrated']
Integrability,"Alright, so my above hunch was correct: that there was an assumption of dictionary key order. I switched that variable over to an ordered bunch and I believe all the tests are passing, despite one of them timing out. After addressing that, the entire repo (including the wrapper) should now be compatible with both Python 2 and Python 3, and is setup to be tested with both.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-340193114:271,wrap,wrapper,271,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-340193114,1,['wrap'],['wrapper']
Integrability,"Alright. I did some digging, and the problem has nothing to do with the warning message. It goes much deeper. In a recent release, SU2 switched to reading and writing binary restart files instead of ASCII. The grid adaptation code is still written only for ASCII. If I'm right, then trying to read a binary restart file with the flow solution breaks the program. I'll submit an issue detailing the bug. For now, try adding the following lines to your cfg file when you run `SU2_CFD`:. %; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= NO; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= NO. Then run `SU2_MSH`, just like you have been. Does that clear things up?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-436131167:80,message,message,80,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-436131167,2,['message'],['message']
Integrability,"Although my own participation with SU2 is now reduced due to pursuing other endeavors, I want to say that I hope that your future experiences with SU2 and the open-source community will be more positive, that I hope neither of you have been dissuaded from contributing here or on other open-source projects, and that this has been a good reminder that it is easy for things to get heated quickly, especially on the internet where tone of voice cannot be easily conveyed. . @SumanVajjala: ; conv_numerics→ComputeResidual is setting the fluxes inside of that function, and it uses the normal and flow variable information set at previous lines, ; conv_numerics→SetNormal(Normal); (line 10290 in your example) ; conv_numerics→SetPrimitive(V_domain, V_infty); (line 10433 in your example). ComputeResidual can be found in numerics_direct_mean.cpp, where you will see that SetResidual is handled differently depending on the numerical scheme chosen, and that calls to GetInviscidProjFlux are included. ; A similar pattern is followed in the other boundary conditions, although there may be more going on here which someone else may be able to comment on. . If you have any questions that are not bugs/code issues, SU2 also has a forum at: https://www.cfd-online.com/Forums/su2/. I also recommend using an IDE (xcode, eclipse, etc) to assist with navigating the code. Best,; Heather",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314942908:903,depend,depending,903,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314942908,1,['depend'],['depending']
Integrability,And where did all the python wrapper functions go?? I see that there is nearly nothing left in the python_wrapper_structure.cpp with respect to version 7.5.1 ? The problem is that I was using several of the functions which are now missing...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1536246010:29,wrap,wrapper,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1536246010,1,['wrap'],['wrapper']
Integrability,"Another option mentioned by @talbring is MATH_PROBLEM for which the default could depend on the code being used, i.e. for SU2_CFD_AD and SU2_DOT_AD the default should be DISCRETE_ADJOINT",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/942#issuecomment-646635198:82,depend,depend,82,https://su2code.github.io,https://github.com/su2code/SU2/issues/942#issuecomment-646635198,1,['depend'],['depend']
Integrability,"Antonio,. I have been trying to figure the error message out, but I have been unsuccessful. I've only modified serial_regression.py and parallel_regression.py. Is there a file where turbulent_hb needs to be defined or does the code read the names from the test case repository?. We may want to change structure of HB test case folder since there are now two cases. The turbulent case has a sub-directory in there but the inviscid does not. Jason",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/445#issuecomment-336948272:49,message,message,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/445#issuecomment-336948272,1,['message'],['message']
Integrability,"Aok on inlines. Looking forward to the memory layout concept.. have you also thought about how we might combine this with vectorization (SIMD) across the edges in the residual / gradient / limiter routines? There's probably another 2x speedup available for those kernels. Lastly, I don't think we should throw out the possibility of removing the CVariable class entirely in favor of allocating memory directly in the solver classes. We have thought about this in the past, and it is not used deliberately in the DG solver, for example. Food for thought.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513049255:197,rout,routines,197,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513049255,1,['rout'],['routines']
Integrability,Apparently meson looks for ninja by just trying to execute the command `ninja` with the python call `Popen`. And I guess it depends on the python version (on our cluster we have 3.6) whether the current working dir is included in the search path or not ... Then it is unfortunately not possible skip the step in between to tell meson where to find ninja ... Then for now you'll have to do the following steps (as mentions by @TobiKattmann):. Build ninja in externals/ninja using `configure.py --bootstrap`; Add `externals/ninja` to the `PATH` variable; Run meson with `externals/meson/meson.py build`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495564089:124,depend,depends,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495564089,1,['depend'],['depends']
Integrability,"Are the compiler wrappers, mpicc and mpicxx, also installed? When I look in your log file it mentions ; ./configure: line 3362: /usr/bin/mpicxx: No such file or directory",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513849210:17,wrap,wrappers,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513849210,1,['wrap'],['wrappers']
Integrability,"Are you able to reproduce this behaviour with any other cases, say a rotating cylinder perhaps? To me it looks like the strange behaviour develops from the area in your mesh where the mesh density along the interface is visibily different (north and south of the image shown). This could be a discretization issue rather than a bug with the solver?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2034270730:207,interface,interface,207,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2034270730,1,['interface'],['interface']
Integrability,"As described in Issue #431, using `SU2_MSH` for periodic mesh construction can be buggy due to its sorting of nodes. Under certain conditions, nodes can be duplicated and/or missing from the output *.su2 file. This pull request implements a more robust sorting process, where the sorting occurs in the following steps:. 1. Send/receive nodes are explicitly identified; 2. The sorted list is created without any send/receive nodes.; 3. The receive and then send nodes are added to the sorted list. Here's a few comments about the pull request:; + Since this routine is only run once, I felt the usability of std::vector outweighed the computational efficiency of raw arrays.; + I had to create two lists, NewSort and ReverseSort, instead of the original one list (NewSort). That's because two different mappings between node numbers need to occur. In the old code, where the list was sorted by switching elements, the two mappings _should_ have been identical. Since the improved method does not use switching, two lists are necessary.; + There's a lot of memory leaks/uninitialized values when checking this pull request with Valgrind. I checked them, and this pull request doesn't create any _new_ memory issues. Apparently both `SU2_CFD` and `SU2_MSH` have memory issues. #### Verification; Since none of the existing regression tests run `SU2_MSH`, I created a separate case to verify both the bug and the fix. It's a simple 3x3 cube that's periodic in the z-direction. I've attached the files below. Here's the steps:. 1. Run `SU2_MSH MSH.cfg`; 2. Run `SU2_CFD per_CFD_dev.cfg`. Using the existing develop branch, the verification case runs into a segfault when writing the output. This pull request allows the verification case to complete successfully. You can also check the original test case from Issue #431 to verify the bug fix. If any of you know of additional verification tests I could run, then please let me know. Test case: [cube.tar.gz](https://github.com/su2code/SU2/files/1639835/c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/500:557,rout,routine,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/500,1,['rout'],['routine']
Integrability,"As identified by @LaSerpe during conversation in pull request https://github.com/su2code/SU2/pull/312, there is a bug in the develop branch somewhere during the merge of the solution for the parallel fsi2d test case, which may be related to recent changes in SU2_SOL. . Error output can be seen in: https://travis-ci.org/su2code/SU2/jobs/165118367. Fix should include the addition or modification of a regression test case to catch similar errors in the future. My suggestion for where to start: go back in the builds until you get to one that does not have this error, and check out what the difference in the SU2_SOL routines are there.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/313:619,rout,routines,619,https://su2code.github.io,https://github.com/su2code/SU2/issues/313,1,['rout'],['routines']
Integrability,"As mentioned in #975 ; This routine was averaging the solution at nodes i and j but it was updating the residuals at those nodes with the un-averaged solution.; https://github.com/su2code/SU2/blob/626be8fd3fcc63c4f2c5aaeb1d93fdcbd0734f56/SU2_CFD/src/solvers/CSolver.cpp#L2732; Upon fixing it one of the turbomachinery cases started diverging, so I kept the suspicious implementation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1005:28,rout,routine,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/1005,1,['rout'],['routine']
Integrability,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:44,rout,routine,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,1,['rout'],['routine']
Integrability,"As the error message indicates, a surface element is not part of a volume element. At least, the solver is not able to find one. From the error message this happens for surface element 133348 of marker 0.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493938679:13,message,message,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493938679,2,['message'],['message']
Integrability,"As the error message says, it cannot find ""Python.h"". This is again related to the Python wrapper compilation. If you really don't need it, I suggest you to just disable it when configuring your build (remove --enable-PY_WRAPPER). If you need the Python wrapper and if your Python is not located in a standard location on your supercomputer, you will have to manually modify the SU2_PY/pySU2/Makefile.am and put the right paths for the Python include and Python libs (I think similarly to what you did for mpi4py, see above)... Again, everything should be improved after #424 is merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-349590138:13,message,message,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-349590138,3,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:333,interface,interface,333,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509,8,['interface'],['interface']
Integrability,"Attaching some results for the RAE2822 of the pressure field zoomed in right near the shock on the upper surface. The results do change (lift and drag by a couple percent) mostly due to a change in shock position it seems. The pressure field also shows the same behavior referenced above when the term is included. Unfortunately, we do not have much data to compare with here, since this case is not on the TMR. The integrated quantities above for the bump problem do not appear to be too sensitive to it either way, but the pressure field does indeed show the same discrepancies. In general, I have not been able to find any strong arguments for or against including the term in literature/codes. Although it is prescribed by the theory, some folks mention it is sometimes dropped (TMR also says it is sometimes ignored unless supersonic), or it gets dropped without mention at all. It is certainly affecting the pressure distribution, so we should take that into consideration. It is possible that there is some other bug that gets exposed by its inclusion, but I did not come across anything yet. As we know the SA model does not exhibit this behavior, I lean toward removing it. I'm all ears if you have any other insight. <img width=""1313"" alt=""Screen Shot 2019-10-25 at 2 47 16 PM"" src=""https://user-images.githubusercontent.com/4896083/67607461-615a1180-f739-11e9-9d68-9c5d15fb0acc.png"">; <img width=""1312"" alt=""Screen Shot 2019-10-25 at 2 47 06 PM"" src=""https://user-images.githubusercontent.com/4896083/67607471-68811f80-f739-11e9-82bd-ac1c23b4caad.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-546529544:416,integrat,integrated,416,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-546529544,1,['integrat'],['integrated']
Integrability,"BTW, all of the above also applies for the grid motion parameters. This should also happen inside the loop over the number of stages of the time integration scheme and currently this is done outside this loop. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329078418:145,integrat,integration,145,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329078418,1,['integrat'],['integration']
Integrability,"Based on the feature_pyWrapper branch :. -new SU2_API folder with :; *include for header files (.h/.hpp); *src for source files (.cpp); *obj for lib and Makefile; *_SU2_API for the Pyhon wrapper and the SWIG conf file. -new FSI folder in the SU2_PY folder + new LaunchFSIComputation.py file. -The compilation should run fine (./configure + options --> make --> make install) but only if the Tec IO support is disabled, otherwise there are some missing references that I have not fixed yet. -You have to compile manually the _SU2_API folder with the Makefile + change the SU2_DIR variable in the Makefile before this compilation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/217:187,wrap,wrapper,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/217,1,['wrap'],['wrapper']
Integrability,"Below is a new testcase, laminar flow around a cylinder. In the line figure I show the normal velocity on the axis y=0, with the solid red line the results from develop. The dashed line is with only the new Green-Gauss correction. It always leads to an improvement. These 2 results were obtained with an undisturbed grid. I then distort the grid a bit (as seen in the contour plot) and rerun the GG correction and I get the green line. Still an improvement, but a bit more bumps on the line.; I then correct the edge normals as done in CPhysicalGeometry. I then get the jagged line shown.; The correction using the residuals in BC_Sym_Plane seems to be ill-defined because the final converged solution depends on the initial solution [so I do not show tests with it here, I kept the original bc_sym_plane]. ; ![Screenshot_cylinder](https://github.com/su2code/SU2/assets/7050568/a16db8e1-78c5-482b-a91a-4b0d59b52f0d)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061:702,depend,depends,702,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194#issuecomment-1891845061,1,['depend'],['depends']
Integrability,Better error message for number of boundary condition mismatch,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/15:13,message,message,13,https://su2code.github.io,https://github.com/su2code/SU2/issues/15,1,['message'],['message']
Integrability,Blocking download of dependencies,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086:21,depend,dependencies,21,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086,1,['depend'],['dependencies']
Integrability,Both Gupta-Yos and WBE are now capable of running with ionization for the viscous simulations using both explicit and implicit time integration. Initial testing at Mach 10 and Mach 15 by @WallyMaier show promising results for GY.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1399671477:132,integrat,integration,132,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1399671477,1,['integrat'],['integration']
Integrability,"Branch: `master` or `develop` (in this exampe); `swig`: either 3.0.12 or 4.0.0 (more warnings, master branch, in this example); `mpicxx`, a wrapper to `g++` (Ubuntu 8.1.0-9ubuntu1) 8.1.0; `mpi4py`: either 2.0.0 or 3.0.1a0 (master branch). Steps to reproduce (compile SU2 in `$SU2_HOME` first):. `cd $SU2_HOME/SU2_PY/pySU2`. `swig -Wall -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python pySU2.i`. `../../Common/include/mpi_structure.hpp:417: Warning 202: Could not evaluate expression 'defined(__GNUC__) || (defined(__ICC) && (__ICC >= 600))'`; `../../Common/include/mpi_structure.hpp:417: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Could not evaluate expression 'defined(__STDC_VERSION__) && (__STDC_VERSION__ >= 199901)'`; `../../Common/include/mpi_structure.hpp:423: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Could not evaluate expression 'defined(__cplusplus) && (__cplusplus >= 201103)'`; `../../Common/include/mpi_structure.hpp:425: Warning 202: Error: 'Can't mix strings and integers in expression'`; `../../Common/include/mpi_structure.hpp:317: Warning 325: Nested struct not currently supported (Status ignored)`. `mpicxx -DHAVE_HDF5 -I/usr/include/hdf5/openmpi -DHAVE_SZIP -I/usr/include -DHAVE_ZLIB -I/usr/include -DHAVE_MPI -DHAVE_MUTATIONPP -I/usr/include/mutation++ -DHAVE_JSONCPP -I/usr/include/jsoncpp -I/usr/include/python2.7 -D_FORTIFY_SOURCE=2 -fPIC -O3 -I../../externals/metis/include -I../../externals/parmetis/include -I../../externals/tecio/include -I../../externals/cgns -I../../externals/cgns/adf -I../../Common/include -I../../SU2_CFD/include -I/usr/include/python2.7 -I/usr/include/x86_64-linux-gnu/python2.7 -c SU2_APIPYTHON_wrap.cxx -o SU2_APIPYTHON_wrap.o # $CXX $pySU2_CC_FLAGS $PY_INCLUDE -c $SWIG_WRAP_REAL.cxx -o $SWIG_WRAP_REAL.o`.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551:140,wrap,wrapper,140,https://su2code.github.io,https://github.com/su2code/SU2/issues/551,1,['wrap'],['wrapper']
Integrability,"Btw, once you think a PR is ready for another review round, leave a message or remove [WIP] from the title.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762#issuecomment-1264348405:68,message,message,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762#issuecomment-1264348405,1,['message'],['message']
Integrability,Bug in config.py prevents asserts from providing correct error message,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:63,message,message,63,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,1,['message'],['message']
Integrability,Build error on 'develop' branch with Python wrapper enabled,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1873:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1873,1,['wrap'],['wrapper']
Integrability,"Bumps [actions/cache](https://github.com/actions/cache) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <ul>; <li>; <p>This change adds a minimum runner version(node12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:846,depend,dependencies,846,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependencies']
Integrability,"Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4 to 5.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/setup-python/releases"">actions/setup-python's releases</a>.</em></p>; <blockquote>; <h2>v5.0.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release, we update node version runtime from node16 to node20 (<a href=""https://redirect.github.com/actions/setup-python/pull/772"">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0"">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>; <h2>v4.8.0</h2>; <h2>What's Changed</h2>; <p>In scope of this release we added support for GraalPy (<a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>; <pre lang=""yaml""><code>steps:; - uses: actions/checkout@v4; - uses: actions/setup-python@v4 ; with:; python-version: 'graalpy-22.3' ; - run: python my_script.py; </code></pre>; <p>Besides, the release contains such changes as:</p>; <ul>; <li>Trim python version when reading from file by <a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li>Use non-deprecated versions in examples by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; <li>Change deprecation comment to past tense by <a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/723"">actions/setup-python#723</a></li>; <li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=""https://github.com/dependabot"">",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:512,depend,dependencies,512,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['depend'],['dependencies']
Integrability,"Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 1 to 3.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-artifact/releases"">actions/upload-artifact's releases</a>.</em></p>; <blockquote>; <h2>v3.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update default runtime to node16 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/293"">#293</a>)</li>; <li>Update package-lock.json file version to 2 (<a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/302"">#302</a>)</li>; </ul>; <h3>Breaking Changes</h3>; <p>With the update to Node 16, all scripts will now be run with Node 16 rather than Node 12.</p>; <h2>v2.3.1</h2>; <p>Fix for empty fails on Windows failing on upload <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/281"">#281</a></p>; <h2>v2.3.0 Upload Artifact</h2>; <ul>; <li>Optimizations for faster uploads of larger files that are already compressed</li>; <li>Significantly improved logging when there are chunked uploads</li>; <li>Clarifications in logs around the upload size and prohibited characters that aren't allowed in the artifact name or any uploaded files</li>; <li>Various other small bugfixes &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:400,depend,dependabot,400,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,3,['depend'],['dependabot']
Integrability,"Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-relea",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:869,depend,dependabot,869,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,2,['depend'],['dependabot']
Integrability,"By the way, there's also this cool tool called vera++ that allows you to check the style of the entire codebase. This could be integrated with Travis so make sure PRs are consistent with the coding style guide.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426#issuecomment-323580700:127,integrat,integrated,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/426#issuecomment-323580700,2,['integrat'],['integrated']
Integrability,"CGNS file older than 4.0 release have a high ram memory usage. ## Proposed Changes. Add a small message to help users understand that SU2 is eating their RAM with old CGNS files.; ; ## Related Work. See: #1378 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1479:96,message,message,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/1479,1,['message'],['message']
Integrability,"CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My contribution is commented and consistent with SU2 style.; * I have added a test case that demonstrates my contribution, if necessary. ________________________________; You can view, comment on, or merge this pull request online at:. https://github.com/su2code/SU2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:3221,wrap,wrapper,3221,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['wrap'],['wrapper']
Integrability,Can we set Velocity_Ref to 1.0 and Alpha and Beta to 0.0 in case ModVel_Freestream is zero in SetNondinemsionalisation routine? There might some cases of pure rotation with zero free stream velocity which makes many variables in Pressure_Forces/Momentum_Forces/Friction_Forces undefined because Velocity_Ref goes to zero.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/472#issuecomment-346165153:119,rout,routine,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/472#issuecomment-346165153,1,['rout'],['routine']
Integrability,"Can you compile SU2 with debug flags (when using meson, specify ""--buildtype=debug"") and run without using the python wrapper? Does the error change?. Other quick questions, which I may have missed:. 1) How large is your case? What is the mesh size? ; 2) What are the specs of the machine(s) you're running on? How much RAM on each node, etc?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624226325:118,wrap,wrapper,118,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624226325,1,['wrap'],['wrapper']
Integrability,Can you guys wrap this up and update the required restart files?; I want to make the fixes to the SST model we want for v8.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014#issuecomment-1551772183:13,wrap,wrap,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014#issuecomment-1551772183,1,['wrap'],['wrap']
Integrability,"Certainly sounds like an important data point, as our comms are non-blocking too.; I'm not familiar with Open FOAM to go peek under the hood, but from this page (https://www.openfoam.com/releases/openfoam-v1712/parallel.php) it sounds like it uses a multilevel domain decomposition, decompose by nodes, then by processors, and then by cores (maybe). Which would reduce the number of comms going in/out of each node (which is what the hybrid solver hopes to achieve). I remember seeing output messages from CFX indicative of similar strategies. We don't have as many people working on performance as the organizations behind those codes, but we will get there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593638807:492,message,messages,492,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593638807,1,['message'],['messages']
Integrability,Change the wording in the error message if CGNS file doesn't exist in the current directory to make it more clear.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/62:32,message,message,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/62,2,['message'],['message']
Integrability,"Classes associated with spatial discretization are all instantiated once during initialization [see: Numerics_Preprocessing in definition_structure.cpp] whereas classes associated with time integration are instantiated and deleted over and over in solver_container[a][b][c]->ImplicitEuler_Iteration(). Similarly, each time a preconditioner is invoked, a new class is instantiated. I think the code will be easier to read and understand if space and time are treated similarly. The CSysSolve class can also be instantiated for each solver during Numerics_Preprocessing() using the new keyword. A caveat of this change is that it might be necessary to assure that the matrix/vector data in the CSysSolve class is cleared prior to each iteration. This is the cost of not creating and deleting the data structure at each step.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/82:190,integrat,integration,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/82,1,['integrat'],['integration']
Integrability,"Cleanup python wrapper, replace legacy python FSI",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1197:15,wrap,wrapper,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1197,1,['wrap'],['wrapper']
Integrability,"Collection of improvements in the upwind with limiter methods. - Elimination of the option GetViscous_Limiter_Flow and GetViscous_Limiter_Turb and related subroutines. It is not useful, and it doesn’t make too much sense to me.; - Renaming VAN_ALBADA to VAN_ALBADA_EDGE to distinguish between multidimensional stencils and edge based stencils.; - Adding VENKATAKRISHNAN_WANG limiter in which the Epsilon is computed using flow solution. It is very difficulty to be successful with the original version of the Venkat’s limiter... the calibration is too case dependent.; - Adding NO_LIMITER as a new option.; - Adding AD stuff to the BARTH_JESPERSEN... same code that in VENKATAKRISHNAN; - Updated screen output. Best,; Vivaan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/438:557,depend,dependent,557,https://su2code.github.io,https://github.com/su2code/SU2/pull/438,2,['depend'],['dependent']
Integrability,"Compile ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:15,Depend,Dependency,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['Depend'],['Dependency']
Integrability,Composition-dependent density model for variable density incompressible flow,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:12,depend,dependent,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,1,['depend'],['dependent']
Integrability,Composition-dependent heat capacities and mass diffusivity models for incompresible flows,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1762:12,depend,dependent,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1762,1,['depend'],['dependent']
Integrability,Composition-dependent viscosity and thermal conductivity models for incompresible flows,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1690:12,depend,dependent,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/1690,1,['depend'],['dependent']
Integrability,"Concerning the Python wrapper, everything is currently hardcoded for python2.7 which was my Python environment when I originally introduced the wrapper. PR #424 is fixing this. In the meantime, the workaround proposed by @talbring should work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-333103775:22,wrap,wrapper,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-333103775,2,['wrap'],['wrapper']
Integrability,Consistent calculation of dissipation terms for the Roe scheme for both explicit and implicit time integration. The previous explicit implementation was unstable with the high-order DG solver.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/299:99,integrat,integration,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/299,1,['integrat'],['integration']
Integrability,Consistent python wrapper function names,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1978:18,wrap,wrapper,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1978,1,['wrap'],['wrapper']
Integrability,"Contact the team that supports the cluster, they are usually much more knowledgeable about that type of problem.; 90% of the times I had similar problems was because I was not using the programming environment properly.; One common issue is that clusters that are properly setup use compiler wrappers, which you should use instead of trying to use gcc directly. We have absolutely no way no replicate this issue, hence I'm closing it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1278#issuecomment-831976182:292,wrap,wrappers,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278#issuecomment-831976182,1,['wrap'],['wrappers']
Integrability,Correct generator dependence for hdf5.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1515:18,depend,dependence,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1515,1,['depend'],['dependence']
Integrability,"Currently in the top-level main() routine, there are a number of multiple-indexed data structures, such as:. ```; solver_container[iZone][iMesh][iEqn]->DoSomething();; numerics_container[iZone][iMesh][iEqn][iTerm]->DoSomethingElse();; ```. Instead of this, I suggest using classes to encapsulate each level of indexing. At the top level, calling a routine from CNumerics could look like:. ```; zone_container[iZone]->integration_container[iEqn]->solver_container[iMesh]->numerics_container[iTerm]->DoSomethingElse();; ```. This looks much more complicated from the top level, but we rarely call routines from CNumerics at the top level. We call them from inside the CSolver classes. Indeed, it makes no sense for there to be a CNumerics instance that is not associated with a specific instance of CSolver. So, currently we have routines such as:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container, CNumerics *numerics,; CConfig *config, unsigned short iMesh) {; ...; numerics->ComputeResidual();; ...; }; ```. Under the proposed scheme, we can remove the CNumerics input to this routine, as the numerics_container array is itself a member of the CSolver, so the same code becomes:. ```; void CEulerSolver::Upwind_Residual(CGeometry *geometry, CSolver **solver_container,; CConfig *config, unsigned short iMesh) {; ...; numerics_container[iUpwind]->ComputeResidual();; ...; }; ```. Currently, the instances of CVariable are already encapsulated in this way inside of CSolver. The proposed reorganization demotes numerics_container from the top-level array to a member of CSolver. Similarly, solver_container itself is encapsulated in CIntegration. Organizing the data structures in this way makes more clear the hierarchy of classes as they are used.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/83:34,rout,routine,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/83,5,['rout'],"['routine', 'routines']"
Integrability,"Currently we transfer forces from the fluid side to the structural side, this is fine for matching meshes and for non-matching (interpolated) if the conservative approach is used (i.e. transpose the displacement interpolation matrix to transfer the loads). For non-matching and the consistent approach (i.e. use the same interpolation scheme both ways) this creates ""extra force"", to avoid that, stress needs to be transferred instead of force and integrated on the structural side.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/596:448,integrat,integrated,448,https://su2code.github.io,https://github.com/su2code/SU2/issues/596,1,['integrat'],['integrated']
Integrability,Custom Python wrapper marker BC values appropriately nondimensionalized,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2078:14,wrap,wrapper,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2078,1,['wrap'],['wrapper']
Integrability,Custom inlets via python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2296:25,wrap,wrapper,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/2296,1,['wrap'],['wrapper']
Integrability,"Dear @cvencro,; Great upgrade of the interface treatment! ; I was wondering what happens in case the structural solver is not the internal one, but rather an external solver coupled via Python. I think, in that case, the BC_velocity cannot be applied as there is information missing (we usually only transfer the displacement via python).; The solution to this, with minimum modifications, would be to slightly change the result of GetFSI_simulation. Indeed, at the moment, it checks if there is a marker_fluid_load or if there are both the structural solver and the fluid solver.; I was thinking that we may leave only the second check (i.e. if there are both the structural solver and the fluid solver), so that we avoid any problem. Do you think this is possible? Why did we actually need to check also the marker_fluid_load?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778303887:37,interface,interface,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778303887,1,['interface'],['interface']
Integrability,"Dear @khanhija ; thank you very much for reporting this issue. The h-s call of the Peng-Robinson EoS is iterative. It may be that for these initial conditions the routine is not able to find a root. ; So I have a couple of solutions:. -You may try to use the branch feature_polytropic gas where my colleague @luciaazzini implemented a more robust HS call for PR. -or you may run everything Dimensional (REF_DIMENSIONALIZATION= DIMENSIONAL), converge first the solution with IDEAL_GAS or VW_GAS and then restart it with PR_GAS. regards. sv",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/398#issuecomment-306440401:163,rout,routine,163,https://su2code.github.io,https://github.com/su2code/SU2/issues/398#issuecomment-306440401,1,['rout'],['routine']
Integrability,"Dear @oleburghardt, . Unfortunately, your initial reply lacks of any constructive contribution. . SU2 depends on the feedback of you all. We should not discourage anybody to change/improve, show interest, ask for clarification, etc. The tone of your initial replay was unjustified and not polite.; From now on, your profile as a member of the developer team (collaborator) will be not longer active. Peace,; Francisco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313775430:102,depend,depends,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313775430,2,['depend'],['depends']
Integrability,"Dear @rsanfer,. I agree with you that the outer loop should be the loop over the number of physical disciplines involved in the problem and not the zones. Whether the individual disciplines contain one or multiple zones is irrelevant at this level, in my opinion. The loop over the multiple zones of a single discipline should take place at a much lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The ge",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:740,integrat,integration,740,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,2,['integrat'],['integration']
Integrability,"Dear @vdweide,. I clearly see your point. However, this can be quite a big structural change of the code and I think we should plan very well how to address this issue. The reason of having a driver class was to facilitate the extension of SU2 to multi-physics applications both for analysis (direct solver) and design (adjoint). Thanks to the high level of abstraction of the CInterpolator, CTransfer and the CIteration classes, it was kind of natural to treat fluid-fluid problems similarly to multi-physics problem (i.e. fluid-structure and fluid-heat). As a matter of fact, the multi-stage turbomachinery approach , its adjoint counterpart, the sliding interface they all rely on this driver structure in which we loop among all the zones. If i understood correctly, you suggest to move only the fluid-fluid multi-zone loop at lower level in order to integrate in time only after having coupled all the fluid zones. Right? If so, we need to design the code in such a way that the fluid zones loop is separated from the multi-physics one.; To solve this issue, I think, we just need to find a smart way to differentiate fluid-zones from the rest. Perhaps we can do that by instantiating one Iteration per physical problem instead than per zone. So that inside the iteration we can couple all the fluid zones, and in the driver we can couple the different physics (Iteration). Indeed, this is just a preliminary idea. In general I think we should aim to a structure that can flexibly accommodate multi-physics problems with multi-zones for different physics. A good example is solving fluid-structure in multi-stage turbomachinery, in which we have multiple fluid-zones and multiple structure-zones. ; ; I would like to hear on this matter also from @fpalacios @talbring , @economon , @rsanfer @oleburghardt ,@LaSerpe and @arubino. Thanks @vdweide againg for raising this issue. cheers. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328274125:657,interface,interface,657,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328274125,4,"['integrat', 'interface']","['integrate', 'interface']"
Integrability,"Dear Giuilo,. I am able to simulate the case with fresh download from develop branch and got post processed data for Tecplot without any error. Thanks a lot for your assistance in this regard. But surprisingly I also faced problem with SA turbulence model, whereas SST is going smooth. SA turbulence model is working fine with develop branch code, which was downloaded may be 2 months ago. I would like to request you to please explain the option MACH_MOTION in detail in the context of sliding interface capability. Thank you so much Giulio once again!. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318352388:495,interface,interface,495,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318352388,1,['interface'],['interface']
Integrability,"Dear Jyothi,. This error message indicates that you have specified the AOA option (angle of attack) option twice in your cfg file. Check if this is indeed the case and remove one. Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417#issuecomment-318047362:25,message,message,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/417#issuecomment-318047362,1,['message'],['message']
Integrability,"Dear Reza,. like the error message already implies, currently the python wrapper does not support the AD features. It is on our list, but I cannot give an estimate when it will be available. Tim. Am 04.06.2018 13:46 schrieb najianaslreza <notifications@github.com>:. Dear all,. I am trying to use the python wrapper with AD tool support. For example I want to use CDiscAdjFluidDriver(options.filename, 1, 3, comm) but it fail and returns there is no AD support for python wrapper. Do you know how I can solve it ?!. Cheers,. reza. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/539>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5NEuzJBRfwFu5CqxXFdbh_6GY0Iyks5t5R3rgaJpZM4UY7-o>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/539#issuecomment-394713953:27,message,message,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/539#issuecomment-394713953,4,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"Dear Team SU2,. I would like to inform you that, while post processing the results of a 3-zone sliding interface 3D simulation with Tecplot, it is noticed that output file of one of the zone (The outermost zone, within which remaining two zones are present) is showing 80% of data as ~x.xxxe-317 and 10% as nan. Whereas the run went very very smoothly with very good fall in residue in all the blocks without any non-physical points. Hence I am suspecting that there is some problem in post processing (SU2_SOL) it self. Please let me know how to solve this issue. Regards,; Jyothi Kumar Puttam.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417:103,interface,interface,103,https://su2code.github.io,https://github.com/su2code/SU2/issues/417,1,['interface'],['interface']
Integrability,"Dear Team SU2,. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. Thank you very much. Sincerely,; Yu-Kai Weng. [restart_flow_nb_00000.zip](https://github.com/su2code/SU2/files/1493197/restart_flow_nb_00000.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/474:523,message,message,523,https://su2code.github.io,https://github.com/su2code/SU2/issues/474,1,['message'],['message']
Integrability,"Dear Team SU2:. Apologize for the re-post this issue since I accidentally closed the last one. I've downloaded and compiled the latest developing version of SU2 with DDES feature.; However, since I need to read the solution file in the non-binary format for further process. I both set NO at WRT_BINARY_RESTART and READ_BINARY_RESTART option.; However, when I open the non-binary restart file, say by excel, some solution values are merged into the wrong column or just missing. And now these mislocated data make the non-binary solution file cannot be used for restart simulation ( a Diverged warning message will pop up ).; Also based on the observation, these kinds of data writing error appeared in every 9 or 10 point id in general, for example, the first error shows in pointID # 9, then # 18...so on. The example error file is attached. Could you please advise me if there is any quick fix for this issue. Or is there any converter inside the SU2 that I can run the simulation in binary first then convert them later?. I put some sample original non-binary file which has mislocated or missing data, and cannot be read as restart file in google drive [here](https://drive.google.com/drive/u/1/folders/1kmAqTV-HyHH6y2o1zxPVLEJ5pU2LRebl) and another bad written non-binary file is attached.; [badfile.zip](https://github.com/su2code/SU2/files/1504155/badfile.zip). Sincerely,; Yu-Kai Weng",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477:602,message,message,602,https://su2code.github.io,https://github.com/su2code/SU2/issues/477,1,['message'],['message']
Integrability,"Dear WenyinWei,; presently SU2 is interfaced with the INRIA AMG library for mesh adaptation. You can find all the necessary details and examples at https://pyamg.saclay.inria.fr. There are efforts going on in Stanford to connect it to goal-oriented adaptation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743#issuecomment-514651250:34,interface,interfaced,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/743#issuecomment-514651250,1,['interface'],['interfaced']
Integrability,"Dear all,. I am trying to use the python wrapper with AD tool support. For example I want to use CDiscAdjFluidDriver(options.filename, 1, 3, comm) but it fail and returns there is no AD support for python wrapper. . Do you know how I can solve it ?!. @talbring @tobadavid . Cheers,. reza",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/539:41,wrap,wrapper,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/539,2,['wrap'],['wrapper']
Integrability,"Dear all,; Thank you very much for your comments!; I agree with you, transferring the velocity is definitely the best solution in the long run. However, as Pedro mentioned, there is also the case when a certain imposed deformation is set, without solving any structural system. This is the case of a forced motion. In the python script configuration files it is required to set the marker_fluid_load as this is the only way to make SU2 compute the tractions at that marker. Maybe, a solution to both needs, can be to make SU2 compute the tractions anyway for the wall boundary. . In this way, if you have the velocity at the interface, you can define this interface as also marker_fluid_load, the FSI bool will be true and the new BC_velocity will be used. If you do not have the velocity at the interface, you will avoid marker_fluid_load and SU2 will not fail trying to use bc_velocity. This will also give me more time to develop, from the python side, the required modifications to use the new interface. Please let me know your comments",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840:625,interface,interface,625,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778585840,4,['interface'],['interface']
Integrability,"Dear developers,; I am trying to install SU2 v6.2.0 on Ubuntu 16.04 following the [instruction](https://su2code.github.io/docs/Python-Wrapper-Build/) you provided. But it failed with errors. I have installed Swig and mpi4py as you suggested. The command I used:; ```; ./configure --prefix=/home/lab/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx --enable-PY_WRAPPER; ```; The SU2_RUN and SU2_HOME environment variables displayed at the conclusion of configure. When I run `make -j 24`, the error showed up:; ```; make[2]: Entering directory '/home/lab/SU2/SU2_PY/pySU2'; swig -DHAVE_MPI -Wall -I/home/lab/anaconda3/include/python3.7m -I/home/lab/anaconda3/include/python3.7m -I/home/lab/.local/lib/python2.7/site-packages/mpi4py/include -I/home/lab/anaconda3/lib/python3.7/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /home/lab/SU2/SU2_PY/pySU2/pySU2.i ; /home/lab/SU2/SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; Makefile:532: recipe for target 'SU2_APIPYTHON_wrap.cxx' failed; make[2]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[2]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:525: recipe for target 'all' failed; make[1]: *** [all] Error 2; make[1]: Leaving directory '/home/lab/SU2/SU2_PY/pySU2'; Makefile:441: recipe for target 'all-recursive' failed; make: *** [all-recursive] Error 1; ```. Best.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722:134,Wrap,Wrapper-Build,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/722,1,['Wrap'],['Wrapper-Build']
Integrability,"Dear reader, . Let me give a little bit background first:. When a massflow is prescribed for periodic flow (`KIND_STREAMWISE_PERIODIC= MASSFLOW`), then a pressure drop is iterated(/adapted in each iteration) to fulfill that massflow requirement. In the Volume Source term only this pressure drop is used. The initial value at solver start is the value given in `STREAMWISE_PERIODIC_PRESSURE_DROP= ??` and for restarted/adjoint simulations the `STREAMWISE_PERIODIC_PRESSURE_DROP` from `flow.meta` is taken. Now this PR:. Until now, the update of the pressure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Mass",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:705,rout,routine,705,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['rout'],['routine']
Integrability,"Dear sirs, I just modified .travis.yml back to; su2code-dev@lists.stanford.edu and develop respectively:. Jairos-Mac-mini:SU2 jaspe$ git status. On branch feature_force_read_target_on_AD. Changes not staged for commit:. (use ""git add <file>..."" to update what will be committed). (use ""git checkout -- <file>..."" to discard changes in working directory). modified: .travis.yml. no changes added to commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so w",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:814,message,message,814,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['message'],['message']
Integrability,"Dejavu from modified and unmodified...; We want to default to noft2, a noft2 option is redundant. On Mon, 23 May 2022, 14:35 Nijso, ***@***.***> wrote:. > ***@***.**** commented on this pull request.; > ------------------------------; >; > In Common/include/option_structure.hpp; > <https://github.com/su2code/SU2/pull/1646#discussion_r879465502>:; >; > > @@ -1056,18 +1045,98 @@ inline SST_ParsedOptions ParseSSTOptions(const SST_OPTIONS *SST_Options, unsigne; > return SSTParsedOptions;; > }; >; > +/*!; > + * \brief SA Options; > + */; > +enum class SA_OPTIONS {; > + NONE, /*!< \brief No option / default. */; > + NEG, /*!< \brief Negative SA. */; > + EDW, /*!< \brief Edwards version. */; > + FT2, /*!< \brief Use FT2 term. */; >; > I think it's better to use the keyword NOFT2 instead of FT2 to be more; > compatible with the NASA naming.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1646#pullrequestreview-981782386>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXNZS5KCB7L45MPF4KULVLOCT3ANCNFSM5WSMMMUA>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1646#issuecomment-1274193498:1160,Message,Message,1160,https://su2code.github.io,https://github.com/su2code/SU2/pull/1646#issuecomment-1274193498,1,['Message'],['Message']
Integrability,"Delete dead-code for ""nearfield"" and ""interface"" boundaries",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351:38,interface,interface,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351,1,['interface'],['interface']
Integrability,Dependabot updates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2234:0,Depend,Dependabot,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2234,1,['Depend'],['Dependabot']
Integrability,"Description:; With our current mesh, on an 8 node, 32 intel cores per node system, our average CPU utilization per node ranges between 31% and 86%. The interconnect fabric is far from fully utilized in terms of throughput. Memory utilization is not nearly that inconsistent (differences of 2-3x). On a different system, 4 node 128 AMD cores per node, the average CPU utilization per node ranges between 54% and 95%. The same mesh is used in both instances. To Reproduce:; Run a mesh on a multi-node system with different core counts and I expect that you will see varied CPU utilization per node depending on how ParMETIS decided to partition the mesh. System Software Environment:; OS: CentOS7; GCC 7.3.1; MPI: openMPI 3.1.2; SU2 7.0.1 (with modifications so that it can write files and to correct the fixed CL issue). Do you have recommendations on how to improve the decomposition?; Or, if parmetis does not give sufficient options to improve the decomposition result, perhaps change this to a feature request to add ptscotch and/or zoltan support?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1307:596,depend,depending,596,https://su2code.github.io,https://github.com/su2code/SU2/issues/1307,1,['depend'],['depending']
Integrability,"Develop branch, fsi_computation.py error using --parallel (with parallel building of the wrapper)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531:89,wrap,wrapper,89,https://su2code.github.io,https://github.com/su2code/SU2/issues/531,1,['wrap'],['wrapper']
Integrability,"Did you install by meson/ninja or by preconfigure/make/make install?; Meson looks for a mpi in your system and should give you a message like:; ""Run-time dependency MPI for c found: YES 2.1.1; Run-time dependency MPI for cpp found: YES 2.1.1; ""; among other messages. In preconfigure you should tell the installation to use MPI:; -enable-mpi --with-cc=mpicc --with-cxx=mpicxx as parameters. Cheers,; Eran. On Wed, Apr 15, 2020 at 5:50 PM mottiadar <notifications@github.com> wrote:. > Hi Eran,; > Thank you.; > I am not sure I understand your question.; > I have downloaded the parallel version. What do you mean exactly by; > ""installing with mpi""?; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938#issuecomment-614085923>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3GY7C7HFLJTNTZATWC3RMXCTRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938#issuecomment-614093500:129,message,message,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614093500,4,"['depend', 'message']","['dependency', 'message', 'messages']"
Integrability,Disabling the new parallel IO routines for the release.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:30,rout,routines,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['rout'],['routines']
Integrability,Divergence when using fluid interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:28,interface,interface,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['interface'],['interface']
Integrability,"Do you have pkg-config installed? It uses pkg-config to look for the dependencies it required. You can check if you have pkg-config with `which pkg-config`. If you don't have it, you can install on your ubuntu through. `sudo apt-get install pkg-config`. If it still doesn't work, or if you already have pkg-config installed, the python3.pc needs to be found by the pkg-config. Usually done by setting a `PKG_CONFIG_PATH` environment variable that points to the relevant python3.pc file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903#issuecomment-595955473:69,depend,dependencies,69,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595955473,1,['depend'],['dependencies']
Integrability,Doxygen module for python wrapper functions and fixed memory errors,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1922:26,wrap,wrapper,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/1922,1,['wrap'],['wrapper']
Integrability,"Dr. Albring,; I have one more issue.; The gamma_BC is a variable in my model that is computed in every cell, and its value is in between 0 and 1 (so that it controls production term on/off in that cell). I would like to write gamma_BC variable to a tecplot output file in order to see the laminar and turbulent regions. However, as a beginner level C++ user, I really couldn't figure out how the output routines work. Would you please help me on this? Is it a complicated work?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257569540:403,rout,routines,403,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257569540,1,['rout'],['routines']
Integrability,"ER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability…but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-327374728>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxOEhKLW_U0n9PDoz5m6cJoCScV3_ks5sfiZdgaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:1711,integrat,integration,1711,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,2,['integrat'],['integration']
Integrability,"ETSc was used for the Krylov solvers and more. While indeed it worked well and in parallel mode, each new implementation was a nightmare. LAPACK/BLAS package, on the other hand, provides a much easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. (...). >@vdweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approxima",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2292,interface,interface,2292,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['interface'],['interface']
Integrability,"Edwin,. I think it is a good idea to be able to have some level of control over the application of the wall functions on a marker-by-marker basis: as you say, it would be fairly common to have a wing marker where integration to the wall makes sense and a fuselage marker where wall functions (or even an inviscid BC) is the right thing to do. So let’s indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability…but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model ty",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:213,integrat,integration,213,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,6,"['integrat', 'message']","['integration', 'message']"
Integrability,Enable user to change Mach number and Reynolds Number from Python Interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2185:66,Interface,Interface,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/2185,1,['Interface'],['Interface']
Integrability,Error message for Minf = 0 has been included in #753,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761#issuecomment-540509179:6,message,message,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/761#issuecomment-540509179,1,['message'],['message']
Integrability,Error message for missing required inputs in .cfg file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842:6,message,message,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/842,1,['message'],['message']
Integrability,Error message is ony printed for Rank == 0.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564:6,message,message,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/564,1,['message'],['message']
Integrability,"Error messages are only printed for Rank == 0, see the function CBaseMPIWrapper::Error. inline void CBaseMPIWrapper::Error(std::string ErrorMsg, std::string FunctionName){; if (Rank == 0){; std::cout << std::endl << std::endl;; std::cout << ""Error in \"""" << FunctionName << ""\"": "" << std::endl;; std::cout << ""-------------------------------------------------------------------------"" << std::endl;; std::cout << ErrorMsg << std::endl;; std::cout << ""------------------------------ Error Exit -------------------------------"" << std::endl;; std::cout << std::endl << std::endl;; }; Abort(currentComm, 0);; }. This makes sense when the error handler is called collectively, as this avoids a messy output. However, there are quite a few situations where the error handler is not called collectively and therefore the error message is not printed when Rank != 0. Would it therefore be possible to add an additional argument (possibly default argument) to the error handler to inform whether or the call is collective or not?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564:6,message,messages,6,https://su2code.github.io,https://github.com/su2code/SU2/issues/564,2,['message'],"['message', 'messages']"
Integrability,"Everything looks good here with the ADT search. Merging this into the develop branch. Two notes:; 1. I switched MPI_Allgatherv() to SU2_MPI:Allgather() temporarily until we can properly treat the wrapper. This will be easy to change. The code is slightly less pretty, but same results.; 2. Scaling results look very good out to 96 cores and can be ~100x faster than the brute force search. I'll run on O(1000) cores as soon as I have access again to make sure there aren't any hidden problems at scale.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288#issuecomment-230977816:196,wrap,wrapper,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/288#issuecomment-230977816,1,['wrap'],['wrapper']
Integrability,"Everything seems to be fine. The test cases run smoothly. I have been following the conversation with Rocco, I will now contact him to understand how to avoid duplication and how to best integrate our works",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473:187,integrat,integrate,187,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-743747473,1,['integrat'],['integrate']
Integrability,Everything you can do with the python wrapper exists in c++,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2286#issuecomment-2122664830:38,wrap,wrapper,38,https://su2code.github.io,https://github.com/su2code/SU2/issues/2286#issuecomment-2122664830,1,['wrap'],['wrapper']
Integrability,Expose all history outputs via the python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1986:42,wrap,wrapper,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/1986,1,['wrap'],['wrapper']
Integrability,Expose mesh deformation (SU2_DEF) and AD gradient projection (SU2_DOT_AD) to the pysu2 Python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:94,wrap,wrapper,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['wrap'],['wrapper']
Integrability,Failed to install SU2 by Python Wrapper Build,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722:32,Wrap,Wrapper,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/722,1,['Wrap'],['Wrapper']
Integrability,Feature Python Wrapper - Test cases,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:15,Wrap,Wrapper,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,1,['Wrap'],['Wrapper']
Integrability,Feature Python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:15,wrap,wrapper,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,1,['wrap'],['wrapper']
Integrability,Feature error message,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574:14,message,message,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/574,1,['message'],['message']
Integrability,Feature py wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488:11,wrap,wrapper,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/488,1,['wrap'],['wrapper']
Integrability,Feature sliding interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389:16,interface,interface,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/389,1,['interface'],['interface']
Integrability,Feature turbo interfaces,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2349:14,interface,interfaces,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2349,1,['interface'],['interfaces']
Integrability,"Feature: Blade element momentum (BEM) method for variable load actuator disk modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:370,interface,interface,370,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,2,"['depend', 'interface']","['depends', 'interface']"
Integrability,"First of all, my apologies for the mistake in creating the pull request to the master. Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulations of multi-stage turbines and compressors. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/189:327,interface,interface,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/189,1,['interface'],['interface']
Integrability,"First of all, thanks @bmunguia for picking this up.. I ran out of time when we were wrapping up v7, so the approach to check for stalling residuals within the CFL adaption routine was half-baked at best. It can definitely be improved (I'm not happy that I left some magic numbers hard-coded in there!). The implementation that is there to check for stall was very loosely based on the type of check we use for computing the Cauchy criteria (accumulated residual changes over time), but we should consider different approaches altogether. Btw, the original CFL adaption routine used something close to Switched Evolution Relaxation, while the new strategy is Exponential Progression with Under-relaxation (see ""A Robust Adaptive Solution Strategy for High-Order Implicit CFD Solvers,"" AIAA 2011-3696 for a short description of both). As you also guessed, I had wanted to experiment with separate CFL numbers for flow and turbulence but also did not get to it. In the end, as @pcarruscag says, this is a very empirical task. It will be difficult to nail down a perfect configuration for all problems, but we might be able to come up with some best practices for choosing tunable parameters if folks have the time to run a lot of numerical experiments for a range of cases to see what works best.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720:84,wrap,wrapping,84,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-653182720,3,"['rout', 'wrap']","['routine', 'wrapping']"
Integrability,"Fix Commands for SOL_FSI, SOL and GEO in SU2_PY/SU2/run/interface.py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/579:56,interface,interface,56,https://su2code.github.io,https://github.com/su2code/SU2/pull/579,1,['interface'],['interface']
Integrability,Fix SU2 initialization when using the python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966:45,wrap,wrapper,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966,1,['wrap'],['wrapper']
Integrability,"Fix multi-physics simulations with ""many-to-many"" interfaces between markers and improve associated communications.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1061:50,interface,interfaces,50,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061,1,['interface'],['interfaces']
Integrability,Fix spelling errors and y+ warning message,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1753:35,message,message,35,https://su2code.github.io,https://github.com/su2code/SU2/pull/1753,1,['message'],['message']
Integrability,"Fixes #1588; cc @ArneVoss ; I have not fully tested the python wrapper forces, but they should be ok for dimensional simulations.; This is WIP until I add a regression test.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1595:63,wrap,wrapper,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/1595,1,['wrap'],['wrapper']
Integrability,"Folks,. This is indeed a very important capability for many different applications: from interpolation of solutions from coarser grids to finer grids, to querying an unsteady solution, to implementing numerical error estimates…and many others. It is important that the search / interpolation routines work when interpolating between grids where some points in the target grid may fall outside of the source grid and, therefore some notion of distance to the wall is needed. Fortunately, Edwin van der Weide had worked on an interpolation library that @sravya91 (who received her PhD yesterday at our graduation ceremony and is now working at NVIDIA) used in her work. Jayant Mukhopadhaya and Brian Munguia have also been testing/improving the library. Perhaps everyone can comment on current status and we can create a small task force to see what still needs to be done and who can do what?. Best,. Juan. On Jun 17, 2019, at 10:36 AM, Clark Pederson <notifications@github.com<mailto:notifications@github.com>> wrote:. I'm going to jump on this too. Is anyone working on solution interpolation (from one mesh to another)? @sravya91<https://github.com/sravya91>, are you still working on this? Did PR #672<https://github.com/su2code/SU2/pull/672> introduce any capabilities to address interpolation? This seems to be a common request from SU2 users: [1]<https://www.cfd-online.com/Forums/su2/213321-su2-solution-interpolation.html> [2]<https://www.cfd-online.com/Forums/su2/215920-use-coarse-grid-flow-solution-initial-solution-fine-grid.html>. I've used some pretty rough python scripts to do solution interpolation in the past, and it would be nice to have some SU2 C++ code that could perform the same task. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/466?email_source=notifications&email_token=AA5FFRGCPYI5KNVQZ7GB5F3P27DQZA5CNFSM4EB5RB6KYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-502783107:292,rout,routines,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-502783107,1,['rout'],['routines']
Integrability,"Following along here.. will you eventually move the parallel section in CSysSolve up to the full application level (in the main() maybe) when you move to the next steps? In the earlier work, we found that, as you have seen in the linear solver routines, spawning parallel sections kernel-wise carried a large overhead. We found that the best performance was given by spawning right at the start and carry the threads through the entire program, just like the MPI ranks. . My only other comments, which it sounds like you are addressing, are to make the threads as transparent as possible to developers (shouldn't need to touch them unless they want to, like the MPI), and to make the compilation painless (disable/enable). Have you connected it to meson somehow yet?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566642160:244,rout,routines,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566642160,1,['rout'],['routines']
Integrability,"Following your suggestion I've tried to prepend the compiler with `OMPI_MPICXX=g++-7` to force `mpicxx` using – in the present particular case – `g++-7 (Ubuntu 7.3.0-16ubuntu3) 7.3.0`. Unfortunately. there was no change in the output comparing to that of `gcc-8`. Moreover, neither `clang++ version 7.0.0 (trunk)` resolved the issue, though adding/playing with `-std=gnu++11`, `-std=gnu++14`, `-std=gnu++17`, and `-std=gnu++2a` standards gave more warnings as well as same errors. Anyway, I appreciated your hint at possible `gcc` incompatibilities. It appears the python wrapper has been broken already for some time – without, actually, anybody truly reporting it. It needs some love for sure, so, there is a call for it. Meanwhile if you could share your `_pysu2.so` somewhere it would be greatly appreciated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-405023863:572,wrap,wrapper,572,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-405023863,1,['wrap'],['wrapper']
Integrability,"For SU2_DOT_AD the mesh deformation is differentiated manually, this is easy to do because it is a linear operation and the stiffness matrix does not depend on the design variables. You can read more about this kind of manual differentiation (forward and reverse) here: https://people.maths.ox.ac.uk/gilesm/files/NA-08-01.pdf. 1. If there is a better way please get involved in the optimization overall discussion. 2. Your interpretation of the sensitivities is correct. For clarity the FD mode of SU2_DOT is for use with the continuous adjoint only, for which the sensitivities at the surface already include the projection. 3. Not entirely sure if I understood. I think the interpretation of the boundary displacement sensitivities depends on how you initialize the adjoints. Formally what you should get is the product of the Jacobian transpose with the vector of adjoints you initialize. Those surface sensitivities are different from the ones in the file because they include the volume projection, whereas the ones in the file do not (they are the sensitivity wrt the surface nodes, but not considering that moving surface nodes also moves interior nodes).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678:150,depend,depend,150,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-639520678,2,['depend'],"['depend', 'depends']"
Integrability,For a loosely coupled CHT analysis I need to apply the distributed wall temperature as isothermal wall temperature. Is there any possible way to do it? . I can divide the wall to some dicrete parts and apply average temperature of those nodes but I would prefer to identify each node with a certain temperature. I found a python wrapper which is shared before but do not really understand how to work with it. It could be really nice if you can help me. Thanks in advance.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1722:329,wrap,wrapper,329,https://su2code.github.io,https://github.com/su2code/SU2/issues/1722,1,['wrap'],['wrapper']
Integrability,"For any folks following this saga, one of the issues was thermal conductivity. I think I figured it out and it’s a weird one… In short: it was the thermal conductivities, but not for the reason we think. They are divided by a denom term that depends on a value a that indeed goes to nan if any free-stream concentrations are zero. However, the reason it doesn’t diverge immediately is if that denom term is less than eps, the thermal conductivity is set to zero, so thermal conductivity was always zero which is why it blew up after a few iters rather than the first one.; Fix: FS concentrations > 0, but also have to remove the if-statement that sets k_tr to zero. The denom term is order 1E-21 and always less than eps, so with that in the code it is always 0. Diffusion coefficient is now the only parameter giving wrong values, so need to check that next.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1887#issuecomment-1396544724:242,depend,depends,242,https://su2code.github.io,https://github.com/su2code/SU2/pull/1887#issuecomment-1396544724,1,['depend'],['depends']
Integrability,"For completeness, unsteady adjoints do not work for this type of case due to a dependence of the solution on old coordinates (to compute grid velocities) and old volumes (for the dual time derivative) which we do not handle correctly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2059#issuecomment-1607592600:79,depend,dependence,79,https://su2code.github.io,https://github.com/su2code/SU2/pull/2059#issuecomment-1607592600,1,['depend'],['dependence']
Integrability,"For people who came across this issue later, my previous issue was very similar. If you have multiple python environments installed on your machine (e.g. Python 2.7 and Python 3.6), then the build process for the python wrapper doesn't always select the one with mpi4py installed. In my case, I had to manually edit the Makefile in `SU2_PY/pySU2/Makefile` to point to the correct python installation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-506710295:220,wrap,wrapper,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-506710295,1,['wrap'],['wrapper']
Integrability,For the moment I tried to not use six to avoid to add a new library dependency but it could be another solution!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/246#issuecomment-209998153:68,depend,dependency,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/246#issuecomment-209998153,1,['depend'],['dependency']
Integrability,"For the sliding interface case `slinc_steady`, I suppose the difference is caused by interpolation, but have no idea why `cht_compressible` fails.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1977#issuecomment-1477026273:16,interface,interface,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1977#issuecomment-1477026273,1,['interface'],['interface']
Integrability,"For those who find this via google - resolution options: 1) see if any anyone has restored the functionality, or 2) use the python wrapper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-900263111:131,wrap,wrapper,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-900263111,1,['wrap'],['wrapper']
Integrability,"Forgot to mention this, but the goal with a new build system is then to get rid of the preconfigure script altogether. Meson offers what they call wraps to automatically build and include dependencies (https://mesonbuild.com/Wrap-dependency-system-manual.html)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-500450833:147,wrap,wraps,147,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-500450833,3,"['Wrap', 'depend', 'wrap']","['Wrap-dependency-system-manual', 'dependencies', 'wraps']"
Integrability,"From searches in the code of the develop branch, I suspect that the members ; unsigned short *Local_to_Global_Marker{nullptr}; /*!< \brief Local to Global marker. */; unsigned short *Global_to_Local_Marker{nullptr}; /*!< \brief Global to Local marker. */; of CPhysicalGeometry are not initialized anywhere in the code right now. Apart from this, from a comparison with `Global_to_Local_Point` I would infer that `G_to_L_Marker` should be of type `unordered_map<unsigned short, unsigned short>`, depending on the intended functionality of course.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110:495,depend,depending,495,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110,1,['depend'],['depending']
Integrability,"From what I see there is no easy way to resolve this. The problem is that the multiplication operator of the complex type in LLVM uses copysign which is a function that only accepts double and int... so that means it is not possible to instantiate complex with anything else than these types ... from my point of view it is not a very smart design decision. We should maybe enable the code section depending on the compiler. A possible solution would be to implement our own operators, which we would do then directly in codi.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260128156:398,depend,depending,398,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260128156,1,['depend'],['depending']
Integrability,"Good catch, same bug exists in the Momentum forces routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1074#issuecomment-697561032:51,rout,routine,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074#issuecomment-697561032,1,['rout'],['routine']
Integrability,"Good idea.. you can easily add the wall distance to the output in LoadLocalData_Flow() in output_structure.cpp. In the images, the half-cylinder (symmetry planes on top and bottom) has a solid zone inside with heat conduction. The interface there is a no-slip wall with the CHT_WALL_INTERFACE type. The downstream surface is also no-slip, but it is a typical ISOTHERMAL wall. Since the CHT_WALL_INTERFACE type was not considered earlier (only the trailing no-slip wall), I think that you will see a reduced wall distance near the cylinder, which will impact the turbulent solution. I expect some differences due to the change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-436307962:231,interface,interface,231,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-436307962,1,['interface'],['interface']
Integrability,"Good news,; @bigfooted @danielmayer @lkusch @EvertBunschoten : Commit ecb1154 fixed the restarts for feature_multicomp which is based on feature_flamelet and from a first thought it might work for table lookup as well. Please let me know if it does so. Otherwise The interaction of the table lookup with the Turb and Flow requires some additional calls to Pre/Post routines. @mheimgartner as discussed please merge feature_flamelet into multicomp, such that you have that fix as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-915433095:365,rout,routines,365,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-915433095,1,['rout'],['routines']
Integrability,"Great stuff, thanks for taking the first step to integrate quasi-Newton techniques to the adjoint fixed point iterations. I'm reviewing this the next couple of days. Just one question right away so that I'm on the right track. It seems that this implementation is based on equation 130 from Degroote's paper. Right? Though you're not using any QR decomposition for solving it? What's the approach then (assumingly in `computeNormalEquations`)?. And you're not using `std::deque` like I did for storing a window of some past residuals (i.e. V^k), looking forward to see what kind of solution you came up with.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1020#issuecomment-648112710:49,integrat,integrate,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/1020#issuecomment-648112710,1,['integrat'],['integrate']
Integrability,"Great! Thanks, Eduardo. Let's work now together in this branch to make sure that everything is integrated nicely. Just let me know what help you may need.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333#issuecomment-264951536:95,integrat,integrated,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/333#issuecomment-264951536,1,['integrat'],['integrated']
Integrability,"Great!; Thank you very much.; With kind regards,. Jairo. On Thu, Nov 1, 2018 at 5:10 PM Thomas D. Economon <notifications@github.com>; wrote:. > No problem at all. I think the issue was that others had merged the; > changes into develop here from the web interface and those changes needed; > to be pulled down into your local copy before you could push the changes to; > .travis.yml up.; >; > I have just made the change, and I see the tests are now running! We'll; > get back with a review soon.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/600#issuecomment-435170261>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/Ac180sQoMHXa2p4ICO_ef6f3QXOmhII_ks5uq1U_gaJpZM4X34F2>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-435250485:255,interface,interface,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-435250485,1,['interface'],['interface']
Integrability,"Harichand, Giulio, Edwin, and all,. I would definitely prefer to use either (a) an open source library that is actively maintained, or (b) our own tree-based search. I do think that this is important for the various reasons that have been outlined/discussed already. The method Harichand describes is pretty much what we did in the ASC program. Edwin can provide more details (and we had an AIAA paper around 2005 on this topic). My suggestion: if Edwin has a tree search in C++ already and someone is willing to spend the time to integrated it, that would be the best option. We get the performance that is needed with a lightweight tree search, without external dependencies (to libraries that may provide a lot of other functionality we do not need), and we can expand to parallel trees as needed. If there is no code already available, then PCL seems like a good alternative (since it seems one can compile only portions of the library). Any takers?. Cheers,. Juan. On Jun 8, 2016, at 4:35 AM, Harichand M V <notifications@github.com<mailto:notifications@github.com>> wrote:. All,. Thanks for your comments. I think ANNlibrary is no longer maintained. It would be better if we can use a well maintained library in-order to prevent issues in future. Additionally ANNlibrary does not support distributed trees. As far as I know, pointcloud library also does not support distributed trees. I guess we will have to write a wrapper routine using MPI. This will create a local tree for its own portion of the surface mesh. Now distance computation can be done by querying all the trees and using the minimum. One catch here is that we will have to compute distance queries in a group in order to prevent the communication latency eating up the advantage. Waiting for comments. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/issues/282#issuecomment-224563432, or mute the threadhttps://github.com/notifications/unsubscribe/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224806527:531,integrat,integrated,531,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224806527,2,"['depend', 'integrat']","['dependencies', 'integrated']"
Integrability,"Have you tried the CENTRAL_JACOBIAN_FIX_FACTOR option introduced in #691?; I recommend setting that to 3 or 4, the Lax coefficient to 0.1 (default is 0.15) the JST 4th order coeff to 0.01 and max CFL of 100 - 400 when using the ILU0 preconditioner, depending on how stretched the mesh is.; The justification for those settings is in the aforementioned PR.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/793#issuecomment-535572291:249,depend,depending,249,https://su2code.github.io,https://github.com/su2code/SU2/issues/793#issuecomment-535572291,1,['depend'],['depending']
Integrability,"Have you tried the Newton-Krylov approach in SU2? Boostconv sounds like Newton-Krylov. Our limitation with NK at the moment is that we don't have a good linear preconditioner to converge the Krylov solver to reasonable tolerances at high CFL (which is required to make this type of approach effective and efficient). In the papers, the types of problems to which they apply these methods are very different from the application you have in mind. There is a lot of work that should be done on the numerical schemes for high-speed (and even low-speed) to understand where the robustness issues originate. If these methods can be used as black boxes, it would be a good idea to implement them via the Python wrapper if possible.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022#issuecomment-1533813361:705,wrap,wrapper,705,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022#issuecomment-1533813361,1,['wrap'],['wrapper']
Integrability,"Have you tried:; a) Not forcing CC and CXX to be one of the OpenMPI wrappers; b) Since you are forcing the wrappers, -Dwith-mpi=custom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1074201467:68,wrap,wrappers,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1074201467,2,['wrap'],['wrappers']
Integrability,Heat Flux computation in Viscous_Forces routine,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/70:40,rout,routine,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/70,1,['rout'],['routine']
Integrability,"Heather, all,. As you know I'm working on sliding meshes and that's something we were really looking forward. In my opinion including the ADT search inside the interpolator class to find the nearest neighbour will be mandatory when we will get to simulate multi-stage turbines. I did't have a proper look at those routines yet but I also do not expect any particular problem in using them inside the interpolator class. (Actually one item in my ""todo"" list is indeed to include those routines in the interpolator class.). Giulio. ---. Da: Edwin van der Weide notifications@github.com; Inviato: giovedì 7 luglio 2016 23.47.21; A: su2code/SU2; Oggetto: Re: [su2code/SU2] Feature wall distance (#288). I expect that the tree search can be used for the interpolation routines without a problem. However, we have not looked into that yet. ## . You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHubhttps://github.com/su2code/SU2/pull/288#issuecomment-231217312, or mute the threadhttps://github.com/notifications/unsubscribe/AHg4OBXfHwCsJhsAn3mhMiYi_44mr1A0ks5qTXPpgaJpZM4JF5wW.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288#issuecomment-231221966:314,rout,routines,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/288#issuecomment-231221966,3,['rout'],['routines']
Integrability,"Hello @aditya12398 ,. I was able to recreate your problem with pywrapper enabled on my machine, and I believe I may have found the issue. There was a change with Python 3.8's configure utility. The change is noted here:. https://docs.python.org/dev/whatsnew/3.8.html#debug-build-uses-the-same-abi-as-release-build. This affected the meson build system, as noted here:. https://github.com/mesonbuild/meson/issues/5629. I believe I have solved the problem by adding two lines to the main `meson.build` file in the SU2 root directory. If you can, please checkout branch ""fix_python_3.8"", and see if that solves the Python wrapper compilation problem. -Paul",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631167702:619,wrap,wrapper,619,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631167702,1,['wrap'],['wrapper']
Integrability,Hello @ng0177! The mass and stiffness matrices are calculated in the structural solver which could be extracted and used offline for modal analysis. At the moment this isn't integrated as an overall modal solver but I agree it would be a useful feature.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1003#issuecomment-634557333:174,integrat,integrated,174,https://su2code.github.io,https://github.com/su2code/SU2/issues/1003#issuecomment-634557333,1,['integrat'],['integrated']
Integrability,"Hello Dr. Economon,. Thank you for your quick response.; I just push the updates, following the suggested hints in the messages of the first ""git push ..."" command, but even after issued the ""git pull ..."", I still received the same message (please find the dialog appended at the end of this note). . With kind regards,. Jairo (jaspe55); .........................................................................................................................................................; Jairos-Mac-mini:SU2 jaspe$ pwd; /Users/jaspe/Desktop/SU2BRANCH/SU2; Jairos-Mac-mini:SU2 jaspe$ git branch; * feature_force_read_target_on_AD; master; Jairos-Mac-mini:SU2 jaspe$ git status; On branch feature_force_read_target_on_AD; nothing to commit, working tree clean; Jairos-Mac-mini:SU2 jaspe$ ; Jairos-Mac-mini:SU2 jaspe$ ; Jairos-Mac-mini:SU2 jaspe$ git push origin feature_force_read_target_on_AD; To https://github.com/su2code/SU2.git; ! [rejected] feature_force_read_target_on_AD -> feature_force_read_target_on_AD (fetch first); error: failed to push some refs to 'https://github.com/su2code/SU2.git'; hint: Updates were rejected because the remote contains work that you do; hint: not have locally. This is usually caused by another repository pushing; hint: to the same ref. You may want to first integrate the remote changes; hint: (e.g., 'git pull ...') before pushing again.; hint: See the 'Note about fast-forwards' in 'git push --help' for details.; Jairos-Mac-mini:SU2 jaspe$ git pull origin develop; remote: Enumerating objects: 50, done.; remote: Counting objects: 100% (50/50), done.; remote: Compressing objects: 100% (6/6), done.; remote: Total 81 (delta 45), reused 46 (delta 44), pack-reused 31; Unpacking objects: 100% (81/81), done.; From https://github.com/su2code/SU2; * branch develop -> FETCH_HEAD; 0811066f4..cf91b7cf4 develop -> origin/develop; Merge made by the 'recursive' strategy.; Common/include/blas_structure.hpp | 2 +-; Common/include/matrix_structure.hpp | 2 +-; Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-438029731:119,message,messages,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-438029731,2,['message'],"['message', 'messages']"
Integrability,"Hello Pedro,. No problem at all. I just got stuck on a few issues in the PB solver and other things so I wasn't able to focus on this PR in a while. But yeah, I am indeed stuck on how to update the map in MPI. What I have done so far is kept the Global roughness array in config class for the BC_* routines and created an unordered map in physical geometry class which will be used in the SetWallDistance routine instead of the config call. I haven't used maps in C++ at all, so it is taking a while. I will try a few more things and if I can't fix it I will ask on slack or in the meeting next time. Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653064740:298,rout,routines,298,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653064740,2,['rout'],"['routine', 'routines']"
Integrability,"Hello Pedro. While searching a small sample dataset, I have run some; variations on the jobs, and my findings were:; (Please note that *all* ""markers"" I have mentioned in the next items refer; to solid walls in the mesh, using the RANS solver); 1- When I impose HEATFLUX=0 *and* ISOTHERMAL=290 Kelvin, for the same; markers, there are no complaints from SU2. It shows that SU2 ignores the; imposition of HEATFLUX=0, in this case.; 2- Just setting ISOTHERMAL=290 Kelvin (using all of the same markers as in; (item 1), above), without any HEATFLUX setting, then SU2 produces the same; results as in (item1).; 3- When some markers are set with HEATFLUX=0 and the rest of them are set; with ISOTHERMAL=290 Kelvin (so that each wall marker in the mesh is; referenced), there are no complaints from SU2, and the job goes as expected.; 4-The error message mentioned earlier, appears when one or more solid wall; markers *is not marked* concerning HEATFLUX or ISOTHERMAL; .; My conclusion then is that the error message appeared when I mistakenly; have not included a wall marker (assigning it as a HEATFLUX or an; ISOTHERMAL marker!); Does it make sense?; Kind regards,. On Mon, Oct 23, 2023 at 7:48 PM Jairo Cavalcante ***@***.***>; wrote:. > Unfortunately, my example involves a swirler and nozzle for the; > Navier-Stokes solver with Menter model, so the dataset is relatively large.; > Let me check whether some older small Euler mesh exhibits the same message!; > I will let you know! Thank you very much.; >; > On Mon, Oct 23, 2023 at 6:34 PM Pedro Gomes ***@***.***>; > wrote:; >; >> Is there a simple example to reproduce the issue?; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; >> unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; >> .; >> You are receiving this because you commen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035:841,message,message,841,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035,2,['message'],['message']
Integrability,"Hello SU2 developers, ; I tried to build from source the new SU2 v7.0.5 by following the quick compilation guide but after the command. `./meson.py build`. I received the following error. ```; Downloading CoDiPack '501dcf0305df147481630f20ce37c2e624fb351f'; Downloading MeDiPack 'edde14f9ac4026b72b1e130f61c0a78e8652afa5'; Downloading meson '29ef4478df6d3aaca40c7993f125b29409be1de2'; Downloading ninja '52649de2c56b63f42bc59513d51286531c595b44'; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.54.999; Source dir: /home/roby/SU2/SU2v7; Build dir: /home/roby/SU2/SU2v7/build; Build type: native build; Project name: SU2; Project version: 7.0.5 ""Blackbird""; C compiler for the host machine: cc (gcc 5.4.0 ""cc (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C linker for the host machine: cc ld.bfd 2.26.1; C++ compiler for the host machine: c++ (gcc 5.4.0 ""c++ (Ubuntu 5.4.0-6ubuntu1~16.04.12) 5.4.0 20160609""); C++ linker for the host machine: c++ ld.bfd 2.26.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.29.1); Run-time dependency MPI for c found: YES 1.10.2; Run-time dependency MPI for cpp found: YES 1.10.2; Message: Extracting boost ... externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1. A full log can be found at /home/roby/SU2/SU2v7/build/meson-logs/meson-log.txt; ```. Best regards",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019:1374,depend,dependency,1374,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019,3,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"Hello SU2 developers,. I am reopening this topic because I am studying a case of jet impingement on a wall with a time-varying flow at the inlet. I have used compressible RANS and TOTAL_CONDITIONS as inlet BC. Specifically, I have set a time-varying stagnation pressure at inlet. To do this, I used the Python script mentioned in the previous messages, modifying some commands to suit my problem. I should mention that I do not use Python frequently, so there are likely some errors. Indeed, I checked the documentation and noticed that the command I used to vary the pressure at the inlet (SetMarkerCustomPtotal) is not listed. However, when I run the simulation, it seems to work quite well. Unfortunately, when examining the pressure field, it appears that the time-varying boundary conditions are applied on the walls with no-slip conditions (represented by the MARKER_ISOTHERMAL command) and not at the inlet as I want. Could you please tell me what changes I need to make in the Python script to correctly set up the problem? For completeness, I am attaching the script I modified, the configuration file, and a video of the pressure field.; [2D_jet_val_unsteady_5.zip](https://github.com/user-attachments/files/15524970/2D_jet_val_unsteady_5.zip). Thank you in advance for your help. Best Regards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953:343,message,messages,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2143793953,1,['message'],['messages']
Integrability,"Hello Tim. Thank you for the quick reply. ; Since I'm a new SU2 user, I firstly tried to build it from source in the quickest possible way so I didn't really do much. I've just run the command `./meson.py build` wihout modifying anything. Furthermore I tried on two different machines and I got the same error. ; Here the last part of the meson-log.txt but unfortunately it doesn't add more information about the problem. ```; Compiler stderr:; ; Run-time dependency MPI for cpp found: YES 1.10.2; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/check_dir.py boost; --- stdout ---. --- stderr ---. Message: Extracting boost ...; Running command: /usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio; --- stdout ---; /home/roby/SU2/SU2v7/externals/tecio. --- stderr ---; Traceback (most recent call last):; File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 38, in <module>; extract_tar(infile, P.outpath, True); File ""/home/roby/SU2/SU2v7/meson_scripts/extract_file.py"", line 24, in extract_tar; with tarfile.open(fn) as z:; File ""/usr/lib/python3.5/tarfile.py"", line 1557, in open; return func(name, ""r"", fileobj, **kwargs); File ""/usr/lib/python3.5/tarfile.py"", line 1655, in bz2open; compresslevel=compresslevel); File ""/usr/lib/python3.5/bz2.py"", line 102, in __init__; raise TypeError(""filename must be a str or bytes object, or a file""); TypeError: filename must be a str or bytes object, or a file. externals/tecio/meson.build:6:2: ERROR: Command ""/usr/bin/python3 /home/roby/SU2/SU2v7/meson_scripts/extract_file.py boost.tar.gz /home/roby/SU2/SU2v7/externals/tecio"" failed with status 1.; ```. Thank you for the assistance",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489:456,depend,dependency,456,https://su2code.github.io,https://github.com/su2code/SU2/issues/1019#issuecomment-640548489,2,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"Hello Tobi, by the way, is there a good explanation as to why even for an; adiabatic wall, and REF_DIMENSIONALIZATION= DIMENSIONAL, I get an abs; (heat flux) > 200 at the conclusion of the flow solver, when; log10(Residual) ~ -9?. On Wed, Sep 6, 2023 at 6:08 PM TobiKattmann ***@***.***>; wrote:. > Closed #2109 <https://github.com/su2code/SU2/pull/2109>.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#event-10300600709>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUR75MBIGQTN2VJJVZTXZDQ5BANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you are subscribed to this thread.Message; > ID: ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1739937564:677,Message,Message,677,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1739937564,1,['Message'],['Message']
Integrability,"Hello everyone,. I am starting to work on adding inlet file interpolation capabilities in SU2. I currently have a spanwise PT and TT distribution (r vs PT or TT) for an inlet boundary for a Stator (periodic, turbomachinery case). I want to carry out a spanwise interpolation at the inlet vertices. I can write a program to read an inlet file for a new format (r vs PT or TT). Then I want to 1D interpolate this data against the radii of all the vertices on the inlet face. The best way is to generate a **piecewise 1D interpolation function** that can return the value of the interpolated data at that radius. I have done this before in python using 'interp1D'. I have found the following library for C++ that does have this capability:. http://people.math.sc.edu/Burkardt/cpp_src/pwl_interp_1d/pwl_interp_1d.html. which will require _'The PWL_INTERP_1D test code needs the R8LIB and TEST_INTERP libraries._'. I hope these libraries will be integrated with SU2 without any issue. However, it would be better if I can use some of the built-in interpolation capabilities in SU2 like what I found in 'interpolation_structure.cpp'. I also look forward to extending this capability for 2D interpolation(that is, in r and theta). It would be very helpful if someone who has worked with interpolation before can point to a function that is capable of generating a piecewise interpolation function that could work for my case or can pitch in any idea related to this. Thanks!. @vdweide @clarkpede @economon @juanjosealonso @sravya91 @bmunguia @jayantmukho",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791:941,integrat,integrated,941,https://su2code.github.io,https://github.com/su2code/SU2/issues/791,1,['integrat'],['integrated']
Integrability,"Hello! I was using the python script ""shape_optimization"". I wanted to; leave out some design variables to ensure they will not be modified (i.e.; fixing the extremities of a nozzle, for example), but apparently it was not; working when trying that. On Thu, May 16, 2024 at 6:59 PM Nijso ***@***.***> wrote:. > Hi, @jaspe55 <https://github.com/jaspe55> Sorry that it took so long to; > get back to you on this topic, but what is the exact command that you are; > using, do you use one of the python scripts?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/2265#issuecomment-2116274865>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUR4CHGFULNFYLVZUELZCUT5VAVCNFSM6AAAAABGHNGHR2VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDCMJWGI3TIOBWGU>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265#issuecomment-2116341103:878,Message,Message,878,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265#issuecomment-2116341103,1,['Message'],['Message']
Integrability,"Hello, . when using the option INV_DESIGN_CP = YES, COutput::SetCp_InverseDesign is called to set the pressure difference. There is no problem with the allocations of values when running in serial but some problems arise when running in parallel. I haven't debugged it completely but it seems that the storage of the values of iMarker and iVertex in Point2Vertex gets mixed up by the parallel run. This in turn affects the reading of the TargetCp file (and can be checked by running the simulation in serial and in parallel, they should give different results for the Cp_diff in the history file). Also, if the inverse_design_pressure is defined on a boundary (e.g. a wing) but there are other boundaries of the same kind in the domain (e.g. some walls) these are also considered when computing the pressure difference (with a target pressure equal to 0.0) thus affecting the final value of the objective function. I believe this last problem could be solved by placing something like if (config->GetMarker_All_Designing(iMarker) ) == 1) at appropriate locations in the routine. . However, I am having troubles troubleshooting the first problem.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/486:1070,rout,routine,1070,https://su2code.github.io,https://github.com/su2code/SU2/issues/486,1,['rout'],['routine']
Integrability,"Hello, ; I did not fix this issue. I just found possible source of it. You can use case attached to this message to reproduce the issue. Run: python path_to_su2/finite_differences.py -f turb_SA_RAE2822.cfg -n 12; or; python path_to_su2/discrete_adjoint.py -f turb_SA_RAE2822.cfg -n 12. It ends with error message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; DV_VALUE: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM.; ------------------------------ Error Exit -------------------------------_. The config file created prior to call the solver constains DV_VALUE = 0.0 instead of six values as in original cfg file. The reason for this (probable one) is described in my original post. . I'm not experienced with SU2 coding and handling of codes on GitHub, so I would like to ask someone to fix this issue. . Thank you,; Jan. [RAE_Test.zip](https://github.com/su2code/SU2/files/11199780/RAE_Test.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2005#issuecomment-1503154876:105,message,message,105,https://su2code.github.io,https://github.com/su2code/SU2/issues/2005#issuecomment-1503154876,2,['message'],['message']
Integrability,"Hello, I am new to SU2. I cloned the git repository and wanted to build it from source (on Debian GNU/Linux).; I noticed that the 'meson.py' script downloads a bunch of external dependencies, including Meson and Ninja (as documented in <https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/>). I wanted to use the system-wide versions of Meson and Ninja that I have installed on my Debian box, hence I had to modify the 'meson.build' file, in order to drop the following lines:. if meson.version() != '0.61.1'; error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); endif. And then I had to manually download the relevant external dependencies.; After that, I issued:. $ meson setup -D_configuration-options_ build; $ ninja -C build install. The build was successful, but using system-wide Meson and Ninja could be made easier. I think that the 'meson.py' script could have an option to avoid downloading Meson and Ninja and to avoid the automatic invocation of the downloaded Meson. Moreover, the 'meson.build' file should not exit unsuccessfully on the basis of meson.version(), or, at least, should check that meson.version() is equal to or later than a given minimum version.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945:178,depend,dependencies,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945,2,['depend'],['dependencies']
Integrability,"Hello, I'm Minsul. I am struggling to compile SU2-feature_adap branch. My purpose for using the branch is mesh adaptation. But the problem is that whenever I command ./meson.py build,. It shows the error message: meson.build:1:0: ERROR: Value ""c++11"" for combo option is not one of the choices. Possible choices are: ""none"", ""c++98"", ""c++03"", ""gnu++98"", ""gnu++03"". So I tried to edit meson.build file. not c++11 but c++03 or c++98. But I get to know that It is necessary of c++11 to compile SU2_CFD. Is there any one else who can help me solve this problem?. Thank you.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2033:204,message,message,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/2033,1,['message'],['message']
Integrability,"Hello,. I detected a bug trying to launch the routine fsi_computation.py. As it is, the code doesn't work and crashes with an error saying that in FSIInterface.py the function call (setSolidInterfaceLoads):. **SolidSolver.applyload(iVertex, Fx, Fy, Fz, time)**. only requires 5 input arguments (not 6). A deeper investigation showed that in PitchPlungeAirfoilStructuralTester.py the function is so defined:. **def applyload(self, iPoint, fx, fy, fz):**. so, no _time_ variable allowed or requested. After applying this correction the code works. . Hope this can be of any help. Best,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449:46,rout,routine,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/449,1,['rout'],['routine']
Integrability,"Hello,. I have a hyperthreaded 6-core machine (12 processors available) but I have the following issue when I try to specify `parallel_computation.py -n 12`. ; ```; tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ parallel_computation.py -n 12 -f turb_ONERAM6.cfg ; Traceback (most recent call last):; File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 116, in <module>; main(); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 67, in main; options.compute ); File ""/opt/su2/SU2v6.0.0/bin/parallel_computation.py"", line 94, in parallel_computation; info = SU2.run.CFD(config) ; File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 122, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v6.0.0/bin/SU2/run/interface.py"", line 302, in run_command; raise exception(message); SU2.EvaluationFailure: Path = /opt/su2/SU2/TestCases/rans/oneram6/,; Command = mpirun -n 12 /opt/su2/SU2v6.0.0/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '1'; --------------------------------------------------------------------------; There are not enough slots available in the system to satisfy the 12 slots; that were requested by the application:; /opt/su2/SU2v6.0.0/bin/SU2_CFD. Either request fewer slots for your application, or make more slots available; for use.; --------------------------------------------------------------------------; ```; It works if `-n 6` is used instead but then only half of the availalbe processes are being used. I'm not sure if this is a bug with parallel_computation.py (or just a ""feature"" which has not yet been implemented) but using SU2 6.0.0, not all my processing threads can be used when using OpenMPI 3.0.0. I think this is due to the fact that it's not possible to pass `--use-hwthread-cpus` to `mpirun` as is mentioned on the StackOverflow page, [here](https://stackoverflow.com/questions/48835603/unable-to-use-all-cores-with-mpirun). As a workaround, have tried; `tjim@t3500:/opt/su2/SU2/TestCases/rans/oneram6$ mpirun --use-hwthread-cpus",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526:634,interface,interface,634,https://su2code.github.io,https://github.com/su2code/SU2/issues/526,3,"['interface', 'message']","['interface', 'message']"
Integrability,"Hello,. I have now added a basic FVM implementation to solve a general Poisson problem. The existing Poisson solver used a FEM based discretization but we needed a FVM based discretization to maintain numerical consistency when the momentum equations and Poisson equation for pressure are coupled. The FVM based solver is now working but some work still remains (like output formatting, history files.. etc). I used a pseudo-time approach and Euler explicit and implicit schemes fortime integration. The source term and the boundary conditions (Dirichlet and Neumann) are all hard coded for now. The next step would be to use the multigrid methods to solve the Poisson problem directly instead of the pseudo-time approach. . Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-370767656:487,integrat,integration,487,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-370767656,1,['integrat'],['integration']
Integrability,"Hello,. I ran an incompressible case with NACA 0012 (AoA=0, TMR case) and I see a similar difference between SA and SST on the grid level 3 (https://turbmodels.larc.nasa.gov/naca0012_grids.html, 257 points on the airfoil surface). I also tried the SST_SUST model and have attached the plots for mid section and wake here (white lines - SA, red - SST, green - SST_SUST). The SUST model gives the same difference at mid chord and LE but not in the wake. The SST_SUST under predicts the drag value though (also I had some convergence issues with SUST).; ![pressure_line_cmp_mid](https://user-images.githubusercontent.com/28007882/66496216-dd5a2580-eaba-11e9-869e-097cce8e52b4.png); ![pressure_line_cmp_wake](https://user-images.githubusercontent.com/28007882/66496217-dd5a2580-eaba-11e9-9c72-1980625dd550.png). @economon , the SetStressTensor routine includes the -2/3 * rho * TKE term, so I suppose the TKE is accounted for in the viscous residual of the mean flow equations. . @emoralest6 if you wanted to check the source code, the mean flow solver is in SU2_CFD/src/solver_direct_mean.cpp and the corresponding numerics in the SU2_CFD/src/numerics_direct_mean.cpp file. Cheers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-540063840:840,rout,routine,840,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-540063840,1,['rout'],['routine']
Integrability,"Hello,. I'm experiencing an unclear error trying to launch the fsi_computation.py of the **SU2 develop branch**. From the command line, launching:. `mpirun -np XX fsi_computation.py -f FSICoupler_config.cfg --parallel`. with XX number of process (I tried both with 1 and more), I get the error:; > ERROR : You are trying to initialize MPI with a serial build of the wrapper. Please, remove the --parallel option that is incompatible with a serial build. I'm sure my wrapper has been built in parallel, as I used the configure options suggested in ; [https://su2code.github.io/docs/Python-Wrapper-Build/](url); Plus, I'm doing exactly the same as done using the old branch **feature_pyWrapper** which, according to my old issue:; [https://github.com/su2code/SU2/issues/449#issuecomment-333879558](url); should have been merged to the develop branch.; Is this a code problem or I'm doing something wrong? (Am I referring to the correct branch?). Thanks in advance for the suggestions. EDIT: more in details the exception raised is . > ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError('__init__() takes exactly 6 arguments (5 given)',))",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531:366,wrap,wrapper,366,https://su2code.github.io,https://github.com/su2code/SU2/issues/531,3,"['Wrap', 'wrap']","['Wrapper-Build', 'wrapper']"
Integrability,"Hello,. I'm pretty new to python and, in general, to the logic of parallel computation. ; I'm trying to run in **parallel** the routine fsi_computation.py. Even if (as much as I noticed) the parallel computation feature is already built in the structure of the code I'm not able to do it. Moreover, I find the structure of the routine sensitively different than the one of parallel_computation.py in which, for example, I can actually choose the number of processor I can use for the run. Dose anybody know if the feature is actually implemented in fsi_computation.py and, in case, how to set it?. Thanks!. NB: I'm currently using the version of the code provided in the branch **feature_pyWrapper** which, as it was already told me, is the up-to-date version for the the python tools.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/457:128,rout,routine,128,https://su2code.github.io,https://github.com/su2code/SU2/issues/457,2,['rout'],['routine']
Integrability,"Hello,. May I ask which version of the code do you use and on which branch ? In fact, this bug (and it was not the only one) was already fixed a few days ago on the branch feature_pyWrapper. You may pull those new changes just to be sure to have a clean version. Otherwise, I would not trust the results. The reason why the FSI Python tool (note the distinction with the SU2 Python wrapper, which is maintained and up-to-date) accumulates some bugs is that, normally, it is not really maintained anymore in prevision of a new coupling framework. I recently introduced some fixes to make it work again (I mean the coupling SU2 + pitch-plunge structural solver) in the meantime, but you may want to double-check each result you get. Best,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449#issuecomment-333879558:382,wrap,wrapper,382,https://su2code.github.io,https://github.com/su2code/SU2/issues/449#issuecomment-333879558,1,['wrap'],['wrapper']
Integrability,"Hello,. So, to clarify, there were two issues:. 1) With the old commit (382e82f), we were seeing the assertion failure at line 1881 of numerics_structure.cpp, but only with the very large mesh (180 million cells). 2) With the newer commit (c093a62), we were seeing the assertion failure at line 294 of C2DContainer.hpp, which was occurring even with smaller meshes (7 million cells). The solution to (2) appears to be to change `geometry->node[iPoint]->GetnNeighbor()` to `geometry->node[iPoint]->GetnPoint()` at line 3759 of CEulerSolver.cpp, in the `CEulerSolver::SetUpwind_Ducros_Sensor()` method. I made this change locally, and attempted to run on our large mesh. Issue (2) seems to be fixed, but we still run into issue (1). I have now gone through the read restart routines, and have found a potential issue:. For reference, the restart file for our large mesh with averaging data included consists of:; 39 fields * 75,107,967 points = 2,929,210,713 variable values (which is larger than `INT_MAX`). Beginning at line 3931 of CSolver.cpp, in method `CSolver::Read_SU2_Restart_Binary(...)`, we have the following:. ```; int *blocklen = new int[geometry->GetnPointDomain()];; int *displace = new int[geometry->GetnPointDomain()];; int counter = 0;; for (iPoint_Global = 0; iPoint_Global < geometry->GetGlobal_nPointDomain(); iPoint_Global++ ) {; if (geometry->GetGlobal_to_Local_Point(iPoint_Global) > -1) {; blocklen[counter] = nFields;; displace[counter] = iPoint_Global*nFields;; counter++;; }; }; MPI_Type_indexed(geometry->GetnPointDomain(), blocklen, displace, MPI_DOUBLE, &filetype);; ```; The problem here is that for our case, where `iPoint_Global` can get up to 75,107,967 and `nFields` = 39, the value assigned to `displace[counter]` in the loop can over-run `INT_MAX`. This would result in potential garbage / incorrect displace values being passed to `MPI_Type_indexed(...)`. Unfortunately, simply changing `displace` to a `long int *` won't work, as the expected argument type for `",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622026420:772,rout,routines,772,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622026420,2,['rout'],['routines']
Integrability,"Hello,. There is a stray allocation in the Integration_Postprocessing routine in line 1804 in the develop branch. Currently reads:. if (template_solver) integration[val_iInst][TEMPLATE_SOL] = new CSingleGridIntegration(config);. instead of delete. Is this resolved in a more recent PR?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/792:70,rout,routine,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/792,2,"['integrat', 'rout']","['integration', 'routine']"
Integrability,"Hello,; When using the rotating reference frame option with incompressible flow the code blows up immediately. There appears to be two issues - ; 1. Omega_ref is not initialized in the SetNondimensionalization subroutine in solver_direct_mean_inc.cpp. In the compressible version, it is defined as Velocity_ref/Length_ref whereas no definition exists in the incompressible one.; 2. Since all the definitions of gas constants have been removed from the incompressible routines, using Mach_motion to normalize forces and moments makes them all undefined. . While both the fixes are easy, it might still lead to issues when free stream velocity is zero as Omega_ref is used to normalize grid velocities in SetRotationalVelocity. ; Is it possible to implement a new config option to compute Omega_ref differently and also use it to normalize forces?. Cheers,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/468:467,rout,routines,467,https://su2code.github.io,https://github.com/su2code/SU2/issues/468,1,['rout'],['routines']
Integrability,"Hello. I have a mesh which has a boundary condition with name containing : symbol. SU2 considered just the part of the name in before : When : was used in definition of the optimization problem, the parser returned an error message",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/163:224,message,message,224,https://su2code.github.io,https://github.com/su2code/SU2/issues/163,1,['message'],['message']
Integrability,"Hello; I tried a few things, even after setting the environment variables, like mentioned in the previous comment, SU2 build failed with the same long error. I installed MPICH in a custom path and set the variables like so:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/usr/local/mpich-3.3.2/bin/mpicc'; export MPICXX='/usr/local/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/usr/local/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/usr/local/mpich-3.3.2/include'; export C_FLAGS='-I/usr/local/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/usr/local/mpich-3.3.2/lib/pkgconfig'; ```; The following two lines are absent from my meson output:; ```; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480:719,depend,dependency,719,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-640396480,2,['depend'],['dependency']
Integrability,"Here are some numbers regarding the performance. I used an unsteady 3D case with 83425 points. I took the extreme case of calling the output routines every time-step and only 5 inner iterations. For the first run I enabled the writing of restart and tecplot file:; ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6 ; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:141,rout,routines,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,1,['rout'],['routines']
Integrability,"Here's my best guess at what is happening: we are not correctly identifying the complete set of neighbors along intersections of two or more periodic boundaries (maybe duplicates, or maybe missing some neighbors). Without the correct stencil, GG will be incorrect due to integrating over the wrong control volume (repeated faces or missing faces). It also needs the correct volume for division in the GG evaluation. LSQ gets away with it most likely because the stencil can be defined independently of the actual set of neighbors (doesn't need to be a closed control volume) - if you miss a neighbor or duplicate a neighbor, you should end up with a similar answer. WLSQ may also get away with it, but with the weighting by inverse distance of the neighbor, you could still see some artifacts in the solution with missing/duplicate neighbors. If you have some time, can you take a look at the periodic matching routines and periodic communication preprocessing? The routines are sort of nasty, since the identification is not so straightforward in a vertex-based code with the DoFs on the boundary, but I expect we are missing something there still with intersecting periodic boundaries.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1090#issuecomment-727639514:271,integrat,integrating,271,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090#issuecomment-727639514,3,"['integrat', 'rout']","['integrating', 'routines']"
Integrability,"Here's the crash info for the build with debug flags. No difference with/out the wrapper.; [QuickStartLog_Debug.txt](https://github.com/su2code/SU2/files/4583003/QuickStartLog_Debug.txt); I'm currently testing on the QuickStart case. I have 2 different types of machines which exhibit the same behavior. They are both using mellanox interconnects using their hpcx package and openmpi 4.0.2 (another system without mellanox but with openmpi 4.0.2 works fine; though that's also on Cent7 instead of Cent8). For the two types of systems with issues, one set is running with Intel Golds and 92GB/node and the other set is running on AMD EPYCs with 256GB/node. Interesting point; I can check with the OpenMPI folks on what might cause an external library (mellanox libraries) to cause file opening to fail.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624242391:81,wrap,wrapper,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624242391,1,['wrap'],['wrapper']
Integrability,"Hey @LaSerpe (Giulio),. I had a look at the new driver structure and it look clear to me. My only comments is on the name of the classes: I agree on having a GeneralDriver in place of the SingleZone and MultiZone Driver, as @tobadavid said we should distinguish the drivers for the different physics/applications, but the name CFluidDriver I think is a bit misleading considering the fact that is specifically for multizone fluid with sliding-mesh interface. Perhaps a SlidingMeshDriver sounds better??? Any suggestion from the others?. Regarding the fact that you still have to specify the FSI_MARKER, i would fix this before merging with the develop. . Anyway good job!!! . cheers. Salvo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-255340813:448,interface,interface,448,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-255340813,2,['interface'],['interface']
Integrability,"Hey @talbring, currently the 'Trigger build' function for non-PR branches seems to not work. @cvencro and I get the error message `Oh no! You tried to trigger a build for su2code/SU2 but the request was rejected. ` . Do you know more about it? Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/748#issuecomment-526146883:122,message,message,122,https://su2code.github.io,https://github.com/su2code/SU2/issues/748#issuecomment-526146883,1,['message'],['message']
Integrability,"Hey @timjim333 that's nice to hear,. I would put it in the .bashrc if you consistently call SU2 with your command, like that you can always switch the SU2-build and still have your clear settings already in place. Image having the master, develop and feature_whatever installed, you don't need to apply your patch to all of these versions if you put it in the bashrc.; But editing interface.py has the same effect, so its up to you what you prefer. Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-429668015:381,interface,interface,381,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-429668015,2,['interface'],['interface']
Integrability,"Hey David,. to define custom BCs inside python is an amazing feature! I can see a lot of potential there. Thanks for that! . Since the python wrapper functionality is growing, what do you think about moving all of these wrapper routines to a separate file cpp file? ; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352001425:142,wrap,wrapper,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352001425,3,"['rout', 'wrap']","['routines', 'wrapper']"
Integrability,"Hey Tim, Sorry I couldn't try this while it was still in PR mode, but I just tried it on my ubuntu 16.04 and after some poking around, it worked! Compilation from scratch was very rapid. . Just a quick thing, the documentation didn't quite work for me but that is probably because my default python is 2.7. Which meant that I had to execute it as:. `python3 meson.py ...`. When I did that, I got this error: ; ```; Message: Looking for mpi4py in /usr/lib/python3/dist-packages; Run-time dependency python3 found: NO (tried pkgconfig). SU2_PY/pySU2/meson.build:29:0: ERROR: Dependency ""python3"" not found, tried pkgconfig; ```; This was not fixed by installing mpi4py the way it is suggested in the draft documentation. Stack overflow came to the rescue and I had to run . `sudo apt-get install python3-mpi4py`. After this the installation worked perfectly. I am not sure if this is an anomaly and that it won't happen in properly configured workstations. I also am not a 100% sure about why this worked (I am a linux noob). So I will leave it to your discretion whether this is something you want to add to the documentation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-525114027:415,Message,Message,415,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-525114027,3,"['Depend', 'Message', 'depend']","['Dependency', 'Message', 'dependency']"
Integrability,"Hey guys, I am running into a seemingly super simple problem. I am trying to build SU2(v7.0.2) with python wrapper option, and I got an error ""Run-time dependency python3 found: NO"", but clearly python3 is installed, as shown below:. <img width=""1032"" alt=""image"" src=""https://user-images.githubusercontent.com/42105225/76112937-2e5e3f00-5fb1-11ea-817f-178f4ffd811f.png"">. other info:; - OS: Ubuntu 18.04; - C++ compiler and version: [e.g., g++ (GCC) 7.4.0]; - MPI implementation and version: [e.g., OpenMPI 2.1.1]; - SU2 Version: [e.g., v7.0.2]. Could anyone help on this? Thanks!. Best,. Aaron",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903:107,wrap,wrapper,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/903,2,"['depend', 'wrap']","['dependency', 'wrapper']"
Integrability,"Hey there :wave:,. This is an ***automated PR*** to migrate recent [DEP](https://github.com/apps/dep) App users to a new [GitHub action](https://github.com/features/actions) called [Dependent Issues]( https://github.com/marketplace/actions/dependent-issues). . If you received this PR it means you have DEP installed on the organization level (not necessarily enabled on this repository). If you think this is a mistake, I'm sorry. Please close this PR. ### :newspaper: TLDR. * The current DEP app has _been deprecated in favor of the new [Dependent Issues](https://github.com/marketplace/actions/dependent-issues)_ Github Action and it will be removed soon.; * The new Action works the same way the bot did but with additional features/changes:; - Works with both _PRs and issues_ (disabled by default).; - Works with _cross-repository_ dependencies e.g. `microsoft/vscode#999`.; - It _notifies users by writing a comment_ with the list of dependencies and keep their states updated. This is especially useful when having the action enabled for non-PR issues.; - Keywords and the label _can now be customized._; - It sets the state of the head commit on a PR _to `pending` instead of `failure`_ (shows as :orange_circle: instead of a :x: ) when some dependencies are not yet ready (i.e. closed). Breaking changes? Nothing. You can use the action the same way as before. eg. Writing `Depends on #number` or `Depends on owner/repo#number` clause(s) on the PR/issue description. For more info please visit :point_right: https://github.com/marketplace/actions/dependent-issues. ### :bulb: Usage. ![example](https://raw.githubusercontent.com/z0al/dependent-issues/main/demo.png)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1116:182,Depend,Dependent,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116,11,"['Depend', 'depend']","['Dependent', 'Depends', 'dependencies', 'dependent-issues']"
Integrability,"Hi -. I'm at the AIAA meeting this week and downloaded SU2 after listening to few talks. I noticed you guys optionally link to tecio, the templet binary API, when it is available. . I'm the project manager of the libMesh finite element library, a general purpose C++ finite element library (http://libmesh.sourceforge.net). I also work at NASA/JSC in the Aerosciences & CFD group, hence the potential interest in SU2. In libMesh, we build a number of optional software dependencies from source - Metis, ParMetis, tecio, etc… We find this much preferable to requiring (simple) dependencies to be preinstalled by the user. This pull request adds the source files for tecio, along with automake integration, so that the Tecplot dependencies can be satisfied internally to SU2. The Tecplot tecio source is distributed openly at http://www.tecplot.com/downloads/tecio-library, so there are no issues with redistribution. Some notes on the implementation:; 1. It includes all the tecio sources,; 2. It includes the configure.ac & Makefile.am changes required. Specifically, I did _not_ update the Makefile.in or configure scripts you have checked in to your master, as my autotools are quite newer and doing so would result in unnecessary diffs. So I ask - do you guys have a requirement on the version of autotools you are using, since you are checking in derived files?. See relevant discussion here http://stackoverflow.com/questions/4873065/autotools-and-version-control. If you like this approach, I'll follow up with a similar implementation for building Metis from source as well.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/21:469,depend,dependencies,469,https://su2code.github.io,https://github.com/su2code/SU2/pull/21,4,"['depend', 'integrat']","['dependencies', 'integration']"
Integrability,"Hi ; > WeightNF.dat: I don't understand what this is for. It is read in CAdjEulerSolver::SetIntBoundary_Jump to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?. As far as I see it that function should not be called with the discrete adjoint solver. `CAdjEulerSolver::SetIntBoundary_Jump ` is only called by `CAdjFluidIteration::Preprocess` which should happen during a discrete adjoint run (but as far as i understand you that is not happening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.). you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them. That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629:1376,message,message,1376,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885462629,2,['message'],['message']
Integrability,"Hi @Eduardo-Carvalho ,. your request is now merged into the develop branch and you can test/use it if you like. It will be in one of the next releases, if no further issues occur.; Handling is intuitive: Just set your restart iteration in the config file as you would do normally and activate the restart solution option. Furthermore, place your restart file (two in the case of 2nd order time integration) in the same directory as the config file of your test case. Then you are set up and can run the scripts as normal. ; For more details, I refer to pull request #964. . Best; Steffen",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/909#issuecomment-630289600:394,integrat,integration,394,https://su2code.github.io,https://github.com/su2code/SU2/issues/909#issuecomment-630289600,2,['integrat'],['integration']
Integrability,"Hi @EttoreSaetta sorry for the late reply. There are some scaling terms in the JST scheme in SU2 that depend on the number of neighbors of each point (which will be different for 2-D and 3-D).; However, they don't explain the complete difference, I tried making them constant but 2-D and 3-D still gave different results, in fact the difference was much larger than in your problem.; I looked in the usual references but could not find an explanation for those terms, but in any case it seems that the main problem is the symmetry boundary condition.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280#issuecomment-862086207:102,depend,depend,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-862086207,1,['depend'],['depend']
Integrability,"Hi @LaSerpe ,. The BC_Fluid_Interface only used to update the information for mean flow, there is no function used to update the turbulent information for the sliding interface?. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-263457080:167,interface,interface,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-263457080,1,['interface'],['interface']
Integrability,"Hi @MaxSagebaum,. The two options in your second step sound very interesting and I guess are the only way to get good performance for arithmetic intensive operations, like the ones in the DG solver. If I understand correctly option 1 is something that could be tried already, by applying the external function mechanism to the gemm and gemv functions (akin to what is done now for large linear systems) right? The only downside would be the creation of temporary matrices of passivedouble required to call the blas functions.; With option 2 maybe these temporaries would not be required? As there would be an active matrix class whose internal data structures would be passive matrices that could interface with blas directly?. I guess the important question is: For performance sensitive applications, do you see merit in developing something in house that could better leverage the new AD tool, or will it be able to handle ""any"" object oriented library we might adopt?. Thanks and regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463181396:697,interface,interface,697,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463181396,1,['interface'],['interface']
Integrability,"Hi @TobiKattmann ,. Apologies for the huge gap in communication - I had to attend to other matters before I could try this out. I just wanted to follow up and thank you for your suggestions. Doing `export SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s""` before calling 'parallel_computation.py' did the job!. Is it safe for me to edit line 70 in interface.py from `mpi_Command = 'mpirun -n %i %s'` to `mpi_Command = 'mpirun --use-hwthread-cpus -n %i %s'` so that it is set permanently? Or is it better to put `export SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s""` in my .bashrc?. Many thanks and kind regards,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-428829621:352,interface,interface,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-428829621,1,['interface'],['interface']
Integrability,"Hi @TobiKattmann . > > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > > ; > > ; > > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth; > ; > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1. I tested with single core and this message appears as well. Again, I don't see a point of this message and need to know the original intent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286:108,message,message,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894929286,4,['message'],['message']
Integrability,"Hi @TobiKattmann . Thank you for making lots of suggestions. I'm out of town now, so I'll address those once I get back later this week. > > Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > exceeding 1e-1.; > ; > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :). Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. > For example Green-Gauss gradients have an exclusion for internal boundaries but not for nearfield ones. @pcarruscag So, I need to make something similar to internal boundaries? The flowfield looked reasonable though except when I use the VENKATAKRISHNAN limiter where the nearfield boundary seemed to act like half permeable wall.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522:1391,message,message,1391,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898144522,1,['message'],['message']
Integrability,"Hi @TobiKattmann sorry, I must have missed your message somehow! Thanks for the input, maybe when the mesh adaptation strategy has matured a little more (or is better documented), it can be a bit more easily used. This is also in response to @fredericodpc Right now, I don't know if it is a bug or I'm just unsure of how to correctly use it, but I also have not been able to get the mesh to respect the wing surface. I've also not heard from the branch author either, so I don't know if this is being maintained publically anymore. =( It's a shame because it looked really promising for optimising the cost/accuracy of supersonic solutions!. Ideally, I think one should be able to pass in a representation of the actual surface (either through an stl surface or as a very fine mesh), which should be used as a reference surface. As a minimum, we should be able to set a maximum surface mesh turning angle or some other surface-local control.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-846386250:48,message,message,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-846386250,1,['message'],['message']
Integrability,"Hi @TobiKattmann, thanks for your review. I'll try to do what I can within this week as I don't have much time from next week. > Hi Yuki, Thanks for this contribution bouquet I have a few comments in the review. You didn't write the code initially but it might still be good idea to make the code a bit nicer overall. In case there are things that are not understandable please let me know. As for things that I don't understand, see below although I would like to separate them from this PR.; - WeightNF.dat; - I don't understand what this is for. It is read in `CAdjEulerSolver::SetIntBoundary_Jump` to calculate derivative, so it is used for adjoint calculation? My understanding is that at least discrete adjoint does not need to calculate derivative. Is it for continuous adjoint?; - VENKATAKRISHNAN limiter; - With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); - `Bad match for point 47742.	Nearest donor distance: 3.6066950142e+00.`; - Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528:1117,message,message,1117,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-884793528,2,['message'],['message']
Integrability,"Hi @aditya12398 . That would be helpful as it has been a bit difficult to identify the problem between versions of the code that have a lot of differences. As mentioned in my prev message, one of these differences is the MUSCL implementation and I am leaving this out for now. If you could ran the case attached in the following manner, would be useful:. - sending cfg files invbb_old_711.cfg and invbb_old_751.cfg (for versions 7.1.1 and 7.5.1 respectively) + mesh file blunt_91.su2; - could you run 2 simulations, one with 7.1.1 another with 7.5.1 with those cfg files pls?. MUSCL is disabled, so if we obtained very different results between those 2 simulations we have a good hint that the problem is not MUSCL. and we can then decide what to do next. Please confirm if you can do this and send me updates once you have them - thanks! I keep working on this in different fronts, more hands-on debug.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2026#issuecomment-1568256210:180,message,message,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/2026#issuecomment-1568256210,1,['message'],['message']
Integrability,"Hi @baldang, problem solved: https://github.com/su2code/SU2/commit/bba499e6bbb3a91cdec5beca94a095cf1bf4576c; I kinda found the solution here https://sourceforge.net/p/mingw-w64/mailman/message/24692038/; I don't know why this built in your fork.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1387#issuecomment-941136807:185,message,message,185,https://su2code.github.io,https://github.com/su2code/SU2/pull/1387#issuecomment-941136807,1,['message'],['message']
Integrability,"Hi @bmunguia ,; I was in the same situation as @MiracAydin1, so thanks for the hint. Nevertheless I'm having some problems. I followed your instructions to install the branch:. 1. downloaded the [feature_adapt_sst](https://github.com/su2code/SU2/tree/feature_adap_sst) branch.; 2. Used meson to configure the build; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true`; 3. Added the environment variables to the .bashrc; 4. ninja build.; `./ninja -C build install`. The build didn't show any errors, only few warnings during meson ( `gcc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C`). When I try to run the mesh_adaption (or even run simply the solver through parallel_computation.py):. `$SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6`. It immediately shows an error (without even showing the SU2 splash screen) :; `Traceback (most recent call last):`; ` File ""/usr/local/bin/mesh_adaptation_amg.py"", line 38, in <module>`; ` import SU2`; ` File ""/usr/local/bin/SU2/__init__.py"", line 14, in <module>`; ` from SU2 import amginria`; ` File ""/usr/local/bin/SU2/amginria/__init__.py"", line 4, in <module>`; ` from .interface import *`; ` File ""/usr/local/bin/SU2/amginria/interface.py"", line 41, in <module>`; ` import _amgio as amgio`; `ImportError: No module named _amgio`. Am I missing any dependencies? ; Please note that I previously compiled SU2 master branch without issues, and have already installed mpich, numpy, scipy.; Any help would be really appreciated.; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619332650:1179,interface,interface,1179,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619332650,6,"['depend', 'interface']","['dependencies', 'interface']"
Integrability,"Hi @gbaty,. I started pushing this a bit further and opened up a new PR (#424). Next step is trying to get the wrapper to build against a version of Python 3 and test with that on Travis. Let me know if you have any ideas. I'm struggling a bit with the Makefile generation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260#issuecomment-323882820:111,wrap,wrapper,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/260#issuecomment-323882820,1,['wrap'],['wrapper']
Integrability,"Hi @koodlyakshay thanks for making the changes.; By default MPI barriers are ""never"" needed, the normal communication routines already do all synchronization required. Efficiency is probably not fundamental for that routine but this solution feels too complicated somehow, can you attend tomorrow's developers meeting? (I'm getting the ""there's gotta be a simpler way"" feeling, and if we pick the brains of a few people we are certain to find it). In the meantime, if you specify the roughness as a string+double list (exactly like MARKER_HEATFLUX), which is read with `addStringDoubleListOption` you could probably simplify the logic around heatflux and isothermal markers, which would make the setup more user friendly (having to stick with an order is bound to trip someone at some point).; Also the cht interface is ""just"" an isothermal boundary, any reason not to make this feature available for that?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630788337:118,rout,routines,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630788337,8,"['interface', 'rout', 'synchroniz']","['interface', 'routine', 'routines', 'synchronization']"
Integrability,"Hi @monika1387 : at the moment, we throw errors if folks try to use a CGNS mesh that is multi-zone. SU2 currently accepts only single zone, unstructured CGNS files. It is possible to run a multi-zone calculation if you supply two separate single zone CGNS files though, I believe. Is there a particular error you are seeing that you can share? It is very common for vendors to implement CGNS differently, so depending on where you get the file, we may have compatibility issues. If so, feel free to open a new issue with the details.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-710182402:408,depend,depending,408,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-710182402,1,['depend'],['depending']
Integrability,"Hi @pcarruscag Let me give me some background, we are trying to perform resolvent analysis and for that we need to have linearized NS equations. I ran my LES simulations in SU2 and mean flow data is available in SU2 so I would like to stick to SU2 to understand if SU2 can solve the “direct"" linearized Navier-Stokes equations? ; Also, we are looking for PETSc library to use for LU decomposition. I understand SU2 uses eigen numerical library so possibly we can integrate PETSc in SU2 or perhaps we can perform outside SU2 after above step is completed to get the solved linearized matrices in SU2. I tried to explain please let me know if this make sense, else I will provide more details. ; I am referencing this paper for my work page 4-6 (https://arxiv.org/abs/2005.10964); [Optimal eddy viscosity for resolvent-based.pdf](https://github.com/su2code/SU2/files/5765838/Optimal.eddy.viscosity.for.resolvent-based.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837:463,integrat,integrate,463,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754091837,1,['integrat'],['integrate']
Integrability,"Hi @pcarruscag and @vdweide thank you very much for your troubleshooting tips and explanation! I think I was confusing 3 different settings - the base compilers (CC and CXX), the wrapped mpi compilers (MPICC and MPICXX), and the MKL pkgconfigpath. I did not realise that after updating my base compilers in my environment that the openmpi `mpicc` and `mpicxx` would automatically pick up the new `gcc` (I thought I'd have to compile new mpi wrappers). . I was able to get SU2 on our HPC compiled and running by doing (after installing the newer `gcc` and `g++` compilers):; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true; ```. What is strange is that previously, the HPC MKL appeared to be automatically picked up from the `PKG_CONFIG_PATH`. I wanted to use my own newer local copy but updating this path didn't seem to work, bet setting the `-Dmkl_root` flag fixed that.; i.e.; ```; module load openmpi/3.0.0_intel2018.2.046 ; CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/user/programs/su2/SU2-7.0.8 -Dwith-mpi=enabled -Denable-mkl=true -Dcustom-mpi=true -Dmkl_root=/home/user/programs/intel/2020_update4/compilers_and_libraries_2020.4.304/linux/mkl; ```; Thanks again for both your help! Take care.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779:179,wrap,wrapped,179,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-745142779,2,['wrap'],"['wrapped', 'wrappers']"
Integrability,"Hi @pcarruscag, just a small follow-up to my comment in the code section concerning the new adjoint implementation that might also help here (either by using it directly or just for getting some ideas). What I would like to change is in fact not the `CDiscAdjSolver` (which I find is very good) - but I'd like to propose some changes for the *interface* to the AD tool. And some subsequent stuff.; It will allow for a more direct control of derivatives which is favourable in case one deals with multiple zones, multiple sets of conservative variables, geometry coordinates in case of FSI, and so on. And of course in terms of performance as one needs only one tape that one can keep during all iterations, regardless of what their variables might be. In case you are interested, take a look at the implementation in [su2code:sc_develop](https://github.com/su2code/SU2/tree/sc_develop). I'll open the PR as soon as @talbring opened his one for his great rework on input/ouput. As for this PR, let me wait a second if we can clear up the issue concerning the registration and I'll leave a small review afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615#issuecomment-457582842:343,interface,interface,343,https://su2code.github.io,https://github.com/su2code/SU2/pull/615#issuecomment-457582842,2,['interface'],['interface']
Integrability,"Hi @pcarruscag,; I apologize for giving a poor suggestion (older version). The custom-mpi mode with all environment variables defined did not seem to work for me, as you can see from my comments on 29th of May and 8th of June.; Does the legacy build system mean using automake/make etc?. Also, I tried changing the dependency from mpi to mpich as you suggested. I changed the lines to: ; ```; mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; ```; and I got this error.; ```; meson.build:37:2: ERROR: mpich dependency does not accept ""language"" keyword argument; ```; So I removed the language part and reran the command to get the following, you can see it identifies mpich as a dependency:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=false -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu famil",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:315,depend,dependency,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,5,['depend'],['dependency']
Integrability,"Hi @pcarruscag,; thank you very much for the insight and the well thought proposed solution. I wasn't aware that there was such a loss in performance, it seems clear that something needs to be done. The only question I have is regarding the following comment . > There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I'm using this feature more and more, I was planning to extend it in the structural solver to remove the `if fsi` statements, and I also used it in the rework of the mesh solver, as defining variables at the interface only reduces greatly the memory footprint (sort of like the node-vertex structures in geometry). You mention there are options to keep this versatility, how difficult do you think would be to implement them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-507998889:646,interface,interface,646,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-507998889,2,['interface'],['interface']
Integrability,"Hi @sun5k, that looks promising :+1: ; It would be nice if you could attend the developer meetings and tell us about your plans regarding the integration of this feature.; Every Wednesday at 3pm UK, 4pm CET, https://meet.jit.si/SU2_DevMeeting; There are folks working on implementing SST-2003m, this could be a better comparison with fluent.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1100896636:142,integrat,integration,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1100896636,1,['integrat'],['integration']
Integrability,"Hi @sun5k,. I think that the restart of the solution is missing. Since for CTransLMSolver you have inherited the functions from CTurbSolver class, the restart is only applied to the turbulent solver. I solved this problem by creating another class called CTransSolver which is a copy of the CTurbSolver class but with a modified LoadRestart function. I guess that the function in the CTurbSolver class can be modified to take into account the transition solver. It depends if we want to divide the transition from the turbulence solver or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1111256246:465,depend,depends,465,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1111256246,1,['depend'],['depends']
Integrability,"Hi @talbring ,. Also I noticed there is no breakdown file being written for incompressible problems. I suspect this is because the flow boolean in the SpecialOutput_ForcesBreakdown routine only checks for EULER, NS and RANS but not the INC versions of those. . Cheers,; Akshay",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/792#issuecomment-534110882:181,rout,routine,181,https://su2code.github.io,https://github.com/su2code/SU2/issues/792#issuecomment-534110882,1,['rout'],['routine']
Integrability,"Hi @tbellosta, thanks for your message. Maybe we can first bring your SFD implementation back to life and then we can reassess the boostconv business. If that works for you, let me know when you push the branch.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022#issuecomment-1533740257:31,message,message,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022#issuecomment-1533740257,1,['message'],['message']
Integrability,"Hi @themrdjj,; Thank you for the feedback, there was already a similar report in #796 (which incidentally went stale and was closed), I will try to do something about it, or if you would like to contribute code to the project I can point you to right place to add an error message. Meanwhile my best advice is to not start a config from scratch until you know SU2 very well (and even then...) look for a test case that uses similar features and go from there.; The minimal config is the one in Quickstart, the template is more of a catalog :) I don't think we'll ever have a unified minimal config, SU2 does many things, some mutually exclusive.; Convective options are reasonably well documented here: https://su2code.github.io/docs_v7/Convective-Schemes/; The output messages before ""Begin Solver"" can be helpful (although in this particular case you would need to know what to expect). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-566642727:273,message,message,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-566642727,4,['message'],"['message', 'messages']"
Integrability,"Hi @timjim333 ,. Exactly (concerning your first question). . For the %s : In your initial post you stated that `mpirun --use-hwthread-cpus -np 12 SU2_CFD turb_ONERAM6.cfg` worked for you. So %s is simply the place-holder for the SU2 module together with the configure script. Which in your case would be `SU2_CFD turb_ONERAM6.cfg` . But `parallel_computation.py` will also call `SU2_SOL turb_ONERAM6.cfg` for you after the solver routine to create output files for visualization. ; If you take a look into the `interface.py` (as in my previous post) and the `parallel_computation.py` you'll find exactly how its done. Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-395712721:430,rout,routine,430,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-395712721,4,"['interface', 'rout']","['interface', 'routine']"
Integrability,"Hi @timjim333 ,. you can try to set an environmental variable 'SU2_MPI_COMMAND' which contains your specific mpirun command. Take a look at /SU2_PY/SU2/run/interface.py (line 66) in the source code, that might help. There the command which is called by parallel_computation.py is build. For your case it should be:; export SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -np %i %s"". I hope that helps :) Regards,; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/526#issuecomment-383032449:156,interface,interface,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/526#issuecomment-383032449,1,['interface'],['interface']
Integrability,"Hi All; I’m a bit worried about the logistics related to checking this v&v data base for every new release.; Unlike the tutorials, these cases, by their nature will be large and will require long integrations(the 2D cases might not fall on this category). This means also that significant computational resources will be required for this evaluation (about twice a year for a growing list of cases). Is it practical?; The only way that I think that it might work is that each contributor will be responsible for checking the casesthat he has introduced, before each release. Being a voluntary institution, this can not be enforced (and we do not want to enforce). How about trying to be less demanding:; In each validation case there will be a statement about the last version that it was checked with and the responsible contributor. Each contributor will receive a recommendation to check his cases before a new release, and will be able to do that and update the OK label also after the release.; Less waterproof but might be more workable.; What do you think?; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423273117:196,integrat,integrations,196,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423273117,1,['integrat'],['integrations']
Integrability,"Hi Amir,; I think you need to declare su2double CSolver::GetSA_cb1_solver(void) as virtual, i.e.:; virtual su2double CSolver::GetSA_cb1_solver(void);; I guess the message you added also does not get printed?; ""AKB: inside GetSA_cb1_solver returning cb1_adj as: ""; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-498358987:163,message,message,163,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-498358987,1,['message'],['message']
Integrability,"Hi Brain. I have uploaded the branch but having problem to compile it. I use the following configuration. ./configure --prefix=/home/msahin/SU2 -enable-mpi -enable-metis --with-cxx=mpicxx --enable-PY_WRAPPER CXXFLAGS='-O3'. but having the following error message:. ... ; ...; CXX ../src/linear_algebra/libSU2_a-CPastixWrapper.o; AR libSU2.a; make[1]: Leaving directory `/home/msahin/SU2/Common/lib'; Making all in SU2_PY; make[1]: Entering directory `/home/msahin/SU2/SU2_PY'; make[1]: *** No rule to make target `SU2/amginria/_amgio.so', needed by `all-am'. Stop.; make[1]: Leaving directory `/home/msahin/SU2/SU2_PY'; make: *** [all-recursive] Error 1. Am l missing something in the configuration?. Mehmet",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-579140612:255,message,message,255,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-579140612,1,['message'],['message']
Integrability,"Hi Brian, ; I'm sorry for the late reply, I've been using the feature_adap branch in 2D and 3D with success in the last weeks, so thanks for the amazing work. . After your last commit I recompiled everything, moreover now I'm using `$SU2_RUN/SU2_DEF` before running `mesh_adaption_amg`, so to be sure that element orientation is as expected. The tool is working nice, once the smoothing, grad, adaption values are tuned, thank you very much!. After a bit of use may I add pair of feature request, that in my opinion would improve the overall (already remarkable) quality of the `feature_adap` .; **_Feature request:_**; 1. The possibility to have boundary layer elements (QUAD PENTA) with the mesh adaption would be very much appreciated. If not possible, wouldn't it be possible to force a frozen interface between boundary layer elements?; 2. Add a ""region of interest"" where the refinement takes place. Sometimes it is not required to have sharp shocks resolved far away from the body.; 3. Do you plan to merge this feature in the master branch?. **_Bugs (or at least unexpected behavior):_**; 1. When I use the restart option, even if there is a `restart_flow.dat`, in the base folder, apparently the `mesh_adaption_amg` does not create a link into the \adap\ini\ folder, and I've to manually copy it (quite fast), to effectively enable the restart option. **_Clarification_**; 1. `PYADAP_BACK` option is really interesting, but I don't get it completely: shall I mesh the complete flowfield with higher detail (refined mesh), does this option handle only the body surface (or only the volume inside the body of interest, not the flowfield)? Is there any plan to use geometric files such as step or iges, to have the proper curvatures defined?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-637328023:798,interface,interface,798,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-637328023,1,['interface'],['interface']
Integrability,"Hi David,; Yes, I was able to figure out that and I went ahead in trying to make fsi_computation.py work with this branch. Another error (which may be a bug actually ) occurs when the wrapped function **SetInitialMesh()** is run. This directly involves the core of SU2 as I found out the error is given during the run of the function **CILUPreconditioner** (inside **matrix_structure.cpp**) which, as much I understood, builds the preconditioning matrix for the solution of the linear system at the base of the mesh deforming procedure. . SU2 uses by default **ILU** precoditioner whose relative function (see above) has remarkable differences from the Raven release (I didn't go too much into details). Same error I get if using **Jacobi** preconditioner. ; At contrary, everything seems fine if using **LU_SGS** preconditioner and the fsi_computation.py finally works. Maybe it's the case to point it out to the developers inveloved in this part of the code. About your last point, I'm developing at the moment some FSI features and I very much relied on fsi_computation.py in defining the interface with the SU2 core. I'm trying to keep it updated with the current version of SU2 for reliability reasons; I hope there won't be drastic changes in the python wrapping of the code! :). Thanks for the reply!. Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/531#issuecomment-388316476:184,wrap,wrapped,184,https://su2code.github.io,https://github.com/su2code/SU2/issues/531#issuecomment-388316476,3,"['interface', 'wrap']","['interface', 'wrapped', 'wrapping']"
Integrability,"Hi Economon,. I encountered an issue very similar to what Auzbaig reported: the error message ""OBJECTIVE_FUNCTION: invalid option value EntropyGeneration"" during optimization with SU2. (I am using SU2 version 8.0.1 ""Harrier.""). After thoroughly examining the existing Python optimization framework, I found that one of the steps in the optimization chain is generating different config.cfg files, with a focus on DV_VALUE and OBJECTIVE_FUNCTION. DV_VALUE controls the geometry deformation;; OBJECTIVE_FUNCTION determines the type of objective/constraints.; Then the framework calls SU2_CFD and SU2_DOT to obtain performance metrics or gradient information.; As you mentioned, ""You might need to run updateHistoryMap.py to register new outputs with Python."" Initially, I thought it meant simply providing a new input for OBJECTIVE_FUNCTION in the Python optimization framework. However, it seems that this may not work at the C++ level. To verify this, I ran $ SU2_CFD your_config.cfg -d and observed all available history outputs. However, I suspect that OBJECTIVE_FUNCTION cannot use every history output, meaning that the adjoint solver might not recognize some objective functions. Does this imply that additional modifications in the C++ code are required?. Additionally, I would appreciate more information regarding CUSTOM_OBJFUNC. From TestCases/user_defined_functions/lam_flatplate.cfg, I understand that CUSTOM_OBJFUNC allows combinations of existing OBJECTIVE_FUNCTIONs and can also utilize CUSTOM_OUTPUTS. The flexibility of CUSTOM_OUTPUTS seems to enable the construction of various desired variables. However, I am unsure whether using OBJECTIVE_FUNCTION= CUSTOM_OBJFUNC along with CUSTOM_OUTPUTS can entirely replace the need for additional modifications in the C++ code. Since I’m not very proficient in C++, I would greatly appreciate your guidance. Sincerely,; Tongtong",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133:86,message,message,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-2324575133,2,['message'],['message']
Integrability,"Hi Eduardo,. As I wrote #657 here my bits (thanks @economon to notify me about this issue):; The top wall, which is the symmetry wall in your case, is not a straight line (i.e. line in 2D or plane in 3D) but has a bump in it. Therefore I would say the symmetry BC is inappropriate for that geometry/mesh. ; Implementation-wise the BC_sym routine in develop assumes (but not checks) a constant unit normal over all boundary elements in a symmetry marker and I would say that this a necessary condition for a symmetry-marker. . To cite a comment from @economon from that PR #657 . > As we should always have a plane for this BC type, is this [tangent vector computation to the unit normal, Editors note] something you can check outside the loop, or complete as a preprocessing and store? Looks a little expensive to perform at every vertex during runtime. Because of that preprocessed computation/storage of the unit normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](ht",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:338,rout,routine,338,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['rout'],['routine']
Integrability,"Hi Eduardo,. both, 'symmetry plane' and 'symmetry as the slip wall' should work in the code (upon fixing this) and it should be made clear (e.g. in the config_template.cfg) what the BC is suitable for, independent of how it is named in the end. ; The simplest solution is probably the patch I provided together with a short note in the config_template (maybe even a reference to this issue), as both 'options' will work as expected (using the very same code). It will basically 'restore' the behaviour of MARKER_SYM of before the fix in #657. The downside is some more computational cost (in case of a plane) which has to be done for each vertex on the marker. I cant say to which extend this takes more time but I would guess it is not too costly. Depends on the case as well. I can do a little check with your case here. . That's it for the diplomatic part :) (Please take the following with a grain). For me a symmetry has to be a line or plane. To cite Jiri Blazek's book 'Computational Fluid Dynamics'(...) 3rd edition using a screenshot:. ![blazekbook](https://user-images.githubusercontent.com/31306376/61662377-9ab05a80-acce-11e9-85bf-5998db204d92.png). The chapter is called 'symmetry plane' which already is kinda biased. But there is no 'slip wall for viscous flow' mentioned to my knowledge. In another book (from Ferziger&Peric, which I only have in german) symmetry is only used in the context of symmetry planes as well. ; To me, symmetry BC's are also linked to visualization using mirroring. And mirroring (as the word is commonly meant) is only possible along planes and its little brother, the straight line. I can be wrong or it might be a question of research background. So how to proceed? Trial by combat might have some unpleasant aftermath for the winner so we might go the democratic way and do a poll :) . Cheers, ; Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513957018:749,Depend,Depends,749,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513957018,1,['Depend'],['Depends']
Integrability,"Hi Everyone. I'm new to SU2.; Installed on my mac (Catalina) the parallel version 7.0.2.; Also installed MPICH. I am not using bash but rather tcsh (maybe there is a problem there...); Added the following lines to .tcshrc:; setenv SU2_RUN /Applications/SU2/bin; setenv PYTHONPATH $SU2_RUN. I have tried to run the onera3D tutorial case in parallel and got the following message:; % parallel_computation.py -f inv_ONERAM6.cfg -n 2; Traceback (most recent call last):; File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in <module>; main(); File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; options.compute ); File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; the_Command = build_command( the_Command, processes ); File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in build_command; raise RuntimeError('could not find an mpi interface'); RuntimeError: could not find an mpi interface. Ideas to what can I do?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938:370,message,message,370,https://su2code.github.io,https://github.com/su2code/SU2/issues/938,5,"['interface', 'message']","['interface', 'message']"
Integrability,"Hi Folks,. I would like to collect the views of the community about something (and I apologize if this has been debated already). Context:; Once again I find myself working on a feature that will require a bit of dense algebra.; I think implementing (i.e. paraphrasing from Numerical Recipes...) that kind of routine is a waste of time because someone has done already, and they have done it well.; Moreover, we have a very inefficient implementation of small matrix-like objects (arrays of arrays) and associated operations, which also leads to code bloat due to the required allocation / initialization / destruction. Proposal:; Start using a linear algebra library such as [Eigen](http://eigen.tuxfamily.org/index.php?title=Main_Page).; For this particular library:; - The learning curve is minimal;; - Their license (MPL2) is less restrictive than SU2's;; - No link time dependencies (it is all header files);; - Compatible with AD (everything is templated);; - I like their logo... I look forward to hear your opinions on this. Best regards,; Pedro",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643:309,rout,routine,309,https://su2code.github.io,https://github.com/su2code/SU2/issues/643,2,"['depend', 'rout']","['dependencies', 'routine']"
Integrability,"Hi Giulio,. thanks a lot for your contribution, it looks very nice. . I just saw your reply to my comment below, I really appreciate if you don't mind giving me a bit more time before merging in. I was working on different developments and have a couple of deadlines coming up so I am a bit behind myself in merging with develop. . I'll try to review this as soon as I can, though. A couple of comments after I skipped through quickly:; - I have seen that in some cases there are a lot of lines that are removed and added just because of changes in the indentation. See, e.g., CIsoparametric::Set_TransferCoeff(CConfig **config, in which I saw two large blocks that have not changes but the indentation goes from spaces to tabs. This has caused some issues in the past, would you mind to take a look at it?; - About the change of name from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE. Can we hold this discussion for the future so we can give it a second thought? I think it may be important to maintain the difference between interfaces with different physics and interfaces that connect the same physics.; - I had here written a question of to what extent is the change in the physical time step iteration affecting the driver and the iteration classes. I completely understand your logic for fluid-fluid problems of transferring information at pseudo-time steps, but as I said in FSI problems this would not be adequate. I also added steady-state FSI into a separate branch, so I will take a look at potential conflicts. Thanks again for this great contribution! I'll get into this and get back to you as soon as possible!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-256047684:1029,interface,interfaces,1029,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-256047684,2,['interface'],['interfaces']
Integrability,"Hi Giulio,; Great news, thanks!; After looking at CSysMatrix more, one possibility would be to move dense matrix routines to a class that would replace/augment this CSymmetricMatrix and then CSysMatrix could use it for operations on its blocks (which are dense). But since this involves refactoring a core class of SU2 I agree more people should be involved in the discussion.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-407023516:113,rout,routines,113,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-407023516,1,['rout'],['routines']
Integrability,"Hi Heather, do you have any idea about why that regtest is failing? On travis I have the same failure on a different branch and I see that more people (#743 from Edwin's branch) had that failure too, so it doesn't depend on your modifications.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/336#issuecomment-263535022:214,depend,depend,214,https://su2code.github.io,https://github.com/su2code/SU2/pull/336#issuecomment-263535022,1,['depend'],['depend']
Integrability,"Hi Jack,. when you take a look at these routines you can see that there is a loop over all markers. Only if a marker is actually of that specific kind, there is something done. These boundaries are special two-sided boundaries. They are different from the other boundaries in that for imposing the correct values they need information from both sides of the boundary. This is why they are not in the loop with the other markers (they only require specified boundary values and information from inside the domain). If this does not answer your questions, consider reopening this issue. I'll close it for now. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/262#issuecomment-212880589:40,rout,routines,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/262#issuecomment-212880589,1,['rout'],['routines']
Integrability,"Hi Jayant,; Your figures for MG 0 are inline with what Tim reports in his 2015 paper (10-12 times increase).; As for improving it, the computation of the various residual contributions already uses pre-accumulation, so the only way I see to make that even more effective is to pre-accumulate the sum of all residuals for each edge (that would probably make the direct solver a bit faster too).; In looking at the code I noticed that some areas of the pre-processing like setting sensors, eigenvalues, etc. do not use pre-accumulation, maybe someone already tried and saw it did not make a difference? Same goes for the MG prolongation, restriction, smoothing routines.; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427559374:659,rout,routines,659,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427559374,1,['rout'],['routines']
Integrability,"Hi Jayant; Thanks for being so prompt and fast in handling this very important issue.; I’m currently in vacation at Scotland so I’ll be brief and just add few; comments:; a. As you wrote, validation is very different from test cases. Mesh,; configuration and solutions should be optimized for accuracy, experiment; reproduction and performance.; b. I think it is important to start the validation project, create a link; from the main SU2 web page to it, and than let it grow with the existing; mechanism of community contributions with approvals. Your list is very fine; for beginning. However I think we should strive to enrich it with 3D and; time dependent cases. I hope to be able to be in the loop and contribute to this important venue; Best; Eran; On Wed, Sep 19, 2018 at 8:26 PM Jayant Mukhopadhaya <; notifications@github.com> wrote:. > Hey everyone,; >; > Following the discussions at the SU2 Developers meeting this week, I; > wanted to start a conversation about compiling a comprehensive set of V&V; > cases for SU2 that can showcase it's performance in comparison to other; > solvers.; >; > I think the the NASA TMR website; > <https://turbmodels.larc.nasa.gov/index.html> is a good model to base it; > on. The idea would be to present the V&V case, provide working; > configuration and mesh files, and provide results comparing performance to; > other solvers and to higher fidelity data (when available). This allows; > people to see the performance of SU2 and replicate it, if need be.; >; > The first step would be compiling a list of cases that should be covered.; > The SU2 2014 SciTech paper; > <https://su2code.github.io/documents/SU2_AIAA_SciTech2014.pdf> would be a; > good starting point as it already had a couple of validation cases. This; > list can be bolstered with some of the NASA TMR cases, and with grid; > convergence studies. I would like to propose an initial list that the; > community can talk through and make changes as we see fit. I am mostly only; > familia",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423070900:651,depend,dependent,651,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423070900,1,['depend'],['dependent']
Integrability,"Hi Josef: glad to see you getting involved!. I am very interested in this. We have seen differing behavior sometimes between the two compiler sets, in particular when high levels of optimization are being used. In fact, you might check if the same issues appear without compiler optimization. Often, it is an initialization problem or some optimization that affects correctness. If you have the time to explore different settings and perhaps dig into the code a bit, I would very much like to isolate and remove these compiler-dependent problems with your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-268111434:527,depend,dependent,527,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-268111434,1,['depend'],['dependent']
Integrability,"Hi Ole, the first paper is actually closer to what I am aiming for with this implementation.; Mostly I am looking for an alternative to multigrid to get good convergence of the fluid side, that remains effective when many MPI ranks are used.; To apply something like this to multiphysics would require implementing it at the driver level, to include the transfer routines. However, I think for FSI this would not be competitive due to elasticity-based mesh deformation being so expensive compared to one fluid iteration. Martins et. al. use an explicit deformation method that I presume to be very quick as it operates on block structured grids.; The ""coupled"" part in this title refers to flow, turbulence, and other scalars, and even that I am not sure if it is a good idea :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183#issuecomment-773408362:363,rout,routines,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773408362,1,['rout'],['routines']
Integrability,"Hi Ole,; I see that the heat dependencies are currently being set in the adjoint fluid iteration and on the new adjoint heat iteration. Would it make sense to define them at the heat solver level to centralize things a bit? If not please add a comment to those areas of the code (a similar issue made me chase my tail sometime ago).; Otherwise all looks nice and clean! And I look forward to see the generic adjoint driver!; Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/619#issuecomment-442863838:29,depend,dependencies,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/619#issuecomment-442863838,1,['depend'],['dependencies']
Integrability,"Hi Pedro, seems like nice stuff is coming into being here.. :+1:. just had a look at both papers, especially the second. From reading through the new integration class (and assuming you are working towards Newton-like iterations for FSI), could you point me to the coupled part? I'm expecting one has to assemble a ""bigger"" residual across the disciplines (or a routine that has the same functionality as a multiplication with it, like Algorithm 4 on page 943 in the paper from Kenway, Kennedy and Martins or what you are doing in `CNewtonIntegration::MatrixFreeProduct`, I guess) :-)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183#issuecomment-773349903:150,integrat,integration,150,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183#issuecomment-773349903,2,"['integrat', 'rout']","['integration', 'routine']"
Integrability,"Hi Pedro, sorry I'd forgotten to get to that one. I've just had a look through the logic again. Inside SetAiken_Relaxation, the predicted velocity is set which I think should keep the velocity update to be within the same time iteration, but if you think this still isn't actually the case let me know. Also, I've just spotted that inside Update in CFEAIteration, the logic for dynamic and/or fsi isn't complementary, so the separate ""else if"" handling for ImplicitNewmark_Relaxation isn't actually called at all. The SetDualTime_Solver which is called earlier in the same function in turn calls ImplicitNewmark_Relaxation so this hadn't been spotted earlier. I've removed the redundant else if statement... I've had to reintroduce this back since the regression tests for discadj_fsi and discadj_fsi_airfoil failed, which was a bit surprising since they are static fsi problems and the statements removed only considered problems with Newmark time integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705:949,integrat,integration,949,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-822094705,1,['integrat'],['integration']
Integrability,"Hi Pedro, thanks for looking into this more. I had run into inconsistencies for FSI problems with relaxation which was the reason for the domain specific calls coming into the multizone driver Update function. With the changes I introduced, the velocity at the interface was being transferred correctly with and without relaxation, so I left it there but it is a bit messy. I'll test with the modified calls for the Relaxation as you suggest. I completely agree that if we can simplify the velocity transfer by just using the velocity directly, then we should. Especially since the predicted velocity is only zero order anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325:261,interface,interface,261,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-774993325,2,['interface'],['interface']
Integrability,"Hi Pedro,. I tried the other solution you suggested. I declared a new private variable inside the solver class, which I assigned as config->cb1_usrdef. I registered this as the AD input. I then set a method inside the solver class which returns this value when called.; In the Numerics class, instead of reading cb1 from Config as I used to, I read it from the Solver class, using the method mentioned above.; Now I couldn't create a Solver object inside numerics_structure.inl, since according to the compilation order the solver class is dependant on the numerics class (Solver_structure.hpp includes numerics_structure.hpp). So the compiler doesn't know about the solver class while inside the numerics.; To work around the compiler error, instead I included the solver header file inside the numerics src files (cpp). I then created the solver objects in the relevant numerics functions and called the method which returns the AD-registered cb1 variable.; This all compiles now, but the AD gradient is still returned as 0. Adding print statements to the functions inside the numerics src files revealed that they are getting a cb1 value of 0, which I assume it's because solver_adjoint_discrete.cpp is called after the numerics src files have read the value of cb1, which at that point would be 0.; Would you agree that it's probably best to update the numerics classes inside the adjoint iteration class for CDiscAdjSolver, similar to what's done inside CDiscAdjFEAIteration? Is this what you meant when you referred to the elasticity solver?. Thanks for your help,; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-494063905:540,depend,dependant,540,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-494063905,1,['depend'],['dependant']
Integrability,"Hi Pedro,; Thanks. I already have done that, it's already declared as virtual inside the CSolver class.; The message does get printed. What's strange is that it prints cb1_adj=0., even though inside solver_adjoint_discrete.cpp, cb1_adj is assigned as cb1_adj = config->GetSA_cb1(); before being registered as an AD variable, and therefore is not 0.; Thanks; Amir",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679#issuecomment-498383515:109,message,message,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/679#issuecomment-498383515,1,['message'],['message']
Integrability,"Hi Pete,. we appreciate your help on that. I just updated the branch [feature_Wall_Functions](https://github.com/su2code/SU2/tree/feature_Wall_Functions) to be up-to-date with develop. The main routines dealing with the wall functions are in [solver_direct_mean.cpp](https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_mean.cpp#L16612) and [solver_direct_turbulent.cpp](https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_turbulent.cpp#L2569). Maybe @economon can tell you what exactly is missing there. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-306912607:194,rout,routines,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-306912607,1,['rout'],['routines']
Integrability,"Hi Ruben, no worries. Integrating on the fluid side is what makes sense for matching meshes, less hassle given the availability of dual grid information, no need for MPI boiler plate, etc. The adjoint implications are being accounted for, this integration step is being recorded and overall the dependencies have not changed, the fluid nodes are still the ones defining the direction of the stress.; As you can see from the files I attached, the sensitivities are very similar for conservative/consistent interpolation cases. . It is not possible to generalise this for conservative interpolation (i.e. using the transpose of the displacement interpolation matrix to interpolate tractions) because that approach implicitly takes care of the (possible) different areas associated with fluid and solid nodes. If you transfer stresses with conservative interpolation and then integrate you get the wrong force. The conservative approach requires forces to be transferred, otherwise we start taking liberties with the meaning of the word :). Cheers,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597#issuecomment-434317633:22,Integrat,Integrating,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/597#issuecomment-434317633,4,"['Integrat', 'depend', 'integrat']","['Integrating', 'dependencies', 'integrate', 'integration']"
Integrability,"Hi Salvo,. Sorry for the delay on this one, but we wanted to get the major changes to the multi-zone framework integrated first (CDriver and CIteration). When you have a minute, can you please check that these commits are still valid with the latest develop branch?. Thanks!; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/194#issuecomment-149771915:111,integrat,integrated,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/194#issuecomment-149771915,1,['integrat'],['integrated']
Integrability,"Hi Soumen,. As Tom said, the routines are all in place and I have been putting them; together for solution interpolation from one mesh to another for unsteady; simulation as post-processing step. So probing at a particular location for; unsteady solution can be also done with this framework. The probe search; implementation is in place for 2D configuration currently. It will be; extended to 3D and probably available in the main branch in the next 2; months.; The implementation so far is in feature_MeshInterpolation branch if you; want to take a look. Sravya. On Thu, Nov 2, 2017 at 10:09 PM, Thomas D. Economon <; notifications@github.com> wrote:. > Hi Soumen: yes, this is something that the developers are actively working; > on at the moment (in particular, @sravya91 <https://github.com/sravya91>; > has been taking the lead on this). It is true that most of the ingredients; > are already available in SU2 (fast searches, interpolation routines, etc.),; > but the trick is combining them all and making it general.; >; > Do you have any other requirements beyond simple probes? I am guessing we; > should have something available in the next few months, but it's not set; > yet.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/466#issuecomment-341623660>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AHenII5B0Xtb2U_hj2vbBesf5Oc51uvzks5syqAEgaJpZM4QPYh8>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-342266341:29,rout,routines,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-342266341,4,['rout'],['routines']
Integrability,"Hi Soumen: yes, this is something that the developers are actively working on at the moment (in particular, @sravya91 has been taking the lead on this). It is true that most of the ingredients are already available in SU2 (fast searches, interpolation routines, etc.), but the trick is combining them all and making it general. Do you have any other requirements beyond simple probes? I am guessing we should have something available in the next few months, but it's not set yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-341623660:252,rout,routines,252,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-341623660,2,['rout'],['routines']
Integrability,"Hi Sun5k,; Thanks for tackling the Transition models. As far as I see, you are adopting the CScalarSolver-Base style just as is done for the Turbulence or SpeciesTransport solver (cf #1330 #1388 ) :+1: I think you can stay close to how things are handled in these solvers. The Turbulence solver has another class in the middle though: `CScalarSolver -> CTurbSolver -> CTurbSST/SASolver` I am not sure whether sth like this makes sense for transition models? (because I have no clue of Transition models). Otherwise the CSpeciesSolver is directly based on the CScalarSolver. Please limit this PR to 1 model only! So in this case just the LM model maybe. It is much easier for you to wrap this PR up with a limited scope instead of trying to do everything at once :) (and it is easier to review for everyone else) In case you then still want to tackle another one once LM is done :D then just open another PR :+1:; ; As unfinished Transition models (or models with a questionable state) are a bit of a companion of SU2 I would also ask you to provide a meaningful testcase with this PR that proves the usability of this feature. I personally like to think of a suitable case at the beginning of development, to adopt a bit a Test-Driven-Development approach but that is of course fully up to you. In case you did not know about the Developers meeting each Wednesday 4pm Berlin time, now you do. You are kindly invited to ask any questions, just show-and-tell to get some feedback etc. it is a very open round :). Happy coding, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577:682,wrap,wrap,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1016451577,2,['wrap'],['wrap']
Integrability,"Hi Tim,. Thanks!. I totally agree on the fact that Python-related functionalities could be in a separate file for code clarity. Anyway, considering only the C++ structure, those functionalities are still members of the CDriver (and all child classes). So if you are OK with the fact that having members of the same C++ class in different cpp files, I am OK too. . However, if you mean creating a new class for the Python wrapper (like CPyWrapper or whatever), and leave the CDriver ""clean"", this might be more tricky. Indeed, since the wrapper has to be a top-level class, it is better to have access to all the other main classes (config, geometry, solver, ...) and the CDriver was the perfect candidate (it instanciates all of them). So now if we create a new top-level class next to the CDriver, the direct link with all those classes is lost. Basically we will have to create accessors like CDriver::GetConfig(), CDriver::GetGeometry(), ... that will return the different containers to be used by the wrapper. Obviously this is possible but not in a short time, besides this might be a significant change in the top-level code structure. We could also think about exposing thoses CConfig, CGeometry, ... classes to Python in addition to just the driver, I already made some local tests and it worked great but this approach is less user-friendly. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-352045091:421,wrap,wrapper,421,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-352045091,6,['wrap'],['wrapper']
Integrability,"Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329096830:109,integrat,integration,109,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329096830,2,['integrat'],['integration']
Integrability,"Hi Wally,; I think that would depend, if the new scheme is part of a family that already exists it should be easier to implement, if not you do it from scratch... There is also the possibility of making life hard by trying to find common ground where there is none, e.g. the way CUSP is implemented in SU2 has something in common with the central schemes, but it did not feel right to attach an upwind scheme to the central family.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-497786734:30,depend,depend,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-497786734,1,['depend'],['depend']
Integrability,"Hi `su2code/SU2`!. This is a one-off automatically generated pull request from LGTM.com :robot:. You might have heard that we’ve integrated LGTM’s underlying CodeQL analysis engine natively into GitHub. The result is [**GitHub code scanning**](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/about-code-scanning)!. With LGTM fully integrated into code scanning, we are focused on improving CodeQL within the native GitHub code scanning experience. In order to take advantage of current and future improvements to our analysis capabilities, we suggest you enable code scanning on your repository. Please take a look at our [blog post for more information](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). This pull request enables code scanning by adding an auto-generated [`codeql.yml` workflow file for GitHub Actions](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/setting-up-code-scanning-for-a-repository#setting-up-code-scanning-manually) to your repository — take a look! We tested it before opening this pull request, so all should be working :heavy_check_mark:. In fact, you might already have seen some alerts appear on this pull request!. Where needed and if possible, we’ve adjusted the configuration to the needs of your particular repository. But of course, you should feel free to tweak it further! Check [this page](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#editing-a-code-scanning-workflow) for detailed documentation. Questions? Check out the FAQ below!. ### FAQ; <details>; <summary>Click here to expand the FAQ section</summary>. #### How often will the code scanning analysis run?; By default, code scanning will trigger a scan with the CodeQL engine on the following events:; * On every pull request —",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:129,integrat,integrated,129,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,2,['integrat'],['integrated']
Integrability,"Hi all, hi @rsanfer,. I get a segfault when running SU2_SOL on problems with multiple Zones for the develop branch. Specifically from the Testcases I tried:; ; - `turbomachinery/APU_turbocharger/Jones_rst.cfg`; - `sliding_interface/rotating_cylinders/rot_cylinders_WA.cfg` (I saw a regression test failing for @economon which I was able to reproduce). I did some debugging and I think the code is wrong in `CBaseLineSolver::LoadRestart(...)` in solver_structure.cpp starting in line 3925. Inside that routine the `geometry` container is called as `geometry[iZone]` to address the final `C(Physical)Geometry` object. I think that the addressable level is the instance level i.e. it should be `geometry[iInst]`. ; As the Jones_rst case has two zones but only one instance the object `geometry[iZone=1]` in LoadRestart refers to what is `geometry_container[iZone=1][iInst=1]` in SU2_SOL.cpp - which does not exists and should be `geometry_container[iZone=1][iInst=0]`. Unfortunately it does not fail there directly for as it reaches (I guess) valid memory and simply interprets what it finds which leads to wrong evaluation of e.g. `GetnDim()=2376` or so. . I extracted a patch (apply with `patch -p1 < _patchfile_ ` in the root of the code directory) for the current develop branch which fixes the segfault problem for the above mentioned cases but I don't know whether it works correctly if multiple Instances are computed. ; [SU2_SOL_segfault_patch.txt](https://github.com/su2code/SU2/files/2328459/SU2_SOL_segfault_patch.txt) (github does not accept *.patch files...). Is there a testcase which covers multiple zones and multiple instances. At best with nZones!=nInstances? Can somebody confirm that this is actually a bug and if the patch fixes it? I probably don't know if it occurs somewhere else, so if somebody thinks their problems are related let me know. It is no problem to do a PR if I get some feedback. The (possible) bug was introduced here https://github.com/su2code/SU2/commit/1a75ebd0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/568:501,rout,routine,501,https://su2code.github.io,https://github.com/su2code/SU2/issues/568,1,['rout'],['routine']
Integrability,"Hi all,. I guess the difficulty is about calling Config->GetGamma() function in everywhere in code (solver, numerics etc.). I have to change Gamma according to temperature in every routine and be sure ideal gas equation is consistent between Temperature and Pressure. I get stuck in this point. I am open to any help. Thanks in advance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/731#issuecomment-525189226:181,rout,routine,181,https://su2code.github.io,https://github.com/su2code/SU2/issues/731#issuecomment-525189226,1,['rout'],['routine']
Integrability,"Hi all,. I have downloaded SU2 and am testing this using Xcode. Because I am a newbie in Xcode, I can't run SU2 successfully.; When I build and run, I got the following message.; =============================================; configfile: File does not exist: inv_wedge_HLLC.cfg; Run with --help for more information.; Program ended with exit code: 105; =============================================. In my guess, I didn't designate correct path to cfg and mesh file.; But I don't know how to designate it. Sorry for wrong question, but it will be helpful for me to have the answer for this question. Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994:169,message,message,169,https://su2code.github.io,https://github.com/su2code/SU2/issues/994,1,['message'],['message']
Integrability,"Hi all,. I noticed problems when using multiple inlet files: At the template values were mixed between the inlets because there is a (in my eyes) superfluous `sort` done. So the problem is just with the template-writing and would not happen if alphabetical and nMarker_all order between the inlet marker_tags were identical. This PR fixes this, at least for the tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -We",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427:655,rout,routine,655,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427,1,['rout'],['routine']
Integrability,"Hi all,. I'm new to CFD and SU2. I'm trying to modify the c++ code to add a time-dependent mach in the compressible Euler equations (SU2 Solver: EULER) for a rocket head cone design. At about line 786 of the CEulerSolver.cpp, I want to have a slight numerical change in its mach, for example, a sine function. After I saw the example of the Adding Custom Source Terms to Euler Equations I modified the code like this:. ```; const auto dt = config->GetDelta_UnstTimeND();; su2double time = config->GetTime_Step() * dt;; su2double Alpha = config->GetAoA()*PI_NUMBER/180.0;; su2double Beta = config->GetAoS()*PI_NUMBER/180.0;; const su2double MachValue = config->GetMach();; su2double Mach = 2 * MachValue + 0.01 * sin(2 * PI_NUMBER * time);; ```. But during postprocessing I noticed that Mach becomes 2 * MachValue + 0 as the ""time"" could not be updated to the series of 0, 1, 2, 3, 4... So I'm wondering how I can build a mach that could change over time. I'm not sure what kind of syntax I should be using or how exactly to implement this mach term. . I am using SU2 7.3.1. Thank you so much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1835:81,depend,dependent,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/1835,1,['depend'],['dependent']
Integrability,"Hi all,. This is definitely good discussion... everything goes toward multi-physics nowadays, so we should always be improving the class design accordingly. I suppose this will just get more important with adding more physics, zones, and more complex time integration schemes. I would like to highlight that when the code was first released, we did not have ""zones"" at all (not until some early sliding mesh work after a couple of versions), and the CDriver and CIteration classes didn't even exist until we dreamed them up a couple of years ago. My point is that, with some proper planning, we have the creativity and the right team to develop the solution we need, and we shouldn't be afraid to make big changes when necessary. Moving quickly while leveraging the team's broad skillset is one of our biggest advantages in this project. As you all know, over the years, we continue to move toward a *_structure.cpp and *_physics.cpp mindset for how we do our abstractions/data encapsulations, with ""structure"" components reused and ""physics"" components being specialized to a certain set of governing equations. This has happened in many places, including recently with the CTransfer class, for instance, and it is likely to happen with the COutput class(es) before long. However, one area where there hasn't been much evolution is within the CIntegration classes. Apart from a couple of additions for structural problems and now the DG integration, it is largely the same as it was in the first release. Perhaps this is our opportunity to rethink and update these classes for future expansion, just as we've done for others over the years. We could rework them, move them up or down in the hierarchy, change where they're instantiated, change the inheritance, and so on. Even if they get a little more complicated (like usual), as long as they're properly abstracted, it isn't likely to bother the developers working in other areas of the code too much. In short, I think some effort spent on the CI",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329078585:256,integrat,integration,256,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329078585,1,['integrat'],['integration']
Integrability,"Hi all,. Yes, it would be wonderful to get this feature completed. I had started this a couple of years ago, but never quite got around to finishing (too many fun things to work on!). I was following this paper, which should be a straightforward implementation for us, as FUN3D has a very similar structure:. Jan-Renee Carlson, Veer Vatsa, and Jeffery A. White. ""Node-Centered Wall Function Models for the Unstructured FLow Code Fun3D"", 22nd AIAA Computational Fluid Dynamics Conference, AIAA AVIATION Forum, AIAA 2015-2758, https://doi.org/10.2514/6.2015-2758 . The key changes can be found in the following locations:; ; - CNSSolver::Compute_Wall_Functions_Mean() routine in solver_direct_mean.cpp - computes and stores an updated wall shear stress based on the chosen wall model; - CTurbSASolver::Compute_Wall_Functions() routine in solver_direct_turbulent.cpp - computes the eddy visc/nu tilde needed near the wall based on the model; - CNumerics::GetViscousProjFlux() in numerics_structure.cpp - computes the viscous flux between two nodes and will make an adjustment near the wall when the model is active; - CNumerics::GetViscousProjJacs() in numerics_structure.cpp - this part isn’t quite finished yet (something similar to the previous bullet). Let's keep the discussion going,; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-307260814:666,rout,routine,666,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-307260814,2,['rout'],['routine']
Integrability,"Hi all,. lately I was fixing restarts. Making sure the adjoint also has a correct primal restart is somewhat annoying due to the way the residuals are printed to screen. I want to change that to look like a normal screen output of all residuals. Here the old variant on top and the new below (field names need to be adapted to usual screen output); ![image](https://user-images.githubusercontent.com/31306376/133253618-e20b6be0-fd29-4c03-96b5-a70f84f06523.png). The code as of today only changes this for single zone and does not use the usual output routines (and is a bit hacky). I want to add multizone and use the output routines instead of this handwritten PrintDirectResidual routine. I'll look into both. Let me know if there are reasons against this or any other comments. ## Related Work; The printing tool box of Tim. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1371:551,rout,routines,551,https://su2code.github.io,https://github.com/su2code/SU2/pull/1371,3,['rout'],"['routine', 'routines']"
Integrability,"Hi all,; I am facing the same issue as @jf-thomas with SU2 v7.5. The only persistent problem is that updating CGNS mesh version from 3.2 to 4.3 now raises a conflict with the CGNS library version and the run fails. I acknowledge the warning message following this thread when using old CGNS versions:; ```c++; WARNING: The CGNS file version (3.21) is old and may cause high memory usage issues, consider updating the file with the cgnsupdate tool.; ``` ; However, with the updated CGNS mesh 4.3:; ```c++; *** Warning:The file being read is more recent that the CGNS library used ***; ``` ; Checking in SU2/externals/cgns/cgnslib.c where the above message is encoded, there is a comment stating that:; ```c++; /* This code allows reading version newer than the lib, as long as the 1st digit of the versions are equal */; ``` ; The same issue is manifest with SU2 v8. ; Should one only use the exact CGNS 4.0? I wonder if @jf-thomas faced this issue with v4.2 before doing the trick with hdf5?; Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569:241,message,message,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/1378#issuecomment-1816802569,2,['message'],['message']
Integrability,"Hi all,; I'm experiencing some issues with travis lately, not only with time-outs (already discussed a few times), but also with this message:. _No output has been received in the last 10m0s, this potentially indicates a stalled build or something wrong with the build itself._. _Check the details on how to adjust your build configuration on: https://docs.travis-ci.com/user/common-build-problems/#Build-times-out-because-no-output-was-received; The build has been terminated_. It appears to happen randomly, and I noticed that this happened as well to the latest develop build. Anyone that could give any input on this matter?. Thanks,; Ruben",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/524:134,message,message,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/524,1,['message'],['message']
Integrability,"Hi all,; really interesting topic going on here. As @pcarruscag just very well explained, and after quite some time working on the code, I can totally see the need for dense algebra. . I agree with @juanjosealonso and @erangit that maintaining the code portable and very easy to install should be a must. It has been a signature of SU2 since the beginning and we should continue on that line. I've had some problems before with codes that rely heavily on PETSc, so I wouldn't particularly be keen to go down that road. . **Eigen** would be really easy to integrate in SU2: they have a mirror on GitHub here: [Eigen Github repo](https://github.com/eigenteam/eigen-git-mirror) which could be easily added as a submodule in the same way as CoDiPack or MeDiPack. Given that they are only header files, there would be no need to compile any external library. And there is another very important point made by @vdweide and @pcarruscag: we need to ensure compatibility with the discrete adjoint functionality. One huge advantage of Eigen is that is fully templated: we recently differentiated a code that was heavy reliant on Eigen in an afternoon, and it worked great. While LAPACK is indeed a very mature library, I believe that it would require using external functions for every functionality, which would be a really big burden. @talbring @MaxSagebaum could add some more hints in this discussion. As an additional note, I would make sure that we keep everything open source.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459656519:555,integrat,integrate,555,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459656519,1,['integrat'],['integrate']
Integrability,"Hi all: . I'm running a time-dependent problem and need to screen output the current time and time step. I use ; ""SCREEN_OUTPUT = CUR_TIME, TIME_STEP"" .. command in the config file for the time discretization of ""TIME_DISCRE_FLOW= EULER_EXPLICIT"" for ""NAVIER_STOKES"" and ""NEMO"" solvers, and it prints out just **ZERO** for both solvers:; ....; | 6907| 0.0000e+00| 0.0000e+00|; | 6908| 0.0000e+00| 0.0000e+00|; | 6909| 0.0000e+00| 0.0000e+00|; | 6910| 0.0000e+00| 0.0000e+00|; | 6911| 0.0000e+00| 0.0000e+00|; | 6912| 0.0000e+00| 0.0000e+00|; | 6913| 0.0000e+00| 0.0000e+00|; ....; Any suggestion and help is greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1681:29,depend,dependent,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/1681,1,['depend'],['dependent']
Integrability,"Hi and thank you for this PR, I think it will be really useful.; I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1350568387:124,wrap,wrapper,124,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1350568387,1,['wrap'],['wrapper']
Integrability,"Hi everyone, . I'm facing the same problem too. I'm using the latest master version built with the python wrapper. . Seems like allMarkersID is a tuple and not a dictionary. . Thank you, ; Alice",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2129#issuecomment-1983315739:106,wrap,wrapper,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/2129#issuecomment-1983315739,1,['wrap'],['wrapper']
Integrability,"Hi everyone,. When I try to run an equivalent area calculation for a supersonic aircraft, I'm unable to obtain any results. . EQUIV_AREA= YES. EA_INT_LIMIT= ( 0, 35, 0.5 ). EA_SCALE_FACTOR= 1.0. FIX_AZIMUTHAL_LINE= 90.0. Here are the options I'm using. Are the integration limits dimensional or non-dimensionalized? How do I obtain an output equivalent area as a function of x, as in the figure below (taken from ""Adjoint-based method for supersonic aircraft design using equivalent area distributions"" by Palacios et al)?. ![image](https://user-images.githubusercontent.com/16397216/56650567-ef7b0f80-66a4-11e9-85a7-a7ec229174a6.png). The only mention of equivalent area in the output is in the history.csv file and it looks like this.; ![SU2_EQ_AREA](https://user-images.githubusercontent.com/16397216/56650782-60bac280-66a5-11e9-84f9-65c2eb582142.png). Can someone tell me where I'm going wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/673:261,integrat,integration,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/673,1,['integrat'],['integration']
Integrability,"Hi guys,; this is to merge in the sliding mesh approach as proposed in the PhD thesis; ""Models and simulation of non-ideal fluid flows in unconventional turbomachinery: Toward highly efficient next-generation green power systems"". This request mostly includes additions to the interpolator and to the transfer classes.; The config option string to identify zone interface markers was changed from MARKER_FSI_INTERFACE to MARKER_ZONE_INTERFACE.; When the domain involve more than one interface, boundaries sharing the same interface should be listed as pairs in the config string, the order of the pairs doesn't matter.; Currently the code works in parallel and it is able to treat a random number of fluid zones.; Periodic support is still missing though I am planning to work on it in a future push.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/389:362,interface,interface,362,https://su2code.github.io,https://github.com/su2code/SU2/pull/389,3,['interface'],['interface']
Integrability,"Hi hoop247,. the problem here is that the incompressible formulation used in SU2 is only valid for steady problems and thus cannot be used for this kind of application. However, you could try to use the compressible formulation in combination with the low-mach number preconditioner. I agree that there should be a more precise error message when trying to run unsteady+incompressible...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193#issuecomment-140047906:334,message,message,334,https://su2code.github.io,https://github.com/su2code/SU2/issues/193#issuecomment-140047906,1,['message'],['message']
Integrability,"Hi there,. maybe I should mention that as a part of my commits to integrate a CHT functionality to SU2 (see the pull request I opened up a month ago, if you like), I also had to implement a heat solver that can be coupled to a flow equation system. We even chose similar namings (mine is called CHeatSolverFVM). It might be interesting for you that it also can be run ""stand-alone"" for pure heat conduction problems (for solids..) in which case it is nothing else but a Poisson solver.; It's just that my naming is unnecessarily specific, I should rather rename the CHeatSolverFVM to CAdvectionDiffusionSolver and generalize the coefficients (""diffusivity"" instead of ""thermal_difffusivity"", for example). Sounds to be a good idea... :D. Anyway, feel informed :-). Ole",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/429#issuecomment-371167335:66,integrat,integrate,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/429#issuecomment-371167335,1,['integrat'],['integrate']
Integrability,"Hi!. I hope you can answer this question, because it's basically what I need for checking if I can use SU2 for my simulations or not, and I'd rather look for other CFD codes if this is not currently implemented in SU2:. I need to run a case (over time, unsteady, or steady for each timestep) for an incompressible natural convection lid-driven cavity in 3D, where the values of the BCs change for each timestep. . This test has no inlets, but it has a speed BC for the lid at the top, and BCs for the walls as well. The (time-dependent) unit vector and magnitude of the speed for the lid is tabulated, for each timestep, on a external file. The (time-dependent) temperature at each point in each wall is also tabulated, for each point in the walls and for each timestep, on a external file. So the question is: Can SU2 currently import data like this? I only saw this feature for inlets, but not for other types of BCs... is it implemented, or not?. Thanks a lot! As I said at the beginning, it will help me a lot to know if this is possible, so that I look elsewhere if it's not!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/973:526,depend,dependent,526,https://su2code.github.io,https://github.com/su2code/SU2/issues/973,2,['depend'],['dependent']
Integrability,"Hi, . I am trying to use SU2-pyamg on the server and got some errors. Let me ask some questions.; My issue is related to that in the #948. Actually, I am in the situation very similar to [https://github.com/su2code/SU2/issues/948#issuecomment-619332650](url) :. > ```; > Traceback (most recent call last):; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/mesh_adaptation_amg.py"", line 38, in <module>; > import SU2; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/__init__.py"", line 14, in <module>; > from SU2 import amginria; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/__init__.py"", line 4, in <module>; > from .interface import *; > File ""/dfs/user/takashi279/miniconda3/envs/temp_su5/bin/SU2/amginria/interface.py"", line 41, in <module>; > import _amgio as amgio; > ModuleNotFoundError: No module named '_amgio'; > ```. and followed the instructions provided as in [https://github.com/su2code/SU2/issues/948#issuecomment-619334494](url):. > The _amgio extension should be built by default. I haven't had any issues on any of the machines I've built on, so I appreciate the feedback.; > ; > Just curious, are you running with python >=3.7? The shebang in all the SU2 python scripts; > ; > ```; > #!/usr/bin/env python; > ```; > ; > uses whatever python is set to in your environment variables, but pyamg/_amgio will only build/run with python >=3.7. Could you also check if the _amgio extension was installed in your site-packages (probably located in ~/.local/lib/python3.x/site-packages)?; > ; > If it didn't build/install, you could go into extensions/AMGIO/su2io and run; > ; > ```; > python3 setup.py build_ext && python3 setup.py install; > ```; > ; > If it did build/install, try the command; > ; > ```; > python3 $SU2_RUN/mesh_adaptation_amg.py -f invCyl.cfg -n 6; > ```. After doing `python3 setup.py build_ext && python3 setup.py install`, I encountered the following error:. > ```; > (temp_su5) takashi279@turing1:/dfs/user/takashi279/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1699:666,interface,interface,666,https://su2code.github.io,https://github.com/su2code/SU2/issues/1699,2,['interface'],['interface']
Integrability,"Hi, . I have been running a simulation with CGNS mesh format from the provided test cases using the last version, SU2 - 3.2.0. The test case was Euler flow simulation over a wedge using the HLLC scheme. The point is that everything going well with the native mesh format, su2, in both parallel and serial, but with the cgns mesh format only in serial the simulation starts. In parallel, the bad termination error comes up exactly after Solution Postprocessing. I checked out with 2.0.10 and had no problem. The details are provided in the following. ``` Python; ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 1; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; Traceback (most recent call last):; File ""parallel_computation.py"", line 117, in <module>; main(); File ""parallel_computation.py"", line 62, in main; options.divide_grid ); File ""parallel_computation.py"", line 103, in parallel_computation; info = SU2.run.merge(config); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 70, in merge; merge_solution(konfig); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/merge.py"", line 96, in merge_solution; SU2_SOL( config ); File ""~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 240, in SOL; run_command( the_Command ); File ""/~/SU2/code/320/release/SU2_PY/SU2/run/interface.py"", line 277, in run_command; raise Exception , message; Exception: Path = /~/SU2/code/320/release/SU2_PY/,; Command = mpirun -n 4 /usr/local/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '1'; ```. Checked out the traceback error in the merge and interface python files, but couldn't figure it out. Is there any problem with the SU2_SOL.cpp? ; I appreciate your help for finding the source. Bests,; PDP",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/40:789,MESSAGE,MESSAGES,789,https://su2code.github.io,https://github.com/su2code/SU2/issues/40,5,"['MESSAGE', 'interface', 'message']","['MESSAGES', 'interface', 'message']"
Integrability,"Hi, . I've got an issue where on starting an SU2 6.2.0 Falcon case, the preprocessing steps run but then the output gets stuck at:. ```; ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0; ```. - and remains frozen there until I kill the job. . It seems to have happened for only 3 out of nearly 400 successful cases. They are all similar, running Euler at Mach 1.7, on 40 cores. They all have similar simple body, farfield, and and symmetry conditions. I'm not sure of the best way to diagnose this, so any guidance would be appreciated. Many thanks and kind regards, ; Tim",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/907:167,Interface,Interface,167,https://su2code.github.io,https://github.com/su2code/SU2/issues/907,1,['Interface'],['Interface']
Integrability,"Hi, . To begin with, thank you very much for your efforts and the tremendous work you put into improving the SST model!. It is very difficult for me to judge because I'm using a different time integration than the SU2, which may be critical in this regard. Moreover, my code is non-dimensional, so estimating the influence of the ""newBC"" and the ""lower limits"" is difficult for me. Can you tell the values of the ""lower limits"" relative to the freestream values? Please provide many details about the inputs in your config file (Linear solver, linear solver convergence, CFL, inviscid flux, etc')",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2334156700:193,integrat,integration,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2334156700,1,['integrat'],['integration']
Integrability,"Hi, ; So I am assuming you are not so familiar with using git, so here is what you need to do.; If you follow the link [#2296](https://github.com/su2code/SU2/pull/2296/files) and go to the section 'files changed' you can see that it's quite a lot of changes. The changes are currently added (merged) to the 'develop' branch (when you follow the link you can see this message). So what you need to do is update your github repository. ; I assume that you already have a local copy of SU2 and that you obtained this from github using ; `git clone https://github.com/su2code/SU2.git`; You switch to the develop branch:; `git checkout develop`; you update your develop branch:; `git pull`; now you have all changes, and you need to recompile.; There is an example in TestCases/py_wrapper/custom_inlet that you could use.; For completeness, here is a link to the docs: https://su2code.github.io/docs_v7/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396:367,message,message,367,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-2179501396,1,['message'],['message']
Integrability,"Hi, ; thanks for this contribution, I will get a more detailed feedback soon. A first comment about the CSymmetricMatrix class came up to my mind, from a first brief review.; There is already a CSysMatrix class and a few routines added in this pull request look redundant (matvect product for instance).; On the other hand, many of those routines (cholesky decomposition and so on) could turn out to be very useful also for other future code developments.; That said, perhaps it would be nice to collect all the matrix-related routines into the CSymmetricMatrix class (removing redundancies) to make them available at an higher level. Cheers,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-406370798:221,rout,routines,221,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-406370798,6,['rout'],['routines']
Integrability,"Hi, I think it is because our vectorization wrapper does not support ARM yet.; This makes the default SIMD array type have only 1 element, so t[1] in that unit test does not exist basically, using t[0] should pass the test.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1609#issuecomment-1103591559:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/1609#issuecomment-1103591559,1,['wrap'],['wrapper']
Integrability,"Hi, I want to build SU2 from source because I need python wrapper.; After I configured, I tried to type ""make"" to install it.; But I found an error:. ```; ......; CC libparmetis/libparmetis_a-serial.o; CC libparmetis/libparmetis_a-stat.o; CC libparmetis/libparmetis_a-timer.o; CC libparmetis/libparmetis_a-util.o; CC libparmetis/libparmetis_a-wave.o; CC libparmetis/libparmetis_a-weird.o; CC libparmetis/libparmetis_a-wspace.o; CC libparmetis/libparmetis_a-xyzpart.o; AR libparmetis.a; ar: `u' modifier ignored since `D' is the default (see `U'); make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/parmetis'; Making all in cgns; make[2]: Entering directory '/home/xxx/SU2-7.3.0/externals/cgns'; CC libcgns_a-cgns_error.o; CC libcgns_a-cgns_internals.o; CC libcgns_a-cgns_io.o; CC libcgns_a-cgnslib.o; In file included from cgns_error.c:24:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:430: libcgns_a-cgns_error.o] Error 1; make[2]: *** Waiting for unfinished jobs....; In file included from cgns_io.c:43:; cgns_io.h:32:10: fatal error: cgnstypes.h: No such file or directory; 32 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:458: libcgns_a-cgns_io.o] Error 1; cgns_internals.c:30:10: fatal error: cgnsconfig.h: No such file or directory; 30 | #include ""cgnsconfig.h""; | ^~~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:444: libcgns_a-cgns_internals.o] Error 1; In file included from cgnslib.c:51:; cgnslib.h:49:10: fatal error: cgnstypes.h: No such file or directory; 49 | #include ""cgnstypes.h""; | ^~~~~~~~~~~~~; compilation terminated.; make[2]: *** [Makefile:472: libcgns_a-cgnslib.o] Error 1; make[2]: Leaving directory '/home/xxx/SU2-7.3.0/externals/cgns'; make[1]: *** [Makefile:398: all-recursive] Error 1; make[1]: Leaving directory '/home/xxx/SU2-7.3.0/externals'; make: *** [Makefile:440: all-recursive] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1629:58,wrap,wrapper,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/1629,1,['wrap'],['wrapper']
Integrability,"Hi, I was having a few issues installing the Python wrapper (which strangely happened to work for some of my systems) and I followed the error back to SU2_PY/pySU2/Makefile.am, where a Python 2.7 path is still hardcoded. Is this an intentional remainder?. I tried to use the [fix documented back in V5](https://github.com/su2code/SU2/issues/447) but I've not had any success yet. I'm still troubleshooting (and may have a few incorrect paths still) but just to hear the official word here before I have another go. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-476708929:52,wrap,wrapper,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-476708929,1,['wrap'],['wrapper']
Integrability,"Hi, I was trying to update the residuals of the tutorial switching to master in the regression.yml doing this:; ![image](https://user-images.githubusercontent.com/98025159/212277029-f131d8f7-0e69-451b-a5ea-640ddde04d68.png); but for some reason I am not allowed to do it. I got this message in my local machine. ![image](https://user-images.githubusercontent.com/98025159/212276655-717430dd-23d5-4f4a-b16f-631f5e95b2aa.png). Do you know how this can be fixed? @pcarruscag @bigfooted . Thanks you so much in advance !!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886#issuecomment-1381491020:283,message,message,283,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886#issuecomment-1381491020,1,['message'],['message']
Integrability,"Hi, I'm opening a new thread since it seems that this issue isn't directly related to the AMG mesh refinement itself, but feel free to close or move this to a more appropriate place @pcarruscag . I'm having an issue when running `SU2_CFD` in the `feature_adap` branch (so this means that it also fails when trying to run the mesh refinement script). It seems to run fine for the `TestCase/euler/naca0012` but when I try it on my mesh I get a `UCX ERROR`. On running: `mpirun -n 40 --use-hwthread-cpus /opt/su2/SU2v7_adap/bin/SU2_CFD test.cfg`, I seem to get variations on this message in my screen output:; ```; | 49| -2.095057| 0.015781| 0.001431| 0.000000| 9.1667e+04|; | 50| -2.140503| 0.015781| 0.001431| 0.000000| 9.1667e+04|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; |Paraview binary |flow.vtk |; |Paraview binary surface |surface_flow.vtk |; [1609922278.175246] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=56) failed: Bad address; [1609922278.175301] [super:1134625:0] sock.c:344 UCX ERROR recv(fd=54) failed: Connection reset by peer; [1609922278.175551] [super:1134625:0] sock.c:344 UCX ERROR sendv(fd=-1) failed: Bad file descriptor. SU2_CFD: ../externals/parmetis/libparmetis/match.c:243: libparmetis__Match_Global: Assertion `k >= firstvtx && k < lastvtx' failed.; [super:1134138] *** Process received signal ***; [super:1134138] Signal: Aborted (6); [super:1134138] Signal code: (-6); [super:1134138] [ 0] /lib64/libpthread.so.0(+0x12b20)[0x7fb93d021b20]; [super:1134138] [ 1] /lib64/libc.so.6(gsignal+0x10f)[0x7fb93c1507ff]; [super:1134138] [ 2] /lib64/libc.so.6(abort+0x127)[0x7fb93c13ac35]; [super:1134138] [ 3] /lib64/libc.so.6(+0x21b09)[0x7fb93c13ab09]; [super:1134138] [ 4] /lib64/libc.so.6(+0x2fde6)[0x7fb93c148de6]; [super:1134138] [ 5] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9be03]; [super:1134138] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:577,message,message,577,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['message'],['message']
Integrability,"Hi, Komahan, ; I also noticed this error in fsi_computation.py. And this error was fixed by adding a periodic boundary condition. For example: ; Adding one line in parser part:; `parser.add_option(""--periodic"", dest=""periodic"", default=""False"", help=""Define whether the problem has periodic boundary conditions"", metavar=""PERIODIC""); `; And the Line 109 changes to; ` FluidSolver = pysu2.CFluidDriver(CFD_ConFile, 1, FSI_config['NDIM'], options.periodic, comm)`. However, when I want to run the basic fsi coupling of two-dimensional pitching-plunging NACA 0012 airfoil by using the 'TESTER' CSD Solver 'PitchPlungeAirfoilStructuralTester', another error occurs. If I run by typing:; `fsi_computation.py -f FSICoupler_config.cfg`; This gives the following error:; `***************************** Initializing fluid solver *****************************; ('A TypeError occured in pysu2.CSingleZoneDriver : ', TypeError(""in method 'new_CFluidDriver', argument 5 of type 'SU2_Comm'"",)); ERROR : You are trying to launch a computation without initializing MPI but the wrapper has been built in parallel. Please add the --parallel option in order to initialize MPI for the wrapper.; `. If I run in parallel by typing:; 'fsi_computation.py -f FSICoupler_config.cfg --parallel'; This works without error but the program stops at Mapping fluid-solid interfaces; `***************************** Mapping fluid-solid interfaces *****************************; Building interpolation matrices...; `. Here I upload the config files and the mesh, hope someone can notice those bugs and help to solve. Best!. [2d_coupled_fsi.zip](https://github.com/su2code/SU2/files/3790605/2d_coupled_fsi.zip); includes:; FSICoupler_config.cfg, NACA0012RANS_FullHexa.su2, StructuralTester_config.cfg, SU2_config.cfg",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/642#issuecomment-548054290:1061,wrap,wrapper,1061,https://su2code.github.io,https://github.com/su2code/SU2/issues/642#issuecomment-548054290,4,"['interface', 'wrap']","['interfaces', 'wrapper']"
Integrability,"Hi, all. This PR is resuming the #1592 I'm not familiar with the git, so the branch is unfortunately merged. ""[WIP] Develop for Langtry and Menter transition model. https://github.com/su2code/SU2/pull/1592"" was merged while trying to update my remote repository to v7.40. I'm not good at using GitHub, so I'm sorry for this situation. My remote repository(forked) is not synchronized with v7.40, and I don't know what the problem is. So, I will delete the forked repository and fork it again to PR with the same name and content. Fortunately, the LM model updated to v7.40 obtained the same residuals and results as the previous v7.3.1. ## Current State . Code is well running and, validation is almost done. V&V cases: T3A, T3A-, NLF. Flow conditions are the reference from: https://doi.org/10.2514/6.2022-3679. The grids of T3A and NLF cases are provided by [TMW](https://transitionmodeling.larc.nasa.gov/workshop_i/)(Transition Model Workshop). And I made the grid of T3A- myself. To validate the LM model, the simulation results of SU2 are compared with the results of Fluent19.0 with a similar numerical setting. Here is the numerical scheme : . <html xmlns:m=""http://schemas.microsoft.com/office/2004/12/omml""; xmlns=""http://www.w3.org/TR/REC-html40"">. <head>. <meta name=ProgId content=PowerPoint.Slide>; <meta name=Generator content=""Microsoft PowerPoint 15"">. <!--tr; 	{mso-height-source:auto;}; col; 	{mso-width-source:auto;}; td; 	{padding-top:1.0px;; 	padding-right:1.0px;; 	padding-left:1.0px;; 	mso-ignore:padding;; 	color:windowtext;; 	font-size:18.0pt;; 	font-weight:400;; 	font-style:normal;; 	text-decoration:none;; 	font-family:Arial;; 	mso-generic-font-family:auto;; 	mso-font-charset:0;; 	text-align:general;; 	vertical-align:bottom;; 	border:none;; 	mso-background-source:auto;; 	mso-pattern:auto;}; .oa1; 	{border:1.0pt solid black;; 	vertical-align:top;; 	padding-bottom:3.6pt;; 	padding-left:7.2pt;; 	padding-top:3.6pt;; 	padding-right:7.2pt;}; .oa2; 	{border:1.0pt solid blac",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751:371,synchroniz,synchronized,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751,1,['synchroniz'],['synchronized']
Integrability,"Hi, please post the commands you are running followed by the output of meson, with all the iterations I don't understand what is going on. Meson does not care about the variables MPICC and MPICXX, it cares about CC and CXX.; It then gets the include directories and linker arguments from the pkgconfig file for MPI. If you want to bypass pkgconfig you set CC=some/path/mpicc and CXX=some/path/mpicxx, and use -Dcustom-mpi=true when calling meson.; Depending on how they are configured it may work or it may give you undefined references, in which case you can try LIBS=""-lmpi"" LDFLAGS=""-lmpi"" before running meson (or something like that, I don't know much about environment variables). If the wrappers don't find mpi.h I would ask the administrator for instructions, then after they say it is your fault and don't solve the problem (my experience with that kind of people anyway) you can try the INCLUDE or INCLUDES variable (not sure) or directly use CXXFLAGS=""-I\some\path\mpi\include"". I've used 3 hpc systems and the recipe was never the same so... see if there is system-specific advice.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431:448,Depend,Depending,448,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744658431,2,"['Depend', 'wrap']","['Depending', 'wrappers']"
Integrability,"Hi, thank you for your help. Could you please give more details about unnecessary files?. If you mean files related to cmake, I think they are generated automatically when CoolProp is compiled by cmake submodule in meson. I will try to compile without these files. If I succeed, I will remove them. PENG YAN, PhD student. Department of Aerospace Science & Technology. Politecnico di Milano; ________________________________; From: Nijso ***@***.***>; Sent: Wednesday, October 5, 2022 21:31; To: su2code/SU2 ***@***.***>; Cc: Peng Yan ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] [WIP]Coupling of SU2 and CoolProp (PR #1782). could you clean up unnecessary files first, please?. —; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1782#issuecomment-1268867160>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ATJ4GKEET6UOH5CLSYXW5RLWBXJPVANCNFSM6AAAAAAQ53HAJY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1268875761:987,Message,Message,987,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1268875761,1,['Message'],['Message']
Integrability,"Hi, this is an SU2 user who want to use parallel_computation.py to simulate the QuickStart configuration file.; When I access the QuickStart folder and type “parallel_computation.py -f inv_NACA0012.cfg -n 4”, the parallel computation do not work but everything repeat 4 times. The same solution also appear 4 times and the speed become lower. ```; | 0| 1.1562e+00| -1.026860| 0.201330| 0.082117|; | 1| 1.0859e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1016e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1172e+00| -1.169122| 0.263458| 0.037718|; | 1| 1.1562e+00| -1.169122| 0.263458| 0.037718|; | 2| 1.0833e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1042e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1354e+00| -1.236203| 0.301817| 0.029207|; | 2| 1.1458e+00| -1.236203| 0.301817| 0.029207|; | 3| 1.0742e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1055e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 3| 1.1172e+00| -1.327201| 0.320840| 0.024965|; | 4| 1.0906e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.0844e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1125e+00| -1.419001| 0.329132| 0.023806|; | 4| 1.1187e+00| -1.419001| 0.329132| 0.023806|; | 5| 1.0859e+00| -1.513907| 0.332101| 0.023194|; ```. However, when I type this ""mpirun -np 4 SU2_CFD inv_NACA0012.cfg"" the parallel computing can work normally.; I am sure I installed mpich and enabled python wrapper.; How can I solve this problem of those repeatition?. Thank you very much!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1688:1391,wrap,wrapper,1391,https://su2code.github.io,https://github.com/su2code/SU2/issues/1688,1,['wrap'],['wrapper']
Integrability,"Hi, we don't have an option to ""keep all files"", the intended behaviour in steady state is to have only the last solution.; You could emulate what you want via the python wrapper by running some steps and them saving the files manually.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1463#issuecomment-986002446:171,wrap,wrapper,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1463#issuecomment-986002446,1,['wrap'],['wrapper']
Integrability,"Hi,. After the ""Update IO"" on April 17 (4c4c296) commit, the Yplus seems to be not right in the output files. The skin friction has been split in x,y and z components and after that I noticed that the y+ in the outputs started to be strange. It's may be a MPI synchronization issue. And just another quick question: Is there any motivation to change the names from ""Pressure_Coefficient"" to ""C<sub>p</sub>"" in the output?. Best,. Cleber.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283:260,synchroniz,synchronization,260,https://su2code.github.io,https://github.com/su2code/SU2/issues/283,1,['synchroniz'],['synchronization']
Integrability,"Hi,. I am running shape optimization on the HPC ARCC cluster we have here at U of Cincinnati. Running it normally through a shell script with sbatch commands gives the following error:. ```; The application appears to have been direct launched using ""srun"",; but OMPI was not built with SLURM's PMI support and therefore cannot; execute. There are several options for building PMI support under; SLURM, depending upon the SLURM version you are using:. version 16.05 or later: you can use SLURM's PMIx support. This; requires that you configure and build SLURM --with-pmix. Versions earlier than 16.05: you must use either SLURM's PMI-1 or; PMI-2 support. SLURM builds PMI-1 by default, or you can manually; install PMI-2. You must then build Open MPI using --with-pmi pointing; to the SLURM PMI library location. Please configure as appropriate and try again.; ```. Since this was using srun, I found a way to by-pass this issue by changing:; https://github.com/su2code/SU2/blob/d0e10f8a365f61ceaaeb5dd822da83f06394e087/SU2_PY/SU2/run/interface.py#L58. to; `mpi_Command = 'mpirun -n %i %s'`. which works fine (for single node). A better way would be:. `mpi_Command = 'mpirun %s'`. but then I get the following error:. ```; File ""/home/baigan/SU2/bin/SU2/run/interface.py"", line 277, in build_command; the_Command = mpi_Command % (processes,the_Command); TypeError: not all arguments converted during string formatting; ```. I see in interface.py that using srun was the way SU2 was expected to run on SLURM. But since it doesn't I am curious what is the way other people are running if they use SLURM. This PMIx support issue may be specific to the cluster I am using.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1032:403,depend,depending,403,https://su2code.github.io,https://github.com/su2code/SU2/issues/1032,4,"['depend', 'interface']","['depending', 'interface']"
Integrability,"Hi,. I am trying to install SU2 from source, on a cluster that has no internet access. Firstly, is it possible to install SU2 in this scenario? Secondly, can you suggest a way to do this without running into dependency issues? I tried to find this information but could not get it. I will appreciate your help/suggestions regarding this. Regards; Suman",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955:208,depend,dependency,208,https://su2code.github.io,https://github.com/su2code/SU2/issues/955,1,['depend'],['dependency']
Integrability,"Hi,. I am trying to run SU2 on parallel, and MPI is installed and on path in system variables. I have also tried enforcing with meson with the commands said in the website, but the system does not take it either, as in it does not recognize meson commands also, when it is in system variables as well. ; When I installed SU2, it had shown the message of MPI not found. Is there any other way to make it work?. Thank you beforehand!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1233:343,message,message,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/1233,1,['message'],['message']
Integrability,"Hi,. OK, there were actually 2 problems here. One is that the species mass fractions were not transported across the zone interface. The other is that for MARKER_ANALYZE, we did not add species information, but later in the code we assumed that it was present. Both are now fixed in the feature branch, but it will be a while before it ends up in the master version. In the mean time, you could clone the SU2 git repository and then do a git checkout feature_species_multizone and compile the fixed branch yourself.; Thanks for spotting the problem!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1818#issuecomment-1317030646:122,interface,interface,122,https://su2code.github.io,https://github.com/su2code/SU2/issues/1818#issuecomment-1317030646,1,['interface'],['interface']
Integrability,"Hi,. here is the contents of config.log:. ```; This file contains any messages produced by compilers while; running configure, to aid debugging if configure makes a mistake. It was created by SU2 configure 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. $ ./configure --prefix=/gshare/work/hpascalj/CodeSU2-master --with-CGNS-lib=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib --with-CGNS-include=/gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include. ## --------- ##; ## Platform. ##; ## --------- ##. hostname = master; uname -m = x86_64; uname -r = 2.6.32-279.el6.x86_64; uname -s = Linux; uname -v = #1 SMP Wed Jun 13 18:24:36 EDT 2012. /usr/bin/uname -p = unknown; /bin/uname -X = unknown. /bin/arch = x86_64; /usr/bin/arch -k = unknown; /usr/convex/getsysinfo = unknown; /usr/bin/hostinfo = unknown; /bin/machine = unknown; /usr/bin/oslevel = unknown; /bin/universe = unknown. PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /gshare/soft/star-ccm+/STAR-View+9.02.007; PATH: /gshare/soft/star-ccm+/STAR-CCM+9.02.007/star/bin; PATH: /opt/xcat/bin; PATH: /opt/xcat/sbin; PATH: /usr/lib64/qt-3.3/bin; PATH: /opt/pbs/default/bin; PATH: /opt/pbs/tools/bin; PATH: /usr/lpp/mmfs/bin/; PATH: /usr/local/bin; PATH: /bin; PATH: /usr/bin; PATH: /usr/local/sbin; PATH: /usr/sbin; PATH: /sbin; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: .; PATH: /gshare/soft/init; PATH: /gshare/soft/scripts; PATH: . ## ----------- ##; ## Core tests. ##; ## ----------- ##. configure:2465: checking build system type; configure:2479: result: x86_64-unknown-linux-gnu; configure:2499: checking host system type; configure:2512: result: x86_64-unknown-linux-gnu; configure:2532: checking target system type; configure:2545: result: x86_64-unknown-linux-gnu; configure:2587: checking for a BSD-compatible install; configure:2655: result: /usr/bin/install -c; configure:2666: checking whe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:70,message,messages,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['message'],['messages']
Integrability,"Hi,. i tried to compile SU2 v7.0.1 on Windows 10.; For this i followed your despription in Docs/Build from Source/Build SU2 on Windows. I installed MS MPI and MS MPISDK 10.1.2, MinGW 8.1.0, pkg-config 0.26 - 1 and swigwin 4.0.1. The command for meson is:; python meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled --prefix=""D:\\Programs\\SU2 CFD\\SU2-7.0.1\\bin"". The result is the following:; git command not found. Using fall-back method to init submodules; The Meson build system; Version: 0.52.999; Source dir: D:\Programs\SU2 CFD\SU2-7.0.1; Build dir: D:\Programs\SU2 CFD\SU2-7.0.1\build; Build type: native build; Project name: SU2; Project version: 7.0.1; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: GNU ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: GNU ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Name\AppData\Local\Programs\Python\Python38\python.exe); Run-time dependency MPI for c found: YES; Run-time dependency MPI for cpp found: NO. meson.build:37:2: ERROR: Dependency ""mpi"" not found. Can you help me what is wrong here?; Which settings do you use to compile SU2 on Windows 10? Did you change any meson.build files?. Thank you very much. Kind Regards; KleineKampfzwergin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888:1208,depend,dependency,1208,https://su2code.github.io,https://github.com/su2code/SU2/issues/888,3,"['Depend', 'depend']","['Dependency', 'dependency']"
Integrability,"Hi,. thanks for bringing it up here. It seems to be some top-level (merge?) error that occured when putting together v7. ; The interface data exchange apparently is just not called. I'll push a fix for this, open up a draft PR and then we can check if everything is alright again for compressible flows as well. Ole",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/838#issuecomment-564970570:127,interface,interface,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-564970570,1,['interface'],['interface']
Integrability,"Hi,. this is just a small chore which cleans LoadRestart routines and strengthens the similarities between the function. Declare vars where needed (instead of the top of the func), make things const and some anticipation of clang-format stuff (without explicitly running it over that file); This was originally done in #1388 but i dont want to pollute that PR with unrelated stuff. I also added a `nVarTurb` Variable which can be accessed via the Config. Might be handy in some places, instead of always going through the full enum class TURB_MODEL. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1450:57,rout,routines,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1450,1,['rout'],['routines']
Integrability,"Hi,; I just had a few (very minor) comments.; Regarding the main contribution, everything makes sense to me and I didn't find any relevant issue.; This is a very nice contribution and the implementation is quite clear, we can go ahead and merge this in soon. Regarding the matrix stuff, perhaps we could start having a new, general, matrix class in Common and then extend it to parallel in future pushes.; It may not be ideal, but at least we'll get started.; I am just afraid that if we leave those potentially useful routines there, in the interpolator, we will soon forget about them (of course it doesn't have to be addressed in this PR but we should really discuss about this). ciao,; Giulio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-407014370:519,rout,routines,519,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-407014370,2,['rout'],['routines']
Integrability,"Hi.; So I have lots of good news. I was able to build SU2 with the recommended changes in the meson.build file, (thank you, @pcarruscag!):; > ```; > su2_deps += blas_dep; > su2_deps += dependency('lapack'); > ```; using both, blas and openblas. For blas I used `-Dblas-name=blas` as an extra argument passed to meson. Mind you, I didn't use the `meson.py` script or `./ninja` but instead used the preinstalled versions on my system. I had also cloned the `fix_python_3.8` branch instead of master so there are quite some changes I had to do to successfully build it. I also noticed that openblas uses ~17 MBs extra install space, which I think is because of additional optimizations over the standard preinstalled blas package (just a speculation). So I think I will be using openblas for now instead of blas. But blas works, just in case someone might be wondering. Thank you all for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632352572:185,depend,dependency,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632352572,1,['depend'],['dependency']
Integrability,Hi; I have noticed that the distance function in SU2-6 is based on the distance to the vertices on solid wall which is not accurate for the anisotropic meshes produced by PYAMG for RANS simulations. This seems to be corrected in version SU2-7 but PYAMG currently has interface for only SU2-6 version. Is there gone be any update on the PYAMG side to use version SU2-7?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-578501709:267,interface,interface,267,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-578501709,1,['interface'],['interface']
Integrability,"Hm, good question why the builds are not running. It should not depend on the LGTM things or CodeFactor at all, they are independent.; My suggestion would be to quickly resolve the conflicts with origin/develop and push again. I could imagine that this hinders the regression tests to run. I briefly went over the conflicts and they seemed to easy to fix (on the first glance). You also have a merge request into develop and didn't touch the regression.yml so I see no problems on that side. The Regression tests also worked in the past so lets hope the merge origin/develop helps 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856:64,depend,depend,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-889854856,1,['depend'],['depend']
Integrability,How do you think about to search for questionable null pointer checks a bit more also by the GitHub interface?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/26#issuecomment-307590133:100,interface,interface,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/26#issuecomment-307590133,1,['interface'],['interface']
Integrability,How to wrapper SU2 code in a namespace automatically?,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1410:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1410,1,['wrap'],['wrapper']
Integrability,"How was this mesh made? If I remove the internal interfaces from the mesh, the simulation still crashes. So the mesh that contains the interfaces is not created in a correct way.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2336#issuecomment-2393012696:49,interface,interfaces,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/2336#issuecomment-2393012696,2,['interface'],['interfaces']
Integrability,"How well does a restart work in general for multizone? I restart from a converged solution and the result at the zone interface shows high residuals, and I do not recover the exact residual values. The solution looks fine everywhere except at the zone interface. This image below shows the residuals for velocity.; [EDIT: high residuals is relative, it is still 1e-12, but it is higher than what it should be]; ![screenshot](https://user-images.githubusercontent.com/7050568/202928587-22acde97-ecc9-4e3b-9377-1ea95a98a129.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1821#issuecomment-1321255158:118,interface,interface,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1821#issuecomment-1321255158,2,['interface'],['interface']
Integrability,"I agree with both of you, that OBJECTIVE_FUNCTION should be a bit more descriptive. ; Following the format of other adjoint options (CONV_NUM_METHOD_ADJFLOW, LIMIT_ADJFLOW), how about OBJFUNC_ADJFLOW or FUNCTIONAL_ADJFLOW? . Regarding the format of OPT_OBJECTIVE, what I have working in another branch (which I have been sitting on pending figuring out these types of issues and more testing) is a format like:; OPT_OBJECTIVE = DRAG*0.1; LIFT*2.0; COMBINE_OBJECTIVE = YES; Where the associated adjoint settings are:; OBJECTIVE_FUNCTION = DRAG, LIFT; OBJECTIVE_WEIGHT = 0.1, -2.0. The effect of COMBINE_OBJECTIVE is a flag to switch between treating the objectives separately (each objective and its gradient is evaluated separately and the python scripts loop sequentially over the objectives, or if this option is 'YES' then a 'COMBO' value is output to the history file and the gradient is computed all-at-once (I can explain that more offline if necessary)). At the moment this only works for linear combinations of existing objectives, so the sample objective Francisco listed would be beyond that. . What do you think of this as an option structure for minimizing 0.1*DRAG-2.0*LIFT:; OPT_OBJECTIVE = COMBINATION; ...; OBJFUNC_ADJFLOW = COMBINATION; ..; COMBO_OBJDEF = DRAG, LIFT; COMBO_OBJWEIGHT = 0.1, -2.0; Where this would still be compatible with looping over sequential objectives in the shape optimization (that is really just a fairly small update to the python, and has some benefits depending on how many constraints you have), and both the adjoint and optimization would refer to OBJDEF if 'COMBINATION' is set as the objective.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187280368:1497,depend,depending,1497,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187280368,1,['depend'],['depending']
Integrability,"I agree with the proposed changes, but I also think this could go farther. Some of the most common issues for users involve misuse of the *_ORDER options, dissipation coefficients, and limiters. Overall, it is still not very clear for a user how the centered schemes work. For instance, Lax is always first order and JST is always second order, but sometimes there are not error messages when trying to change the ""ORDER"" option when using these schemes. Also, if we rename the coefficients for JST as proposed, shouldn't we also separate the first coefficient that is only used for Lax? It would make treating the dissipation more clear.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451#issuecomment-335205189:379,message,messages,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/451#issuecomment-335205189,2,['message'],['messages']
Integrability,"I also found out the hard way that `TOTAL_HEATFLUX` was dimensional, but one additional thing to consider here is that if I call `CDriverBase::GetMarkerNormalHeatFlux` in a Python-wrapped code then I think this PR would cause the returned heat flux to be nondimensional, which can be a nuisance if using it for CHT while running in nondimensional mode. If for FSI, `CDriverBase::GetMarkerFlowLoad` is the dimensional flow load, then this PR would also be inconsistent with that; but if that function returns nondim. loads then this update makes much more sense (I am not sure if it's nondim or not).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1679732658:180,wrap,wrapped,180,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1679732658,1,['wrap'],['wrapped']
Integrability,"I am an SU2 user simulating config_incomp_turb_sa.cfg. I would like to define a UDF to simulate an airfoil vibration dynamics.; the original configuration feature is:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= (0.25 0.0 0.0); PITCHING_OMEGA= (0.0 0.0 14.91675); PITCHING_AMPL= (0.0 0.0 8.0); ```; The pitching amplitude is a fixed number. however, in my simulation task, i would like to build a UDF to show an increasing pitching amplitude, which depends on the value of the current timestep. I would like to know if there is a related testcase that shows how a UDF is written. Thank you very much.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1673:454,depend,depends,454,https://su2code.github.io,https://github.com/su2code/SU2/issues/1673,1,['depend'],['depends']
Integrability,"I am attempting to install SU2 master branch and/or feature_NEMO branch on a HPC cluster (https://arc.vt.edu/tinkercliffs/). The modules that I am loading prior to installation are listed below:; GCC/10.2.0; OpenMPI/4.0.5-GCC-10.2.0; CMake/3.18.4-GCCcore-10.2.0; Ninja/1.10.1-GCCcore-10.2.0; Python/3.8.6-GCCcore-10.2.0. My meson command is:; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-mpp=true. The ninja subcommand fails because it fails to link various targets (SU2_GEO/src/SU2_GEO, SU2_DOT/src/SU2_DOT, SU2_DEF/src/SU2_DEF, SU2_SOL/src/SU2_SOL, SU2_CFD/src/SU2_CFD) and then proceeds to Linking static target SU2_CFD/src/libSU2core_AD.a where the message appears: 'ninja: build stopped: subcommand failed.'. The reason for failing to link the targets is common in all instances and is shown as '/apps/easybuild/software/tinkercliffs-rome/libevent/2.1.12-GCCcore-10.2.0/lib64: pread failed: Is a directory'. Please let me know if there's a way to get around this issue. . Thanks in advance. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: OpenMPI 4.0.5; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1278:682,message,message,682,https://su2code.github.io,https://github.com/su2code/SU2/issues/1278,1,['message'],['message']
Integrability,I am fine with this request from a conceptual point of view. Once we complete the alignment with develop and the full integration with Mutation++ we might need to review the config structure according to the discussions we had sometime ago. I am attaching here a snapshot illustrating where we would like to head with it. We will need to review it especially considering the efficiency of the approach that uses Mutation++ but allow introducing a custom mechanism of reaction in CHEMKIN format.; ![config-01](https://user-images.githubusercontent.com/22177881/83354211-4561c280-a34f-11ea-9920-f6f066b72d14.png); ![config-02](https://user-images.githubusercontent.com/22177881/83354220-47c41c80-a34f-11ea-9022-b49f132abf88.png),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242:118,integrat,integration,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010#issuecomment-636475242,1,['integrat'],['integration']
Integrability,"I am getting the exact same error when I try to run it out of the box - even though if I add the restrictions I get a convergence.; I tried to run it multithreaded and got very different results and in some case crash with reboot.; Then I looked closer at the result - the result from quick start should look very similar to DSN_001, but it doesn't - could the problem be in the python wrapper since that is basically the only difference between DSN_001 and quick start?; ![dsn_001](https://user-images.githubusercontent.com/12813438/51088528-097d8b80-1761-11e9-8c3e-81acee6beb6a.jpg); The last design before crash:; ![dsn_006](https://user-images.githubusercontent.com/12813438/51088530-0c787c00-1761-11e9-9b19-3204005e897d.jpg)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/559#issuecomment-453849671:386,wrap,wrapper,386,https://su2code.github.io,https://github.com/su2code/SU2/issues/559#issuecomment-453849671,1,['wrap'],['wrapper']
Integrability,"I am having issues with grid partitioning for a large case I am trying to run in parallel. I have a 3D grid for a sharp cone with 86 million cells, and I suspect that I am running into a memory issue with ParMETIS. I get a series of errors of the form ""PARMETIS ERROR: Poor initial vertex distribution. Processor 384 has no vertices assigned to it!"" and then this message at the end of partitioning:. ""Finished partitioning using ParMETIS (0 edge cuts).; Communicating partition data and creating halo layers.; 0 interior elements including halo cells.; 0 vertices including ghost points."". Naturally, when the case tries to run, it then gives me a segfault. I have tried running the case with different numbers of processors (512, 864, 1024) and I have also tried leaving each node with 50% of its cores idle for more available memory in each node (maintaining the same overall number of active processors) but I still seem to get the same problem. Any suggestions?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/479:364,message,message,364,https://su2code.github.io,https://github.com/su2code/SU2/issues/479,1,['message'],['message']
Integrability,I am merging this in now. Please have a look at the documentation https://su2code.github.io/docs/Build-SU2-From-Source. Let me know if you have any problems with adding new files and/or external dependencies.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-521112696:195,depend,dependencies,195,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-521112696,1,['depend'],['dependencies']
Integrability,"I am not entirely sure, but as far as I know SU2 has not been tested on cygwin. So if the setting of the SU2_RUN environment variable does not solve the problem, could you test it without python? You do this using the following command. mpirun -np <# of ranks> <path to SU2 bin directory>/SU2_CFD.exe inv_ONERAM6.cfg. It could be that instead of mpirun you must use mpiexec. That depends on your MPI implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378164049:380,depend,depends,380,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378164049,1,['depend'],['depends']
Integrability,"I am not too familiar with that routine, but I do know that there are some checks related to periodic BCs inside. Are you using periodic BCs for your case? You might go through the routine to see that the counting of the spans is correct. Perhaps @salvovitale can comment if there's time. Also, can you verify that the test cases in SU2/TestCases/turbomachinery/ are working for you on your system? Might check for additional options that appear in those examples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630388452:32,rout,routine,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630388452,2,['rout'],['routine']
Integrability,"I am trying to compile SU2 for parallel runs using intel compilers. SU2 compiles perfectly when compiled without the --enable-autodiff flag, but throws an error when compiling with it. The error is: . ```; ../../../Common/lib/../src/adt_structure.cpp(1402): internal error: assertion failed at: “shared/cfe/edgcpfe/exprutil.c”, line 7266. const su2double V0x = xc[0] - 0.5*xRel[4][0] - 0.125*(xRel[1][0]+xRel[2][0]+xRel[3][0]);; ^. compilation aborted for ../../../Common/lib/../src/adt_structure.cpp (code 4); make[2]: *** [../src/libSU2_AD_a-adt_structure.o] Error 4; make[2]: *** Waiting for unfinished jobs....; make[2]: Leaving directory `/path/SU2_AD/Common/lib’; make[1]: *** [install-recursive] Error 1; make[1]: Leaving directory `/path/SU2_AD’; make: *** [install-SU2_AD] Error 2; ```. Looking for the error online, it seems to be something related to the compiler itself. I was wondering if anyone else had encountered this error message, and how they got around it. . I am using icc and icpc version 18.0.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/719:941,message,message,941,https://su2code.github.io,https://github.com/su2code/SU2/issues/719,1,['message'],['message']
Integrability,I am trying to do the same thing for a loosely coupled cht problem. I have the wall temperature data but cannot implement it to SU2. I have checked the python wrapper code but I think it needs to be updated to be able to work as isothermal wall boundary condition with varying T through x coordinate(or any). Is there any progress about this issue?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1173129797:159,wrap,wrapper,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1173129797,1,['wrap'],['wrapper']
Integrability,"I am trying to get the Dynamic FSI tutorial to work and have rebuilt SU2 for the python wrapper, as well as install all dependencies, including mpi4py, petsc and petsc4py. I am getting the following error and the **_fsi_computation.py_** file is showing that the **_allMarkersID_** variable has no attribute for **_keys_**. I am running the case with Ubuntu 20.04 with openmpi and python 3.8. Can someone please let me know what is causing this issue/ bug?. Traceback (most recent call last):; File ""/usr/lib/python3.8/runpy.py"", line 194, in _run_module_as_main; return _run_code(code, main_globals, None,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/__main__.py"", line 7, in <module>; main(); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 198, in main; run_command_line(args); File ""/usr/local/lib/python3.8/dist-packages/mpi4py/run.py"", line 47, in run_command_line; run_path(sys.argv[0], run_name='__main__'); File ""/usr/lib/python3.8/runpy.py"", line 265, in run_path; return _run_module_code(code, init_globals, run_name,; File ""/usr/lib/python3.8/runpy.py"", line 97, in _run_module_code; _run_code(code, mod_globals, init_globals,; File ""/usr/lib/python3.8/runpy.py"", line 87, in _run_code; exec(code, run_globals); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 259, in <module>; main(); File ""/path/to/folder/SU2/SU2_PY/fsi_computation.py"", line 165, in main; FSIInterface.connect(FSI_config, FluidSolver, SolidSolver); File ""/path/to/folder/SU2/SU2_PY/FSI_tools/FSIInterface.py"", line 314, in connect; if allMovingMarkersTags[0] in allMarkersID.keys():; AttributeError: 'tuple' object has no attribute 'keys'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2129:88,wrap,wrapper,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/2129,2,"['depend', 'wrap']","['dependencies', 'wrapper']"
Integrability,"I am trying to run a big case with approximately 60 million mesh size. I am running it on multiple nodes, each having 8 processors. Problem is that I am able to make use of only 4 cores out of 8 available on each node for this size of problem and rest cores will be idle. ; If I try to run it on more cores, it fails during start and throws a message something like -- error while converting array I4 -I5 for CGNS ..........; But while checking the memory usage during solution time with 4 core per node usage (24 GB memory for each node and around 60 such nodes), it shows only 30-35% memory usage for each node.; May be something need to be improve during start up phase while reading CGNS and converting to SU2 data structure, parmetis phase etc.; This will enable efficient usage of resources for this size problem . For smaller size problems, I am able to use all the cores on each node.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/291:343,message,message,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/291,1,['message'],['message']
Integrability,"I am using Intel MPI as well, but on Ubuntu 18.04 and I get a clear error message. The likely reason why it hangs for you for this grid and not for the others is that this grid has an issue and the others do not. . Can you run it on one core of your supercomputer?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493914393:74,message,message,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493914393,2,['message'],['message']
Integrability,"I attach my `pkgconfig` file for `ompi-cxx.pc` . Note the `Libs.private` line, which correctly states dependencies, but it seems to be ignored by the SU2 build system:. ```; # Copyright (c) 2010 Cisco Systems, Inc. All rights reserved.; # Copyright (c) 2016 IBM Corporation. All rights reserved.; #; Name: Open MPI; Description: Portable high-performance MPI implementation; Version: 4.0.2; URL: http://www.open-mpi.org/; #; prefix=/Users/cesss/OpenMPI/4.0.2; exec_prefix=${prefix}; includedir=${prefix}/include; libdir=${exec_prefix}/lib; pkgincludedir=${includedir}/openmpi; #; # Note that -lopen-pal and all the EXTRA_LIBS are only necessary when; # static linking (they're pulled in by libopen-rte.so's implicit; # dependencies), so only list these in Libs.private.; #; Libs: -L${libdir} -lmpi; Libs.private: -lopen-rte -lopen-pal -lm -lz ; #; Cflags: -I${includedir}; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-583904437:102,depend,dependencies,102,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904437,2,['depend'],['dependencies']
Integrability,"I believe the viscous components of a lot of bcs are commented out and can probably be removed at this point. I'm not even sure if they are formulated properly for NEMO problems. I think BC_Inlet can be removed. Or all the commented code can be removed with just an error message. Regarding the outlet boundaries, supersonic outlet does seem to be redundant. However, many validation cases use a supersonic outlet, regardless of boundary layers (ASWBLI), so it may be fine to keep.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064:272,message,message,272,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1368248064,1,['message'],['message']
Integrability,"I built the code with mpich once and I believe what I did (cannot access the machine atm) was replace; ```; mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; if mpi_dep[0].found() or mpi_dep[1].found(); mpi = true; endif; ```; by; ```; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; ```; in meson.build.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695:119,depend,dependency,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633079695,3,['depend'],['dependency']
Integrability,"I built the code with your command and it worked.; In the error message you have undefined references to e.g. ompi_mpi_long_long_int; I ""grepped"" my SU2 directories for that kind of symbol, it only appears on binaries built with OpenMPI, not on those built with MPICH.; The change you made to the meson file is equivalent to what -Dextra-deps does.; So, I do not think this is an issue of the build system.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1151#issuecomment-753915786:64,message,message,64,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151#issuecomment-753915786,1,['message'],['message']
Integrability,"I can create a first implementation of an ADT search in which all wall points and connectivities are gathered on every rank. I already created the branch feature_WallDistance. However, I have to talk to Giulio first to make sure that the ADT can also be used for the sliding interfaces",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-225424727:275,interface,interfaces,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-225424727,1,['interface'],['interfaces']
Integrability,"I can guarantee Medi works with MSMPI, my MinGW setup links with `C:/Windows/System32/msmpi.dll` and uses nearly identical MPI header. It most likely is MSVC issue, it often works differently to gcc/clang and has its own set of bugs. Still, the issue with meson is MinGW pkgconfig cannot find MSMPI because it's not in MinGW directly and there's no way of specifying the library location. So it looks like MinGW build with MPI is currently broken. Edit: I'm now getting different errors:; ```; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(63,1): error C2182: 'Target of operator new()': illegal use of type 'void'; 2>C:\Users\dauma\Documents\SU2\externals\medi\include\medi/adToolImplCommon.hpp(62): message : while compiling class template member function 'void medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>::createIndexTypeBuffer(medi::ADToolInterface::IndexType *&,size_t) const'; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; 2>C:\Users\dauma\Documents\SU2\externals\codi\include\codi/externals/codiMediPackTypes.hpp(140): message : see reference to class template instantiation 'medi::ADToolImplCommon<CoDiPackTool<su2double>,false,false,CoDiType,double,double,int>' being compiled; 2> with; 2> [; 2> CoDiType=su2double; 2> ]; ```; It's both a template parameter name and inherited typedef. Regex replace for `AdjoinType`, `PrimalType` and `IndexType` works.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-554043358:735,message,message,735,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-554043358,2,['message'],['message']
Integrability,"I can report that we did find a couple of small issues with the y+, depending on the file format. Those have been fixed in a recent pull request, so now the current develop branch contains the updates. For ParaView, the variable labels have been reverted to the originals. Thank you again for opening this issue: it led directly to improvements in the code!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283#issuecomment-226012861:68,depend,depending,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/283#issuecomment-226012861,1,['depend'],['depending']
Integrability,"I can share that version of the code.. but beware, just as Edwin mentions, it is nasty looking and hard to compile (there are intrinsics and all sorts of architecture-specific changes). But, interesting to look at, of course. There you will see that we basically moved up all of the CVariable data (reordered contiguously) and methods to the solver to eliminate the extra layer of indirection, while still keeping access for outside classes, i.e. something like solver[FLOW_SOL]->node[iPoint]->GetPressure() becomes solver[FLOW_SOL]->GetPressure(iPoint). Since you mentioned it, another target is the CNumerics classes. The flexibility is nice, but does it really need an entire set of classes with getters/setters/virtual functions? I think that most of the ComputeResidual() functions could be moved up as methods in the solver classes as well to make more efficient residual kernel loops. In the early days, we thought completely removing CVariable and CNumerics would be very intrusive to change and would hurt flexibility. While the former is still true (although certainly doable), the latter does not seem to me as high of a priority any longer. Over the years, I don't think that folks have really modified the CNumerics classes all that often (once you have implemented the Roe method, it is more or less done). In addition, the CVariable and CNumerics child classes all live almost entirely within their own solvers, so we aren't taking much advantage of code reuse to justify having them as separate classes. For instance, if we just copied the relevant ComputeResidual() routines up into their solvers from numerics, we would have very little code duplication in the end, which is an indicator that we may not really need the extra baggage.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513292350:1583,rout,routines,1583,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513292350,1,['rout'],['routines']
Integrability,"I cannot answer whether something will work for your system, but I'll describe what the build system does.; The blas dependency is entirely handled by pkg-config, we ask for something called ""whats in front of -Dblas-name"" (the default is openblas) that something needs to provide blas+lapack functions.; pkg-config then looks for ""blas-name"".pc and gets all information regarding libraries from there... If those libraries give you blas+lapack it should work (if it does not its a bug).; Different OS will configure these packages in different ways (e.g. Ubuntu 16 is a bit different from 18), so I honestly cannot tell you what will work on a system I've not tried before.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632104708:117,depend,dependency,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632104708,1,['depend'],['dependency']
Integrability,I checked for last error messages and MPI functions. Everything seems to be fine. From my side it is ready to be merged :+1:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-355150444:25,message,messages,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-355150444,1,['message'],['messages']
Integrability,"I did a couple of changes to the discrete adjoint implementation. Despite the necessary changes in the iteration structure, the following things have been changed/added:; - It is now possible to compute Pressure, Mach and AoA sensitivities (similar to the continuous adjoint), along with this I modified the screen output.; - The computation of the geometry sensitivities is now split from the adjoint iteration itself (this saves a lot of memory and is much faster). However, this also means that geometry sensitivities are only updated just before the solution files are written.; - In some places in the code you may find the macro AD_BEGIN_PASSIVE and AD_END_PASSIVE. Everything in between is not recorded (called passive section). This is currently used for sections that are related to the construction of the flow Jacobian, since we assume that this Matrix does not depend on the flow solution, i.e. is constant. This is of course not true and leads to a very small error (~0.05% for a flow residual of 10^-4) in the sensitivities, but also increases performance a lot. Then there is a small change in solver_direct_mean.cpp:; - I moved the computation of the primitive variables in the Preprocessing routine into a separate routine (SetPrimitive_Variables). This way it is easier and there is less overhead when computing the coupling of the flow and turbulent variables needed in the discrete adjoint solver. And this is also beneficial for the maintenance and readability of the code.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/201:873,depend,depend,873,https://su2code.github.io,https://github.com/su2code/SU2/pull/201,3,"['depend', 'rout']","['depend', 'routine']"
Integrability,"I do have some issues with the continuous adjoint Testcases. Taking for example the euler_wedge. In the primal, results/convergence are really close. The continuous adjoint case (contadj_wedge) however produces pretty different results especially along the Euler walls (will upload an image later). The cont.adj. case converges though. So I guess I am doing missing something which is specific to the continuous adjoint? ; Maybe someone with experience in that field can help me and take a look. @hlkline maybe?. Update: Fixed the problem -> I had to change the call signature of the base implementation of `BC_Euler_Wall `and I changed it for all the primal solvers but not the continuous adjoint solver. Therefore in during integration the empty method of the CSolver was called. I'll additionally add the `override `keyword to the method declaration to avoid that in the future. Thanks to @talbring for pointing me to that",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-532675551:726,integrat,integration,726,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-532675551,1,['integrat'],['integration']
Integrability,"I do not believe that we should go back to a synchronous communication approach…in my experience asynchronous communication always gives better or equal performance and scalability to a carefully-done synchronous approach. It would be a step back to return to the v6.2 communication schedule. Perhaps the same tests can be repeated on a different machine with a different / better network and see what the outcome is?. Best,. Juan. On Mar 1, 2020, at 4:49 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed). —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/894?email_source=notifications&email_token=AA5FFRHHV2YZWCMXS624GILRFL7ATA5CNFSM4K56OFUKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOENNR34Y#issuecomment-593174003>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AA5FFRGLYCGNEQSYRE4ZQRDRFL7ATANCNFSM4K56OFUA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593186725:613,message,message,613,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593186725,2,['message'],['message']
Integrability,"I do not know if it exists already and /or if it is planned at all. In the case it does not exist it would be good to have output information on global energy balances at hand. This specifically applies to CHT multizone computations, but not only. **Describe the solution you'd like**; The energy balance should take care about delta enthalpy between inlet(s) and outlet(s). That can be compared to the heat transferred across the wall(s). So in a steady simulation with one inlet, one outlet and a wall the balance global balance should be zero. When working e.g. on a heat exchanger designs could also be compared with respect to their performance (e.g. NTU numbers or similar). This could be specifically interesting for multizone examples. Further that should work for steady, unsteady, open/closed domains and also consider technical work (as in the case of turbomachinery). ; Essentially it is an output request that should reflect the first law of thermodynamics (including open, transient systems and technical work).; It would help in engineering assessment, convergence control and be a check when new features are implemented. **Example**. Integrated Inlet Power [W] = 3.0050E+05; Integrated Outlet Power [W] = 2.5441E+05; Integrated Wall Heat Loss [W] = 5.4138E+03; Global Energy Balance [W] = 4.0676E+04 (could be internal energy or error); Mean Temperature Based HTC [W/m2K] = 8.5339E+02; Near-Wall Temperature Based HTC [W/m2K] = 7.7598E+02; Number of Transfer Units-NTU [-] = 1.8859E+01; Thermal Residence Time [s] = 8.0691E-03; Thermal Relaxation Time [s] = 4.2786E-04. **and/or**. 	LHS = dQtot + dHtot + Ptot;; 	RHS = dU/dt + dE/dt;; 	err_energy = LHS - RHS;; 	xcol("""", ""dHtot"", ""W"", dHtot);; 	xcol("""", ""dQtot"", ""W"", dQtot);; 	xcol("""", ""dWtot"", ""W"", Ptot);; 	xcol("""", ""LHS"", ""W"", LHS);; 	xcol("""", ""RHS"", ""W"", RHS);; 	xcol("""", ""E-imbalance"", ""W"", err_energy);; 	xcol("""", ""E-imbalance-relative"", ""%"", 100.0 * err_energy / energy_ref);; 	xwrite(""energy_balance.txt"");",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/800:1151,Integrat,Integrated,1151,https://su2code.github.io,https://github.com/su2code/SU2/issues/800,3,['Integrat'],['Integrated']
Integrability,"I do not think that it is related to CGNS in particular (and no need to build hdf5 anyway, we aren't using it), but rather, there are some MPI issues there. Looks like MPI_Keyval_free() is causing a problem? I think this was deprecated, so perhaps the MPI wrapper is having trouble with something in OpenMPI 4 (or maybe this function was completely removed in the new version). Thanks for reporting this. In the meantime, can you try with an earlier version of OpenMPI? v3 is working fine for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659#issuecomment-469473720:256,wrap,wrapper,256,https://su2code.github.io,https://github.com/su2code/SU2/issues/659#issuecomment-469473720,1,['wrap'],['wrapper']
Integrability,"I don't mind the ""pairs"" by themselves, it fits nicely with how the NdFlattener works, i.e. its efficient to split them and pass them down to lower layers.; The only slight problem is that ""first"" and ""second"" are not a super expressive interface, but I think that is ok for now.; If it ever becomes needed you can create some adapter to convert something with operator (i,j,....) into pairs of pairs behind the scenes, but for the current use that would not be an option anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246:237,interface,interface,237,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847329246,2,"['adapter', 'interface']","['adapter', 'interface']"
Integrability,I don't understand it ... Do you get the following message when running meson ?. ```; Program ninja found: NO; Message: Ninja was not found. Bootstrapping ...; ```; Because then ninja should be build and placed into the source root folder where meson finds it. For me it works locally and on our cluster. You can enable AD by adding `-Denable-autodiff=true` and/or `-Denable-directdiff=true` to the meson call.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495521918:51,message,message,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495521918,2,"['Message', 'message']","['Message', 'message']"
Integrability,"I encountered a similiar ""double free"" message as above when i am evaluating fixed CL RANS simulation.; I have tested three cases to see when does this error occur.; The first case is a RANS simulation for CRM wing. My configure file is opt_crm.txt in the attachment.; In this case, when I set FIXED_CL_MODE= YES, then in the end of the SU2_CFD execution, it will return messages below:. `Writing comma-separated values (CSV) surface files.; Merging coordinates in the Master node.; Merging solution in the Master node.; Writing SU2 native restart file.; Writing the forces breakdown file.; *** Error in `SU2_CFD': double free or corruption (!prev): 0x0000000007dc2aa0 ***; ======= Backtrace: =========; /lib/x86_64-linux-gnu/libc.so.6(+0x777e5)[0x7fbaa7b177e5]; /lib/x86_64-linux-gnu/libc.so.6(+0x7fe0a)[0x7fbaa7b1fe0a]; /lib/x86_64-linux-gnu/libc.so.6(cfree+0x4c)[0x7fbaa7b2398c]; SU2_CFD[0x8553d5]; SU2_CFD[0x855c59]; SU2_CFD[0x7583c2]; SU2_CFD[0x75ceb5]; SU2_CFD[0x40759c]; /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf0)[0x7fbaa7ac0830]; SU2_CFD[0x735109]; ======= Memory map: ========; 00400000-00d07000 r-xp 00000000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; 00f06000-00f2d000 r--p 00906000 08:28 1068882 /home/wanghao/software/SU2-5.0.0_me/bin/SU2_CFD; ......`. But, if i turn off the FIXED_CL_MODE, this error won't occur.; Then i tried an invisid test case, this case is orriginally from the TestCases folder of SU2 (TestCases/euler/naca0012). In this case, SU2 works well for both FIXED_CL_MODE and FIXED_AOA_MODE.; Finally, i tried another tutorial case for NACA0012 (from /TestCases/rans/naca0012), then SU2 has the same problem in FIXED_CL_MODE as in the first case. Furthermore, I have noticed that this bug is related to the compilers. ; 1. Intel C++ 2013 + Mpich2-3.0.4, fixed Cl model works; System: RHEL 5.3; 2. Intel C++ 2017 + Mpich2-3.0.4, fixed Cl model fails; System: Ubuntu 16.04; 3. GCC6.1.0 + Mpich2-3.0.4, fixed Cl model fails; System: RHEL 5.3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/383#issuecomment-306425408:39,message,message,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/383#issuecomment-306425408,2,['message'],"['message', 'messages']"
Integrability,"I expect that the tree search can be used for the interpolation routines without a problem. However, we have not looked into that yet.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288#issuecomment-231217312:64,rout,routines,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/288#issuecomment-231217312,1,['rout'],['routines']
Integrability,I experience the same problem. . * mpich-3.3.2 is installed under /opt using:; ```; ./configure CC=$cc CXX=$cxx FC=$fc --enable-shared --prefix=/opt/mpich-3.3.2; make; make install; ```. * Then su2 build is initiated with:; ```; ./meson.py build \; -Denable-autodiff=true \; -Denable-openblas=true \; -Dwith-mpi=auto; ./ninja -C build install; ```. I tried exporting stuff like:; ```; export MPICC=/opt/mpich-3.3.2/bin/mpicc ; export MPICXX=/opt/mpich-3.3.2/bin/mpicxx; export PKG_CONFIG_PATH=$OPENBLAS_LIB/pkgconfig:$MPI_LIB/pkgconfig; ```. Even though the paths are correct and binaries do exist none of that works. I always get:; ```; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); ```. OpenBLAS is found for instance:; ```; Using 'PKG_CONFIG_PATH' from environment with value: '/opt/OpenBLAS/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.6; ```. FYI,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907:664,depend,dependency,664,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721280907,3,['depend'],['dependency']
Integrability,"I face the same issue with the new Docker images (based on Ubuntu 20.04).; https://github.com/su2code/SU2/pull/1619; https://github.com/su2code/SU2/runs/6384596072?check_suite_focus=true. Neither the proposed change by @aa-g :. ```diff; diff --git externals/cgns/hdf5/meson.build externals/cgns/hdf5/meson.build; index f85d5ba86d..c7655a6d1e 100644; --- externals/cgns/hdf5/meson.build; +++ externals/cgns/hdf5/meson.build; @@ -25,8 +25,8 @@ hdf5_conf_data.set('version', '1.12.1'); ext_deps = []; ; ; -opt_zlib = dependency('zlib', required: false, static: true); -opt_szip = dependency('szip', required: false, static: true); +opt_zlib = dependency('zlib', required: false, static: false); +opt_szip = dependency('szip', required: false, static: false); ; if opt_zlib.found() and cc.has_header('zlib.h'); if cc.has_function('inflate', dependencies: opt_zlib, prefix: '#include <zlib.h>'); ```. nor the extra compiler/linker flags seems to help me:. ```; LDFLAGS=""-fPIC"" CFLAGS=""-fPIC"" CXXFLAGS=""-fPIC"" ./docker/build/compileSU2.sh -b refs/pull/1619/merge -f ""-Denable-pywrapper=true -Dwith-mpi=disabled -Denable-tests=true --warnlevel=0 --werror""; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1123549692:514,depend,dependency,514,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1123549692,5,['depend'],"['dependencies', 'dependency']"
Integrability,"I gave the wall function routines a cleanup in #975 and I think something is missing, we compute the shear stresses but they are not considered in the BC's of the NS solver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-634539255:25,rout,routines,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-634539255,1,['rout'],['routines']
Integrability,"I get the following error from su2Deform when using python 3.7 and SU2 6.1.0:. ```; su2Deform( ""testing.cfg"", args.numberProc) # Run SU2 mesh deformation; File ""$SU2_RUN/mesh_deformation.py"", line 83, in mesh_deformation; info = SU2.run.DEF(config); File ""$SU2_RUN/SU2/run/interface.py"", line 158, in DEF; konfig.dump(tempname) ; File ""$SU2_RUN/SU2/io/config.py"", line 125, in dump; dump_config(filename,self); File ""$SU2_RUN/SU2/io/config.py"", line 961, in dump_config; write_config(filename,config) ; File ""$SU2_RUN/SU2/io/config.py"", line 775, in write_config; n_lists = len(new_value); TypeError: object of type 'map' has no len(); ```. Any help fixing this would be greatly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/620:273,interface,interface,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/620,1,['interface'],['interface']
Integrability,"I had raised the issue #1000 and followed the development when #1102 was proposed. I tried to install SU2 on my new PC with the proposed changes but the ninja built failed with [this long error](https://www.dropbox.com/s/mh3x98kcv8pifv7/ninjarun.log?dl=0). **To Reproduce:**; Run the meson script similar to the following command: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Dcustom-mpi=true -Denable-pywrapper=true -Dextra-deps=lapack,mpich -Denable-pastix=false --prefix=/home/slimshady/UserPackages/su2-test/SU2_INSTALL`. **Desktop:**; - OS: Arch Linux: Kernel 5.10.4; - C++ compiler and version: gcc (GCC) 10.2.0; - MPI implementation and version: mpich 3.3.2; - SU2 Version: 7.0.8. I was able to install it by changing the meson.build file like so:; ```; # mpi_dep = [dependency('mpi', language: 'c', required : get_option('with-mpi')),; # dependency('mpi', language: 'cpp', required : get_option('with-mpi'))]; mpi_dep = [dependency('mpich', required : get_option('with-mpi')), #new-change; dependency('mpich', required : get_option('with-mpi'))] #new-change; ```; and then configuring without the custom-mpi flag. What could be the issue? Am I using the flags wrong?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1151:838,depend,dependency,838,https://su2code.github.io,https://github.com/su2code/SU2/issues/1151,4,['depend'],['dependency']
Integrability,"I had the same issue, its depended on the way the mesh is partitioned. There is an error in the calculation of NSpan (they should be the same for the inlet and outlet) when the boundary is on two different cores (points are counted twice). I resolved it by making an extra entry in the config that specifies the number of spanwise sections. The testcases are meshed in such a way that the partitioning rarely lead to the outlet being partitioned across two cores, so the errors doesnt pop up there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/990#issuecomment-630646560:26,depend,depended,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/990#issuecomment-630646560,1,['depend'],['depended']
Integrability,"I have a couple of question and suggestions about things I noticed during moving the initialization.; 1. `SU2_DOT` did not call `omp_initialize()`, it does now after moving `omp_initialize()` to the driver constructor. Does it actually run any hybrid AD stuff?; 2. The number of OpenMP threads can be specified for `SU2_CFD` via the `-t` parameter, but for `SU2_DOT` and the python wrapper I saw no way to configure it. Making the number of threads a parameter of the driver constructors and calling `omp_set_num_threads` in the constructor of `CDriverBase` seems like a natural way to enable this for all flavours of SU2. Would that be a nice addition?; 3. I couldn't find any python wrapper tests among the parallel AD and hybrid AD tests. Could any of the serial AD python wrapper tests serve as a basis for a parallel AD or hybrid AD one?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920:382,wrap,wrapper,382,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470026920,3,['wrap'],['wrapper']
Integrability,"I have been researching about the Sutherland's law in different CFD codes. The form and coefficients vary depending on the implementation. Assuming a 3 parameters fit (there is a less popular 2 parameters version). I. SU2 (SI units) is using:; MU_REF = 1.716E-5 kg / ms; MU_T_REF = 273.15 K; SUTHERLAND_CONSTANT = 110.4 K; from http://www.cfd-online.com/Wiki/Sutherland's_law. II. FLUENT is using ; MU_REF = 1.716E-5 kg / ms; MU_T_REF = 273.11 K; SUTHERLAND_CONSTANT = 110.56 K. III. The classical book ""Viscous Fluid Flow"" by Frank White (McGraw-Hill) proposes; MU_REF = 1.716E-5 kg / ms; MU_T_REF = 273 K; SUTHERLAND_CONSTANT = 111 K. IV. The NASA webpage https://www.grc.nasa.gov/www/BGH/viscosity.html and SU2 (US units); MU_REF = 1.733E-5 kg / ms; MU_T_REF = 288.16 K; SUTHERLAND_CONSTANT = 110.4 K. And each CFD solver seems to use some slightly different parameters. The difference between I, II and III is small...(%0.5) but large if we compare with IV (%3) (could be a typo in the NASA web page?) . Sutherland's law is very important for SU2 because the nondimensionalization is based on the Reynolds number that typically comes from the viscosity (Sutherland's law again) that we compute from the Temperature evaluated using the Standard US atmosphere. If the viscosity formula that we use to evaluate Re is not consistent with the one that is implemented in SU2 we can find large discrepancies in, for example, the static pressure at the Far-field. I have two recommendations: 1) US and SI should be consistent and we should use exactly the same number for both. 2) Instead of using an internet source I would use the values at White's book which is a classic and permanent reference. I'll implement the change as soon as possible. Best,; Francisco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/301:106,depend,depending,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/301,1,['depend'],['depending']
Integrability,I have opened Su2_CFD module in debug mode (linux - command line ). I can step through line by line by giving step command of a test case. I could removed the header files dependencies. But i am facing errors with Class . Is it possible to make standalone program of SU2 test case without any dependency ? Is it possible to segregate the test case code alone from SU2 ?. kindly share your knowledge on this .,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1407:172,depend,dependencies,172,https://su2code.github.io,https://github.com/su2code/SU2/issues/1407,2,['depend'],"['dependencies', 'dependency']"
Integrability,"I have seen that depending on the developer. SU2 includes (or not) a space between ""if"" and ""("" or ""for"" and ""("", etc. . From the coding style point of view I think it is better to have a common criteria:; ""if ("" ""for ("", "") {"" and ""else {"". I have implemented the previous convention in the software... it is the most popular one in order to differentiate ""if("" or ""for("" from function calls, it also improves the code readability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/426:17,depend,depending,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/426,1,['depend'],['depending']
Integrability,"I have started dividing the geometry classes. First, I created a new set of classes for the FVM mesh readers. There is a base interface that should never need to be modified, and the new CGNS reader is the first implementation. I will move the SU2 ASCII to this framework soon. The new class will make it easy to add new readers or even just implement analytic meshes like squares and cubes directly as child classes. I will break off a few more small classes in this PR, since they will be easy to handle, but I will likely wait for after this PR to completely divide CPhysicalGeometry just to be safe.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-520532998:126,interface,interface,126,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-520532998,1,['interface'],['interface']
Integrability,"I have tried two additional simulations with the same cylinder mesh:. **1. Stationary cylinder**. The settings are almost identical, except:. su2Config.cfg:; ```; ...; TIME_STEP = 0.00593412; ...; ```. zone_rot.cfg:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ...; ```. In other words, this is a transient stationary cylinder simulation with two zones. As the axial velocity and eddy viscosity evolutions show below, the simulation runs smoothly and no discontinuities or unphysical flow result is observed around the zone interface. <img width=""720"" alt=""cylSlowStationary"" src=""https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExNTg4ZHE2YTZkM3Nmbm84NWEyOTN6bXJtbjg5NXJ3OGRoOTdscXMyeSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l63Ze6xd8FejHGNjCZ/giphy.gif""> . **2. Slowly rotating cylinder**. I also tried a very slowly rotating cylinder to see if the error will occur even with a slow rotation. The rotational speed of the inner zone is around 0.03 rad/s, which corresponds to a surface angular speed (0.025 m/s) equal to the 0.25% of the freestream velocity (Uinf=10 m/s). . zone_rot.cfg:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.02941176471; ...; ```. The time step is set as the one used for the stationary cylinder. Each time step corresponds to a 0.01 deg rotation of the inner zone. The below animation shows the movement of the cells on the interface:. <img width=""480"" alt=""cylSlow"" src=""https://i.giphy.com/cOUpRw5pDCSvqGa6Q0.webp""> . The below animations show the axial velocity and eddy viscosity evolution. The results should not deviate much from the stationary cylinder results as the angular speed of the cylinder is quite low compared to the freestream. However, it is not the case for this simulation. Also, the discontinuity on the downstream part of the interface is quite apparent even at the earlier time steps. As the simulation progresses, unphysical flow results (non-zero eddy visc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2041586417:571,interface,interface,571,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2041586417,1,['interface'],['interface']
Integrability,"I have two considerations on the new boundary conditions: . 1- should the ""domain length"" in the Omega farfield BC be adimensionalized by the Reynolds length? Otherwise w gets adimensionalized only by the reference velocity.; 2- the farfield value of TKE does not take into account for the freestream turbulence intensity. If we want to match the tke computed via $k_{\infty}=w_{\infty} * (\mu_{\infty} * ViscRatio)/\rho_{\infty}$ and the one computed previously as $k_{\infty}=(3/2)*(U_{\infty}*TI_{\infty})^2$, we can either compute the viscosity ratio combining the two equations or just use the one which explicitly contains the $TI_{\infty}$ disregarding the dependency on $w_{\infty}$. But can we do it? The model as written on the NASA TMR does not explicitly contains the turbulence intensity in the boundary conditions. Maybe it only matters when transition is taken into account.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2307229258:664,depend,dependency,664,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2307229258,1,['depend'],['dependency']
Integrability,"I have updated the sliding mesh cases now, but I have found two cases that had odd behavior. The rotating cylinders case seems to give different results for values such as lift and drag depending on the core count, even in the develop branch. Also, the supersonic vortex shedding problem reports that hundreds of points are non-physical at the end of the run, both with this PR and in develop. Anyone have any insight on these? I am going to keep moving through the final cases that need updated for this PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-552707156:186,depend,depending,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-552707156,1,['depend'],['depending']
Integrability,"I have used both weight +1 and -1 but the optimization direction appears to be independent of it. Another issue is that the OBJECTIVE_WEIGHT parameter is not printed correctly in the configs generated during optimization. Its always +1 (even if I set it as -1). Is the DV_VALUE the same as ""FINDIFF_STEP""? Or does its value happens to be the same?. And why is the DV_VALUE always the same during the optimization to 0.001? Shouldn't this depend on the case itself?. I have attached my config.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626404968:438,depend,depend,438,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626404968,1,['depend'],['depend']
Integrability,"I haven't looked at the python wrapper in detail, we had previously tracked several properties which are not available in the conventional convergence tracker (such as Cmy) and used the stop file to obtain the data when appropriate. We have considered increasing the save frequency, but there are several files which are not created at every save point; thereby forcing each ""standard"" run to become a ""run to nearest save"" then ""resume for 1 time-step to get the actual output data"". As the decomposition and some of the file writes take a significant amount of time, it is a non-starter for commercial applications. We would switch back to v6 (which had the capability) but we need some of the other features in v7. I'll take a look at the python wrapper. Thank you for your candor.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695:31,wrap,wrapper,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862344695,4,['wrap'],['wrapper']
Integrability,"I ifdeffed the availability of MPI_Ibarrier for checking whether the error call is collective. If MPI_Ibarrier is not present, there is a delay in the writing of the error message of 1 second (to make sure that the buffers for the one-sided communication are updated). If MPI_Ibarrier should be used when available (this is the cleaner solution), an additional check in configure must be added.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-418669548:172,message,message,172,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-418669548,1,['message'],['message']
Integrability,"I implemented most of the reviewers suggestions. The only suggestion I left unchanged is the upper-case consistency issue raised by Wally. Since it is an optional output and it depends on the controlling variable names the user provides, I think it would be more intuitive to keep the font case consistent between the names under `CONTROLLING_VARIABLE_NAMES` and the corresponding `RMS_` outputs.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580:177,depend,depends,177,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1643680580,2,['depend'],['depends']
Integrability,"I just committed a second round of changes that I would appreciate some feedback on. Compilation is successful with these changes, however, upon testing, I receive the following message: . Error in ""void CConfig::SetConfig_Parsing(std::istream&)"": ; -------------------------------------------------------------------------; Line 271 SPECIFIED_SUPERSONIC_INLET_PROFILE: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean SPECIFIED_INLET_PROFILE?; Line 274 SUPERSONIC_INLET_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; Did you mean INLET_FILENAME?. I had already adjusted CConfig.cpp to include supersonic inlet profile inputs, but apparently I am not implementing everything I need to. I'm unsure where else I would need to make changes. Any suggestions?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832:178,message,message,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/1652#issuecomment-1151296832,2,['message'],['message']
Integrability,"I just found a heap buffer overflow in the interface code, mentioning it here in case it is related https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2034489154:43,interface,interface,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2034489154,1,['interface'],['interface']
Integrability,I just had a chat with @RoccoBombardieri to get Toms fix integrated in his branch and I hope that results will match the old Implementation 👍,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-634681005:57,integrat,integrated,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-634681005,1,['integrat'],['integrated']
Integrability,"I just managed to run my first SU2 CFD simulation, however it took me a few days to get it to work. ""SU2_CFD.exe"" was always crashing right after ""Begin solver"". It took me quite a while to figure out that I was missing some required inputs in the "".cfg"" file (for example CONV_NUM_METHOD_FLOW), especially because this isn't mentioned clearly on the website. I would suggest the following solutions:. - An error message telling which required input is missing in the .cfg to help beginners with debugging.; - A simple list with all the required inputs, i.e. those which don't have a default value, for instance on the website.; - An example of a minimal working .cfg file, basically the opposite of [this one](https://github.com/su2code/SU2/blob/master/config_template.cfg). (This is my first time opening a feature request on Github, I hope I did everything right)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842:413,message,message,413,https://su2code.github.io,https://github.com/su2code/SU2/issues/842,1,['message'],['message']
Integrability,"I just pushed a new version of your inlet profile branch. I really like the solver class abstractions. I can tell you have a good grip on the classes and where data should live - nice job. Here are the changes I have made:; * everything is generalized in parallel for an arbitrary number of inlets in the file. The file format changed slightly.; * I moved around some routines and data to take more advantage of inheritance and encapsulation: it is now more like the restart routines where the reading and data live in the parent CSolver class, the specific load functions are found in the solvers (I overloaded SetInletAtVertex), and the template file is written by COutput. It is written such that any solver could eventually use it for any marker type by adding the appropriate SetInletAtVertex routine for solver-specific data (might need to rename for different marker types rather than inlet) and writing an appropriate template file writer in the output.; * for now, it is still requiring a essentially a matching profile point (nearest neighbor within a tight tolerance) by default, but you can have an arbitrary number of points in the file for each marker, and we can eventually add interpolation easily. We already have some of these routines.; * the turbulent solvers now all use the Inlet_TurbVars data structure even for uniform inlets. Can you please check this with Python?; * multigrid is now working. I put in a boundary face area-averaged restriction operator for the inlet profiles. Any decent approximation on the coarse levels should work ok. I left all of your original routines there, but deactivated them for the moment. Can you please give it a look and let me know what you think (and whether it is working for you)? Feedback most welcome. If we are happy with it, we can clean it up and submit a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/467#issuecomment-371716916:368,rout,routines,368,https://su2code.github.io,https://github.com/su2code/SU2/issues/467#issuecomment-371716916,5,['rout'],"['routine', 'routines']"
Integrability,"I just tried it and it failed. The error message is extremely long, I am attaching a [text file](https://github.com/su2code/SU2/files/4685129/su2_custom-mpi.log) for that. This was my meson command earlier: `./meson.py build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:41,message,message,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['message'],['message']
Integrability,"I just updated the build to use the --user flag so it shouldn't require permissions. Can you pull and try installing again? Just run the same meson command as before with --reconfigure. As for the missing header, I think that's an issue with your python setup. Don't remove python2.7 from your system, since a lot of packages still depend on it. How did you install python? If you run `locate Python.h` does it return anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619400317:332,depend,depend,332,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619400317,1,['depend'],['depend']
Integrability,"I noticed that ; - the distinction between the time integration schemes (implicit Euler, explicit Euler, ...) is made in `CIntegration::Time_Integration`: Exactly one of the functions `CSolver::ImplicitEuler_Iteration`, `CSolver::ExplicitEuler_Iteration`,`ExplicitRK_Iteration`, `ClassicalRK4_Iteration` is called.; - These are virtual functions, defined as ""do nothing"" in `CSolver`.; - Regarding the flow equations, `CFVMFlowSolverBase<>` overrides `ImplicitEuler_Iteration`, and `CEulerSolver`/`CIncEulerSolver` override the other three functions.; - Regarding the turbulence equation, `CTurbSolver` overrides `ImplicitEuler_Iteration` only. Thus probably I can use `TIME_DISCRE_FLOW=EULER_EXPLICIT` but not `TIME_DISCRE_TURB=EULER_EXPLICIT`?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-964236535:52,integrat,integration,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-964236535,1,['integrat'],['integration']
Integrability,I noticed that it is not possible to run an optimization of a case where you have FFD design variables and periodic boundaries defined. It seems like that SU2_DEF is not correctly writing out the periodic information to the new mesh file. I think the problem is that there are different routines responsible for writing the FDD information and the periodic information.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/210:287,rout,routines,287,https://su2code.github.io,https://github.com/su2code/SU2/issues/210,1,['rout'],['routines']
Integrability,"I noticed that there is a 'Grid Adaptation Strategy' section in the v7 .cfg files but I'm not entirely sure how to get it working (running a supersonic Euler). I changed `KIND_ADAPT= GRAD_FLOW` and tried running `SU2_CFD` but no mesh adaptation seemed to take place. After digging around the github comments, I tried running `SU2_src/SU2_PY/mesh_adaptation.py` with python but it gave me an error:. ```; ------------------------- Exit Success (SU2_CFD) ------------------------. Traceback (most recent call last):; File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 106, in <module>; main(); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 62, in main; options.save_all ); File ""/home/user/programs/su2/SU2_src/SU2_PY/mesh_adaptation.py"", line 93, in mesh_adaptation; SU2.run.MSH(config); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 134, in MSH; run_command( the_Command ); File ""/home/user/programs/su2/SU2_src/SU2_PY/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/user/projects/mesh_adapt_testing/,; Command = /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH config_MSH.cfg; SU2 process returned error '127'; /bin/sh: /home/user/programs/su2/SU2-7.0.8/bin/SU2_MSH: No such file or directory; ```. And indeed, when I checked the compiled SU2 bin, `SU2_MSH` seemed to be missing. Has this functionality been removed and is that why the python script is not in the compiled SU2 bin?. I found that some people have had success using the `feature_adap` branch instead but that is running on v7.0.3. I also tried compiling this version but there appears to be a `mesh_adaptation.py` and `mesh_adaptation_amg.py`. If one wants to use mesh adaptation, is this the recommended branch?. Wishing all a Merry Christmas, good health and a happy New Year.; Thanks and regards,; Tim. **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143:885,interface,interface,885,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143,2,['interface'],['interface']
Integrability,"I received this message when I am trying to run Dynamic FSI tutorial case ; This issue is derived from line 314 of file FSIInterface.py; What I received in terminal was like this:; File ""home/huy/SU2/bin/FSI_tools/FSIInterface.py"", line 314, in connect; if allMovingMarkersTags[0] in allMarkersID.keys():; AttributeError: 'tuple' object has no attribute 'keys'. To fix this I add this line above the error line:; allMarkersID = {marker: idx for idx, marker in enumerate(allMarkersID)}",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2365:16,message,message,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/2365,1,['message'],['message']
Integrability,"I recently downloaded and compiled the feature_adap branch of SU2. . After installing I attempted to run an adaptation case with pyamg. However my code errors out with, . 'File ""C:\bin\SU2\amginria\interface.py"", line 136, in call_pyamg; mesh_new = pyamg.adapt_mesh(mesh, remesh_options); AttributeError: module 'pyamg' has no attribute 'adapt_mesh''. Does the newest version of pyamg no longer have this method? If so, what is the fix?. Thanks; Daniel",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1380:198,interface,interface,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/1380,1,['interface'],['interface']
Integrability,"I see thanks for sharing that.; The way I understand (or not) blocking v non-blocking communication, with the former there will be more communications in flight at a given moment since the code does not wait to receive before issuing the next message. Maybe this puts a lot of pressure on your network...; Maybe there are tuning parameters to improve network performance under these conditions (it could be worth having a look around CFD Online), or maybe your new hardware will not have any problem. As for software solutions.; If your usual application is compressible RANS/URANS you can try the new and experimental hybrid parallel mode we just introduced in 7.0.2. This will allow you to have one MPI process per node which will unfold in 16 threads each.; I cannot guarantee this will work flawlessly since I have not tested it for pure unstructured meshes (which seems to be your case) but for block-structured-ish meshes the results so far are very promising (#861).; To use this add option `-Dwith-omp=true` to meson, and then launch the code with `mpirun -n 4 --bind-to none SU2_CFD -t 16 config.cfg` (or something equivalent, the ""--bind-to none"" part is important).; Let me know if you get a cryptic error along the lines of ""coloring failed"". For pure MPI, @economon would it be viable to force per-message waits? and would that be roughly equivalent to the old communication mode? (this would be more work on our side @drewkett so if you could give option 1 a go it would be great).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593162200:243,message,message,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593162200,2,['message'],['message']
Integrability,"I see, those warnings didn’t pop up with LLVM on Mac. Actually, in a next pass, each of those Set_MPI_* routines that carry the warnings will be deleted. I didn’t do it yet, because git was getting confused with the spacings again. None of those routines are active anywhere any longer, so even just removing that index variable is fine to get rid of the warning",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/699#issuecomment-498966410:104,rout,routines,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/699#issuecomment-498966410,2,['rout'],['routines']
Integrability,I see. The python wrappers are far more powerful than I thought. But I'm still a bit lost with respect to the API of the driver(s). Where's a good place to start reading into that?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822:18,wrap,wrappers,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1058017822,1,['wrap'],['wrappers']
Integrability,"I should also mention though that moving the threading to a single high-level parallel section is also very problematic for readability/development. Folks will have to be aware that the threads are active, and it can be very error-prone. This was one of the major detractors of implementing the OpenMP framework as we had it in the C&F paper into the develop branch, even though the performance was quite good (and also the interoperability of threading and AD at the time). Any clever suggestions/techniques for hiding the threading as much as possible are most welcome.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566654480:424,interoperab,interoperability,424,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566654480,1,['interoperab'],['interoperability']
Integrability,"I simple wrote a program to test the grid, which searches for the boundary elements in the single faces, i.e. faces that are only part of one volume element, of the volume grid. What the error message means is that for 4 triangular surface elements of boundary marker BODY there is no corresponding face of the volume elements that is only part of one volume element. . When I include the faces that are shared by two volume elements, only two boundary elements are not found. So in short, you have two boundary elements in boundary marker BODY that are no part of any volume element and two boundary elements that are shared by two volume elements.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-494675549:193,message,message,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-494675549,2,['message'],['message']
Integrability,"I studied some preconditioning formulations that can be added to SU2. Currently, we are only scaling the dissipation part improving accuracy not convergence at Low Mach number flows. . I found this interesting paper that presents the preconditioning formulation in conservative variables (minor changes in the code) for implicit solvers based on the classical Weiss and Smith formulation. A robust low speed preconditioning formulation for viscous flow … <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwjS8_vzre3QAhXIjJAKHatADsQQFggfMAA&url=http%3A%2F%2Fwww.sciencedirect.com%2Fscience%2Farticle%2Fpii%2FS0045793011000223&usg=AFQjCNG9Pc2UPSeqsdqHfVa0symixryb9w&sig2=2eqLmLoBa4t3XCMT_DWSrQ&bvm=bv.141320020,d.Y2I>; Preconditioning applied to variable and constant density flows - AIAA <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&sqi=2&ved=0ahUKEwjF65S3s-3QAhXFkZAKHfwbDlEQFggfMAA&url=http%3A%2F%2Farc.aiaa.org%2Fdoi%2Fpdf%2F10.2514%2F3.12946&usg=AFQjCNGpofvU3ntuYJaA6o_nAz8MOKubCg&sig2=YIumr88W2hKQK0AMzI3fAw&bvm=bv.141320020,d.Y2I>. I really would like some help to implement the above preconditioning implicit dual time-step formulation (Eq. 18 of the Weiss and Smith paper or section 4.3.3 of Colin et al.). Supposing I already have the preconditioning matrix, I just have to modify CEulerSolver::SetResidual_DualTime?. Thanks in advance. Eduardo . > On 5 Dec 2016, at 17:29, Thomas D. Economon <notifications@github.com> wrote:; > ; > Great! Thanks, Eduardo. Let's work now together in this branch to make sure that everything is integrated nicely. Just let me know what help you may need.; > ; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/333#issuecomment-264951536>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AJVmCZ5PvOBqyi5FUUq329-qySSrsIOzks5rFGYWgaJpZM4K3iN4>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333#issuecomment-266321042:1858,integrat,integrated,1858,https://su2code.github.io,https://github.com/su2code/SU2/pull/333#issuecomment-266321042,1,['integrat'],['integrated']
Integrability,"I suggest that we add a test to the regressions that will check the file output format - we already have a routine to diff two files in the python scripts, so this should be fairly straightforward. ; My thought here is that this would include very small cases, with just one iteration and/or just running SU2_SOL, to check that the header format hasn't changed in all the output formats. This is something we don't usually check for, especially in paraview output since most of us don't use that. It'll add some overhead for developers when the output content or format is changed (we'll need to update the reference file in the test cases repo), but since this is something likely to cause inconvenience to users (all of a sudden everyone needs to update their tecplot layout, etc), that's not such a bad thing.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/283#issuecomment-225968460:107,rout,routine,107,https://su2code.github.io,https://github.com/su2code/SU2/issues/283#issuecomment-225968460,1,['rout'],['routine']
Integrability,"I suspect you are correct and they have some problem, I tried building the code without MPI (so using our dummy mpi wrapper) and the unit test passes and valgrind doesn't find anything in the testcase...; This displs problem with a single rank was also a bug we had in our MPI wrapper and you fixed right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1397456058:116,wrap,wrapper,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1397456058,2,['wrap'],['wrapper']
Integrability,"I tend to agree w Eran on this topic. When it is working as it should, it is very convenient to have the makefiles already available in the repo. I switch between Mac, Ubuntu, and a red hat cluster without needing to update anything or call the bootstrap script. I rarely use it.. basically only when adding or removing files to the build. Also, it is good to minimize dependencies, as sometimes old machines or clusters have limited tool sets. But, clearly we should at a minimum fix the issue that some of you are finding with the autotools, which should just need an update. What systems are you having trouble with? It’s important that we don’t jump too far ahead for portability reasons (that’s why we have kept the old versions for so long). Do you have an idea of the minimum autotools you need for the failing systems? We could start by updating to that version and see if things stabilize.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-424210049:369,depend,dependencies,369,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-424210049,2,['depend'],['dependencies']
Integrability,"I tested the MKL integration with the discrete adjoint, and everything looks ok, turns out to be only about 5% faster on a per iteration basis (i.e. excluding recording times). I had to grab some work from my other ongoing PR's to run a case with reasonable CFL settings so I am not going to upload files for this test. @economon , @talbring , if you do not mind me moving the files with significant changes on a separate PR, I think this is ready to go.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505018141:17,integrat,integration,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505018141,1,['integrat'],['integration']
Integrability,"I think I have zoomed on the problem:; First I had to renstall m4 (a local problem); Then, In the AD part, there is a refernce to CHeatSolverFVM instead of CHeatSolver.; So, a patch, is to copy routines:; in SU2_CFD/src/solvers : cp CHeatSolver.cpp CHeatSolverFVM.cpp; in SU2_CFD/src/variables : cp CHeatVariable.cpp CHeatFVMVariable.cpp; After that make and make install work. This is a patch. The repair requires a match of the names of the CHeat routines to the actual files names. I didn't track where the list exists. Last but not important: configure.ac prints a header with Release 6.2.0 Falcon; instead of 7.02 Blackbird. This explaines the header that I have printed in previous message",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600786911:194,rout,routines,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600786911,3,"['message', 'rout']","['message', 'routines']"
Integrability,"I think I implemented all the modifications you suggested. I am sorry you see all the commits in between, unfortunately due to Covid I work outside of office and I actually use Github to push the modified code to the office PC. I was actually working on a separate branch but, for reason that I do not understand, all the commits have been moved in the merging process... sorry about that. I am still learning git. In particular the modifications are:. - The functions related to static mesh deformation have been removed. I only included some new lines in the python wrapper ; that overwrite the initial velocities to zero and push back the solution.; - I now use the BC_Sym_Plane of the FEA solver for the deformation at the symmetry plane. I had to add a flag that avoids ; accessing LinSysReact in case of mesh deformation, as this is not initialised in that context.; - GetnMarker_Match_Deform_Mesh is not present anymore; - The marker has been renamed from MATCH_DEFORM_MESH to DEFORM_MESH_SYM_PLANE. All the functions have also ; been renamed accordingly; - I included the SU2 header in all the new files, changing the version number to 7.0.8. I did not modify the version number of ; the files that were already present in SU2 prior to this PR. I think the merging process should take care of that, am I wrong?; - The python functions that were separated in x,y,z component now give back an array and are merged into one function only; - The descriptions for the methods have been added; - The test case has been removed. I actually prepared a tutorial and all the appropriate files will be placed in the tutorial and ; website repos. I will now perform a PR for those repos so that you can see the material. Again thank you very much and sorry for the mess with the ""internal"" commits. . Please let me know if you think I missed something",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972:568,wrap,wrapper,568,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124#issuecomment-742471972,2,['wrap'],['wrapper']
Integrability,"I think it is ok if we send a few polite messages to say that we will close them but that they should feel very welcome to update their branches and resubmit the PRs. For a couple of them, it is partly our fault that they didn't get enough attention, as it was quite some time ago before we had really established our process.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/593#issuecomment-427215727:41,message,messages,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/593#issuecomment-427215727,1,['message'],['messages']
Integrability,"I think nearfield was a kind of internal interface between two boundaries with the same points, so not a ""do nothing"" group of points but more like an actuator disk without any jump.; Anyway, it was all incomplete or broken and there was no documentation in the code, for a change...; To anyone in the future the commit to revert is 265bfe8814ed345e9ab6288265e80858b00ae59e",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351:41,interface,interface,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351,1,['interface'],['interface']
Integrability,"I think one option would add yet one more config option and make it more difficult for the user, and the other would be to extend new features to all existing capabilities of the code. The idea behind the single and multi-zone drivers was precisely generalization. In my opinion it would be a no brainer to go for the second, but I'll leave it up to the community, but it depends also a lot on what timing we are moving in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542210441:372,depend,depends,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542210441,1,['depend'],['depends']
Integrability,"I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. [output_1.txt](https://github.com/su2code/SU2/files/4272178/output_1.txt). Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) and one for SU2 v6.2 on the same smaller problem. These are all done with the same compiled version of openmpi (v4.02) and compiling SU2 from source for both versions. The four machines are nearly identical. They're all dual socket machines running sandy bridge xeons, so they are a bit on the older side. . Mesh 1 (6.8e6 cells); - 8 processes (1 machine x 8 cores) => 13s/iteration; - 8 processes (2 machine x 4 cores) => 18.4s/iteration; - 16 processes (1 machine x 16 cores) => 8.5s/iteration; - 16 processes (2 machines x 8 cores) => 17s/iteration; - 16 processes (4 machines x 4 cores) => 15.8s/iteration; - 32 processes (2 machines x 16 cores) => 18.1s/iteration; - 64 processes (4 machines x 16 cores) => 21.9s/iteration. Mesh 2 (27e6 cells); - 8 processes (1 machine x 8 cores) => 50s/iteration; - 16 processes (1 machine x 16 cores) => 32s/iteration; - 16 processes (2 machines x 8 cores) => 32s/iteration; - 16 processes (4 machines x 4 cores) => 31s/iteration; - 32 processes (2 machines x 16 cores) => 34s/iteration; - 64 processes (4 machines x 16 cores) => 40s/iteration. A final set of timings for Mesh 1 with SU2 v6.2 for reference; - 8 processes (1 machine x 8 cores) => 26s/iteration; - 8 processes (2 machine x 4 cores) => 25s/iteration; - 16 processes (1 machine x 16 cores) => 15s/iteration; - 16 processes (2 machines x 8 cores) => 14s/iteration; - 16 processes (4 machines x 4 cores) => 13s/iteration; - 32 processes (2 machines x 16 cores) => 9.8s/iteration; - 64 processes (4 machines x 16 cores) => 6.2s/iteration. Thank",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593123594:710,bridg,bridge,710,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593123594,1,['bridg'],['bridge']
Integrability,"I think there are two options, but both will require checking the code. . 1) Go into grid_movement_structure.cpp and hack the Rigid_Pitching() routine to use your own function in time. Not elegant, but should just be a couple of lines to change. 2) A more general feature was implemented in the past to specify movement of surfaces in time by position of all surface nodes, but should be checked to make sure it is still working as expected. To use it, select 'EXTERNAL' as the grid movement type and provide a file with the surface node positions for each time step. Check in CSurfaceMovement::SetExternal_Deformation() for more info. If you are interested in developing a better solution as a contribution, we are always open!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/644#issuecomment-461567798:143,rout,routine,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/644#issuecomment-461567798,1,['rout'],['routine']
Integrability,"I think we lost this functionality around version 7 (at the time I did not know we had it) maybe because it was complicated to guarantee the right file outputs when the simulation is stopped this way, especially for discrete adjoint problems.; The poor mans version of this feature is to increase the file output frequency and kill the execution :shrug: ; Nevertheless, the mechanism to change the number of time iterations at runtime can still be found in `CFluidDriver::Monitor`, which is currently used by turbomachinery problems.; If someone wants to bring the feature back that would be a good place to start, although I think this type of runtime interaction is a bad investment, it would be better to use the python wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938:723,wrap,wrapper,723,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862079938,1,['wrap'],['wrapper']
Integrability,"I thought of doing an SST but was not long enough that it gave me error with divergence. I have been setting up my SST case as per the tutorial example of NACA0012. However, I do not happen to see any entry with regards to eddy frequency etc. (usually required by SST) in the config file. Any guidance will be great.; Thanks; Jehan; From: Heather Kline notifications@github.com; To: su2code/SU2 SU2@noreply.github.com ; Sent: Tuesday, May 12, 2015 11:43 AM; Subject: [SU2] Feature deallocation (#174). Bringing this branch up to date with current develop branch. ; Various deallocation changes; Some regression tests fail but all run. (previously was not the case); You can view, comment on, or merge this pull request online at:;   https://github.com/su2code/SU2/pull/174; Commit Summary; - Updated GetEngine_Properties; - Fix to the last commit; - Small bug; - Merge branch 'develop' into feature_MPI; - merging; - SU2_SOL and SU2_CFD are working; - Preliminary, but complete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code wor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:1544,integrat,integration,1544,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['integrat'],['integration']
Integrability,"I tried it for the NACA0012 897x257 mesh with compressible RANS (in `CAvgGrad_Flow::ComputeResidual`). . The scalar product is negative at the far-field boundary. `Coord_i` is on the boundary, `Coord_j` is in the domain. `Normal` points outwards in the viscous numerics (but I don't know if this depends on the orientation of the boundary in the mesh file). The scalar product is positive for the viscous fluxes between cells.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1185#issuecomment-774486850:296,depend,depends,296,https://su2code.github.io,https://github.com/su2code/SU2/issues/1185#issuecomment-774486850,1,['depend'],['depends']
Integrability,"I tried on 1, 4 and 24 cores and I get the same error message as @talbring. This indeed indicates that something is wrong with your grid. The fact that your computation is stuck is most likely caused by your MPI implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493404108:54,message,message,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493404108,1,['message'],['message']
Integrability,"I understand.. some of the lines are going to look very ugly after wrapping to 80 column widths, etc, but it will also highlight these trouble spots. I see it as two orthogonal issues: (1) fix the formatting problems once and for all and have them automatically fixed in the future so we stop wasting time on it, and (2) we continue to fix the problem areas in the code structure as we go, which we will need to do anyway, regardless. For me, I think the benefits of (1) outweigh the negative of seeing some ugly code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969#issuecomment-625440605:67,wrap,wrapping,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625440605,1,['wrap'],['wrapping']
Integrability,I want to introduce two new interfaces to change the Freestream Mach number and Reynolds Numbers from the Python interface. . As there are many parameters (mostly non/dimensional) affected by those two values I would like to get your insights on the viability and potential drawbacks of offering such an interface. Your thoughts on this matter would be greatly appreciated.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2185:28,interface,interfaces,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/2185,3,['interface'],"['interface', 'interfaces']"
Integrability,"I was installing the SU2 v7.3.1 from branch feature_pysu2_fsi_adjoint using a new virtual machine. ; I was using the following environment: ; OS Ubuntu 20.04.4 LTS; Python 3.8.10; gcc 9.4.0; open-mpi 4.1.3; swig 4.0.2; I installed mpi4py, notice that mpi4py was installed in directory /home/aarons/.local/lib/python3.8/site-packages/mpi4py. While python was installed in Ubuntu system default that shipped through Ubuntu. . I tried to use default SU2 meson script and installed meson and ninja to build and compile the code. Both of them stuck at the ninja compiling step, when linking target SU2_PY/_pysu2ad.so. The following error message appears:. ```; [8/1355] Generating externals/cgns/hdf5/H5T_init.c with a custom command; [1351/1355] Linking target SU2_PY/pySU2/_pysu2.so. FAILED: SU2_PY/pySU2/_pysu2.so. c++ -o SU2_PY/pySU2/_pysu2.so SU2_PY/pySU2/_pysu2.so.p/meson-generated_pySU2.cxx.o ; SU2_CFD/src/libSU2core.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core.a.p/python_wrapper_structure.cpp.o ; SU2_CFD/src/libSU2core.a.p/CMarkerProfileReaderFVM.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CFluidModel.cpp.o ; SU2_CFD/src/libSU2core.a.p/fluid_CIdealGas.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CPengRobinson.cpp.o ; SU2_CFD/src/libSU2core.a.p/fluid_CVanDerWaalsGas.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CNEMOGas.cpp.o ; SU2_CFD/src/libSU2core.a.p/fluid_CMutationTCLib.cpp.o SU2_CFD/src/libSU2core.a.p/fluid_CSU2TCLib.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_COutputFactory.cpp.o SU2_CFD/src/libSU2core.a.p/output_CAdjElasticityOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CAdjFlowOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CAdjFlowCompOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CAdjFlowIncOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CAdjHeatOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CBaselineOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CMultizoneOutput.cpp.o ; SU2_CFD/src/libSU2core.a.p/output_CElasticityOutput.cpp.o SU2_CFD/src/libSU2core.a.p/output_CFlowComp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1605:633,message,message,633,https://su2code.github.io,https://github.com/su2code/SU2/issues/1605,1,['message'],['message']
Integrability,"I was not able to reproduce this behavior. Below is the result I get when using the master branch for both the code and the test cases. . ![image](https://cloud.githubusercontent.com/assets/5167760/7709282/d36254b2-fe10-11e4-8827-f01ec46fbf0f.png). Note that since the config file provided uses a restart it depends on also having the provided restart files, which may have been produced with slightly different settings (ie, lower CFL number), and if you are not using the restart files you should check that the solution has converged. If you have further questions about the settings of SU2, checking convergence, etc please post them to the forum at:; cfd-online.com/Forums/su2/. You will find that in addition to a wider audience who can answer your questions, the answers may also already be posted from users who had similar problems.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/179#issuecomment-103602179:308,depend,depends,308,https://su2code.github.io,https://github.com/su2code/SU2/issues/179#issuecomment-103602179,1,['depend'],['depends']
Integrability,"I was too lazy on that. Sorry, I should have done that that in the first place :disappointed: . As there were only a few non-defaults I would have gone with:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/WRT_CON_FREQ= 1/d' {} \+`; and changing the rest manually (exercising the muscle memory a bit), but that handy script might get some additional use for other options ;). EDIT: This suggestion above is bad how I just noticed -> `sed` here deletes each line that contains `WRT_CON_FREQ= 1` which rightfully contains `WRT_CON_FREQ= 10` etc! One has to wrap the search expression in `\b` to only deletes lines that exactly match. The command becomes:; `find . type f \( -name '*.cfg' \) -exec sed --in-place '/\bWRT_CON_FREQ= 1\b/d' {} \+`. If you have some more options to deprecate in mind I can take care of some. Maybe I try to hunt down a few more over the weekend :bow_and_arrow:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1129#issuecomment-743477032:566,wrap,wrap,566,https://su2code.github.io,https://github.com/su2code/SU2/pull/1129#issuecomment-743477032,1,['wrap'],['wrap']
Integrability,"I went ahead and opened a draft PR, Back to C++11 (although now I'm using raw pointers :( ) and removed the dependency on compiler-specific flags (even if --whole-archive is supported by most compilers).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669804893:108,depend,dependency,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669804893,1,['depend'],['dependency']
Integrability,"I will try to make an example to show .; > So my problem is CD nozzle and I am running FEM-LES solver and exported; > data in .csv and PARAVIEW type. Everything seems good its just I was unable; > to visualize exported .vtk files (open but does not show me the final; > result- stuck in just opening it - I am not sure if its paraview issue or; > its 4 GB file which causing this error). So I tried to export my file using; > Tecplot type option but unable to do so and getting this Bus error which I; > never encountered earlier in SU2 ever (what is that error - YOUR; > APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)). So; > trying to dump my files in anyway to visualize them, since its FEM-LES; > solver with DG scheme so files are pretty huge. Still let me know if I need; > to send you an example. Attached .cfg file for reference.; >; >; >; > On Mon, Mar 16, 2020 at 6:13 PM Clark Pederson <notifications@github.com>; > wrote:; >; >> @monika1387 <https://github.com/monika1387> I'm sorry, I still don't; >> understand. Do you have a minimal working example, where you can reproduce; >> the problem you're having?; >>; >> Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In; >> Tecplot? What's the specific error message? What's the context?; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/issues/787#issuecomment-599781328>, or; >> unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/ALJ3OXFU367WBC2BSOGLCILRH2P7VANCNFSM4IT7MM2A>; >> .; >>; >; >; > --; > *Thank you,*; >; > *Monika Chauhan *; >; > *Graduate Research Assistant, Doctoral Program*; >; > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; > *Cell# 540-998-5012*; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; *Cell# 540-998-5012*",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599795725:1784,message,message,1784,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599795725,1,['message'],['message']
Integrability,"I wonder if maybe it would be a better idea to delete this (and other stuff) from externals/ and add it to subrojects/ instead. You can use `meson wrap install catch2`, and it's a simple ini file to vet instead of an 18k line file. git diffs become a lot simpler too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198882302:147,wrap,wrap,147,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198882302,2,['wrap'],['wrap']
Integrability,"I would always suggest adding the corresponding pkg config path to the `PKG_CONFIG_PATH` variable and use the `dependency` method. This way you get the correct version, additional dependencies, the include path and necessary flags.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-520973327:111,depend,dependency,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-520973327,2,['depend'],"['dependencies', 'dependency']"
Integrability,"I would give a cautious yes, cautious because Meson appears quite new, and probably still has some wrinkles to iron out. It’s definitely worth a try. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Thursday, May 23, 2019 1:21 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Dave Taflin <d.taflin@tecplot.com>; Mention <mention@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). @economon<https://github.com/economon> Hm ok, that is strange. The one that it builds is the newest on github (v1.9). On linux meson finds ninja if it is in the root directory of the source code (which should be there after bootstrapping), apparently that is not the case on mac. Can you check whether it works when you add the source dir in your path variable? Like @davetaflin<https://github.com/davetaflin> also mentioned for windows, on mac you can also directly generated xcode files (by adding --backend=xcode to the meson call), then ninja is not required. But anyway, I will look for a solution to that problem. @davetaflin<https://github.com/davetaflin> Thanks for your impressions. I would say the documentation is decent. The important things are there, which helped me setting it up. But I guess that we can also ask the developers if we have some problems when adding more complex dependencies (however, we then also should ask ourselves whether we really want to add them in this case). But is the conclusion that you'd also prefer meson over automake ? :D. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/685?email_source=notifications&email_token=AADV2HBRMBCYV43557RMHRTPWZHYPA5CNFSM4HOUXHQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWBOI7I#issuecomment-495117437>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HB3AK7BY3OH5LY66R3PWZHYPANCNFSM4HOUXHQA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495299585:1315,depend,dependencies,1315,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495299585,1,['depend'],['dependencies']
Integrability,"I would like to reopen the issue regarding the dry run. When having turbomachine settings on, the dry run fails when calculating (preprocessing the turbomachine geometry) with the following error:. - Case Testcases APU_Turbomachinery; - Version 7.5.1 ; - Command: SU2_CFD -d Jones_restart.cfg. ```; ---------------------- Turbomachinery Preprocessing ---------------------; Initialize Turbo Vertex Structure.; Number of span-wise sections in Zone 0: 0.; Number of span-wise sections in Zone 1: 0.; Max number of span-wise sections among all zones: 0.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Set span-wise sections between zones on Mixing-Plane interface.; Transfer average geometric quantities to zone 0.; [---] *** Process received signal ***; [---] Signal: Segmentation fault (11); [---] Signal code: Address not mapped (1); [---] Failing at address: 0x8; [---] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x43090)[0x7ffa2d583090]; [---] [ 1] SU2_CFD(+0x5e6dc4)[0x55c98b9dedc4]; [---] [ 2] SU2_CFD(+0x1ab51e)[0x55c98b5a351e]; [---] [ 3] SU2_CFD(+0x1bc2d3)[0x55c98b5b42d3]; [---] [ 4] SU2_CFD(+0x201b26)[0x55c98b5f9b26]; [---] [ 5] SU2_CFD(+0x151f79)[0x55c98b549f79]; [---] [ 6] /lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf3)[0x7ffa2d564083]; [---] [ 7] SU2_CFD(+0x171b3e)[0x55c98b569b3e]; [---] *** End of error message ***; Segmentation fault; ```. i guess in the dry run mode, some algorithm are ignored and therefore the segmentation fails. ; I was wondering: . 1) Are there any additional output variables that come with the turbomachinery settings (besides those, available in the folder) . 2) If not, available output for the solver can be achieved by just dry running a case that has the same solver but no turbomachine settings on. Maybe a flag in the dry run option could be implemented on, that deactives the turbomachine settings in the case, to avoid the error message.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119:733,interface,interface,733,https://su2code.github.io,https://github.com/su2code/SU2/issues/857#issuecomment-1623092119,3,"['interface', 'message']","['interface', 'message']"
Integrability,"I would say it is fundamental to have some cases that start from converged solutions.; IMO all the cases we have that run for 10 iterations are trash from the point of view of testing correctness, they only test that we don't have severe integration bugs.; Even the cases that start from a good restart are NOT covering whether the solver is able to reproduce the correct behavior when starting from scratch...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1784#issuecomment-1304271814:238,integrat,integration,238,https://su2code.github.io,https://github.com/su2code/SU2/pull/1784#issuecomment-1304271814,1,['integrat'],['integration']
Integrability,"I'll try and find some time to have a look at this today. I think the issue is in the `jSpan == nSpanDonor - 1`. The final value in both the donor and target arrays are 1D values, the values at nSpanDonor - 2 are the values at the shroud. I think the original proposed fix is still needed here as further down you have an array accessing a postion of `kSpan + 1` which iirc resulted in the memory access violation. I think what has happened here is the Aachen case triggers this condition, and results in an error in the calculation of the coefficient for the linear interpolation. When we fixed it, we changed the simulation enough that it throws the residuals off as the computational problem is inherently different. A good test for this would be to extract the values at the interface from the turbomachinery special output with and without this change to see if this is the case. When we were first designing this case @alecappiello had an issue getting the results in one of the zones to agree with experimental results, this could be why?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783:779,interface,interface,779,https://su2code.github.io,https://github.com/su2code/SU2/issues/2276#issuecomment-2134790783,1,['interface'],['interface']
Integrability,"I'll try to break down each request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix in",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:106,interface,interface,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,8,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"I'm at the beginning, so i have no really clear my path. Anyway a soon as; possible i will follow your instructions. Sorry for this difficulty, but to; me a su2 development group is something totally new and i have to clarify; some aspects with my PhD student and with my professor. Thanks for your help; Marco. Il giorno gio 20 gen 2022 alle ore 11:47 Nijso ***@***.***>; ha scritto:. > Hi! If you want to work together over github, you can also create a; > project here:; > https://github.com/su2code/SU2/projects?type=beta and define tasks and; > divide the work. It would be good if you can sort out what the overlap is; > and what the unique parts of your research will be.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1496#issuecomment-1017354022>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AXL7TQXSL55PQIEHSDCPT4LUW7R3TANCNFSM5MC56OYQ>; > .; > Triage notifications on the go with GitHub Mobile for iOS; > <https://apps.apple.com/app/apple-store/id1477376905?ct=notification-email&mt=8&pt=524675>; > or Android; > <https://play.google.com/store/apps/details?id=com.github.android&referrer=utm_campaign%3Dnotification-email%26utm_medium%3Demail%26utm_source%3Dgithub>.; >; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516:1309,Message,Message,1309,https://su2code.github.io,https://github.com/su2code/SU2/pull/1496#issuecomment-1017587516,1,['Message'],['Message']
Integrability,"I'm getting to the same conclusion, the easier step might be to set; Multizone_Problem to false during recording steps... Ole Burghardt <notifications@github.com> escreveu no dia terça, 15/10/2019; à(s) 12:42:. > @rsanfer <https://github.com/rsanfer> You shouldn't get in touch with the; > new AD routines at all unless you're using CDiscAdjMultizoneDriver.; > So in case; > direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);; > gets executed, that likely means that the if-statement above,; > config->GetMultizone_Problem(), evaluates to true.; > Some weeks ago I added another boolean (Get_MultiphysicsDiscreteAdjoint or; > similar) but I was asked to revert that to the line above.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/803?email_source=notifications&email_token=AJCOXNYKA2UDXBUN6DTFXVDQOWUBNA5CNFSM4JAY4HS2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOEBIN6GA#issuecomment-542170904>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN2V3264434E3UH75ITQOWUBNANCNFSM4JAY4HSQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542173510:297,rout,routines,297,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542173510,1,['rout'],['routines']
Integrability,"I'm the one who created that warning message, so I can fill in some details about when and why that error message occurs. For adaptive mesh refinement, SU2 looks at each element and checks how important it would be to divide that element. It then assigns a numeric value (a ""sensor"") to each element representing the relative importance. That sensor is normalized by the max value and is assumed to be positive, so its range should be from 0 to 1. SU2 defines a number of elements that it wants to create (4455 in your case). It then loops through all the elements and looks for elements whose sensors fall above a threshold. That threshold starts at 0.999, close to the max value of 1. If an element has a sensor above that threshold, SU2 marks that cell for division. If it doesn't find enough elements, then it lowers the threshold and continues looking. That process continues all the way down till the threshold hits 0. Sometimes, SU2 can't find enough elements to adapt. The threshold goes all the way to 0, and there's still not enough. Then it prints that warning and continues. That's what you're seeing. The code only mentions triangles, quadrilaterals, and tetrahedrons as a guess to what's wrong. You'll notice it says your grid ""may"" have too high a percentage of other types. If your grid were composed solely of hexahedrons, for example, then it won't find any elements to adapt and print that warning message. There's no check to confirm that this guess is actually correct. In your case, you only have quads and triangles, so the guess is obviously mistaken. As to what is actually going wrong in your case, I would have to dig in a little deeper to find out what's going on. I would guess that your elements aren't being marked as ""divisible,"" but I'm not sure why.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-434924444:37,message,message,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-434924444,3,['message'],['message']
Integrability,I'm trying to build SU2 with NVIDIA HPC compiler.; I found error with meson about dependency problem.; I found cond_config.hpp without NVIDIA HPC macro check. Does this mean SU2 didn't consider NVIDIA HPC compiler?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1605845588:82,depend,dependency,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1605845588,1,['depend'],['dependency']
Integrability,"I'm with Juan on this... an in-house option in C++ would be best to avoid dependencies and have control of the algorithms for further tuning and easier application throughout the codebase. If anyone is willing to give it a shot, please let us know, and we can help with integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/282#issuecomment-224838550:74,depend,dependencies,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/282#issuecomment-224838550,2,"['depend', 'integrat']","['dependencies', 'integration']"
Integrability,"I've been doing some recreational reading on strategies that people have used for vectorization of fluxes but so far I have not thought of a way to reconcile them with the nice encapsulation we have of the numerics. For gradients (at least GG) and limiters on the other hand I do have ideas. By the way is there a branch on the repo for the work you, Francisco, Intel, and others did on this kind of stuff?. Yeah making solution variables members of the solver would avoid a lot of virtual calls but it would make it harder to eventually reach the solution for post processing, or in other areas like Integration/Iteration where the solution is manipulated directly by non-solver classes, we will see...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-513171591:601,Integrat,Integration,601,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-513171591,1,['Integrat'],['Integration']
Integrability,"I've been testing this a bit this afternoon, things look ok.; We can revisit the accessor functions for the entire domain once we can return the container by reference instead of copying the data first.; We can also look into code-generating accessors for markers for whatever volume accessors we define, once the names stabilize a bit, there are some inconsistencies in the naming of the old python wrapper functions. This needs regression tests now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772:400,wrap,wrapper,400,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1426926772,1,['wrap'],['wrapper']
Integrability,"I've managed to compile the `_pysu2.so`, indeed, with the typical build process. Fiddling further with manual `swig` a bit, I narrowed where it produces the wrong output: in generating `SU2_APIPYTHON_wrap.cxx`. So, I preserved one made during the build, and then even got the Python 3 wrapper version by running `swig` with the `-py3` key. Both imports are going fine, so, I'm closing the issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-418307677:285,wrap,wrapper,285,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-418307677,1,['wrap'],['wrapper']
Integrability,"I've messed around with this a bit in some of my other branches. Since I've been using python scripts, I've used the minimum CFL in the volume at the end of the flow solution (obtained from the history file) as the CFL in my adjoint runs. I figured that would be the largest CFL that could be applied everywhere and give a contractive iteration. Doing so significantly reduced the cost of the adjoint (obviously proportional to CFL_Min/CFL_Init). We could probably do even better and output the local CFL in the restart then load that into adjoint runs, maybe with a reduction factor if we want to be conservative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213:323,contract,contractive,323,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-673044213,1,['contract'],['contractive']
Integrability,"I've recently run into a problem with periodic geometry when I run a RANS problem on 16 cores or more (256+ MPI tasks). While initializing the Jacobian structure for the turbulence model, I run into one of two errors, depending on the core count. The first error results in the following error message:; ```; Fatal error in MPI_Sendrecv: Message truncated, error stack:; MPI_Sendrecv(249).................: MPI_Sendrecv(sbuf=0x2ee74f0, scount=10, MPI_DOUBLE, dest=19, stag=0, rbuf=0x2ee68e0, rcount=385, MPI_MPIDI_CH3U_Receive_data_found(144): Message from rank 25 and tag 0 truncated; 3200 bytes received but buffer size is 3080; aborting job; ```. The second error just leads to the solver hanging indefinitely at the `Initialize Jacobian structure (SA model)` step. I'm guessing that an MPI send/receive is left dangling. I have not seen these problems at lower core counts (2-4 cores with 2-32 MPI tasks). **The errors seem to be tied to the way the periodic send/receives are set up.** If I change the periodic boundaries to far-field boundaries, the error vanishes. I've also done a lot of work to weed out possible causes:. + I've generated the meshes using both `SU2_MSH` and the `su2perio` Fortran tool.; + I've run this on two different supercomputers, with different MPI builds.; + I've tested multiple different meshes with different resolutions.; + I've tried changing the RANS model and steady/unsteady options.; + I've even used a different solver (our hybrid solver) that's completely independent of the RANS solver classes. Same error.; + The problem occurs whether you're restarting or starting without a restart file. I've got a minimal example that you can use to test this for yourself, in the attached files. It should be self-explanatory. [MPI_Failure_Example.tar.gz](https://github.com/su2code/SU2/files/2167185/MPI_Failure_Example.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/550:218,depend,depending,218,https://su2code.github.io,https://github.com/su2code/SU2/issues/550,4,"['Message', 'depend', 'message']","['Message', 'depending', 'message']"
Integrability,"I've thought about this a bit, and I think the best way forward for this BC is to assume thermal equilibirum in the subsonic flow. In that case the ongoing characteristic for total density can be used to solve for the full thermodynamic state. I think this probably is consistent with use cases such as fuel injection in scramjets, where the injected fluid would be in thermodynamic equilibrium.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882#issuecomment-1399418401:308,inject,injection,308,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882#issuecomment-1399418401,2,['inject'],"['injected', 'injection']"
Integrability,"If I understand, you're calling `swig` manually? The typical way to set up the python wrapper is to use the typical build process (i.e. configure, make, make install) but to include the flag `--enable-PY_WRAPPER` during the configure step. The build process will automatically call `swig` for you, with the correct arguments. See the docs for more information: https://su2code.github.io/docs/Python-Wrapper-Build/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-404888496:86,wrap,wrapper,86,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-404888496,2,"['Wrap', 'wrap']","['Wrapper-Build', 'wrapper']"
Integrability,"If it works, why not? mpicxx is normally just a wrapper and uses the currently active g++ compiler.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744582401:48,wrap,wrapper,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744582401,1,['wrap'],['wrapper']
Integrability,"If this is not going to be merged then consider adding `FindMKL.cmake`, `CheckLinkerFlag.cmake` and `LibraryUtils.cmake` and updating `cmake_module_path` in `meson.build` so that meson can find MKL if it was installed from PPA since includes/libraries are not placed in a common directory. https://mesonbuild.com/Dependencies.html#cmake",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552432172:313,Depend,Dependencies,313,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552432172,1,['Depend'],['Dependencies']
Integrability,"If you are interested, @vdweide spent considerable time between 2003 and 2008 writing a multiblock-structured turbo machinery code called SUmb, as part of the DoE ASCI program. SUmb, although written in Fortran90/95, had all of the interpolation capabilities that you need for turbo machinery computations when radial inlet / outflow profiles (Tt, Pt, flow angles, static pressure, etc.) are given as inputs on a radial grid whose spacing does not match that of the actual computational grid. You may consider creating some interpolation functions (with all the safeguards and error codes) in C++ based on the SUmb code (which was structured in a C++-like way) or at least take inspiration from that approach to identify interpolation utilities / libraries in C++ that could be used for the same purpose. Both @vdweide and I can provide you with access to the appropriate routines / functions in SUmb. On Sep 20, 2019, at 3:30 PM, Aman uz zaman Baig <notifications@github.com<mailto:notifications@github.com>> wrote:. @clarkpede<https://github.com/clarkpede> Thanks for your response! My work in focused on Turbomachinery and very frequently we need to have inlet profiles. I hope my work will give a neater, cleaner way of making this possible, though I also used python scripts in the past. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/791?email_source=notifications&email_token=AA5FFRDZYQ56RTPMG7RHC6DQKVFJ5A5CNFSM4IYRTZJKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD7IBREI#issuecomment-533731473>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AA5FFRCUZWNCGUIGYDSADO3QKVFJ5ANCNFSM4IYRTZJA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/791#issuecomment-533740827:872,rout,routines,872,https://su2code.github.io,https://github.com/su2code/SU2/issues/791#issuecomment-533740827,1,['rout'],['routines']
Integrability,"If you are looking for another way to view all of the current config options, you can find them all directly in config_structure.cpp under the routine SetConfig_Options(). We also have a script that should be able to parse this portion of code automatically to give you a clean list, but it might need to be fixed up a little. That script is parse_config.py and can be found in SU2/SU2_PY/.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/277#issuecomment-221687875:143,rout,routine,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/277#issuecomment-221687875,1,['rout'],['routine']
Integrability,"If you can continue on this one for bit more while we wrap up #1560 (which also had some changes in some regressions) it would help us.; You'll need to disable specific CGNS or HDF5 warnings in the respective meson.build files (in externals/cgns/...), it took some time to get our code warning-free and we shouldn't go back on that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1131659297:54,wrap,wrap,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1131659297,1,['wrap'],['wrap']
Integrability,"If you don't mind I'll leave this question open for now.; I'm planning to provide a simplified example setup later on, once I've had time to properly dive into the wrapper API.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958:164,wrap,wrapper,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1071052958,2,['wrap'],['wrapper']
Integrability,"If you have a solution that allows you to use system-wide via an option and self-contained by default, please open a pull request.; As long as this option warns about having to manage dependencies manually I'm fine with it.; If you know a clean way of detecting the system-wide ninja and bypassing the ninja dependency that would also be an improvement.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450430036:184,depend,dependencies,184,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450430036,2,['depend'],"['dependencies', 'dependency']"
Integrability,"If you look at the testing history, commit 4f5f3ed doesn't pass the regression tests, while commit 8551cac does. Only two tests are failing on 4f5f3ed: `discadj_topol_optim` and `discadj_fsi_airfoil`. The difference between the two commits is a simple change. I changed the `SU2_MPI::Error` routine to give a return status of `EXIT_FAILURE` instead of `0`. Since `0` is conventionally defined as a successful program exit, returning `EXIT_FAILURE` makes more sense than returning `0` when `SU2_MPI::Error` is called. So why did that change cause the regression tests to fail? My suspicion is that these two tests have been exiting with an error for some time, but these regressions were not picked up by Travis since SU2 kept on returning `0` (i.e. success). Changing the exit code of `SU2_MPI::Error` doesn't cause any errors, but it will expose errors that are (sometimes silently) occurring. @pcarruscag I think you added these tests. Any idea why they're failing?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-462951152:291,rout,routine,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-462951152,2,['rout'],['routine']
Integrability,"If you type ""git log"", is this the first message you see?; ```; commit 3f9402f499dfba9b5a7f633fda1e452e48722e40; Merge: c0867da 4f9bc2f; Author: Jessie Lauzon <jtlau@users.noreply.github.com>; Date: Fri Mar 6 13:52:14 2020 -0800; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600843376:41,message,message,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600843376,1,['message'],['message']
Integrability,Implement prism elements in the Tecplot binary output routines (TecIO),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/57:54,rout,routines,54,https://su2code.github.io,https://github.com/su2code/SU2/issues/57,1,['rout'],['routines']
Integrability,Implement pyramid elements in the Tecplot binary output routines (TecIO),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/56:56,rout,routines,56,https://su2code.github.io,https://github.com/su2code/SU2/issues/56,1,['rout'],['routines']
Integrability,Implement routines/a module for evaluating grid quality metrics,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/149:10,rout,routines,10,https://su2code.github.io,https://github.com/su2code/SU2/issues/149,1,['rout'],['routines']
Integrability,"In CNSSolver, we do in BC_Isothermal_Wall_Generic:; ```; if (!cht_mode) {; Twall = config->GetIsothermal_Temperature(Marker_Tag) / Temperature_Ref;; }. ```. And we do not check for cht_mode in IncNSSolver. I think this might be the root cause of entering this routine? ; @Cristopher-Morales can you check this?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2281#issuecomment-2111147187:260,rout,routine,260,https://su2code.github.io,https://github.com/su2code/SU2/pull/2281#issuecomment-2111147187,1,['rout'],['routine']
Integrability,"In `CDiscAdjMultizoneDriver::HandleDataTransfer` we have the following code structure:. bool DeformMesh = false;; for (unsigned short jZone = 0; jZone < nZone; jZone++){; if (jZone != iZone && interface_container[jZone][iZone] != nullptr) {; DeformMesh = DeformMesh || Transfer_Data(jZone, iZone);; }; }; if (DeformMesh) DynamicMeshUpdate(iZone, ExtIter);. `Transfer_Data` returns `true` if and only if the interface type is `BOUNDARY_DISPLACEMENTS`. If this happens once, no further call to `Transfer_Data` will occur for this particular `iZone` because of short-circuit evaluation of the `||`. . Though I'm new to the adjoint driver, I can hardly imagine that this is intended. Maybe the order of the arguments of `||` should be swapped, or it should be coded as in `CMultizoneDriver::Update`?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1285:407,interface,interface,407,https://su2code.github.io,https://github.com/su2code/SU2/issues/1285,1,['interface'],['interface']
Integrability,"In my case I need to build like this:; ```; export CC=mpicc.mpich; export CXX=mpicxx.mpich; export CXXFLAGS=""-march=native -funroll-loops -ffast-math -fno-finite-math-only"". ./meson.py build --optimization=2 --warnlevel=3 -Denable-tests=true --prefix=$PWD/build -Dcustom-mpi=true -Dwith-omp=true; ./ninja -C build install; ```; Maybe building with OpenMP makes a difference.; The unit test output is; ```; ../UnitTests/Common/toolboxes/ndflattener_tests.cpp:78: FAILED:; REQUIRE( nd3[r][0][0] == 0.7 ); with expansion:; 2.0 == 0.7; ```; valgrind does not pick up anything on the unit test, only on the new test case added in #1892 ; The expected output is as shown in hybrid_regression.py (note that the testcases branch is not develop).; When the UB manifests the residuals are not the expected (by varying orders of magnitude depending on the spurious value of wall roughness).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650:828,depend,depending,828,https://su2code.github.io,https://github.com/su2code/SU2/issues/1893#issuecomment-1385691650,1,['depend'],['depending']
Integrability,"In solver_direct_mean.cpp at the Viscous_Forces routine the heat flux is computed incorrectly. The variable GradTemperature should be multiplied by the UnitNormal variable, rather than the Normal variable. If not, it will result in incorrect heat fluxes at the wall.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/70:48,rout,routine,48,https://su2code.github.io,https://github.com/su2code/SU2/issues/70,1,['rout'],['routine']
Integrability,"In terms of file organisation I can think of two strategies, one would be grouping them according to parent class, numerics, solver, etc. this would maybe make navigation easier for people who work on the code daily but it does little more than what the naming convention already does. The other would be to group families of classes and that, I think, would help people who are less familiar with the code, so for example numerics, solvers, variables, etc. used for fluid simulations would be separate from the ones used for other physics. The main re-compilation trigger is probably the config, every file includes it and not all need it. Not much can be done here because most classes do use the config in some way but we could try to minimise how much the dependency spreads by:; - Reviewing what cpp files actually need to include config_structure.hpp; - Including from the cpp and using a forward declaration on the corresponding hpp. Other sensitive ""triggers"" are the header files of classes with many children (solver, numerics, and variable) splitting the header files for these (maybe by family for small classes to avoid an explosion of hpp files) would allow working on a child class without re-compiling all others so often. The clients of CSolver would only include the header for the abstract class so those too would be shielded from changes in children classes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-423970045:760,depend,dependency,760,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-423970045,1,['depend'],['dependency']
Integrability,"In the process of making the MG routines OpenMP-friendly, I'll also restructure and clean those files (CIntegration & co).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/824#issuecomment-583742554:32,rout,routines,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/824#issuecomment-583742554,1,['rout'],['routines']
Integrability,Included github actions in the dependabot config,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:31,depend,dependabot,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,1,['depend'],['dependabot']
Integrability,"Indeed thats a bug when you enable the python wrapper... I am gonna solve this soon. For the time being just compile the normal and AD binaries separately by going to SU2_BASE and SU2_AD and `run make install` in each of them. You should see the same error again in SU2_AD, but you can ignore it, everything should have been compiled fine. Best,; Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-332762075:46,wrap,wrapper,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-332762075,1,['wrap'],['wrapper']
Integrability,"Indeed, the compilation with AD support is not compatible with the Python wrapper yet. If you are not interested in using the wrapper, just remove the --enable-PY_WRAPPER option and it should be OK. In general, if you want to compile SU2 with the wrapper in parallel, mpi4py has to be properly installed on your system. As the wiki says, the easiest way to install it is by using python-pip (example for Linux).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-332791823:74,wrap,wrapper,74,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-332791823,3,['wrap'],['wrapper']
Integrability,Install SU2 by python wrapper build in singularity container,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739:22,wrap,wrapper,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/739,1,['wrap'],['wrapper']
Integrability,Integrate MKL 2019 into Develop branch,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/542:0,Integrat,Integrate,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/542,1,['Integrat'],['Integrate']
Integrability,Integrate MKL option for performance improvement on Intel Architectures.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:0,Integrat,Integrate,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,1,['Integrat'],['Integrate']
Integrability,Integrated Heatflux for flow problems,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1530:0,Integrat,Integrated,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1530,1,['Integrat'],['Integrated']
Integrability,Interface between the moving and stationary zones generates wrong results as the moving zone rotates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255:0,Interface,Interface,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255,1,['Interface'],['Interface']
Integrability,Is it ok if I add a MeDiPack update for const correctness of the scatter routines to this PR?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1133#issuecomment-745289502:73,rout,routines,73,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133#issuecomment-745289502,1,['rout'],['routines']
Integrability,"Is there a way to wrap SU2 code in a namespace quickly? When I try to add new header files from another library, the SU2 constants and variables often conflict.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1410:18,wrap,wrap,18,https://su2code.github.io,https://github.com/su2code/SU2/issues/1410,1,['wrap'],['wrap']
Integrability,Issue building python wrapper with CGNS support (problems with static/dynamic HDF5 dependencies),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:22,wrap,wrapper,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,2,"['depend', 'wrap']","['dependencies', 'wrapper']"
Integrability,It has occurred to me that perhaps I need to compile hdf5 on my system for the parallel integration of CGNS with OpenMPI? I think this might be why make is throwing that error. I'll report back after trying it. Amir,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/659#issuecomment-469467911:88,integrat,integration,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/659#issuecomment-469467911,1,['integrat'],['integration']
Integrability,"It is compiler dependent, I got the warning with clang with warnlevel 2, now it will probably not show the warning because I put an ""if false"" around that part of the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1171#issuecomment-765641337:15,depend,dependent,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1171#issuecomment-765641337,1,['depend'],['dependent']
Integrability,"It is not core dependent (I have tested on 2, 10, and 30 cores). Sometimes I get no error message at all, just a ""# of processes were killed"" then it remains frozen. And here is the error log for the QuickStart (same issue); [QuickStartLog.txt](https://github.com/su2code/SU2/files/4576792/QuickStartLog.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623648419:15,depend,dependent,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623648419,2,"['depend', 'message']","['dependent', 'message']"
Integrability,"It is now possible to define more complex functions in a separate file called `functions.su2x`. The functions defined there are available in the inline expressions. You can either give the functions explicit arguments or you can use them without any arguments. All fields are available in the global scope. Which variables are available depends on the context in which the function is used in the code. . functions.su2x:; ```; function dragOverLift(){; l = LIFT;; d = DRAG;; return d/l;; }. function speedOfSound(gamma){; p = PRESSURE;; d = DENSITY;; return sqrt(gamma*p/d);; }; ```. config file:; ```; SCREEN_OUTPUT=(INNER_ITER, WALL_TIME, RMS_DENSITY, {dragOverLift()}); VOLUME_OUTPUT = (COORDINATES, SOLUTION, {speedOfSound(1.4)}); ```. The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-605486038:337,depend,depends,337,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-605486038,1,['depend'],['depends']
Integrability,It looks like the builds are failing because of swig (python wrapper) and a missing definition of size_t.; What does OMPT stand for? OpenMP threads? (Google was not helpful),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214#issuecomment-788213078:61,wrap,wrapper,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788213078,1,['wrap'],['wrapper']
Integrability,It looks like the regression tests fail because there is an additional `------------------------------ Begin Solver -----------------------------; ` at the end of the output of the python wrapper test cases.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-356044234:188,wrap,wrapper,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-356044234,1,['wrap'],['wrapper']
Integrability,"It seems like your situation may have been resolved, but for archival purposes, I'll list my workaround here. This problem occurs when you've installed python packages in two different locations. This could be due to installing some python packages in a system directory (e.g. `/usr/lib/`) and some in a user directory (e.g. `~/.local/`). SU2's build process is set to automatically detect the default package location, but it's not equipped to handle multiple package locations. There are some hardcoded includes, but these only work for python 2.7. I don't consider this a bug *per se* because multiple python package directories is not a standard use case. #### The symptoms. When building SU2 with the python wrapper you'll see the following error during the swig build:; ```; <install directory>/../SU2_PY/pySU2/pySU2.i:64: Error: Unable to find 'mpi4py/mpi4py.i'; ```; But mpi4py is indeed installed on your system and it's on your python path, as confirmed by opening a python terminal and running `import mpi4py`. #### The easiest workaround. Switch to a [virtualenv](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). This will ensure that all of your python packages are stored in single location. #### Alternate workaround. In this method, you change the hardcoded includes to match mpi4py's package location. First I figure out where my mpi4py is installed. I start a terminal session of python using the python environment I want to use (in this case, it's python 3.6), and then run:; ```; from mpi4py import MPI; MPI; ```. Since I have mpi4py installed on your system and it's on my python path, I see something like:; ```; <module 'mpi4py.MPI' from '/home/clarkpede/.local/lib/python3.6/site-packages/mpi4py/MPI.cpython-34m.so'>; ```. The `/home/clarkpede/.local/lib/python3.6/` directory is where my mpi4py package is installed. But the swig compile command includes `/home/clarkpede/.local/lib/python2.7/`. That's not the right directory! So first I ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-515693590:713,wrap,wrapper,713,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-515693590,2,['wrap'],['wrapper']
Integrability,"It shows Error: ""ValueError: mpi4py.MPI.Message size changed, may indicate binary incompatibility. Expected 40 from C header, got 32 from PyObject"".",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/837:40,Message,Message,40,https://su2code.github.io,https://github.com/su2code/SU2/issues/837,1,['Message'],['Message']
Integrability,"It's a bit more involved because we want to support ""offline"" mode. But that's what we do with dependencies that we cannot copy due to license restrictions. With that said Nijso has probably fought enough with unit tests for the rest of the year, so if you want to send a pull request our way you are most welcome :); Cheers",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1726#issuecomment-1198903380:95,depend,dependencies,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/1726#issuecomment-1198903380,1,['depend'],['dependencies']
Integrability,"It's not always the case that using a restart file is continuing from a simulation. For example, if one has a simulation that has a similar solution as a seed. An example would be doing optimization and using a nearby flow solution. Here, having the iteration count start from zero is useful, because it's the more accurate measure. We would also have to this about how this interfaces with MAX_ITER. Right now it's really clear, but which does it mean when iterations don't start from zero?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103239930:375,interface,interfaces,375,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103239930,2,['interface'],['interfaces']
Integrability,It's the other right hand rule where you wrap the fingers around a vector,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1547871429:41,wrap,wrap,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1547871429,1,['wrap'],['wrap']
Integrability,"Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327374728:185,integrat,integration,185,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327374728,1,['integrat'],['integration']
Integrability,"Juan,. Indeed, it is desirable that at the highest level the details of the time integration scheme and number of zones per discipline should not be visible. The question is whether that is achievable for all combinations you can think of. This is especially the case for the time integration schemes. E.g. suppose you would like to use a multi-stage time integration scheme for a multi-physics problem. To obtain the design accuracy in time, this implies that the loop over the number of time stages is outside the loop over the number of physical disciplines. Hence at a very high level in the hierarchy, the details of the time integration should then be known. The situation becomes even more complicated when one would like to employ time integration schemes that allow for time accurate local time stepping, e.g. the ones we are currently working on for the DG solver. I won't bore you with all the details here, but those schemes basically require the loop over the multiple disciplines to be between the predictor and corrector step, while both these steps consist of multiple stages. Although it is probably possible to come up with a data structure that supports all this, the question is whether this is desirable. Apart from the fact that it would require a major overhaul in the high level design of SU2, the implementation will be less readable, especially for people that will be starting with the code. Also the parallelization may become significantly more complicated. The alternative is that for unsteady multi-physics problems, we put the restriction that only single stage time integration schemes can be used, e.g. DT_STEPPING_1ST and DT_STEPPING_2ND. In that case, the details of the time integration scheme can be hidden at the driver level, where we then simply have a loop over the number of physical disciplines. The consequence of course is that more advanced time integration schemes will not be available for multi-physics problems. In the above I just tried to picture w",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328441926:81,integrat,integration,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328441926,10,['integrat'],['integration']
Integrability,"Just a detail: I noticed that we get the print messages three times now, presumably for all multigrid levels? This is just aesthetic, but is it possible print only the first message and to suppress all following ones?. Setting rotating frame grid velocities.; Rotational origin (x, y, z): ( 4.77293, 2.52512e-06, -0.0373385 ); Angular velocity about x, y, z axes: ( 0, 0, 0 ) rad/s; Translational velocity in x, y, z direction: (-135.786, 0, -9.49509).; Rotational origin (x, y, z): ( 4.77293, 2.52512e-06, -0.0373385 ); Angular velocity about x, y, z axes: ( 0, 0, 0 ) rad/s; Translational velocity in x, y, z direction: (-135.786, 0, -9.49509).; Rotational origin (x, y, z): ( 4.77293, 2.52512e-06, -0.0373385 ); Angular velocity about x, y, z axes: ( 0, 0, 0 ) rad/s; Translational velocity in x, y, z direction: (-135.786, 0, -9.49509).; Rotational origin (x, y, z): ( 4.77293, 2.52512e-06, -0.0373385 ); Angular velocity about x, y, z axes: ( 0, 0, 0 ) rad/s; Translational velocity in x, y, z direction: (-135.786, 0, -9.49509).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1551611997:47,message,messages,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1551611997,2,['message'],"['message', 'messages']"
Integrability,"Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier... https://abseil.io",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-670974089:159,integrat,integrating,159,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670974089,1,['integrat'],['integrating']
Integrability,"Let me recall the other sub-issues reported by @suargi:. **Third issue**; > After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. I was able to partially reproduce this with @suargi's help, by modifying `SU2/TestCases/rans/rae2822/turb_SA_RAE2822.cfg`, setting MGLEVEL=6 (instead of 3) and MGCYCLE=FULLMG_CYCLE (instead of W_CYCLE). This could become the new regression test by the way. Both with `mpirun -n 3` and `mpiexec -n 3` we observed non-existing point IDs of the normal neighbor. In #1430 I describe what I think is the problem. For `mpirun -n 2` and `mpiexec -n 2` I get another kind of error, I'll further investigate this. We did not see a difference in behaviour of `mpirun` and `mpiexec` on my system however. **Edit**: My version are `mpirun (Open MPI) 4.1.0` and `mpiexec (OpenRTE) 4.1.0`. **Fourth issue**; > Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647:127,depend,depending,127,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-964163647,1,['depend'],['depending']
Integrability,"Looking ok for me now on ubuntu, but I am getting an error on OS X w/ Apple LLVM:. In file included from ../../../Common/lib/../src/mpi_structure.cpp:43:; In file included from ../../../externals/medi/src/medi/medi.cpp:29:; ../../../externals/medi/src/medi/ampi/ampi.cpp:39:28: error: default initialization of an object of const type 'const medi::AMPI_IN_PLACE_IMPL' without a user-provided default constructor; const AMPI_IN_PLACE_IMPL AMPI_IN_PLACE;; ^; {}; 296 warnings and 1 error generated.; make[2]: *** [../src/libSU2_AD_a-mpi_structure.o] Error 1. Also, lots of overloaded virtual warnings for multiple functions in the passive type header, such as:. ../../../externals/medi/include/medi/ampi/../../../generated/medi/../../include/medi/ampi/typePassive.hpp:159:19: warning: 'medi::MpiTypePassive<medi::PairWithInt<long double> >::createModifiedTypeBuffer' hides overloaded virtual; function [-Woverloaded-virtual]. Lastly, I really like the new error routine. Nice work. My only (picky) comments are on the formatting: could you please add a couple of empty lines of white space after the exit? The SU2 errors are getting lost with some other MPI clean up output and are not easy for the user to see immediately. One more personal preference: I would go without the line btwn the function and error message for clarity and, for consistency with the successful exit, remove the ""Exiting now..."" in favor of something like. ------------------------- Error Exit (SU2_CFD) ------------------------. What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-350111995:960,rout,routine,960,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-350111995,2,"['message', 'rout']","['message', 'routine']"
Integrability,"Looks good, thanks @vdweide, @economon.; I took a quick peak, it looks like there wasn't any change to the interpolation routines - can this same tree search be applied to finding nearest neighbors in the interpolation routines, and if so did you look into that yet or would that be a project for the future?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/288#issuecomment-231213370:121,rout,routines,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/288#issuecomment-231213370,2,['rout'],['routines']
Integrability,"Looks like the commented code was added here (https://github.com/su2code/SU2/commit/b5db893bcc57a67abbbe43ddd5a87753ec61d23b) but never activated. The Matrix* routines are not being used anywhere at the moment. Do you see some value in testing it out? Otherwise, might be best to remove so we aren't carrying around dead code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653#issuecomment-485039016:159,rout,routines,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/653#issuecomment-485039016,1,['rout'],['routines']
Integrability,"Made some progress on this. The build system now automatically finds the Python directories and library, so the wrapper is now built against both Python 2.7 and 3.6 in the test suite. However, some tests are still failing. Any ideas what might be going wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-326741839:112,wrap,wrapper,112,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-326741839,1,['wrap'],['wrapper']
Integrability,"Made the last of the changes that I wanted too in connection to the comments provided by @economon and @pcarruscag . Just as a review of the things I changed: . 1) Changed the error message; 2) Implemented the UQ methodology for a non-ideal fluid and for both gradient methods (AvgGrad and AvgCorrectedGrad). ; 3) generalized the eigen-decomposition functions for order n matrices. Also made the functions static so that they can be used without the need for an instantiation of the CNumerics class; 4) Improved performance by moving variable declarations to the class constructor for CNumerics; 5) Changed UQ config option names to be more specific. Added an output message for when people use the previous names.; 6) This instigated some changes to the TestCases config files, and to the compute_uncertainty.py script.; 7) Some general code clean up. Let me know if there are any other improvements that I should include.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/570#issuecomment-434551782:182,message,message,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/570#issuecomment-434551782,2,['message'],['message']
Integrability,"Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/249:63,message,message,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/249,8,['message'],['message']
Integrability,"May I add my 10 cents: I also encountered this problem, starting from ver 7 if I recall correctly. It happens on a cluster using rdma protocol and NFS, with Redhat Linux (matches the Centos configuration listed above). It doesn't happen on a single machine with several cores using Ubuntu (my LT). Fortunately, it aborts after all writing is complete... Moving to ascii output (RESTART_ASCII, READ_BINARY_RESTART=NO, WRT_BINARY_RESTART=NO had no effect (still aborts).; I think that it is a problem related to the machine setup/system SW. However, it doesn't happen with other codes or previous versions of SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-624457511:134,protocol,protocol,134,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-624457511,1,['protocol'],['protocol']
Integrability,Maybe this will help.. can you please try setting the viscosity and eddy viscosity inside V_reflected in the if (viscous) {} section of the BC_Sym routine with something like:. ```; /*--- Set laminar and eddy viscosity at the reflected state ---*/. V_reflected[nDim+5] = node[iPoint]->GetLaminarViscosity();; V_reflected[nDim+6] = node[iPoint]->GetEddyViscosity();; ```,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513442969:147,rout,routine,147,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513442969,1,['rout'],['routine']
Integrability,"Maybe we can approach it from the minimal set of features you need.; Mesh deformation seems to work fine, then you are applying the gust via the farfield?; Then for the free-flying part maybe the best would be a translating moving frame (you'd need to implement the acceleration term). (Translating the mesh over large distances would lead to floating point issues); For rotation maybe rigid rotation would be the easiest route? This would not require the rotating frame source term.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1495721964:422,rout,route,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1495721964,1,['rout'],['route']
Integrability,"Maybe we could define the NO_OPTINAL_CONST based on the MPI Version. https://stackoverflow.com/questions/17772906/why-does-mpi-send-accept-void-source. Gives a hint as to when the transition was made. On Tue, 2017-11-21 at 19:53 +0000, Tim Albring wrote:. @talbring commented on this pull request. ________________________________. In .travis.yml<https://github.com/su2code/SU2/pull/473#discussion_r152384146>:. > @@ -20,7 +20,7 @@ branches:. env:; global:; - CXXFLAGS=""-O3 -Wall -Wextra -Wno-unused-parameter -Wno-empty-body -Wno-format-security""; + CXXFLAGS=""-O3 -Wall -Wextra -Wno-unused-parameter -Wno-empty-body -Wno-format-security -DMEDI_NO_OPTIONAL_CONST"". The problem is that depending on the actual MPI implementation (so for example MPICH, openmpi etc.) send buffer arguments might be declared as const or not. Unfortunately, there is no (easy) way to get that information automatically. It might be even different between versions of openmpi (on travis it is v1.6.5 and its necessary, locally I have v3.x, and its not)... so for now it is trial and error whether this is necessary or not. Maybe I can find that information somewhere, then I will provide it in the wiki. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/473#discussion_r152384146>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AMWwAeCRxzq9FO4-6pkSHTDnihbtByhvks5s4yoygaJpZM4QmNie>. --. Max Sagebaum Chair for Scientific Computing, TU Kaiserslautern, Bldg/Geb 34, Paul-Ehrlich-Strasse, 67663 Kaiserslautern, Germany Phone: +49 (0)631 205 5638 Fax: +49 (0)631 205 3056 Email: max.sagebaum@scicomp.uni-kl.de URL: www.scicomp.uni-kl.de",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-346273506:685,depend,depending,685,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-346273506,1,['depend'],['depending']
Integrability,"Maybe we could try to implement a check for whether the file exists in the directory and make a standard alteration to the name. We would have to be careful though that this doesn't interfere with cases that depend on the output files - aka continuous_adjoint, finite_difference, etc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/99#issuecomment-103646996:208,depend,depend,208,https://su2code.github.io,https://github.com/su2code/SU2/issues/99#issuecomment-103646996,1,['depend'],['depend']
Integrability,Merging this in - some other contributions depend upon it. Thanks @vdweide,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/676#issuecomment-489276631:43,depend,depend,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/676#issuecomment-489276631,1,['depend'],['depend']
Integrability,Meson Build on Linux with Python Wrapper: python3 not found,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903:33,Wrap,Wrapper,33,https://su2code.github.io,https://github.com/su2code/SU2/issues/903,1,['Wrap'],['Wrapper']
Integrability,"Monika,. There is a chance we could work together on this…Eduardo Molina (copied) co-advised a short project last year on wall functions which made some progress but did not finalize an implementation. It may be a better starting point. Eduardo, can you comment where that code went?. I am also copying Matt S. who is interested in wall function implementations in SU2. Perhaps we can get everyone on the same page to get these working in the baseline state…and then improve them in various ways?. Best,. Juan. > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com> wrote:; > ; > ; > Sure, now make sense why it is showing issues, Thank you for the; > confirmation!; > ; > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > wrote:; > ; > > I gave the wall function routines a cleanup in #975; > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > missing, we compute the shear stresses but they are not considered in the; > > BC's of the NS solver.; > >; > > —; > > You are receiving this because you commented.; > > Reply to this email directly, view it on GitHub; > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > > unsubscribe; > > <https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA>; > > .; > >; > ; > ; > -- ; > *Thank you,*; > ; > *Monika Chauhan *; > ; > *Graduate Research Assistant, Doctoral Program*; > ; > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; > *Cell# 540-998-5012*; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/399#issuecomment-634777816>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AA5FFRFBZC767ZAD7HMXWQ3RTU4VPANCNFSM4DN4N2YA>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-634782860:802,rout,routines,802,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-634782860,1,['rout'],['routines']
Integrability,More helpful messages for FFD setting,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2032:13,message,messages,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2032,1,['message'],['messages']
Integrability,"Motti; Welcome to the community 🙂; Did you install with mpi?; Best; Eran. On Wed, Apr 15, 2020 at 17:39 mottiadar <notifications@github.com> wrote:. > Hi Everyone.; >; > I'm new to SU2.; > Installed on my mac (Catalina) the parallel version 7.0.2.; > Also installed MPICH.; >; > I am not using bash but rather tcsh (maybe there is a problem there...); > Added the following lines to .tcshrc:; > setenv SU2_RUN /Applications/SU2/bin; > setenv PYTHONPATH $SU2_RUN; >; > I have tried to run the onera3D tutorial case in parallel and got the; > following message:; > % parallel_computation.py -f inv_ONERAM6.cfg -n 2; > Traceback (most recent call last):; > File ""/Applications/SU2/bin//parallel_computation.py"", line 110, in; > main(); > File ""/Applications/SU2/bin//parallel_computation.py"", line 57, in main; > options.compute ); > File ""/Applications/SU2/bin//parallel_computation.py"", line 88, in; > parallel_computation; > info = SU2.run.CFD(config); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 111, in CFD; > the_Command = build_command( the_Command, processes ); > File ""/Applications/SU2/bin/SU2/run/interface.py"", line 266, in; > build_command; > raise RuntimeError('could not find an mpi interface'); > RuntimeError: could not find an mpi interface; >; > Ideas to what can I do?; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/938>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G6VMI65FZZ5IRC7BT3RMXBLRANCNFSM4MIUECNQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/938#issuecomment-614081827:551,message,message,551,https://su2code.github.io,https://github.com/su2code/SU2/issues/938#issuecomment-614081827,5,"['interface', 'message']","['interface', 'message']"
Integrability,Move all restart reading from solver constructors to dedicated LoadRestart() routines.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:77,rout,routines,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,1,['rout'],['routines']
Integrability,Multi-stage time integration schemes for multiple zones,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437:17,integrat,integration,17,https://su2code.github.io,https://github.com/su2code/SU2/issues/437,1,['integrat'],['integration']
Integrability,"Multiple improvements in the existing SU2 wing cutter for data postprocesing. In particular, the previous implementation was depending on some distance computation and the new one uses the index of the points to identify the correct cut avoiding rounding errors. Best,; Raul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/484:125,depend,depending,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/484,1,['depend'],['depending']
Integrability,Multizone py wrapper example (FSI),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2111:13,wrap,wrapper,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2111,1,['wrap'],['wrapper']
Integrability,"NDENCY_INSTALLATION=false</code> in your workflow, however we plan to remove this ability in future versions of the CodeQL Action. <a href=""https://redirect.github.com/github/codeql-action/pull/2031"">#2031</a></li>; <li>The CodeQL Action now requires CodeQL version 2.11.6 or later. For more information, see <a href=""https://github.com/github/codeql-action/blob/main/#2227---16-nov-2023"">the corresponding changelog entry for CodeQL Action version 2.22.7</a>. <a href=""https://redirect.github.com/github/codeql-action/pull/2009"">#2009</a></li>; </ul>; <h2>3.22.12 - 22 Dec 2023</h2>; <ul>; <li>Update default CodeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14025,depend,dependencies,14025,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependencies']
Integrability,"New code created by Blanca Fuentes Monjas, pushed by Evert Bunschoten for permission reasons. ## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1*T + n2*T^2 +n3*T^3 + n4*T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS) ; - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. ; - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent.; . ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ X ] I have added a test case that demonstrates my contribution, if necessary.; - [ X ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1684:197,depend,dependant,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/1684,1,['depend'],['dependant']
Integrability,New wrapper class for Inria's direct sparse solver PaStiX (external direct sparse solver),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771:4,wrap,wrapper,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/771,1,['wrap'],['wrapper']
Integrability,"Nice analysis @clarkpede. It is true that we simplify the Jacobians at the periodic boundaries, mostly to avoid issues with adding entries to the Jacobian from the neighbors that potentially do not live on our rank and to keep communication costs low (those neighbors are treated explicitly). This could be changed to communicate the full Jacobian.. but I am not sure it is worth the effort/cost. The approximation that is made should still be consistent though, because we only allow one of the repeated periodic nodes to participate in the linear solve with each nonlinear iteration, and then we communicate its update to its periodic pair. In short, the value of the solution should always be the same on periodic points with each iteration update, and if the problem converges to a steady-state (even in time stepping mode), the Jacobian should only affect convergence (the RHS should be the same). You could try the time stepping option with one of the RK methods to see if going fully explicit helps further isolate the issue. It could also be something related to the time step that is communicated. In the SetTime_Step() routine in the flow solver class, we do some special checks for time stepping mode to make sure that the minimum global time step is used in all cells. Might want to print out the dT communicated in the periodic comms or write the dT to the solution file to make sure everything is ok there too. Honestly, I don't think a ton of folks use the time stepping option in general with the FVM solver, so double-checking that it behaves well for a non-periodic problem could shed some light too, unless you have already done that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763#issuecomment-524007345:1129,rout,routine,1129,https://su2code.github.io,https://github.com/su2code/SU2/issues/763#issuecomment-524007345,2,['rout'],['routine']
Integrability,"Nice progress @pcarruscag!. I like the concept of your SIMD-friendly class that will take care of the data structure under the hood coupled with a standard type of loop statement (w/ +SIMDLEN). This should make it pretty easy for folks to still modify the kernels without having to worry about the data alignment, and they can reuse the same simple 'for' construct repeatedly. . Another reason to have our own lightweight class for this is that you can avoid dependence on OpenMP for SIMD (although that feature looks to have potential and wasn't available until somewhat recently) as well as the intrinsics. In my experience, the latter is especially bad for portability and readability (part of why we left the CaF work in a separate repo). It starts to become so specialized that compiling and modifying become difficult. W.r.t. OpenMP, another roadblock there a few years ago was making sure it is interoperable with CoDi for the adjoint, but I know this has been worked on and may be available by now. Might keep an open mind about point vs. edge. In some places, we may be able to pump up the compute in our loops by fusing kernels, as previously discussed (and I am guessing you are working on this already with gradients/limiters). Could change the final performance numbers significantly. Lastly, I know you are not there yet, but it is worth considering whether you can reuse anything you are developing in the kernels here for the linear solver routines. At some point, you will successfully reduce the cost of the residual kernels (RHS) to the bandwidth limit, and the majority of the iteration cost will be in the linear solver (it is already about 50% of the iteration cost before optimization, if I recall). Before making final decisions on strategy, you should consider if it will help in any of the linear solver routines too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530440072:459,depend,dependence,459,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530440072,8,"['depend', 'interoperab', 'rout']","['dependence', 'interoperable', 'routines']"
Integrability,"Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069:198,message,messages,198,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1307771069,1,['message'],['messages']
Integrability,"Nijso this type of change is too fragile I'm not going to approve it... There are initialization actions inside Run itself, it was not designed or tested to do single steps, and there's no chance this is going to work with all the features. Is this required to be able to initialize the solution? Convert this PR to adding the wrapper example and I'll thing about a better way of doing single steps.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960#issuecomment-1464710802:327,wrap,wrapper,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960#issuecomment-1464710802,1,['wrap'],['wrapper']
Integrability,"No meson option yet, it is a very small one though, the whole system works by detecting `-fopenmp`.; Your second comment is the main argument against moving the parallel section further up.; Allocation routines have the highest risk of making a mess, but even seemingly innocuous things like the small auxiliary arrays we allocate e.g. in CSolver and then use in derived classes are a problem.; I am almost done making the FEA solver completely hybrid parallel and I had to refactor most uses of those arrays. This is also why I took a more functional approach to the new limiter and gradient routines. The way we use CConfig is also not thread safe, we would need to make all ""SetSomethings"" atomic, which would be monumental.; Initially I would have a few parallel sections (it is not too difficult to then move them up if we think that is the way to go) I want to use the FEA solver to get an idea for the relative performance, after seeing the effect of `OMP_WAIT_POLICY` I am optimistic.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-566667503:202,rout,routines,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-566667503,2,['rout'],['routines']
Integrability,"No problem at all. I think the issue was that others had merged the changes into develop here from the web interface and those changes needed to be pulled down into your local copy before you could push the changes to .travis.yml up. I have just made the change, and I see the tests are now running! We'll get back with a review soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-435170261:107,interface,interface,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-435170261,1,['interface'],['interface']
Integrability,No. I tried a couple of things but ran into problems with both of them and I haven't done anything about it since. The first was to use one of the old MPI routines (like Set_MPI_ActDisk) to couple the two faces so they can communicate the residuals with each other. This was quite cumbersome and I did not want to copy paste large chunks of code. The other one was to set the two faces as periodic boundaries with zero distance between them but if I remember correctly this did not work because the MatchPeriodic routine gave an error back then. Maybe I am misremembering and it might work now or maybe we need to create a new MatchInternal routine to make it work.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-1029888609:155,rout,routines,155,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-1029888609,3,['rout'],"['routine', 'routines']"
Integrability,"Not directly related to this PR, but I noticed an potential bug in the Friction Forces routine, line 2258. The if condition checks ; ; if (iDim == 3); instead of . if (nDim == 3); Could you fix this one too?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1074#issuecomment-697544036:87,rout,routine,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1074#issuecomment-697544036,1,['rout'],['routine']
Integrability,"Not sure if you are aware, but the C++ MPI bindings have been deprecated since MPI-2.2:. http://www.mpi-forum.org/docs/mpi-2.2/mpi22-report/node328.htm. As MPI-3 becomes more prevalent, using the deprecate C++ MPI interface is dangerous for portability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/22:214,interface,interface,214,https://su2code.github.io,https://github.com/su2code/SU2/issues/22,1,['interface'],['interface']
Integrability,Not without changing the meson.build script to treat blas and lapack separately (which I don't think we should do since a default build-from-source openblas will have both) or specifying a load of environment variables.; In said script you can try modifying `su2_deps += blas_dep` to; ```; su2_deps += blas_dep; su2_deps += dependency('lapack'); ```; Or maybe it will work if you just specify `-Dblas-name=lapack` and blas happens to be included as an automatic dependency of that.; Our documentation does state that:; >Note: The BLAS library needs to provide support for LAPACK functions. I'll update it with this arch linux special case when I get a minute.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632083173:324,depend,dependency,324,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632083173,2,['depend'],['dependency']
Integrability,"Note: moving solver_, numerics_, integration_preprocessing to driver.cpp not only possible, but necessary because if they are left in definition_structure.cpp there are recursive dependencies. (with driver_preprocessing)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/195:179,depend,dependencies,179,https://su2code.github.io,https://github.com/su2code/SU2/pull/195,1,['depend'],['dependencies']
Integrability,"Now I am happy with the results of the code but the question now is: How to code this up nicely!; This concept of an additional iterated variable next to the solution variable is ""new"" to SU2.; 1. Add the Adjoint pressure-drop variables always to the existing arrays (`Solution`, `External`, `AD_InputIndex`, etc.) which would make for ugly allocation routines and one would have to mess with `nPoint` as one would prob extend the containers by one element. So I consider this direction to be a bit too intrusive as this concept is not needed for most applications anyway.; 2. Add an `Extended` part to all relevant copide methods and variables and keep that general for the different applications",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456:352,rout,routines,352,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1033817456,1,['rout'],['routines']
Integrability,"Now that I am updating #790 to work with the new structure from this PR (#753), I am seeing that the aligned_alloc() function is not well defined on mac, so xcode/llvm builds are not working on mac at the moment. There are some issue related to C vs C++ with that (depends on the standard you choose for C or C++, 11 or 17, apparently). Might be some ways around it from reading comments by others on the issue: https://github.com/marian-nmt/marian-dev/issues/227. @pcarruscag : can you give this a quick look when you have some time? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-541934596:265,depend,depends,265,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-541934596,1,['depend'],['depends']
Integrability,"OK I Solved it by use version 7.2. this problem still exists for version 7.3.1. > @Zcaic nope, I add '\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`; > ; > I paste wrong error message before . the actual error message after I change the envirnment variable is from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916:259,message,message,259,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1194064916,2,['message'],['message']
Integrability,"OK, I see that some refactoring happened e.g. to the python wrapper in the meantime. What's the best way to resolve the conflicts? --> If I hit the Resolve conflicts button, there is nothing I can do.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1535961512:60,wrap,wrapper,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1535961512,1,['wrap'],['wrapper']
Integrability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. You can also ignore all major, minor, or patch releases for a dependency by adding an [`ignore` condition](https://docs.github.com/en/code-security/supply-chain-security/configuration-options-for-dependency-updates#ignore) with the desired `update_types` to your config file. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2132#issuecomment-1967081745:204,depend,dependabot,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/2132#issuecomment-1967081745,4,['depend'],"['dependabot', 'dependency', 'dependency-updates']"
Integrability,OK. Who will send the messages?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/593#issuecomment-427597676:22,message,messages,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/593#issuecomment-427597676,1,['message'],['messages']
Integrability,"ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when compiling Metis; * SU2_ENABLE_MKL: ON|OFF; * SU2_ENABLE_MPI: ON|OFF; * SU2_ENABLE_MUTATIONPP: ON|OFF; * SU2_ENABLE_PARMETIS: ON|OFF, only available when SU2_ENABLE_MPI is ON; * SU2_PARMETIS_CPPFLAGS: flags to pass when compiling Parmetis; * SU2_ENABLE_TECIO: ON|OFF; * SU2_TECIO_CPPFLAGS: flags to pass when compiling Tecio and TecioMPI; * SU2_TECIOMPI_CPPFLAGS: flags to pass when compiling TecioMPI, requires SU2_ENABLE_MPI. There is an additional variable that is recognized by CMake scripts - DEBUG, turning it ON enables additional STATUS messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except pySU2ad wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. Related Work. Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any. PR Checklist. Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution. * I am submitting my contribution to the develop branch.; * My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; * My",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:2947,message,messages,2947,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['message'],['messages']
Integrability,"Oddly enough, I changed the number of inner iterations to a high value so that it would converge each physical time step, and I still see non-deterministic output for the rotating cylinders case. . Perhaps these cases need to be flagged for checking if some folks using the sliding mesh interface have some time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553099621:287,interface,interface,287,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553099621,1,['interface'],['interface']
Integrability,"Oh yeah, @pcarruscag, I finally got it to work. I am wondering if we can add `-Dmpi-name` flag like we have a `-Dblas-name` flag because I think mpich is a very common MPI implementation and accommodating for it would be really beneficial, for people and the package both. The lapack thing was discussed in #991 earlier and I forgot I didn't have that change in my commit (it has been months). Thanks a lot!. @fertinaz, you might be able to get it to work with this change in `meson.build` file, like Pedro suggested:; > ```; > mpi_dep = [dependency('mpich', language: 'c', required : get_option('with-mpi')),; > dependency('mpich', language: 'cpp', required : get_option('with-mpi'))]; > ```; I had kept the `-Dcustom-mpi` flag as `false`; Make sure you export all the environment variables:; ```; export CC='/usr/bin/gcc'; export CXX='/usr/bin/g++'; export MPICC='/opt/mpich-3.3.2/bin/mpicc'; export MPICXX='/opt/mpich-3.3.2/bin/mpicxx'; export LD_FLAGS='-L/opt/mpich-3.3.2/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/opt/mpich-3.3.2/include'; export C_FLAGS='-I/opt/mpich-3.3.2/include'; export PKG_CONFIG_PATH='/opt/mpich-3.3.2/lib/pkgconfig'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721493822:539,depend,dependency,539,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721493822,2,['depend'],['dependency']
Integrability,"Ok the ""simple"" version of ""going parallel"" whenever we get to a linear algebra operation did not make the cut.; On an older architecture there was a 10% slowdown of the linear solvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does n",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:643,rout,routines,643,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,6,['rout'],"['routine', 'routines']"
Integrability,"Ok time to share some results after #753.; I deviated a bit from the original plan in that I skipped the contrived strategy of using a wrapper container with a special [] operator (as it had a slight whiff of hackery), and went straight to adding ""iNode"" to the methods of CVariable instead (me and a few lines of python...). The first rule of performance is **""measure it before changing code""**, I broke that rule because as my first post illustrated non contiguous storage at the scale we had is a real killer. With that out of the way, to some extent at least (the layout may not be optimum still) measuring is essential to decide what to do next. This is the case I am using:; ![case](https://user-images.githubusercontent.com/38071223/63288257-27d9d580-c2b4-11e9-9899-8b44b230b8bb.png); It is a bad wing design (NACA0012) with some sweep and taper and a home-brew mesh whose quality rivals that of the design (it converges and the flow does not separate...).; The mesh is just over 500k vertices (so it ""fits"" comfortably in my pc) the y+ is not great (obvs) but the aspect ratios are 200 and 2000 in the chordwise and spanwise directions respectively, so not exactly linear solver friendly either. Some settings which are kinda optimal:; - Mach 0.6, AoA 2 degrees;; - SST (1st order);; - CFL 20 (higher and residuals would limit-cycle (regardless of linear solver settings); - Roe;; - MUSCL - Green-Gauss and Venkat-Wang;; - FGMRES + LU_SGS to 0.05 residual (about 3 iters on avg.);; - 2 levels of MG (1,1,2 iterations, all zeros for other stuff and 0.7 damping both ways);. The case is light on the linear solver and therefore stands to benefit the most from better data layout. Conversely, applications that can take higher CFL / or use central schemes will not benefit as much. **Running this from scratch to residual of 10^-8 on a couple of Xeon E5-2650v4 (24c total) shows a speedup of 1.4 and just over 10% lower memory usage.**; Those numbers will be better for an equivalent 2D case sin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:135,wrap,wrapper,135,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['wrap'],['wrapper']
Integrability,"Ok, now `CPoint` stores information on the closest wall element location in vectors `ClosestWall_{Rank,Zone,Marker,Elem}`. `CPoint::SetWallRoughness` performs the lookup, inserting the location into the map (rank,zone,marker)->(roughness) that is provided to `CPoint::SetWallRoughness` as an argument of a new templated type `NdFlattener`. I wrote the new file `Common/include/ndflattener.hpp` some time ago and I think it is a nice generalization of the. > custom type with interface (rank, [zone,] marker). you're referring to. In short, it allows to. - serialize pointer-to-pointer-to... arrays into 1D arrays, as many as there are indices. The array corresponding to the last index stores the data and the others store indices.; - And to `MPI_Allgatherv` them, adding a new index for the rank. Using it detaches a bit from the original goal of this PR (which was to fix some illegal reads reported by valgrind, because the wrong array of roughnesses was accessed) but I think it's a useful structure. Probably I should also add some tests.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844:475,interface,interface,475,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-841123844,1,['interface'],['interface']
Integrability,"Ok, now you have tracked it.; I was making my tests with master branch (I used the develop with meson, but I thought to be conservatiev here). That way my most recent activity in the git log was from Tim by the end of February.; Switching to develop, then the git log message match your comment above.; Further, preconfig, make and make install work without any patches.; Cool; another note: -DNDEBUG note recognized by preconfigure (nor --DNDEBUG).; I suggest to update the master branch, since it is supposed to be a stable distribution",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-601077460:268,message,message,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-601077460,1,['message'],['message']
Integrability,"Ok, w.r.t. 'if it works, why not', unfortunately, it doesn't work! I guess that as you mentioned, if it is used as a wrapper for the underlying 'new' gcc that isn't aware of the system MPI, then it actually doesn't find the MPI linked with the MPI-aware `MPICC` and `MPICXX` then?. ```; ninja: Entering directory `build'; [5/967] Compiling C object externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o; FAILED: externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o ; /home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-gcc -Iexternals/parmetis/libparmetis.a.p -Iexternals/parmetis -I../externals/parmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -O3 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -isystem /home/user/anaconda3/include -DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include -fPIC -DUSE_GKREGEX -MD -MQ externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o -MF 'externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o.d' -o externals/parmetis/libparmetis.a.p/libparmetis_weird.c.o -c ../externals/parmetis/libparmetis/weird.c; In file included from ../externals/parmetis/libparmetis/parmetislib.h:21:0,; from ../externals/parmetis/libparmetis/weird.c:15:; ../externals/parmetis/include/parmetis.h:17:10: fatal error: mpi.h: No such file or directory; #include <mpi.h>; ^~~~~~~; compilation terminated.; [24/967] Compiling C object externals/metis/libmetis.a.p/GKlib_gkregex.c.o; ninja: build stopped: subcommand failed.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744586926:117,wrap,wrapper,117,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744586926,1,['wrap'],['wrapper']
Integrability,"Ok. I can duplicate your error on my system. The error seems to be specific to gcc 8.1. If I switch to gcc 7.2 while keeping everything else the same, the errors disappear and the build completes succesfully. Unfortunately, I'm not one of the developers who helped write the wrapper. So I'm out of my depth here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551#issuecomment-404937979:275,wrap,wrapper,275,https://su2code.github.io,https://github.com/su2code/SU2/issues/551#issuecomment-404937979,1,['wrap'],['wrapper']
Integrability,"On both questions the answer is yes. Option 1 can be implemented right now but will require the creation of temporary objects. Option 2 can directly forward the data to the blas routines. The tool I am developing is no tool for a specific linear algebra package. The idea is, that the tool parses the header files of the library. The user has then to define which objects are active lvalues and the derivatives for each operation in the library. For small an clear interfaces this is no problem and works already quite good. For large libraries like Eigen I adopted a whitelisting approach. That is, every function needs to be manually whitelisted to trigger the expression generation of the tool. In a prototype way I have also implemented an approach where only the active lvalues need to be defined and the tool looks then for all required functions and other objects that depend on these active objects. Long story short, the tool is designed to handle ""any"" library. It is even possible to mix several libraries together. My current status on this project is, that I am now through with the parsing of the header files and the generation of the expressions. This works quite well for Eigen which is a hardcore testcase, since every possible programming tweak in C++ is used here. The next step is to add the AD part to the expression generation process. I hope that in one or two month this will be finished and I can provide a first beta release.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463561018:178,rout,routines,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463561018,6,"['depend', 'interface', 'rout']","['depend', 'interfaces', 'routines']"
Integrability,"On running with a single core, I also get a similar error (attached below). In this case, I'm guessing that it doesn't like the 2D element? This seems strange as it managed to handle a few cases where flat cells were also present, do you have any thoughts on this?. Also, is it possible to identify the location of the cell based on the error message?; Many thanks,; Tim; ```; ------------------------ Geometry Preprocessing ------------------------; Setting point connectivity.; Renumbering points (Reverse Cuthill McKee Ordering).; Recomputing point connectivity.; Setting element connectivity. Error in ""virtual void CPhysicalGeometry::SetBoundVolume()"": ; -------------------------------------------------------------------------; The surface element (0, 133348) doesn't have an associated volume element; ------------------------------ Error Exit -------------------------------. application called MPI_Abort(MPI_COMM_WORLD, 1) - process 0; SU2_CFD failed with retcode 1; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-493931406:343,message,message,343,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-493931406,1,['message'],['message']
Integrability,"On the LU part we have an interface with PaStiX.; In SU2 Eigen is not used to solve distributed(mpi)-sparse systems, just small dense problems. Also to my knowledge Eigen does not support MPI at least a couple years ago its interface with PaStiX was threads only.; I opted to develop the interface with PaStiX rather than PETSc because it seemed the support for the block-sparse format we use was limited, i.e. compatible with only a few linear solvers.; There are instructions on how to build SU2 with PaStiX in the TestCases folder. I had a quick look at your paper, in SU2 the linearization of F (the A matrix you need, I believe) is not exact, for an exact linearization you would need to use forward AD but then any system would need to be solved iteratively using matrix-free products.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686:26,interface,interface,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/1141#issuecomment-754109686,3,['interface'],['interface']
Integrability,"On the topic of Python distributions: I agree.. I typically build up a local Enthought Canopy Python (command line only) on clusters to have control too. Although, it seems that their new versions (canopy 2+) deprecate the command line interface somewhat, even though Py 3+ is available. Perhaps I'll give Anaconda a try then soon, thanks for that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-321867755:236,interface,interface,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-321867755,1,['interface'],['interface']
Integrability,"Only the testcases `channel_2D`, `channel_3D` fail. Both use sliding mesh interfaces, but there are also other sliding mesh testcases that do not fail. The residuals are still very close and also the flow fields look similar. I thus adapted the stored residuals in 9d8f194. Let me know if you would like to investigate the changed residuals further.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670:74,interface,interfaces,74,https://su2code.github.io,https://github.com/su2code/SU2/pull/1346#issuecomment-895007670,1,['interface'],['interfaces']
Integrability,"PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Relea",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7550,Message,Message,7550,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Message'],['Message']
Integrability,"Parallel preaccumulations must not share any variables. In particular, they must not have any common inputs and outputs. I suspect (judging from the code) that the preaccumulations treated in 781092a3533caf36589426e99293c2b20d332726 violate this pattern, and that this is the reason why excluding them makes several hybrid parallel AD tests pass. Other preaccumulations might be affected as well. The correctness of preaccumulations inside numerics objects, for example, depends on the values of pointers like `V_i`, `V_j`. Other preaccumulations might look wrong but are ok because common variables are prevented by color loops.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042:471,depend,depends,471,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-871002042,1,['depend'],['depends']
Integrability,Parallel run of the python routine fsi_computation.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/457:27,rout,routine,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/457,1,['rout'],['routine']
Integrability,Parmetis integration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/135:9,integrat,integration,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/135,1,['integrat'],['integration']
Integrability,"Pete, Tim,. I have had a long standing interest in getting this working and would be happy to help. The (partial) implementation that is there is already 3-4 years old, so it will have to be updated, but we can discuss some of the details of the implementation and how it can be done both more efficiently and for both compressible formulations and adaptive wall functions. We can start a thread separately (jjalonso@stanford.edu<mailto:jjalonso@stanford.edu>) and perhaps have a telecon to kick things off. My availability for this improves after the next 2 weeks. Best,. Juan. On Jun 7, 2017, at 1:19 PM, Tim Albring <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi Pete,. we appreciate your help on that. I just updated the branch feature_Wall_Functions<https://github.com/su2code/SU2/tree/feature_Wall_Functions> to be up-to-date with develop. The main routines dealing with the wall functions are in solver_direct_mean.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_mean.cpp#L16612> and solver_direct_turbulent.cpp<https://github.com/su2code/SU2/blob/feature_Wall_Functions/SU2_CFD/src/solver_direct_turbulent.cpp#L2569>. Maybe @economon<https://github.com/economon> can tell you what exactly is missing there. Tim. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/399#issuecomment-306912607>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxOvHCOSUFKDoizjyvrHbgyXgZ-vVks5sBwW8gaJpZM4NvG6w>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-306941656:879,rout,routines,879,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-306941656,1,['rout'],['routines']
Integrability,"Piggybacking on pull request #488, this pull request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildeconto",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:498,rout,routines,498,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,1,['rout'],['routines']
Integrability,"Please re-check with latest commit (very small correction for a copy-and-paste-error from yesterday, not sure whether it has had some impact). I've run your test case again and I had a closer look at the interface which in fact looks alright (it's maybe just that thermal conductivities are so different that zones appear to be separated but aren't.. ?). ![temp_profile](https://user-images.githubusercontent.com/22639394/70803014-5889d180-1db3-11ea-8e6b-ef7f95a9466a.png). By the way: You can easily increase the CFL number to 1000 in both zones. You get a fully converged solution after a few hundred iterations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/838#issuecomment-565438939:204,interface,interface,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/838#issuecomment-565438939,1,['interface'],['interface']
Integrability,"Please use meson and ninja to build the code as documented here: https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/. This is what I do:; ```; export BUILD=build; export CXXFLAGS=""-funroll-loops -march=native -mtune=native"". ./meson.py $BUILD -Dcustom-mpi=true -Dwith-omp=true -Denable-mixedprec=true -Denable-autodiff=true -Denable-tecio=false -Denable-mkl=true -Dmkl_root=$MKLROOT --prefix=$PWD/$BUILD --optimization=2 --warnlevel=2; ./ninja -C $BUILD install; ```; Depending on how your compilers are setup you may find convenient to modify this:; ```; if get_option('custom-mpi'); mpi_dep = []; ```; To:; ```; if get_option('custom-mpi'); mpi_dep = [declare_dependency(link_args: ['-lmpi'])]; ```; In the meson.py script, I'm sure there is a way to do it with environment variables but I never bothered trying. Regards,; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914:473,Depend,Depending,473,https://su2code.github.io,https://github.com/su2code/SU2/issues/1088#issuecomment-706397914,1,['Depend'],['Depending']
Integrability,Possible bug in python FSI routine FSIInterface.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/449:27,rout,routine,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/449,1,['rout'],['routine']
Integrability,"Probably because with optimizations turned on the compiler optimizes away the unused argument.; The linker probably fails because the base MPI wrapper defines MPI_STATUS as extern, should be a quick fix.; Btw I've been removing those ifdefs whenever possible, everything should be encapsulated in the wrapper.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956#issuecomment-620127214:143,wrap,wrapper,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/956#issuecomment-620127214,2,['wrap'],['wrapper']
Integrability,Py Wrapper hangs on Set_MPI_ActDisk in CEulerSolver,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1150:3,Wrap,Wrapper,3,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150,1,['Wrap'],['Wrapper']
Integrability,Python interface for updating translation and rotation rates of markers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095:7,interface,interface,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095,1,['interface'],['interface']
Integrability,Python interface for updating translation and rotation rates of the moving frame,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024:7,interface,interface,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024,1,['interface'],['interface']
Integrability,"Python interface updated to automatically use ibrun when using slurm on a tacc machine (ie, Stampede)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/227:7,interface,interface,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/227,1,['interface'],['interface']
Integrability,Python wrapper fails to generate with MPI and AD,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/819:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/819,1,['wrap'],['wrapper']
Integrability,Python wrapper feature: unable to import pysu2 by Python on OSX,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606,1,['wrap'],['wrapper']
Integrability,Python wrapper heat solver example + disc adj minor fixes and cleanup,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2017:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/2017,1,['wrap'],['wrapper']
Integrability,Python wrapper last updates,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/357,1,['wrap'],['wrapper']
Integrability,"Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our specific job.; wv.area = 0.0;; for(int i=0; i<nDim; ++i); wv.area += pow(sol.areaVector[i],2);; wv.area = sqrt(wv.area);; }; };. // Same mechanics as above; template<typename Base>; class ComputeFlux : Base; {; protected:; enum : int {nDim = Base::nDim};. struct WorkVarsType : Base::WorkVarsType ; {; double flux; // ...add new member; };. template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // ...call base; Base::Compute(wv,sol);. // ...do aditional work; wv.flux = 0.0;; for(int i=0; i<nDim; ++i); wv.flux += sol.velocity[i]*sol.areaVector[i];; }; };. // This class is used to terminate the chain, it makes the link; // with the interface and it is used to specify any fixed sizes.; template<int NDIM>; class Terminator : private VirtualInterface; {; protected:; enum : int {nDim = NDIM};. struct WorkVarsType {};. template<typename... Ts>; void Compute(Ts&...) const {}; };. // Finally we use the building blocks to implement Compute.; // The blocks can be reordered depending on application to; // help the compiler fuse loops or minimize register spillage,; // the resulting WorkVarsType definition will be equivalent.; class ComposedClass: public; ComputeFlux< ComputeArea< Terminator<3> > >; {; public:; ResultType Compute(const SolutionContainer& sol) const;; };. ResultType ComposedClass::Compute(const SolutionContainer& sol) const; {; // Create the working variables on the stack.; ComputeFlux::WorkVarsType wv;. // Pass down the working variables and whatever other arguments.; // If the convention was followed, all building blocks will run.; // Recall that all Compute's were templates, they will be; // instantiated here and we can force them to be inlined.; ComputeFlux::Compute(wv, sol);. // Do some additional work if needed and return result.; return wv.flux / wv.area;; }; ```; [Care for some assembly?](https://gcc.godbolt.org/z/os-gNg)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:4722,depend,depending,4722,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['depend'],['depending']
Integrability,Reduce public interface of drivers,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1996:14,interface,interface,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/1996,1,['interface'],['interface']
Integrability,"Regarding periodic boundaries: You have two options. You can hack the code to not allow grid deformation on periodic boundaries. That's a simple code edit, since the code already prevents most boundaries from being deformed. Let me know if you want to use this option, and I can point you to those lines. Second, you can use the `HOLD_GRID_FIXED` and `HOLD_GRID_FIXED_COORD` options to prevent grid deformation outside a specific box. I have found this option to be better overall, since it also makes the linear system easier to solve in `SU2_DEF`. The `DV_VALUE` and `FINDIFF_STEP` are different. I've only seen `FINDIFF_STEP` used for the finite-differencing python script, though it may have other uses I am not aware of. The `DV_VALUE` depends on the context. When using `SU2_DOT`, `DV_VALUE` is set to its default value. But when performing shape optimization using SU2's framework, the `DV_VALUE` parameters will be set based on the output of SLSQP (or whatever optimization framework you're using).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/976#issuecomment-626799862:741,depend,depends,741,https://su2code.github.io,https://github.com/su2code/SU2/issues/976#issuecomment-626799862,2,['depend'],['depends']
Integrability,"Regardless of fusing routines computing two is more expensive than computing one, and the method is full of drawbacks, so I do not think it should be a forceful default.; Can this be implemented as a USE_ROBUST_GRADIENT option that if set to NO uses whatever gradient method is chosen for both convection and diffusion, computing and allocating only once? I do not care what the default is I just want to be able to turn it off.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-532893719:21,rout,routines,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-532893719,1,['rout'],['routines']
Integrability,Relax tolerances of python wrapper hybrid AD tests,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:27,wrap,wrapper,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,1,['wrap'],['wrapper']
Integrability,Replace the static char buffers at the beginning of the SetConvergence_History() routine in output_structure.cpp,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/66:81,rout,routine,81,https://su2code.github.io,https://github.com/su2code/SU2/issues/66,1,['rout'],['routine']
Integrability,"Restructure MPI wrapper, move more files to directories",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1133:16,wrap,wrapper,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/1133,1,['wrap'],['wrapper']
Integrability,Restructuring of Interface structure (CTransfer -> CInterface),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/769:17,Interface,Interface,17,https://su2code.github.io,https://github.com/su2code/SU2/pull/769,1,['Interface'],['Interface']
Integrability,SU2 V8.01: Apparently improper message: DV_VALUE does not contain enough entries to match DV_KIND or DV_PARAM.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:31,message,message,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['message'],['message']
Integrability,SU2 not getting all external dependencies,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2363:29,depend,dependencies,29,https://su2code.github.io,https://github.com/su2code/SU2/issues/2363,1,['depend'],['dependencies']
Integrability,SU2 python wrapper build failed in win10,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575:11,wrap,wrapper,11,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575,1,['wrap'],['wrapper']
Integrability,SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/__init__.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/adjoint.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/deform.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/direct.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/interface.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/merge.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/geometry.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/projection.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/run/__init__.py to C:\bin\bin/SU2/run; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/bunch.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/filter_adjoint.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/lhc_unif.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/misc.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/mp_eval.py to C:\bin\bin/SU2/util; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/util/ordered_bunch.py to C:\bin\bin/SU2/util; Installing C:\U,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:6898,interface,interface,6898,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['interface'],['interface']
Integrability,SU2_DOT Interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/625:8,Interface,Interface,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/625,1,['Interface'],['Interface']
Integrability,SU2_DOT_AD works great with the ASCII Tecplot files but it is not able to write the **binary** files. The code stops with the following message. ```; Merging solution in the Master node.; Writing Tecplot Binary file (volume grid). ===================================================================================; = BAD TERMINATION OF ONE OF YOUR APPLICATION PROCESSES; = EXIT CODE: 11; = CLEANING UP REMAINING PROCESSES; = YOU CAN IGNORE THE BELOW CLEANUP MESSAGES; ===================================================================================; ```. Thanks!; Francisco,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/345:136,message,message,136,https://su2code.github.io,https://github.com/su2code/SU2/issues/345,2,"['MESSAGE', 'message']","['MESSAGES', 'message']"
Integrability,"Sadly no, it is one of the main development areas we have identified in #1487, the interface is not very large, you can scroll over `python_wrapper_structure.cpp` to see the methods that allow modifying things at inputs, and the methods for control flow are in that example I pointed to.; If you join one of our dev meetings we can try to get a working example with what you need.; Wednesdays at 3pm UK - https://meet.jit.si/SU2_DevMeeting",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1058534840:83,interface,interface,83,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1058534840,1,['interface'],['interface']
Integrability,"Same. If we construct it correctly, I am hoping that we will actually only need to include certain individual headers in the solvers, etc. (or maybe just the parent numerics header w virtual function descriptions) so that we can break some of the dependencies that lead to longer build time.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-503683529:247,depend,dependencies,247,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-503683529,1,['depend'],['dependencies']
Integrability,"Samet,. I can help you with the NREL case and the output. . We are in the middle of rewriting those routines, so it will be very easy to register and output new variables to the viz. files soon (another week or less). Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-257618678:100,rout,routines,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-257618678,1,['rout'],['routines']
Integrability,"Seems like you're using older version of SU2 master branch. We didn't have several config options such as ""WRT_BINARY_RESTART"" in older version. That's the reason why your SU2_CFD executable throws error message regarding it.; Please clean your SU2 directory, pull fresh copy of master branch of SU2, compile it and then run it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523#issuecomment-381752554:204,message,message,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/523#issuecomment-381752554,1,['message'],['message']
Integrability,"Seems like your figures are not attached. Please upload them again. Also, please double check whether your ""SU2_RUN"" environment variable is set correctly as Juan mentioned. If serial computation worked fine only with ""$ SU2_CFD inv_ONERAM6.cfg"" command, I guess you set it correctly. However, from your error message, python script says it can't find a path to ""SU2_RUN""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/521#issuecomment-378119992:310,message,message,310,https://su2code.github.io,https://github.com/su2code/SU2/issues/521#issuecomment-378119992,1,['message'],['message']
Integrability,"Several bugs have been fixed in the grid deformation and the config file have been updated. . In particular, the inverse volume method uses now an element volume computed in ComputeDeforming_Element_Volume (not the incomplete determinant computed in FEM). fabs have been added to the determinant in the final evaluation of the FEM stiffness matrix (depending on the element orientation, the determinant was negative). The formulation Mu = E / (2.0_(1.0 + Nu)), Lambda = Nu_E/((1.0+Nu)_(1.0-2.0_Nu)) is used instead of the basic simplification Mu = E, Lambda = -E. We can recover that formulation using a large number for Nu (DEFORM_COEFF). The code has been simplified and that IO is now more clear. I have performed some tests and large deformations are now possible. . However, systematic regression tests for grid deformation is required using all the different kinds of elements. I remember that T. Economon put together some basic grids to test the mesh deformation, we should use those to check that everything is working fine before closing the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/278:349,depend,depending,349,https://su2code.github.io,https://github.com/su2code/SU2/pull/278,1,['depend'],['depending']
Integrability,"Several class objects are now explicitly deleted at the end of SU2_CFD, which provides a check that their deconstructors are properly implemented. ; Some memory leaks may still exist, and future work will be needed for postprocessing routines implemented, but not currently called, in driver->Postprocessing. . For future development reference some common problems:; - pointer not initialized to NULL, causing a segfault when delete [] is called in the deconstructor. (When set to NULL an if statement avoids this segfault). ; - pointers owned by a parent class deleted in the child class. An exception could be when only the child class has information about the size of pointers to pointers, but otherwise risks double-frees (a segfault) and creates duplicated code. ; - FYI, although it does not seem to cause any error, Classname.~Classname() does not have defined behavior, and will do nothing.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/265:234,rout,routines,234,https://su2code.github.io,https://github.com/su2code/SU2/pull/265,1,['rout'],['routines']
Integrability,Show error message when FLUID_MIXTURE is used with KIND_SCALAR_MODEL = NONE,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2345:11,message,message,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/2345,1,['message'],['message']
Integrability,"Sign me up for the old folks team. If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. Otherwise, I agree that reusing the DG hooks would save you some implementation time for dense operations.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459622513:127,interface,interface,127,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459622513,1,['interface'],['interface']
Integrability,"Since I am already at it, I am gonna add factory classes for numerics (we can use them even if we move the allocation to the solvers) and integration.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/881#issuecomment-587440604:138,integrat,integration,138,https://su2code.github.io,https://github.com/su2code/SU2/pull/881#issuecomment-587440604,1,['integrat'],['integration']
Integrability,Sliding mesh for incompressible flows + Cleaning of transfer routines,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:61,rout,routines,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['rout'],['routines']
Integrability,Small update of the python fsi interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1148:31,interface,interface,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1148,1,['interface'],['interface']
Integrability,"So I've got a more general question: Why do we want the gradient norm to be ~1E-6? Isn't this gradient norm problem dependent? it most definitely scales with the square root of the number of design variables. I would suspect that the relative scales of the design variables are also a factor. Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616774814:116,depend,dependent,116,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616774814,1,['depend'],['dependent']
Integrability,"So now please check why the flux is calculated as ; ""conv_numerics->ComputeResidual(Residual, Jacobian_i, Jacobian_j, config)"" instead of; ""conv_numerics->GetInviscidProjFlux(&V_infty[nDim+2], Velocity, &Pressure, &V_infty[nDim+3], Normal, Residual)""; Why should Jacobian_j be involved? Unless you say that both the above routines give the same end result I am not convinced that it is right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313630343:322,rout,routines,322,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313630343,1,['rout'],['routines']
Integrability,"Some additional comments:; - There are a lot of duplicated routines now, because they look the same for compressible/incompressible. These will be eventually moved to the CSolver. We have also plans for modifing the MPI routines in the solvers to make them more generic.; - I cannot make sure that some features that are currently not tested in Travis still work. For example things like Harmonic Balance for incompressible flows (in case it was working before). We should find out whats working and whats not so that we can maybe throw appropriate error messages.; - It might have happened that I accidentally did something wrong during the merge. Maybe I reverted some cosmetic changes that do not affect the solution ... If you see something, let me know. So I request **ALL** of you to have a look at the solver structure. But keep in mind that just looking at the diff might be confusing as it is not showing all changes correctly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/327#issuecomment-257236302:59,rout,routines,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/327#issuecomment-257236302,3,"['message', 'rout']","['messages', 'routines']"
Integrability,"Some update here: I had to get rid of the CParse library ... It was too slow since it is based solely on RTTI. I replaced it with [exprtk](https://github.com/ArashPartow/exprtk). This is a fast and widely used expression library. The only drawback is that it is a header-only file with ~40k(!) lines of code. Compilation takes quite long, so I am using pimpl approach to interface it with SU2 in order not to recompile it for every compilation target. Furthermore I added the exprtk code as an archive (similar to what we do with the tecplot IO library).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-634295529:371,interface,interface,371,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-634295529,1,['interface'],['interface']
Integrability,"Some updates:. - Python wrapper functionalities have been moved into a dedicated python_wrapper_structure.cpp file for code clarity.; - The data structures for the customized values at boundaries have been removed from the CPoint class. Data structures are stored in the geometry class, they are initialized only when customization is set ON and only for involved vertices. There was no restriction to put the data structures in the solver class, except that when multi-grids needs to be updated (required for non uniform field), the geometry class needed an access to the solver class, which is not the case since everything that is in the Common structure seems to be independent of what it is in SU2_CFD, and I wanted to keep that. Those data structures should not be seen as true PDE-related variables, they should be seen as a generic support for boundary customization.; - CHT related labels have been removed and replaced by ""Python customizable"" in order to not introduce any confusion with the native CHT development. The basic purpose of this work is to enable existing boudary conditions to be customized from Python and not to develop a CHT interface. CHT is just an example of application (since only the HEAT_FLUX and ISOTHERMAL walls are customizable for now).; - Based on the previous point, no new specific boundary condition was introduced. For now, I keep the idea to just modify (one single line) the existing boundary conditions to take into account the customization. New dedicated boundary conditions (for example BC_HEAT_FLUX_CUSTOM or BC_ISOTHERMAL_CUSTOM) would be a 99% copy of the originals... Dedicated boundary conditions for native CHT development can still be defined independently (no condlfict). Cheers,. David",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-355928565:24,wrap,wrapper,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-355928565,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,Sorry @talbring I have just read your message and I did the merging by myself. Thanks for the help.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-317912905:38,message,message,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-317912905,1,['message'],['message']
Integrability,Sorry I missed your previous message @talbring.; I imagine this is because of c++11 (which GCC9 might consider by default?); I will test this and come back to you.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734#issuecomment-516404815:29,message,message,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/734#issuecomment-516404815,1,['message'],['message']
Integrability,"Sorry about that, I didn't know new commits somehow go into this PR; automatically. I'll open new PRs for each of them. Pedro Gomes ***@***.***> 于2024年6月3日周一 12:38写道：. > ***@***.**** commented on this pull request.; >; > @FabianYan2010 <https://github.com/FabianYan2010> can you separate the; > different features you are working on into different PRs please? I think I; > count 4 quite large ones already.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2173#pullrequestreview-2092778271>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/BEECKG2UOQUSK2WEASMBYOLZFPXLRAVCNFSM6AAAAAA7UN6HYOVHI2DSMVQWIX3LMV43YUDVNRWFEZLROVSXG5CSMV3GSZLXHMZDAOJSG43TQMRXGE>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-2175100069:788,Message,Message,788,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-2175100069,1,['Message'],['Message']
Integrability,"Sorry but I don't follow your suggestion:; The .deps folders in SU2_BASE (where the linkage to the CHeaterFVM routines exist) are; created during the preconfigure.py step, related to the codi part. There you can find ; pointers with DIRECTDIFF (like libSU2Core_DIRECTDIFF_a-CHeatFVMVariable.Po).; Can you clarify?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/910#issuecomment-600828306:110,rout,routines,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/910#issuecomment-600828306,1,['rout'],['routines']
Integrability,"Sorry for the late response. I had to try out a few things. @GomerOfDoom, this is the output of `pacman -Qi blas lapack openblas`; I think it is relevant to this issue that i mention, I had installed openblas which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:588,Depend,Depends,588,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['Depend'],['Depends']
Integrability,"Sounds like this one is more or less ready too.. . @talbring, can you please check the changes to the MPI wrapper in this PR when you have some time?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/656#issuecomment-472548914:106,wrap,wrapper,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/656#issuecomment-472548914,1,['wrap'],['wrapper']
Integrability,Species Information not transmitted across interfaces,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1818:43,interface,interfaces,43,https://su2code.github.io,https://github.com/su2code/SU2/issues/1818,1,['interface'],['interfaces']
Integrability,Starts to address #1604; The adjoint will be more work.; Depends on https://github.com/su2code/Tutorials/pull/22,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1616:57,Depend,Depends,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1616,1,['Depend'],['Depends']
Integrability,"Status?; At may 21, 9AM europe time, 2019; I am getting a ; ""This Workspace has been Stopped""; message from URL; https://su2.rocket.chat/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-494262838:95,message,message,95,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-494262838,1,['message'],['message']
Integrability,Stuck at Python Interface Preprocessing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/907:16,Interface,Interface,16,https://su2code.github.io,https://github.com/su2code/SU2/issues/907,1,['Interface'],['Interface']
Integrability,Su2 V5.0.0 developer branch sliding interface feature: problem with post processed Tecplot output file -reg,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/417:36,interface,interface,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/417,1,['interface'],['interface']
Integrability,"Summary; ========; The **fluid interface** connects RANS zones in such a way that flow can freely pass through it just as if they were a single RANS zone. We (@maxaehle, @BeckettZhou) observed convergence problems in cases where the meshes had ""boundary-layer-like"" high anisotropy at the fluid interface. However a singlezone simulation, for which the meshes are joined together, converged. Setup (.cfg, .su2); ===============; **Density for singlezone run with joined meshes, converged**:; ![singlezone-rho](https://user-images.githubusercontent.com/72806890/138854768-3f188819-c924-4025-9404-f5d58bfa6b7d.png); **Density for multizone run with separate meshes and fluid interface, diverged**:; ![multizone-rho](https://user-images.githubusercontent.com/72806890/138854792-6c71c0a9-0af7-402e-b65c-d7711e0245e1.png); **Mesh:**; ![Multizone_Mesh_Annotated](https://user-images.githubusercontent.com/72806890/138855444-8fd029bc-2f6d-4e94-b3da-a3c997ec418b.png); **Download link**: https://seafile.rlp.net/d/bb0fbb16eb414263b642/. In this issue I consider compressible flow around a circle at Re=1e6, Mach=0.15, using the SST turbulence model. The radial mesh has a boundary layer at the circle of radius 1 (adiabatic wall), and a ""boundary-layer-like"" structure around a circle of radius (approximately) 4. Having this ""boundary-layer-like"" structure does not make sense here, but in our project we later want to change the area `1<=radius<=4` to a ""porous material"" zone and this would introduce a boundary layer there. Both the [attached](https://seafile.rlp.net/d/bb0fbb16eb414263b642/) `issue_complicated.zip`, `issue_simplified.zip` contain subdirectories `singlezone`, `multizone`. I observed the problem best for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:31,interface,interface,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,3,['interface'],['interface']
Integrability,"Supersonic outflow non reflecting boundary condition has been implemented and tested in this branch. The implementation follow the approach proposed by Giles. This was a mandatory preparatory step for the implementation of the mixing plane interface, that is needed for the simulation of multi-stages turbine. cheers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/188:240,interface,interface,240,https://su2code.github.io,https://github.com/su2code/SU2/pull/188,1,['interface'],['interface']
Integrability,"Support both Python 2.6+ and Python 3.4+. Main changes from python 2 to python 3 are:; 'raise Exception ""message""' -> 'raise Exception(""message"")'; print ""message"" -> print(""message""); long, int -> int; raw_input -> input; cPickle -> pickle. input -> eval(input()) # not used in SU2, just for information. This commit also removes unused import, especially import of os, shutil and copy. Useful links:; - https://docs.python.org/3/howto/pyporting.html; - http://python3porting.com; - https://docs.python.org/3/whatsnew/3.0.html#library-changes, 4th item.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/260:105,message,message,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/260,4,['message'],['message']
Integrability,"Sure @bigfooted , This is a recent work by Dr. Nishikawa. Actually there are very few unstructured grid limiters in practice, Barth-Jespersen, Venkatakrishnan and its modifications, Michalek-Gooch (most of them are already implemented in SU2). I just saw the details and thought of implementing it. Also to note, it is tailored for vertex centered schemes not cell centered scheme, hence is apt for SU2. In original paper he showed tests with few inviscid cases. Recently He has revealed that it has been implemented in NASA CFD codes. ; Few things - 1- It is certainly less dissipative in comparison to VK 2- Convergence are similar. Rp limiters may take moderate number of more iterations (being less dissipative). 3- Convergence attributes also depends on many other settings - starting CFL, CFL ramping, convective schemes used etc. Sometimes all will stall.; Overall it's encouraging to try and make use of it in more and more cases. I tried it on multiple cases and got converged results (and yes Rp is comparitively less dissipative to Venkat limiter).; I will update the theory part and add the ramp case....",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2006#issuecomment-1499979649:748,depend,depends,748,https://su2code.github.io,https://github.com/su2code/SU2/pull/2006#issuecomment-1499979649,1,['depend'],['depends']
Integrability,"Sure Antonio. We can look into it together. Complex numbers with pointers; instead of vectors (as in HB Operator) are used for FWH solver though it is; not part of the develop yet. I think you'll not run into compilation errors; in that case if we're not using vectors in combination with complex; numbers. Tim, Please correct me if I am wrong. On Sun, Nov 13, 2016 at 1:31 AM, Antonio Rubino notifications@github.com; wrote:. > thanks all for the comments! when I modified that routine, unfortunately I; > didn't get any error on linux.we can definitely comment or add a flag for; > the time being or we could use an older implementation of the HB operator; > where the real part and the complex one are treated independently, like; > Sravya is suggesting. However, if possible, it would be great if we can try; > to find a way to deal with multiplication between complex numbers (working; > in AD mode on mac). I don't know how to replicate this issue since I don't; > have a mac; do you have any suggestion? Maybe, Sravya, can we have a look; > together ( as you have a Mac :) ) so that we can find a solution also for; > other parts of the code for harmonic balance, not in the develop (eg; > spectral interpolation,...) ? Are complex numbers just used in HB or is; > somebody else using them?; > ; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/issues/319#issuecomment-260175432, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIPrn1fRli3BRGNyKmPgarOstsp8aks5q9tjjgaJpZM4KYAX3; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260199838:479,rout,routine,479,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260199838,1,['rout'],['routine']
Integrability,"Sure we do (e.g. `CDiscAdjSolver::RegisterSolution` will behave incorrectly). So actually both ways are based on saving indices somewhere. However the routines that I added (with the `_intIndexBased` extension) do save them internally together with ""their"" corresponding variable (in the same variable class) which is important for the multizone stuff. > So now when we register the coordinates we do it index-based because the multizone_problem boolean is set. We don't want the `_intIndexBased` routines for the FSI cases. They work by re-recording new tapes for each set of variables (fluid solution/coordinates/displacement solution) with added specific routines within the solvers/iterators for cross dependencies (which goes along with saving indices externally, but in a preassigned order). > What are the implications for when we extract the adjoints? Do we need an index-based GetDerivative?. Yes there are counterparts in `RegisterSolution`, `SetAdjoint_Output` and `ExtractAdjoint_Solution`. But nothing more. We can go for the internal indices in `CVariable` exclusively once we have integrated the FSI capabilities to the multiphysics driver.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542202636:151,rout,routines,151,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542202636,5,"['depend', 'integrat', 'rout']","['dependencies', 'integrated', 'routines']"
Integrability,"Sure, now make sense why it is showing issues, Thank you for the; confirmation!. On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; wrote:. > I gave the wall function routines a cleanup in #975; > <https://github.com/su2code/SU2/pull/975> and I think something is; > missing, we compute the shear stresses but they are not considered in the; > BC's of the NS solver.; >; > —; > You are receiving this because you commented.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA>; > .; >. -- ; *Thank you,*. *Monika Chauhan *. *Graduate Research Assistant, Doctoral Program*. *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA 24061*; *Cell# 540-998-5012*",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-634777816:188,rout,routines,188,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-634777816,1,['rout'],['routines']
Integrability,"Sure, will try. Mostly will ask a student, as I am not quite familiar to; GitHub working. On Sun, 14 Jan 2024, 00:02 Pedro Gomes, ***@***.***> wrote:. > You are right we fixed that for the Roe scheme at some point, if you have; > time open a PR please.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/2198#issuecomment-1890675378>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADAD2ZP7WA7PL6U764QGRPTYOLHKFAVCNFSM6AAAAABBZKKBO6VHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQOJQGY3TKMZXHA>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2198#issuecomment-1892434634:628,Message,Message,628,https://su2code.github.io,https://github.com/su2code/SU2/issues/2198#issuecomment-1892434634,1,['Message'],['Message']
Integrability,"Surprisingly I have found the existing content related to plasma simulation in SU2. Really amazing. Could anyone give me any clues of the correspondent .cfg files? Or help me find the governing equations change which makes the plasma equations different from the neutral gas. ; ; ![image](https://user-images.githubusercontent.com/33152225/61871269-5fef3200-af1b-11e9-82c5-cd8418a6f83c.png). It already seems good enough at considering *E* field, but *B* is omitted. I can strive to supplement the equation. Could anyone give some guidance to me, a newcomer of SU2?. [Stanford University Unstructured An open-source integrated computational environment for multi-physics simula.pdf](https://github.com/su2code/SU2/files/3431264/Stanford.University.Unstructured.An.open-source.integrated.computational.environment.for.multi-physics.simula.pdf)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741#issuecomment-515010918:616,integrat,integrated,616,https://su2code.github.io,https://github.com/su2code/SU2/issues/741#issuecomment-515010918,4,['integrat'],['integrated']
Integrability,"TEP = 0.00593412; ...; ```. zone_rot.cfg:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ...; ```. In other words, this is a transient stationary cylinder simulation with two zones. As the axial velocity and eddy viscosity evolutions show below, the simulation runs smoothly and no discontinuities or unphysical flow result is observed around the zone interface. <img width=""720"" alt=""cylSlowStationary"" src=""https://media2.giphy.com/media/v1.Y2lkPTc5MGI3NjExNTg4ZHE2YTZkM3Nmbm84NWEyOTN6bXJtbjg5NXJ3OGRoOTdscXMyeSZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/l63Ze6xd8FejHGNjCZ/giphy.gif""> . **2. Slowly rotating cylinder**. I also tried a very slowly rotating cylinder to see if the error will occur even with a slow rotation. The rotational speed of the inner zone is around 0.03 rad/s, which corresponds to a surface angular speed (0.025 m/s) equal to the 0.25% of the freestream velocity (Uinf=10 m/s). . zone_rot.cfg:; ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.02941176471; ...; ```. The time step is set as the one used for the stationary cylinder. Each time step corresponds to a 0.01 deg rotation of the inner zone. The below animation shows the movement of the cells on the interface:. <img width=""480"" alt=""cylSlow"" src=""https://i.giphy.com/cOUpRw5pDCSvqGa6Q0.webp""> . The below animations show the axial velocity and eddy viscosity evolution. The results should not deviate much from the stationary cylinder results as the angular speed of the cylinder is quite low compared to the freestream. However, it is not the case for this simulation. Also, the discontinuity on the downstream part of the interface is quite apparent even at the earlier time steps. As the simulation progresses, unphysical flow results (non-zero eddy viscosity at the top part of the interface) appear, and eventually, the simulation diverges. <img width=""720"" alt=""cylSlowRot"" src=""https://i.giphy.com/E2LPeCXWvaHfILYei6.webp"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2041586417:1443,interface,interface,1443,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2041586417,3,['interface'],['interface']
Integrability,Thank you @EduardoMolina.; In the future I will make sure the branch exists in the SU2 repo.; Yes unfortunately the accurate Jacobians for SLAU and AUSM+ are not silver bullets and their success seems to be very case dependent.; The rotating_cylinders case stopped diverging after merging the changes from #700 so I have updated all reference residuals.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-511183603:217,depend,dependent,217,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-511183603,1,['depend'],['dependent']
Integrability,"Thank you @TobiKattmann for your feedback. The idea behind this new regression test config file is as follows:; We should have a test case that triggers the negative part of the SA model. Depending on the flow conditions, geometry and CFD parameters it might be triggered or not. With the previous config file, it was not. ; I think there is already a regression test in SU2 that triggers the negative SA, the `turb_oneram6_nk`. However, I decided to stick to rae2822 airfoil as it is a simpler (faster) case. In order to force the negative part of the SA for the rae2822 in a reasonable amount of iterations for a regression test, I increased the angle of attack. I have removed the multigrid as it might not be stable, but I have not tested though. Anyway, with the current configuration, e.g., convective scheme, CFL number, etc, the solution is not stable and diverges after some iterations, around 15. In that sense, I reduced the number of iterations from 20 to 10. In my opinion, a diverging regression test is not a problem at all as it might not be used as a tutorial, only to verify the integrity of the commit. ""The solution should always diverge to the same results"". If the regression test should converge, let me know and I will update the config file :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363:188,Depend,Depending,188,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559#issuecomment-1067926363,1,['Depend'],['Depending']
Integrability,"Thank you for sharing the Output details @pcarruscag. Now I can output the *Cur_Time* column with only changing of input script. . After reading the source code, I also found that the history field depends on the user settings, such as physics type, turbulence model, etc. If I manually assign the HISTORY_OUTPUT variable, will the default settings be wiped out? It seems that adding the ""CUR_TIME"" to the default history field for transient analysis is reasonable if not conflict with other settings. I will be proposing a PR, however, please feel free to comment or challenge. Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1740363137:198,depend,depends,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1740363137,1,['depend'],['depends']
Integrability,Thank you for the feedback but for 99% of cases it is easier for users if we download the dependencies for them. The philosophy behind SU2 has always been to provide as much of a self contained package as possible.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450323672:90,depend,dependencies,90,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450323672,2,['depend'],['dependencies']
Integrability,"Thank you for the review @economon.; I just gave the multiple constraints a try on the hybrid onera m6 mesh we have in testcases, it works, both points and edges can be balanced, but the edge cuts go up by almost 50% I guess that makes sense, more constraints less minimization.; There's another reason why I like the combined function, balancing the ""num neighbors"" metric is not exactly the same as balancing the number of edges per partition, using a small negative point weight (-1, -2) yields better results (but the ideal value will be case dependent). I think the next big improvement we can make in this area is to use a partitioner that is aware of the network topology, ParMETIS assumes that the communication cost between any two ranks is the same, this simplification can be very costly on large parallel machines that have a tree-like network topology, and in older clusters with slow interconnects (relative to intra node communication).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807:547,depend,dependent,547,https://su2code.github.io,https://github.com/su2code/SU2/pull/1059#issuecomment-671054807,2,['depend'],['dependent']
Integrability,"Thank you for the review Catarina, based on your comments I will try to explain the new structure better. ### The interface; These numerics classes are still abstract and so the outside world only needs to known about their interface:; ```c++; class CNumericsSIMD {; public:; virtual void ComputeFlux(...) const = 0;; };; ```; Any class that wants to be a simd numerics needs to inherit from this base and in so doing is forced to implement `ComputeFlux` (because it is pure virtual). ### Static decorator pattern; Now, in this structure we don't have convective and viscous classes separate. Instead, we have convective schemes that can be ""decorated"" with viscous fluxes. For example:; ```c++; template<int nDim>; class CCompressibleViscousFlux : public CNumericsSIMD {; protected:; void viscousTerms(...) const {...}; };; ```; Here note that this class template is derived from CNumericsSIMD but it does not implement `ComputeFlux`, thus it cannot be instantiated by itself. The idea is that convective schemes can use these viscous fluxes as base class (thereby linking them to CNumericsSIMD) to access the `viscousTerms` method (when we don't want viscous terms we just use a dummy viscous class).; Note also the template parameter `nDim`, this is because we want to create specific versions of the numerical schemes for 2D and 3D (we ""want"" this because it allows static allocation and unrolling loops perfectly). Then convective classes also need to be class templates so that we can programatically change their base class:; ```c++; template<class Base>; class MyConvectiveScheme : public Base {; public:; void ComputeFlux(...) const {; // do my own thing; Base::viscousTerms(...);; // update the linear system with the result; }; };; ```; Now to create an instance of this class template we do for example:; ```c++; auto obj = new MyConvectiveScheme< CCompressibleViscousFlux<2> >(...);; ```; which would create an object for 2D problems with viscous terms. And so we need at least 4 instanti",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721:114,interface,interface,114,https://su2code.github.io,https://github.com/su2code/SU2/pull/1022#issuecomment-699618721,2,['interface'],['interface']
Integrability,"Thank you for your advice. I will do that as soon. PENG YAN, PhD student. Department of Aerospace Science & Technology. Politecnico di Milano; ________________________________; From: Nijso ***@***.***>; Sent: Wednesday, October 5, 2022 21:47; To: su2code/SU2 ***@***.***>; Cc: Peng Yan ***@***.***>; Author ***@***.***>; Subject: Re: [su2code/SU2] [WIP]Coupling of SU2 and CoolProp (PR #1782). Yes, all those automatically generated files should be removed, so everything in the folder .idea (including the folder), and the entire cmake-build-debug folder. If they come from coolprop, tell it to install into another directory outside of SU2. —; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/pull/1782#issuecomment-1268887325>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ATJ4GKA5U3DU3MBG5LNUQC3WBXLMBANCNFSM6AAAAAAQ53HAJY>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1268908256:935,Message,Message,935,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1268908256,1,['Message'],['Message']
Integrability,"Thank you for your question.; The geometry files are stored in a separate repository, su2code/Testcases; due to repository memory limitations. The file structure is the same, so; when you check out the test cases repository into the same folder you will; get the necessary files in the right places.; To test whether the installation worked immediately, you can run the; quickstart tutorial which includes the geometry file already. Details on this, and other information you will likely find useful are also; available on the wiki of the github repository:; https://github.com/su2code/SU2/wiki/Download. Cheers,; Heather. On Fri, Jan 8, 2016 at 3:51 PM, alexp1729 notifications@github.com wrote:. > All the TestCases seem broken when I try to run SU2 41 compiled from; > source When I run the serial_regressionpy and parallel_regressionpy; > scripts, I get error messages like; > ; > There is no geometry file (GetnZone))!; > ; > and mesh files like mesh_ONERAM6_turb_hexa_43008su2 appear to be missing; > When I copy one of these from a 40 sample directory (where everything; > worked) and rerun the test case manually by typing something like; > ; > mpirun -n 2 /mit/su2_v41/bin/SU2_CFD config_CFDcfg; > ; > it works Something seems to be missing that generates the mesh files but; > I'm no SU2 expert, I just install it for the real users Thanks for any help; > ; > ```; > Alex; > ```; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/su2code/SU2/issues/222. ## . Heather Kline; NASA Space Technology Research Fellow; PhD Candidate, Aeronautics & Astronautics, Stanford University; BS Aerospace Engineering, Rensselaer Polytechnic Institute; kline.hl@gmail.com, hlkline@stanford.edu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/222#issuecomment-170169063:864,message,messages,864,https://su2code.github.io,https://github.com/su2code/SU2/issues/222#issuecomment-170169063,1,['message'],['messages']
Integrability,"Thank you so much, Tobi and Pedro. Yes, there is a temperature gradient; close to the wall. So SU2 gives me, in this case, a 'virtual heat flux'!; Kind regards. On Thu, Sep 28, 2023 at 8:25 PM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1740735437:821,Message,Message,821,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1740735437,1,['Message'],['Message']
Integrability,"Thank you very much, Pedro!; Kind regards. On Tue, Oct 24, 2023 at 9:09 AM Pedro Gomes ***@***.***>; wrote:. > Yes that makes sense, we are probably missing some validation on markers; > not appearing on incompatible boundary conditions.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1777083598>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUQ652XHGRI7S7C7D7DYA6VYBAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZXGA4DGNJZHA>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1779772698:601,Message,Message,601,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1779772698,1,['Message'],['Message']
Integrability,"Thank you. I have found my where my problem was. My default python environment is anaconda python. But when I use `sudo pip install mpi4py`, it actually installed mpi4py for python2.7 (system python). So I have to install mpi4py for python3 (system or anaconda python). Due to my network problem, I choose to intall mpi4py with following commands:; ```; sudo apt install python3-pip; sudo pip3 install mpi4py; ```; Now I can install SU2 by Python Wrapper Build without errors. Thank you. Closing now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/722#issuecomment-506576947:447,Wrap,Wrapper,447,https://su2code.github.io,https://github.com/su2code/SU2/issues/722#issuecomment-506576947,1,['Wrap'],['Wrapper']
Integrability,"Thank you. I see, so you set separate markers, e.g. MARKER_EULER= ( WingTop, WingBottom ), and where the marker boundaries meet, the mesh points on that interface is unchanged; did I understand that correctly? I guess that while this will reduce the artefacts on the LE/TE it still results in a departure from the design shape at the portions away from the boundary edges. As you mentioned before, there might not be a way to solve this without mapping back to an iges or parametric file. I suppose another approach might be to work the other way around? Perhaps one can limit the max allowable adapted size to match the 'worst case' allowable surface mesh? I just realised that may be a contributing factor to why the points jumpy across the fuselage; `PYADAP_HMAX` may be set excessively large. If I set this limit to less than the average surface mesh cell size, will it attempt to refine everything over the limit instantly? Or will it only use the limit for 'new' cells that are generated during adaptation? Thanks for your thoughts.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764836923:153,interface,interface,153,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764836923,1,['interface'],['interface']
Integrability,"Thanks @MicK7 I will have a look, my initial thought was to have a simple strategy where within each MPI rank parallelism is extracted via colouring or scatter-to-gather transformations and only one thread per rank participates in the message passing, I have no experience here though so this might be a bad strategy, idk. **Back to business:**; I went silent for a bit because in prototyping a typical residual computation and matrix update loop I made some realisations that made me go back to the drawing board regarding data structures, and eventually back to square 0. . ## Parallel strategy for flux computation; Because significant computation is required to obtain each edge's flux, it does not make sense to attempt a ""point-loop"" strategy (which would double the effort).; However, one can either use colouring to avoid the race conditions that would result from updating the residual of cells i and j, or store the edge fluxes and then, on a second point-loop perform the summation of fluxes for each cell, with the direction being accounted by the same adjacency information used in the point-loop GG gradient computation.; If we consider only the update of residuals the two strategies are fairly equivalent performance wise, the tie breaker is the matrix updates. ## Matrix Updates; By this I mean the `addBlock`, `subBlock` we do (two times each) to update diagonal and off-diagonal blocks for each edge.; Here is a dummy numerics loop that does nothing else but setting blocks in the matrix (with colouring).; ```c++; void testLoop1(const vector<size_t>& colorStart,; const vector<size_t>& edgeIdx,; const vector<pair<size_t,size_t> >& connectivity,; double** blk_i, double** blk_j,; SparseMatrix& matrix); {; matrix.setZero();. for(size_t color=0; color<colorStart.size()-1; ++color); #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t k=colorStart[color]; k<colorStart[color+1]; ++k); {; size_t iEdge = edgeIdx[k];; size_t iPoint = connectivity[iEdge].first;; size_t j",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:235,message,message,235,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['message'],['message']
Integrability,Thanks @ScottImlay. Seems to work now. Just a quick question. You only adapted the volume mesh/solution routines. Is it also possible to use the new format for the surface files (i.e. in the routines SetTecplotBinary_SurfaceMesh/SetTecplotBinary_SurfaceSolution) ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-425020607:104,rout,routines,104,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-425020607,2,['rout'],['routines']
Integrability,Thanks @maxaehle 💐. Not sure how this will interact with scalar solvers (species transport) to come ... but in case someone there wants to work with sliding interfaces then I guess one has to test that a priori,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901:157,interface,interfaces,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344#issuecomment-896775901,1,['interface'],['interfaces']
Integrability,"Thanks @pcarruscag for your comments! I have now incorporated most of them. What is missing from the first batch is a good way of initialization instead of the recursive lambda expressions, because I'm lacking completely convincing ideas for this. . The most comfortable interface I can think of is a function; - whose parameters are all indices at once, and; - which returns a pair/structure of one `size_t` and one `Data_t`.; - If the index tuple is valid (in range), the `size_t` component is arbitrary and the `Data_t` component is the data element.; - If the index tuple is invalid, the `size_t` component specifies the first out-of-range index and the `Data_t` component is arbitrary. So the lambda expression would look like this:. [captures](unsigned long i1, ..., unsigned long iK){; if( i1 >= ... ) return Nd_Range(1);; if( i2 >= ... ) return Nd_Range(2);; ...; return Nd_Value( ... );; }. Do you consider this interface sufficiently comfortable? Anyway I'll have to think about how to implement this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1286#issuecomment-847253075:271,interface,interface,271,https://su2code.github.io,https://github.com/su2code/SU2/pull/1286#issuecomment-847253075,2,['interface'],['interface']
Integrability,"Thanks @sun5k, the merge conflicts were probably a bit challenging because some files were moved with the other work we were doing on turbulence.; I had a look at the code and it looks like you did a nice job of modernizing the transition implementation :+1: and the verification against Fluent also looks good.; Given that this is an improvement in all directions (better code, feature that works, same amount of code) I encourage you to make the final push so that we can integrate it into develop.; As you see the GitHub tests are failing because of compiler warnings (unused variables and so on, you should be able to see the logs) let me know if you need some help.; Then we need at least one regression test, for example one of the coarser grids in your V&V, and with that we should be able to finish this PR!. After that please consider adding your results to our V&V page https://su2code.github.io/vandv/home/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757:474,integrat,integrate,474,https://su2code.github.io,https://github.com/su2code/SU2/pull/1751#issuecomment-1239202757,1,['integrat'],['integrate']
Integrability,"Thanks @talbring,; I moved the preconditioner and matrix-vector product wrapper classes to separate files, these are so light weight that I was thinking of leaving them in one file.; I also moved some inlines to the hpp but I kept the private inlines in the inl file, these are only needed in the cpp and so by including the inl from the cpp (instead of bottom of hpp) we might avoid triggering recompilation of more units when working on implementation details of CSysMatrix.; Finally I would like to move/rename the larger files on a separate PR, that way it will be easier to track changes.; What do you think?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-503615855:72,wrap,wrapper,72,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-503615855,1,['wrap'],['wrapper']
Integrability,"Thanks Max that sounds very promising indeed. To everyone else, a quick update on the issue of performance vs. MKL.; I played a bit with @vdweide 's case and it does not seem trivial to get those 10% of performance back, at least not without a lot of restructuring.; I did however measure the performance of native gemm in Eigen to be ""only"" 2.5 times worse than MKL, after some emails we determined that this was because with the Intel compiler Eigen was not using AVX instructions but with g++ those instructions could be enabled by setting the -march flag appropriately. So far the conclusions are:; - Get 0% to 10% performance loss if you are using MKL (one could always bypass Eigen and call mkl directly).; - Write clean code compatible with AD and that will perform better than most easy implementations.; - Eventually get better performance of the discrete adjoint via the more efficient differentiation of operations with matrix-like objects.; - Have an extra dependency that does not need to be compiled.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-463591821:969,depend,dependency,969,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-463591821,1,['depend'],['dependency']
Integrability,"Thanks Suman,. My suggestion is the following… we have really never performed a detailed test of the CUSP scheme. As far I remember it was a really quick implementation. And it looks to see that you know SU2 and you are ready to contribute … Would it be possible for you to create a pull request with the changes, including a test case? if it is a bug, your change will pay off immediately. Best,; Francisco. > On Jul 12, 2017, at 10:03 PM, SumanVajjala <notifications@github.com> wrote:; > ; > @hlkline <https://github.com/hlkline> Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it.; > ; > Finally, can I now treat that this is a non-issue?; > ; > @fpalacios <https://github.com/fpalacios> @oleburghardt <https://github.com/oleburghardt> @hlkline <https://github.com/hlkline> By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other probable bug I was referring to within SU2 found in CUSP implementation.; > ; > Regards; > Suman; > ; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/405#issuecomment-314971522>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRkqESRvP7dcREH5t_PKPioRlkERhks5sNaUSgaJpZM4OKV38>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-315096146:1017,rout,routine,1017,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-315096146,2,['rout'],['routine']
Integrability,"Thanks Tim,. From the practical view of point, it is important to decide which numerical spatial integration do you want to use for the AD stuff… even if it is not consistent with the direct solver. Excellent job!. Thanks,; Francisco. > On Jul 12, 2017, at 11:57 PM, Tim Albring <notifications@github.com> wrote:; > ; > I also thought about unifying the options. However, for example for the frozen viscosity option we have different default values (NO for disc. adj. and YES for cont. adj.). That's why I did it that way for now. But I'll think of some solutions for that problem for the future.; > ; > Best,; > Tim; > ; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/pull/407#issuecomment-314989610>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AccuRtpsNdEcP-XjJy86bhhu1LXesbZ-ks5sNb_kgaJpZM4OS2wu>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/407#issuecomment-315094012:97,integrat,integration,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/407#issuecomment-315094012,1,['integrat'],['integration']
Integrability,"Thanks Tom !. I made the changes (typo and initializations). I would not choose just ""SU2"" for the Py wrapper name, since there already is a SU2 python folder. By the way this also contains some python driving functions and this might be confusing. The true python wrapper is what you get when you directly interface C++ functionalities with python through SWIG. The previous name of the wrapper was SU2Solver but once again I would avoid it since the true goal of the wrapper is to interface functionalities that could be much deeper than just the solver level. The python wrapper is not just a solver. So to avoid confusion I chose the name WrapSU2. pySU2 would do the job too and this is consistent with the pySU2 folder (used to compile the wrapper). SU2Wrapper ? PyWrapSU2 ? Just keep in mind that ""SU2"" should be part of the name, imagine you have to import two wrapped modules (from different codes) in the same python script I would prefer having : . ********; import pySU2 # wrapper of SU2; import pyOtherCode # wrapper of another code; ********. than having : . ********; import pyWrap # wrapper of SU2 but this is unclear; import theWrapper # wrapper of an other code but this is unclear; ********",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357#issuecomment-272404829:102,wrap,wrapper,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/357#issuecomment-272404829,13,"['interface', 'wrap']","['interface', 'wrapped', 'wrapper']"
Integrability,"Thanks Tom, unfortunately there are routines that are inactive only because calls to them were commented out elsewhere in the code (e.g. all the inverse design stuff), I tried to keep all of those.; I ended up deleting everything dealing with volume and surface outputs, as those were 100% not used.; Only the history / convergence routines remain, I also fixed a bug affecting harmonic balance simulations where all outputs went to the same file. Assuming harmonic balance is not used together with turbomachinery (I guess not since there is a driver class for each) it would be easy to move it over to the new output without too much loss of functionality. The turbomachinery stuff looks a bit harder because I don't know if it needs any of the fluid fields, it would probably be very easy for the people who work with this stuff though... Anyway it was a big mess, now it is smaller.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1115#issuecomment-734392212:36,rout,routines,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1115#issuecomment-734392212,2,['rout'],['routines']
Integrability,"Thanks a lot, @TobiKattmann, for this fix,. I was able to reproduce the error locally as well and the fix makes perfect sense to me. I've only added one small statement:; `config_container[iZone]->SetiInst(INST_0);`; to SU2_SOL in cases with single instance, to enforce that iInst = config->GetiInst() in CBaselineSolver::LoadRestart() receives the correct value. @economon as of now, I think there are no multizone-multiinstance cases available in develop. When that comes through, it would only require an extra loop on iInst and the correct setting of; `config_container[iZone]->SetiInst(iInst);`; in the very same fashion as it is done for harmonic balance (lines 357-380 in SU2_SOL.cpp). Then, inside the LoadRestart routine, the correct container position is read in line 3939 of solver_structure.cpp,; `unsigned short iInst = config->GetiInst();`; and used onwards. . I'll wait until the tests pass for this latest commit and then merge it in by Monday morning if there are no further comments.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572#issuecomment-417633741:722,rout,routine,722,https://su2code.github.io,https://github.com/su2code/SU2/pull/572#issuecomment-417633741,1,['rout'],['routine']
Integrability,"Thanks again for all of your hard work and integration, Samet. This is a very nice contribution to the open source community. Merging now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326#issuecomment-268398593:43,integrat,integration,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/326#issuecomment-268398593,1,['integrat'],['integration']
Integrability,"Thanks for filing this. Unfortunately, we have not completely implemented the ALE formulation for the incompressible solver to handle dynamic meshes. If this is something you would be interested in helping develop further, please let us know. That being said, we should have proper guards (or error messages) that avoid this kind of memory access error in the incompressible case. We'll look into this right away.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/247#issuecomment-195838721:299,message,messages,299,https://su2code.github.io,https://github.com/su2code/SU2/issues/247#issuecomment-195838721,1,['message'],['messages']
Integrability,"Thanks for finding a way to speed things up.; With regards to the tolerance, it would be preferable to update the test values rather than the tolerance, since especially for changes in the integrated values rather than the residual values, small changes over the small number of iterations could indicate a problem that will grow over time. A very small number of iterations is used in the tests in order to save time for the tests. . Are the changes you quote for the original precision, or for the quad-precision? If the latter, and maybe either way, I would recommend running the case for a larger number of iterations to make sure that there aren't larger differences growing over time that would effect the output, maybe due to some other change in the code that hasn't been identified yet. If you are interested in having your changes included in the code, maybe this discussion should move to a pull request, where folks on the su2 dev team could easily view changes in the code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/347#issuecomment-276431901:189,integrat,integrated,189,https://su2code.github.io,https://github.com/su2code/SU2/issues/347#issuecomment-276431901,1,['integrat'],['integrated']
Integrability,"Thanks for fixing the alignment.; With those options the code actually looks ok in areas that were recently cleaned up.; But the need for the manual formatting we have in loads of places comes from having code that is far too verbose and repetitive e.g. 10 calls to MPI routines with tons of arguments, 10 operator [] in a single line to get to the CSolver we need, entire copy pasted sections that should be functions, etc..; I am not a fan of that kind of wholesale automatic change because it does not fix any of the structural problems we have, and it tends to make the fixing of those issues harder because the aforementioned problematic areas are usually less readable after such changes.; I like the optimization approach of making small gradual improvements, but unfortunately this kind of maintenance is not very glamorous and few of us are up for it...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/969#issuecomment-625436086:270,rout,routines,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/969#issuecomment-625436086,1,['rout'],['routines']
Integrability,"Thanks for looking into this.. it could be an important change. Regression changes are expected, of course, but does the convergence of the code improve with this change, in your experience? . Since it is an off-diagonal term, it may be hurting diagonal dominance and thus possibly convergence of the linear system. The final solution does not depend on the Jacobian approximation at convergence, but if this noticeably helps overall convergence rate, we should make the change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/491#issuecomment-355732699:344,depend,depend,344,https://su2code.github.io,https://github.com/su2code/SU2/pull/491#issuecomment-355732699,1,['depend'],['depend']
Integrability,"Thanks for putting the tests together, David. We'll get this merged asap to ensure that future commits do not break the wrapper. @talbring, when you have a moment, can you please verify that the small changes to preconfigure.py won't hurt anything?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298#issuecomment-239576578:120,wrap,wrapper,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/298#issuecomment-239576578,1,['wrap'],['wrapper']
Integrability,"Thanks for the clarification clarkpede. One of the things I had tried when I first ran into that warning after looking at the code was to create a coarse grid with fewer than 1000 elements (just in case the sensor value was extremely large for a single element for some reason, then it should’ve at least marked that one for adaptation). However, it still output the same results and warning message. I’m not exactly sure how the adaptation index is calculated for the SUPERSONIC_SHOCK or GRAD_FLOW, but is it possible that these values could be negative, causing the sensor value to always be below the threshold value?. I haven’t been able to find any examples using the mesh adaptation, so I may be missing an additional parameter from the configuration file. Thanks for any additional help,; Alex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-435625964:392,message,message,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-435625964,1,['message'],['message']
Integrability,"Thanks for the comments guys.; I think for preconditioners CSysMatrix already gives default hooks to attach external solvers to, there is a build method and a compute method, and that was the logic I followed for this.; All the operations I do inside the wrapper are solver specific, the only thing that could eventually be abstracted from there is the conversion between our matrix format and the one PaStiX requires (which is a mere re-ordering so the column indices are ordered according to global index in linear partitioning, unfortunately this is enough to warrant a full copy).; My reason not to have gone with PETSc is [this table](https://www.mcs.anl.gov/petsc/documentation/linearsolvertable.html) that shows very little compatibility with the SU2 block sparse matrix format.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524942947:255,wrap,wrapper,255,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524942947,1,['wrap'],['wrapper']
Integrability,Thanks for the contribution and for working to wrap up the review changes. LGMT! Merging now.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/412#issuecomment-319186154:47,wrap,wrap,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/412#issuecomment-319186154,1,['wrap'],['wrap']
Integrability,"Thanks for the contribution! This is a much needed change. I wanted to perform a refactoring like this myself. The viscous (or turbulent) stress calculation is repeated many times in the code. Changing that calculation (e.g. adding QCR or UQ) currently requires changing many files. In my humble opinion, the stress tensor calculation should have its own class at the lowest level of the code, like the gas model (e.g. ideal gas) or the viscosity calculation (e.g. Sutherland's law). `CNumerics` classes need access to it, and `CNumerics` is meant to have minimal dependencies. But the stress isn't really ""numerics."" Its part of the underlying equations we're trying to solve. Changing the stress tensor isn't the same flavor as changing from JST to Roe. Because the stress is part of the underlying equations, it is sometimes needed in the `CSolver` classes. Previously, I've seen the stress tensor used in `CNSSolver` boundary conditions and axisymmetric source terms. That may still be true in the current version of the code. The best way to make sure that both `CSolver` and `CNumerics` have access to it is to make it an independent class. Unless, of course, we want to be manually setting the six tensor elements in `CNumerics`, like we do with primitive variables. I don't like that alternative.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842:564,depend,dependencies,564,https://su2code.github.io,https://github.com/su2code/SU2/pull/1127#issuecomment-742531842,1,['depend'],['dependencies']
Integrability,"Thanks for the fix, Tim. One area that I had to modify a bit was the SetSensitivity() routine that you just modified.. does it all look ok to you in your discrete tests? Most of the ones in the repo were working fine for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/379#issuecomment-282792870:86,rout,routine,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/379#issuecomment-282792870,1,['rout'],['routine']
Integrability,"Thanks for the heads up - I just noticed you merged today! Does that mean; if I download the fresh-out-of-the oven master, these problems will go; away? Cheers!. On 6 Dec 2017 18:55, ""David Thomas"" <notifications@github.com> wrote:. > As the error message says, it cannot find ""Python.h"". This is again; > related to the Python wrapper compilation. If you really don't need it, I; > suggest you to just disable it when configuring your build (remove; > --enable-PY_WRAPPER). If you need the Python wrapper and if your Python is; > not located in a standard location on your supercomputer, you will have to; > manually modify the SU2_PY/pySU2/Makefile.am and put the right paths for; > the Python include and Python libs (I think similarly to what you did for; > mpi4py, see above)... Again, everything should be improved after #424; > <https://github.com/su2code/SU2/pull/424> is merged.; >; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/447#issuecomment-349590138>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AQD-Esbg6axZxZB3ZUnHir1iqvyU8CUSks5s9mSrgaJpZM4Pm0yA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-349967348:248,message,message,248,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-349967348,3,"['message', 'wrap']","['message', 'wrapper']"
Integrability,"Thanks for the quick review @pcarruscag. I have cleaned up a little bit. Also added a nicer table of the output. l prefer that we always compute the min/max values, at least for the FVM CFD solvers, for a few reasons. The most important reason is that we should start to build up some intuition about the correlation between mesh quality metrics and accuracy + convergence in the solvers. This can be especially important during optimization when the mesh is deforming. I think the metrics are valuable to print every time for this reason, which might help users diagnose problems eventually. Additionally, the cost is relatively small (on par with the other pre-processing routines, it is only executed once and it is parallelized, and the memory is released if we don't write).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778#issuecomment-526456264:674,rout,routines,674,https://su2code.github.io,https://github.com/su2code/SU2/pull/778#issuecomment-526456264,2,['rout'],['routines']
Integrability,"Thanks for the reviews guys.; @economon I added comments to the area of the code you highlighted.; The file IO is not a bottleneck at the moment, and that filtering step is only done once.; I did have a look at anything with ""adjacency"" in the name but I took the easy way out (shamelessly) as those routines looked quite intimidating.; If you have plans to make the output structure capable of handling element values I will piggy-back/collaborate on that and output the derivatives via the output instead of writing a dedicated file.; Since we have two approvals, I will turn the example case I've included into a regression and then this can be merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595#issuecomment-435698786:300,rout,routines,300,https://su2code.github.io,https://github.com/su2code/SU2/pull/595#issuecomment-435698786,1,['rout'],['routines']
Integrability,"Thanks for the tips so far! By any chance do you know which part of the configuration/path search that results in the line that says:; ```; Run-time dependency python3 found: YES 3.6; ```. I can't figure out why it picks up my environment 3.7 (which has the mpi4py installed) correctly, but then somehow pulls in 3.6! Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-752694678:149,depend,dependency,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-752694678,1,['depend'],['dependency']
Integrability,"Thanks for your comment, Ruben, ; this pull request was indeed also intended to open a discussion among developers regarding the proper nomenclature for interface markers and variables. This is just a preliminary step towards sliding meshes so this capabilities will remain hidden for a while since it is still under development. ; We'll have plenty of time to discuss how the Marker_fsi_interface tag should change.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322#issuecomment-256055685:153,interface,interface,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/322#issuecomment-256055685,1,['interface'],['interface']
Integrability,"Thanks for your comments! Except for mixing plane and frozen rotor, sliding plane is also pretty common in turbomachinery simulation, it is indeed implemented in some, if not all, in-house codes. ; MRF is quite useful in turbomachinery simulation, expecially when we deal with transient simulation. Actually it is really rare to move the rotor mesh like in reality. One reason is that MRF is more efficient and accurate. Otherwise, you introduce new disturbance into the transient flow field every physical time step, which is not good. Because when you rotate the mesh, the velocity direction of each grid point inherited from last time step is not rotated. To make it more clear, you will have a flow going towards casing instead of parallel to, at the start of next physical time step. So you need more pseudo time steps to get a proper velocity variable. As a result, you get a zig-zag shape in the residual history.; I'm not actually moving the interface. The rotor mesh is not rotated, so as the interface at rotor zone. I'm just virtually rotating the rotor interface to find the new matching points between rotor and stator for each physical time step, so that the variable could be passed across the interface. In other words, only the passing variables are actually rotated. If I understand it correctly, there is no additional moving mesh restriction introduced here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506:950,interface,interface,950,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1953783506,8,['interface'],['interface']
Integrability,"Thanks for your comments. Please refer http://stackoverflow.com/questions/14105650/how-does-stdflush-work. The output buffer is flushed automatically when it is full. Buffer size is usually fixed and does not depend on the count of writes. By using buffered I/O you are grouping your writes to a single step (equal to size of buffer) rather than multiple small writes (which is inefficient). ; By using ""endl"", we are forcing buffer flush after every line which defeats the purpose of buffered I/O. For the paraview output files, number of new lines is very less. So I have not made the modifications there. I have modified only output_structure.cpp, where the impact is real. The fix really helps writing of restart_flow.dat which has huge number of new lines (one for every vertex). I have checked the output files and there is no difference after the fix.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/281#issuecomment-223821839:209,depend,depend,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/281#issuecomment-223821839,1,['depend'],['depend']
Integrability,"Thanks for your hints. Now I understand that:; a) In `CPhysicalGeometry::LoadSurfaceElements`, the process finds those global markers that have at least one element adjacent to the subdomain of the process, and assigns local IDs. The function is called in the constructor of `CPhysicalGeometry`.; b) The transfer of quantities from one MPI process to another is done with additional markers of type `SEND_RECEIVE`. They are created e.g. in `CPhysicalGeometry::SetSendReceive` => after the constructor has been called. I also saw that the problem of mapping local (non-`SEND_RECEIVE`) markers to some global identifiers can be (and is) solved by the `string` `config->GetMarker_All_TagBound(val_marker)`. And probably there is no point in assigning a global ID to each pair of communicating `SEND_RECEIVE` markers.; ; So there is no need for the local<->global mapping that I intended to implement. Instead I will just remove the two members of `CPhysicalGeometry` and what depends on it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155:973,depend,depends,973,https://su2code.github.io,https://github.com/su2code/SU2/issues/1110#issuecomment-762234155,1,['depend'],['depends']
Integrability,Thanks for your remarks. I already named the routines AD/FD to prepare for that. With an appropriate config option this also works then for the cont. adjoint. I'll try that first before merging.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/239#issuecomment-183855554:45,rout,routines,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/239#issuecomment-183855554,1,['rout'],['routines']
Integrability,"Thanks for your reply. 3.0.12 works well in my own machine. But the newest version in HPC is 3.0.10. I have required ICT to install it. Hopefully, it will be done tomorrow. Thanks. 获取 Outlook for iOS<https://aka.ms/o0ukef>; ________________________________; 发件人: Pedro Gomes ***@***.***>; 发送时间: Monday, April 25, 2022 8:49:52 PM; 收件人: su2code/SU2 ***@***.***>; 抄送: Jia, Guangnan ***@***.***>; Author ***@***.***>; 主题: Re: [su2code/SU2] Fail to Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx' (Issue #1617). This email from ***@***.*** originates from outside Imperial. Do not click on links and attachments unless you recognise the sender. If you trust the sender, add them to your safe senders list<https://spam.ic.ac.uk/SpamConsole/Senders.aspx> to disable email stamping for this address. Should work with swig 3.0.11 onward according to this https://www.swig.org/; (I have 3.0.12 and it's fine); Please confirm if upgrading swig works for you and I will try to put this requirement meson. ―; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/1617#issuecomment-1108974316>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/ANDDBRPFTZJQUMEUKVME6GLVG3ZOBANCNFSM5UI2ADRA>.; You are receiving this because you authored the thread.Message ID: ***@***.***>",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1617#issuecomment-1108977945:1281,Message,Message,1281,https://su2code.github.io,https://github.com/su2code/SU2/issues/1617#issuecomment-1108977945,1,['Message'],['Message']
Integrability,"Thanks, @clarkpede, for this PR and for the clear explanation of the features proposed. LGTM in terms of implementation and code style. I'll just wait for @EduardoMolina to comment on the contents. I only have a couple of minor questions:. > I moved the calculation of the maximum cell width to the CPhysicalGeometry class. This makes inclusion in the central/upwind blending easier. For DES and DDES, the cell lengthscale is not dependent on the flow. So there's no need to compute it every iteration in the flow solver. I can see this approach reduces the computational cost of computing the MaxLength every time at the cost of having one more double in memory per point. However, would a call to SetMaxLength() be necessary in case of deformable meshes? . Also, from PR #532:; > As for code verification, I would propose using one of the cases examined by Travin, Stretlets, Mockett, or Xiao for comparison. (...) The cases I can see where they explicitly show the results of the blending function are: Circular cylinder at Re = 50,000 (Travin et al. 2002) (...). I guess this is the case for which you are showing the rough tests results in the Code Verification section. I am currently looking into some test cases at similar Re regimes. Are you using the unsteady compressible solver for this verification? I noticed that in Ref.[1] they use artificial compressibility, and I was wondering if we could also use this test case to look into the unsteady, incompressible (preconditioned) version of the solver (PR #514).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/552#issuecomment-403842613:430,depend,dependent,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/552#issuecomment-403842613,2,['depend'],['dependent']
Integrability,"Thanks, Ben! We're getting this all integrated as we speak...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/135#issuecomment-67568529:36,integrat,integrated,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/135#issuecomment-67568529,1,['integrat'],['integrated']
Integrability,"Thanks, Tim. Did you check if this is related to the compiler or architecture, by any chance? I know that the partitions provided by ParMETIS change depending on the system (although they should be deterministic). In the past, compiler optimizations have led to non-deterministic behavior on some systems. Does it still occur with -O0 optimization?. We'll look into it too.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/276#issuecomment-221407884:149,depend,depending,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/276#issuecomment-221407884,1,['depend'],['depending']
Integrability,"Thanks, looks like a straight forward setup (I was hoping for obscure features that do not get used often).; Is the problem case dependent (e.g. does it also happen with the quickstart case)? Or number of cores dependent?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623639143:129,depend,dependent,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623639143,2,['depend'],['dependent']
Integrability,"That does not look like an MPI problem (yup automake + preconfigure.py is the legacy system). The probable problem there is that your OpenBLAS was not build with support for LAPACK functions (the undefined references in the error messages from the linker). If you are building OpenBLAS from source there is an option to provide LAPACK support (if I recall correctly, this is the default so I'm guessing you are using what the operating system provides).; The best solution is to get OpenBLAS with LAPACK support, alternatively:; - Install LAPACK for your operating system and below line 155 of meson.build add ```su2_deps += dependency('lapack')``` (this will use pkg config).; - Delete line 153 of meson.build, i.e. keep BLAS but disable LAPACK, this can either make what you are doing much slower, or have no difference at all...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702:230,message,messages,230,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721373702,2,"['depend', 'message']","['dependency', 'messages']"
Integrability,"That heavily depends on the filesystem as the linker copies and moves huge amounts of data. On my local machine linking is pretty fast, in the same order of compiling one file. However, on our cluster it is rather slow because its a (parallel) network filesystem. Anyway, in contrast to make, ninja builds ALL objects files in parallel without waiting for a specific static library to be linked. Linking is done as soon as all required object files are ready in parallel with the compilation of other object files. So yeah, for minor code modifications linking can still be the limiting factor, but there is no way around that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-516459774:13,depend,depends,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-516459774,1,['depend'],['depends']
Integrability,"That is dependent on #866, which is still in progress",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-609967142:8,depend,dependent,8,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609967142,1,['depend'],['dependent']
Integrability,"That is true. In that case, I will mute the SetAnalyzeSurface function entirely and create an error message. Will update in a minute.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1772#issuecomment-1257255255:100,message,message,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1772#issuecomment-1257255255,1,['message'],['message']
Integrability,"That's not consistent with any code I know, when using the MRF approach you either get frozen rotor or mixing plane interfaces. If you want a more accurate simulation you move the mesh and update the interfaces, there are several advantages to not dealing with the MRF source terms. There are also practical aspects of not updating the interface when doing transient MRF, for example it lets you handle interfaces that are not cylindrical, people use this to model car wheels.; MRF is also less restrictive for time step size than moving mesh, but if you move the interface you bring some of the moving mesh restrictions to MRF. So my impression is that this strategy combines some of the downsides of both approaches...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1952787949:116,interface,interfaces,116,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1952787949,5,['interface'],"['interface', 'interfaces']"
Integrability,The ILU issue depends on number of cores regardless of MPI/OpenMP split.; The non-determinism of the NK solver should be worse with more threads.; I recommend initializing from the coarse results.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2340156243:14,depend,depends,14,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2340156243,1,['depend'],['depends']
Integrability,"The address sanitizer reports a heap buffer overflow for [this](https://github.com/su2code/SU2/blob/e33871a2c22dd1eefb3a023ea28369b1ca249b3f/SU2_CFD/src/interfaces/CInterface.cpp#L314) piece of code. I presume the issue is the access `SpanValuesDonor[kSpan + 1]` in the case that `kSpan == nSpanDonor - 1` so that `kSpan` references the last array entry already. Below is a stripped-down version of the corresponding code.; ```; ...; for (jSpan = 0; jSpan < nSpanDonor; jSpan++) {; ...; if (...); kSpan = jSpan;; ...; }; ... SpanValuesDonor[kSpan + 1] ...; ```. Is someone familiar with the `CInterface` code and could make recommendations for a fix?. Below is the address sanitizer report, see also [here](https://github.com/su2code/SU2/actions/runs/8536216515/job/23386086770?pr=2246#step:7:2062). ```; ==2308==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60f0008c96a0 at pc 0x558b6435ae51 bp 0x7ffc1cebf680 sp 0x7ffc1cebf670; READ of size 8 at 0x60f0008c96a0 thread T0; #0 0x558b6435ae50 in CInterface::PreprocessAverage(CGeometry*, CGeometry*, CConfig const*, CConfig const*, unsigned short) ../SU2_CFD/src/interfaces/CInterface.cpp:314; #1 0x558b6373d23a in CDriver::PreprocessTurbomachinery(CConfig**, CGeometry****, CSolver*****, CInterface***, bool) ../SU2_CFD/src/drivers/CDriver.cpp:2725; #2 0x558b63770d76 in CDriver::CDriver(char*, unsigned short, int, bool) ../SU2_CFD/src/drivers/CDriver.cpp:250; #3 0x558b637f54c2 in CMultizoneDriver::CMultizoneDriver(char*, unsigned short, int) ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:35; #4 0x558b63615b53 in main ../SU2_CFD/src/SU2_CFD.cpp:135; #5 0x7f0d8c503082 in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x24082); #6 0x558b6367005d in _start (/github/workspace/install/bin/SU2_CFD+0x63405d). 0x60f0008c96a0 is located 0 bytes to the right of 176-byte region [0x60f0008c95f0,0x60f0008c96a0); allocated by thread T0 here:; #0 0x7f0d8ed00787 in operator new[](unsigned long) ../../../../src/libsanitizer/asan/asan_new_del",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720:153,interface,interfaces,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/2246#issuecomment-2034404720,1,['interface'],['interfaces']
Integrability,"The adjoint handling of the Eigen library can actually be a two step process. In the first step we just use the BlackBox differentiation of Eigen. This will work for every user in the primal code and adjoint code. As a second step we would then look into the BLAS wrapper of Eigen and check if we can provide a special treatment for the adjoint aka CoDiPack version. In general there are two options available:. 1. Wrap the BLAS calls in external functions, requires a lot of manual programming but can be generalized so that it is also available as a general feature of CoDiPack (e.g. We can handle BLAS to XX %). 2. Make use of the ""new"" AD tool I am currently programming. This tool does not insert itself into the Eigen structures, but wraps around them. Then the special path for BLAS can be activated without the AD tool even noticing it. For both options it will be very interesting for us to see how the performance compares with respect to the primal optimized and non optimized version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-462272618:264,wrap,wrapper,264,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-462272618,3,"['Wrap', 'wrap']","['Wrap', 'wrapper', 'wraps']"
Integrability,"The build fails with old compilers due to the upgrade of the Ubuntu version; in the Docker images used by CI.; Ubuntu 20.04 comes with GCC 9.4, I believe.; Should it install older GCC?. On Wed, Jul 6, 2022, 19:13 Pedro Gomes ***@***.***> wrote:. > We have been trying to support gcc 4.8.5; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/1701#issuecomment-1176416059>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AABYUQTAQAPJR75UCKTGMF3VSWWDPANCNFSM52ZNEMQA>; > .; > You are receiving this because you are subscribed to this thread.Message; > ID: ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1701#issuecomment-1274280362:612,Message,Message,612,https://su2code.github.io,https://github.com/su2code/SU2/issues/1701#issuecomment-1274280362,1,['Message'],['Message']
Integrability,The case is now also failing in #745. Tested it locally and found that the result is compiler dependent. GCC5.4 and GCC9 give different results.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734#issuecomment-516389102:94,depend,dependent,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/734#issuecomment-516389102,1,['depend'],['dependent']
Integrability,"The case with large change of residuals (3 orders) is the rotating cylinders case (sliding interface).; With this PR I get the following flow field at the last iteration:; ![image](https://user-images.githubusercontent.com/38071223/59783874-0ca11880-92b9-11e9-840e-20fd87ec17e9.png); With develop I get this one at time iter 2:; ![image](https://user-images.githubusercontent.com/38071223/59783928-2cd0d780-92b9-11e9-90bd-9155dd2a6b4e.png); And I think it is fair to say the case was actually blowing up before:; ![image](https://user-images.githubusercontent.com/38071223/59784008-5984ef00-92b9-11e9-89e0-d78eb0d76b90.png); If I change the linear preconditioner to the ILU the develop results are basically the same as with this PR. Why does the previous LU_SGS diverge and the current doesn't? No idea, maybe for a different limit condition it would go the other way...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-503643650:91,interface,interface,91,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-503643650,1,['interface'],['interface']
Integrability,"The changes to SU2 are mostly minor. There are some adaptions regarding external functions, due to interface changes from CoDiPack 1 to CoDiPack 2. The `callPrimalFuncWithADType` is necessary for correct output handling. Passing the external function to it is the intended usage, therefore the encapsulation of the respective code block in a lambda expression. `callPrimalFuncWithADType` also takes care of the tape activity, which was previously spelled out in SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899:99,interface,interface,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/1903#issuecomment-1451814899,1,['interface'],['interface']
Integrability,"The corresponding OpenMP functionality would more something be like OpenMP single in order to print the error message once. I don't know MPI-3 too well yet, but I can have a look. Then we can make a decision whether or not we want to have MPI-3 functionality in there.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564#issuecomment-417216607:110,message,message,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/564#issuecomment-417216607,1,['message'],['message']
Integrability,"The degrees are specified by ""logic"" axis (i j k), i.e. the result depends in the order you specify the corners in FFD_DEFINITION, e.g. your geometry has the span aligned with X, whereas in the first image the span is aligned with Y. Personally I find it confusing too, I just end up swapping things around until I get what I want.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/977#issuecomment-626871785:67,depend,depends,67,https://su2code.github.io,https://github.com/su2code/SU2/issues/977#issuecomment-626871785,1,['depend'],['depends']
Integrability,"The developer who worked on it was @frx-wintermute in #1951 ; A lot of those packages are header-only, not compiled libraries, if you use different versions than the ones we use in our regression tests you have no guarantees that the code will work properly, and it seems you are mostly interested in stability.; If you want to make changes to the meson.build script to look for local versions of libraries like cgns, parmetis, etc. see e.g. https://github.com/su2code/SU2/discussions/2064; We also have examples like this:; ```; pastix_dep = dependency('pastix', required: false). if not pastix_dep.found(); pastix_root = get_option('pastix_root')+'/install'; scotch_root = get_option('scotch_root')+'/lib'; pastix_dep = declare_dependency(include_directories: pastix_root,; link_args: [ '-L../'+pastix_root, '-L../'+scotch_root,; '-lpastix', '-lscotch', '-lptscotch', '-lptscotcherr',; '-lm', '-lrt', '-lpthread']); endif; su2_deps += pastix_dep; ```; where we try to use pkg-config and fall back to specifying paths. I recommend using pkg-config whenever possible.; If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871:543,depend,dependency,543,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646018871,1,['depend'],['dependency']
Integrability,"The discrete adjoint may still run with the chosen objective, since that is entirely defined within the C++, but some additional steps may be needed to run your objective with the Python framework. First, I recommend that you verify in your primal solve that you can compute one of your chosen objectives such as ENTROPY_GENERATION, and that it appears in the history file, since this is a prerequisite for running shape optimization with the Python framework. You should be able to follow details of the old ENTROPY_GENERATION objective if you look in the COutputLegacy::SpecialOutput_Turbo() routine in the legacy output. Note that you may need to do some work to connect this for your particular problem, since as mentioned, the turbomachinery related features are currently being brought into line with the most recent version of the software, and the routine may not be called by default. Once you have your desired objectives being computed and printed to the history file, give the updateHistoryMap.py script a look so that you can update the fields that the python framework can handle. As for custom objectives, there is a variable within the fluid solvers named Total_Custom_ObjFunc that will be differentiated for you if you use it compute a custom expression within the solver class (you can do this in multiple places within the solver class, but make sure it is called). Same suggestions apply for making sure that you can compute the custom objective, it appears in the history file, and that the python script is updated to read that particular field during optimization.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/889#issuecomment-609959747:594,rout,routine,594,https://su2code.github.io,https://github.com/su2code/SU2/issues/889#issuecomment-609959747,2,['rout'],['routine']
Integrability,"The discrete adjoint solvers (all of them, with deforming or static grids) compute sensitivities with respect to displacing individual nodes, the only projection done on the surface sensitivities is onto the surface normal (my previous reply was incomplete).; But this is just for post processing, this manipulation still does not consider that moving a surface node (e.g. through an FFD variable) also moves internal nodes, due to the _design mesh deformation_ (as opposed to FSI deformation for example). The volume sensitivity projection of SU2_DOT_AD is the differentiation of SU2_DEF. For deforming grid cases this step is still required, the best way I can put it in words is that the results still depend on the initial / reference coordinates of the grid, if you move any point of the initial grid you change the results, as you change not only the deformed final position of the point, but also the way the mesh itself responds to the physical (e.g. FSI) surface displacements that it is subject to.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1017#issuecomment-640078507:705,depend,depend,705,https://su2code.github.io,https://github.com/su2code/SU2/issues/1017#issuecomment-640078507,1,['depend'],['depend']
Integrability,The externals/ directory changes are intentional. They correct some issues with CGNS library implementation. Those fixes are now being integrated in the develop branch of CGNS library and should be available in the next fix release around the end of the year.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-511712751:135,integrat,integrated,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-511712751,1,['integrat'],['integrated']
Integrability,The interface received some modifications to clean up and update various function. The python switch has been removed.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1198:4,interface,interface,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/1198,1,['interface'],['interface']
Integrability,"The interpolation tool I use is a standalone program and not integrated into SU2. However, it is possible that @bmunguia and @jayantmukho have integrated it into SU2. Is that the case?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/466#issuecomment-505741019:61,integrat,integrated,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/466#issuecomment-505741019,2,['integrat'],['integrated']
Integrability,"The message will look like this:; ```; The FFD box 'BLADE_BOX' is not properly defined. The first 4 points must be listed counter; clockwise, such that applying the right-hand rule results in a vector into the box.; This is according to the VTK hexahedron ordering:; 7 +----+ 6 ; /| /| ; 4 +----+5| ; |3+--|-+ 2 ; |/ |/ ; 0 +----+ 1 ; The CCW convention also applies in 2D, where only the bottom face is specified.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1547062720:4,message,message,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1547062720,1,['message'],['message']
Integrability,"The native mesh adaption was deprecated. The amg interface is in development, you can re-open some of the issues where it is mentioned to ask new questions (that way all ""documentation"" stays in one place).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783:49,interface,interface,49,https://su2code.github.io,https://github.com/su2code/SU2/issues/1143#issuecomment-751685783,1,['interface'],['interface']
Integrability,"The objective of this pull request is to clarify the name of some parameters. I found that:; 1. LIMITER_COEFF was confusing because: A) it is a parameters linked only to the Venkat's limiter B) Venkat's original and Wang's version use the same parameter but with different value! (0.5 vs. 0.05); 2. I found AD_COEFF_FLOW very confusing too: A) You can think that AD stands for Automatic Differentiation B) AD is too convoluted... it is just JST!; 3. REF_ELEM_LENGTH is mainly linked to Venkat's limiter... and a constant value is recommended (0.1 or 5.0 depending on the units). In the method REF_ELEM_LENGTH is multiplied by LIMITER_COEFF... so why two parameters to define a single constant (EPS)?... too many options for the user... The current config file to define the limiters or the pressure sensor is as follow:. % ----------- SLOPE LIMITER AND DISSIPATION SENSOR DEFINITION -----------------%; %; % Coefficient for the Venkat's limiter (upwind scheme). A larger values decrease; % the extent of limiting, values approaching zero cause; % lower-order approximation to the solution (0.05 by default); VENKAT_LIMITER_COEFF= 0.05; %; % 1st, 2nd and 4th order artificial dissipation coefficients for; % the JST ( 0.15, 0.5, 0.02 by default ); JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ); %; % Coefficient for the adjoint sharp edges limiter (3.0 by default).; ADJ_SHARP_LIMITER_COEFF= 3.0; %; % 1st, 2nd, and 4th order artificial dissipation coefficients for; % the adjoint JST method ( 0.15, 0.5, 0.02 by default ); ADJ_JST_SENSOR_COEFF= ( 0.15, 0.5, 0.02 ). This config file is much more clear for people that are not familiar with SU2. Best,; Jonathan",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451:554,depend,depending,554,https://su2code.github.io,https://github.com/su2code/SU2/pull/451,1,['depend'],['depending']
Integrability,"The problem is not related to the OpenMPI library but the system's libz library and the fact that apparently it is not compiled using the -fPIC option (to create Position Independent Code, which means that the generated machine code is not dependent on being located at a specific address in order to work) but SU2 is compiled or must be compiled with this option in order to work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1074863970:240,depend,dependent,240,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1074863970,1,['depend'],['dependent']
Integrability,"The residuals (and indeed the converged results) change for some cases due to these changes (by very small amounts). Looking at limiter fields there are some differences that justify this. Those differences are present mostly in smooth flow regions, why in this regions?; Because this is where the old edge loops had a lot of logic to avoid divisions by zero, that is not required for the point loop implementation. There was also a change to the epsilon that initializes the min/max calculation (it now comes from the traits of the datatype).; I used the transonic_stator case to check that:; - The computed limiters are not too different, especially near periodic boundaries (for which a change in how min/max neighbor calculation was required).; - The results do not depend on number of ranks / threads. This is the flow field (for reference):; ![image](https://user-images.githubusercontent.com/38071223/72300708-779eac00-365c-11ea-9054-8b83a6ca8fe3.png). This shows the x-mom limiters near the trailing edge for the develop version:; ![image](https://user-images.githubusercontent.com/38071223/72300849-e3811480-365c-11ea-9fc6-3989c59d9997.png). And this for this branch:; ![image](https://user-images.githubusercontent.com/38071223/72300903-07445a80-365d-11ea-8bf0-eba72a2b50af.png). You can tell a slight ""darkening"" close to the blue spots, and also before the small spot close to the wall, before the shock. Near the periodic boundaries there are no visible changes.; I ran the case with 1 rank 1 thread (1/1), 1/4 and 4/8 (32 total), the results are the same (the convergence rate is different due to the behavior of the preconditioner).; [files.zip](https://github.com/su2code/SU2/files/4056576/files.zip). If you would like a specific test, or see some weird behavior in one of your cases let me know, but since only a few regressions changed I will only post comparisons of cases with substantial changes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/834#issuecomment-573929388:770,depend,depend,770,https://su2code.github.io,https://github.com/su2code/SU2/pull/834#issuecomment-573929388,1,['depend'],['depend']
Integrability,"The routine you are looking for is probably this one:. `void CPhysicalGeometry::SetGridVelocity(CConfig *config, unsigned long iter)` geometry_structure.cpp:14760 (cannot paste a link, the file is too big)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/766#issuecomment-524363232:4,rout,routine,4,https://su2code.github.io,https://github.com/su2code/SU2/pull/766#issuecomment-524363232,1,['rout'],['routine']
Integrability,"The source term is pretty simple but the feature as a whole is very intrusive on the code, even the mesh deformation is getting involved in this.; Would it be viable to use the python wrapper to provide the source term?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2273#issuecomment-2098573850:184,wrap,wrapper,184,https://su2code.github.io,https://github.com/su2code/SU2/pull/2273#issuecomment-2098573850,2,['wrap'],['wrapper']
Integrability,"The word ""numerics"" applies to most of what SU2 does including time integration. For this reason, a class called CNumerics that only relates to spatial discretization is confusing. . Considering the routines which inherit from this parent class (CUpwRoe_Flow, CAvgGradCorrected_Flow, etc.), I suggest as a new name CSpatialSchemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/81:68,integrat,integration,68,https://su2code.github.io,https://github.com/su2code/SU2/issues/81,2,"['integrat', 'rout']","['integration', 'routines']"
Integrability,"There are certainly parameters in the config, and if you had posted yours I could give advice without having to write a bloody essay on all of them. DEFORM_STIFFNESS_TYPE= WALL_DISTANCE // always; DEFORM_COEFF= ""nu"" // the Poisson ratio, default 1E6, you can also try a small value 0.2-0.3; DEFORM_LIMIT= ""R"" // clamps domain points with wall distance greater than ""R"", this improves the condition of the stiffness matrix, which makes it easier for the linear solver to converge.; DEFORM_CONSOLE_OUTPUT= YES // so you can see if the linear solver converges; DEFORM_NONLINEAR_ITER= 1 // always; DEFORM_LINEAR_SOLVER = FGMRES // or CONJUGATE_GRADIENT if memory becomes a problem, i.e. if GMRES does not converge in 100-200 iterations.; DEFORM_LINEAR_SOLVER_PREC = ILU // always, always, never anything else.; DEFORM_LINEAR_SOLVER_ERROR= 1e-9 // at least, I usually set it to 1e-10; DEFORM_LINEAR_SOLVER_ITER= 200 // or a much larger number when using CG since its memory usage does not depend on number of iterations",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1026#issuecomment-645265175:984,depend,depend,984,https://su2code.github.io,https://github.com/su2code/SU2/issues/1026#issuecomment-645265175,1,['depend'],['depend']
Integrability,There is a contribution to the Jacobian because the heat flux depends on the temperature at the node. Does it work better if you remove that contribution?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1643929911:62,depend,depends,62,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1643929911,1,['depend'],['depends']
Integrability,"There is a lot of boilerplate code in the code base for screen output like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Ad",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:124,Message,Message,124,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['Message'],['Message']
Integrability,"There is an issue for time accurate simulations with multi-stage time integration schemes in combination with multiple (fluid) zones. The reason is that the loop over the multiple (usually Runge-Kutta) stages takes place in the function CMultiGridIntegration::MultiGrid_Cycle, while the loop over the zones is carried out in the drivers. Hence the loop over the (Runge-Kutta) stages takes place inside the loop over the multiple zones. This is fundamentally wrong and will lead to at most 1st order accuracy in time. Hence, the sequence of these loops should be reversed. In principle there are two ways to do this, namely moving the loop over the Runge-Kutta stages up in the hierarchy, or moving the loop over the zones down. I think the former option is undesirable, because this means that all the details of the different time integration schemes must be moved to the driver, which does not improve readability (to say the least). Furthermore, it leads to serious problems when more advanced time integration schemes (with time accurate local time stepping) are employed. So therefore, in my opinion, the only practical solution is to move the loop over the zones downwards in the hierarchy. This leads to significant changes in the implementation, but does this lead to a fundamental problem for any of the applications of SU2?. Thanks,. Edwin",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437:70,integrat,integration,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/437,3,['integrat'],['integration']
Integrability,"There's no using the develop branch. Develop software don't make their way in our module systems, we only install releases, with tarbals of the sources and checksums of those tarballs, as we aim for reproducibility. . We have a large number of build tools, including pkgconfig, cmake, meson, ninja, bazel, autoconf, etc. We use EasyBuild to wrap things up and generate modules.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645653439:341,wrap,wrap,341,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645653439,1,['wrap'],['wrap']
Integrability,"These are all fantastic questions. I have exclusively used SLSQP for any optimizations that I have run. So, I can only speak to that optimization algorithm. . > Why do we want the gradient norm to be ~1E-6?. Not sure why this is. I agree with what @economon said. These tuning parameters are to coax out an ideal step size for the optimizer. As you can imagine, the ideal step size is wildly varying depending on the optimization objectives/constraints, scales of the geometry, and types/numbers of design variables that are being used. You have to play this game of scaling the objectives and constraints in different ways to coax out the ideal first step. In my limited testing, the value of 1E-6 for the gradient norm seems to work well for 3D RANS aerodynamic shape optimizations of an aircraft wing when using FFD control points to change the shape of the wing. This is a specific use case that was the subject of a lot of the underlying research that resulted in the shape optimization framework. Which is likely why I have had good results using this rule of thumb. . > Is 1E-6 a good rule? Or is it just a decent starting point, and values very different from 1E-6 are used in practice? Also, if this is ""a good rule,"" then shouldn't we just automatically rescale the problem after the first design iteration?. Scaling in an optimization problem can be pretty frustrating and time consuming. Anecdotally, I have been using @economon 's suggestions of leaving everything else as default (value of 1) and only playing with the objective and constraint scalings to get a good first step size. As mentioned before, this step size is of different values for different problems, which is why it is difficult to come up with universal scalings that would work for most problems. But I am hoping to address some of these scaling issues in #923 . . I haven't really found much good literature on this problem, but I might be looking in the wrong places. Recommendations are welcome. . A big boon is hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616810829:400,depend,depending,400,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616810829,1,['depend'],['depending']
Integrability,These changes are still related to the preprocessing.. I was thinking more about the actual reconstructions in the Upwind_Residual() routine. We have booleans that should be brought in line there too.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/403#issuecomment-319187443:133,rout,routine,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/403#issuecomment-319187443,1,['rout'],['routine']
Integrability,"This PR contains two items:; 1. Improvements to the periodic BC. The periodic BCs are now more stable, especially in parallel.; 2. Memory clean up. The RANS solver is now entirely free of memory leaks. I recommend that everyone should run valgrind (http://valgrind.org) on their branches after integrating, in order to check for memory problems and to fix them. While all tests are passing, it is possible that you may see segfaults or other memory problems on your individual branches, now that the class destructors are all active when the code exits. Please let me know asap if you have any problems.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/294:294,integrat,integrating,294,https://su2code.github.io,https://github.com/su2code/SU2/pull/294,1,['integrat'],['integrating']
Integrability,"This PR improves the capabilities of the Py wrapper by exposing new members of the driver:. - Extracting information (tag, type, number of vertices, ...) on the different markers involved in the computation.; - Adding more Set/Get functions for vertices values.; - Adding the possibility to customize the computation with non-uniform and unsteady boundary conditions, currently implemented for solid boundary motion (FSI applications) and solid thermal quantities (temperatures or heat fluxes, CHT applications). This could be extended to other type of BC's (e.g. user-defined inlet velocity profile).; - Adding proper reg tests for the Python wrapper (see also PR#19 from TestCases repo that has to merged before.). EDIT: Reg tests still to be committed once PR in TestCases is merged.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/488,2,['wrap'],['wrapper']
Integrability,"This PR integrates new MKL features into SU2 to accelerate performance on Intel architectures. Changes 1) and 2) below are protected by a ""HAVE_MKL"" preprocessor flag. To observe performance improvement from change 2), the ""DIRECT_CALL_MKL_SEQ"" compiler flag must be enabled. These changes require MKL 2019 or newer, as the JIT GEMM feature is a brand new feature. 1) Integrate MKL JIT GEMM to accelerate MatrixMatrix and MatrixVector Products. ; 2) Use LAPACK DGETRF + DGETRS in place of Gaussian Elimination ILU when MKL is present. ; 3) Use memcpy in Gaussian Elimination ILU. Source/dest overlap is not a concern and this is faster. The changes improve Broadwell performance by up to 18% and Skylake performance by up to 28%. These improvements were measured on the Inviscid_ONERA_M6 tutorial. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/543:8,integrat,integrates,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/543,2,"['Integrat', 'integrat']","['Integrate', 'integrates']"
Integrability,This PR integrates the source for CGNS v3.3.0 into the SU2 distribution (in externals/cgns/*) and into the autotools build so that it is automatically compiled and linked for you (on by default).,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/300:8,integrat,integrates,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/300,1,['integrat'],['integrates']
Integrability,"This PR introduces a quick fix for the output routine. It allows to print grid velocities also if the new mesh solver is used. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1412:46,rout,routine,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/1412,1,['rout'],['routine']
Integrability,This PR introduces the last updates for the Python wrapper :. - Ability to run a SU2 computation that can interact with an external Python environment in order to exchange data (in both directions). - The code has been cleaned and comments were added. - The structure for an arbitrary MPI communicator (other than COMM_WORLD) to be passed to the Python wrapper is set but cannot be used at this time. COMM_WORLD is still used by default. - The Python wrapper is now compatible with Mac OS. PR #356 has to be closed first. Then I will push a last commit after merging with the fixed develop.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/357:51,wrap,wrapper,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/357,3,['wrap'],['wrapper']
Integrability,"This PR is a major upgrade to the existing density-based incompressible solver (Euler, N-S, and RANS). The solver is now outfitted with a custom preconditioning that can handle a range of incompressible problems, including isothermal, decoupled energy, Boussinesq, and variable density flows (low Mach N-S). The solver uses a conservative formulation and is primitive variable-based. Features:; * Energy equation has been integrated into the incompressible solver. Can be disabled, run in decoupled mode, or coupled for variable density.; * Customized upwind and centered convective schemes in space and time integration schemes that account for preconditioning.; * 2 new fluid models: constant density fluid, incompressible ideal gas (variable density as a function of temperature). Temperature dependent transport coefficients.; * New non-dim. and initialization that mirrors the compressible solver.; * New set of configuration file options specific for incompressible problems (see config_template.cfg).; * Boussinesq approximation for problems with small temperature differences (e.g., natural convection).; * Axisymmetric mode updated, including viscous terms. Some notes:; * Discrete adjoint is available for new solver, but continuous incompressible adjoint has been removed for now. ; * Method of handling non-constant thermal conductivity in transport model (constant Prandtl w/ RANS) could be reused with compressible code.; * Heat flux reference value for non-dim. is missing from compressible code.; * I will do some clean up after this PR to remove some old “incompressible” flags and code that are no longer needed (output and source terms, especially).; * I have many V&V cases for this solver that I will be adding as additional regressions and tutorials.; * Some effort now needed to sync the CHT work. @oleburghardt @talbring , let's chat about this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/514:422,integrat,integrated,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/514,3,"['depend', 'integrat']","['dependent', 'integrated', 'integration']"
Integrability,This PR makes sure that the implicit decision in the axi-symmetric source term is based on the time integration of the flow and not of the turbulence.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/456:100,integrat,integration,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/456,1,['integrat'],['integration']
Integrability,"This Pull Request is the long-awaited overhaul of the front-end partitioning routines for the finite volume solver. It is both a complete refactoring and a streamlining of the routines to remove several bottlenecks (memory and superfluous MPI calls) that were limiting the performance at high rank counts. The rewrite now makes it possible to fix the root issues for the periodic BCs, down to the mesh input level, which is next on the list. . For now, the old geometry routines are used for processing meshes with periodic BCs. Once the periodic BCs are all updated, we will remove the old CPhysicalGeometry constructor and associated routines in order to clean up. **Note that this PR affects everyone using the finite volume solver.** The regressions are going to fail :). As there are some changes to the order in which element types are read, stored, and partitioned, some cases can show small changes in the residual output, even in serial (especially with multigrid). I have tested everything successfully up to roughly 4000 cores locally, achieving the same final solutions, but it is important that everyone please check your own cases. If we agree that everything is ok, we will have to modify the stored residual values for many regression cases.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513:77,rout,routines,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/513,4,['rout'],['routines']
Integrability,"This branch adds a native CHT functionality to SU2. Main contents are:. 1. A new driver (CMultiPhysicalZonesDriver) to specify the physics (e.g. which zones are fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correct",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:349,interface,interfaces,349,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,3,['interface'],"['interface', 'interfaces']"
Integrability,"This bug pops up because the periodic mesh reconstruction (in `SU2_MSH`) doesn't always create a valid mesh in 3D. Some points disappear, and some points are duplicated. When `SU2_CFD` (specifically, `CPhysicalGeometry`) tries to get the number of points in the domain, it calculates the wrong number because some of those points are duplicated. That leads to segfaults, because the output routine thinks the extra (missing) points belong to another processor. I've got a little toy problem with a simple periodic cube. It's easy to see on the simple 4x4x4 (+ periodic) problem that 3 nodes disappear, and 3 nodes are duplicated. I've never observed this problem in any of the 2D test cases I ran. As to why `SU2_MSH` is missing some points and duplicating others, I'm not sure. I tried running Valgrind to check for uninitialized variables or illegal memory access, but nothing there. I'll have to look more into the problem. The `su2_periodic.f90` script mentioned in #416 seems to be a workaround. I don't run into any problems when I use that script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431#issuecomment-337056131:390,rout,routine,390,https://su2code.github.io,https://github.com/su2code/SU2/issues/431#issuecomment-337056131,2,['rout'],['routine']
Integrability,"This had to be more intricate than first impressions suggested...; The displacements applied by CElasticityMovement to FSI interfaces come from the vertices, but halo vertices do not have the correct (i.e. communicated) coordinates which means for those the force vector contributions were not being computed correctly.; The known blocks (prescribed displacement) of the displacement vector are now set and communicated before ""de-singularizing"" the matrix, that process then grabs displacements from the displacement vector instead of from the vertices.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/658#issuecomment-467051581:123,interface,interfaces,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/658#issuecomment-467051581,1,['interface'],['interfaces']
Integrability,"This has the green light to be merged for me. Taking off the WIP tag. @MicK7 : I have added an error message if a user tries to use a multizone CGNS file for now. It is still possible to run multizone problems by using a separate CGNS single zone file for each zone. Reading multizone CGNS would be a new capability anyway, so I think we should take it out of the critical path and see if we can get it working separately together in the next couple of weeks. That way, we can proceed with merging this and other PRs in the backlog.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-526775115:101,message,message,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-526775115,1,['message'],['message']
Integrability,"This is a SU2 user using Windows 10 system. When simulating the Tutorial Case, as long as SU2_CFD is used, it can be successfully simulated, but the parallel_computation.py required by my project cannot be used. Also, all simulations with "".py"" files suffer from the same problem, i.e. ""options.filename == None"". I wonder if this situation is a problem with the Python Wrapper? The tutorial does not mention its compilation method in Windows system. I would like to report how to use the parallel_computation.py in Windows system?. My SU2 version is v7.3.0. I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567:370,Wrap,Wrapper,370,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567,1,['Wrap'],['Wrapper']
Integrability,This is a big change that will affect all the config files... could you please add a meaningful error message if somebody uses the old options? Thanks!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/451#issuecomment-336345293:102,message,message,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/451#issuecomment-336345293,1,['message'],['message']
Integrability,"This is a first complete implementation of the new CDriver and CIteration classes. More info to come soon via email assuming the tests pass. . Still to do:; - Consider moving geometry preprocessing into CDriver constructor from SU2_CFD.cpp; - Remove MeanFlowIteration() function in iteration_structure.cpp, which is still being used by CDiscAdjMeanFlowIteration->Iterate(); - Find new home for remainder of iteration_structure.cpp functions, such as grid movement (likely CMeanFlowIteration for that one, for example); - Decompose Iterate() routines for different physics to take advantage of the other CIteration() methods; - Move ""zone"" loops up out of the Iterate() methods, as CMultiZoneDriver should manage this now; - In the previous bullet, take care to correctly move the time spectral routines in iteration_structure.cpp that update all zones",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/196:541,rout,routines,541,https://su2code.github.io,https://github.com/su2code/SU2/pull/196,2,['rout'],['routines']
Integrability,"This is a very important topic, @jayantmukho. The optimization functionality is very difficult for folks to get working on their own. There are too many options, and it is not user friendly. We need to improve, and I am open to streamlining the interface if you have some ideas. In general, the bevy of options that you nicely describe above have been added over the years in order to coax the scipy SLSQP optimizer into converging, especially with constraints. It has mostly been a trial-and-error process during that time. Most of the tricks involve getting the scaling set such that the SLSQP optimizer does not take any massively errant steps during its line search that cause divergence. I think it would be great to see a standard normalization of the problem (say, make everything on the order of 1 going in/out of the optimizer) and interfaces to new optimizers (this exists already in part in feature_pyopt). In practice, I use **ONLY** the Scale value in OPT_OBJECTIVE and OPT_CONSTRAINT (set to a value that results in a first optimizer step roughly 10% the characteristic length of my geometry), and ignore the options OPT_GRADIENT_FACTOR, OPT_RELAX_FACTOR, and OPT_LINE_SEARCH_BOUND. I sometimes use the OPT_BOUND_UPPER and OPT_BOUND_LOWER options. But even this approach still requires some manual tuning.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-520726069:245,interface,interface,245,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-520726069,2,['interface'],"['interface', 'interfaces']"
Integrability,"This is already possible with the python wrapper, see testcases/py_wrapper/flatPlate_unsteady_CHT_FlatPlate.py; I am against adding any more ""profile files"" to SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032:41,wrap,wrapper,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553#issuecomment-1057930032,1,['wrap'],['wrapper']
Integrability,"This is possible using the Python wrapper. There are no tutorials for this yet, but you can check out PR #488, PR #503. PR #516. There's currently a regression test using unsteady heat-transfer boundary conditions at: https://github.com/su2code/SU2/tree/master/TestCases/py_wrapper/flatPlate_unsteady_CHT . You can use that as an example. Velocity BCs will be very similar.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812:34,wrap,wrapper,34,https://su2code.github.io,https://github.com/su2code/SU2/issues/1079#issuecomment-701405812,1,['wrap'],['wrapper']
Integrability,"This is the sort of scalability (in terms of time to solution, not per iteration) we get now:; ![image](https://user-images.githubusercontent.com/38071223/83768964-2fb60b00-a677-11ea-91fb-794cc2af4652.png); Which you can directly compare with #861. Edit: The results at 192c are actually better, it depends on the position of the cluster nodes in the network, the update is apples to apples.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009#issuecomment-636478203:299,depend,depends,299,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009#issuecomment-636478203,1,['depend'],['depends']
Integrability,"This is very interesting, since I often find that I am commenting out most of the python regression script when debugging only a couple of tests locally. Can you estimate how much work this would be? Is it just a simple wrapping of what we already have? We would also have to make sure that Travis CI can handle it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462#issuecomment-342593274:220,wrap,wrapping,220,https://su2code.github.io,https://github.com/su2code/SU2/issues/462#issuecomment-342593274,2,['wrap'],['wrapping']
Integrability,"This issue is relevant to many environments.; For a long time I made a bypass using the environment variable SU2_RUN.; Setting in before a parallel run in a bash command:; export SU2_RUN=”-machinefile=[machinefile] -env I_MPI_DEVICE rdma [SU2 location]/SU2/bin“; Then ; parallel_computation.py -n [N] ; It only requires a small modification in ; [Home-source]/SU2/SU2_PY/SU2/run/interface.py ; Replace ; base_Command = os.path.join(SU2_RUN,'%s'); with; base_Command = SU2_RUN+""%s""; Then it works smoothly. ; Would you like to consider this as an alternative ?; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/335#issuecomment-263671223:379,interface,interface,379,https://su2code.github.io,https://github.com/su2code/SU2/pull/335#issuecomment-263671223,1,['interface'],['interface']
Integrability,"This patch fix multile errors while python byte-compilling:. - TabError: inconsistent use of tabs and spaces in indentation;; - SyntaxError: invalid syntax (for 'raise' and 'print' functions). ## Proposed Changes; In some Linux distributive, e.g. Gentoo, before installation phase the python byte compile action is required for python scripts being installed. Such scripts are under `SU2/SU2_PY` directory. During **python3** byte compilation of mentioned scripts multiple TabError and SyntaxError take place.; To reproduce this errors go to the `SU2/SU2_PY` source directory and run `python -m compileall .` command. The following error messages appears:; ```; Listing '.'...; Listing './FSI'...; Compiling './FSI/FSIInterface.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSIInterface.py, line 50); Compiling './FSI/PitchPlungeAirfoilStructuralTester.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (PitchPlungeAirfoilStructuralTester.py, line 177); Listing './FSI/io'...; Compiling './FSI/io/FSI_config.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (FSI_config.py, line 61); Listing './FSI/util'...; Listing './SU2'...; Listing './SU2/eval'...; Listing './SU2/io'...; Listing './SU2/mesh'...; Listing './SU2/opt'...; Listing './SU2/run'...; Listing './SU2/util'...; Compiling './SU2/util/filter_adjoint.py'...; *** File ""./SU2/util/filter_adjoint.py"", line 182; raise Exception, 'unknown filter type'; ^; SyntaxError: invalid syntax. Compiling './compute_uncertainty.py'...; *** File ""./compute_uncertainty.py"", line 69; print ""\n\n =================== Performing "" + str(comp) + "" Component Perturbation =================== \n\n""; ^; SyntaxError: invalid syntax. Compiling './fsi_computation.py'...; *** Sorry: TabError: inconsistent use of tabs and spaces in indentation (fsi_computation.py, line 77); Listing './pySU2'...; ```; After fixing them and running `python -m compileall .` again the n",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/983:638,message,messages,638,https://su2code.github.io,https://github.com/su2code/SU2/pull/983,1,['message'],['messages']
Integrability,"This pull request contains a bunch of clean up within the parallel mesh readers and partitioning routines. It should reduce memory usage quite a bit during preprocessing, and several important leaks have been fixed.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/263:97,rout,routines,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/263,1,['rout'],['routines']
Integrability,"This pull request contains a first step towards sliding mesh implementation. Fluid-Fluid simulations are now possible using the NEAREST_NEIGHBOUR approach between an arbitrary number of zones. The driver structure has changed: a CFluidDriver and a CGeneralDriver were created in place of the singlezone and multizone drivers.; FluidDriver is capable of managing an arbitrary number of fluid zones exploiting the Cinterpolator and the CTransfer classes.; CGeneralDriver is left to run single-zone FEM, heat, poisson or wave problems. For the time being they are still limited to single zone problems only (as in the current develop branch).; If you any idea or suggestion about what the new drivers' names should be or about some reference multizone problem we may use in the future to extend the General driver we could start a discussion. The CTransfer and CInterpolator classes were modified to deal with an arbitrary number of fluid zone, (they were limited to 2 zones only). . A new BC MARKER_FLUID_INTERFACE was introduced.; This interface must be specified like, for instance, the MARKER_CLAMPED or MARKER_NORMAL_LOAD in FSI problems.; Regarding this BC, now it still requires the MARKER_FSI_INTERFACE to be specified in order to create the interfaces.; For this pull request I left the old name but I think it should change, maybe into something more general like MARKER_ZONE_INTERFACE. Any suggestion?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/322:1035,interface,interface,1035,https://su2code.github.io,https://github.com/su2code/SU2/pull/322,2,['interface'],"['interface', 'interfaces']"
Integrability,"This pull request extends the fluid interface to viscous and turbulent calculations (SA and SST). * One note:; nVar is still passed in driver_structure.cpp:2509 but is not used. I left it, for the moment, to reduce potential conflicts but it can be removed in a future PR.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382:36,interface,interface,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/382,1,['interface'],['interface']
Integrability,This pull request introduces major structural changes to the discrete adjoint solver. I moved some of the routines to the driver level so that multi-zone problems work with the discrete adjoint. The basic implementation works for Fluid-Fluid zones. Other drivers follow soon (e.g. turbomachinery). Along with that there also some other minor changes:. - The low memory tecplot output (which was not working properly anyway) is now removed.; - The issue with the unsteady cont. adjoint referenced in #377 is solved.; - Restart for the discrete adjoint works properly (as long as the same number of procs is used); - I added options for frozen eddy viscosity and frozen limiter. This can be enabled with the options FROZEN_VISC_DISC/FROZEN_LIMITER_DISC. The default is NO for both.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/407:106,rout,routines,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/407,1,['rout'],['routines']
Integrability,"This pull request introduces new test cases for the Python wrapper. The first set of tests includes:; - Classical CFD test cases: euler naca0012, rans naca0012, unsteady square cylinder, aeroelastic; - A native FSI test case involving the FSIDriver of SU2: wall channel 2D. These tests are launched using the script pyWrap_SU2_CFD.py being the Py wrapped version of the executable SU2_CFD. . The second set of tests includes:; - A new FSI test case involving the coupling between SU2 and an external structural solver (see TestCases/coupled_fsi/2d_aeroelasticity). . The structural solver is the PitchPlungeAirfoilStructuralTester (see SU2_PY/FSI directory). It was directly written in Python and designed only for this particular test where we measure the aeroelastic response of a pitch-plunge NACA 0012 airfoil under the flutter point. The structural solver tester also illustrates the architecture that is expected for the solid side of the coupling (how the solver is driven, how does the communication layer look like). This test is launched using the script fsi_computation.py (**note** : a parallel run requires mpi4py to be installed on the system). . The serial_ and parallel_regression.py files were simply modified in order to add those sets of test cases. The first set uses a direct comparaison based on residuals, lift, drag,... whereas the second set uses a comparaison based on output files coming from the structural solver. In order to build the Py wrapper and run the tests on travis, the preconfigure.py script was adapted so that the option --enable-PY_WRAPPER can be used. Because Swig and mpi4py are required for the build and for the parallel run respectively, they were also introduced in the travis configuration file where mpi4py can be simply installed using the python-pip package.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/298:59,wrap,wrapper,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/298,3,['wrap'],"['wrapped', 'wrapper']"
Integrability,"This pull request introduces the Python wrapping of the SU2 code. The wrapper is based on the CDriver class meaning that every function in that class can be independently called in Python. To compile it:; The code compiles as usual (serial or parallel) using the configure script. The option --enable-PY_WRAPPER has to be added when the compilation of the wrapper is needed. For this compilation, make sure that SWIG (http://www.swig.org) and Python are installed on the system. The generated python module is named SU2Solver.py and lies in the same installation folder than the other executables (SU2_CFD, ...) (--prefix option). To use it: ; Any Python script should be able to import the module SU2Solver.py. This module is then used to drive the main functions of the SU2 code (code pre-processing, run, monitor, output, dynamic mesh deformation, code post-processing, ...). A particular example is given through the new external coupling capability of SU2 for FSI computations: see new files SU2_PY/fsi_computation.py and SU2_PY/FSI/FSIInterface.py. Current limitations: ; The FSI computation can be launched in parallel, but it is currently assumed that only the fluid part (SU2) is parallelized. Also, only matching meshes at the f/s interface are allowed. 2D is fully operational, 3D is still under testing. Coming soon:; 3D framework, Python wrapper regression test case, new MPI communicators, non-matching meshes capability.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/295:40,wrap,wrapping,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/295,5,"['interface', 'wrap']","['interface', 'wrapper', 'wrapping']"
Integrability,"This pull request is the first phase of an overhaul of the COutput class. As a first step, the serial bottleneck for merging and writing output data in SU2_CFD has been removed in favor of entirely parallel routines for sorting and writing output data. The routines work by sorting the output data into linear partitions on all ranks such that each processor owns an equal chunk of the output. This PR introduces these new routines along with parallel restart (ASCII) and Tecplot (ASCII) file writers. For now, there is no major change to the behavior of the code, other than potential savings in memory and time for file output with SU2_CFD, as this phase was simply a refactoring and rewrite that maintains identical output to the serial version. . Important notes:; * While restarts are now written in parallel, they should contain the exact same information as before. Please make sure your solvers are behaving as expected.; * This refactoring finally allows for users to easily register new variables (including custom variables names) for the output files by separating the loading of local data for the different solvers from the MPI communications and the eventual writing of files. Please see the LoadLocalData_* routines in output_structure.cpp that are now defined for different solvers, which will eventually become virtual functions within child classes of COutput for different physics. ; * SU2_SOL remains intact for now and works the same as before. Parallel file writers for other formats (ParaView, CGNS) are forthcoming, and will eventually replace the remaining serial versions.; * The next step after this PR is to switch the restarts to binary with MPI-IO and to update the restart loaders in all solvers.; * This PR also fixes some memory leaks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/328:207,rout,routines,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/328,4,['rout'],['routines']
Integrability,"This pull request moves all restart file loading from CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:102,rout,routines,102,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,3,['rout'],"['routine', 'routines']"
Integrability,"This pull request replaces AdjointMPI with our own open-source library called Medipack (https://github.com/SciCompKL/MeDiPack). It covers most of the MPI standard (especially non-blocking communication, custom data types and operators), which makes it more flexible for future extensions of the MPI communication in SU2. Furthermore this updates Codi to the newest version and provides support for different taping strategies. Eventually we want to get rid of the #ifdef's for MPI, so I also started with replacing almost all MPI calls with calls to the SU2_MPI wrapper class. . I also removed the complex step datatype since I cannot make sure that it still works (and it makes no sense to maintain a forward mode and complex step ...)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473:562,wrap,wrapper,562,https://su2code.github.io,https://github.com/su2code/SU2/pull/473,1,['wrap'],['wrapper']
Integrability,This should help with keeping the GitHub actions updated on new releases. This will also help with keeping it secure. Dependabot helps in keeping the supply chain secure https://docs.github.com/en/code-security/dependabot. GitHub actions up to date https://docs.github.com/en/code-security/dependabot/working-with-dependabot/keeping-your-actions-up-to-date-with-dependabot. https://github.com/ossf/scorecard/blob/main/docs/checks.md#dependency-update-tool; Signed-off-by: naveen <172697+naveensrinivasan@users.noreply.github.com>,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1682:118,Depend,Dependabot,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/1682,6,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency-update-tool']"
Integrability,"This suggestion is a continuation for the previous report on the topic “[Remove unnecessary null pointer checks](https://github.com/su2code/SU2/issues/26 ""Deletion of redundant pointer checks?"")”.; Would you like to wrap any pointer data members with the template class “[std::unique_ptr](https://en.wikipedia.org/wiki/Smart_pointer#unique_ptr ""Description for std::unique_ptr"")”?. Update candidates:; - [CPoint](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/dual_grid_structure.cpp#L323); - [CSysMatrix](https://github.com/su2code/SU2/blob/6d6727d350a918e78592c7e33316edcad06ffb66/Common/src/matrix_structure.cpp#L70)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400:216,wrap,wrap,216,https://su2code.github.io,https://github.com/su2code/SU2/issues/400,1,['wrap'],['wrap']
Integrability,"This will provide a lot of power and flexibility. For example, if doing local development, only the tests that failed last could be run with `pytest --lf`. To make the tests compatible, they can be wrapped into functions with a `test_` prefix, then called from the command line with, e.g.,. pytest TestCases/serial_regression_AD.py. To select and run only one test:. pytest TestCases/serial_regression_AD.py::test_discadj_multi_py",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/462:198,wrap,wrapped,198,https://su2code.github.io,https://github.com/su2code/SU2/issues/462,1,['wrap'],['wrapped']
Integrability,"Tim,. I can share some initial impressions. I’m trying to build the Mesa 3D graphics library, which recently switched to Meson and Ninja. They are pretty impressive. It looks like Meson uses both pkg-config and (more recently) CMake under the hood. For specific packages that don’t play nicely with pkg-config, it will look for other similar utilities, such as llvm-config for the LLVM library. I have a beef mostly with documentation, but that’s hardly unusual in the open source world, and maybe not so relevant to SU2, which doesn’t have the multitude of external dependencies that many open source projects do. I think the struggles I have had relate mostly to the non-transparent way that Meson interacts with the underlying utilities (pkg-config, CMake, llvm-config,…). For example, I had to fumble around to get Meson to find llvm-config in a non-standard location (adding that location to $PATH turned out to be the answer), as well as to get pkg-config to find its required pkgconfig directories in non-standard locations (adding them to $PKG_CONFIG_PATH was the answer there). I also had to build/install Python 3 (required by Meson), and found that the Python 3.7 has problems with OpenSSL (module _ssl), on which Meson depends, so I went back to Python 3.6. I imagine any pre-built Python 3.7 would be fine, though a related bug appears to still be open (https://bugs.python.org/issue34028). On Windows, Meson will output Visual Studio projects, which would make any Windows developer happy, but your source still has to be cross-platform friendly—not a problem for TecIO, but I don’t know if that’s true elsewhere in SU2. FWIW,. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Wednesday, May 22, 2019 7:31 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). To see a major advantage, just compare the meson.build and the configure.ac file ... —; You are receiving this becaus",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494848848:567,depend,dependencies,567,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494848848,1,['depend'],['dependencies']
Integrability,Time to merge this one. Please just let me know if you run into any issues with the new partitioning routines.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/513#issuecomment-387257646:101,rout,routines,101,https://su2code.github.io,https://github.com/su2code/SU2/pull/513#issuecomment-387257646,1,['rout'],['routines']
Integrability,"To answer the first question, yes, the distance calculations are done based the entire surface of a boundary element. This is done using routines written by @vdweide for the higher order solver. In short, the distance to the wall of a node in the mesh is found by finding the projection of the said node on a boundary element, and the distance is calculated using that information. . I validated this on a host of grids, some of which had sheared elements near the wall, and this procedure seemed to give the right predictions regardless of the quality of the mesh. . Yes, from what I understand, by the end of the ComputeWall_Distance function all the memory, weather it is the vectors or the ADT itself, should be deallocated. I based this code on what Edwin was doing so he might be able to substantiate on why he deallocates the vectors immediately.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/605#issuecomment-435105466:137,rout,routines,137,https://su2code.github.io,https://github.com/su2code/SU2/pull/605#issuecomment-435105466,1,['rout'],['routines']
Integrability,"To be safe for v5, we will disable the new parallel IO restart routines until we have time to test on more and larger machines (a few folks have reported issues). All of the necessary code remains in the develop branch, however, and we will be working on this heavily right after the release.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/364:63,rout,routines,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/364,1,['rout'],['routines']
Integrability,"To everyone searching for the code in latest develop (there also @bigfooted's paper is given maybe, also it might be another from Eduardo Molina?) I posted it below.; It seems you are using an older version of the code so please compare it with the latest which is posted below. (I am too lazy to check myself, and I am also not knowledgeable in this stuff). (@ShiheJia when posting code please dont include every line number, keep the formatting and post the code wrapped in `'''c++ <code> '''` with `'` being the forward pointing tick); ```c++; case SA_EDDES: {; /*--- An Enhanced Version of DES with Rapid Transition from RANS to LES in Separated Flows.; Shur et al.; Flow Turbulence Combust - 2015; ---*/. su2double vortexTiltingMeasure = nodes->GetVortex_Tilting(iPoint);. const su2double omega = GeometryToolbox::Norm(3, vorticity);. su2double ratioOmega[MAXNDIM] = {};. for (auto iDim = 0; iDim < 3; iDim++){; ratioOmega[iDim] = vorticity[iDim]/omega;; }. const su2double deltaDDES = geometry->nodes->GetMaxLength(iPoint);. su2double ln_max = 0.0;; for (const auto jPoint : geometry->nodes->GetPoints(iPoint)) {; const auto coord_j = geometry->nodes->GetCoord(jPoint);; su2double delta[MAXNDIM] = {};; for (auto iDim = 0u; iDim < nDim; iDim++){; delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]);; }; su2double ln[3];; ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; const su2double aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; ln_max = max(ln_max, aux_ln);; vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; }; vortexTiltingMeasure /= (nNeigh + 1);. const su2double f_kh = max(f_min,; min(f_max,; f_min + ((f_max - f_min)/(a2 - a1)) * (vortexTiltingMeasure - a1)));. const su2double r_d = (kinematicViscosityTurb+kinematicViscosity)/(uijuij*k2*pow(wallDistance, 2.0));; const su2double f_d = 1.0-tanh(pow(8.0*r_d,3.0));. su2double maxDelta = (ln_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462#issuecomment-985689737:465,wrap,wrapped,465,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462#issuecomment-985689737,1,['wrap'],['wrapped']
Integrability,"Tom, I see your point with the exit message. The current style is the following;. ```; ------------------------ Iteration Preprocessing ------------------------; Zone 1: Euler/Navier-Stokes/RANS fluid iteration. ------------------------- Solver Preprocessing --------------------------. Error in ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; -------------------------------------------------------------------------; Unable to open restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-354017856:36,message,message,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-354017856,1,['message'],['message']
Integrability,"Tried to run the time-spectral test case (v3.2.9) using the NACA64A010 aerofoil and got a segmentation fault. The fault occurs in the ""MeanFlowIteration"" routine due to the change in the ""nZone"" variable value when using the time-spectral method. I tried a quick fix by updating ""nZone"" in main.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/171:154,rout,routine,154,https://su2code.github.io,https://github.com/su2code/SU2/issues/171,1,['rout'],['routine']
Integrability,"True that, I built it without the python wrapper locally. This build command worked for me. ; ```; ./meson.py omptestenv --buildtype=debug --warnlevel=2 -Denable-autodiff=true -Denable-directdiff=true -Dwith-omp=true; ```. The ""T"" in OMPT stands for ""tools"", see Chapter 4 of the [OpenMP 5.1 specification](https://www.openmp.org/spec-html/5.1/openmp.html). We also explain it with a focus on AD in our [preprint](https://arxiv.org/abs/2102.11572).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214#issuecomment-788237663:41,wrap,wrapper,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214#issuecomment-788237663,1,['wrap'],['wrapper']
Integrability,"Try v7.0.2. On Mon, 9 Mar 2020, 02:05 timjim333, <notifications@github.com> wrote:. > Hi,; >; > I've got an issue where on starting an SU2 6.2.0 Falcon case, the; > preprocessing steps run but then the output gets stuck at:; >; > ---------------------- Python Interface Preprocessing; > --------------------- Setting customized boundary conditions for zone 0; >; > - and remains frozen there until I kill the job.; >; > It seems to have happened for only 3 out of nearly 400 successful cases.; > They are all similar, running Euler at Mach 1.7, on 40 cores. They all have; > similar simple body, farfield, and and symmetry conditions.; >; > I'm not sure of the best way to diagnose this, so any guidance would be; > appreciated.; >; > Many thanks and kind regards,; > Tim; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/907?email_source=notifications&email_token=AJCOXN63UWSSF6UABZZXXFLRGQ6EJA5CNFSM4LD6ZHGKYY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4ITNPDMQ>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN6R6JOEQCAYH7FKCLTRGQ6EJANCNFSM4LD6ZHGA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/907#issuecomment-596654031:260,Interface,Interface,260,https://su2code.github.io,https://github.com/su2code/SU2/issues/907#issuecomment-596654031,1,['Interface'],['Interface']
Integrability,Try wrapping the path in single quotes `MESH_FILENAME= 'D:\executable22\401_cfd_2d\proj5\mesh.su2'`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1658#issuecomment-1152762841:4,wrap,wrapping,4,https://su2code.github.io,https://github.com/su2code/SU2/issues/1658#issuecomment-1152762841,1,['wrap'],['wrapping']
Integrability,Turbulent fluid interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/382:16,interface,interface,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/382,1,['interface'],['interface']
Integrability,"U2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I cannot find what the error '139' refers to. I will be very appreciated if I could get some feedb",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4905,interface,interface,4905,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['interface'],['interface']
Integrability,"UCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.R",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3978,interface,interface,3978,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['interface'],['interface']
Integrability,"Unable to compile Python wrapper (invalid static_cast in parallel, undefined symbols in serial)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/551:25,wrap,wrapper,25,https://su2code.github.io,https://github.com/su2code/SU2/issues/551,1,['wrap'],['wrapper']
Integrability,Unfortunately it looks like the serial regression test with Python wrapper is timing out for both versions. Any ideas to speed this up or perhaps request another minute or two?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-347509883:67,wrap,wrapper,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-347509883,1,['wrap'],['wrapper']
Integrability,"Unfortunately, my example involves a swirler and nozzle for the; Navier-Stokes solver with Menter model, so the dataset is relatively large.; Let me check whether some older small Euler mesh exhibits the same message!; I will let you know! Thank you very much. On Mon, Oct 23, 2023 at 6:34 PM Pedro Gomes ***@***.***>; wrote:. > Is there a simple example to reproduce the issue?; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1776143584:209,message,message,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1776143584,3,"['Message', 'message']","['Message', 'message']"
Integrability,Unify Flow and FEA unsteady options + fix unsteady FEA adjoints + add FEA python wrapper examples,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2008:81,wrap,wrapper,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/2008,1,['wrap'],['wrapper']
Integrability,Until now we have always patched the interface.py by hand to make it run on Windows Server 2012 R2.; By issueing a PR we hope this won't be necessary in the future anymore.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/331:37,interface,interface,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/331,1,['interface'],['interface']
Integrability,Update LUT routine,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1792:11,rout,routine,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1792,1,['rout'],['routine']
Integrability,Update of the python fsi interface and new feature coupling SU2 with Nastran,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:25,interface,interface,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,1,['interface'],['interface']
Integrability,"Updated all the regression test values. Ran all of them to convergence and the difference in the integrated quantities (lift, drag, sens_press, entropy generation etc) were < 1%. . While running the regression tests, I saw that some of them weren't up to date with the best practices from the recent PRs. I know they are for Regressions and not necessarily as example configs, but I think it'd be good to have the configs reflect best practices so that people can look to them for reference. . If people are on board with that, I can update some of the rans configs to include things like ILU, adaptive CFL, the new convergence monitoring systems etc. I will make sure that the tests still cover all the relevant config options. I will also make sure that if you were to run the test individually, it would run to convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-600991354:97,integrat,integrated,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-600991354,1,['integrat'],['integrated']
Integrability,Updates to the Elastic mesh solver and AD-wrapped code,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:42,wrap,wrapped,42,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['wrap'],['wrapped']
Integrability,Updating some of the NEMO viscous solver routines.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1347:41,rout,routines,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/1347,1,['rout'],['routines']
Integrability,"Updating the interface creates relative motion and thus you have blade-passing frequencies to resolve, which require more detail to resolve than just rotation.; If you want this as a different option that's fine, but it's not going to be the default.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173#issuecomment-1963000242:13,interface,interface,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173#issuecomment-1963000242,1,['interface'],['interface']
Integrability,"V_VALUE, DV_KIND and DV_PARAM.; if I keep DEFINITION_DV unchanged, but assign to DV_KIND, DV_PARAM and DV_VALUE just one entry I found no comply on parsing the config file, parallel_computation will work as expected, but shape_optimization ""successfully"" finishes showing a GNORN=0 for each of objective function I have tried! The workaround suggested by Pedro Gomes in the CFD on line site, has not worked.; I have a 2D model, which is my ""smaller"" dataset, and can provide the slurm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1047,wrap,wrapper,1047,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['wrap'],['wrapper']
Integrability,Velocity transfer at fluid-structure interface,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:37,interface,interface,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,1,['interface'],['interface']
Integrability,"Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1563,Depend,Dependency,1563,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Depend'],['Dependency']
Integrability,"Via adding SetTime_Step routines, which call the corresponding flow solution's time step calculation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/132:24,rout,routines,24,https://su2code.github.io,https://github.com/su2code/SU2/pull/132,1,['rout'],['routines']
Integrability,"We already require C++11 for some more advanced features, but it is always nice in my opinion to keep backward compatibility when possible. . However, this is not a deal breaker, I don't think, as most developers that want to use and add their own unit tests should have no problem with using C++11. If we can make it an optional dependency, to make sure the basic build still works simply, I think it could be ok.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-503685445:330,depend,dependency,330,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-503685445,2,['depend'],['dependency']
Integrability,"We are compiling those combinations we may well make them available, best I; can due is issue warnings. On Mon, 23 May 2022, 14:43 Nijso, ***@***.***> wrote:. > ***@***.**** commented on this pull request.; > ------------------------------; >; > In Common/include/option_structure.hpp; > <https://github.com/su2code/SU2/pull/1646#discussion_r879473183>:; >; > > + * \param[in] SA_Options - Selected SA option from config.; >; > + * \param[in] nSA_Options - Number of options selected.; >; > + * \param[in] rank - MPI rank.; >; > + * \return Struct with SA options.; >; > + */; >; > +inline SA_ParsedOptions ParseSAOptions(const SA_OPTIONS *SA_Options, unsigned short nSA_Options, int rank) {; >; > + SA_ParsedOptions SAParsedOptions;; >; > +; >; > + auto IsPresent = [&](SA_OPTIONS option) {; >; > + const auto sa_options_end = SA_Options + nSA_Options;; >; > + return std::find(SA_Options, sa_options_end, option) != sa_options_end;; >; > + };; >; > +; >; > + const bool found_neg = IsPresent(SA_OPTIONS::NEG);; >; > + const bool found_edw = IsPresent(SA_OPTIONS::EDW);; >; > + const bool found_bsl = !found_neg && !found_edw;; >; >; > ⬇️ Suggested change; >; > - const bool found_bsl = !found_neg && !found_edw;; >; > + const bool found_bsl = !found_neg && !found_edw;; >; > + const bool found_ft2 = IsPresent(SA_OPTIONS::FT2);; >; > +; >; > + if (found_neg && !found_ft2) {; >; > + SU2_MPI::Error(""Negative and NOFT2 were both selected but are incompatible. Please choose only one."", CURRENT_FUNCTION);; >; > + }; >; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/1646#pullrequestreview-981793059>,; > or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJCOXN33ZH2GAQODQZ7M2BLVLODOVANCNFSM5WSMMMUA>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1646#issuecomment-1134822257:1834,Message,Message,1834,https://su2code.github.io,https://github.com/su2code/SU2/pull/1646#issuecomment-1134822257,1,['Message'],['Message']
Integrability,"We can compute the HBoperator alternatively without using the complex; variables too for now by replacing the routine if fixing this issue is; complex so that we have a working version of HB. Complex numbers and; vectors are used for elegance but I agree with Francisco that getting the; code compiled without any issues is more important. We can keep it; commented for now and I'll push the updated subroutine soon for a working; version of HB and make sure that it is compiled without errors on Mac. Thanks,; Sravya. On Sat, Nov 12, 2016 at 7:24 AM, Tim Albring notifications@github.com; wrote:. > From what I see there is no easy way to resolve this. The problem is that; > the multiplication operator of the complex type in LLVM uses copysign which; > is a function that only excepts double and int... so that means it is not; > possible to instantiate complex with anything else than these types ...; > from my point of view it is not a very smart design decision. We should; > maybe enable the code section depending on the compiler. A possible; > solution would be to implement our own operators, which we would directly; > in codi then.; > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > https://github.com/su2code/SU2/issues/319#issuecomment-260128156, or mute; > the thread; > https://github.com/notifications/unsubscribe-auth/AHenIObXD9Yd0margHrl2xNq7641i7uWks5q9doigaJpZM4KYAX3; > .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260167765:110,rout,routine,110,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260167765,2,"['depend', 'rout']","['depending', 'routine']"
Integrability,"We can keep the wrapper routines as part of the CDriver class, but moving them to a separate file could already improve readability in my opinion.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/488#issuecomment-354105984:16,wrap,wrapper,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/488#issuecomment-354105984,2,"['rout', 'wrap']","['routines', 'wrapper']"
Integrability,We can remove pyCppTap.py. This is a holdover from early automatic differentiation work that is not functional any longer. Can you also please check whether the server.py is still necessary? That may only be needed for design space exploration routines (farming out jobs on a cluster) that are also not used regularly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533595722:244,rout,routines,244,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533595722,1,['rout'],['routines']
Integrability,"We could play around with the Wait() calls to wait for a specific message instead of the first to arrive, but it would take some effort to go back to the previous behavior, where the comms happened one at a time for each pair of ranks that needed to communicate. In v7, the behavior is that each rank posts all of their receives, then posts all of their sends, before the buffers holding the received data are checked and unloaded (once the communication of that particular message has completed).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593174003:66,message,message,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593174003,2,['message'],['message']
Integrability,"We did some modifications to the incompressible solver. In particular:. - Leftovers from the compressible solver are removed in the non-dimensionalization routine, the time-step computation and the Jacobian computation in numerics.; - The surface analysis now works correctly for incompressible cases and the mass flux average finally works (only uses the modulus of the mass flux now). ; - There is now again a BC_Isothermal_Wall() routine. It just features as a wrapper for the BC_HeatFlux_Wall... until we found a better solution (maybe adding MARKER_WALL/MARKER_NO_SLIP or something).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/472:155,rout,routine,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/472,3,"['rout', 'wrap']","['routine', 'wrapper']"
Integrability,"We have not found that to be necessary because the interface is mostly unchanged, but if you are aware of anything please open a pull request to the website repository with updates, we welcome all contributors.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2361#issuecomment-2395582565:51,interface,interface,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/2361#issuecomment-2395582565,1,['interface'],['interface']
Integrability,"We need to improve the behavior of SU2 for `TIME_DISCRE_TURB=EULER_EXPLICIT`. Currently explicit Euler (and also the Runge-Kutta variants) are not implemented for the turbulence solvers, see https://github.com/su2code/SU2/issues/1414#issuecomment-964236535, but also no error message is thrown when a user specifies this.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1432:276,message,message,276,https://su2code.github.io,https://github.com/su2code/SU2/issues/1432,1,['message'],['message']
Integrability,Well I've taken a look at this but it's probably beyong my current programming skills. I only have experience with Python. Perhaps someone else could look at this? I still think it's a very helpful error message for new users and it sounds like it wouldn't be too much work to fix it.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/842#issuecomment-568280604:204,message,message,204,https://su2code.github.io,https://github.com/su2code/SU2/issues/842#issuecomment-568280604,1,['message'],['message']
Integrability,"What about the following?. - Find out the lowest rank that calls the error handler.; - Only this rank writes the error message. The tricky part of course is how to find out this lowest rank. A possible solution would be (although I am open for alternatives here). - The ranks in the error handler send out messages with a very specific tag to all other ranks.; - The ranks in the error handler attempt to receive messages for a certain amount of time or until all messages have been received. Typically MPI_Iprobe would be used for this purpose.; - Keep track of the lowest rank from which an actual message was received. This may not be very efficient, but you don't care here. Furthermore, not all messages will be received if not all ranks call the error handler. Again, you don't care, because the computation is killed afterwards.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/564#issuecomment-415937480:119,message,message,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/564#issuecomment-415937480,6,['message'],"['message', 'messages']"
Integrability,"What about the others ? If you have any doubts, comments or suggestions, please let me know. . I am pretty sure that everybody will at least come across the error message sooner or later, so know is your chance to influence its style :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-350737144:163,message,message,163,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-350737144,1,['message'],['message']
Integrability,"What is your goal in including LAPACK?. You might want to see the issue I raised ( #478 ). I asked what the LAPACK compile option does, and the short answer is that it doesn't do anything for the master and develop branches. The long answer is that several integrations, such as the higher-order finite element branch, use LAPACK but in different ways.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/481#issuecomment-355588717:257,integrat,integrations,257,https://su2code.github.io,https://github.com/su2code/SU2/issues/481#issuecomment-355588717,1,['integrat'],['integrations']
Integrability,"When I enter the ""shape_optimization.py -f unsteady_naca0012_opt.cfg"" in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 116, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 34, in main; shape_optimization( options.filename ,; File ""C:\Users\74351\Desktop\SU2\SU2\bin\test2\shape_optimization.py"", line 51, in shape_optimization; config = SU2.io.Config(filename); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\io\config.py"", line 88, in __init__; super(Config,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_bunch.py"", line 83, in __init__; super(OrderedBunch,self).__init__(*args,**kwarg); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 48, in __init__; self.__update(*args, **kwds); File ""C:\Users\74351\Desktop\SU2\SU2\bin\SU2\util\ordered_dict.py"", line 174, in update; for key, value in other:; TypeError: 'NoneType' object is not iterable; ```; When I enter the ""parallel_computation.py -f turb_naca0012.cfg -n NP in the commend the error is:; ```; Traceback (most recent call last):; File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 110, in <module>; main(); File ""C:\Users\74351\Desktop\SU2\SU2\bin\parallel_computation.py"", line 53, in main; raise Exception(""No config file provided. Use -f flag""); Exception: No config file provided. Use -f flag; ```; Any solvers related to "".py"" cannot be executed, but I can run any cases with SU2_CFD. So I wonder if this situation is a problem with the Python Wrapper? . I will be very appreciated if I could get some feedback on this issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200:1642,Wrap,Wrapper,1642,https://su2code.github.io,https://github.com/su2code/SU2/issues/1567#issuecomment-1074910200,1,['Wrap'],['Wrapper']
Integrability,"When I run a mixing-layer problem with periodic boundary conditions, I get a segfault while saving the file. I checked out the most recent develop branch, and I get the same problem. It may be that I messed up the periodic boundary conditions. I'm still learning how to use them in SU2, and I may have made a mistake. But even if my *.cfg files are set up wrong, I should get a runtime error message, not a segfault. I did a brief check and it looks like `SU2_MSH` is doing its job in generating the correct periodic BCs. Valgrind says that there's a lot of invalid reads in `COutput::SortOutputData`, which terminate in a segfault. I'm attaching the valgrind output, in case you want to look at it. #### Steps to reproduce; 1. Build SU2 with parallel support.; 1. Put the attached grid, `mixing_MSH.cfg` and `mixing_CFD.cfg` files into the same folder.; 2. Run `SU2_MSH mixing_MSH.cfg`.; 3. Run `SU2_MSH mixing_CFD.cfg`. I've also attached my config output, so you can see what my setup is like. Here's the files: ; [PeriodicSegfault.tar.gz](https://github.com/su2code/SU2/files/1257883/PeriodicSegfault.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/431:392,message,message,392,https://su2code.github.io,https://github.com/su2code/SU2/issues/431,1,['message'],['message']
Integrability,"When I used mpich meson was picking up openmpi, even though mpirun mpicc mpicxx were all picking up the mpich versions.; I had to change the dependency specifically for mpich.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633083301:141,depend,dependency,141,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633083301,1,['depend'],['dependency']
Integrability,"When WRT_CSV_SOL = NO, the adjoint gradient method results in 0 valued gradients because the SU2_DOT method depends on the data in the surface_adjoint.csv file.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/165:108,depend,depends,108,https://su2code.github.io,https://github.com/su2code/SU2/issues/165,1,['depend'],['depends']
Integrability,"When compiling SU2, it appears the LAPACK can be used for some linear solver routines. There's a optional compile flag `--with-LAPACK-lib` and a `LAPACK support: no` readout. There's even a comment in the configure.ac file: `LAPACK connection added by Teus van der Stelt, 11/13/2014`. However, I can't find any code at all that uses LAPACK. At least, there aren't any sections that switch on with `HAVE_LAPACK`. Am I missing something? Was this removed at some point? Is there a branch that does have this integration?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/478:77,rout,routines,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/478,2,"['integrat', 'rout']","['integration', 'routines']"
Integrability,"When i am evaluating RANS simulation with fixed cl model in su2-5.0, after it reached the convergence criteria (I have tried EXT_ITER, CAUCHY and RESIDUAL) and executed ""Deleted CIntegration container. Deleted CIntegration container. "", the routine always stopped with this message: *** Error in `/home/wanghao/software/SU2-5.0.0/bin/SU2_CFD': double free or corruption (!prev): 0x00000000045312d0 ***.; But applying fixed AOA won't has this problem. ; My command is :parallel_computation.py -n 8 -f opt_crm.cfg ; Ubuntu 16.04. ![screen](https://cloud.githubusercontent.com/assets/23302629/23536602/0932d9a6-0001-11e7-989d-2515b6942dd1.png). [opt_crm.txt](https://github.com/su2code/SU2/files/815706/opt_crm.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/383:241,rout,routine,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/383,2,"['message', 'rout']","['message', 'routine']"
Integrability,"When monitoring the forces on a large number of markers, the output won’t fit in the buffer(s), and this causes memory issues: the code either hangs, has a buffer overflow, or segfaults depending on the compiler, etc. As a temporary fix, the monitoring_coeff[] buffer has been increased, but this should be remedied asap.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/66:186,depend,depending,186,https://su2code.github.io,https://github.com/su2code/SU2/issues/66,1,['depend'],['depending']
Integrability,"When running discrete_adjoint.py (or shape_optimization.py with a discrete adjoint method) for the test case steady_inverse_design, the value of the adjoint variables at the first iterations is already O(1e-10) and after a while the following message is printed on screen:. CSysSolve::FGMRES(): system solved by initial guess. This problem does not occur when using other objective functions or a continuous adjoint method. P.S. I am using SU2 v 6.0.0.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/515:243,message,message,243,https://su2code.github.io,https://github.com/su2code/SU2/issues/515,1,['message'],['message']
Integrability,"When using `srun` version 15.08.7 `parallel_computation.py` launches `-n` instances of my SU2 call rather than one instance of SU2 with `n` processes. This does not happen with `srun` version 2.6.5. I fixed this issue by commenting out the line in `interface.py` that calls `srun` if a SLURM jobID number is in the environment variables. This causes `parallel_computation.py` to call `mpirun`, which works as expected.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/469:249,interface,interface,249,https://su2code.github.io,https://github.com/su2code/SU2/issues/469,1,['interface'],['interface']
Integrability,"When you create another boundary do you create a new unspecified marker or do you use the connections as a marker? In the former case, the connectivity will be affected, as the nodes at the interface should be linked. However, if you use the connection as an additional marker, it should work.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/986#issuecomment-629171020:190,interface,interface,190,https://su2code.github.io,https://github.com/su2code/SU2/issues/986#issuecomment-629171020,1,['interface'],['interface']
Integrability,"While I believe the velocity transfer is the way to go for adjoints and accuracy especially in incompressible flow, it should be possible to cater to both needs by basing the flow solver flow traction malarkey on Marker deform mesh, instead of marker fluid load.; Which would possibly make the setup easier as well.; If we want the flexibility to have fluid load markers independent of mesh deformation deformation, we may need a ""yet another config knob"".; One aspect to consider is that the displacement coming from python might be a forced motion, and so the consistency argument no longer matters.; Perhaps what we need, is a way to tell for which boundaries the velocity is known or not.; If the velocity is not known, it could be computed by finite differences at the interface and made part of the velocity-elasticity problem.; This would allow the forced motions to work together with FSI.; If the velocity is not known for any boundary, it is orders of magnitude quicker to compute it by finite differences. Sorry for the soliloquy, but I think all y'all get what I'm sayin'",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020:774,interface,interface,774,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174#issuecomment-778391020,1,['interface'],['interface']
Integrability,"While doing some simulations with the version 6.2.0, I found a strange behaviour on the pressure field.; The test case is a naca0012 at AoA=0°, M=0.7, Re=9e6.; When running with SST turbulence model, the pressure field in the ""boundary layer region"" is not constant. Using SA turbulence model, this behaviour is not shown. It looks like the tubulent kinetic energy field affect the computation of pressure field, leading to a non zero gradient pressure at wall, as shown in the attached figures:. In the figures it can be seen a comparison between the in-house solver of the Italian Aerospace Research Center (CIRA), where SST model is implemented, and SU2 using both available turbulence models, SST and SA. The isolines represent the pressure field and the contour is the TKE field obtained with SU2 with SST. In particular, solid red line is CIRA solver, the solid black line is SU2-SST, and dashed black line is SU2-SA. Near the LE where TKE is 0, the isolines are similar and 0 pressure gradient at the wall is obtained with both turbulence models. When TKE starts to grow, the pressure computed with SU2-SST shows a non constant behaviour and at the wall has non 0 gradient. Furthermore, in the wake region the defect is more evident. Leading edge detail:; ![cp_tke_detail_Le](https://user-images.githubusercontent.com/36844965/66407922-53448b00-e9ee-11e9-877d-88ace3a222fb.png). Detail at 30% of the chord length:; ![cp_tke_detail_1](https://user-images.githubusercontent.com/36844965/66407921-53448b00-e9ee-11e9-8a22-87106066984b.png). Wake region detail:; ![cp_tke_detail_wake](https://user-images.githubusercontent.com/36844965/66407920-53448b00-e9ee-11e9-92ad-b770e0ac5743.png). Has anyone found previously this behaviour? Could it depend on the set up that I have used? . I attach the grid and configurations files.; [grid_and_conf_files.zip](https://github.com/su2code/SU2/files/3703135/grid_and_conf_files.zip). Thanks in advance.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797:1743,depend,depend,1743,https://su2code.github.io,https://github.com/su2code/SU2/issues/797,1,['depend'],['depend']
Integrability,"While playing around with the singularity containers a little bit, what do you think about this solution?. Execute the python script inside the container with the python on the host; ~~~~; singularity exec su2_container.sif cat /SU2/bin/SU2_PY/parallel_computation.py | python3; ~~~~. Adjust the python interface (SU2_PY/SU2/run/interface.py) to execute the container:; ~~~~; # set mpi command; if user_defined:; mpi_Command = os.environ['SU2_MPI_COMMAND']; elif slurm_job:; mpi_Command = 'srun -n %i %s'; elif singularity_job:; mpi_Command = 'mpirun -n %i singularity exec su2_container.sif %s'; elif not which('mpirun') is None:; mpi_Command = 'mpirun -n %i %s'; elif not which('mpiexec') is None:; mpi_Command = 'mpiexec -n %i %s'; else:; mpi_Command = ''; ~~~~. Just need to make sure that the hostfile is also included in the mpirun command if run on multiple nodes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/747#issuecomment-519829012:303,interface,interface,303,https://su2code.github.io,https://github.com/su2code/SU2/issues/747#issuecomment-519829012,2,['interface'],['interface']
Integrability,"While working on the turbo features Salvo and I noticed that there is currently a problem with the order of the communication (i.e. the order in which we loop through the SEND_RECEIVE markers.). In the code we always have loops like this. ```; for (iMarker = 0; iMarker < config->GetnMarker_All(); iMarker++) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. This way the send/receive involving the periodic boundaries is always done **before** the send/receive involving the boundaries related to the parallel partitioning (this is because the periodic structure is created before the partitioning is done). Hence the wrong values are send to the periodic ghost cells. An easy solution is to change the order of the loop, i.e. ```; for (iMarker = config->GetnMarker_All() - 1; iMarker >= 0; iMarker--) {. if ((config->GetMarker_All_KindBC(iMarker) == SEND_RECEIVE) &&; (config->GetMarker_All_SendRecv(iMarker) > 0)) {. ...; ```. Since I am not completely sure whether this is a valid solution (I dont know if this gives performance issues or will break something else) I opened this as an issue. Related to this I would also suggest to maybe implement a general send/recv routine that every class can use, because all these SendReceive_\* and Set_MPI_\* routines do essentially the same at the moment (just with different data).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/252:1250,rout,routine,1250,https://su2code.github.io,https://github.com/su2code/SU2/issues/252,2,['rout'],"['routine', 'routines']"
Integrability,"Why do you think it is confusing ? . It is either:; ```; blas_dep = declare_dependency(include_directories: '/home/talbring/Projects/OpenBLAS-0.3.6/include',; link_args:'-L/home/talbring/Projects/OpenBLAS-0.3.6/lib/ -lopenblas'). ```. or . ```; blas_dep = dependency('openblas'); ```. if `pkgconfig` can find the `*.pc` file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-520856033:256,depend,dependency,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-520856033,1,['depend'],['dependency']
Integrability,"Why is it good C++ to use containers (instead of raw arrays):; - Book keeping: No need for verbose allocations / de-allocations.; - Information: The size is carried with the container, the type of data, the allocation strategy (e.g. alignment), etc.; - Correctness: A const method can change the elements of a raw array, because in such cases const does not qualify the data, only the address (pointer) of that data. On the other hand, a const method will imply const containers, on which only const methods can be called, and so on.; - Performance 1: A nested array (**), or nested container (vector<vector>) is NOT a matrix, it is a list of arrays, consequently there is more construction / destruction overhead (more allocations) uncertain performance at runtime, because inner arrays can end up arbitrarily far from each other, you end up needing copies to talk with e.g. blas or mpi...; - Versatility: Above all a container encapsulates data structure details (e.g. if something is a vector or list or map or row-major matrix or column-major matrix or sparse matrix) behind an interface. Which then lets you change the details separately from the code that uses the data. Whenever you pass an array by pointer you are locking yourself to ONE very particular organization of data in memory.; - Performance 2: This encapsulation is not insulation, it is completely transparent to the compiler because any half decent container type will be defined inline. Furthermore... If the compiler sees two pointers it has absolutely no idea if they are pointing to the same thing, or worse if they partially overlap. To legally optimize such code compilers need to introduce a ton of checks and fallback code, on the other hand, defining operations on containers which you know never to overlap provides a clean way to avoid compiler-paranoia.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435:1082,interface,interface,1082,https://su2code.github.io,https://github.com/su2code/SU2/pull/1225#issuecomment-793832435,1,['interface'],['interface']
Integrability,"Wing was one of the preferred IDEs for the development of the python IO-based wrappers early on in the project. I do not expect that folks are using it any longer, and unless anyone is against it (please speak up), I think it can also be removed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-534162206:78,wrap,wrappers,78,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-534162206,1,['wrap'],['wrappers']
Integrability,With commit [1836f11](https://github.com/su2code/SU2/pull/1536/commits/1836f111c0759eb50946ba6b68ac281ef4b1b717) the gradients (for massflow prescribed in the primal) can now be validated really well (tested for AvgTemp and PRESSURE_DROP OF's). . BUT only for serial execution ... for multiple processes the adjoint diverges after a few iterations. I need to give that parallel treatment another thought.; UPDATE: With [ce164a2](https://github.com/su2code/SU2/pull/1536/commits/ce164a232d6c0f845784f37e45336f7276746d61) also the parallel execution works fine. Please read my explanation attempt in the commit message (in case you are interested) and let me know what you think,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657:609,message,message,609,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030848657,1,['message'],['message']
Integrability,"With the address sanitizer it gets stuck writing the binary restart file. When I terminate, I get:; ^CTraceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 280, in run_command; return_code = proc.wait(); File ""/usr/lib64/python2.7/subprocess.py"", line 1099, in wait; pid, sts = _eintr_retry_call(os.waitpid, self.pid, 0); File ""/usr/lib64/python2.7/subprocess.py"", line 125, in _eintr_retry_call; return func(*args). I thought SU2 exclusively used python3? It registers as compiled with python3 (Program python3 found: YES (/bin/python3)).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971#issuecomment-623683360:438,interface,interface,438,https://su2code.github.io,https://github.com/su2code/SU2/issues/971#issuecomment-623683360,2,['interface'],['interface']
Integrability,"With this branch some turbomachinery capabilities have been added to the code. The main features are:; -Supersonic outlet Non Reflecting BC; -Conservative and Non-Conservative 2D Mixing-Plane Interface; -2D Turbomachinery performances calcualation for single blade, stage and multi-stage geometry. This will be soon used to derive a Discrete Adjoint using as OF turbomachinery performance.; - restart_file for multizone flow simulation . I ve created a turbomachinery folder in the TestCase folder with two new testcases in which these new capabilities can be tested. cheers. sv",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/207:192,Interface,Interface,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/207,1,['Interface'],['Interface']
Integrability,"Wonderful contribution. Thanks for doing all that. Streamlining the dev process is very helpful and cmake is definitely becoming a standard. Best,. Juan. On Nov 10, 2019, at 11:24 AM, Daumantas Kavolis <notifications@github.com> wrote:. ﻿; Proposed Changes. Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUIL",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:405,depend,dependencies,405,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['depend'],['dependencies']
Integrability,Wrap MPI_Allgatherv for NdFlattener,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1897:0,Wrap,Wrap,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/1897,1,['Wrap'],['Wrap']
Integrability,"Writing a simple unit test is difficult, since SU2 both doesn't have unit tests and wasn't written with unit testing in mind. That being said, I've got a unit test that I'm happy with. Our group has put our own unit-testing framework into our fork of SU2, based off of Boost and automake testing. The unit test I created runs off of that framework. That means it won't run out-of-the-box on the develop branch of SU2. When I run the unit test with no changes to `CNumerics::GetViscousProjJacs`, I get that the residuals and Jacobians match to within 10 times the machine epsilon, aside from the [4][0] value of the Jacobians. There, the relative difference is of the order 1E-6. When I switch the two lines in `CNumerics::GetViscousProjJacs` for ideal gases to be negative, the tests run with no complaints. Ideal gas and generalized variants match to within 10 times machine epsilon. I'm uploading my test file just as an example, in case anyone wants to see what I've tested.; [viscous_ideal_vs_general.zip](https://github.com/su2code/SU2/files/2590517/viscous_ideal_vs_general.zip). As for comparison to some results from another code, I think that's a lot to ask. Getting a good comparison would depend on an understanding of how the ideal gas model, viscosity, numerics, and Jacobians are handled in the external code. Small differences would make the comparison completely invalid. I completely support testing and checking the changes I'm proposing. But comparison with an external code seems to provide a very low return on investment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439491945:1200,depend,depend,1200,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439491945,2,['depend'],['depend']
Integrability,"YES! I am excited to try this out. I can probably test it on some of the other TMR cases (airfoils, flatplates). Will post the results when I get those done. . Side note, there was one issue that @bmunguia and I encountered when performing optimizations with adaptive CFL. Say the DIRECT simulation is run with adaptive CFL and is well converged (6 to 8 orders of residual reduction). When the discrete adjoint performs the one direct iteration to store the computational graph, it uses the initial CFL value, not the CFL that the adaptive CFL routine ended at. This results in the residuals being very high for that one iteration, which then affects the convergence of the discrete adjoint. . I will try to run an adjoint on one of these cases as well to see if the problem persists. Perhaps could be overcome with a simple additional field for CFL in the restart meta-data",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-531520526:544,rout,routine,544,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-531520526,2,['rout'],['routine']
Integrability,"Yes for MARKER_ROUGH, or MARKER_ROUGH_WALL to be clearer.; Or just WALL_ROUGHNESS as you have right now, since it would not really a marker, just the properties of markers (and I've seen some people on CFD online confused with similar naming e.g. MARKER_SHROUD). Regarding the MPI stuff, I had the following idea over lunch:; In CPhysicalGeometry::SetWallDistance we compute the closest distance, and in so doing we also get the mpi rank and markerID associated with the closest vertex.; So, before computing the wall distances you communicate the local marker ids and wall roughness's (via Allgather as you are doing now), with this info you can build a `unordered_map<pair<int,int>, su2double>` to map pairs of <rank,markerID> to the values of roughness.; Now when you loop over the points to compute the distances you can retrieve the roughness from this map instead of from config.; It's almost exactly the same as you have, but avoids using the config as a messenger between routines, and using a stl map should also make the code simpler. In the boundary conditions you can still get the marker roughness via the marker tag as you are doing now, and I guess the wall type (smooth / rough) can be inferred from having 0 (default) roughness (?); With the string+double list specification you also avoid having to specify 0 roughness and SMOOTH wall type for markers where you don't want to use this feature.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-630861158:980,rout,routines,980,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-630861158,2,['rout'],['routines']
Integrability,Yes it depends on the order of the grid points but it will give the correct y-coordinate whenever the previous vertex in the loop is the one adjacent to the y=0 vertex on the marker or if the loop starts at y=0 it works if the next one in the loop which is adjacent on the marker. It seems to be the case for my examples but I don't think it always is. . I don't like it but I can't find a Get which returns the index of the adjacent node on the marker when passing the index of the current vertex or node in the loop. . ` geometry->vertex[iMarker][iVertex]->GetNormal_Neighbor() ` does not return the right one . ` geometry->node[iPoint]->GetPoint(index) ` with some `index` should return the right one but the index where it is stored varies so I need to look into the logic behind that,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/927#issuecomment-611106724:7,depend,depends,7,https://su2code.github.io,https://github.com/su2code/SU2/pull/927#issuecomment-611106724,1,['depend'],['depends']
Integrability,"Yes it is inconsistent that's why it would need validation, the worst-case scenario is when your design variable is the thing the primal solver is manipulating to implement the fixed mode.; For example I'm pitching the wing (geometric AOA let's call it) the adjoint gives me a value for dCL / dalpha, but in practice this value is 0 because the primal solver does not allow the CL to change.; But doing the above would be dumb right, the validation question is what happens to the derivatives of other outputs? Is dCD / dalpha correct? I imagine this depends on the relation between CD and CL in this case.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842:551,depend,depends,551,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030108842,1,['depend'],['depends']
Integrability,"Yes there is a `lapack.pc` file in each of those folders.; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ cat /usr/lib/pkgconfig/lapack.pc ; libdir=/usr/lib; includedir=/usr/include. Name: LAPACK; Description: FORTRAN reference implementation of LAPACK Linear Algebra PACKage; Version: 3.9.0; URL: http://www.netlib.org/lapack/; Libs: -L${libdir} -llapack; Requires.private: blas; ```; The output of `pkg-config openblas --version` is 0.3.8, but it shows a message as well:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ pkg-config openblas --version; pkg-config: --version specified with other options or module names, assuming --modversion.; 0.3.8; ```; I also installed using the same meson arguments on an Ubuntu system (Python v3.7.5, mpich v3.3.2) which did not need the `$PKG_CONFIG_PATH` variable to be set. So all this is a little confusing for me.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632009282:458,message,message,458,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632009282,1,['message'],['message']
Integrability,"Yes, I understand that, on some OSes, self contained bundles (shipping build tools and external dependencies) are easier to handle. What I am suggesting is not to completely disable this self contained approach: I am just saying that there should be an option to disable it, so that life could be made easier for both classes of users (those who benefit from the self contained approach and those who prefer using system-wide build tools).; Please note that a ""mandatory"" self contained approach makes SU2 less likely to be packaged for inclusion into distributions such as Debian, because it means that more modifications are needed to create a proper package.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1450351389:96,depend,dependencies,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1450351389,1,['depend'],['dependencies']
Integrability,"Yes, please do create a new pull request.; To switch branches from the command line do:; git checkout develop; Or, from within the github web interface it looks like you just need to make sure that the ""develop"" branch is selected in the drop-down menus when you fork and make the pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/71#issuecomment-56880854:142,interface,interface,142,https://su2code.github.io,https://github.com/su2code/SU2/pull/71#issuecomment-56880854,1,['interface'],['interface']
Integrability,"Yes. I did have installed g++.; ```; (base) root@a5502ebdff64:/home# g++ --version; g++ (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0; Copyright (C) 2017 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; ```; ```; (base) root@a5502ebdff64:/home/SU2# apt-get install gcc g++; Reading package lists... Done; Building dependency tree ; Reading state information... Done; g++ is already the newest version (4:7.4.0-1ubuntu2.3).; gcc is already the newest version (4:7.4.0-1ubuntu2.3).; 0 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847853:441,depend,dependency,441,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847853,1,['depend'],['dependency']
Integrability,"Yet another doubt on the same subject: I just realized that SU2V7.31 (I; have not tested it on later SU2 releases) accepts imposing both adiabatic; walls plus isothermal boundary condition on some walls (when running Menter; model), but when I simply impose only isothermal conditions (leaving; commented out the adiabatic markers), I get the message: SU2 process; returned error '1'. Is there a workaround for this? Kind regards. On Thu, Sep 28, 2023 at 8:25 PM Pedro Gomes ***@***.***>; wrote:. > you are correct, there is a discussion on CFD-online about it. we impose 0; > heat flux, but report an ""apparent heat flux"" most codes will simply give; > you back the imposed heat flux value you specify, nevertheless there will; > probably be a temperature gradient close to the wall; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/2109#issuecomment-1740118992>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AHGXZUUZNE6B63SH7XJLY2DX4YBMZANCNFSM6AAAAAA3QKLVDU>; > .; > You are receiving this because you commented.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391:343,message,message,343,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1775968391,3,"['Message', 'message']","['Message', 'message']"
Integrability,"You are right. Even though we compute these quantities inside the solver, they have not been added to the output classes yet. This should be straightforward though now in the new structure. Take a look at CFlowOutput::SetAerodynamicCoefficients(), for example, and try to pattern match to add these along with the others since we already have a ```solver->GetTotal_CQ()``` routine (and CT and CMerit) to access the computed value. Probably also need to add to the AddAerodynamicCoefficients() routine.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/957#issuecomment-621662776:373,rout,routine,373,https://su2code.github.io,https://github.com/su2code/SU2/issues/957#issuecomment-621662776,2,['rout'],['routine']
Integrability,You may want to remove the string based interface since it's known to be inneficient.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1950299227:40,interface,interface,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1950299227,1,['interface'],['interface']
Integrability,"You mean that only the coefficients are calculated wrong while the solution itself is correct? . Actually, I checked that yesterday by calculating the lift coefficient manually from the nodal forces, which I obtained through the python interface with GetFlowLoad. I found that the CL from SU2 is correct, the results were numerically equivalent. It might be that the Vertex Tractions are calculated with a wrong reference value?? That would be something that happens deep in the solver, which is beyond my abilities... For the farfield, I set MACH_NUMBER= 0.0 and used MACH_MOTION= 0.2, which should be used for the scaling of coefficients, forces, etc. as far I understood. The velocity are u=68.0588 m/s, v=0.0, w=+/- 2.37 m/s, which corresponds exactly to Ma=0.2 at sea level with pressure=101325.0, density=1.225 and temperature=288.15. I checked the values by slicing through the volume mesh, and I can see exactly these numbers in far in front of the wing / close to the farfield.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954#issuecomment-1459859767:236,interface,interface,236,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954#issuecomment-1459859767,1,['interface'],['interface']
Integrability,"You mentioned issues with the develop branch, those are likely due to compilation differences.; Yes run to convergence with both branches and compare please. I expect integrated quantities will be exactly the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2095#issuecomment-1659015548:167,integrat,integrated,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/2095#issuecomment-1659015548,1,['integrat'],['integrated']
Integrability,"[...]; > If either you or @frx-wintermute are interested in complementing the feature by adding an option to prefer system libraries (via pkg-config, no paths because 99.9% of users will not know what to do) instead of the versions shipped with SU2, please go ahead and open a PR. Hello @pcarruscag!. To be honest, my daydream is: I would love to see SU2 shipping nothing in 'externals/' (or just empty subdirectories such as 'externals/meson/' ); then those external dependencies are by default downloaded from external repositories or tar archives. This defaul behavior would be obtained by configuring with the './meson.py' script and then by building with './ninja'. But, if a user wants to build SU2 from source and prefers to use system-wide Meson and Ninja and system-wide versions of the external dependencies, it would be possible to avoid downloading these external dependencies. By running './preconfigure.py' with appropriate options, it would be possible to decide which external dependencies to **not** download. At that point, system-wide Meson and Ninja could be used to build SU2 from source. And the 'meson.build' file would do the following:. * for each required or enabled (at configure time) dependency **\<foo\>**, it would check whether it is found in 'externals/**\<foo\>**/'; if not, it would check whether it can be found as a system-wide installation (perhaps via pkgconfig); if not, it would exit with error; * for each dependency which is not required nor enabled at configure time, it would avoid using it at all. I think this daydream is achievable, and I hope that other people consider it as a useful goal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778:468,depend,dependencies,468,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1646970778,6,['depend'],"['dependencies', 'dependency']"
Integrability,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/cache](https://github.com/actions/cache) from 3 to 4.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/releases"">actions/cache's releases</a>.</em></p>; <blockquote>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Update action to node20 by <a href=""https://github.com/takost""><code>@​takost</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li>feat: save-always flag by <a href=""https://github.com/to-s""><code>@​to-s</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/takost""><code>@​takost</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1284"">actions/cache#1284</a></li>; <li><a href=""https://github.com/to-s""><code>@​to-s</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1242"">actions/cache#1242</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/cache/compare/v3...v4.0.0"">https://github.com/actions/cache/compare/v3...v4.0.0</a></p>; <h2>v3.3.3</h2>; <h2>What's Changed</h2>; <ul>; <li>Cache v3.3.3 by <a href=""https://github.com/robherley""><code>@​robherley</code></a> in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/robherley""><code>@​robherley</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/cache/pull/1302"">actions/cache#1302</a></li>; </ul>; <p><strong>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:9,depend,dependabot-start,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,3,"['Depend', 'depend']","['Dependabot', 'dependabot-end', 'dependabot-start']"
Integrability,"[//]: # (dependabot-start); ⚠️ **Dependabot is rebasing this PR** ⚠️ . Rebasing might not happen immediately, so don't worry if this takes some time. Note: if you make any changes to this PR yourself, they will take precedence over the rebase. ---. [//]: # (dependabot-end). Bumps [actions/upload-release-asset](https://github.com/actions/upload-release-asset) from 1.0.1 to 1.0.2.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/actions/upload-release-asset/releases"">actions/upload-release-asset's releases</a>.</em></p>; <blockquote>; <h2>Automate sliding major version number</h2>; <p>This is a minor update to make the current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1754:9,depend,dependabot-start,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/1754,3,"['Depend', 'depend']","['Dependabot', 'dependabot-end', 'dependabot-start']"
Integrability,[WIP] Aero-Structural Discrete Adjoint Sensitivities and Python Wrapper Developments,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:64,Wrap,Wrapper,64,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['Wrap'],['Wrapper']
Integrability,[WIP] Change unsteady timestep using Python wrapper,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:44,wrap,wrapper,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,1,['wrap'],['wrapper']
Integrability,[WIP] Composition dependent fluid properties for multicomponent flow,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:18,depend,dependent,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,1,['depend'],['dependent']
Integrability,[WIP] Composition-dependent heat capacities and mass diffusivity models for incompresible flows,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1758:18,depend,dependent,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1758,1,['depend'],['dependent']
Integrability,[WIP] Improve implementation of periodicity for implicit integration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1585:57,integrat,integration,57,https://su2code.github.io,https://github.com/su2code/SU2/pull/1585,1,['integrat'],['integration']
Integrability,[WIP] Update turbo interfaces,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2209:19,interface,interfaces,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/2209,1,['interface'],['interfaces']
Integrability,[WIP] pyBeam integration into SU2 as a subproject,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/902:13,integrat,integration,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/902,1,['integrat'],['integration']
Integrability,"[here](https://github.com/su2code/SU2/issues/992#issuecomment-652446915).; The code implementation was suggested by @pcarruscag in [here](https://github.com/su2code/SU2/pull/1066#discussion_r470975915).; For the user interface, this is being or was discussed in [here](https://github.com/su2code/SU2/issues/1364#issue-981474153). Some time ago, I made a PR #1066 to correct the SA model in SU2. Further I had the intention to implement the above presented approach to the SA for that pull request. However since the the presented approach can also be applied to the [SST](https://github.com/su2code/SU2/discussions/1403#discussion-3625259) or any turbulence model, I decided to create a new pull request. _Please note that this is a very draft pull request, it is not meant to work at all._. ## Documentation; Down below I will explain the ""theory"" behind it as well as the code structure that I will try to follow, just in case someone wants to replicate it for the SST. Regarding the user interface, I did not work on that yet. I will address it at the end. ### Theory; The Spalart-Allamaras correction/variation models to be implemented in SU2 are listed below. One can find a detailed description for example in [NASA TMR website](https://turbmodels.larc.nasa.gov/spalart.html).; - Spalart-Allmaras standard; - Spalart-Allmaras negative; - Spalart-Allmaras **yes** ft2 term; - Spalart-Allmaras mixing layer compressibility correction; - Spalart-Allmaras Edwards modification; - Spalart-Allmaras QCR-2000. The first step is to identify the core, i.e., the mathematical formulation that is shared/common between all of them. Below I provide a very short description of their main characteristics. #### Spalart-Allmaras standard; In the literature one can find a correction that sets the ft2-term to zero. However, the current baseline model in SU2 sets this ft2-term to zero. As discussed in [here](https://github.com/su2code/SU2/issues/1364#issuecomment-916890178) in order to keep compatibility w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:1504,interface,interface,1504,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,2,['interface'],['interface']
Integrability,"_BOX, 0, 0, 0, 1.0, 0.0, 0.0 ); ( BLADE_BOX, 0, 1, 0, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 0, 1, 1, 0.0, 1.0, 0.0 ); ( BLADE_BOX, 1, 1, 1, 0.0, 1.0, 0.0 ); %; % New value of the shape deformation; DV_VALUE= 0.02, 0.02, 0.02, 0.02; %; OPT_RELAX_FACTOR = 1.0. Moreover, some surfaces were re-assigned to avoid any plane fixing (that was, intentionally, set as FFD_CONTINUITY = USER _INPUT): . MARKER_SYM = ( HUB, SHROUD, BLADE1, PER1, PER2 ). ## **Results**; For any given linear solver deformation and parameter the arbitrary mesh deformation test failed _(even after hugely increasing both DV_VALUE and OPT_RELAX_FACTOR to exclude a dimensional issue_):. - **FGMRES** solved by initial guess.; - **CONJUGATE_GRADIENT** reached the convergency conditions but being MAX DIFF. = 0 no deformation was applied to the mesh. Similarly, SU2_DOT_AD behaved in the same manner even if adjoint solution was tightly converged. To exclude any non-dependency from the objective function, different options were investigated (DRAG, LIFT, SURFACE_MACH, SURFACE_TOTAL_PRESSURE, ENTROPY_GENERATION) and nothing changed. Moreover, the vaned diffuser scenario (_not visualized in here for simplicity_) seems to be affected too, even if very similar to basic flow scenarios (_basically, it is just an internal 3D-flow over airfoil case_). I thought this behavior could be traced to a bug since my previous mesh deformation always proceeded smoothly (_from flow past cylinder to other internal flow scenarios_), either with arbitrary or gradient based deformation. However, none of these were investigated with turbomachinery settings, which are necessary for this scenario for two main reasons:. 1. post processing parameters computed by SU2; 6. this mesh is part of a turbomachinery multi-block simulation. **To reproduce**; [config.txt](https://github.com/su2code/SU2/files/11416238/config.txt) -> cfg file; [mesh_out.txt](https://github.com/su2code/SU2/files/11416239/mesh_out.txt) -> mesh (_FFD box attached_). Thank you in a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025:2876,depend,dependency,2876,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025,1,['depend'],['dependency']
Integrability,"_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1652,Depend,Dependency,1652,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Depend'],['Dependency']
Integrability,"_reg_classes/SU2_CFD/src/solvers/CSolverFactory.cpp#L226) to ""SOMETHINGELSE"", you get:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <---------- Solver SOMETHINGELSE was not found.; <---------- Available Solvers: ; EULER ; ``` ; and the program exists.; 5. However, after returning the created solver out of **CSolverFactory::CreateSubSolver()** some strange things happen:; ```; -------------------- Solver Preprocessing ( Zone 0 ) --------------------; <----------- Making CEulerSolver ...; ...... Some other output; Initialize Jacobian structure (Euler). MG level: 0.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; Initialize Jacobian structure (Euler). MG level: 1.; <----------- Preprocessing Created solver ...; <----------- Making CEulerSolver ...; .... And then; Elwardi-PC:04092] *** Process received signal ***; [Elwardi-PC:04092] Signal: Segmentation fault (11); [Elwardi-PC:04092] Signal code: Address not mapped (1); [Elwardi-PC:04092] Failing at address: (nil); [Elwardi-PC:04092] [ 0] /lib/x86_64-linux-gnu/libc.so.6(+0x3efd0)[0x7f6f2de1dfd0]; [Elwardi-PC:04092] *** End of error message ***; Segmentation fault; ```; So there is probably something else I didn't pay attention to. ## Immediate improvements. Forcing the dev to create his own ""is_registered"" static variable and initializing it himself can be eliminated by by putting the variable in a templated class (notice that the variable initialization only depends on the type it belongs to and the factory class) which the solver can inherit from. ## My question. Any idea on what is causing the seg fault. I'm pretty sure it's because I'm returning a nullptr somewhere though.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957:2832,message,message,2832,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-669146957,2,"['depend', 'message']","['depends', 'message']"
Integrability,"`SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no ne",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:3078,wrap,wrapper,3078,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['wrap'],['wrapper']
Integrability,"``; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; expor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1888,depend,dependency,1888,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,2,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"```diff; $ git --no-pager diff --cached ; diff --git a/meson.build b/meson.build; index ca86992ea..b68a03c52 100644; --- a/meson.build; +++ b/meson.build; @@ -1,15 +1,12 @@; project('SU2', 'c', 'cpp',; version: '7.5.1 ""Blackbird""',; + meson_version: '0.61.1',; license: 'LGPL2',; default_options: ['buildtype=release',; 'warning_level=0',; 'c_std=c99',; 'cpp_std=c++11']); ; -if meson.version() != '0.61.1'; - error('SU2 must be configured with the extended Meson script (./meson.py) in the SU2 root directory.'); -endif; -; pymod = import('python'); python = pymod.find_installation(); ; ```. I used this patch, and then ran the following:. ```; $ meson setup builddir --wipe; The Meson build system; Version: 1.0.1; Source dir: /tmp/SU2; Build dir: /tmp/SU2/builddir; Build type: native build. meson.build:1:0: ERROR: Meson version is 1.0.1 but project requires 0.61.1; ```. Using the >= comparison, it configures fine, and downloads a git submodule for mutationpp/coolprop on demand. From a hasty look around, it seems like the other git submodules are used as externals/ directories, not meson subprojects. Another project I know uses e.g. ```; if not fs.exists('submoduledir/README.md'); error('Missing the `submoduledir` submodule! Run `git submodule update --init` to fix this.'); endif; ```. for each submodule before it gets processed by meson. This is less automatic than wrapping it in meson.py, but does provide pretty clear directions... the sticking point is if people download tarballs. You currently point people to github's autogenerated archives, which is NOT sufficient as it doesn't have submodules included. I would actually suggest using `meson dist --include-subprojects --no-tests` to produce your own tarballs and attach them as additional releases artifacts. Meson *does* include submodules (whether or not they are subprojects) automatically to the tarball it creates.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434:1382,wrap,wrapping,1382,https://su2code.github.io,https://github.com/su2code/SU2/issues/1945#issuecomment-1451057434,2,['wrap'],['wrapping']
Integrability,"a JST scheme without dissipation term on the BC. A ""reflected state"" is created where scalars are copied and velocity is mirrored along the plane. Then the quantities (domain & reflected) are averaged (on the edge) and `CNumerics::GetInviscidProjFlux` is called with these values. The returned Proj_Flux is directly taken as Residual. For JST dissipation would be added in a step afterwards.; -> **new Euler BC**: Here for compressible flow always (!) `CUpwRoe_Flow` is taken as numerical convective scheme. Boundaries have their own numerics container in `CONV_BOUND_TERM`. Look in CDriver.cpp for allocation of `SPACE_CENTERED` compressible schemes (as JST was used in all examples in this issue, but the problem is still there if upwind schemes were taken). And independent of the users choice of `CONV_NUM_METHOD_FLOW`, as said above, `CUpwRoe_Flow` is hard coded as numerical convective scheme for boundary nodes. As in the old Euler BC a ""reflected state"" is created and handed to the `ComputeResidual` Routine of the numerical scheme, together with the boundary vertex state.; -> So one major difference between both formulations is that in the new Euler wall left & right state are created and the respective convective scheme class does the rest via `ComputeResidual`. In the old implementation everything done in the `ComputeResidual` routine is ""copied"" into the BC_Euler_Wall and modified to its needs... and it looks like central convective scheme (JST) without dissipation term. 2. When changing the `CUpwRoe_Flow` scheme, which is used only for convective schemes on boundaries `CONV_BOUND_TERM`, such that it behaves like JST without dissipation term -> then old Euler and new Euler wall BC return the same results in CD and CL. 3. So the Convective Residual is somewhat different on the surface where the Objectives CL and CD are evaluated. JST without dissipation term vs `CUpwRoeBase_Flow::ComputeResidual`. Which (and if) one of both approaches is the ""corect"" is not something I ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565461347:1329,Rout,Routine,1329,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565461347,1,['Rout'],['Routine']
Integrability,"a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10902,Depend,Dependabot,10902,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Depend'],['Dependabot']
Integrability,"a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5332,depend,dependabot,5332,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e940df48c472a""><code>83394c9</code></a> Updated cache version in license file</li>; <li><a href=""https://github.com/actions/cache/commit/e839c25979e6ffdd90792d34de69d6a87d3016f6""><code>e839c25</code></a> Updated actions/cache version to 3.0.3</li>; <li><a href=""https://github.com/actions/cache/commit/33a923d660988a68affcd47de6bd6744193223a6""><code>33a923d</code></a> Added release information</li>; <li><a href=""https://github.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:7580,depend,dependabot,7580,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1369"">actions/checkout#1369</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3...v3.5.3"">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>; <h2>v3.5.2</h2>; <h2>What's Changed</h2>; <ul>; <li>Fix: Use correct API url / endpoint in GHES by <a href=""https://github.com/fhammerl""><code>@​fhammerl</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1289"">actions/checkout#1289</a> based on <a href=""https://redirect.github.com/actions/checkout/issues/1286"">#1286</a> by <a href=""https://github.com/1newsr""><code>@​1newsr</code></a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/checkout/compare/v3.5.1...v3.5.2"">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>; <h2>v3.5.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Improve checkout performance on Windows runners by upgrading <code>@​actions/github</code> dependency by <a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/BrettDong""><code>@​BrettDong</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/checkout/pull/1246"">actions/checkout#1246</a></li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/checkout/blob/main/CHANGELOG.md"">actions/checkout's changelog</a>.</em></p>; <blockquote>; <h1>Changelog</h1>; <h2>v4.0.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1067"">Support fetching without the --progress option</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1436"">Update to node20<",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:5433,depend,dependency,5433,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependency']
Integrability,"able-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4367,Message,Message,4367,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Message'],['Message']
Integrability,"acency structure.; 5 surface markers.; 10222 boundary elements in index 0 (Marker = aircraft).; 9712 boundary elements in index 1 (Marker = farfield).; 3382 boundary elements in index 2 (Marker = inner_nearfield).; 19738 boundary elements in index 3 (Marker = symmetry).; 3382 boundary elements in index 4 (Marker = outer_nearfield).; Calling ParMETIS...; Traceback (most recent call last):; File ""/home/app/SU2/install/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 61, in main; options.compute ); File ""/home/app/SU2/install/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config) ; RuntimeError:; Command = mpirun -n 12 /home/app/SU2/install/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '15'; [ubuntu:8553] *** An error occurred in MPI_Wait; [ubuntu:8553] *** on communicator MPI COMMUNICATOR 3 DUP FROM 0; [ubuntu:8553] *** MPI_ERR_TRUNCATE: message truncated; [ubuntu:8553] *** MPI_ERRORS_ARE_FATAL: your MPI job will now abort; --------------------------------------------------------------------------; mpirun has exited due to process rank 9 with PID 8554 on; node ubuntu exiting improperly. There are two reasons this could occur:. 1. this process did not call ""init"" before exiting, but others in; the job did. This can cause a job to hang indefinitely while it waits; for all processes to call ""init"". By rule, if one process calls ""init"",; then ALL processes must call ""init"" prior to termination. 2. this process called ""init"", but exited without calling ""finalize"".; By rule, all processes that call ""init"" MUST call ""finalize"" prior to; exiting or it will be considered an ""abnormal termination"". This may have caused other processes in the application to be; terminated by signals sent by mpirun (as reported here).; --------------------------------------------------------------------------; [ubuntu:08544] 1 more process has sent help message help-mpi-errors.tx",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485283:1404,message,message,1404,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485283,1,['message'],['message']
Integrability,"ach number flat plate case. The flow condition is below. Temperature (K) | Unit Re (1/m) | Mach | Pressure | Wall Temperature(K); -- | -- | -- | -- | --; 800 | 4.9×10^6 | 6.1 | 12100 | 300. After calculation, I check the flow field, including the boundary. But, the inlet boundary is not the same flow conditions I imposed. ; Here is the comparison of other models using the same flow conditions. . ![image](https://user-images.githubusercontent.com/50565314/208847631-a3ced0ab-7a70-45ee-b67e-41314b2ddfb1.png). ![image](https://user-images.githubusercontent.com/50565314/208847743-6f08eb96-ea5e-4ac5-a50a-0d980f33c547.png). So, I tried to find the cause. . When deriving the RANS equation from the energy equation, the turbulent kinetic energy(TKE) is derived from the kinetic energy of Total Energy(E) as shown below.; ![image](https://user-images.githubusercontent.com/50565314/208849564-da4f1b0a-ff2f-4732-911a-b1ed2a4ca1c8.png). In the boundary condition and initialization part, k is considered depending on whether or not the SST model is used for Total Energy. In CEulerSolver.cpp ; `bool tkeNeeded = (turbulent && config->GetKind_Turb_Model() == TURB_MODEL::SST);`; `if (tkeNeeded) { Energy_FreeStream += Tke_FreeStream; }; config->SetEnergy_FreeStream(Energy_FreeStream);`; `if (tkeNeeded) Energy_FreeStreamND += Tke_FreeStreamND;`. But In the flux calculation part, when calculating the speed of sound(a), using the total enthalpy(H). But, in this part consider only the kinetic energy. . Expressed mathematically ; ![image](https://user-images.githubusercontent.com/50565314/208861650-92b8cad6-5a1f-4742-952b-30d0187ae28b.png). but in the SU2 code using below. ![image](https://user-images.githubusercontent.com/50565314/208861902-ff614d53-d07e-4237-a04d-73a49ad5a55c.png). The speed of sound always has a slightly high value because TKE is not subtracted. See ""roe.cpp"" line 119 ~ 149. ; `RoeSoundSpeed2 = (Gamma-1)*(RoeEnthalpy-0.5*sq_vel);` ; This line might be changed roughly like : ;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851:1100,depend,depending,1100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851,1,['depend'],['depending']
Integrability,"ache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull reque",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6538,depend,dependabot,6538,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"action-required-labels/commit/5384b5bb3bf2c6b1c100a2a5821e1ddac8c38cae""><code>5384b5b</code></a> Add newline after the match token in error comments (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:5854,depend,dependabot-security-updates,5854,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['depend'],['dependabot-security-updates']
Integrability,"ad to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6547,depend,dependabot-automerge-start,6547,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,adding tutorial for composition-dependent model to tutorials.py,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1886:32,depend,dependent,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1886,1,['depend'],['dependent']
Integrability,"ages and rms values have significant value. However, I have observed, that once averaging is enabled, the solver performance gradually decreases up to a point, where time-iterations are orders of magnitudes slower than without averaging. This does not seem to be a bug but rather inherent to the way averaging is implemented. I suspect, that the averaging occurs over all timesteps and thus a complete history of all the values is required. This may gradually increase memory consumption and effort for calculating averages. I suspect this to happen around here, but I may be wrong. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L69-L76. I assume, that this may be a necessity for the higher-order windows, but seems to be overkill for a rectangular window, where the new time-average can be computed from the previous time-average, the number of iterations and the new values. Nevertheless, also the rectangular window seems to save the full value history:. https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/SU2_CFD/src/output/tools/CWindowingTools.cpp#L94-L100. **Describe the solution you'd like**; Being able to calculate (at least) non-windowed time-averages without a gradual drop in performance would be a real asset for me. This may be possible by choosing a different averaging method. If this cannot be done due to the data structure used, a dry-run message warning the user about this may be helpful. . **Describe alternatives you've considered**; The same effect can be achieved by running simulations without time-averaging but with regular volumetric outputs and calculating time-averages as a post-processing step. However, the associated data overhead is considerable. **Additional context**; I performed my tests so far with the RANS solver, employing SST turbulence and SLAU2 scheme. Time-averaging started at around time-iteration 160k and cintinous for another 200k iterations.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1545:1698,message,message,1698,https://su2code.github.io,https://github.com/su2code/SU2/issues/1545,1,['message'],['message']
Integrability,"aively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no free lunches). With this [small case](https://github.com/su2code/SU2/files/3933059/small_case.zip) using 8 cores off a machine with two 2650v4 CPU, Intel MPI 2018 + GCC 8.2, the hybrid (2 ranks of 4 threads) approach is about 5% faster thank the MPI-only (8 ranks), I expect larger cases to have identical performance. ### How To; - Compile: Add -fopenmp to the compiler and linker arguments.; - Run: Set number of threads with env variable `OM",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2585,rout,routines,2585,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['rout'],['routines']
Integrability,"ame| Dim. value| Ref. value| Unit|Non-dim. value|; +------------------------------------------------------------------------------+; | Static Pressure| 41342.4| 1| Pa| 41342.4|; | Density| 0.499813| 1| kg/m^3| 0.499813|; | Temperature| 288.15| 1| K| 288.15|; | Total Energy| 236805| 1| m^2/s^2| 236805|; | Velocity-X| 244.973| 1| m/s| 244.973|; | Velocity-Y| 0| 1| m/s| 0|; | Velocity-Z| 4.48986| 1| m/s| 4.48986|; | Velocity Magnitude| 245.014| 1| m/s| 245.014|; +------------------------------------------------------------------------------+; | Viscosity| 1.7248e-05| 1| N.s/m^2| 1.7248e-05|; | Conductivity| -| 1| W/m^2.K| -|; | Turb. Kin. Energy| 225.119| 1| m^2/s^2| 225.119|; | Spec. Dissipation| 652349| 1| 1/s| 652349|; +------------------------------------------------------------------------------+; | Mach Number| -| -| -| 0.72|; | Reynolds Number| -| -| -| 7.1e+06|; +------------------------------------------------------------------------------+; Initialize Jacobian structure (Navier-Stokes). MG level: 0.; Initialize Jacobian structure (SA model). ----------------- Integration and Numerics Preprocessing ----------------; Integration Preprocessing.; Numerics Preprocessing. ---------------------- Python Interface Preprocessing ---------------------; Setting customized boundary conditions for zone 0. ```; ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:8646,Integrat,Integration,8646,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,3,"['Integrat', 'Interface']","['Integration', 'Interface']"
Integrability,"and here's a trace from a unix cluster --. ```; ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 3113133 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 4478644 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 8 surface markers.; 166730 boundary elements in index 0 (Marker = aircraft).; 33766 boundary elements in index 1 (Marker = farfield).; 742 boundary elements in index 2 (Marker = injest).; 290 boundary elements in index 3 (Marker = inlet).; 22500 boundary elements in index 4 (Marker = inner_nearfield).; 243 boundary elements in index 5 (Marker = outlet).; 146871 boundary elements in index 6 (Marker = symmetry).; 22500 boundary elements in index 7 (Marker = outer_nearfield).; Calling ParMETIS...; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36096 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36400 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 35800 bytes received but buffer size is 31680; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; trunc",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485343:984,Message,Message,984,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485343,1,['Message'],['Message']
Integrability,"appening currently). All `CAdj<sth>` things are related to the continuous adjoint and `CDiscAdj<sth>` to the discrete adjoint.; > Boundary conditions (this one being internal) need to be explicitly derived and set in the continuous adjoint but not in the discrete adjoint so your understanding was going in the right direction. (Although I am no expert in cont.adj. things either :) ). So, it sounds like I don't need to care about it as long as I use discrete adjoint then. > > VENKATAKRISHNAN limiter: With MARKER_NEARFIELD defined, this limiter causes strange pressure disturbance near the nearfield boundary. I tried to find a cause but no luck so far. (That's why I'm using VAN_ALBADA_EDGE in the test cases.); > ; > you can try maybe to tune the `VENKAT_LIMITER_COEFF` in the cfg, but I have no better hint for now. I forgot to mention. I have tested VENKATAKRISHNAN limiter with v6. I am hoping that it is fixed by now after reading [this discussion](https://github.com/su2code/SU2/issues/917). > > Bad match for point 47742. Nearest donor distance: 3.6066950142e+00.: Lots of this message shows up. I don't know what this message is for. It doesn't seem to cause any real issues, so I've been ignoring them.; > ; > That is certainly sth I would not ignore :) Does this occur with the case you added (i.e. no periodic bc)? Does it also occur when you run single core? maybe it is matching between internal MPI boundaries. In that case yould can add RANK to the VOLUME_OUTPUT and take more and more cores and see when it fails -> look at the Rank boundaries and maybe you notice sth. Yes, it occurs with the case I added. I haven't tested with single core. As far as I see in `CPhysicalGeometry::MatchNearField`, the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance exceeding 1e-1.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847:1660,message,message,1660,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-885501847,2,['message'],['message']
Integrability,"ares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1978,interface,interface,1978,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['interface'],['interface']
Integrability,"ariable, which means there will be no penalty to scalar code, new overloads for accessor methods will be required to set/get SIMD-arrays of data instead of scalars.; - The geometric properties and graph information associated with CGeometry will require the same contiguous storage treatment received by CVariable.; - Linear algebra, dimension-specific multiplication kernels with manual low level optimisations (unrolling, vectorization through intrinsics, and software prefetching), complex code but encapsulated in a low maintenance area of the code. **General improvements**; - Fusing convective and viscous residual loops, this will NOT be done by super gluing convective and viscous numerics. I do not have a concrete design in mind yet but I hope to be able to do something akin to the *decorator* pattern I mentioned before. I also plan to make the numerics a full-fledged *visitor* to reduce compilation dependencies, currently a change to numerics may affect CVariable CSolver and CNumerics (as mentioned by @clarkpede), CSolver is involved because it is responsible for fetching data, I may move that to CNumerics, which would let them fetch data as needed.; - Lookup accesses to CSysMatrix to avoid linear searches, the small increase in memory usage can be mitigated by sharing these lookup tables/arrays and the sparsity pattern between matrices associated with the same geometry (on the subject of these lookup tables, knowing where the diagonal of a row is should enable more efficient upper/lower multiplications). ## Work items; This is a lot of work and some changes will be significant, I will divide the work in steps, off the top of my head this order seems ok:; - CSysMatrix lookups and any required parallel pragmas put in place.; - Point-loop gradients and limiters, no SIMD (at which point I hope #777 to be finished so the next item does not disrupt it).; - Split CSolvers over multiple files, colour-based parallel residual loops (at this point we have hybrid parallel!).;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539523312:3289,depend,dependencies,3289,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539523312,1,['depend'],['dependencies']
Integrability,"arruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:1018,interface,interface,1018,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,2,['interface'],['interface']
Integrability,"ase 4.0.0 (<a href=""https://redirect.github.com/actions/checkout/issues/1447"">#1447</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:10845,depend,dependabot-security-updates,10845,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependabot-security-updates']
Integrability,"ata by Blanchard (1977); ![blanchard_compariosn](https://user-images.githubusercontent.com/28007882/74439558-bf3b7200-4e6c-11ea-881f-dd9567d3508c.png). Once again, the SA roughness model does fairly well as opposed to the SST. 2. Airfoils. If only a part of the wall is rough, as is the case on airfoils with corrosion for ex, we can split the marker definition as follows:. MARKER_HEATFLUX= (wall1, hf1, wall2, hf2 ...); WALL_TYPE= SMOOTH,ROUGH,...; WALL_ROUGHNESS= 0.0, k1... In case there is even a single rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the revie",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:4052,rout,routines,4052,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['rout'],['routines']
Integrability,"ated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2409,integrat,integration,2409,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['integrat'],['integration']
Integrability,"ation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------. Build Configuration Summary:. Source code location: /home/bu/SU2; Install location: 	 /home/bu/SU2; Version: 6.1.0; C++ Compiler: /usr/lib64/mpich/bin/mpicxx; C Compiler: /usr/lib64/mpich/bin/mpicc; Preprocessor flags: -DHAVE_MPI ; Compiler flags: -O3 -Wall; Linker flags: ; MPI support: yes; Metis support: yes; Parmetis support: yes; TecIO support: no; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double no; complex no; codi_reverse yes; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_PARMETIS -I$(top_srcdir)/externals/parmetis/include -DHAVE_METIS -I$(top_srcdir)/externals/metis/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/parmetis/libparmetis.a $(top_builddir)/externals/metis/libmetis.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: no; Build SU2_DEF: no; Build SU2_SOL: no; Build SU2_GEO: no; Build Py Wrapper: no. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=""/home/bu/SU2/bin""; export SU2_HOME=""/home/bu/SU2""; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ```",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:9808,Wrap,Wrapper,9808,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['Wrap'],['Wrapper']
Integrability,"ave expected. . In SU2, I compute the drag force by multiplying CD with the non-dimensional factor written to the forces_breakdown file. For Paraview, I wrote a script which does the following to compute the drag force:; - Load surface flow solution for the wing surface; - Compute surface normals; - Compute Drag = -Pressure*(Normals_X * cos(AoA/180 * 3.1415) + Normals_Z * sin(AoA/180 * 3.1415)); - Integrate this over the whole wing surface to get the total drag force. You can also find this Paraview script attached.; I validated the Paraview script for multiple simple testcases, for which SU2 and Paraview gave me exactly the same drag force. When I applied it to the initial optimization geometry, I however realized, that SU2 computes a drag force of 60.95 N while Paraview gets 143.6 N. Furthermore, for the final optimization geometry, Paraview computes 53.3 N while SU2 gets a drag force of -55.95 N. . To my understanding, the drag computed from pressure integration over the surface should be independent of the solver, the flow conditions and (ideally) even the programme. Furthermore, the Paraview result seems more trustworthy than the SU2 result as SU2 calculates a negative drag, which should physically not be possible, not even with the Euler equations. This leads me to the conclusion that there might be something wrong with the drag computation in SU2 for some geometries. Has anybody encountered a similar issue? Or are there specific criteria a geometry must fulfill in order that the drag is computed correctly?. **To Reproduce**; To reproduce the drag force calculation for either the initial or the final result:; - Open ""Drag Force computation.pvsm"" in Paraview with load state. Open it with the .vtu file you want to analzye; - Read the correct AoA in the forces_breakout.dat file. Then go to ""Calculator1"" in the Paraview script and insert the correct AoA into the formula.; - Read the Paraview Drag result. The script assumes surface normal vectors pointing outwards. ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1716:1507,integrat,integration,1507,https://su2code.github.io,https://github.com/su2code/SU2/issues/1716,1,['integrat'],['integration']
Integrability,avoid calls to blas routines when the data type is not compatible,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/603:20,rout,routines,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/603,1,['rout'],['routines']
Integrability,"aybe you refer to the develop code at the time where these tags were introduced. But maybe sth different. > I guess they converge eventually to the same values. I tried to compare the same case but steady (I attach the summary). Results in this case are fairly similar and (in my opinion) raise no warnings. That is good to hear. ; Luckily @cvencro (Thanks for that 👍 ) ran some tests and found that #740 (which rewrites Euler Wall boundaries for compressible and incompressible flows ... which was me btw) introduces the changes you see. The Euler wall for compressible is changed a bit in the way the boundary condition is enforced. Upon convergence both version should recover (close to) the same value. If the results in a steady state are the same/very-similar and if an unsteady simulation at low enough Reynolds-number converges to the same steady result (or oscillate in the same bounds) -> I would say it is simply some purely numerical effect based on the unphysical initialization and different treatment of the euler wall boundary. . 1 thing one could test additionally is to force a very high convergence in each physical timestep, i.e. usually one converges ~3 orders of magnitude in each ts -> now try converging until residual stalling in each ts. If the code versions get the same/closer results in the temporal evolution my euler wall boundary explanation would be quite reasonable.; Together with the long running unsteady simulation proposed above, I would feel more comfortable to judge. @cvencro (bringing the conversation to this place 😉 ) concerning the pitching case: the `if (dynamic_grid)` statements in the 'old' version are not necessary as that is handled by the numerics class. In the new version an appropriate 'reflected state' is constructed and the numerics container is called to compute the residual. Before, the code of one numerics ->ComputeResidual Routine was simply copied and slightly modified. But of course there is always room for errors 🐛 . Cheers, Tobi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-562621057:2206,Rout,Routine,2206,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-562621057,1,['Rout'],['Routine']
Integrability,"b directory is now in the path, but it seems to work for now.). I'm getting an issue now where the script seems to crash while `Running initial CFD solution`:. ```; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1371,interface,interface,1371,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['interface'],['interface']
Integrability,"be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping factor for the residual restriction: 0.75.; Damping factor for the correction prolongation: 0.75.; No CFL adaptation.; +-------------------------------------------+; | MG Level| Presmooth|PostSmooth|CorrectSmo|; +-------------------------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2903,Integrat,Integration,2903,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Integrat'],['Integration']
Integrability,"binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7175,Message,Message,7175,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Message'],['Message']
Integrability,"both codes deliver the same results (of course with some minor differences). So far so good. Unsteady cases are a bit trickier: the latest 2D results of @RoccoBombardieri show pretty much no difference including the first timesteps. The onera m6 case in contrast converges to the same (steady-state) results for both code version eventually but their initial transient phase differs quite significantly. . A possible explanation for the different initial transient phase: In both implementations a ""reflected state"" is constructed where the normal component of the velocity is subtracted [once in the older code version & twice in the newer version]. I.e. subtracting the normal component of velocity twice means mirroring the velocity along the symmetry plane. The newer code version is a bit ""stronger"" in enforcing the boundary conditions which could lead to the reduced oscillation in CD and CL. If we agree that both code versions produce physically correct results for steady cases and unsteady cases that were integrated long enough in time to get rid of the influence of the initial condition ... then we are left with this initial transient phase that differs. Of course if there is more evidence that one or the other version produces physically ""better"" results I would love to see that. Until then, both initial oscillations are equally correct/uncorrect in my opinion. [I'll add a few words about the adjoint here later]. [I'll add the idea of an FSI case of @cvencro here later where the initial phase has a major impact]; Consider an FSI computation of an airfoil where the trailing edge can exhibit flutter (periodic up-and-down-movement of the trailing edge) in certain flow regimes. Now if during the initial transient the forces on the airfoil are higher than in the converged state then the fluttering can be excited where the initial transient can be seen as an activation energy. If you were to e.g. ramp up flow speed/conditions slowly up to the same magnitude as before one mig",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563314747:1909,integrat,integrated,1909,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563314747,2,['integrat'],['integrated']
Integrability,build(github): use dependent-issues action,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1116:19,depend,dependent-issues,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/1116,1,['depend'],['dependent-issues']
Integrability,"c'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2526,Message,Message,2526,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Message'],['Message']
Integrability,"c3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5129,depend,dependabot-security-updates,5129,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot-security-updates']
Integrability,"ca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CF",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5532,integrat,integration,5532,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"cbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definitions of the Gauss quadrature to be second order.; It can operate in two different modes:. 1) The smoothing can be applied to the mesh sensitivities, either in the complete mesh or only design boundaries. See the picture below for an example of this.; ![PicforSU2](https://user-images.githubusercontent.com/16785869/149150313-a996ecba-fe7f-4de7-983e-560410b840b4.jpeg). 2) It also includes the possibility to take the mesh parameterization into account, compute the derivatives (dM/dp), and smooth the sensitivities w.r.t. the design parameters. This is done by the same AD logic used in SU2_DOT.cpp::SetProjection_AD. The routines are extended, such that AD can compute arbitrary matrix-vector products with the Jacobian of the parameterization and apply the smoothing operator to the gradient. This is a continuation of draft #1439 with a new rebased branch. It has a cleaner commit history and not so much legacy from previous versions. The regression tests for this pull request need the files for the accompanying pull request [su2code/TestCases/pull/88](https://github.com/su2code/TestCases/pull/88). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test cas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:2622,rout,routines,2622,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,1,['rout'],['routines']
Integrability,"ch request to make it clearer. Request: Use nomenclature consistent with the C++ interface (point instead of node, etc.); Reason: People who know the C++ interface will know how to use the python wrapper straight away, people who learn how to use the python wrapper will be able to understand the C++ implementation (without needing a translation layer in their mind all the time). Request: Return connectivity/adjacency as local indices instead of global; Reason: This is the natural way of referencing data in an MPI code, local indices correspond directly to data stored in the partition thereby making it more efficient to access (without global-to-local conversions, which are much more expensive than local-to-global). Furthermore, the local ordering strategy improves the efficiency of loops (over edges, neighboring points, etc.). Request: Do not apply unnecessary ""transformations"" to the connectivity/adjacency as part of the API; Reason: Increases the maintenance burden and makes for a less versatile API. By returning the local indices that form a marker or element, it is trivial to retrieve any other data for those indices (the ""transformation""). For example, the solution at those points, the point coordinates, whether the points are halo or domain points, the global indices, etc.; This way, by adding a **single** function to the API e.g. get the global index of a point of element, the functionality of the API grows a lot more because the user can apply the function to **any** connectivity/adjacency function. Request: Do not offer too many overloads of the same function; Reason: Increases the maintenance burden and it's returning the data in structures that are not very efficient, namely vector of vectors. It is much easier to offer domain-wide data access on the python side, as a very small function that can be part of wrapper utilities (i.e. live only in python but not c++). It may even be more efficient since you make a numpy array/matrix instead of lists of lists.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827:1875,wrap,wrapper,1875,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1402197827,2,['wrap'],['wrapper']
Integrability,"cio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from ../externals/tecio/teciompisrc/ZoneHeaderWriterAbstract.h(3),; from ../externals/tecio/teciompisrc/ClassicZoneHeaderWriter.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.h(2),; from ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp(1):; /usr/local/include/boost/type_traits/is_function.hpp(23): catastrophic error: cannot open source file ""boost/type_traits/detail/is_function_cxx_03.hpp""; #include <boost/type_traits/detail/is_function_cxx_03.hpp>; ^; Is boost required for installing SU2? I have compiled this using Intel parallel studio 2018.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619968113:1579,interoperab,interoperable,1579,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113,1,['interoperab'],['interoperable']
Integrability,"code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6518,depend,dependabot,6518,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['depend'],['dependabot']
Integrability,"code></a> fix typo with v3 artifact downloads in migration guide</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d00351bf698398c17253d21cf8f90e57a344e14b""><code>d00351b</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependab",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6036,Depend,Dependabot,6036,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6315,depend,dependabot-security-updates,6315,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['depend'],['dependabot-security-updates']
Integrability,"com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15883,Depend,Dependabot,15883,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Depend'],['Dependabot']
Integrability,"com/mheap/github-action-required-labels/issues/55"">#55</a>)</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6057,depend,dependabot,6057,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['depend'],['dependabot']
Integrability,"compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:11113,depend,dependabot,11113,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6704,Depend,Dependabot,6704,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"connectivities,; const Matrix& coords,; const Matrix& phi,; const VectorOfMatrix& grad,; const Matrix& limiter,; RowMajorMatrix& residual,; SparseMatrix& matrix); {; using FltVec = Array<double,SIMDLEN>;. residual.setZero();; matrix.setDiagZero();. size_t color = 0;; for(const auto& connectivity : connectivities); {; #pragma omp parallel for schedule(dynamic,CHUNK_SIZE); for(size_t iEdge=0; iEdge<connectivity.size(); iEdge+=SIMDLEN); {; auto iPoint = connectivity.first_vec(iEdge);; auto jPoint = connectivity.second_vec(iEdge);. FltVec d_ij[MAXNDIM];; for(size_t iDim=0; iDim<nDim; ++iDim); d_ij[iDim] = (coords.getVec(jPoint,iDim)-coords.getVec(iPoint,iDim))*0.5;. FltVec phiL[MAXNVAR], phiR[MAXNVAR], flux[MAXNVAR],; blk_i[MAXNVAR*MAXNVAR],; blk_j[MAXNVAR*MAXNVAR];. for(size_t iVar=0; iVar<nVar; ++iVar); {; // Reconstruction goes here. flux[iVar] = (phiL[iVar]+phiR[iVar])*0.5;; }. // some silly way to make the Jacobians depend on the reconstruction; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t jVar=0; jVar<nVar; ++jVar); blk_j[iVar*nVar+jVar] = (phiL[iVar]*phiR[jVar]-phiL[jVar]*phiR[iVar])*0.5;. // the matrix-matrix multiplications; for(size_t i=0; i<WORKITERS; ++i) {; // blk_i = blk_j * blk_j; for(size_t k=0; k<nVar*nVar; ++k) blk_j[k] = blk_i[k];; }. // something akin to a dissipation term; for(size_t iVar=0; iVar<nVar; ++iVar) {; FltVec sum = flux[iVar];; for(size_t kVar=0; kVar<nVar; ++kVar); sum += blk_j[iVar*nVar+kVar]*(phiL[kVar]-phiR[kVar])*0.5;. // residuals for iPoint and jPoint updated here. matrix.updateBlocks_v(color, iEdge, iPoint, jPoint, blk_i, blk_j);; }; ++color;; }; }; ```; The more WORKITERS we have the better the vectorized code is going to look, I used a conservative number based on:; For the Roe scheme 4 matrices are generated (Jacobian i, Jacobian j, P tensor, P^-1 tensor), each coefficient of those matrices requires a reasonable number of floating point ops, and two of those matrices are indeed multiplied by each other.; So lets say 5 matri",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-539177957:1657,depend,depend,1657,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-539177957,2,['depend'],['depend']
Integrability,"ctions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks, which can be parallelized and retried independently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/act",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3467,depend,dependabot,3467,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"d <file>..."" to update what will be committed). (use ""git checkout -- <file>..."" to discard changes in working directory). modified: .travis.yml. no changes added to commit (use ""git add"" and/or ""git commit -a""). Jairos-Mac-mini:SU2 jaspe$ git commit -am ""This is an update of .travis.yml; for feature_force_read_target_on_AD."". [feature_force_read_target_on_AD 3f2115373] This is an update of; .travis.yml for feature_force_read_target_on_AD. 1 file changed, 2 insertions(+), 2 deletions(-); After that, I issued git push origin feature_force_read_target_on_AD, and; got the error message:. To https://github.com/su2code/SU2.git. ! [rejected] feature_force_read_target_on_AD ->; feature_force_read_target_on_AD (fetch first). error: failed to push some refs to 'https://github.com/su2code/SU2.git'. hint: Updates were rejected because the remote contains work that you do. hint: not have locally. This is usually caused by another repository pushing. hint: to the same ref. You may want to first integrate the remote changes. hint: (e.g., 'git pull ...') before pushing again. hint: See the 'Note about fast-forwards' in 'git push --help' for details.; I issued then git pull origin develop, to merge changes in remote to my; local branch, successfully , but a new git push origin; feature_force_read_target_on_AD, produced the same error message.; Would be the first commit command enough?. With kind regards,. Jairo. On Tue, Oct 30, 2018 at 7:25 PM Thomas D. Economon <notifications@github.com>; wrote:. > Hi @jaspe55 <https://github.com/jaspe55> - thanks for the first; > contribution!; >; > Can you please switch the email and branch name in .travis.yml back to; > su2code-dev@lists.stanford.edu and develop, respectively? That should get; > the tests running so we can give this a proper review (should be quick; > given the small change).; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/6",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-434929137:1229,integrat,integrate,1229,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-434929137,1,['integrat'],['integrate']
Integrability,"d `WALL_TIME` is supposed to hold the . > Current average wall-clock time for one iteration. as per the documentation and dry-run output. However, the screen and history outputs of this field do not seem to actually represent this value. The screen-output of the 0th inner iteration of each time-iteration seems to represent the accumulated WCT since the last output (or restart file) was written. What the screen- and history-output of other inner iterations within a timestep mean is not obvious. See attached discussion for more details. **Expected behaviour**; During transient simulations the `WALL_TIME` history output should either be the average WCT for one time-iteration or the accumulated WCT since simulation start.; The screen output of `WALL_TIME ` should either be the average WCT for a time-iteration ( thus the same for all inner iterations ) or (better) correctly compute the average WCT of one inner iteration. **To Reproduce**; See attached mesh and config, but any transient simulation with activated WALL_TIME and implicit time integration should do.; [MeshAndConfig.zip](https://github.com/su2code/SU2/files/8034224/MeshAndConfig.zip). **Desktop (please complete the following information):**; - OS: SLES 15; - C++ compiler and version: icpc (intel 19.0.5.281); - MPI implementation and version: intelMPI 2019; - SU2 Version: 7.3.0 (master/develop). <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** February 8, 2022</sup>; Hi All!. I'm currently running transient, 2D axisymmetric simulations of an oscillating resonator. For now I'm still in the validation and testing phase, but the results look promising!. However, I've noticed that solver performance (as in Time/Iteration) seems to degrade over runtime, so I wanted to measure that by including `WALL_TIME` in screen and history output. I still have trouble understanding the outputs, though. The screen output looks like this:. > +-------------------------------------; > | Time_Iter| Inn",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1542:1167,integrat,integration,1167,https://su2code.github.io,https://github.com/su2code/SU2/issues/1542,1,['integrat'],['integration']
Integrability,"d for that. Maybe here the root cause for the cht problems is hidden as well. ## CHT Pin Array setup 2D. Here things get really weird. . 1. With low iteration count it looks like the primal-only restart works perfectly and only the solid residual of temperature is flawed; 2. With higher iteration counts the solid temperature is still different but now both restarted mean flow residuals are not in line with the X+1 iteration simulation ... what?. (p, vx, vy, T_fluid, T_solid); 10 Iterations; ```; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -5.8150835186; -4.5580336629 -4.71337114354 -4.64920624665 1.52390474896 -6.27627665971; ```. 200 Iterations; ```; -12.6894989871 -13.0272466772 -12.776380701 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.17890161426; -12.6894989199 -13.0272465259 -12.7763807181 -1.01446550457 -7.30259065606; ```. 200 Iterations (No CHT interface at all, i.e. still ""multizone"" but no coupling between the zones); ```; -12.6993664689 -13.037441642 -12.7880987801 -0.895636121058 -16.5806369934; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; -12.6993665267 -13.0374417614 -12.7880988088 -0.895636121058 -16.1994417242; ```. 2000 Iterations; ```; -17.5073098614 -17.7104073858 -17.9003808832 -3.34538088409 -9.30160418764; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.30160418771; -17.4072816449 -17.5306206426 -17.7140334705 -3.34538088409 -9.425709713; ```. Also note that the residual for the adjoint-restart is better than expected, and not even by a tiny amount. This naturally leads to the hypothesis that the direct-solution is not reset after the CLEAR_INDICES run. But that is the case, I checked and I also Print the DirectResdiual for all DIrectIterations (2 flow + 2 mesh ones) and they are always the same. If the residual were to drop dramatically for the adjoint restart th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1395:3468,interface,interface,3468,https://su2code.github.io,https://github.com/su2code/SU2/issues/1395,1,['interface'],['interface']
Integrability,"d non-dimensionalization is more readible this way. Furthermore the convergence history uses the same table class. Let me know what you think. Any comments are appreciated. ```; ------------------------ Physical Case Definition -----------------------; Compressible RANS equations.; Turbulence model: Spalart Allmaras; Hybrid RANS/LES: No Hybrid RANS/LES; Mach number: 0.15.; Angle of attack (AoA): 10 deg, and angle of sideslip (AoS): 0 deg.; Reynolds number: 6e+06. Reference length 1.; No restart solution, use the values at infinity (freestream).; Non-Dimensional simulation (P=1.0, Rho=1.0, T=1.0 at the farfield).; The reference area is 1 m^2.; The semi-span will be computed using the max y(3D) value.; The reference length is 1 m.; Reference origin for moment evaluation is (0.25, 0, 0).; Surface(s) where the force coefficients are evaluated: airfoil. Surface(s) plotted in the output file: airfoil.; Input mesh file name: n0012_225-65.su2. ---------------------- Space Numerical Integration ----------------------; Roe (with entropy fix = 0.001) solver for the flow inviscid terms.; Standard Roe without low-dissipation function.; Second order integration in space, with slope limiter.; Venkatakrishnan slope-limiting method, with constant: 0.03. ; The reference element size is: 1. ; Scalar upwind solver for the turbulence model.; Second order integration in space with slope limiter.; No slope-limiting method. ; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-10.; Max number of linear iterations: 5.; V Multigrid Cycle, with 3 multigrid levels.; Damping",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:2244,Integrat,Integration,2244,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Integrat'],['Integration']
Integrability,"d on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please join the discussion [here](https://github.com/orgs/community/discussions/29534) in the official GitHub community!. #### I have another question / how do I get in touch?; Please join the discussion [here](https://github.com/orgs/community/discussions/29534) to ask further questions and send us suggestions!. </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:4391,integrat,integrated,4391,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['integrat'],['integrated']
Integrability,"d-artifact/commit/d00351bf698398c17253d21cf8f90e57a344e14b""><code>d00351b</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/509"">#509</a> from markmssd/patch-1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6135,depend,dependency-name,6135,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['depend'],['dependency-name']
Integrability,"d-point iterate with the basis vectors, the Newton step is cheap as n is small). The residuals are obtained from a fully coupled adjoint CHT problem (2d heated cylinder in laminar flow) with a heatflux objective function. ![plot](https://user-images.githubusercontent.com/22639394/122736716-9ad18000-d280-11eb-9983-c2d47d434dc5.png). (Purple: No correction applied, Green/Blue: Usage of 1-dim. basis after extraction of one basis vector at around 500 iterations, Yellow: MPI run with two processes using the manual but MPI-compatible Gram-Schmidt-QR-decomposition for identification of basis vectors.); ; **The code is WIP.** It needs a lot of additions, changes and testing, though the overall structure should be clear from what's already implemented. ToDo's:; - Remove Eigen dependencies, not needed anymore; - Add a meaningful testcase; - Add eigenvalue estimation / QR criterion values to screen and history output fields; - Implement a basisMaintenance()-routine; - Figure out a proper base class for both `CQuasiNewtonInvLeastSquares` and `CNewtonUpdateOnSubspace`; - Figure out further algorithmic strategies for multiphysics problems, now the default is to create the basis in the outer loop, and to apply it for corrections in the inner. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if nece",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1217:1642,depend,dependencies,1642,https://su2code.github.io,https://github.com/su2code/SU2/pull/1217,2,"['depend', 'rout']","['dependencies', 'routine']"
Integrability,"d.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 files install successfully.** . `WARNING: the currently checked out submodule commit in C:\Users\Danie\Documents\SU2\externals\opdi does not match the SHA-1 found in the index.; Use 'git submodule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:2100,Wrap,Wrapper,2100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Wrap'],['Wrapper']
Integrability,"d8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6176,Depend,Dependabot,6176,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['Depend'],['Dependabot']
Integrability,"date README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9704,Depend,Dependabot,9704,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,17,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"date4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../externals/metis/libmetis -I../externals/parmetis/include -I../externals/parmetis/libparmetis -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1391,depend,dependency,1391,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,2,"['Message', 'depend']","['Message', 'dependency']"
Integrability,"dd dependencies more easily since most libraries have CMake support. vcpkg is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use preconfigure.py anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is ${CMAKE_PREFIX_PATH}/bin. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile pySU2ad with Nothing known about namespace 'medi' in Common/include/mpi_structure.hpp:57 without -includeall SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing using namespace declarations and either importing used symbols explicitly with using or prepending namespace name, clang-tidy warns against them by default and it makes the code clearer. SU2 CMake options are:. * Build modules:; * SU2_BUILD_CFD: ON|OFF; * SU2_BUILD_DEF: ON|OFF, disabled when building with Codi; * SU2_BUILD_DOT: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_GEO: ON|OFF, disabled when building with Codi; * SU2_BUILD_MSH: ON|OFF, disabled when building with Codi; * SU2_BUILD_PY_WRAPPER: ON|OFF, disabled when building with Codi forward; * SU2_BUILD_SOL: ON|OFF, disabled when building with Codi; * Enable modules:; * SU2_ENABLE_CGNS:; * SU2_CGNS_CPPFLAGS: flags to pass when compiling CGNS; * SU2_ENABLE_CODI: no|forward|reverse; * SU2_CODI_CPPFLAGS: flags to pass to SU2 modules when compiling with Codi; * SU2_ENABLE_METIS: ON|OFF; * SU2_METIS_CPPFLAGS: flags to pass when ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:1413,wrap,wrapper,1413,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,2,['wrap'],['wrapper']
Integrability,"de12 -&gt; node16), which can break users using an out-of-date/fork of the runner. This would be most commonly affecting users on GHES 3.3 or before, as those runners do not support node16 actions and they can use actions from github.com via <a href=""https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/managing-access-to-actions-from-githubcom/enabling-automatic-access-to-githubcom-actions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload siz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1312,depend,dependabot,1312,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7853,depend,dependency,7853,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability,"different other programs as well. The built was successful but SU2 does not run and fails with the following error. I tried it with mpich v3.3.1 as well (my previous SU2 v6.2 was running on this). ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ SU2_CFD; [arch-linux-hp-probook-g3-450:590584] *** Process received signal ***; [arch-linux-hp-probook-g3-450:590584] Signal: Segmentation fault (11); [arch-linux-hp-probook-g3-450:590584] Signal code: Address not mapped (1); [arch-linux-hp-probook-g3-450:590584] Failing at address: 0x440000e8; [arch-linux-hp-probook-g3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000:1223,message,message,1223,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000,1,['message'],['message']
Integrability,"direct.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <cod",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4455,depend,dependabot,4455,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"discadj_arina2k fails with some mpi error, but it does not fail when I run it on my local machine. Not sure what is going on here. ```; Clearing the computational graph.; [9c7d9f63f200:01637] *** An error occurred in MPI_Allgather; [9c7d9f63f200:01637] *** reported by process [4177330177,1]; [9c7d9f63f200:01637] *** on communicator MPI_COMM_WORLD; [9c7d9f63f200:01637] *** MPI_ERR_TRUNCATE: message truncated; [9c7d9f63f200:01637] *** MPI_ERRORS_ARE_FATAL (processes in this communicator will now abort,; [9c7d9f63f200:01637] *** and potentially your MPI job). ```; There is another case that sometimes fails due to the tight tolerance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196:393,message,message,393,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1415450196,1,['message'],['message']
Integrability,"don't have root access. **Firstly, I cloned the latest repo (per Nov 3, 2021), and then run the following meson command.**; `./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1112,depend,dependency,1112,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['depend'],['dependency']
Integrability,"dule update --init C:\Users\Danie\Documents\SU2\externals\opdi' to reset the module if necessary.; SHA-1 tag stored in index does not match SHA tag stored in this script.; The Meson build system; Version: 0.54.999; Source dir: C:\Users\Danie\Documents\SU2; Build dir: C:\Users\Danie\Documents\SU2\build; Build type: native build; Project name: SU2; Project version: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1339,depend,dependency,1339,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,2,['depend'],['dependency']
Integrability,"dy detailed in #591. I added a table output class for structuring screen output. As a first step I used it for the preprocessing output, but it will eventually be also used in the new output structure that follows soon. I am pretty sure there are more places where a table can be helpful for readability, but we can make these changes as we go. Note: the convergence output is not affected yet!. The class is added in a folder called ""Common/toolboxes"". My intention is that in the future we will add there more small helper tools/classes, which are essentially independent of the rest of the code. . Below you find an example output of the current preprocessing:. ```. ---------------------- Space Numerical Integration ----------------------; Jameson-Schmidt-Turkel scheme (2nd order in space) for the flow inviscid terms.; JST viscous coefficients (2nd & 4th): 0.5, 0.02.; The method includes a grid stretching correction (p = 0.3).; Scalar upwind solver for the turbulence model.; First order integration in space.; Average of gradients with correction (viscous flow terms).; Average of gradients with correction (viscous turbulence terms).; Gradient Computation using weighted Least-Squares method. ---------------------- Time Numerical Integration -----------------------; Local time stepping (steady state simulation).; Euler implicit method for the flow equations.; FGMRES is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. ----------",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:1074,integrat,integration,1074,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['integrat'],['integration']
Integrability,"e -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/FDa/FDa045/programs/SU2/SU2-7.2.1 -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/home/FDa/FDa045/programs/intel/2020_update4/mkl`. **meson results:**. > Project name: SU2; Project version: 7.2.1 ""Blackbird""; C compiler for the host machine: cc (gcc 4.8.5 ""cc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C linker for the host machine: cc ld.bfd 2.27-27; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/FDa/FDa045/anaconda3/bin/python3); Found pkg-config: /usr/bin/pkg-config (0.27.1); mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; mpic++ found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpic++) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Found CMake: /home/FDa/FDa045/programs/cmake/cmake-3.17.3/bin/cmake (3.17.3); Run-time dependency mkl-static-lp64-seq found: NO (tried pkgconfig and cmake); Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/FDa/FDa045/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/FDa/FDa045/programs/SU2/SU2_PY/pySU2/install.sh). **Next, I copied the 4-line output needed for .bashrc, and run ninja.**; `./ninja -j36 -C build install`. **Then, I got the following errors:**. > ninja: Entering directory `build'; [691/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; FAILED: SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o; c++ -ISU2_CFD/src/libSU2core_AD.a.p -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -Iexternals/cgns -I../externals/cgns -I../externals/metis/include -I../externals/metis/GKlib -I../exte",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:1273,Message,Message,1273,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['Message'],['Message']
Integrability,"e BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5270,depend,dependabot,5270,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"e bug**; When creating a CDriver instance, for example through the Python wrapper, with an MPI communicator which is defined only on a subset of the processes on which the MPI library was initialised, SU2 will deadlock. This seems to be because most of the MPI communication and synchronisation operations in SU2 explicitly refer to the global `MPI_COMM_WORLD`. The issue arose when attempting to control several Euler/RANS SU2 `CSinglezoneDriver` and `CDiscAdjSinglezoneDriver` instances in parallel (i.e. simultaneously) within a larger optimisation code, which provides each analysis with a subset of the ranks in its own MPI communicator. Naively replacing _all_ references to `MPI_COMM_WORLD` with `SU2_MPI::GetComm()` throughout the code (except where it is defined, and where it is used to initialise the MPI wrapper in the SU2_XXX.cpp files) prevents the deadlock and results in the desired behaviour. However, I imagine that this ""fix"" may well cause all sorts of issues outside of my own, limited use case. **To Reproduce**; The issue can be reproduced with any SU2_CFD configuration file and mesh, run in parallel using the Python wrapper as follows: ; ```; from mpi4py import MPI; import pysu2 # or pysu2ad. filename = 'example.cfg'; zones = 1. rank = MPI.COMM_WORLD.Get_rank(); size = MPI.COMM_WORLD.Get_size(). group = MPI.COMM_WORLD.group.Excl([0]) # exclude the first rank; comm = MPI.COMM_WORLD.Create_group(group). if comm: # is False only on the excluded rank; print(""Running SU2 on global rank {} of {} ... "".format(rank, size)). # create SU2 instance -- will hang during Geometry preprocessing; instance = pysu2.CSinglezoneDriver(filename, zones, comm). else:; print(""Doing nothing on global rank {} of {} ... "".format(rank, size)). ```. **Desktop (please complete the following information):**; - OS: Redhat 7.7; - C++ compiler and version: g++ (GCC) 4.8.5; - MPI implementation and version: MPICH 3.2.1; - SU2 Version: 7.0.2 ""Blackbird"" (looks to be reproducible on 7.1.0 also)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1179:1155,wrap,wrapper,1155,https://su2code.github.io,https://github.com/su2code/SU2/issues/1179,1,['wrap'],['wrapper']
Integrability,"e code in the code base for screen output like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Add any other context or scre",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:979,message,messages,979,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['message'],['messages']
Integrability,"e current release have the latest code from master, and additionally allows for a new automation workflow to execute to automate the sliding of the major (v1, v2, v3, etc) version numbers for ease of referencing</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-release-asset/commit/e8f9f06c4b078e705bd2ea027f0926603fc9b4d5""><code>e8f9f06</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/27"">#27</a> from actions/IAmHughes/add-automated-versioning</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/14187540b829095dbe6f33eb1b166503318e9ceb""><code>1418754</code></a> Add versioning action to automatically slide major versions with releases</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/7d8fb6c931cb341bda0f898a0d2191cf54abc69a""><code>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependenc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:1388,depend,dependabot,1388,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['depend'],['dependabot']
Integrability,"e cuts).; Distributing ParMETIS coloring.; Rebalancing vertices.; Rebalancing volume element connectivity.; Rebalancing markers and surface elements.; 6403 vertices including ghost points. ; 11338 interior elements including halo cells. ; 11338 triangles.; Establishing MPI communication patterns.; Identify vertices.; Storing a mapping from global to local point index. ------------------------- Solution Postprocessing -----------------------. Error in ""void CBaselineSolver::SetOutputVariables(CGeometry*, CConfig*)"": ; -------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 17 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] PMIX ERROR: UNREACHABLE in file server/pmix_server.c at line 2079; [hongwei-Workstation:07803] 23 more processes have sent help message help-mpi-api.txt / mpi-abort; [hongwei-Workstation:07803] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages; ```; ```; hongwei@hongwei-Workstation:~/SU2_RUN/QuickStart$ singularity exec su2.sif SU2_SO",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/739#issuecomment-514630913:4695,depend,depending,4695,https://su2code.github.io,https://github.com/su2code/SU2/issues/739#issuecomment-514630913,1,['depend'],['depending']
Integrability,"e fluids, which are solids) without a bunch of a priori or 'hard coded' assumptions. I intend to develop it further in near future which basically means to incorporate the existing sorts of interfaces (mixing plane, FSI, .. maybe it works out).; 1. A new finite-volume-based heat solver (CHeatSolverFVM). It can be run stand-alone in solids for pure heat conduction or weakly coupled to the incompressible mean flow solver.; 1. A new CTransfer child class (CTransfer_ConjugateHeatVars) to exchange CHT-related interface information. Most of these commits do not touch existing code but just use it. Exceptions are:; 1. Quite a few config options.; 1. A small new data structure in CDriver to store types of interfaces that is used by CMultiPhysicalZonesDriver. Some additions in **Interface_Preprocessing**.; 1. A change of **SetCFL_Number** so that the CFL adaption works for multiple zones. @salvovitale : One of your test cases is a multi-zones one that uses CFL adaption (the Jones one). This commit of course changes the solver behaviour in that case. I saw that you are averaging CFL numbers - maybe these problems are connected? Could you check if the test case is still alright? For now, I had to change the regression test values.; 1. Some more else if(...)-cases in output_structure.cpp... As this is my first pull request, it's very likely that I missed some good-practices. I would like to point out that many of the commits contain _purely copied code_.; There was always some reason when it could not re-use it, but please be a bit indulgent if I missed to reference the credits. I just don't know where to.. if something attracts your attention, I will change it asap :-) Furthermore I should mention that; 1. This branch contains are very **naive couling procedure**. I will add Robin-like BC's and conservative energy correction routines when I feel comfortable about them.; 1. The **discrete adjoint version** of all this works fine. I will add it, too, if you like these additions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/505:2005,rout,routines,2005,https://su2code.github.io,https://github.com/su2code/SU2/pull/505,1,['rout'],['routines']
Integrability,"e: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2269,Depend,Dependency,2269,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Depend'],['Dependency']
Integrability,"e></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/761"">actions/setup-python#761</a></li>; </ul>; <h2>New Contributors</h2>; <ul>; <li><a href=""https://github.com/FerranPares""><code>@​FerranPares</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/628"">actions/setup-python#628</a></li>; <li><a href=""https://github.com/timfel""><code>@​timfel</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/694"">actions/setup-python#694</a></li>; <li><a href=""https://github.com/jeffwidman""><code>@​jeffwidman</code></a> made their first contribution in <a href=""https://redirect.github.com/actions/setup-python/pull/724"">actions/setup-python#724</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.8.0"">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>; <h2>v4.7.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=""https://github.com/dependabot""><code>@​dependabot</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/702"">actions/setup-python#702</a></li>; <li>Add range validation for toml files by <a href=""https://github.com/dmitry-shibanov""><code>@​dmitry-shibanov</code></a> in <a href=""https://redirect.github.com/actions/setup-python/pull/726"">actions/setup-python#726</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/setup-python/compare/v4...v4.7.1"">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>; <h2>v4.7.0</h2>; <p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=""https://redirect.github.com/actions/setup-python/pull/669"">actions/setup-python#669</a>).</p>; <pre lang=""yaml""><code> - name: Setup Python; uses: actions/setup-python@v4; &lt;/tr&gt;&lt;/table&gt; ; </code></pre>; </blockquote>; <p>... (tr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:3706,wrap,wrap,3706,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['wrap'],['wrap']
Integrability,"e></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker image</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/964"">Wrap pipeline commands for submoduleForeach in quotes</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1029"">Update <code>@​actions/io</code> to 1.1.2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1039"">Upgrading version to 3.2.0</a></li>; </ul>; <h2>v3.1.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/939"">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/922"">Add <code>github-server-url</code> input</a></li>; </ul>; <h2>v3.0.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/770"">Add input <code>set-safe-directory</code></a></li>; </ul>; <h2>v3.0.1</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac""><code>3df4ab1</code></a> Release 4.0.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:8823,Wrap,Wrap,8823,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['Wrap'],['Wrap']
Integrability,"earch group at UT Austin has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see [their documentation](https://www.gnu.org/software/automake/manual/html_node/Tests.html). Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. ```; ./bootstrap; ./configure; make; make check; ```. We use [Boost's unit testing framework](https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html). This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:2574,integrat,integrated,2574,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['integrat'],['integrated']
Integrability,"easier implementation experience. Certainly, this is not the only consideration but it should be taken into account. Currently, resulting from the significant contributions of the members of this developers group, SU2 implementation works like a charm. I think we should strive to conserve this feature, especially if we aim at attracting more users and developers into the community. (...). >@vdweide; >(...) @bmunguia and @EduardoMolina, what type of application did you have in mind for PETSc? The only thing I can think of is a full Newton solver. And no matter how much I like PETSc, @juanjosealonso and @erangit have a point here. Looks like I start to belong to the group of old conservatives as well.... >@economon ; >(...) If you really would like to give PETSc a shot, I recommend talking with @anilvar who had an interface for connecting it to SU2 in one of our branches. >@pcarruscag; >(...) being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD. (...). >@EduardoMolina; >(...) When Brian (@bmunguia ) and I mentioned PETSc, it was an idea to try a different Newton-Krylov (with preconditioner) library in order to improve the convergence of SU2.; Since the slow convergence of the SU2-FV is the main feedback that I received from other users from industry and academia, I think it worth try an external library and evaluate the performance. (...). >@pcarruscag ; >(...) That is something I am also interested in as for some of my structural cases the current linear solvers simply do not converge. (...). >@economon ; >I would add one practical comment for consideration: it is worth checking whether the main restriction we have is related to approximations in the Jacobian that limit the effective CFL we can use or whether the convergence of the linear solver itself is a problem (speed or complete lack of convergence). A quick test without re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/648#issuecomment-460853218:2535,integrat,integration,2535,https://su2code.github.io,https://github.com/su2code/SU2/issues/648#issuecomment-460853218,2,['integrat'],['integration']
Integrability,"econditioner, and matrix-vector product) have a single template parameter, the data type (which can be passivedouble or su2double). There are no provisions for ""mixed"" arithmetic, except in CSysSolve where through ::Solve (and only through ::Solve) one can ask for the solution of a system with passive Jacobian and active RHS and solution (this is possible at the expense of temporaries that are allocated only once). Passive-Passive and Active-Active work without temporaries and Active-Passive is not supported as it does not make sense (see end of previous paragraph). This is to keep the need for template specialization to a minimum. Wherever mixing types was necessary small helper methods were defined to provide the compatibility instead of specializing larger methods, I think this keeps the code readable. The place where passive and active types mix the most is CSysMatrix. This happens because the blocks are prepared by the numerics in **su2double and are then ""Set"", ""Add"", or ""Subtract"", on a CSysMatrix<passivedouble>. The solution was to inline those routines and template them also for the data type of the block (or diagonal). I only tested on one fluid adjoint and one FSI adjoint case (fingers cross not to fail too many tests). ## Related Work; #594 Does not help with memory much but helps with speed.; #648 Makes it easier to interface with an external solver and still work with the discrete adjoint.; #650 Builds on top of what is proposed there.; #543 These MKL optimizations will now be possible for the discrete adjoint but I have not made them available yet.; Branch *feature_template_linear_solver*. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/653:1546,rout,routines,1546,https://su2code.github.io,https://github.com/su2code/SU2/pull/653,2,"['interface', 'rout']","['interface', 'routines']"
Integrability,"ective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I propose changing it. Even though the name has gradient in it, this scaling is applied to both, the objective/constraint, and its gradient. I would like to change the name to OPT_GLOBAL_FACTOR. The reason why this is **global** and different from the objective/constraint scaling is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:3579,rout,routine,3579,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['rout'],['routine']
Integrability,ectory `/home/bu/SU2/SU2_AD'; make: *** [SU2_AD] Error 2; ```; Following is the config log:; ```; checking build system type... x86_64-unknown-linux-gnu; checking host system type... x86_64-unknown-linux-gnu; checking target system type... x86_64-unknown-linux-gnu; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checkin,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:3644,depend,dependency,3644,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['depend'],['dependency']
Integrability,"ed, May 27, 2020 at 12:29 PM Juan J. Alonso <notifications@github.com>; > wrote:; > ; > > Monika,; > >; > > There is a chance we could work together on this…Eduardo Molina (copied); > > co-advised a short project last year on wall functions which made some; > > progress but did not finalize an implementation. It may be a better; > > starting point. Eduardo, can you comment where that code went?; > >; > > I am also copying Matt S. who is interested in wall function; > > implementations in SU2. Perhaps we can get everyone on the same page to get; > > these working in the baseline state…and then improve them in various ways?; > >; > > Best,; > >; > > Juan; > >; > >; > > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > > wrote:; > > >; > > >; > > > Sure, now make sense why it is showing issues, Thank you for the; > > > confirmation!; > > >; > > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > > > wrote:; > > >; > > > > I gave the wall function routines a cleanup in #975; > > > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > > > missing, we compute the shear stresses but they are not considered in; > > the; > > > > BC's of the NS solver.; > > > >; > > > > —; > > > > You are receiving this because you commented.; > > > > Reply to this email directly, view it on GitHub; > > > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > > > > unsubscribe; > > > > <; > > https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA; > > >; > > > > .; > > > >; > > >; > > >; > > > --; > > > *Thank you,*; > > >; > > > *Monika Chauhan *; > > >; > > > *Graduate Research Assistant, Doctoral Program*; > > >; > > > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA; > > 24061*; > > > *Cell# 540-998-5012*; > > > —; > > > You are receiving this because you commented.; > > > Reply to this email directly, view it on GitHub <; > > https://github.com",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-635018259:2005,rout,routines,2005,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-635018259,1,['rout'],['routines']
Integrability,"ed.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running compile:; Working directory: C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32; Command line: c++ C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\testfile.cpp -o C:\Users\MANUEL~1\AppData\Local\Temp\tmpctmi2f32\output.obj -pipe -c -std=c++11 ; ; Code:; int i = static_cast<int>(0);; Compiler stdout:; ; Compiler stderr:; ; Compiler accepts -std=c++11: YES; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8826,Wrap,Wrapper,8826,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Wrap'],['Wrapper']
Integrability,"ef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15561,depend,dependabot-security-updates,15561,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependabot-security-updates']
Integrability,"ef=""https://github.com/mheap/github-action-required-labels/commit/e33092117bdd8c435e9b654d53726c6936f19518""><code>e330921</code></a> Only use a single comment when the action fails (<a href=""https://redirect.github.com/mheap/github-action-required-labels/issues/53"">#53</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/mheap/github-action-required-labels/compare/v3...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mheap/github-action-required-labels&package-manager=github_actions&previous-version=3&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:6086,depend,dependabot-automerge-start,6086,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,4,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"ef=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7678,depend,dependabot-security-updates,7678,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['depend'],['dependabot-security-updates']
Integrability,"ek, _Computational Fluid Dynamics: Principles and Applications_ . According to Blazek, (chapter 8.6) 4 conditions have to be met on a symmetry plane:. 1. No flux across the boundary; 2. $\overline n \cdot \nabla \phi = 0$ (gradient of scalars are zero); 3. $\overline n \cdot \nabla (\overline U \cdot \overline t) = 0$ (gradient of tangential velocity normal to boundary); 4. $\overline t \cdot \nabla (\overline U \cdot \overline n) = 0$ (gradient of normal velocity along the boundary). Points 2-4 all deal with gradients and can be dealt with in the gradient computation, i.e. Green-Gauss or Least Squares. According to Blazek, 2 approaches can be followed. ""One possibility is to construct the missing half of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity on the symmetry plane; -> This seems to work fine; 4. Multiple symmetry planes, including Euler walls; -> T",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:1077,rout,routines,1077,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['rout'],['routines']
Integrability,"eleases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15793,depend,dependabot-automerge-start,15793,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"endencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading cache content from Azure. This should help improve download performance and reliability as the SDK downloads files in 4 MB chunks",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1844,depend,dependabot,1844,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"ently) CMake under the hood. For specific packages that don’t play nicely with pkg-config, it will look for other similar utilities, such as llvm-config for the LLVM library. I have a beef mostly with documentation, but that’s hardly unusual in the open source world, and maybe not so relevant to SU2, which doesn’t have the multitude of external dependencies that many open source projects do. I think the struggles I have had relate mostly to the non-transparent way that Meson interacts with the underlying utilities (pkg-config, CMake, llvm-config,…). For example, I had to fumble around to get Meson to find llvm-config in a non-standard location (adding that location to $PATH turned out to be the answer), as well as to get pkg-config to find its required pkgconfig directories in non-standard locations (adding them to $PKG_CONFIG_PATH was the answer there). I also had to build/install Python 3 (required by Meson), and found that the Python 3.7 has problems with OpenSSL (module _ssl), on which Meson depends, so I went back to Python 3.6. I imagine any pre-built Python 3.7 would be fine, though a related bug appears to still be open (https://bugs.python.org/issue34028). On Windows, Meson will output Visual Studio projects, which would make any Windows developer happy, but your source still has to be cross-platform friendly—not a problem for TecIO, but I don’t know if that’s true elsewhere in SU2. FWIW,. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Wednesday, May 22, 2019 7:31 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). To see a major advantage, just compare the meson.build and the configure.ac file ... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/685?email_source=notifications&email_token=AADV2HBMTJ7RZMV763KCYPLPWVKIXA5CNFSM4HOUXHQKYY3PNVWW",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494848848:1231,depend,depends,1231,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494848848,1,['depend'],['depends']
Integrability,"ently</li>; <li>Display download progress and speed</li>; </ul>; <h2>v2.0.0</h2>; <p>Initial v2 release</p>; <h2>What's new in v2</h2>; <ul>; <li>Added support for multiple paths (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/16"">actions/cache#16</a>), glob patterns, and single file caches (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/33"">actions/cache#33</a>)</li>; <li>Increased performance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:3893,depend,dependabot,3893,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"ependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9518,depend,dependabot,9518,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"eps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxHiNAbZtzVEvIm0XDsNvQmZ6lrwwks5shEHjgaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3260,integrat,integration,3260,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Integrability,"er Weide's group at the University of Twente.; # - Lab. of New Concepts in Aeronautics at Tech. Institute of Aeronautics.; #; # Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon,; # Tim Albring, and the SU2 contributors.; #; # SU2 is free software; you can redistribute it and/or; # modify it under the terms of the GNU Lesser General Public; # License as published by the Free Software Foundation; either; # version 2.1 of the License, or (at your option) any later version.; #; # SU2 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; # Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public; # License along with SU2. If not, see <http://www.gnu.org/licenses/>. import os, sys, shutil, copy, time; import numpy as np. from .. import io as su2io; from .. import amginria as su2amg; from interface import CFD as SU2_CFD. try :; import pyamg ; except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:2379,interface,interface,2379,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['interface'],['interface']
Integrability,"er=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; e",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1641,Message,Message,1641,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Message'],['Message']
Integrability,"eration. ------------------------------ Begin Solver -----------------------------. Simulation Run using the Single-zone Driver; +----------------------------------------------------------------+; | Inner_Iter| rms[Rho]| rms[nu]| CL| CD|; +----------------------------------------------------------------+; | 0| -5.507608| -6.134199| 0.484414| 0.030848|; | 1| -4.574136| -6.098123| 0.484453| 0.030598|; [...]; | 10| -5.466734| -4.908028| 0.484509| 0.029445|; +-----------------------------------------------------------------------+; | File Writing Summary | Filename |; +-----------------------------------------------------------------------+; |SU2 restart |restart_flow.dat |; Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 88, in parallel_computation; info = SU2.run.CFD(config); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /mnt/cfddata/WLiao/CRJ700_su2/CRJ700_inch_roe_TEST/,; Command = mpirun -np 2 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '139'; [gen2node1:232298:0:232298] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); [gen2node1:232297:0:232297] Caught signal 11 (Segmentation fault: address not mapped to object at address 0x30); #==== backtrace (tid: 232297) ====; 0 0x0000000000012dc0 .annobin_sigaction.c() sigaction.c:0; 1 0x00000000000458b1 opal_obj_run_destructors() /opt/hpcx/sources/openmpi-4.0.2/ompi/../opal/class/opal_object.h:460; 2 0x00000000000458b1 ompi_file_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/file/file.c:153; 3 0x0000000000069056 PMPI_File_close() /opt/hpcx/sources/openmpi-4.0.2/ompi/mpi/c/profile/pfile_close.c:60; 4 0x00000000005a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/971:1592,interface,interface,1592,https://su2code.github.io,https://github.com/su2code/SU2/issues/971,1,['interface'],['interface']
Integrability,"es &amp; optimizations</li>; </ul>; <h2>v2.2.4</h2>; <ul>; <li>Retry on HTTP 500 responses from the service</li>; </ul>; <h2>v2.2.3</h2>; <ul>; <li>Fixes for proxy related issues</li>; </ul>; <h2>v2.2.2</h2>; <ul>; <li>Improved retryability and error handling</li>; </ul>; <h2>v2.2.1</h2>; <ul>; <li>Update used actions/core package to the latest version</li>; </ul>; <h2>v2.2.0</h2>; <ul>; <li>Support for artifact retention</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Add Third Party License Information</li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Use updated version of the <code>@action/artifact</code> NPM package</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Increase upload chunk size from 4MB to 8MB</li>; <li>Detect case insensitive file uploads</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Fix for certain symlinks not correctly being identified as directories before starting uploads</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Support for uploading artifacts with multiple paths</li>; <li>Support for using exclude paths</li>; <li>Updates to dependencies</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:2318,depend,dependencies,2318,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependencies']
Integrability,"es more easily since most libraries have CMake support. `vcpkg` is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use `preconfigure.py` anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is `${CMAKE_PREFIX_PATH}/bin`. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile `pySU2ad` with `Nothing known about namespace 'medi'` in `Common/include/mpi_structure.hpp:57` without `-includeall` SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing `using namespace` declarations and either importing used symbols explicitly with `using` or prepending namespace name, `clang-tidy` warns against them and it makes the code clearer. SU2 CMake options are:; * Build modules:; * `SU2_BUILD_CFD`: `ON|OFF`; * `SU2_BUILD_DEF`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_DOT`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_GEO`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_MSH`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_PY_WRAPPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pass when compiling CGNS; * `SU2_ENABLE_CODI`: `no|forward|reverse`; * `SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; *",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:1190,wrap,wrapper,1190,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['wrap'],['wrapper']
Integrability,"esonbuild.com/Users.html) already use that system (e.g. GNOME, systemd ...) or are transitioning. Compared to autotools and make, building the code should be faster, especially if you build with more cores, as all objects files are build truly in parallel (with make only objects of the same target are build in parallel). Another advantage is that meson has multiplatform support for linux, mac and windows. . ### Why not cmake ?; Meson files are much easier to read and in general it is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Addit",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1213,depend,dependencies,1213,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['depend'],['dependencies']
Integrability,"ew</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:7340,depend,dependabot,7340,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,11,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"ewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3096,integrat,integration,3096,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"f501dc168cd7ef4a4d1f81140a0959a9d4382128 fixes divergence of the `disc_adj_fsi` case among the parallel regression tests that occurred when using the CoDiPack type `RealReverseIndex` instead of `RealReverse`. Since the bug is not obvious from the commit and there might be a better way to fix this, let me put this up for discussion. In `CDiscAdjMultizoneDriver::SetRecording`, the tape is recorded part by part. The part of the code that is at fault involves three of them.; - `DEPENDENCIES -> OBJECTIVE_FUNCTION`: an index is last used on a right hand side; - `OBJECTIVE_FUNCTION -> TRANSFER`: the index is available for reuse and used on the left hand side; - `recording for a zone`: the index is used on a right hand side. In `CDiscAdjMultizoneDriver.cpp::ComputeAdjoints`, however, the `TRANSFER -> OBJECTIVE_FUNCTION` part of the evaluation is skipped in some cases. After the `recording for a zone` evaluation accumulated adjoints for the said index, the adjoint reset that would be performed in the skipped tape part is missing. Instead, the tape evaluation `DEPENDENCIES -> OBJECTIVE_FUNCTION` receives the adjoints for this index, which is wrong because the index is associated with a different primal variable in this part of the tape. Have there been issues regarding dependencies between tape parts previously? Are there mechanisms established that address such issues?. If someone wants to give it a try, I added a build option for the tape type in 183c3ca7a3235c8293cf2242c66c82d35a3922c7. You can switch to the index tape by calling meson with `-Dcodi-tape=JacobianIndex`.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733:479,DEPEND,DEPENDENCIES,479,https://su2code.github.io,https://github.com/su2code/SU2/pull/1294#issuecomment-859603733,3,"['DEPEND', 'depend']","['DEPENDENCIES', 'dependencies']"
Integrability,"fab9dfbc""><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11048,depend,dependabot,11048,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependabot']
Integrability,"ffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x0000000",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5808,integrat,integration,5808,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"fig_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdou",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10080,interface,interface,10080,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['interface'],['interface']
Integrability,"first. (I'm not sure if this is really a great workaround since the whole Python environment lib directory is now in the path, but it seems to work for now.). I'm getting an issue now where the script seems to crash while `Running initial CFD solution`:. ```; (test_env) tim@super:/work/projects/mesh_adapt_testing/A000i_adap/2_cfd$ LD_LIBRARY_PATH=$CONDA_PREFIX/lib:$LD_LIBRARY_PATH SU2_MPI_COMMAND=""mpirun --use-hwthread-cpus -n %i %s"" python /opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py -f inv_test.cfg -n 40 > mesh_adapt.out; ## WARNING: MISSING SU2 MESH FILE KEYWORD: NCORNERS=.; Traceback (most recent call last):; File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 112, in <module>; main(); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 73, in main; options.save_all ); File ""/opt/su2/SU2v7_adap/bin/mesh_adaptation_amg.py"", line 102, in mesh_adaptation_amg; SU2.run.amg(config); File ""/opt/su2/SU2v7_adap/bin/SU2/run/amg.py"", line 220, in amg; SU2_CFD(config_cfd); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/opt/su2/SU2v7_adap/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /work/projects/mesh_adapt_testing/A000i_adap/2_cfd/adap/ini/,; Command = mpirun --use-hwthread-cpus -n 40 /opt/su2/SU2v7_adap/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '254'; cmap[28922] == -1; cmap[28853] == -1; cmap[28858] == -1; cmap[28966] == -1; cmap[28989] == -1; cmap[28943] == -1; cmap[28915] == -1; cmap[28950] == -1; cmap[28923] == -1; cmap[28871] == -1; cmap[28941] == -1; cmap[28887] == -1; cmap[28889] == -1; cmap[37] == -1; cmap[32342] == -1; cmap[24652] == -1; cmap[50507] == -1; cmap[51850] == -1; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; ------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-754504570:1272,interface,interface,1272,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-754504570,1,['interface'],['interface']
Integrability,"for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1881,Message,Message,1881,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Message'],['Message']
Integrability,"from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cp",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5558,integrat,integration,5558,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"g 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4238,depend,dependency,4238,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['depend'],['dependency']
Integrability,"g**; A general centrifugal compressor multi-zone case is simulated. . ![image](https://github.com/su2code/SU2/assets/96534491/e0990051-6996-4835-a6d3-fae00cdd0c88). The computational domain is composed by the following zones (_for this case, no return channel geometry is included_):. 1. Inlet channel; 2. Impeller; 3. Diffuser; 4. Cavity. The code prints out the following error: . ```; Error in ""virtual void CPhysicalGeometry::ComputeNSpan(CConfig*, short unsigned int, short unsigned int, bool)"":; -------------------------------------------------------------------------; At the moment only turbomachinery with the same amount of span-wise section can be simulated; nSpan inflow 0, nSpan outflow 57; ------------------------------ Error Exit -------------------------------; ```. However, spanwise nodes are indeed 57 (_checked manually and on Autogrid_). . A possible solution is indicated [here](https://www.cfd-online.com/Forums/su2/229875-rotor67-simulation-su2.html), but it is not a definitive one as it's dependent on the spanwise nodes number hard-coding.; Different SU2 version were tested, both on **Win10** and **Ubuntu 20.04**, but the issue persisted only to be resolved similarly to the way showed here below. **Additional files**; [error.txt](https://github.com/su2code/SU2/files/13976072/error.txt) -> SU2 initialization up to the error. **Bug report checklist**; - [✔ ] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [✔ ] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [✔ ] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop:**; - OS: UBUNTU 20.04 / Windows 10; - C++ compiler and version: g++ 9.4.0 / gcc 8.1.0; - MPI implementation and version: Open MPI 4.1.5; - SU2 Version: v7.3.0 - v7.4.0 - v7.5.0 - v7.5.1 - v8.0.0 - v8.0.0 new_turbo_outputs. Thank you in advance for your help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2203:1034,depend,dependent,1034,https://su2code.github.io,https://github.com/su2code/SU2/issues/2203,1,['depend'],['dependent']
Integrability,"g-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=/home/user/programs/su2/SU2-7.0.8/bin; export SU2_HOME=/home/user/programs/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C build install' to compile and install SU2; ; Build targets in project: 12; ; Found ninja-1.10.0.git at /home/user/programs/su2/SU2_src/ninja; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; Using 'STRIP' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-strip'; ```. Am I specifying it incorrectly?; Thanks.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:5007,Wrap,Wrapper,5007,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['Wrap'],['Wrapper']
Integrability,"gh I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multizone setup. - **General structure of the drivers**: Maybe there are relevant differences between `CSinglezoneDriver` and `CMultizoneDriver`, I don't know.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4575,interface,interface,4575,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['interface'],['interface']
Integrability,"gin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8294,Depend,Dependency,8294,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Depend'],['Dependency']
Integrability,"ging global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\U",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6396,depend,dependency,6396,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability,"going characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade with respect to certain performance parameters (ENTROPY_GENERATION, TOTAL_PRESSURE_LOSS, KINETIC_ENERGY_LOSS, ecc.). However, the optimization script only works for 2D blades since the FFD and the mesh deformation routines need still to be adapted to handle 3D blades (especially for problem on the deformation of the hub and shroud surfaces).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:2841,rout,routines,2841,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,1,['rout'],['routines']
Integrability,"h mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $S",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1729,depend,dependency,1729,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['depend'],['dependency']
Integrability,"he tests I did over at #1388 where I will also add a inc+turb+2species-with-2-inlets reg test (and hopefully also non-dimensional). Inlet file non-dimensionalization: The inlet file writes dimensional values for the mean flow, and the values that are read are non-dimensionalized in the BC_Inlet routine itself -> I personally find this approach quite good, but I dont believe the SA+SST are adhering to that. See also [this cfd-online issue](https://www.cfd-online.com/Forums/su2/239313-inlet-profile-sst-nondimensional-treatment.html). I will try to fix this here as well.; - nu tilde is non-dimensionalized by multiplying with densityRef/viscosityRef (which I guess from the code); - TKE by multiplying with 1/VelocityRef^2 (which I guess from the code, and would fit with Feng Liu Non-Dim paper i have); - Omega ~~by multiplying with length_Ref/VelocityRef (which would fit with Feng Liu) or~~ by multiplying with ViscRef/(rhoRef*VelocityRef^2); Any info on this is appreciated.; My approach would be non-dimensionalize in the BC_Inlet routine for Turb as well to stay consistent with the mean flow, For the mean flow it has to be done like that because the meaning of the values is determined in the inlet routine. Otherwise one could do all that consistently a bit earlier. I have to remember to add a little hint to the laminar step tutorial to state that the inlet file should be dimensional. ## Related Work; https://github.com/su2code/SU2/pull/516 initial implementation. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1427:1399,rout,routine,1399,https://su2code.github.io,https://github.com/su2code/SU2/pull/1427,2,['rout'],['routine']
Integrability,"he tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githubusercontent.com/4896083/64910871-09f36b00-d6d0-11e9-8148-f211260dbf8f.png); ![bump_cf_0p75_gridconv](https://user-images.githubusercontent.com/4896083/64910872-09f36b00-d6d0-11e9-8772-6e26a8bd08b0.png); ![bump_cf_0p87_gridconv](https://user-images.githubusercontent.com/4896083/64910873-0a8c0180-d6d0-11e9-8c61-208809ff64e0.png); ![bump_cl_gridconv](https://user-images.githubusercontent.com/4896083/64910874-0a8c0180-d6d0-11e9-8add-2489b1c42a5c.png); ![residual_convergence](ht",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:3272,depend,depending,3272,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['depend'],['depending']
Integrability,"he wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. I",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1538,rout,routines,1538,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,2,"['rout', 'wrap']","['routines', 'wrapped']"
Integrability,"he wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn'",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:1789,interface,interface,1789,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['interface'],['interface']
Integrability,"he wrong python paths. (Though I'm not 100% sure if this is the cause.). i.e. running:; `CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1681,depend,dependency,1681,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['depend'],['dependency']
Integrability,"his working for LES; simulation (wall models in SU2). On Wed, May 27, 2020 at 12:29 PM Juan J. Alonso <notifications@github.com>; wrote:. > Monika,; >; > There is a chance we could work together on this…Eduardo Molina (copied); > co-advised a short project last year on wall functions which made some; > progress but did not finalize an implementation. It may be a better; > starting point. Eduardo, can you comment where that code went?; >; > I am also copying Matt S. who is interested in wall function; > implementations in SU2. Perhaps we can get everyone on the same page to get; > these working in the baseline state…and then improve them in various ways?; >; > Best,; >; > Juan; >; >; > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > wrote:; > >; > >; > > Sure, now make sense why it is showing issues, Thank you for the; > > confirmation!; > >; > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > > wrote:; > >; > > > I gave the wall function routines a cleanup in #975; > > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > > missing, we compute the shear stresses but they are not considered in; > the; > > > BC's of the NS solver.; > > >; > > > —; > > > You are receiving this because you commented.; > > > Reply to this email directly, view it on GitHub; > > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > > > unsubscribe; > > > <; > https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA; > >; > > > .; > > >; > >; > >; > > --; > > *Thank you,*; > >; > > *Monika Chauhan *; > >; > > *Graduate Research Assistant, Doctoral Program*; > >; > > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA; > 24061*; > > *Cell# 540-998-5012*; > > —; > > You are receiving this because you commented.; > > Reply to this email directly, view it on GitHub <; > https://github.com/su2code/SU2/issues/399#issuecomment-634777816>, or; > unsubscri",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-634857692:1203,rout,routines,1203,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-634857692,1,['rout'],['routines']
Integrability,"href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:15618,Depend,Dependabot,15618,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['Depend'],['Dependabot']
Integrability,"https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7910,depend,dependabot-automerge-start,7910,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"i.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2815,integrat,integration,2815,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : Can't find mesh.\n""; ; #--- Get sensor; ; sensor = su2amg.create_sensor(mesh, adap_sensor); su2amg.write_solution(""current_sensor.solb"", sensor); ; if not os.path.exists(""current_sensor.solb""):; raise RuntimeError , ""\n##ERROR : Can't find adap sensor.\n""; ; #--- Run amg; ; sys.stdout.write(""Running amg. Log : %s\n"" % config_amg['amg_log']); ; if os.path.exists(""current.itp.solb""):; os.remove(""current.itp.solb""); ; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n#",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:8487,interface,interface,8487,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['interface'],['interface']
Integrability,"ifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:3530,depend,dependabot,3530,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"ig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment vari",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2313,Message,Message,2313,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Message'],['Message']
Integrability,"ild; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Windows 11; - C++ compiler and version: gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0; - MPI implementation and version: msmpi 10.1.2; - SU2 Version: 7.5.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1322,depend,dependency,1322,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,3,"['Depend', 'depend']","['Dependency', 'dependency']"
Integrability,"implified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is that we then need to provide a portable version that can be differentiated with CoDi or to implement the exact differentiation (similar to what is done in the ""solve_b"" routines). @vdweide that is not an issue with Eigen because everything is templated and therefore compatible with any type or class that overloads the appropriate arithmetic operators.; I have used it for over 2 years and I can attest to its compatibility with AD tools (I've tried 3), and speed when linked with a BLAS library, their native implementations are also very good, peeking inside their code... you can tell they know what they are doing. P.S. I feel this post needs a disclaimer, I am not affiliated in any way to Eigen, my motivation is not to promote their work (but I obviously think they deserve it). I genuinely think adopting an algebra library (that is compatible with AD) would greatly simplify our work and further drop the entry barrier to new developers.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:2186,rout,routines,2186,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,4,['rout'],['routines']
Integrability,"in/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYT",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2620,Depend,Dependency,2620,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Depend'],['Dependency']
Integrability,"ing for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-mu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:5208,depend,dependency,5208,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['depend'],['dependency']
Integrability,"ion lies below.(CFL = 4.0); >% Mach number (non-dimensional, based on the free-stream values); MACH_NUMBER= 0.8; %; % Angle of attack (degrees); AOA= 1.25; %; % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-grid cycle (V_CYCLE, W_CYCLE, FULLMG_CYCLE); MGCYCLE= W_CYCLE; %; % Multi-Grid PreSmoothing Level; MG_PRE_SMOOTH= ( 1, 2, 3, 3 ); %; % Multi-Grid PostSmoothing Level; MG_POST_SMOOTH= ( 0, 0, 0, 0 ); %; % Jacobi implicit smoothing of the correction; MG_CORRECTION_SMOOTH= ( 0, 0, 0, 0 ); %; % Damping factor for the residual restriction; MG_DAMP_RESTRICTION= 1.0; %; % Damping factor for the correction prolongation; MG_DAMP_PROLONGATION= 1.0; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST, LAX-FRIEDRICH, CUSP, ROE, AUSM, HLLC,; % TURKEL_PREC, MSW); CONV_NUM_METHOD_FLOW= CUSP; %; % Spatial numerical order integration (1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(T",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:1295,integrat,integration,1295,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['integrat'],['integration']
Integrability,"ion-required-labels/compare/v4.0.0...v4.1.0</a></p>; <h2>v4.0.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Add issues/pull-requests permissions to README by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/52"">mheap/github-action-required-labels#52</a></li>; <li>Only use a single comment when the action fails by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/53"">mheap/github-action-required-labels#53</a></li>; </ul>; <h2>New Contributors</h2>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v3.0.1...v4.0.0"">https://github.com/mheap/github-action-required-labels/compare/v3.0.1...v4.0.0</a></p>; <h2>v4</h2>; <p>Tag that always points to the latest commit in the v4.x.x series of releases</p>; <h2>v3.0.1</h2>; <h2>What's Changed</h2>; <ul>; <li>Add default error message by <a href=""https://github.com/mheap""><code>@​mheap</code></a> in <a href=""https://redirect.github.com/mheap/github-action-required-labels/pull/51"">mheap/github-action-required-labels#51</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/mheap/github-action-required-labels/compare/v3.0.0...v3.0.1"">https://github.com/mheap/github-action-required-labels/compare/v3.0.0...v3.0.1</a></p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/4e9ef4ce8c697cf55716ecbf7f13a3d9e0b6ac6a""><code>4e9ef4c</code></a> Automatic compilation</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/18f57d781fe045548933f7465750a46e9994f1fd""><code>18f57d7</code></a> Allow labels to be provided one per line in input</li>; <li><a href=""https://github.com/mheap/github-action-required-labels/commit/1b8424df557fae55fef867af22d5d0625fe6742f""><code",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2125:2730,message,message,2730,https://su2code.github.io,https://github.com/su2code/SU2/pull/2125,2,['message'],['message']
Integrability,"ion: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2446,depend,dependency,2446,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['depend'],['dependency']
Integrability,"ions-using-github-connect"">github connect</a> or manually copying the repo to their GHES instance.</p>; </li>; <li>; <p>Few dependencies and cache action usage examples have also been updated.</p>; </li>; </ul>; <h2>v2.1.7</h2>; <p>Support 10GB cache upload using the latest version <code>1.0.8</code> of <a href=""https://www.npmjs.com/package/@actions/cache""><code>@actions/cache</code> </a></p>; <h2>v2.1.6</h2>; <ul>; <li>Catch unhandled &quot;bad file descriptor&quot; errors that sometimes occurs when the cache server returns non-successful response (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/596"">actions/cache#596</a>)</li>; </ul>; <h2>v2.1.5</h2>; <ul>; <li>Fix permissions error seen when extracting caches with GNU tar that were previously created using BSD tar (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/527"">actions/cache#527</a>)</li>; </ul>; <h2>v2.1.4</h2>; <ul>; <li>Make caching more verbose <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/650"">#650</a></li>; <li>Use GNU tar on macOS if available <a href=""https://github-redirect.dependabot.com/actions/toolkit/pull/701"">#701</a></li>; </ul>; <h2>v2.1.3</h2>; <ul>; <li>Upgrades <code>@actions/core</code> to v1.2.6 for <a href=""https://github.com/advisories/GHSA-mfwh-5m23-j46w"">CVE-2020-15228</a>. This action was not using the affected methods.</li>; <li>Fix error handling in <code>uploadChunk</code> where 400-level errors were not being detected and handled correctly</li>; </ul>; <h2>v2.1.2</h2>; <ul>; <li>Adds input to limit the chunk upload size, useful for self-hosted runners with slower upload speeds</li>; <li>No-op when executing on GHES</li>; </ul>; <h2>v2.1.1</h2>; <ul>; <li>Update <code>@actions/cache</code> package to <code>v1.0.2</code> which allows cache action to use posix format when taring files.</li>; </ul>; <h2>v2.1.0</h2>; <ul>; <li>Replaces the <code>http-client</code> with the Azure Storage SDK for NodeJS when downloading ca",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:1717,depend,dependabot,1717,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"ipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal cod",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1924,interface,interface,1924,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['interface'],['interface']
Integrability,"irect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5361,depend,dependabot-automerge-start,5361,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,2,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"ironment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:1727,depend,dependent,1727,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,1,['depend'],['dependent']
Integrability,"isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZE = [0]` when `DEFORM_STIFFNESS_TYPE = WALL_DISTANCE`. This allows refined regions around a wing tip to be dragged instead of sheared (which happens with the simple 1/x variation).; #### Other fixes:; - CFEASolver displacement boundary conditions (the weird bug detailed below).; - CFEASolver load integration for FSI simplified to fix mpi-related bug.; - Option CFL_REDUCTION_TURB having no effect.; - Restarts with moving wall cases work by default. I know, there's way too much stuff in this PR, but it was all required to make 3D FSI more reliable, and hey, it works!; ![3D_FSI](https://user-images.githubusercontent.com/38071223/78511123-34069a80-7792-11ea-950f-750cef80f1f8.png). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:2299,integrat,integration,2299,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['integrat'],['integration']
Integrability,"it ""a"" to look at some assembly, honestly sliced bread has nothing on perf. NOTE: By and large Perf is not an intrusive tool, as such the accuracy of the measurements is limited i.e. it is probably not a good idea to draw conclusion about <1% variations. Moving on, I took the top level percentages only, normalized by that of CFluidIteration::Iterate (to exclude pre-processing time) and multiplied the results from the total ""iteration time"" from the history file. Doing that for before and after results allowed computing individual speedup factors for each important routine (in terms of time, otherwise they are all special and important in their own way) e.g. gradients, limiters, upwind/viscous residuals, etc.; ![image](https://user-images.githubusercontent.com/38071223/63292708-30cfa480-c2be-11e9-8d4a-5feb3dc61abf.png). Here is the data by the way: [results.xlsx](https://github.com/su2code/SU2/files/3517492/results.xlsx). As predicted the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by much, which means upwind and viscous residuals computations might gain a lot from vectorization (SIMD). And like @economon mentioned even more if they are somehow fused together.; It also means the writes to CSysMatrix are relatively expensive, I think there are two-three reasons for it.; - We do a linear search on each Add/SubtractBlock - This could be replaced by a map.; - The Jacobian contributions are first written into a tempor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:3993,rout,routines,3993,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['rout'],['routines']
Integrability,"it/1d78355196cc3f88914ca91332c58d431a78513d""><code>1d78355</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10088,depend,dependabot-security-updates,10088,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['depend'],['dependabot-security-updates']
Integrability,"ix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ninja",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2760,Wrap,Wrapper,2760,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,1,['Wrap'],['Wrapper']
Integrability,"j[iDim];; phiR -= (gradJ++)*d_ij[iDim];; }; ...; ```; to get better assembly; ```asm; .L7:; vmovapd ymm3, ymm13; vmovapd ymm2, YMMWORD PTR [rbp-400]; add rax, 32; vgatherqpd ymm0, QWORD PTR [rcx+ymm1*8], ymm3; vpaddq ymm1, ymm1, ymm11; vmovapd YMMWORD PTR [rbp-272], ymm0; vmovapd YMMWORD PTR [rbp-240], ymm0; vfmadd132pd ymm0, ymm2, YMMWORD PTR [rax-32]; vmovdqa YMMWORD PTR [rbp-208], ymm1; vmovapd YMMWORD PTR [rbp-400], ymm0; cmp rax, rbx; jne .L7; ```; which makes the vectorized code perform just as well as the scalar code, iterators could also be used for the other variables but that would start to hurt readability without improving the performance much. _Note: There is also a chance the compiler (gcc) is not doing this kind of optimization because of the way I wrote the code..._. **So we need AoS to avoid losing performance in lightweight numerics classes.**. Before we look into the impact of not using SoA in the gradient and limiters routines let me tell you there is a way to have the best of both worlds, enter the *_array of structures of arrays_* or as I like to call it zig zag storage, aka a right mess.; Imagine an AoS of short arrays of SIMD length, e.g. `{ {u0 u1 u2 u3} {v0 ... v3} {w0 ... w3} {u4 u5 u6 u7} ... }` with that it is possible to fully vectorize point loops as the first index (iPoint) is contiguous in groups of SIMD length and when looping along variables and dimensions in edge loops the stride is small enough (equal to SIMD length) to trigger hardware prefetching.; The catch is that we need even more integer arithmetic and so we really need iterators to amortise that cost, there is also the drawback that scalar usage of such a container would be terrible. **For these reasons I think we should sacrifice ultimate performance and keep node data in AoS storage.**. The major impact on gradients and limiters is the way the code is written, to vectorize the computation we need to compute the gradient into a local variable and then ""transpose"" it when s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:12794,rout,routines,12794,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['rout'],['routines']
Integrability,"ke that would be useful. ### Motivation. Right now we have a lot of routines scattered throughout the code that essentially functionally belong together as they perform the same overall task. This leads to a lot of if-conditions and special cases we have to consider and its hard to actually see what their overall task actually is. One example that I also used to demonstrate a possible solution is the Fixed CL computation. We have routines in CIteration and in CEulerSolver and they modify certain behavior of the baseline code. But its complicated to figure out which routines actually belong together, what they do and when they are called. ### Possible solution. To solve that problem I propose a modular structure that puts all routines that are responsible for a certain functional task together in the same class. At certain predefined places in the code they can modify things by overloading certain functions. These functions are called *Hooks*. What arguments these hooks provide can be different depending on where they are called. As an example I did a quick implementation of such a framework and defined a Fixed CL module. . Right now, I defined a global list of modules (with only one module currently). We can also define modules lists per class, e.g. for CDriver, CIteration, CSolver. But that would mean that we have to provide potentially more than one class per module, which kind of defeats the purpose again. I will add some further comments below. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/982:1170,depend,depending,1170,https://su2code.github.io,https://github.com/su2code/SU2/pull/982,1,['depend'],['depending']
Integrability,"kquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5764,depend,dependabot,5764,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"lable for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6212,depend,dependabot,6212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"ld -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1479,depend,dependency,1479,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['depend'],['dependency']
Integrability,"le 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Pr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6917,depend,dependency,6917,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['depend'],['dependency']
Integrability,"le besides the .su2 and the .cfg ones. Even the _Constrained shape design of a transonic turbulent airfoil tutorial_ does not work. The required files (_initial solution files for the solver and adjoint solution_flow.dat, solution_adj_cd.dat, and solution_adj_cmz.dat_) are given from the beginning and if they are not added to the path in which the tutorial will be run, it cannot be completed. I also tried the **turb_ONERAM6 Test case** and personal files as well. Furthermore, I tried to cheat (?) creating a solution_adj_cd.dat and solution_adj_cmz.dat files from the EULER ADJOINT problem because it was the only way I had to obtain that file: the RANS ADJOINT problem performed better than expected reaching a feasible geometry which is not the one obtained in the tutorial. I do not get why I have this problem, if it is correct or not. Has anyone experienced this before?. Actually, I think I will run this kind of problem with the cheating (?) procedure described before because I need to go ahead with the work and it seems to work relatively fine. In conclusion, the **ADJOINT** problem with **RANS/NAVIER_STOKES** solver does not work because it needs **solution_adj_*.dat** which are created autonomously with EULER solver. I am using SU2 V7.2.1 but I also tested them with versions from this to 7.0.0. The files from the tutorial without solution_*.dat files:; [turb_SA_RAE2822.zip](https://github.com/su2code/SU2/files/7639785/turb_SA_RAE2822.zip). Personal files:; [naca0012_8_1_0_700.zip](https://github.com/su2code/SU2/files/7640051/naca0012_8_1_0_700.zip). The command that I use is: python shape_optimization.py -n 8 -g CONTINUOUS_ADJOINT -o SLSQP -f used_file.cfg. UPDATE: I also compiled the code in Ubuntu 20.04 enabling the DISCRETE_ADJOINT functionality but I always receive the same message. How can I create those solution_adj_*.dat files to start the ADJOINT problem?. Have I missed something written in other tutorials?. Thank you very much for all of the support.</div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1466:2674,message,message,2674,https://su2code.github.io,https://github.com/su2code/SU2/issues/1466,1,['message'],['message']
Integrability,"le-pywrapper=true --prefix=/opt/su2/SU2v7_adap -Dwith-mpi=enabled -Denable-mkl=true -Dmkl_root=/opt/intel/compilers_and_libraries_2020/linux/mkl`. reports:; ```; Installing _amgio.; The Meson build system; Version: 0.52.999; Source dir: /opt/su2/SU2_src; Build dir: /opt/su2/SU2_src/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:1848,Message,Message,1848,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Message'],['Message']
Integrability,"led -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1562,depend,dependency,1562,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['depend'],['dependency']
Integrability,"lel partitioning.; Performing linear partitioning of the grid nodes.; 4478644 interior elements before parallel partitioning.; Distributing elements across all ranks.; Calling the partitioning functions.; Getting into adjacency function.; Building the graph adjacency structure.; 8 surface markers.; 166730 boundary elements in index 0 (Marker = aircraft).; 33766 boundary elements in index 1 (Marker = farfield).; 742 boundary elements in index 2 (Marker = injest).; 290 boundary elements in index 3 (Marker = inlet).; 22500 boundary elements in index 4 (Marker = inner_nearfield).; 243 boundary elements in index 5 (Marker = outlet).; 146871 boundary elements in index 6 (Marker = symmetry).; 22500 boundary elements in index 7 (Marker = outer_nearfield).; Calling ParMETIS...; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36096 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36400 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 35800 bytes received but buffer size is 31680; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36368 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485343:1143,Message,Message,1143,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485343,2,['Message'],['Message']
Integrability,"les/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Trace",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12148,message,message,12148,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,"['Message', 'message']","['Message', 'message']"
Integrability,"lete, implementation of SU2_DEF; - More updates; - Working version; - Complete implementation (validate); - Working version of SU2_DEF; - Final push before moving to the develop branch; - New MPI (removing SU2_PRT); - Merged in Ben's ParMETIS integration and fixed some conflicts.; - Merge branch 'benkirk-parmetis_integration' into feature_MPI; - ParMETIS geometry routines have been copied over but are not activated yet.; - Small change to ParMETIS include.; - ParMETIS can now be activated for testing (PARMETIS=YES in config).; - Updated MG; - Updated EA subrotuine; - Small fix; - Fixing memory leak; - Fixing memory leaks; - Dev release v.3.2.6; - Increasing MAX_NUMBER_MARKER; - Working version with ParMETIS. Fixed bug in global index. Now clean up and testing...; - Cleaned version of ParMETIS routines with better console output during partitioning.; - Small bug in initial element division.; - Made arrays in ParMETIS call dynamic.; - Fixed compiler warnings and added MPI directives so that the pure serial code works with the ParMETIS routines.; - Bootstrap on zion.; - Added some typecasts. Still tracking down a memory problem...; - Critical bug fix for vtxdist array.; - Partial fix; - More MPI improvements.; - Fixing a bug in SU2_DEF; - Updated BC_ActDisk_Boundary (MPI); - Merge remote-tracking branch 'upstream/develop' into develop; - changing solidboundary setting to be heatflux OR euler etc instead of AND, also working on doxygen documentation; - Dynamic allocation for some marker-related arrays.; - visualize part taken out to match upstream/dev; - Collection of improvements; - Release 3.2.7; - Fixing LOW_MEMORY_OUTPUT; - Updated LOW_MEMORY_OUTPUT option; - Updated configure.ac; - After autoconf; - Updated MPI; - Updated BC_Engine_Exhaust and BC_Engine_Bleed; - Small change; - Fixing subsonic engine intake option; - Small output change; - Added output_su2.cpp; - Updated Engine BC; - Working on Engine BCs; - Added Supersonic Outlet BC; - Minor change; - Merge remote",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:2350,rout,routines,2350,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['rout'],['routines']
Integrability,"li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf5365278422",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6031,depend,dependabot,6031,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2967,Depend,Dependabot,2967,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,51,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* Process received signal ***; [ system:14030] Signal: Aborted (6); [ system:14030] Signal code: (-6); [ system:14031] Signal: Aborted (6); [ system:14031] Signal code: (-6); [ system:14029] [ 0] /lib/x86_64-linux-gnu/libpthread.so.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1983,message,message,1983,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['message'],['message']
Integrability,"line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '; [ system:14030] **\* Process received signal ***; [ system:14031] **\* ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1828,interface,interface,1828,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['interface'],['interface']
Integrability,"listcomp>; mieq = sum(map(len, [atleast_1d(c['fun'](x, *c['args'])); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 457, in con_cieq; cons = project.con_cieq(x); File ""/usr/local/bin/SU2/opt/project.py"", line 257, in con_cieq; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 520, in con_cieq; func = su2func(this_con,config,state); File ""/usr/local/bin/SU2/eval/functions.py"", line 92, in function; aerodynamics( config, state ); File ""/usr/local/bin/SU2/eval/functions.py"", line 274, in aerodynamics; info = su2run.direct(config); File ""/usr/local/bin/SU2/run/direct.py"", line 139, in direct; su2merge(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 81, in merge; merge_solution(konfig); File ""/usr/local/bin/SU2/run/merge.py"", line 107, in merge_solution; SU2_SOL( config ); File ""/usr/local/bin/SU2/run/interface.py"", line 207, in SOL; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 270, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2-7.3.0/xxxx/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -n 4 /home/xxx/SU2-7.3.0/SU2/bin/SU2_SOL config_SOL.cfg; SU2 process returned error '139'; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 1 with PID 0 on node LAPTOP-DDQOFLU8 exited on signal 11 (Segmentation fault).; --------------------------------------------------------------------------; ```. The parallel computing for the case of SU2_CFD only can work well.; but I canno",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:4815,interface,interface,4815,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['interface'],['interface']
Integrability,"m>; > > wrote:; > >; > > > Monika,; > > >; > > > There is a chance we could work together on this…Eduardo Molina; > (copied); > > > co-advised a short project last year on wall functions which made some; > > > progress but did not finalize an implementation. It may be a better; > > > starting point. Eduardo, can you comment where that code went?; > > >; > > > I am also copying Matt S. who is interested in wall function; > > > implementations in SU2. Perhaps we can get everyone on the same page; > to get; > > > these working in the baseline state…and then improve them in various; > ways?; > > >; > > > Best,; > > >; > > > Juan; > > >; > > >; > > > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > > > wrote:; > > > >; > > > >; > > > > Sure, now make sense why it is showing issues, Thank you for the; > > > > confirmation!; > > > >; > > > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <; > notifications@github.com>; > > > > wrote:; > > > >; > > > > > I gave the wall function routines a cleanup in #975; > > > > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > > > > missing, we compute the shear stresses but they are not considered; > in; > > > the; > > > > > BC's of the NS solver.; > > > > >; > > > > > —; > > > > > You are receiving this because you commented.; > > > > > Reply to this email directly, view it on GitHub; > > > > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>,; > or; > > > > > unsubscribe; > > > > > <; > > >; > https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA; > > > >; > > > > > .; > > > > >; > > > >; > > > >; > > > > --; > > > > *Thank you,*; > > > >; > > > > *Monika Chauhan *; > > > >; > > > > *Graduate Research Assistant, Doctoral Program*; > > > >; > > > > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA; > > > 24061*; > > > > *Cell# 540-998-5012*; > > > > —; > > > > You are receiving this because you commented.; > > > > Re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-638479089:2907,rout,routines,2907,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-638479089,2,['rout'],['routines']
Integrability,"mance and improved cache sizes using <code>zstd</code> for compression for Linux and macOS runners (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/184"">actions/cache#184</a>)</li>; <li>Allowed caching for all events with a ref (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/63"">actions/cache#63</a>)</li>; <li>Created the <a href=""https://github.com/actions/toolkit/tree/master/packages/cache""><code>@actions/cache</code></a> npm package to allow other actions to utilize caching (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/55"">actions/cache#55</a>)</li>; <li>Added a best-effort step to delete the archive after extraction to reduces storage space (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/209"">actions/cache#209</a>)</li>; </ul>; <h2>v1.2.0</h2>; <h1>Bug Fixes</h1>; <ul>; <li>Fall back to GNU tar on older versions of Windows that do not have BSD tar installed (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/252"">#252</a>)</li>; <li>Fixed chunk upload retry logic (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/305"">#305</a>)</li>; </ul>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:4329,depend,dependabot,4329,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"mance. I used an unsteady 3D case with 83425 points. I took the extreme case of calling the output routines every time-step and only 5 inner iterations. For the first run I enabled the writing of restart and tecplot file:; ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6 ; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including gathering all data, partitioning and sor",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:1058,rout,routine,1058,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,1,['rout'],['routine']
Integrability,"me/slimshady/UserPackages/SU2_INSTALL`. Then I did this: ; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py configure build -Denable-openblas=true -Denable-autodiff=true -Denable-directdiff=true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1392,Message,Message,1392,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Message'],['Message']
Integrability,"meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention int",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:2586,wrap,wrapper,2586,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['wrap'],['wrapper']
Integrability,"modelling of propellers. ## Proposed Changes. The present work is on modifications to the actuator disk model. Variable load actuator disk (VLAD) [Saetta, 2020] uses the given blade loading (which is fixed for the entire duration of the simulation) to impose axial and tangential jumps at the interface. Propeller loading depends on many different parameters and is affected by the surrounding structures and angle of attack (AoA). A method that updates the blade loading at run time is required to take care of the interactions and installation effects. . In the present approach, the Blade Element Method (BEM) is used to calculate the pressure jump and swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:1143,interface,interface,1143,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['interface'],['interface']
Integrability,"mpare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5428,Depend,Dependabot,5428,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,9,"['Depend', 'depend']","['Dependabot', 'dependabot']"
Integrability,"mplate the method.; template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // Boilerplate, call base first. This is akin to the decorator design pattern; // without polymorphism. The working variables resemble Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our specific job.; wv.area = 0.0;; for(int i=0; i<nDim; ++i); wv.area += pow(sol.areaVector[i],2);; wv.area = sqrt(wv.area);; }; };. // Same mechanics as above; template<typename Base>; class ComputeFlux : Base; {; protected:; enum : int {nDim = Base::nDim};. struct WorkVarsType : Base::WorkVarsType ; {; double flux; // ...add new member; };. template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // ...call base; Base::Compute(wv,sol);. // ...do aditional work; wv.flux = 0.0;; for(int i=0; i<nDim; ++i); wv.flux += sol.velocity[i]*sol.areaVector[i];; }; };. // This class is used to terminate the chain, it makes the link; // with the interface and it is used to specify any fixed sizes.; template<int NDIM>; class Terminator : private VirtualInterface; {; protected:; enum : int {nDim = NDIM};. struct WorkVarsType {};. template<typename... Ts>; void Compute(Ts&...) const {}; };. // Finally we use the building blocks to implement Compute.; // The blocks can be reordered depending on application to; // help the compiler fuse loops or minimize register spillage,; // the resulting WorkVarsType definition will be equivalent.; class ComposedClass: public; ComputeFlux< ComputeArea< Terminator<3> > >; {; public:; ResultType Compute(const SolutionContainer& sol) const;; };. ResultType ComposedClass::Compute(const SolutionContainer& sol) const; {; // Create the working variables on the stack.; ComputeFlux::WorkVarsType wv;. // Pass down the working variables and whatever other arguments.; // If the convention was followed, all building blocks will run.; // Recall that all Compute's were templates, they will be; // ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:4383,interface,interface,4383,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['interface'],['interface']
Integrability,"mpleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than Poiseuille)..~~. ~~@salvovitale @LaSerpe @arubino: do you have the original grids for the periodic cases before adding the halos with SU2_MSH? I would like to make sure that everything is working ok for all previous capability.~~. All periodic meshes in the regressions have been updated for the new periodic BC, and a python script has been added to remove halo cells from old meshes that were preprocessed with SU2_MSH for the previous periodic BC implementation. Resolves #550 ; Resolves #431 ; Resolves #416 ; Resolves #252 . ## PR Chec",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:1563,rout,routines,1563,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,2,['rout'],['routines']
Integrability,"n the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The proposed solution is hopefully a starting point for some discussion, should there be interest in the issue. Suggestions which could help with the refinement and implementation of the proposed solution, or any alternative, would be very welcome. **Disclaimer**; Please excuse the long read. My understanding of the inner workings of SU2 is limited, therefore I have tried to give a complete description of the assumptions that have led to the issue and the proposed solution. Please let me know if there are mistakes, or if further detail can be useful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:3140,rout,routine,3140,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['rout'],['routine']
Integrability,"n variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_A",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:1580,wrap,wrapper,1580,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['wrap'],['wrapper']
Integrability,"n very well. The order of the points needs to be according to the VTK hexahedron http://www.princeton.edu/~efeibush/viscourse/vtk.pdf I can't visualize where you are getting that deformation, but when using an FFD box that does not include the entire design surface you need to be careful with the continuity of the deformation to prevent creating discontinuous steps. Mmmh I see. It looks like the blade elements are extending beyond the blade surface itself and, therefore, are cut by the FFD box even if the whole geometry appears to be included withing the FFD box domain. I solved the issue by defining an user-defined fixing plane (very cool option, btw). I experienced a similar situation with an internal flow over cylinder, too.; My question was whether this behavior was mesh-dependent or FFD box-dependent. I guess it is reasonable to say that mesh elements extension beyond the body which we're optimizing is causing this, however FFD continuity allows to keep this dummy shape deformation from happening. . Secondly, I had MAX DIFF = 0 because I couldn't understand your correction properly. I had to consider the righ-hand rule third component (_thumb_) pointing inside the FFD box for each of the surfaces we establish when attaching the FFD box (_each of those defined by the points listed in FFD_DEFINITION_). Then it worked perfectly.; Still, I don't understand why for some geometries we apply what discussed in the [tutorial](https://su2code.github.io/tutorials/Species_Transport/) and here it is the opposite. At least I know what to expect and how to fix it. If you could add an alert message in the next SU2 version, that would be much appreciated. > Well, it's the F-FFD week it seems :) https://www.cfd-online.com/Forums/su2/249879-when-use-su2_def-generate-ffd-box-i-can-not-get-ffd_surface_points.html. It's sunday: is the week ending or starting? ahah I guess we both stopped counting ;); As always, thank you very much for the time you're spending on our bugs and issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169:1639,message,message,1639,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169,1,['message'],['message']
Integrability,"nc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major versio",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10291,depend,dependabot,10291,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['depend'],['dependabot']
Integrability,"nd swirl distributions across the propeller disc and is coupled to the SU2 solver. The blade loading and changes to the flow-field are calculated recursively. Propeller geometry details, airfoil characteristics, propeller speed and set blade angle are required as inputs. Using the thrust and power along the blade from BEM, and following the procedure of VLAD, axial and tangential velocities are imposed at the interface. BEM method is verified against the experimental results [Veldhuis, 2005] and found to be performing well. ## Related Work. This work was presented at; SU2 Conference 2022, 5--7 Sept 2022,; Propeller blade load calculation for actuator disk using blade element method.; https://www.youtube.com/watch?v=otM_Lz2MV4U. and published in; International Journal of Aeronautical and Space Sciences; https://doi.org/10.1007/s42405-023-00593-5. The grid file for the test case is in the new branch on the fork at; https://github.com/josy-nal/su2codeTestCases/tree/feature-actuatordisk-bem. This implementation is under active development seeking reviews, instructions and suggestions to meet SU2 code standards. References:. Saetta E, Russo L, Tgnaccini R (2020); Implementation and validation of a new actuator disk model in SU2.; SU2 conference 2020, virtual event. Veldhuis L (2005) Propeller-wing aerodynamic interface,; Ph.D. thesis, Delft University of Technology, Delft, Netherlands. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2142:2056,interface,interface,2056,https://su2code.github.io,https://github.com/su2code/SU2/pull/2142,1,['interface'],['interface']
Integrability,"nda3/bin/x86_64-conda_cos6-linux-gnu-gcc ld.bfd 2.33.1; Using 'AR' from environment with value: '/home/user/anaconda3/bin/x86_64-conda_cos6-linux-gnu-ar'; Using 'LDFLAGS' from environment with value: '-Wl,-O2 -Wl,--sort-common -Wl,--as-needed -Wl,-z,relro -Wl,-z,now -Wl,--disable-new-dtags -Wl,--gc-sections -Wl,-rpath,/home/user/anaconda3/lib -Wl,-rpath-link,/home/user/anaconda3/lib -L/home/user/anaconda3/lib'; Using 'CPPFLAGS' from environment with value: '-DNDEBUG -D_FORTIFY_SOURCE=2 -O2 -isystem /home/user/anaconda3/include'; C++ compiler for the host machine: c++ (gcc 4.8.5 ""c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28)""); C++ linker for the host machine: c++ ld.bfd 2.27-27; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/user/anaconda3/bin/python3); Found pkg-config: /home/user/anaconda3/bin/pkg-config (0.29.2); /work/A/openmpi/3.0.0_intel2018u2/bin/mpicc found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicc) 3.0.0; Run-time dependency MPI for c found: YES 3.0.0; /work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx found: YES (/work/A/openmpi/3.0.0_intel2018u2/bin/mpicxx) 3.0.0; Run-time dependency MPI for cpp found: YES 3.0.0; Message: Boost sources found.; Program swig found: YES (/home/user/anaconda3/bin/swig); Message: Using mpi4py from /home/user/anaconda3/lib/python3.7/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/user/programs/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.8 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): false; AD (forward): false; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311:4080,depend,dependency,4080,https://su2code.github.io,https://github.com/su2code/SU2/issues/1134#issuecomment-744491311,1,['depend'],['dependency']
Integrability,"ng 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2234,depend,dependency,2234,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['depend'],['dependency']
Integrability,"ng by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> f",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6625,depend,dependabot,6625,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"no-unused-parameter -Wno-deprecated-declarations -DHAVE_CGNS -DNDEBUG -DHAVE_TECIO -MD -MQ 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -c ../SU2_CFD/src/output/CAdjElasticityOutput.cpp; FAILED: SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o ; c++ -ISU2_CFD/src/37e1b17@@SU2core@sta -ISU2_CFD/src -I../SU2_CFD/src -I../externals/CLI11 -I../externals/cgns/adf -I../externals/cgns/adfh -Iexternals/cgns -I../externals/cgns -Iexternals/cgns/hdf5 -I../externals/cgns/hdf5 -Iexternals/tecio -I../externals/tecio -Iexternals/tecio/teciosrc -I../externals/tecio/teciosrc -I../externals/mel -ICommon/src -I../Common/src -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -DHAVE_CGNS -DNDEBUG -DHAVE_TECIO -MD -MQ 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -MF 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o.d' -o 'SU2_CFD/src/37e1b17@@SU2core@sta/output_CAdjElasticityOutput.cpp.o' -c ../SU2_CFD/src/output/CAdjElasticityOutput.cpp; In file included from ../SU2_CFD/src/output/../../include/output/CAdjElasticityOutput.hpp:30:0,; from ../SU2_CFD/src/output/CAdjElasticityOutput.cpp:29:; ../SU2_CFD/src/output/../../include/output/COutput.hpp:50:10: fatal error: mel.hpp: No such file or directory; #include ""mel.hpp""; ^~~~~~~~~; compilation terminated.; ...; ```. Do I miss some dependency or something ?. **To Reproduce**. 1) git clone https://github.com/su2code/SU2; 2) cd SU2; 3) mkdir build && cd build; 4) meson ../ -Denable-tests=true; 5) ninja -j16 -v. **Desktop (please complete the following information):**; - OS: Linux openEuler 20.03; - C++ compiler and version: g++ (GCC) 7.3.0; - MPI implementation and version: None; - SU2 Version: current master branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1608:3311,depend,dependency,3311,https://su2code.github.io,https://github.com/su2code/SU2/issues/1608,1,['depend'],['dependency']
Integrability,"ns@github.com>; > > wrote:; > > ; > > > Monika,; > > >; > > > There is a chance we could work together on this…Eduardo Molina (copied); > > > co-advised a short project last year on wall functions which made some; > > > progress but did not finalize an implementation. It may be a better; > > > starting point. Eduardo, can you comment where that code went?; > > >; > > > I am also copying Matt S. who is interested in wall function; > > > implementations in SU2. Perhaps we can get everyone on the same page to get; > > > these working in the baseline state…and then improve them in various ways?; > > >; > > > Best,; > > >; > > > Juan; > > >; > > >; > > > > On May 27, 2020, at 9:20 AM, monika1387 <notifications@github.com>; > > > wrote:; > > > >; > > > >; > > > > Sure, now make sense why it is showing issues, Thank you for the; > > > > confirmation!; > > > >; > > > > On Wed, May 27, 2020 at 5:22 AM Pedro Gomes <notifications@github.com>; > > > > wrote:; > > > >; > > > > > I gave the wall function routines a cleanup in #975; > > > > > <https://github.com/su2code/SU2/pull/975> and I think something is; > > > > > missing, we compute the shear stresses but they are not considered in; > > > the; > > > > > BC's of the NS solver.; > > > > >; > > > > > —; > > > > > You are receiving this because you commented.; > > > > > Reply to this email directly, view it on GitHub; > > > > > <https://github.com/su2code/SU2/issues/399#issuecomment-634539255>, or; > > > > > unsubscribe; > > > > > <; > > > https://github.com/notifications/unsubscribe-auth/ALJ3OXAF4VX5CFIJVJFLIDTRTTLVBANCNFSM4DN4N2YA; > > > >; > > > > > .; > > > > >; > > > >; > > > >; > > > > --; > > > > *Thank you,*; > > > >; > > > > *Monika Chauhan *; > > > >; > > > > *Graduate Research Assistant, Doctoral Program*; > > > >; > > > > *Aerospace and Ocean Engineering Dept, Virginia Tech,Blacksburg, VA; > > > 24061*; > > > > *Cell# 540-998-5012*; > > > > —; > > > > You are receiving this because you commented.; > > > > Reply to th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-635021148:2359,rout,routines,2359,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-635021148,1,['rout'],['routines']
Integrability,"nterface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7527,wrap,wrapper,7527,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['wrap'],['wrapper']
Integrability,"ntra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2c20f in PMPI_Allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000048a83f in CBaseMPIWrapper::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5331,integrat,integration,5331,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,o_su2.jpg (0) ; - D Logo/su2_eagle.png (0) ; - M Makefile.am (32) ; - M Makefile.in (53) ; - D MeshTools/Matlab/MergeSU2.m (77) ; - D MeshTools/Matlab/ReadSU2.m (160) ; - D MeshTools/Matlab/WriteSU2.m (91) ; - D MeshTools/Matlab/angle2dcm.m (28) ; - D MeshTools/Matlab/example_MergeMeshes.m (38) ; - D MeshTools/Matlab/getElemTypeInfo.m (52) ; - D MeshTools/Matlab/mesh_bipara_1.su2 (38465) ; - D MeshTools/Matlab/mesh_bipara_2.su2 (3248) ; - D MeshTools/Matlab/plotElem.m (45) ; - D MeshTools/Matlab/plotFace.m (60) ; - D MeshTools/Matlab/plotMarkers.m (64) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTool,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:13350,depend,depend,13350,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['depend'],['depend']
Integrability,"ode>7d8fb6c</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/6"">#6</a> from actions/IAmHughes/fix-link-to-license</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/c53f077c5d8c19236718abc4697a59634ef534cf""><code>c53f077</code></a> Fix link to LICENSE</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/72e8a5ef036620fb7afff8bbb8f9e78910c7ccbc""><code>72e8a5e</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it;",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2286,Depend,Dependabot,2286,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,"odeQL bundle version to 2.15.5. <a href=""https://redirect.github.com/github/codeql-action/pull/2047"">#2047</a></li>; </ul>; <h2>3.22.11 - 13 Dec 2023</h2>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/github/codeql-action/commit/66c3cec3e84942c64294dd8ea34532318b12a14e""><code>66c3cec</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/36f1104e11cf100d92d694d3df5330397e1a1a2d""><code>36f1104</code></a> Bump the npm group with 5 updates</li>; <li><a href=""https://github.com/github/codeql-action/commit/905ae4af531685eaee37e94f46845bf4c420dc62""><code>905ae4a</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2163"">#2163</a> from github/mergeback/v3.24.5-to-main-47b3d888</li>; <li><a href=""https://github.com/github/codeql-action/commit/6dab9f2356bef6518153087116230299a4ee6712""><code>6dab9f2</code></a> Update checked-in dependencies</li>; <li><a href=""https://github.com/github/codeql-action/commit/4d6d2bfeaa911ec12eaaa346f581bb7ab1dc238d""><code>4d6d2bf</code></a> Merge remote-tracking branch 'origin/releases/v3' into mergeback/v3.24.5-to-m...</li>; <li><a href=""https://github.com/github/codeql-action/commit/633baf86c326c07635ec576d7f97ae3f76871e4c""><code>633baf8</code></a> Merge pull request <a href=""https://redirect.github.com/github/codeql-action/issues/2165"">#2165</a> from github/nickfyson/fix-3.24.5-changelog</li>; <li>See full diff in <a href=""https://github.com/github/codeql-action/compare/v2...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=github/codeql-action&package-manager=github_actions&previous-version=2&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compat",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2229:14636,depend,dependencies,14636,https://su2code.github.io,https://github.com/su2code/SU2/pull/2229,1,['depend'],['dependencies']
Integrability,"ollect2.exe: error: ld returned 1 exit status; [7/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5system.c.obj; ../externals/cgns/hdf5/H5system.c: In function 'Wsetenv':; ../externals/cgns/hdf5/H5system.c:482:15: warning: implicit declaration of function 'getenv_s'; did you mean '_wgetenv_; '? [-Wimplicit-function-declaration]; err = getenv_s(&bufsize, NULL, 0, name);; ^~~~~~~~; _wgetenv_s; In file included from ../externals/cgns/hdf5/H5system.c:33:; ../externals/cgns/hdf5/H5system.c: In function 'H5_build_extpath':; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound 1 equals source length [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5system.c:857:17: note: in expansion of macro 'HDstrncat'; HDstrncat(full_path, H5_DIR_SEPS, HDstrlen(H5_DIR_SEPS));; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5system.c:858:13: note: in expansion of macro 'HDstrncat'; HDstrncat(full_path, new_name, HDstrlen(new_name));; ^~~~~~~~~; [44/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5.c.obj; In file included from ../externals/cgns/hdf5/H5.c:22:; ../externals/cgns/hdf5/H5.c: In function 'H5check_version':; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound 1 equals source length [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5.c:920:13: note: in expansion of macro 'HDstrncat'; HDstrncat(lib_str, ""-"", (size_t)1);; ^~~~~~~~~; [49/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Dchunk.c.obj; ../externals/cgns/hdf5/H5Dchunk.c: In function 'H5D__create_chunk_file_map_hyper':; ../externals/cgns/hdf5/H5Dchunk.c:1832:41: warning: passing argument 1 of 'H5S_combine_hyperslab' d",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:1890,depend,depends,1890,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Integrability,"olvers at ~10k nodes per core and about the same on a newer architecture but only at ~1k node per core.; Since hybrid parallel is supposed to be good for strong scaling, this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call tho",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1181,rout,routines,1181,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['rout'],['routines']
Integrability,"om actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:4949,depend,dependency-name,4949,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependency-name']
Integrability,"ompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking ta",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1448,Wrap,Wrapper,1448,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Wrap'],['Wrapper']
Integrability,"on: 7.2.0 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\Danie\Anaconda3\envs\vsptools\python.exe); Did not find pkg-config by name 'pkg-config'; Found Pkg-config: NO; mpicc found: NO; Run-time dependency MPI for c found: NO (tried pkgconfig and config-tool); mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Program swig found: YES (C:\Softwares\swigwin-4.0.2\swig.EXE); Dependency python found: YES (sysconfig); Program install.sh found: YES (sh C:\Users\Danie\Documents\SU2\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.2.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: false; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=C:\bin/bin; export SU2_HOME=C:\Users\Danie\Documents\SU2; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C C:\Users\Danie\Documents\SU2\build install' to compile and install SU2. Build targets in project: 17. Found ninja.exe-1.9.0 at C:\Users\Danie\Documents\SU2\ninja.exe`. **526 fi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:1694,Message,Message,1694,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['Message'],['Message']
Integrability,"onstructor of CSysMatrix by using 'new', and calling the StiffMatrix.Initialize() method, for what I see in matrix_structure.cpp. Also, StiffMatrix is a sparse matrix (nDim x nPoint) x (nDim x nPoint), which must be allocated correctly using the Initialize method to avoid carrying around lots of zeros. With regards to the other point, I think that it is interesting to use the Initialize features of the CSysVector and CSysMatrix in the constructor of the class, just as it happens in the rest of the solver classes (see for example solver_direct_mean, line 261, where the Jacobian of the problem is initialized using a Jacobian.Initialize() call in the constructor). As far as I see it, the mesh update problem is nothing but a copy of the linear elasticity problem, so maintaining the parallelism with all the other solvers in the code (and, in particular, with the structural solver) may be interesting. . Moreover, by allocating the memory in the constructor using StiffMatrix.Initialize(nPoint, nPointDomain...) we make sure we can use the linear solvers in parallel by building a compliant sparse matrix. And if we allocate the stiffness matrix in the constructor, it makes sense to also do so with the vectors of the problem. Again, this maintains the similarities with the rest of the solvers. Finally, in my particular case I call the SetVolume_Deformation() function at least as many times as I do with the fluid and the structural solver. The mesh deformation is a third field in the problem, and by initializing the structure at the beginning of the simulation we can reuse the same spaces in memory along the whole of it, given that (at least in unsteady cases) the mesh update routines may be called several times. This way we avoid to be continuously allocating/deallocating memory. Also, this is useful to have a more accurate measure of the amount of memory we will be using along the simulation right at the beginning of the calculation - although peaks of memory are unavoidable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/200#issuecomment-148017482:2086,rout,routines,2086,https://su2code.github.io,https://github.com/su2code/SU2/pull/200#issuecomment-148017482,1,['rout'],['routines']
Integrability,"option (<a href=""https://redirect.github.com/actions/checkout/issues/1067"">#1067</a>)</li>; <li><a href=""https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac""><code>97a652b</code></a> Update default runtime to node20 (<a href=""https://redirect.github.com/actions/checkout/issues/1436"">#1436</a>)</li>; <li>See full diff in <a href=""https://github.com/actions/checkout/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11077,depend,dependabot-automerge-start,11077,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,4,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,or remove the following message (only adjoint):; There is no Target Equivalent Area file (TargetEA.dat)!!; Using default parameters (Target Equiv Area = 0.0),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/113:24,message,message,24,https://su2code.github.io,https://github.com/su2code/SU2/issues/113,1,['message'],['message']
Integrability,"orementioned flag), for 2-3 minutes for hundreds of MB of record (hence the 500k mesh...).; Run `perf report -g ""fractal,0.5,caller""`, this will show % of time spent in a function relative to its caller and you can expand each function to see what are its children, grandchildren, etc. Like so:; ![image](https://user-images.githubusercontent.com/38071223/63290949-725e5080-c2ba-11e9-90aa-ffc834e726db.png); How cool is that!! Pro-tip hit ""a"" to look at some assembly, honestly sliced bread has nothing on perf. NOTE: By and large Perf is not an intrusive tool, as such the accuracy of the measurements is limited i.e. it is probably not a good idea to draw conclusion about <1% variations. Moving on, I took the top level percentages only, normalized by that of CFluidIteration::Iterate (to exclude pre-processing time) and multiplied the results from the total ""iteration time"" from the history file. Doing that for before and after results allowed computing individual speedup factors for each important routine (in terms of time, otherwise they are all special and important in their own way) e.g. gradients, limiters, upwind/viscous residuals, etc.; ![image](https://user-images.githubusercontent.com/38071223/63292708-30cfa480-c2be-11e9-8d4a-5feb3dc61abf.png). Here is the data by the way: [results.xlsx](https://github.com/su2code/SU2/files/3517492/results.xlsx). As predicted the linear solvers stay the same and routines that are light see more speedup than their arithmetic-intensive friends.; What is surprising to me is how intensive the convective residuals appear to be with only a 7% improvement, so surprising in fact, I do not think the above paints the full picture. Maybe the outlet bandwidth bottleneck (into the Jacobian matrix) is more important.; To put that do the test I switched to Euler-explicit time marching and repeated the measurements:; ![image](https://user-images.githubusercontent.com/38071223/63293351-d8010b80-c2bf-11e9-8135-2502eac1128e.png); Better, but not by m",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-522730951:3579,rout,routine,3579,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-522730951,2,['rout'],['routine']
Integrability,"ork; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4538,integrat,integrated,4538,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['integrat'],['integrated']
Integrability,"orted in increasing order of the point indices to reduce cache misses, this means small groups of contiguous edges will share the same ""iPoint"", coloring single edges destroys this. Furthermore coloring either requires edges to be re-sorted by color, or if the edge indices of each color are instead kept in arrays, performance will suffer due to increased indirection which confounds the hardware pre-fetcher.; This can be mitigated to some extent by coloring groups of edges, groups of edges of the same color can be processed simultaneously, but within each group edges need to be processed serially. However grouping will reduce how much parallelism can be exploited within each color.; - **Gather to scatter** will in general use more memory due to the intermediate variables and extra adjacency information needed. If the entire algorithm is transformed performance may suffer as some computations may have to be repeated.; However, some reductions are possible without intermediate variables, for example when assembling the system matrix for implicit schemes only the diagonal entries can result in race conditions, now it just so happens that each diagonal entry is equal to the negated corresponding column sum.; - **Atomics** are terrible for the performance of code that writes frequently to memory (i.e. bandwidth-bound code), they do not increase the memory footprint and so make sense for compute-bound code.; Bugs due to a missing atomic can be very hard to debug (but any race condition is). Coloring is what one sees most in the literature, and yet I lean towards gather-to-scatter. Fewer things can go wrong with it as it is easy to understand, one gets the maximum amount of parallelism. I will now take two familiar routines, computing gradients (Green-Gauss) and limiters, vectorize / parallelize them in different ways, and measure relative performance to illustrate some of these key points introduced here. There will be C++ snipets and there will be some x86 assembly too :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:6844,rout,routines,6844,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['rout'],['routines']
Integrability,"ould have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; Th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6141,interface,interface,6141,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['interface'],['interface']
Integrability,"oupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1151,integrat,integration,1151,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['integrat'],['integration']
Integrability,"output classes, we should find a common level of abstraction for all the different physical problems we might want to have. Right now there isn't even a unified way of specifying the kind of problem for each zone (what is fluid, what is solid etc) and the kind of coupling. This might also affect the actual implementation/restructuring since we somehow have to decide what driver we have to instantiate and so on. Hopefully we can gather all the people involved to have a discussion on that. Since we have a lot of people working in their branches on multizone problems we should tackle that better sooner than later. As Edwin already suggested, maybe it is a good idea to put some people in charge of organizing some of the bigger structural changes. Furthermore in case some people don't know, we have a slack channel for the dev team. I think that makes it easier to communicate, arrange meetings, discuss problems and ask questions. In case you need an invite, let me know, everybody who wants to contribute is welcome. Thanks for the discussion, I still think that communication is the key of success !. Tim. On Sep 13, 2017 10:30 AM, Edwin van der Weide <notifications@github.com> wrote:. Hi Tom,. Sounds like a plan then to have a look at CIntegration to see what we can do to generalize the time integration. I definitely want to help with this, but I don't think I am the appropriate person to take the lead, because I simply don't have a good overview of all the multi-physics options. Tom, are you willing to take the lead for this?. Furthermore, it is good to have other people involved as well, preferably with detailed knowledge of the different disciplines. Any volunteers?. Thanks,. Edwin. —; You are receiving this because you were mentioned.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-329096830>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AEtI5MkXdqhqPPMuaDziLuDRzWCJfYwrks5sh5KagaJpZM4PQ90s>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329146567:1347,integrat,integration,1347,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329146567,2,['integrat'],['integration']
Integrability,"output for a typical run:. > ------------------------------- Begin Solver -----------------------------; > ; > ---; > ; > Direct iteration to store computational graph.; > ; > ## Compute residuals to check the convergence of the direct problem.; > ; > log10[RMS Density]: -13.0442, Drag: 0.0213497, Lift: 0.326934.; > ; > ------------------------ Discrete Adjoint Summary -----------------------; > ; > ## Total Geometry Sensitivity (updated every 250 iterations): 2.2985e+02; > ; > log10[Maximum residual]: -5.3961e+00.; > Maximum residual point 211, located at (1.2558e+00, 1.9961e+01).; > ; > Iter Time(s) Res[Psi_Rho] Res[Psi_E] Sens_Press Sens_AoA; > 0 1.584266 -6.884726 -12.303428 -2.8113e-06 2.3500e-01; > ; > ---; > ; > Direct iteration to store computational graph.; > ; > ## Compute residuals to check the convergence of the direct problem.; > ; > ```; > 1 1.193311 -6.893856 -12.313088 -2.8113e-06 2.3500e-01; > 2 0.829305 -6.903124 -12.322907 -2.8113e-06 2.3500e-01; > ```. As you can see the message. > ---; > ; > Direct iteration to store computational graph.; > ; > ## Compute residuals to check the convergence of the direct problem. Appears twice, I thought that was a IO bug and I changed. ``````; if (rank == MASTER_NODE) {; cout << endl << ""-------------------------------------------------------------------------"" << endl;; cout << ""Direct iteration to store computational graph."" << ends;; cout << ""Compute residuals to check the convergence of the direct problem."" << ends;; cout << ""-------------------------------------------------------------------------"" << endl << Lendl; }. ```;; by . ``````. ```; if (rank == MASTER_NODE && ((ExtIter == 0) || unsteady )) {; cout << endl << ""-------------------------------------------------------------------------"" << Lendl; cout << ""Direct iteration to store computational graph."" << ends;; cout << ""Compute residuals to check the convergence of the direct problem."" << ends;; cout << ""----------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/329#issuecomment-260126556:1088,message,message,1088,https://su2code.github.io,https://github.com/su2code/SU2/issues/329#issuecomment-260126556,1,['message'],['message']
Integrability,"p_args : [default_warning_flags,su2_cpp_args],; name_prefix : '',; name_suffix: 'so',; install_dir: 'bin'; ) ; ```; However, bug still remains while running python script that used pysu2/pysu2ad module. There is a MPI related issue after calling Postprocessing in pysu2: . ```; ------------------------- Solver Postprocessing -------------------------; Deleted CNumerics container.; Deleted CIntegration container.; Deleted CSolver container.; Deleted CIteration container.; Deleted CInterface container.; Deleted CGeometry container.; Deleted CFreeFormDefBox class.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted nInst container.; Deleted COutput class.; -------------------------------------------------------------------------; [DN0a22c803:22646] *** Process received signal ***; [DN0a22c803:22646] Signal: Segmentation fault: 11 (11); [DN0a22c803:22646] Signal code: (0); [DN0a22c803:22646] Failing at address: 0x0; [DN0a22c803:22646] *** End of error message ***; Segmentation fault: 11; ```; The exact crash location is: ; ```; Exception Type: EXC_BAD_ACCESS (SIGSEGV); Exception Codes: KERN_INVALID_ADDRESS at 0x0000737e9bdce5a2; Exception Codes: 0x0000000000000001, 0x0000737e9bdce5a2; Exception Note: EXC_CORPSE_NOTIFY. VM Region Info: 0x737e9bdce5a2 is not in any region. Bytes after previous region: 3842065106339 Bytes before following region: 13412496251486; REGION TYPE START - END [ VSIZE] PRT/MAX SHRMOD REGION DETAIL; Stack 70000ee7c000-70000eefe000 [ 520K] rw-/rwx SM=PRV thread 2; ---> GAP OF 0xfb164002000 BYTES; MALLOC_TINY 7fb172f00000-7fb173000000 [ 1024K] rw-/rwx SM=PRV . 0 _pysu2.so 	 0x116e2dfd0 CConfig::GetDiscrete_Adjoint() const + 12 (CConfig.hpp:8596); 1 _pysu2.so 	 0x1173844ca CDriver::Postprocessing() + 8600 (CDriver.cpp:558); 2 _pysu2.so 	 0x116bcaf0c _wrap_CDriver_Postprocessing + 199 (pySU2.cxx:10061); 0 libsystem_kernel.dylib 	 0x7ff801374d5a __select + 10; 1 libopen-pal.40.dylib 	 0x10a42def6 sele",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840:1579,message,message,1579,https://su2code.github.io,https://github.com/su2code/SU2/issues/1606#issuecomment-1106125840,1,['message'],['message']
Integrability,"pare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself). </details>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:11870,depend,dependabot,11870,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,22,"['Depend', 'depend']","['Dependabot', 'dependabot', 'dependency']"
Integrability,"pare/v3...v4.0.0"">https://github.com/actions/upload-artifact/compare/v3...v4.0.0</a></p>; <h2>v3.1.3</h2>; <h2>What's Changed</h2>; <ul>; <li>chore(github): remove trailing whitespaces by <a href=""https://github.com/ljmf00""><code>@​ljmf00</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/313"">actions/upload-artifact#313</a></li>; <li>Bump <code>@​actions/artifact</code> version to v1.1.2 by <a href=""https://github.com/bethanyj28""><code>@​bethanyj28</code></a> in <a href=""https://redirect.github.com/actions/upload-artifact/pull/436"">actions/upload-artifact#436</a></li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/actions/upload-artifact/compare/v3...v3.1.3"">https://github.com/actions/upload-artifact/compare/v3...v3.1.3</a></p>; <h2>v3.1.2</h2>; <ul>; <li>Update all <code>@actions/*</code> NPM packages to their latest versions- <a href=""https://redirect.github.com/actions/upload-artifact/issues/374"">#374</a></li>; <li>Update all dev dependencies to their most recent versions - <a href=""https://redirect.github.com/actions/upload-artifact/issues/375"">#375</a></li>; </ul>; <h2>v3.1.1</h2>; <ul>; <li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=""https://redirect.github.com/actions/upload-artifact/issues/351"">#351</a></li>; </ul>; <h2>v3.1.0</h2>; <h2>What's Changed</h2>; <ul>; <li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=""https://redirect.github.com/actions/upload-artifact/pull/327"">actions/upload-artifact#327</a>); <ul>; <li>Adds checksum headers on artifact upload (<a href=""https://redirect.github.com/actions/toolkit/pull/1095"">actions/toolkit#1095</a>) (<a href=""https://redirect.github.com/actions/toolkit/pull/1063"">actions/toolkit#1063</a>)</li>; </ul>; </li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/5d5d22a31266ced268874388b861e4b58bb5c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:2778,depend,dependencies,2778,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['depend'],['dependencies']
Integrability,"pe: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: /usr/lib64/openmpi/bin/mpicc (gcc 8.3.1 ""gcc (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C linker for the host machine: GNU ld.bfd 2.30-79; C++ compiler for the host machine: /usr/lib64/openmpi/bin/mpicxx (gcc 8.3.1 ""g++ (GCC) 8.3.1 20191121 (Red Hat 8.3.1-5)""); C++ linker for the host machine: GNU ld.bfd 2.30-79; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile a",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2125,depend,dependency,2125,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['depend'],['dependency']
Integrability,"pe_optimization.py"", line 154, in <module>; main(); File ""shape_optimization.py"", line 99, in main; options.quiet ); File ""shape_optimization.py"", line 137, in shape_optimization; SU2.opt.SLSQP(project,x0,xb,its,accu); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 128, in scipy_slsqp; epsilon = eps ); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 206, in fmin_slsqp; constraints=cons, *_opts); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/slsqp.py"", line 364, in _minimize_slsqp; fx = func(x); File ""/usr/lib64/python2.6/site-packages/scipy/optimize/optimize.py"", line 282, in function_wrapper; return function(_(wrapper_args + args)); File ""/home/fortin/Python/bin/SU2/opt/scipy_tools.py"", line 144, in obj_f; obj = project.obj_f(x); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 211, in obj_f; return self._eval(konfig, func,dvs); File ""/home/fortin/Python/bin/SU2/opt/project.py"", line 180, in _eval; vals = design._eval(func,_args); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 142, in _eval; vals = eval_func(_inputs); File ""/home/fortin/Python/bin/SU2/eval/design.py"", line 240, in obj_f; func = su2func(this_obj,config,state); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 85, in function; aerodynamics( config, state ); File ""/home/fortin/Python/bin/SU2/eval/functions.py"", line 224, in aerodynamics; info = su2run.direct(config); File ""/home/fortin/Python/bin/SU2/run/direct.py"", line 79, in direct; SU2_CFD(konfig); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 88, in CFD; run_command( the_Command ); File ""/home/fortin/Python/bin/SU2/run/interface.py"", line 276, in run_command; raise exception , message; SU2.DivergenceFailure: Path = /home/fortin/Python/DESIGNS/DSN_116/DIRECT/,; Command = mpirun -n 1 /home/fortin/Python/bin/SU2_CFD config_CFD.cfg; ## SU2 process returned error '2'. mpirun noticed that the job aborted, but has no info as to the process; ## that caused that situation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/170:2649,interface,interface,2649,https://su2code.github.io,https://github.com/su2code/SU2/issues/170,3,"['interface', 'message']","['interface', 'message']"
Integrability,"peedup:; ![image](https://user-images.githubusercontent.com/38071223/82442103-ee2e3900-9a96-11ea-9ab8-fe9fa0842b22.png); This case is very light on the linear solvers (CFL of 20) so this result is actually really good.; There seems to be no compromise in accuracy, the residuals eventually go below -11 (8 orders reduction) in the same number of iterations, and the mesh metrics for this case are not stellar:; ```; +--------------------------------------------------------------+; | Mesh Quality Metric| Minimum| Maximum|; +--------------------------------------------------------------+; | Orthogonality Angle (deg.)| 36.7556| 89.9375|; | CV Face Area Aspect Ratio| 1.03036| 4477.19|; | CV Sub-Volume Ratio| 1.00693| 97.7189|; +--------------------------------------------------------------+; ```; For purely linear applications like mesh deformation (including SU2_DOT) or linear elasticity, for which the solution is not iterative, an impact on accuracy is expected.; For example deforming a grid of 830k nodes (with stretched cells and all that good stuff) with SU2_DEF using CG+ILU converges like this:; ![image](https://user-images.githubusercontent.com/38071223/82590480-a93cfc00-9b95-11ea-8266-95a5decbf011.png); So it is still possible to converge the linear system to very tight tolerances, but after a certain tolerance the convergence rate becomes worse, that threshold will depend on the size of the problem (larger -> harder to solve) or more formally on the condition number of the matrix.; For this example SU2_DEF uses 25% less memory in single precision than in double (or double requires 33% more), and solves to 1e-10 in the same time (as it requires more iterations). ## Related Work; #789. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/989:1919,depend,depend,1919,https://su2code.github.io,https://github.com/su2code/SU2/pull/989,1,['depend'],['depend']
Integrability,"piler.; There is a problem when trying to link with the system's libz library. ```; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1043,Message,Message,1043,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['Message'],['Message']
Integrability,"ple dataset, I have run some; variations on the jobs, and my findings were:; (Please note that *all* ""markers"" I have mentioned in the next items refer; to solid walls in the mesh, using the RANS solver); 1- When I impose HEATFLUX=0 *and* ISOTHERMAL=290 Kelvin, for the same; markers, there are no complaints from SU2. It shows that SU2 ignores the; imposition of HEATFLUX=0, in this case.; 2- Just setting ISOTHERMAL=290 Kelvin (using all of the same markers as in; (item 1), above), without any HEATFLUX setting, then SU2 produces the same; results as in (item1).; 3- When some markers are set with HEATFLUX=0 and the rest of them are set; with ISOTHERMAL=290 Kelvin (so that each wall marker in the mesh is; referenced), there are no complaints from SU2, and the job goes as expected.; 4-The error message mentioned earlier, appears when one or more solid wall; markers *is not marked* concerning HEATFLUX or ISOTHERMAL; .; My conclusion then is that the error message appeared when I mistakenly; have not included a wall marker (assigning it as a HEATFLUX or an; ISOTHERMAL marker!); Does it make sense?; Kind regards,. On Mon, Oct 23, 2023 at 7:48 PM Jairo Cavalcante ***@***.***>; wrote:. > Unfortunately, my example involves a swirler and nozzle for the; > Navier-Stokes solver with Menter model, so the dataset is relatively large.; > Let me check whether some older small Euler mesh exhibits the same message!; > I will let you know! Thank you very much.; >; > On Mon, Oct 23, 2023 at 6:34 PM Pedro Gomes ***@***.***>; > wrote:; >; >> Is there a simple example to reproduce the issue?; >>; >> —; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/pull/2109#issuecomment-1776057496>, or; >> unsubscribe; >> <https://github.com/notifications/unsubscribe-auth/AHGXZUV3DNRF3O55YAWT563YA3PETAVCNFSM6AAAAAA3QKLVDWVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTONZWGA2TONBZGY>; >> .; >> You are receiving this because you commented.Message ID:; >> ***@***.***>; >>; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035:1004,message,message,1004,https://su2code.github.io,https://github.com/su2code/SU2/pull/2109#issuecomment-1777018035,5,"['Message', 'message']","['Message', 'message']"
Integrability,"primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:6355,interface,interface,6355,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,"['interface', 'wrap']","['interface', 'wrapper']"
Integrability,"ps://redirect.github.com/actions/checkout/pull/1196"">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1287"">Fix typos found by codespell</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1369"">Add support for sparse checkouts</a></li>; </ul>; <h2>v3.5.2</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1289"">Fix api endpoint for GHES</a></li>; </ul>; <h2>v3.5.1</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1246"">Fix slow checkout on Windows</a></li>; </ul>; <h2>v3.5.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1237"">Add new public key for known_hosts</a></li>; </ul>; <h2>v3.4.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1209"">Upgrade codeql actions to v2</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1210"">Upgrade dependencies</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1225"">Upgrade <code>@​actions/io</code></a></li>; </ul>; <h2>v3.3.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1045"">Implement branch list using callbacks from exec function</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1050"">Add in explicit reference to private checkout options</a></li>; <li>[Fix comment typos (that got added in <a href=""https://redirect.github.com/actions/checkout/issues/770"">#770</a>)](<a href=""https://redirect.github.com/actions/checkout/pull/1057"">actions/checkout#1057</a>)</li>; </ul>; <h2>v3.2.0</h2>; <ul>; <li><a href=""https://redirect.github.com/actions/checkout/pull/942"">Add GitHub Action to perform release</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/967"">Fix status badge</a></li>; <li><a href=""https://redirect.github.com/actions/checkout/pull/1002"">Replace datadog/squid with ubuntu/squid Docker",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2126:7731,depend,dependencies,7731,https://su2code.github.io,https://github.com/su2code/SU2/pull/2126,2,['depend'],['dependencies']
Integrability,python wrapper and AD tool,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/539:7,wrap,wrapper,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/539,1,['wrap'],['wrapper']
Integrability,"python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; The ninja command fails like so:; ```; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./ninja -C build install ; ninja: Entering directory `build'; [583/894] Linking target SU2_CFD/src/SU2_CFD; FAILED: SU2_CFD/src/SU2_CFD ; /usr/bin/g++ -o SU2_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:3172,Wrap,Wrapper,3172,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,1,['Wrap'],['Wrapper']
Integrability,"r: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should me",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1797,Message,Message,1797,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Message'],['Message']
Integrability,"r::Allreduce (sendbuf=0x7fffffff8a20, ; recvbuf=0x1646158 <double CSysVector<double>::dot<CSysVector<double> >(VecExpr::CVecExpr<CSysVector<double>, double> const&) const::dotRes>, count=1, ; datatype=0x2aaaaafb4de0 <ompi_mpi_double>, ; op=0x2aaaaafc9920 <ompi_mpi_op_sum>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/drivers/../../include/drivers/../../../Common/include/parallelization/mpi_structure.hpp:205; #5 0x00000000004b0ef3 in CSysVector<double>::dot<CSysVector<double> > (; this=0x23a20d0, expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:5782,integrat,integration,5782,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/actions/cache/blob/main/RELEASES.md"">actions/cache's changelog</a>.</em></p>; <blockquote>; <h1>Releases</h1>; <h3>3.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 16</li>; </ul>; <h3>3.0.1</h3>; <ul>; <li>Added support for caching from GHES 3.5.</li>; <li>Fixed download issue for files &gt; 2GB during restore.</li>; </ul>; <h3>3.0.2</h3>; <ul>; <li>Added support for dynamic cache size cap on GHES.</li>; </ul>; <h3>3.0.3</h3>; <ul>; <li>Fixed avoiding empty cache save when no files are available for caching. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/624"">issue</a>)</li>; </ul>; <h3>3.0.4</h3>; <ul>; <li>Fixed tar creation error while trying to create tar with path as <code>~/</code> home folder on <code>ubuntu-latest</code>. (<a href=""https://github-redirect.dependabot.com/actions/cache/issues/689"">issue</a>)</li>; </ul>; <h3>3.0.5</h3>; <ul>; <li>Removed error handling by consuming actions/cache 3.0 toolkit, Now cache server error handling will be done by toolkit. (<a href=""https://github-redirect.dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://git",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:5519,depend,dependabot,5519,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependabot']
Integrability,"rces files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:1501,integrat,integrated,1501,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['integrat'],['integrated']
Integrability,"re is even a single rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:4573,rout,routines,4573,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['rout'],['routines']
Integrability,"redirect.dependabot.com/actions/upload-release-asset/issues/5"">#5</a> from cesperanc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2810,depend,dependabot-automerge-start,2810,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,6,['depend'],"['dependabot-automerge-end', 'dependabot-automerge-start']"
Integrability,"refix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/app/python-3.6.3/bin/python3.6); Dependency mpi skipped: feature with-mpi disabled; Dependency mpi skipped: feature with-mpi disabled; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: false; CGNS: false; AD (reverse): true; AD (forward): true; Python Wrapper: false; Intel-MKL: false; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1/bin; export SU2_HOME=/home/vksuman/SU2-7.0.3; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 12; Found ninja-1.9.0.git at /home/vksuman/SU2-7.0.3/ni",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:2249,Depend,Dependency,2249,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,3,"['Depend', 'Message']","['Dependency', 'Message']"
Integrability,"request adds the ability to specify the values of the inlet variables for inlet boundary conditions. This includes both the Euler/Navier-Stokes variables as well as the turbulence variables. No new inlet conditions are created; rather, the existing inlet conditions (such as total pressure and total temperature) can be set to custom values. This is similar to the branch I mentioned in #467. The main difference is that the other branch uses hardcoded routines in C++ to read in a table of values and set the inlet conditions. This branch forgoes all of that and lets the user decide how to specify the inlet conditions. This allows both function-based inlet conditions (using python functions) or table-based inlet conditions (using python to read in the values from a file). I'm not opposed to a purely C++ approach to accomplishing the same objective, but I think the python way is much more flexible. Multigrid is **not** currently supported. I don't currently know enough about the agglomeration routines to ensure that I implemented it correctly. Multigrid is not a high priority for me, since periodic BCs and time-stepping are also incompatible with multigrid. ### Verification. As a test-case, I used the flat-plate boundary layer problem in the Tutorials/TestCases directories. I chopped the domain off around x=.5, then used the values from a converged simulation to set the inlet to the correct values at x=.5. You can see some of the results below. I can turn the truncated flat plate into a regression test, if you would like. ![x-momentumcontour](https://user-images.githubusercontent.com/13340225/35588322-e69ac5f4-05c5-11e8-902d-64941ab731fb.png); Figure 1: A comparison of the momentum in the x-direction between truncated and full domains. ![x-momentum_line](https://user-images.githubusercontent.com/13340225/35588290-cb0141c4-05c5-11e8-88d3-085018fabf52.png); Figure 2: A comparison of the momentum profiles at x~=1.5. ![nu_tildecontour](https://user-images.githubusercontent.co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/503:1047,rout,routines,1047,https://su2code.github.io,https://github.com/su2code/SU2/pull/503,1,['rout'],['routines']
Integrability,"res python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will be compiled if a cache is available). This should speed up the runs by a lot. . - automake and meson can coexist without any problems. Maybe we can keep this compatibility for version 7 and remove it later if we all agree. Also the preconfigure.py should not be necessary anymore then. - (unit) tests can be easily added and integrated into the build process. - I will add a proper documentation soon. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #685 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:3392,integrat,integrated,3392,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['integrat'],['integrated']
Integrability,"research group at UT Austing has implemented a unit testing framework on our branch, which we're happy with. Some choices were arbitrary, and some choices were made based on our development environment. Those choices may be different for other groups. Here's what we have done:. The unit testing framework is compiled and run using autotools. For more information on autotool's setup, see their documentation<https://www.gnu.org/software/automake/manual/html_node/Tests.html>. Since autotools is the build system for SU2, this involves minimal changes. Using automake, the build process for building unit tests becomes:. '''; ./bootstrap; ./configure; make; make check; '''. We use Boost's unit testing framework<https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>. This provides a convenient set of macros for instatiating tests, grouping tests into suites, and running checks. This choice was based on what is available in our development setup. We have integrated our unit tests into our Travis CI regression testing. Every time we push commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:3388,integrat,integrated,3388,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['integrat'],['integrated']
Integrability,"riables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2250,Wrap,Wrapper,2250,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,4,"['Wrap', 'interface']","['Wrapper', 'interface']"
Integrability,"rity-and-quality` query suite](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs) for you. #### How do I upgrade my CodeQL engine?; No need! New versions of the CodeQL analysis are constantly deployed on GitHub.com; your repository will automatically benefit from the most recently released version. #### The analysis doesn’t seem to be working; If you get an error in GitHub Actions that indicates that CodeQL wasn’t able to analyze your code, please [follow the instructions here](https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/troubleshooting-the-codeql-workflow) to debug the analysis. #### How do I disable LGTM.com?; If you have LGTM’s automatic pull request analysis enabled, then you can [follow these steps to disable the LGTM pull request analysis](https://lgtm.com/help/lgtm/managing-automated-code-review#disabling-pr-integration). You don’t actually need to remove your repository from LGTM.com; it will automatically be removed in the next few months as part of the deprecation of LGTM.com ([more info here](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/)). #### Which source code hosting platforms does code scanning support?; GitHub code scanning is deeply integrated within GitHub itself. If you’d like to scan source code that is hosted elsewhere, we suggest that you create a mirror of that code on GitHub. #### How do I know this PR is legitimate?; This PR is filed by the official LGTM.com GitHub App, in line with the [deprecation timeline that was announced on the official GitHub Blog](https://github.blog/2022-08-15-the-next-step-for-lgtm-com-github-code-scanning/). The proposed GitHub Action workflow uses the [official open source GitHub CodeQL Action](https://github.com/github/codeql-action/). If you have any other questions or concerns, please",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1840:4015,integrat,integration,4015,https://su2code.github.io,https://github.com/su2code/SU2/pull/1840,1,['integrat'],['integration']
Integrability,"rnals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; [47/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Eint.c.obj; In file included from ../externals/cgns/hdf5/H5Eint.c:34:; ../externals/cgns/hdf5/H5Eint.c: In function 'H5E__get_msg':; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:132:9: note: in expansion of macro 'HDstrncpy'; HDstrncpy(msg_str, msg->msg, MIN((size_t)(len + 1), size));; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:128:20: note: in expansion of macro 'HDstrlen'; len = (ssize_t)HDstrlen(msg->msg);; ^~~~~~~~; [50/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5E.c.obj; In file included from ../externals/cgns/hdf5/H5E.c:51:; In function 'H5E__get_class_name',; inlined from 'H5Eget_class_name' at ../externals/cgns/hdf5/H5E.c:605:22:; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5E.c:640:9: note: in expansion of macro 'HDstrncpy'; HDstrncpy(name, cls->cls_name, MIN((size_t)(len + 1), size));; ^~~~~~~~~; ../externals/cgns/hdf5/H5E.c: In function 'H5Eget_class_name':; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5E.c:636:20: note: in expansion of macro 'HDstrlen'; len = (ssize_t)HDstrlen(cls->cls_name);; ^~~~~~~~; ninja: build stopped: subcommand failed.`",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:10618,depend,depends,10618,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Integrability,"rom CSolver constructors to dedicated LoadRestart() routines within each CSolver class. This is purely a refactoring of the code, so all previous functionality should stay the same. . There are two goals:. 1. Consistency for reading of restarts and minimizing duplicated code. LoadRestart() routines already existed for some solvers, but not others. They were being used in some cases, but not all. In addition, by having the restarts read in the constructor, they were tied to the instantiation of the CVariable class, but this is unnecessary and caused some odd behavior in corner cases. Now, the solver constructors always instantiate the CVariable classes with free-stream / uniform initial conditions, and the LoadRestart() routine in each solver is the only place where restart files are loaded, which is first done in CDriver::Solver_Preprocessing(). 2. Now that the reading of restarts is isolated in one routine of each CSolver class (out of the CSolver constructor and separated from instantiating CVariable), new versions of the LoadRestart() routines can be written alongside the ASCII originals for reading binary restart files (e.g., LoadRestart_Binary() ), which are coming next. ~~**Important** (@fpalacios, all): the metadata that was being written to the bottom of the ASCII restart files for updating parameters has been moved to its own file for now so that we can start writing the data portion of the restarts in binary. It will be written to/read from either “restart.meta” or “restart_adj.meta” if the new option UPDATE_RESTART_PARAMS= YES is set. I would like some feedback about this. I am open to doing something different with that information, e.g., putting it in the cfg file somehow since they are config options for the most part. Please let me know what you think.~~. Please check your own cases to make sure that restarts and SU2_SOL are working for you as before. Next up: Parallel writing of binary restart files with new LoadRestart_Binary() routines for loading.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/374:963,rout,routine,963,https://su2code.github.io,https://github.com/su2code/SU2/pull/374,3,['rout'],"['routine', 'routines']"
Integrability,"rtifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6637,Depend,Dependabot,6637,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['Depend'],['Dependabot']
Integrability,"ry elements in index 2 (Marker = injest).; 290 boundary elements in index 3 (Marker = inlet).; 22500 boundary elements in index 4 (Marker = inner_nearfield).; 243 boundary elements in index 5 (Marker = outlet).; 146871 boundary elements in index 6 (Marker = symmetry).; 22500 boundary elements in index 7 (Marker = outer_nearfield).; Calling ParMETIS...; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36096 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36400 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 35800 bytes received but buffer size is 31680; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36368 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36088 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 1128 bytes received but buffer size is 1056; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485343:1691,Message,Message,1691,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485343,7,['Message'],['Message']
Integrability,"s : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without enabling openblas, it did move forward but broke further later in the build with a ridiculously long error message. For the sake of readability I am attaching a [logfile](https://github.com/su2code/SU2/files/4652822/su2_build_NoOpenBlas.log) here. For obvious reasons I think this is because of the `-Denable-pywrapper=true` flag. What is the problem here? I want to build SU2 with all these options available. I am also thinking maybe I should install mpich instead of openmpi to use mpi features.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1798,Depend,Depends,1798,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,2,"['Depend', 'message']","['Depends', 'message']"
Integrability,"s nowadays, so we should always be improving the class design accordingly. I suppose this will just get more important with adding more physics, zones, and more complex time integration schemes. I would like to highlight that when the code was first released, we did not have ""zones"" at all (not until some early sliding mesh work after a couple of versions), and the CDriver and CIteration classes didn't even exist until we dreamed them up a couple of years ago. My point is that, with some proper planning, we have the creativity and the right team to develop the solution we need, and we shouldn't be afraid to make big changes when necessary. Moving quickly while leveraging the team's broad skillset is one of our biggest advantages in this project. As you all know, over the years, we continue to move toward a *_structure.cpp and *_physics.cpp mindset for how we do our abstractions/data encapsulations, with ""structure"" components reused and ""physics"" components being specialized to a certain set of governing equations. This has happened in many places, including recently with the CTransfer class, for instance, and it is likely to happen with the COutput class(es) before long. However, one area where there hasn't been much evolution is within the CIntegration classes. Apart from a couple of additions for structural problems and now the DG integration, it is largely the same as it was in the first release. Perhaps this is our opportunity to rethink and update these classes for future expansion, just as we've done for others over the years. We could rework them, move them up or down in the hierarchy, change where they're instantiated, change the inheritance, and so on. Even if they get a little more complicated (like usual), as long as they're properly abstracted, it isn't likely to bother the developers working in other areas of the code too much. In short, I think some effort spent on the CIntegration classes could help here, and they are due for some updates anyway. Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-329078585:1438,integrat,integration,1438,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-329078585,1,['integrat'],['integration']
Integrability,s which replaced blas while trying to meet the pre-install requirements.; ```; slimshady@arch-linux-hp-probook-g3-450: UserPackages$ pacman -Qi blas lapack openblas; Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. Name : lapack; Version : 3.9.0-2; Description : Linear Algebra PACKage; Architecture : x86_64; URL : https://www.netlib.org/lapack; Licenses : custom; Groups : None; Provides : None; Depends On : blas; Optional Deps : None; Required By : arpack qrupdate suitesparse; Optional For : None; Conflicts With : None; Replaces : None; Installed Size : 7.03 MiB; Packager : Antonio Rojas <arojas@archlinux.org>; Build Date : Sun 24 Nov 2019 04:13:58 PM IST; Install Date : Sat 22 Feb 2020 01:05:19 PM IST; Install Reason : Installed as a dependency for another package; Install Script : No; Validated By : Signature. Name : openblas; Version : 0.3.8-1; Description : An optimized BLAS library based on GotoBLAS2 1.13 BSD; Architecture : x86_64; URL : https://www.openblas.net/; Licenses : BSD; Groups : None; Provides : blas=3.8.0; Depends On : gcc-libs; Optional Deps : None; Required By : lapack; Optional For : None; Conflicts With : blas; Replaces : None; Installed Size : 17.73 MiB; Packager : Felix Yan <felixonmars@archlinux.org>; Build Date : Wed 12 Feb 2020 01:42:30 PM IST; Install Date : Mon 18 May 2020 06:28:46 PM IST; Install Reason : Explicitly installed; Install Script : No; Validated By : Signature. ```. I tried it without ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631053271:1157,Depend,Depends,1157,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631053271,1,['Depend'],['Depends']
Integrability,"s/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:5451,Depend,Dependabot,5451,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['Depend'],['Dependabot']
Integrability,"s/download-artifact/commit/348754975ef0295bfa2c111cba996120cfdf8a5d""><code>3487549</code></a> Update release-new-action-version.yml (<a href=""https://redirect.github.com/actions/download-artifact/issues/292"">#292</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/download-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/download-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2230:5361,Depend,Dependabot,5361,https://su2code.github.io,https://github.com/su2code/SU2/pull/2230,1,['Depend'],['Dependabot']
Integrability,"s/setup-python/commit/8635b1ccc5934e73ed3510980fd2e7790b85839b""><code>8635b1c</code></a> Change deprecation comment to past tense (<a href=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen th",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7501,depend,dependency-name,7501,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,1,['depend'],['dependency-name']
Integrability,"speranc/documentation-update</li>; <li><a href=""https://github.com/actions/upload-release-asset/commit/bf2a7fbecfaaaa29f7819c650ad302e52f68238e""><code>bf2a7fb</code></a> Update example to use the fixed version</li>; <li>See full diff in <a href=""https://github.com/actions/upload-release-asset/compare/v1.0.1...v1.0.2"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-release-asset&package-manager=github_actions&previous-version=1.0.1&new-version=1.0.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself); - `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1737:2900,Depend,Dependabot,2900,https://su2code.github.io,https://github.com/su2code/SU2/pull/1737,3,['Depend'],['Dependabot']
Integrability,"ssipation would be added in a step afterwards.; -> **new Euler BC**: Here for compressible flow always (!) `CUpwRoe_Flow` is taken as numerical convective scheme. Boundaries have their own numerics container in `CONV_BOUND_TERM`. Look in CDriver.cpp for allocation of `SPACE_CENTERED` compressible schemes (as JST was used in all examples in this issue, but the problem is still there if upwind schemes were taken). And independent of the users choice of `CONV_NUM_METHOD_FLOW`, as said above, `CUpwRoe_Flow` is hard coded as numerical convective scheme for boundary nodes. As in the old Euler BC a ""reflected state"" is created and handed to the `ComputeResidual` Routine of the numerical scheme, together with the boundary vertex state.; -> So one major difference between both formulations is that in the new Euler wall left & right state are created and the respective convective scheme class does the rest via `ComputeResidual`. In the old implementation everything done in the `ComputeResidual` routine is ""copied"" into the BC_Euler_Wall and modified to its needs... and it looks like central convective scheme (JST) without dissipation term. 2. When changing the `CUpwRoe_Flow` scheme, which is used only for convective schemes on boundaries `CONV_BOUND_TERM`, such that it behaves like JST without dissipation term -> then old Euler and new Euler wall BC return the same results in CD and CL. 3. So the Convective Residual is somewhat different on the surface where the Objectives CL and CD are evaluated. JST without dissipation term vs `CUpwRoeBase_Flow::ComputeResidual`. Which (and if) one of both approaches is the ""corect"" is not something I am able to say with great confidence. I tend towards: ""Well, just as you get (slightly) different results if you choose JST or ROE in the domain due to the different residual formulation, you get different results if different convective schemes on the boundary vertices are chosen. In the domain the choice is ~ Upwind if discontinuities like sh",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-565461347:1665,rout,routine,1665,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-565461347,1,['rout'],['routine']
Integrability,"st machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2649,Wrap,Wrapper,2649,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,1,['Wrap'],['Wrapper']
Integrability,"strlen(cause_strings[idx]);; ^~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1159:25: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; [47/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Eint.c.obj; In file included from ../externals/cgns/hdf5/H5Eint.c:34:; ../externals/cgns/hdf5/H5Eint.c: In function 'H5E__get_msg':; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:132:9: note: in expansion of macro 'HDstrncpy'; HDstrncpy(msg_str, msg->msg, MIN((size_t)(len + 1), size));; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:128:20: note: in expansion of macro 'HDstrlen'; len = (ssize_t)HDstrlen(msg->msg);; ^~~~~~~~; [50/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5E.c.obj; In file included from ../externals/cgns/hdf5/H5E.c:51:; In function 'H5E__get_class_name',; inlined from 'H5Eget_class_name' at ../externals/cgns/hdf5/H5E.c:605:22:; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5E.c:640:9: note: in expansion of macro 'HDst",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:9775,depend,depends,9775,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Integrability,"sure drop, based on the difference between current and prescribed massflow, was done in the Flow solver Preprocessing. That causes some trouble as that routine is called multiple times during normal starts, restarts and even twice(!) for every normal iteration. So do not put any iterated quantities in those like I did. I now did put the update right in front of where it is used -> in the Source_Residual. Like so there shoulnd't be that much trouble of correct taping in that one iteration for the adjoint and it makes the logic of `Inner_iter/outer_iter==0` etc unnecessary. I am not sure the changes up until now are necessary but I am not sure whether they are enough tbh. I will update this description accordingly:. Update: So to give you an idea of the current state of gradient validation. My setup is the good'ol 2D periodic Pin case (fluid-only) with the Design variables being FFD-parameters only around the middle pin (so no Periodic Interface shenanigans up to now) and I have 4 OF: Avg_Temp and Drag on the middle-Pin Surface as well as the Pressure-drop between In/outlet plus massflow through in- OR outlet (which is the same in value but maybe not for the gradient :thinking: ):; 1. For prescribed pressure drop I get a very good agreement for Avg_Temp and Drag (below 0.1% relative diff across the board).; ![image](https://user-images.githubusercontent.com/31306376/152566341-c2d7dc06-c968-41d4-b655-6ba94c211684.png); For Massflow and pressure drop the gradients are off by quite a bit but not too shabby (a good optimizer certainly could make good use of those gradients). Of course the Pressure-drop gradient should be 0 but there are prob some numerical gains to be made. The Pressure-drop gradient is O(1e-5) where the others are O(1 - 1e4) so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:1501,Interface,Interface,1501,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['Interface'],['Interface']
Integrability,"t coefficient with respect to the closure coefficients of the SA turbulence model. I've created new variable names in the CConfig class for the SA closure coefficients and have modified the code so that it reads the values for the coefficients from the config file, instead of the given hard coded values. (I would need to change the values later on). Now I'm trying to get the sensitivity of my objective function (in this case Cl as specified in the config file) with respect to these closure coefficients. . I've modified the CDiscAdjSolver class in solver_structure.hpp and solver_structure.inl by adding new variables for the sensitivities I want to calculate, defining inline Get functions which return the sensitivity values, and defining virtual functions onto the CSolver class. I've modified solver_adjoint_discrete.cpp by adding new variables which read in the values of the closure coefficients from the config class and passing these variables onto AD::RegisterInput() _(these are done in the RegisterVariables routine)_, and then passing them onto SU2_TYPE::GetDerivative() to calculate the derivatives _(this is done in the ExtractAdjoint_Variables routine)_. I store the derivative values as new variables called Total_Sens_SA, similar to what's already done for Total_Sens_AoA, for example. The problem I have is that when I pass the variables onto SU2_TYPE::GetDerivative(), the output is returned as 0. As far as I see, I've followed the same steps that are done to get the other sensitivity values such as Total_Sens_AoA or Total_Sens_Mach, but I don't understand why the derivative is being returned as 0. Is there something I'm missing here? I assumed as long as I register the variables whose derivatives I want onto AD::RegisterInput() the rest should be taken care of inside the AD and codi modules and the derivatives should be calculated correctly?. Curiously, in output_structure.cpp where values such as Total_Sens_AoA are called again to be printed to screen, these valu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/679:1136,rout,routine,1136,https://su2code.github.io,https://github.com/su2code/SU2/issues/679,2,['rout'],['routine']
Integrability,"t like. ```cpp; if (rank == MASTER_NODE) {; cout << ""My Message"" << endl;; }; ```; This is not a good example from many points of view. From performance-wise overly used `std::endl` is a killer. If one needs to redirect output to file it is additional loss etc. ; From the user's perspective, it is not possible to set the logging level. At least a three-level logging would be nice (INFO/WARNING/DEBUG) this also makes life easier for developers too. It is also nice to have a rotating log file if one runs longer cases on the HPC systems. After a while the log files getting so bloating . **Describe the solution you'd like**. A configurable logger would be better with defaults not changing the current system. ```text; % LOGGING LOCATIONS default is SCREEN; LOG= (SCREEN, FILE); % Default is SU2.log; LOG_FILE = ""myLog.log""; % Logging level INFO/DEBUG ; LOG_LEVEL = ""DEBUG"" ; ```; In the code . For general messages ; ```cpp; INFO << ""My useful information"";; DEBUG << ""Operation done in "" << time << "" seconds"";; ```. There is also a lot of `--------------- Start Solver ----------` type headers in the code we can automate this as . ```cpp; HEADER << ""Start Solver""; ; ```. **Describe alternatives you've considered**. A proper choice of logging library is required. Alternatives I considered: . [AixLog](https://github.com/badaix/aixlog). - Header only; - Vanilla C++11, no dependencies; - Uses `<<` operator; - MIT licence. [spdlog](https://github.com/gabime/spdlog); - Header only/compiled; - C++11; - Uses LOG("""") syntax ; - More users/mature project ; - MIT licence. [easylogging](https://github.com/amrayn/easyloggingpp); - Header only; - C++11; - Uses `<<` operator; - MIT licence . [glog](https://github.com/google/glog); - C++14 required the codebase must be bumped (may not be worth it); - Uses `<<` operator ; - Google Licence (IDK if it comp. with GPL). I am in favor of spdlog library . **Additional context**; *Add any other context or screenshots about the feature request here.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1991:1449,depend,dependencies,1449,https://su2code.github.io,https://github.com/su2code/SU2/issues/1991,1,['depend'],['dependencies']
Integrability,"t normal (and a tangent to this normal) the current implementation of BC_Sym cannot be ""exploited"" to serve as an ""inviscid (slip) wall"" for non-straight markers. Using `MARKER_EULER= ( sym )` is not correct either as the gradients of the velocity components (used in the viscous stress tensor of the momentum equations) are not computed correctly for the reflected state. Although using MARKER_EULER in the current develop will give you the same results as the master (or older develop before #657 ) with MARKER_SYM (... as it uses the same implementation). If you pull the ""Preprocessing"" part from the develop Sym_BC into the loop over all vertices of the boundary marker, the unit normal (and tangential) gets recomputed for each vertex. That gives you results which should be a lot closer to what happens in the master. Plus handling the velocity gradient correctly. From my point of view this would be the correct way.; Apply this patch in the root of the latest develop code using `patch -p1 < SymAsInviscidSlipWall.diff` to get the code I mean. [SymAsInviscidSlipWall.diff.txt](https://github.com/su2code/SU2/files/3417354/SymAsInviscidSlipWall.diff.txt). The implementation of the Symmetry_BC could serve double as 'Inviscid (slip) wall' (which is prescribed in the NASA documents) for viscous flow if the 'Preprocessing' part gets recomputed for each boundary vertex. But how to integrate that best is s.th. to discuss. One could just pull it in at some higher computational cost, put a conditional together with a boolean (e.g. SYMMETRY_AS_SLIP_WALL= YES) or fixing and using MARKER_EULER for that case. I hope that clarifies what happens with that boundary. Please let me know if that works for you and fixes the issue. When I fixed the Regression Testcases for #657 i think that this one was not part of it, right? Maybe this validation case goes into the su2code/VandV repo :) . Cheers,Tobi. Edit: I think we can all agree, that it is Toms fault due to his requested changes in the PR 😉",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735#issuecomment-513801538:2302,integrat,integrate,2302,https://su2code.github.io,https://github.com/su2code/SU2/issues/735#issuecomment-513801538,1,['integrat'],['integrate']
Integrability,"t routines every time-step and only 5 inner iterations. For the first run I enabled the writing of restart and tecplot file:; ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6 ; Points/core: 10428.1 | Ghost points/core: 2045.25 ; Wall-clock time (hrs): 0.153299 | Core-hrs: 1.22639 . Preprocessing phase:; Preproc. Time (s): 2.69291 | Preproc. Time (%): 0.487956 . Compute phase:; Compute Time (s): 385.71 | Compute Time (%): 69.8909 ; Iteration count: 560 | Avg. s/iter: 0.688769 ; Core-s/iter/Mpoints: 55.2191 | Mpoints/s: 0.144877 . Output phase:; Output Time (s): 163.472 | Output Time (%): 29.6211 ; Output count: 112 | Avg. s/output: 1.45957 ; -------------------------------------------------------------------------; ```; Note that the iteration count is the total number of all inner iterations. 30% of the time is spend in the output routine. That may sound like a lot, but lets take a look at the second case, where I still call the output routines, but disabled the writing of any files. ```; -------------------------- Performance Summary --------------------------; Simulation totals:; Cores: 8 | DOFs/point: 6; Points/core: 10428.1 | Ghost points/core: 2045.25; Wall-clock time (hrs): 0.112822 | Core-hrs: 0.902578. Preprocessing phase:; Preproc. Time (s): 3.84826 | Preproc. Time (%): 0.947474. Compute phase:; Compute Time (s): 399.446 | Compute Time (%): 98.347; Iteration count: 560 | Avg. s/iter: 0.713297; Core-s/iter/Mpoints: 57.1855 | Mpoints/s: 0.139896. Output phase:; Output Time (s): 2.86557 | Output Time (%): 0.705527; Output count: 112 | Avg. s/output: 0.0255854; Restart Aggr. BW (MB/s): 0 | MB/s/core: 0; -------------------------------------------------------------------------; ``` ; You can see that now the time spend in the output routines (including gathering all data, partitioning and sorting) just takes 0.7% of the overall time. Its not nothing, but roughly one order of magnitude sma",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-535018704:1165,rout,routines,1165,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-535018704,1,['rout'],['routines']
Integrability,"t the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, should have an explicit barrier before using the vector (or risk having undefined behaviour). You will see these barriers on entry to matrix-vector product, and every `ComputeXXXPreconditioner` (if you don't, let me know xD). I think those routines are large enough to amortise the cost of this. ### Performance; Disclaimer:; - We are talking about linear solvers only, **you will not see a global improvement yet**.; - The large global improvements from ""hybridization"" will come from the multigrid behaving better on less decomposed domains, and from the ability to independently tune the number of cores used in the linear preconditioners. For now the objective is ""just"" not to loose performance while gaining flexibility.; - The performance of MPI+threads with 1 thread per rank will be worse than just MPI (no",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:2120,rout,routines,2120,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,4,['rout'],['routines']
Integrability,"te the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deformation via python interface --> plausibility check with sinusoidal displacement z, scaled and shifted by 90° to correspond to velocity w from above, leads to same results; - [ ] ~~mesh deformation + moving grid --> differences with respect to farfield onflow condition / does NOT lead to same results as above. The grid velocities look right though, both on the temporary screen output and when plotting them by slicing through the volume results, but the amplitude of the lift coefficient is too small. I guess that the velocities are not set properly / mixed up / require a call to some update function or similar. **I'm stuck at this point. Does someone have any idea what I'm doing wrong?? I feel that I am missing an important step here...**~~; - [ ] ~~final test: mesh deformation + moving grid + gust~~; - [x] final test: mesh deformation + gust. Apart fr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:2082,interface,interface,2082,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,2,['interface'],['interface']
Integrability,"tegration::MultiGrid_Iteration() the index of the ""finest grid"" is then required and the system of equations at the ""finest grid"" level is intended to be solved. This index is set by default with the number multigrid levels specified by the user on the config file. In case that multigrid levels have been removed, when trying to access to the ""finest level"" mesh in CMultiGridIntegration::MultiGrid_Iteration() that level does not exist and produces a segmentation fault. To solve this issue:; - Stop removing multigrid levels in CMultiGridGeometry::CMultiGridGeometry() or improve the function. Why do we need to check whether the ratio is below a certain level? We should just check if the coarse level is empty, i.e., no control volumes.; - When removing a MG level in CMultiGridGeometry::CMultiGridGeometry() subtract one to the index of the finest grid, i.e., config->SubtractFinestMesh();. What are your thoughts?. After solving the previous issues, with mpirun and depending on the number of cores to be used SU2 will still produce a segmentation fault when using Full MG. This problem is not present when using mpiexec. I traced it back and found that in CFVMFlowSolverBase<V, FlowRegime>::Friction_Forces the method GetNormal_Neighbor() from CVertex returns a non existing point. Before delving into the problem would be nice if you could corroborate these findings. My versions of mpirun and mpiexec are 3.1.3 and 3.3 respectively. ## Additional Work; Additionally I have corrected the description of the variable Convergence_FullMG in CIntegration.hpp. Related to this same variable, what is the definition of convergence for the full multigrid?; Further, this parameter, Convergence_FullMG, is set to false in CIntegration::CIntegration() and never updated i.e., there is no evaluation whether the FullMG has converged or not. Consequently, the function SetProlongated_Solution() in CMultiGridIntegration::MultiGrid_Iteration() is never executed. ## PR Checklist; - [ ] I am submitting my",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362:2033,depend,depending,2033,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362,1,['depend'],['depending']
Integrability,"ter types instead of arrays, and a boat load of template meta-programming (I'm guessing) there are professional libraries for this.; This quickly-hacked-together code is compatible with custom types, portable, and seems to do the trick. To pull this off we do not need to have `Vector` or `Matrix` of this class, the underlying type for those data structures is still `double`, only the `getVec` type methods need to convert on the fly to the SIMD type, for example:; ```C++; // use the ""pointer ctor"" to return an array starting at ""row0""; Array<double,4> Matrix<double>::getVec(size_t row0, size_t col) const {; return Array<double,4>(&data_[row0+col*rows_]);; }. // use the ""gather ctor"" to return an array with the indices in ""rows""; template<class U>; Array<double,4> Matrix<double>::getVec(const U& rows, size_t col) const {; return Array<double,4>(&data_[col*rows_], rows);; }; ```; After inlining those copies get optimized away.; Although the stored type, and ""scalar interface"" of the containers do not need to change, the storage order of the data does. Notice that in the above data is stored by columns instead of rows (something that @vdweide mentioned in #716) this has greater implications for gradients as instead of the familiar ""vector of matrices"" we would need a ""matrix of vectors"", i.e. the derivative of variable i w.r.t. coordinate j stored as a vector for all points. The `Adjacency` also needs to be stored in a funny way. For the scalar version of the code it was stored as a CSR sparse matrix (one array of indices into the arrays of data for each point, the rows).; For the vectorized version we want to load (small) arrays of jPoint's, arrays of iEdge's, and arrays of directions, and as we know either those are contiguous or we take a huge performance hit.; If all points had the same number of neighbors we could store the adjacency in LIL (list of lists) format, essentially a column-major matrix, but that is not true for hybrid meshes and so we would possibly wast",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:9827,interface,interface,9827,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['interface'],['interface']
Integrability,"terface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there is no way of getting to the variables without going through `[]` first.; If we run this code we see that it is only **1.08** and **1.57** times slower for the non-virtual and virtual accessors respectively.; This could be an intermediate solution while the CVariable methods would be migrated to allow passing the index as argument e.g. `field->Get(iNode)` and the code is updated gradually. However, I think the wrapper could provide a way of dealing with the loss of versatility that contiguous storage creates...; There are no free lunches and this performance improvement would come at the cost of losing the ability to have different types of variables in different parts of the domain. I think currently only the elasticity solver uses this to keep ""boundary"" and ""internal"" variables.; If this versatility is really required the wrapper can keep special variables separately, that it would know to be special via a boolean vector and know how to access via a hash table (for example). **Alternatives**; We could make the storage continuous by using a memory pool i.e. allocate outside the class and give the class a pointer to its memory location. This is still not truly contiguous as the pointers the class holds are variables themselves and so they would still be separated (albeit by a smaller huge distance), thus the amount of overhead would still influence performance. Right, that is enough writing... please let me know what you think.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:7104,wrap,wrapper,7104,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,1,['wrap'],['wrapper']
Integrability,"th [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1157:29: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, ""; "", 2);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1147:25: note: in expansion of macro 'HDstrncat'; HDstrncat(local_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1159:25: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; [47/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Eint.c.obj; In file included from ../externals/cgns/hdf5/H5Eint.c:34:; ../externals/cgns/hdf5/H5Eint.c: In function 'H5E__get_msg':; ../externals/cgns/hdf5/H5private.h:1454:28: warning: 'strncpy' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncpy(X, Y, Z) strncpy(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Eint.c:132:9: note: in expansion of macro 'HDstr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:8936,depend,depends,8936,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Integrability,"thanks all for the comments! when I modified that routine, unfortunately I didn't get any error on linux.we can definitely comment or add a flag for the time being or we could use an older implementation of the HB operator where the real part and the complex one are treated independently, like Sravya is suggesting. However, if possible, it would be great if we can try to find a way to deal with multiplication between complex numbers (working in AD mode on mac). I don't know how to replicate this issue since I don't have a mac; do you have any suggestion? Maybe, Sravya, can we have a look together ( as you have a Mac :) ) so that we can find a solution also for other parts of the code for harmonic balance, not in the develop (eg spectral interpolation,...) ? Are complex numbers just used in HB or is somebody else using them?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/319#issuecomment-260175432:50,rout,routine,50,https://su2code.github.io,https://github.com/su2code/SU2/issues/319#issuecomment-260175432,1,['rout'],['routine']
Integrability,"the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python version, or at least the dependency on 3.7.* was removed. . @chesiv you can also try checking the logs in the `log.err` and `log.out` files to see if anything has gone wrong. Keep in mind all SU2 output is redirected to them, so you might not get any useful information on your terminal.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:2520,Depend,Depending,2520,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,2,"['Depend', 'depend']","['Depending', 'dependency']"
Integrability,"the older preconfig/mame/make install procedure.; Just do the preconfig process (with -u parameter) on a machine that is; connected to the internet so codi/medi versions will be updated; Next step: search the preconfig.py file for the codi/medi version (look; for ""sha_version_codi="" and ""sha_version_medi="").; Write down the two strings somewhere.; Then transfer the whole install folder to the disconnected cluster.; Once on the cluster, go to folder external/codi and touch a file by the; name of the string you have written down.; Repeat the same with medi (external/medi).; Now do on the cluster preconfig.py/make/make install (without -u). The; codi/medi versions will match now and the installation should work.; The problem with this procedure is that it is not supported anymore. It; still worked for me a short time ago with the develop branch (but failed on; the master branch). Meson/ninja installation is significantly more; efficient and most of the developers here ain't familiar with life without; an internet connection ... Last warning: the above-listed messages seem to point over a compiler; issue. If indeed this is the case then the bypass that I suggested is; irrelevant. On Tue, Apr 28, 2020 at 7:43 PM SumanVajjala <notifications@github.com>; wrote:. > @economon <https://github.com/economon> I have personally installed SU2; > software (from versions 3 to 6) in our cluster without problems. I think; > the issues could be because of lack of C11 features. I tried to run a; > sample code with aligned_alloc and I had problems with both Intel and GCC; > compilers. I'll test this again. I think I'll have to install gcc myself.; >; > Regards; > Suman; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/issues/955#issuecomment-620724039>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADZI3G66H554WAUPBYMWVADRO4BUNANCNFSM4MR3ATFA>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-621078198:1115,message,messages,1115,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-621078198,1,['message'],['messages']
Integrability,the valgrind message has been solved by the most recent commit,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1550#issuecomment-1064176242:13,message,message,13,https://su2code.github.io,https://github.com/su2code/SU2/pull/1550#issuecomment-1064176242,1,['message'],['message']
Integrability,"this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the program (compare 1st number 6 and 2nd number number 10).; The first waits at an `Allgather` and the 2nd at an `Allreduce`. . I am somewhat certain that the problem is this code bit which the second (the furhter back) backtrace points to. CSysVector.hpp -> `ScalarType dot` function l. 317; ```c++; /*--- Update shared variable with ""our"" partial sum. ---*/; atomicAdd",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7570,integrat,integration,7570,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['integrat'],['integration']
Integrability,"thon\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false; ; Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN; ; Based on the input to this configuration, add these lines to your .bashrc file:; ; export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN; ; Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2; ; Build targets in project: 20; ; Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Running c",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:8419,Message,Message,8419,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Message'],['Message']
Integrability,"thub.com/actions/cache/commit/a404368986bb049d406166fc20afc01d032ad8a2""><code>a404368</code></a> Updated actions/cache version to 3.0.2</li>; <li><a href=""https://github.com/actions/cache/commit/f4278025ab0f432ce369118909e46deec636f50c""><code>f427802</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/887"">#887</a> from actions/pdotl-version-patch</li>; <li><a href=""https://github.com/actions/cache/commit/9916fe1701f098b95a05e7c2bacee7c5a022c553""><code>9916fe1</code></a> Update cache version in licences</li>; <li><a href=""https://github.com/actions/cache/commit/318935ef66557a1906560e4e7d0069344a4b31bf""><code>318935e</code></a> Update README and RELEASES</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=1&new-version=3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:9145,depend,dependency-name,9145,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['depend'],['dependency-name']
Integrability,"thub.com/actions/upload-artifact/commit/707f5a7b71e0fb01c5df1e16e9679a3292606ef2""><code>707f5a7</code></a> Update limitation of <code>10</code> artifacts upload to <code>500</code></li>; <li><a href=""https://github.com/actions/upload-artifact/commit/26f96dfa697d77e81fd5907df203aa23a56210a8""><code>26f96df</code></a> Merge pull request <a href=""https://redirect.github.com/actions/upload-artifact/issues/505"">#505</a> from actions/robherley/merge-artifacts</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2231:6372,Depend,Dependabot,6372,https://su2code.github.io,https://github.com/su2code/SU2/pull/2231,1,['Depend'],['Dependabot']
Integrability,"tiple jobs per node and you are not realizing it? Can you log in to one of the nodes during the run and see what is running there? Orphaned jobs from a previous run?. Best,. Juan. On Mar 1, 2020, at 9:40 AM, Andrew Burkett <notifications@github.com<mailto:notifications@github.com>> wrote:. I think that is just a coincidence that the timings were the same but I should have provided more data up front. I did the preprocessing output check you described and a==b. The following output is from 16 cores on 1 node if you want to take a look. output_1.txt<https://github.com/su2code/SU2/files/4272178/output_1.txt>. Here are three sets of timings. One for SU2 v7 on a smaller problem (6.8e6 cells) and one for SU2 v7 on a larger one (27e6 cells) and one for SU2 v6.2 on the same smaller problem. These are all done with the same compiled version of openmpi (v4.02) and compiling SU2 from source for both versions. The four machines are nearly identical. They're all dual socket machines running sandy bridge xeons, so they are a bit on the older side. Mesh 1 (6.8e6 cells). * 8 processes (1 machine x 8 cores) => 13s/iteration; * 8 processes (2 machine x 4 cores) => 18.4s/iteration; * 16 processes (1 machine x 16 cores) => 8.5s/iteration; * 16 processes (2 machines x 8 cores) => 17s/iteration; * 16 processes (4 machines x 4 cores) => 15.8s/iteration; * 32 processes (2 machines x 16 cores) => 18.1s/iteration; * 64 processes (4 machines x 16 cores) => 21.9s/iteration. Mesh 2 (27e6 cells). * 8 processes (1 machine x 8 cores) => 50s/iteration; * 16 processes (1 machine x 16 cores) => 32s/iteration; * 16 processes (2 machines x 8 cores) => 32s/iteration; * 16 processes (4 machines x 4 cores) => 31s/iteration; * 32 processes (2 machines x 16 cores) => 34s/iteration; * 64 processes (4 machines x 16 cores) => 40s/iteration. A final set of timings for Mesh 1 with SU2 v6.2 for reference. * 8 processes (1 machine x 8 cores) => 26s/iteration; * 8 processes (2 machine x 4 cores) => 25s/iteration; *",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/894#issuecomment-593127059:2402,bridg,bridge,2402,https://su2code.github.io,https://github.com/su2code/SU2/issues/894#issuecomment-593127059,1,['bridg'],['bridge']
Integrability,"tleast_1d(grad(np.copy(x), *args)); File ""/usr/local/bin/SU2/opt/scipy_tools.py"", line 400, in obj_df; dobj_list = project.obj_df(x); File ""/usr/local/bin/SU2/opt/project.py"", line 238, in obj_df; return self._eval(konfig, func,dvs); File ""/usr/local/bin/SU2/opt/project.py"", line 202, in _eval; vals = design._eval(func,*args); File ""/usr/local/bin/SU2/eval/design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""/usr/local/bin/SU2/eval/design.py"", line 380, in obj_df; grad = su2grad(this_obj,grad_method,config,state); File ""/usr/local/bin/SU2/eval/gradients.py"", line 96, in gradient; grads = adjoint( func_name, config, state ); File ""/usr/local/bin/SU2/eval/gradients.py"", line 294, in adjoint; info = su2run.adjoint(konfig); File ""/usr/local/bin/SU2/run/adjoint.py"", line 79, in adjoint; SU2_CFD(konfig); File ""/usr/local/bin/SU2/run/interface.py"", line 112, in CFD; run_command( the_Command ); File ""/usr/local/bin/SU2/run/interface.py"", line 292, in run_command; raise exception(message); RuntimeError: Path = /home/xxx/SU2/SU2-7.0.4/test1/DESIGNS/DSN_001/ADJOINT_DRAG/,; Command = /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD config_CFD_AD.cfg; SU2 process returned error '127'; /bin/sh: 1: /home/xxx/SU2/SU2-7.0.4/SU2_CFD/bin/SU2_CFD_AD: not found; ```; So I tried to build AD under the instruction. I copied the exact same thing and pasted to the command. The error is:. ```; Checking the status of submodules; =====================================================================; Found an old or unspecified version of CoDiPack in externals/codi.; Use -u to reset module.; ```; However, when I try to update/reinstall the codi, I failed in the extraction process. The error is:; ```; Checking the status of submodules; =====================================================================. git command failed (either git is not installed or this is not a git repository). Using fall-back method to initialize submodule CoDiPack. Initializing CoDiPack 'bd4a639c2fe625a80946c8",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1602:2706,message,message,2706,https://su2code.github.io,https://github.com/su2code/SU2/issues/1602,1,['message'],['message']
Integrability,"to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spawning new -- parallel -- processes using `subprocess` from within an MPI environment is ""dangerous"", besides being rather rude towards workload managers such as Slurm, making this an unviable solution in this kind of application. **Proposed solution**; If at all reasonable, I would like to have the functionality of `SU2_DEF` and `SU2_DOT_AD` exposed to the Python wrappers `pysu2` and `pysu2ad`, ideally using an approach which is consistent with the existing implementation for `SU2_CFD` and `SU2_CFD_AD`. If I understand correctly, this change would require something along the lines of: . - Refactoring the main functions of `SU2_DEF.cpp` and `SU2_DOT_AD.cpp` into new driver classes, e.g. `CDeformationDriver` and `CDiscAdjProjectionDriver`, broken down into pre-processing, execution, output, and postprocessing.; - Exposing these new driver classes to Python through a SWIG `.i` file. Beyond offering a solution to the problem described above, allowing the complete optimisation iteration to be controlled externally (for example by an MDO framework), this might in the long term also allow providing deformations to the `SU2_DEF` routine directly in Python, as an alternative to the surface deformation file. Similarly, the surface sensitivities resulting from `SU2_DOT_AD` could be accessed directly in Python for post-processing. **Alternatives**; The propos",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:2367,wrap,wrappers,2367,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['wrap'],['wrappers']
Integrability,"to run v&v on; major releases only, aka 7.0 but not 7.1, and I agree that keeping a record; of the most recent version checked is a good idea-and as necessary minor; releases could be tested, as suggested by individual developers. The regression tests should ensure that the v&v results will be unlikely to; be changed. One thing we can do to reduce that risk further would be to; introduce regression tests that compare solution files rather than the; terminal output alone. I can take a stab at that if there's no other; volunteers- probably only needs to be a couple of critical tests, the file; diff may be slightly more expensive than currently, but given the increase; in test precision and detail I think it would be worth it. H. On Thu, Sep 20, 2018, 1:46 PM erangit <notifications@github.com> wrote:. > Hi All; > I’m a bit worried about the logistics related to checking this v&v data; > base for every new release.; > Unlike the tutorials, these cases, by their nature will be large and will; > require long integrations(the 2D cases might not fall on this category).; > This means also that significant computational resources will be required; > for this evaluation (about twice a year for a growing list of cases). Is it; > practical?; > The only way that I think that it might work is that each contributor will; > be responsible for checking the casesthat he has introduced, before each; > release. Being a voluntary institution, this can not be enforced (and we do; > not want to enforce). How about trying to be less demanding:; > In each validation case there will be a statement about the last version; > that it was checked with and the responsible contributor. Each contributor; > will receive a recommendation to check his cases before a new release, and; > will be able to do that and update the OK label also after the release.; > Less waterproof but might be more workable.; > What do you think?; > Eran; >; > —; > You are receiving this because you are subscribed to this thr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423283690:1151,integrat,integrations,1151,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423283690,1,['integrat'],['integrations']
Integrability,"tps://redirect.github.com/actions/cache/issues/1304"">#1304</a> from actions/yacaovsnc/update_readme</li>; <li><a href=""https://github.com/actions/cache/commit/c36458f13bdfaeff50a47b181b7368ae66b21f28""><code>c36458f</code></a> Update README.md</li>; <li><a href=""https://github.com/actions/cache/commit/13aacd865c20de90d75de3b17ebe84f7a17d57d2""><code>13aacd8</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1242"">#1242</a> from to-s/main</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/cache/compare/v3...v4"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/cache&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot cancel merge` will cancel a previously requested merge and block automerging; - `@dependabot reopen` will reopen this PR if it is closed; - `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually; - `@dependabot show <dependency name> ignore conditions` will show all of the ign",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:10145,Depend,Dependabot,10145,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['Depend'],['Dependabot']
Integrability,"true -Dcustom-mpi=true -Dwith-mpi=enabled -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL; slimshady@arch-linux-hp-probook-g3-450: SU2_HOME$ ./meson.py setup --wipe build; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1558,Message,Message,1558,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,1,['Message'],['Message']
Integrability,"ttps://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from actions/dependabot/npm_and_yarn/yargs-parser-13.1.2</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2aeee267b2cb1f938c861a763b9770ee6e921dc3""><code>2aeee26</code></a> Bump yargs-parser from 13.1.1 to 13.1.2</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/upload-artifact/compare/v1...v3"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatib",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:3931,depend,dependabot,3931,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"ttps://redirect.github.com/actions/setup-python/issues/741"">#741</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/8635b1ccc5934e73ed3510980fd2e7790b85839b""><code>8635b1c</code></a> Change deprecation comment to past tense (<a href=""https://redirect.github.com/actions/setup-python/issues/723"">#723</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758""><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=""https://redirect.github.com/actions/setup-python/issues/724"">#724</a>)</li>; <li><a href=""https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060""><code>5f2af21</code></a> Add GraalPy support (<a href=""https://redirect.github.com/actions/setup-python/issues/694"">#694</a>)</li>; <li>Additional commits viewable in <a href=""https://github.com/actions/setup-python/compare/v4...v5"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>; <summary>Dependabot commands and options</summary>; <br />. You can trigger Dependabot actions by commenting on this PR:; - `@dependabot rebase` will rebase this PR; - `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it; - `@dependabot merge` will merge this PR after your CI passes on it; - `@dependabot squash and merge` will squash and merge this PR after your CI passes on it; - `@dependabot ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2233:7402,Depend,Dependabot,7402,https://su2code.github.io,https://github.com/su2code/SU2/pull/2233,2,"['Depend', 'depend']","['Dependabot', 'dependabot-badges']"
Integrability,u; checking for a BSD-compatible install... /usr/bin/install -c; checking whether build environment is sane... yes; checking for a thread-safe mkdir -p... /usr/bin/mkdir -p; checking for gawk... gawk; checking whether make sets $(MAKE)... yes; checking whether make supports nested variables... yes; checking for style of include used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; check,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:3911,depend,dependency,3911,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['depend'],['dependency']
Integrability,"ubmit a pull request, the unit tests are run and checked. ## What is my vision for unit testing in SU2?. I am *not* proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. ## What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. #### Roll-your-own. + Requires no external dependencies; + The most flexible option; + Involves the most work to setup; + Will lack some of the more advances features of mature unit-testing frameworks. #### Boost Test. + Can be header only, statically linked, or dynamically linked; + If statically or dynamically linked, then Boost is not very lightweight; + Easy to add if you're already using Boost. #### Google Test. + Most common unit-testing framework; + Can be easily combined with Google's powerful GMock mocking library; + Compiling and linking can be somewhat painful. #### Catch2. + Used by FEniCS; + Makes unit tests easily readable with lots of syntactic sugar.; + Has a very simple syntax; + Is header-only; + ~~Requires C++11 compilation~~ Requires C++11 for full feature set, but offers a C++03 branch; + Not as feature rich as Google Test or Boost Test. ## Questions. + How do developers feel about adding unit tests to SU2?; + If a unit-testing framework were added to SU2, would you actually use it?; + Do developers have a preference (or experience with) any of the unit testing frameworks?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698:3603,depend,dependencies,3603,https://su2code.github.io,https://github.com/su2code/SU2/issues/698,1,['depend'],['dependencies']
Integrability,"uch lower level, namely where the spatial residual is computed. At least, this should be the case for the fluid dynamics part. I don't know whether this is also the case for other disciplines, like structures. What about the following high level structure?. - Loop over the number of iterations, or time steps for unsteady problems.; - Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; - Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate: ; - Loop over the (Runge-Kutta) stages; - Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; - End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; - End loop over the (Runge-Kutta) stages ; - End loop over the disciplines; - End loop over the pseudo time steps.; - End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. . Regards,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328368371:1516,integrat,integration,1516,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328368371,4,['integrat'],['integration']
Integrability,"uctures. What about the following high level structure?. * Loop over the number of iterations, or time steps for unsteady problems.; * Loop over the number of pseudo-time steps for implicit time integration schemes; (DT_STEPPING_1ST and DT_STEPPING_2ND). For other cases this loop is 1.; * Loop over the number of disciplines involved; Call iterate for each of the disciplines.; In iterate:; * Loop over the (Runge-Kutta) stages; * Loop over the zones of a single discipline; Compute spatial residual.; Update the state vector.; * End loop over the zones of a single discipline.; Exchange halo data. This includes the halo data between zones of a single discipline.; * End loop over the (Runge-Kutta) stages; * End loop over the disciplines; * End loop over the pseudo time steps.; * End loop over the number of iterations, or time steps for unsteady problems. The weakness of this approach is that it still does not work when one would like to employ multi-stage time integration schemes for an unsteady, multi-disciplinary problem (does not work for the current implementation either), but maybe this is something we simply have to accept. The alternative is that all the details of the different time integration schemes have to be moved to the driver classes, which is highly undesirable, I think. The structure above implies that the iteration_container and the integration_container should be defined per discipline and not per zone anymore. The geometry_container and solver_container should still be defined per zone. Well, I suppose this leaves plenty of room for discussion, so I would say to continue the online discussion a bit further, such that things become a bit clearer how to tackle this issue. After that having a telecon would be good to iron out the details. Regards,. Edwin. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/437#issuecomment-328368371>, or mute the thread<",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/437#issuecomment-328403160:3025,integrat,integration,3025,https://su2code.github.io,https://github.com/su2code/SU2/issues/437#issuecomment-328403160,2,['integrat'],['integration']
Integrability,ude used by make... GNU; checking whether the C++ compiler works... yes; checking for C++ compiler default output file name... a.out; checking for suffix of executables... ; checking whether we are cross compiling... no; checking for suffix of object files... o; checking whether we are using the GNU C++ compiler... yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking siz,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4237,depend,dependency,4237,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['depend'],['dependency']
Integrability,"ul>; <li><a href=""https://github.com/actions/upload-artifact/commit/3cea5372237819ed00197afe530f5a7ea3e805c8""><code>3cea537</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/327"">#327</a> from actions/robherley/artifact-1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/849aa7758a428ee22be38de371b49c8bd57c4b9d""><code>849aa77</code></a> nvm use 12 &amp; npm run release</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/4d3986961d0423ba9a593efb490a2960eb65f43b""><code>4d39869</code></a> recompile with correct ncc version</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/2e0d362ec5cf81e334dda822c49c96dcd4b7df2c""><code>2e0d362</code></a> bump <code>@​actions/artifact</code> to 1.1.0</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/09a5d6a283da3e7c9f3253a5d4cdab2347712a66""><code>09a5d6a</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/320"">#320</a> from actions/dependabot/npm_and_yarn/ansi-regex-4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/189315d9106f43a2a8eb60836608bb96b1f69d77""><code>189315d</code></a> Bump ansi-regex from 4.1.0 to 4.1.1</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/d159c2d80bf32e77611286e4d71bfe6d15208d88""><code>d159c2d</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/297"">#297</a> from actions/dependabot/npm_and_yarn/ajv-6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/c26a7ba4b5dbaecea906fec3b7d2c0c86f1ccaba""><code>c26a7ba</code></a> Bump ajv from 6.11.0 to 6.12.6</li>; <li><a href=""https://github.com/actions/upload-artifact/commit/6ed6c729229a623bcb1fdd75903dc6e436b3d0a7""><code>6ed6c72</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/upload-artifact/issues/303"">#303</a> from acti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1756:3457,depend,dependabot,3457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1756,1,['depend'],['dependabot']
Integrability,"ure.; 8 surface markers.; 166730 boundary elements in index 0 (Marker = aircraft).; 33766 boundary elements in index 1 (Marker = farfield).; 742 boundary elements in index 2 (Marker = injest).; 290 boundary elements in index 3 (Marker = inlet).; 22500 boundary elements in index 4 (Marker = inner_nearfield).; 243 boundary elements in index 5 (Marker = outlet).; 146871 boundary elements in index 6 (Marker = symmetry).; 22500 boundary elements in index 7 (Marker = outer_nearfield).; Calling ParMETIS...; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36096 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36400 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 35800 bytes received but buffer size is 31680; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36368 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; status0x106b6e0) failed; MPIDI_CH3U_Receive_data_found(259): Message from rank 0 and tag 1; truncated; 36088 bytes received but buffer size is 32032; Fatal error in MPI_Wait:; Message truncated, error stack:; MPI_Wait(156).....................: MPI_Wait(request=0x106b830,; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/159#issuecomment-75485343:1417,Message,Message,1417,https://su2code.github.io,https://github.com/su2code/SU2/issues/159#issuecomment-75485343,2,['Message'],['Message']
Integrability,"urm config and SU2 config. The mesh file size is 31801880 bytes. If those are ok to you, I can upload them.; I have submited SU2 to an HPC installation via SLURM:; Currently Loaded Modules:; 1) autotools 2) prun/1.3 3) ohpc 4) gnu7/7.3.0 5) openmpi/1.10.7. mpicc version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/gcc; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpicxx version:-------------------------------------------------; Using built-in specs.; COLLECT_GCC=/opt/ohpc/pub/compiler/gcc/7.3.0/bin/g++; COLLECT_LTO_WRAPPER=/opt/ohpc/pub/compiler/gcc/7.3.0/libexec/gcc/x86_64-pc-linux-gnu/7.3.0/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: ../configure --disable-multilib --enable-languages=c,c++,fortran --prefix=/opt/ohpc/pub/compiler/gcc/7.3.0 --disable-static --enable-shared; Thread model: posix; gcc version 7.3.0 (GCC) ; mpirun version:-------------------------------------------------; mpirun (Open MPI) 1.10.7. Report bugs to http://www.open-mpi.org/community/help/; python version:-------------------------------------------------; ~/miniconda3/bin/python; Python 3.9.1. *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [ x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; -",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2265:1528,wrap,wrapper,1528,https://su2code.github.io,https://github.com/su2code/SU2/issues/2265,1,['wrap'],['wrapper']
Integrability,"veloper meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; =========================================================; We came up with the following differences:; - **Flux calculation across the interface**: The flux between neighbor cells `i`, `j`, one of which has `radius<4` and the other one has `radius>4`, is computed differently.; + In singlezone this is just an ordinary flux computation along an edge `i`-`j`, with `CSolver::Upwind_Residual` (, `Viscous_Residual`).; + In multizone this flux between two zones is computed by `CSolver::BC_Fluid_Interface`. When the method is called to compute the contribution of the interface on the residual of contol volume `i`, `this` is the solver object of the zone of control volume `i`, so we can access all variables at `i` (like primitive, turbulent, and their spatial gradients) and give them to the `CNumerics` objects. However we cannot access the variables at `j` directly! Through the ""interface"" mechanism, we get values of the primitive and turbulent variables at `j`, but not their gradients. That's why the `BC_Fluid_Interface` has lines like this:. visc_numerics->SetPrimVarGradient(nodes->GetGradient_Primitive(iPoint),; nodes->GetGradient_Primitive(iPoint));. I tried to fix this by transferring gradient information also, but it did not solve the problem. - **Calculation of spatial gradients**: Both in the Green-Gauß and the Weighted-Least-Squares calculation, in order to compute the gradient of a quantity `x` at a point `i` only the values of `x` at `i`, and neighbors of `i` *in the same zone*, are taken into account. This means that the gradient at points with `radius==4` is based on less information, and hence is more inaccurate, in the multiz",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:4258,interface,interface,4258,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['interface'],['interface']
Integrability,"vertex properties. However, more than a standard vertex, the turboVertex posses:. 1. the possibility of accessing the inflow and outflow boundaries on a span-wise manner (to impose different values of the mixing-plane condition along the blade-height) and on a pitch-wise ordered manner (to compute the Spatial Fourier Transformation of the outgoing characteristics at the boundary for the non-reflectivity). 2. embedded information on what kind of turbomachinery architecture is being simulated, so that the values of velocity at the boundaries can be imposed using the correct frame of reference. So in a nutshell the flow solver is now capable of:. - simulating single 2D/3D turbomachinery blades using 1D characteristic-based BC or Non reflecting BC; - simulating multi-stage 2D/3D turbomachinery via a Mixing-Plane interface, including also the mixing of the turbulent quantities; - handling any kind of turbomachinery architecture (AXIAL, CENTRIFUGAL, CENTRIPETAL and mixed such as CENTRIPETAL_AXIAL or AXIAL_CENTRIFUGAL); - selecting 2 different kind of interpolation methods for the mixing-plane interface: LINEAR_INTERPOLATION and NEAREST_NEIGHBOR; - handling an unlimited number of blades/stages —> (zones); - simulating turbomachinery which works on the NICFD regime such as supercritical CO2 compressors or Organic Rankine Cycle turbines.; - printing history_x.dat file for multi-zone convergence monitoring; - printing some post-processing thermodynamic, kinematic and geometric quantities in some files inside a TURBOMACHINERY folder. The limitations of the turbomachinery capabilities are:. - the axis of rotation should be always the Z one; - MGL acceleration technique is not working because of some un-resolved issues with the periodic BC. This pull request introduce also some limited design capability for turbomachinery applications. Using the AD tool, it is now available on the suite also a single zone discrete adjoint to compute the sensitivity for 2D/3D turbomachinery blade ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/413:1446,interface,interface,1446,https://su2code.github.io,https://github.com/su2code/SU2/pull/413,2,['interface'],['interface']
Integrability,"w64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12563,Wrap,Wrapper,12563,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Wrap'],['Wrapper']
Integrability,"we could maybe also use multizone, and allow a zone to be selected for volume averaging and integrated variables.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114:92,integrat,integrated,92,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894#issuecomment-1396603114,1,['integrat'],['integrated']
Integrability,"when I use **CST parameters** to deform mesh,; My airfoil mesh has two boundaries (far: farfield, air: airfoil),; and I use the below naca0012.cfg:; ```; ...; DV_KIND= CST; DV_MARKER= ( air ); DV_PARAM= (0, 5, 7); DV_VALUE= 0.6; ...; ```; when I use ```SU2_DEF naca0012.cfg```; the output mesh is same as **original grid**, and the output message is :; ```; ...; --------------------- Surface grid deformation (ZONE 0) -----------------; Performing the deformation of the surface grid.; Design Variable not implemented yet. ------------------- Volumetric grid deformation (ZONE 0) ----------------; Performing the deformation of the volumetric grid.; CSysSolve::FGMRES(): system solved by initial guess. ----------------------- Write deformed grid files -----------------------; |SU2 mesh |naca0012.su2 |; |Paraview Multiblock |naca0012.vtm |; Adding any FFD information to the SU2 file. ------------------------- Solver Postprocessing -------------------------; Deleted CGeometry container.; Deleted CSurfaceMovement class.; Deleted CVolumetricMovement class.; Deleted CConfig container.; Deleted COutput class. Completed in 0.335274 seconds on 1 core. ------------------------- Exit Success (SU2_DEF) ------------------------; ```. it seems that my cst method didn't work.; How can I use CST method?; Thanks!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123:339,message,message,339,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123,1,['message'],['message']
Integrability,"while you might be envisioning a more clever approach, the python wrapper has some tools to help with this too. SU2.io.tools.restart2solution(config,state=None); """""" moves restart file to solution file, ; optionally updates state; direct or adjoint is read from config; adjoint objective is read from config; """""". should be called right after a call to SU2_CFD (ie with SU2.run.direct()",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/17#issuecomment-29596087:66,wrap,wrapper,66,https://su2code.github.io,https://github.com/su2code/SU2/issues/17#issuecomment-29596087,1,['wrap'],['wrapper']
Integrability,"x-hp-probook-g3-450: SU2_NEW$ meson build -Denable-openblas=true -Dwith-mpi=enabled -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true --prefix=/home/slimshady/UserPackages/SU2_INSTALL_NEW; The Meson build system; Version: 0.53.2; Source dir: /home/slimshady/UserPackages/SU2_NEW; Build dir: /home/slimshady/UserPackages/SU2_NEW/build; Build type: native build; Project name: SU2; Project version: 7.0.4 ""Blackbird""; C compiler for the host machine: cc (gcc 9.2.1 ""cc (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:1481,depend,dependency,1481,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['depend'],['dependency']
Integrability,"xactly the same error. It occurred during compiling of geometry_structure.cpp. I don't know how to solve this issue. Thanks for your help in advance.; Koray. **To Reproduce**; Here's my configure outputs:. Build Configuration Summary:. Source code location: /home/koray/SU2_TMZHB/SU2; Install location: 	 /usr/local; Version: 6.0.1; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: yes; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_TECIO -I$(top_srcdir)/externals/tecio/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/tecio/libtecio.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes; Build Py Wrapper: no; ################. Here are the error lines during make process:. CXX ../src/libSU2_a-dual_grid_structure.o; CXX ../src/libSU2_a-geometry_structure.o; ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::UpdateTurboVertex(CConfig*, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:14365:20: error: ‘HUGE’ was not declared in this scope; 14365 | su2double max = -HUGE;; | ^~~~; make[1]: *** [Makefile:857: ../src/libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory '/home/koray/SU2_TMZHB/SU2/Common/lib'; make: *** [Makefile:391: all-recursive] Error 1; ###. **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.2 LTS; - C++ compiler and version: gcc (Ubuntu 9.3.0-17ubuntu1~20.04) 9.3.0; - MPI implementation and version: mpiexec (OpenRTE) 4.0.3; - SU2 Version: SU2 (ver. 6.0.1 ""Falcon"")",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1644:1447,Wrap,Wrapper,1447,https://su2code.github.io,https://github.com/su2code/SU2/issues/1644,1,['Wrap'],['Wrapper']
Integrability,y/UserPackages/SU2_INSTALL_NEW/bin/SU2/mesh; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/project.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/scipy_tools.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/opt/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/opt; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adaptation.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/deform.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/direct.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/interface.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/merge.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/geometry.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/projection.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/run/__init__.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/run; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/bunch.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NEW/SU2_PY/SU2/util/filter_adjoint.py to /home/slimshady/UserPackages/SU2_INSTALL_NEW/bin/SU2/util; Installing /home/slimshady/UserPackages/SU2_NE,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-632032044:6963,interface,interface,6963,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-632032044,1,['interface'],['interface']
Integrability,"{; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double flux = phi_ave[iVar]*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iDim=0; iDim<nDim; ++iDim); #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; Well it is not just a few pragmas, we need to make the number of variables known at compile time (via a template parameter) and we need to transpose how the gradient is stored, i.e. instead of {xyz, xyz, xyz, xyz} we need {xxxx, yyyy, zzzz}. This code gets a speed-up of **2.2**. This code is generic but the template needs to be instantiated for every possible number of variables and we need a `switch` to call the right version at runtime, not very friendly.; Processing multiple edges at the same time is not worth the effort, for one we need `gather/scatter` on a very light routine, and on top of that we need to sort the edges such that we do not attempt to `scatter` to the same point when updating the gradient (a problem similar to the race condition described for SPMD). We can switch to a point-based loop and process multiple points in a SIMD way, that avoids the `scatter` problem but `gathers` will still be required. Here is what the scalar version of the point-based loop looks like:; ```C++; void computeGradients(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency& adj,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) = 0.0;. for(size_t iNeigh=0; iNeigh<adj.nNeighbor(iPoint); ++iNeigh); {; size_t jPoint = adj.jPoint(iPoint,iNeigh);; size_t iEdge = adj.iEdge(iPoint,iNeigh);; double dir = adj.dir(iPoint,iNeigh);. for(size_t iVar=0; iVar<nVar; ++iVar); {; double phi_ave = 0.5*(phi(iPoint,i",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:3332,rout,routine,3332,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['rout'],['routine']
Integrability,"~~; [39/854] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5Dio.c.obj; In file included from ../externals/cgns/hdf5/H5Dio.c:23:; ../externals/cgns/hdf5/H5Dio.c: In function 'H5D__ioinfo_adjust':; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound 2 equals source length [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1145:29: note: in expansion of macro 'HDstrncat'; HDstrncat(local_no_collective_cause_string, ""; "", 2);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound 2 equals source length [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1157:29: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, ""; "", 2);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1147:25: note: in expansion of macro 'HDstrncat'; HDstrncat(local_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(S); ^~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1138:43: note: in expansion of macro 'HDstrlen'; size_t cause_strlen = HDstrlen(cause_strings[idx]);; ^~~~~~~~; ../externals/cgns/hdf5/H5private.h:1448:28: warning: 'strncat' specified bound depends on the length of the source argument [-Wstringop-overflow=]; #define HDstrncat(X, Y, Z) strncat(X, Y, Z); ^~~~~~~~~~~~~~~~; ../externals/cgns/hdf5/H5Dio.c:1159:25: note: in expansion of macro 'HDstrncat'; HDstrncat(global_no_collective_cause_string, cause_strings[idx], cause_strlen);; ^~~~~~~~~; ../externals/cgns/hdf5/H5private.h:1445:21: note: length computed here; #define HDstrlen(S) strlen(",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:8296,depend,depends,8296,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['depend'],['depends']
Modifiability," ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5901,config,config,5901,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,2,['config'],"['config', 'config-lite-']"
Modifiability, $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10592,config,configure,10592,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability," 'current.meshb'; config_amg['mesh_out'] = 'current.new.meshb'; config_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _amgio as amgio; #amgio.py_ConvertSU2toInria(config_amg['adap_back'], """", ""amg_back""); #config_amg['adap_back'] = ""amg_back.meshb""; ; if 'ADAP_SOURCE' in config:; config_amg['adap_source'] = os.path.join(cwd,config['ADAP_SOURCE']); ; global_iter = 0; ; sys.stdout.write(""\nStarting mesh adaptation process.\n""); ; for iSiz in range(len(mesh_sizes)):; ; mesh_size = int(mesh_sizes[iSiz]); nSub = int(sub_iter[iSiz]); ; sys.stdout.write(""\nIteration %d/%d - Mesh size coefficient %.1lf\n"" % (iSiz+1, len(mesh_sizes), mesh_size)); ; for iSub in range(nSub):; ; config_amg['size'] = mesh_size; config_amg['amg_log'] = 'ite%d.amg.stdout' % (global_iter); ; # Prints; pad_cpt = (""(%d/%d)"" % (iSub+1, nSub)).ljust(9); pad_nul = """".ljust(9); ; if not amg_python : ; ; #--- Load su2 mesh ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- If not using the amg python interface, convert the mesh and make system call; ; su2amg.write_mesh(""current.meshb"", ""current.solb"", mesh); ; if not os.path.exists(""current.solb""):; raise RuntimeError , ""\n##ERROR : Can't find solution.\n""; if not os.path.exists(""current.meshb""):; raise RuntimeError , ""\n##ERROR : ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:7768,config,config,7768,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability," (NONE = no marker); MARKER_FAR= ( Farfield ); %; % Symmetry boundary marker(s) (NONE = no marker); % MARKER_SYM= ( Symmetry ); %; % ------------------------ SURFACES IDENTIFICATION ----------------------------%; %; % Marker(s) of the surface to be plotted or designed; MARKER_PLOTTING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % Marker(s) of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( Fuselage, WingUpper, WingLower, VT, HTUpper, HTLower, HTTE, VTWingTip, VTTE, WingTE, WBFairing, PWUpper, PWLower, PWTE ); %; % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 20.0; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10, 0.001 ); %; %; % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver or smoother for implicit formulations (BCGSTAB, FGMRES, SMOOTHER_JACOBI, ; % SMOOTHER_ILU, SMOOTHER_LUSGS, ; % SMOOTHER_LINELET); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (ILU, LU_SGS, LINELET, JACOBI); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-6; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 5 ; % Restart frequency for RESTARTED_FGMRES; LINEAR_SOLVER_RESTART_FREQUENCY= 10; %; % Relaxation factor for smoother-type solvers (LINEAR_SOLVER= SMOOTHER); LINEAR_SOLVER_SMOOTHER_RELAXATION= 0.9; %; % -------------------- FLOW NUMERICAL METHOD DEFINITION -----------------------%; %; % Convective numerical method (JST,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:5262,Adapt,Adaptive,5262,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability," (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 0x00002aaac3d45500 in hmca_bcol_basesmuma_reduce_intra_fanin_progress (); from /opt/mellanox/hcoll/lib/hcoll/hmca_bcol_basesmuma.so; #1 0x00002aaabf587798 in _coll_ml_allreduce (); from /opt/mellanox/hcoll/lib/libhcoll.so.1; #2 0x00002aaabf33038d in mca_coll_hcoll_allreduce (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/openmpi/mca_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3647,config,config,3647,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability, - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeT,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18579,plugin,plugins,18579,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability," ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial College London. |; -------------------------------------------------------------------------; | Copyright (C) 2012-2015 SU2, the open-source CFD code. |; | ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16676,config,configure,16676,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability," --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7207,config,configure,7207,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,12,['config'],['configure']
Modifiability," 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; | #ifdef HAVE_SYS_TYPES_H; | # include <sys/types.h>; | #endif; | #ifdef HAVE_SYS_STAT_H; | # include <sys/stat.h>; | #endif; | #ifdef STDC_HEADERS; | # include <stdlib.h>; | # include <stddef.h>; | #else; | # ifdef HAVE_STDLIB_H; | # include <stdlib.h>; | # endif; | #endif; | #ifdef HAVE_STRING_H; | # if !defined STDC_HEADERS && defined HAVE_MEMORY_H; | # include <memory.h>; | # endif; | # include <string.h>; | #endif; | #ifdef HAVE_STRINGS_H; | # include <strings.h>; | #endif; | #ifdef HAVE_INTTYPES_H; | # include <inttypes.h>; | #endif; | #ifdef HAVE_STDINT_H; | # include <stdint.h>; | #endif; | #ifdef HAVE_UNISTD_H; | # include <unistd.h>; | #endif; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking X11/Intrinsic.h presence; configure:5409: gcc -E conftest.c; conftest.c:28:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:57",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:14261,config,configure,14261,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," 8:38 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: [su2code/SU2] C++ compiler cannot create executables (#738). Dear developers,; I am trying to install SU2 in docker ubuntu 18.04 container so that I can easily share with partner. But I failed to compile the code with following errors:. (base) root@a5502ebdff64:/home/SU2# ./configure --prefix=/home/SU2/SU2_Install CXXFLAGS=""-O3"" --enable-mpi --with-cc=/usr/bin/mpicc --with-cxx=/usr/bin/mpicxx. checking build system type... x86_64-pc-linux-gnu. checking host system type... x86_64-pc-linux-gnu. checking target system type... x86_64-pc-linux-gnu. checking for a BSD-compatible install... /usr/bin/install -c. checking whether build environment is sane... yes. checking for a thread-safe mkdir -p... /bin/mkdir -p. checking for gawk... no. checking for mawk... mawk. checking whether make sets $(MAKE)... yes. checking whether make supports nested variables... yes. checking whether make supports nested variables... (cached) yes. checking for style of include used by make... GNU. checking whether the C++ compiler works... no. configure: error: in `/home/SU2':. configure: error: C++ compiler cannot create executables. See `config.log' for more details. I am sure that I have installed gcc/g++ successfully. You can see. (base) root@a5502ebdff64:/home# gcc --version. gcc (Ubuntu 7.4.0-1ubuntu1~18.04.1) 7.4.0. Copyright (C) 2017 Free Software Foundation, Inc. This is free software; see the source for copying conditions. There is NO. warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. (base) root@a5502ebdff64:/home# g++ -o hello hello.cc. (base) root@a5502ebdff64:/home# ./hello. Hello, World!. I have uploaded the config.log file. Could you give me some suggestions, please?; config.log<https://github.com/su2code/SU2/files/3418183/config.log>. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on Gi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513847308:1205,variab,variables,1205,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513847308,1,['variab'],['variables']
Modifiability, ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/C,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18738,plugin,plugins,18738,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability," ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C++ compiler for the host machine: g++ (gcc 5.5.0 ""g++ (GCC) 5.5.0""); C++ linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:1208,config,configuration,1208,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,1,['config'],['configuration']
Modifiability," = 65, SU2 runs and converges to some results. For y+ < 65, SU2 raises a segmentation fault at this location: ; ![segfault](https://user-images.githubusercontent.com/24920252/140756620-db3ed08f-05cd-4811-b037-642a221ea501.png); Here are the results of the gdb analysis. It seems that the seg faut comes from the Giles BC part of the initialisation of the turbo data containers. Especially those lines (CEulerSolver.cpp line 435-436). `CkInflow[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(INFLOW)+1) = complex<su2double>(0.0,0.0);`. `CkOutflow1[iMarker].resize(nSpanWiseSections,2*geometry->GetnFreqSpanMax(OUTFLOW)+1) = complex<su2double>(0.0,0.0);`. but I don't understand why. ![issue](https://user-images.githubusercontent.com/24920252/140783485-0d856d2a-7353-468f-aeab-c78b742d8582.png). The first thing I checked was to reduce the number of elements in my domain but the problem remains the same (so no memory issue).; Then I checked if it was not an issue from . - : a too small size of my first element. I scaled my domain by a factor of 1000 and the issue is the same (can't go below y+ = 65);; - : trouble with the expansion ratio of the boundary layer;; - :the number of procs (tried with 2 - 6 -15 and the issue is the same). I don't have idea anymore and that is why I'm coming to you. . *Please provide a config file and mesh for a minimal example that recreates the problem.*. Here is a link to the .geo file (line 28 is to get a y+ of 1. You can uncomment line 29 for y+=65), the .cfg and two .su2 meshes to directly launch the case. . https://mseduculiegebe-my.sharepoint.com/:u:/g/personal/amaury_bilocq_uliege_be/EaUIIj1J_-BBktcLu8F9kosBsRjtOduWrrtENbW_bnx1ow?e=F47adW. Thank you already for your help!. Amaury. **Desktop (please complete the following information):**; - OS: Linux - Ubuntu 21.04; - C++ compiler and version: g++ (GCC) 10.3.0; - MPI implementation and version: Intel(R) MPI Library for Linux* OS, Version 2021.4 Build 20210831; - SU2 Version:7.2.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1429:2532,config,config,2532,https://su2code.github.io,https://github.com/su2code/SU2/issues/1429,1,['config'],['config']
Modifiability, C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; con,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10406,config,configure,10406,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability," C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5973,config,config-lite-,5973,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability," Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-relate well",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:1533,variab,variables,1533,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,2,['variab'],['variables']
Modifiability, D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19043,plugin,plugins,19043,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability, D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; - I QuickStart/inv_NACA0012.cfg (0) ; - I README (0) ; - I SU2_CFD/include/SU2_CF,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19712,plugin,plugins,19712,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability," MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. AD implementation is missing at the moment, but it will be added in the future. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](h",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:1734,variab,variables,1734,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['variab'],['variables']
Modifiability, MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16054,plugin,plugins,16054,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability, MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugi,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18419,plugin,plugins,18419,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability, MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structure,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18499,plugin,plugins,18499,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability," Palacios, Thomas D. Economon,; # Tim Albring, and the SU2 contributors.; #; # SU2 is free software; you can redistribute it and/or; # modify it under the terms of the GNU Lesser General Public; # License as published by the Free Software Foundation; either; # version 2.1 of the License, or (at your option) any later version.; #; # SU2 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU; # Lesser General Public License for more details.; #; # You should have received a copy of the GNU Lesser General Public; # License along with SU2. If not, see <http://www.gnu.org/licenses/>. import os, sys, shutil, copy, time; import numpy as np. from .. import io as su2io; from .. import amginria as su2amg; from interface import CFD as SU2_CFD. try :; import pyamg ; except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:2531,config,config,2531,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability," a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3016,variab,variable,3016,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability," added. I haven't tested with single core. As far as I see in CPhysicalGeometry::MatchNearField,; > > > the code looks for a nearest point to a point on the nearfield boundary. If it exceeds 1e-1 (which is usually the case if you have; > > > real scale mesh), it prints this warning. I'm not sure what this is for. I'm ignoring it since I don't see an issue with this distance; > > > exceeding 1e-1.; > > ; > > ; > > Concerning this: I understand this nearfield marker as an internal ""boundary"" which does not alter the usual solution process at all. It is just added to compute some interesting quantity one. So the Nearfield marker needs to be in the mesh right, at the end like all other boundary markers? As such it is defined using mesh points and therefore there should be no discrepancies between nearfield marker nodes and mesh nodes? Am i correct with that, if not please enlighten me what is actually happening :); > ; > Yes, nearfield marker is just used to extract required physical quantities and should not alter the usual solution process at all. There should be no discrepancies between nearfield marker nodes and mesh nodes. I haven't checked this part of the code for a while but if I remember correctly, the ""Bad match..."" message is shown if there is discrepancy between a nearfield marker node and the nearest mesh node that is NOT on nearfield boundary. I did more investigations. This ""Bad match..."" message is output in `CPhysicalGeometry::MatchNearField` and this function has `SetDonorPoint`. However, currently there is no `GetDonorPoint` except for periodic boundary condition. I don't believe this is used any more. I went back in history and found out that `GetDonorPoint` exists in `CGridAdaptation::SetHomothetic_Adaptation2D` in ver.6.2.0. I suspect this is for grid adaptation to make mesh finer to capture shock waves. In ver.7, grid adaptation related parameters in configuration template file are not used, so it appears that grid adaptation function is dead now.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111:1985,adapt,adaptation,1985,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-898991111,4,"['adapt', 'config']","['adaptation', 'configuration']"
Modifiability," aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used pre-commit run --all to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:1543,config,config,1543,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,3,"['Enhance', 'config', 'flexible']","['Enhancements', 'config', 'flexible']"
Modifiability," are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files. ## Parallel Unsteady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Unsteady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `OUTPUT_WRT_FREQ= 100`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=1; * Following changes to tutorial config file:; * `WINDOW_CAUCHY_CRIT = NO`; * `TIME_DOMAIN = NO` and comment out `TIME_MARCHING`, `TIME_STEP`, `TIME_ITER`; * `INNER_ITER= 20000`; * `OUTPUT_WRT_FREQ= 1`; * `mv restart_flow_00499.dat restart_flow.dat`; * `parallel_computation.py -n 4 -f unsteady_naca0012.cfg`; * Take note of PIDs for memory measurement (see below). ## Parallel Steady Freq=100; * Following changes to tutorial config file:; * `WINDOW_CAUCH",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:1975,config,config,1975,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['config']
Modifiability," be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't been updated for a while. For example, SU2_GEO is a bloated wrapper c++ script that calls a couple of CGeometry/CSurfaceMovement functions. The calling of these functions could be easily ported to python and increase the functionality of the Python Wrapper interface. . Some of the specific things I want to do in this PR:. 1. Refactor SU2_GEO such that all its functionality can be performed in python (in progress); 2. Add a generalized thickness constraint (in progress); 3. Be able to do multiple types of geometry evaluation (for example wing+fuselage); 4. Expose some of the mesh deformation functions to python to allow for robust design variable definition; 5. Perform all of the shape optimization using the in-memory python scripts; 6. Intelligent handling of solution divergences that doesn't break the optimization; 7. Better way to define multipoint optimizations; 8. Better multi-objective optimization definition (#913 might be helpful in this); 9. Simplify the multitude of shape optimization options (#733). As you can probably tell, a lot of my examples and motivations revolve around aerospace applications. So while I try and make a general framework that is robust, I might not be thinking in a broad enough fashion. I would love to get input from the community for any functionality that they might want to see in this framework. The more robust this ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:2328,Refactor,Refactor,2328,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['Refactor'],['Refactor']
Modifiability," case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need to run the cases themselves. . I also wanted to broach the topic of convergence here. Would it be a good idea to standardize the termination criteria wherever possible? For example, in the NACA0012 case we can ensure that residuals are reduced by 8 orders of magnitude for all meshes. Or for the ONERAM6, we use Cauchy convergence and make sure the C_L is converged to 6 orders of magnitude. This would have to be flexible since the same level of convergence might not apply to all the cases in the repository. But for within a test case, I think it would be good to use the same convergence criteria for a family of meshes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:2415,flexible,flexible,2415,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,2,['flexible'],['flexible']
Modifiability," checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11872,config,configure,11872,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability," commits or submit a pull request, the unit tests are run and checked. What is my vision for unit testing in SU2?. I am not proposing that we start trying to get 100% code coverage with pre-existing code. That would not provide a good return on investment. Instead, I see people adding unit tests as they write new code and as they find bugs. For each new behavior added to SU2, tests are first added to document the related existing behavior. These tests serve to check that the existing behavior isn't damaged by the new code. Then new tests are added to prove that the new behavior is working correctly. For bug fixes, the process is simpler. A test is added to confirm that something is not behaving as expected. Then the code is fixed to make the test pass. What frameworks are available?. For a unit testing framework, here are the most popular options, with the following pros and cons:. Roll-your-own. * Requires no external dependencies; * The most flexible option; * Involves the most work to setup; * Will lack some of the more advances features of mature unit-testing frameworks. Boost Test. * Can be header only, statically linked, or dynamically linked; * If statically or dynamically linked, then Boost is not very lightweight; * Easy to add if you're already using Boost. Google Test. * Most common unit-testing framework; * Can be easily combined with Google's powerful GMock mocking library; * Compiling and linking can be somewhat painful. Catch2. * Used by FEniCS; * Makes unit tests easily readable with lots of syntactic sugar.; * Has a very simple syntax; * Is header-only; * Requires C++11 compilation; * Not as feature rich as Google Test or Boost Test. Questions. * How do developers feel about adding unit tests to SU2?; * If a unit-testing framework were added to SU2, would you actually use it?; * Do developers have a preference (or experience with) any of the unit testing frameworks?; * Should unit tests be expected when submitting PRs?. —; You are receiving this bec",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499250240:4429,flexible,flexible,4429,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499250240,2,['flexible'],['flexible']
Modifiability," configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:8586,config,configure,8586,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," connectivity[iEdge].first;; size_t jPoint = connectivity[iEdge].second;. double phi_ave[nVar];. #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); phi_ave[iVar] = 0.5*(phi(iPoint,iVar)+phi(jPoint,iVar));. for(size_t iDim=0; iDim<nDim; ++iDim); {; #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); {; double flux = phi_ave[iVar]*area(iEdge,iDim);. grad(iPoint,iVar,iDim) += flux;; grad(jPoint,iVar,iDim) -= flux;; }; }; }. for(size_t iPoint=0; iPoint<nPoint; ++iPoint); for(size_t iDim=0; iDim<nDim; ++iDim); #pragma omp simd; for(size_t iVar=0; iVar<nVar; ++iVar); grad(iPoint,iVar,iDim) /= volume[iPoint];; }; ```; Well it is not just a few pragmas, we need to make the number of variables known at compile time (via a template parameter) and we need to transpose how the gradient is stored, i.e. instead of {xyz, xyz, xyz, xyz} we need {xxxx, yyyy, zzzz}. This code gets a speed-up of **2.2**. This code is generic but the template needs to be instantiated for every possible number of variables and we need a `switch` to call the right version at runtime, not very friendly.; Processing multiple edges at the same time is not worth the effort, for one we need `gather/scatter` on a very light routine, and on top of that we need to sort the edges such that we do not attempt to `scatter` to the same point when updating the gradient (a problem similar to the race condition described for SPMD). We can switch to a point-based loop and process multiple points in a SIMD way, that avoids the `scatter` problem but `gathers` will still be required. Here is what the scalar version of the point-based loop looks like:; ```C++; void computeGradients(size_t nPoint,; size_t nVar,; size_t nDim,; const Adjacency& adj,; const Matrix& area,; const vector<double>& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; for(size_t iPoint=0; iPoint<nPoint; ++iPoint); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad(iPoint,iVar,iDim) = 0.0;. for(size_t iNe",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:3124,variab,variables,3124,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['variab'],['variables']
Modifiability," container that automates the per-thread creation and access. > Why are they redefined each time inside the loop?; > Is this for efficiency reasons?. Referring to variables being declared inside loops. One stylist reason is that declaring everything at the top of a function is the C way of doing things, the C++ people whose books/blogs I've read and talks I've watched, recommend keeping namespaces (the inside of the loop being one) as clean as possible.; The only reason not to do this is if you explicitly want re-use, in the case of trivial types this does not improve efficiency, and in the context of OpenMP code it can create issues. Just like we need one numerics per thread, if we declare variables outside a parallel loop the default OpenMP behaviour is to consider them shared, and concurrent writes to shared locations = gdb and many bad words xD.; **EDIT:** I should mention here that if the parallel region is started before the variable declarations they become local and all is well, with the exception of class members, those will be shared most of the time (this is where const correctness can give some peace of mind). > Also, just an additional (hopefully constructive) comment: I find all of these developments great, and I honestly think that you are doing an amazing job on performance and overall code improvement. However, as a non-C++-master myself, I'm just a little concerned of whether some advanced programming may become an entrance barrier to new additions to the community. As I wrote in the preamble of #789:; ""But please participate even if you never heard of these topics, your opinion about readability and ""developability"" of the code is important! I think the code-style should be accessible to people starting a PhD (after they read a bit about C++...).""; I try to encapsulate and hide the tricky bits as much as possible to make the code as readable as possible, whether I am succeeding or not is for the community to decide, in all these PR's I've been poi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843#issuecomment-577684728:3115,variab,variable,3115,https://su2code.github.io,https://github.com/su2code/SU2/pull/843#issuecomment-577684728,2,['variab'],['variable']
Modifiability," coupled via the python interface, while SU2 shall provide the aerodynamic side, as a higher fidelity alternative to panel methods such as VLM & DLM. . Update, 13.04.2023: The combination of grid velocities from the moving + deforming grid turned out to be more complicated as expected (at least for me) and the moving grid is not fully implemented for unsteady simulations (according to Pedro, some source terms are missing). The new approach uses a farfield onflow condition at alpha=0.0 and translates and rotates the whole aircraft in the elastic mesh for the rigid body + structural dynamic reaction. This is more laborious on my side (transformation of the surface, the deformation vector and the forces about the Euler angles) but simplifies the work on the SU2 side:. - extend the gust to 3D meshes (current implementation only for 2D meshes); - ~~update the grid movement during the time domain simulation via the python interface; Involved parameters: ; GRID_MOVEMENT= ROTATING_FRAME; TRANSLATION_RATE= u v w ; ROTATION_RATE= p q r~~; - update the surface mesh deformation during the time domain simulation via the python interface ; Involved parameters: ; DEFORM_MESH= YES; MARKER_DEFORM_MESH= ( list of markers ). Summing up, I will need to combine the grid velocities due to aircraft movement, elasticity and gust. Currently, this is not possible in SU2. ; I split the work into the following steps. Here is what is working / not working:; - [x] gust with 3D meshes --> plausibility check with rectangular, 3 meter wing at 2° + long gust equivalent to 2° = approx doubling of the lift coefficient; - [x] ~~gust + moving grid --> plausibility check by comparison with farfield onflow condition from above~~; - [x] ~~new python interface for grid movement update --> plausibility check with a) sudden jump in heave velocity w, b) sinusoidal velocity w at different frequencies to observe influence of unsteady aerodynamics (phase shift and reduction of resulting lift)~~; - [x] mesh deform",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1954:1121,extend,extend,1121,https://su2code.github.io,https://github.com/su2code/SU2/pull/1954,1,['extend'],['extend']
Modifiability," distance between the primitives at consecutive nodes is 200 doubles or 1600 bytes. ""What?! is the compiler dumb?"" No, virtual methods take up quite a bit of space `sizeof(CNSVariable)` is 424 bytes, before it allocates any data.; And that can only get worse as more functionality is added to the code. This is one of those ""well known"" things at least in a qualitative way, but let us try and quantify the cost using an approximation of our typical use case scenario.; *Spoiler alert:* It is up to one order of magnitude, if this does not surprise you feel free to go straight to ""Proposed solution"". We will have a variable class that stores some data with some overhead (the 200 doubles):; ```; class VariableBase; {; protected:; double* primary;; public:; VariableBase(int nVar, int overhead);; virtual ~VariableBase();; inline double* GetPrimary() {return primary;}; inline virtual double* GetSecondary() {return nullptr;}; };. VariableBase::VariableBase(int nVar, int overhead); {; primary = new double [nVar+overhead];; for(int i=0; i<nVar; ++i) primary[i] = 1.0;; }; ```; All this does is give access to some primary variables held by the base class and allow derived classes to store their own secondary variables, e.g.:; ```; class VariableDerived : public VariableBase; {; private:; double* secondary;; public:; VariableDerived(int nVar, int overhead);; ~VariableDerived();; inline double* GetSecondary() {return secondary;}; };; ```; Then lets say we have dummy numerics classes.; ```; class NumericsBase; {; public:; virtual ~NumericsBase();; inline virtual double ComputeResidual(const double* a, const double* b) {return 0.0;}; };. class NumericsDerived : public NumericsBase; {; private:; int n;; public:; NumericsDerived(int nVar);; double ComputeResidual(const double* a, const double* b);; };; ```; `NumericsDerived` simply computes the dot product of `a` and `b`.; The use case is to loop over edges that connect nodes `a` and `b` passing the data of those nodes to `ComputeResidu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:1954,Variab,VariableBase,1954,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['Variab'],['VariableBase']
Modifiability," documentation, but that’s hardly unusual in the open source world, and maybe not so relevant to SU2, which doesn’t have the multitude of external dependencies that many open source projects do. I think the struggles I have had relate mostly to the non-transparent way that Meson interacts with the underlying utilities (pkg-config, CMake, llvm-config,…). For example, I had to fumble around to get Meson to find llvm-config in a non-standard location (adding that location to $PATH turned out to be the answer), as well as to get pkg-config to find its required pkgconfig directories in non-standard locations (adding them to $PKG_CONFIG_PATH was the answer there). I also had to build/install Python 3 (required by Meson), and found that the Python 3.7 has problems with OpenSSL (module _ssl), on which Meson depends, so I went back to Python 3.6. I imagine any pre-built Python 3.7 would be fine, though a related bug appears to still be open (https://bugs.python.org/issue34028). On Windows, Meson will output Visual Studio projects, which would make any Windows developer happy, but your source still has to be cross-platform friendly—not a problem for TecIO, but I don’t know if that’s true elsewhere in SU2. FWIW,. Dave. From: Tim Albring [mailto:notifications@github.com]; Sent: Wednesday, May 22, 2019 7:31 AM; To: su2code/SU2 <SU2@noreply.github.com>; Cc: Subscribed <subscribed@noreply.github.com>; Subject: Re: [su2code/SU2] Meson build system (#685). To see a major advantage, just compare the meson.build and the configure.ac file ... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/685?email_source=notifications&email_token=AADV2HBMTJ7RZMV763KCYPLPWVKIXA5CNFSM4HOUXHQKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODV7HU5Y#issuecomment-494828151>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AADV2HCTYNNIVVXY7RSS5WTPWVKIXANCNFSM4HOUXHQA>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-494848848:1947,config,configure,1947,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-494848848,1,['config'],['configure']
Modifiability," each option and talk about how it affects things (to the best of my knowledge). I am hoping someone can shed some light on the choices that were made and correct me if I am wrong in any of my assessment. 1. OPT_OBJECTIVE Scaling: It scales the objective function with the factor that you multiply it with. In the case above, the DRAG is being scaled by 10. **This scaling is also applied to the gradient of the objective function.**. 2. OPT_CONSTRAINT Scaling: Same as the OPT_OBJECTIVE scaling, but for the constraints. 3. OPT_GRADIENT_FACTOR: This is a misleading name and I propose changing it. Even though the name has gradient in it, this scaling is applied to both, the objective/constraint, and its gradient. I would like to change the name to OPT_GLOBAL_FACTOR. The reason why this is **global** and different from the objective/constraint scaling is because it's applied uniformly to all objectives and constraints. 4. OPT_RELAX_FACTOR: This is a scaling factor that purely multiplies the DV_VALUES from a config file, before applying the deformation to the mesh. For example, if you are performing a 2D optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:3376,config,config,3376,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['config'],['config']
Modifiability," file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\li",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6499,config,config-lite-,6499,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability," for `issue_complicated.zip`. With `issue_simplified.zip` I try to provide a minimal working example, and it reproduces the same convergence/divergence behaviour, but I'm not sure whether it really covers the complete problem. `issue_simplified.zip` has been created as follows:; - In the singlezone setup, the whole mesh has been exported to `singlezone.su2`. The `singlezone.cfg` is `TestCases/rans/naca0012/turb_NACA0012_sst.cfg` with adapted mesh filename, marker names and Reynolds number, and `RESTART_SOL=NO`.; - In the multizone setup, the mesh has been split into two zones. `multizone-0.su2` is the inner ""ring"" of `1 <= radius <= 4` between the circle and the ""boundary-layer-like"" structure. `multizone-1.su2` is the remaining part `4 <= radius`. I created a `multizone.cfg` that refers to `multizone-0.cfg`, `multizone-1.cfg` and joins the zones by a `MARKER_FLUID_INTERFACE`. The two `multizone-i.cfg`s are identical to the `singlezone.cfg` except that the mesh filename and markers we adapted again, and the `ITER=` option was removed. In `issue_complicated.zip`, filenames and cfg files are a bit different but the meshes are the same. Observed and expected behaviour; ===========================; I would expect that the two simulations give similar results. However, the singlezone setup converges while the multizone setup diverges (`SU2 has diverged (NaN detected).` or `SU2 has diverged (Residual > 10^20 detected).`). The same behaviour is observed for CFL=10 instead of 1000, and also for SA with CFL=10. I ran v7.2.0 (commit 3ec1c680) in serial (without MPI). I reported a similar problem some time ago in the developer meeting, with a ""chopped NACA 0012 airfoil"" testcase. For this issue we created this more basic example which seems to reproduce the error (although I am not completely sure). Typically we would see the `SU2 has diverged (Residual > 10^20 detected).` error. Differences between multizone/fluid-interface and singlezone/joined-meshes; ======================",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414:2714,adapt,adapted,2714,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414,1,['adapt'],['adapted']
Modifiability," for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. :bangbang: IMPORTANT: the following code served as a first draft and orientation. The final version has slightly changed to improve efficiency, reusability and readability. :bangbang:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVo",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1413:4182,variab,variables,4182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1413,1,['variab'],['variables']
Modifiability," for the ""baseline"" version (SA), except we take the term $f_{t2}$ into account. #### Spalart-Allmaras mixing layer compressibility correction; This version is the same as for the ""baseline"" version except that an additional term is included on the right hand side of the equation. #### Spalart-Allmaras Edwards modification; This version is the same as for the ""baseline"" version, except that $f_{t2}$ is ignored, and two variables are redefined: the modified vorticity $\tilde{S}$ and $r$. Note that this correction is not compatible with the negative SA model. Since there is no literature on how to handle both corrections simultaneously, the community decision was to prompt an error when trying to use them. #### Spalart-Allmaras QCR-2000; The QCR correction modifies the turbulent stresses definition. ### Code structure; The approach that I decided to follow is:; The baseline/standalone SA class will have several templates parameters. Each of them will correspond to one of those variables that are subject to change in a SA correction/variation. Then, when creating the SA turbulence model, one just needs to replace each of these templates by the appropriate class. For those corrections/variations that just introduce an additional source term, I think it is better to implement them using decorators. Hence multiple corrections/variations introducing source terms can be simultaneously used. Here is a minimal example:. ```c++; template<class ft2_c, class ModVort_c>; class SA_Base : public CNumerics {; public:; SA_Base() {}. void computeResidual() final {; ft2 = ft2_c::Compute(); S_hat = ModVort_c::Compute(2.0,10); }; };. // the term ""bsl"" stands for baseline; class ft2_bsl { static double Compute() { return 0.0; } }; ; class ft2_nonzero { static double Copmute() { return ...; } };; class ModVort_bsl { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Neg { static double Compute(const double x, const int y){ return x*y; } };; class ModVort_Ed",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1411:4182,variab,variables,4182,https://su2code.github.io,https://github.com/su2code/SU2/pull/1411,1,['variab'],['variables']
Modifiability," gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11820,config,configure,11820,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," have generated several meshes with increasing level of refinement from A to D. ![image](https://github.com/su2code/SU2/assets/116454159/4d04287e-b111-45b5-96dd-6b9cc5f18217). It appears that there may be either a misunderstanding on my part with the implementation of SST-V2003m w/ MUSCL, or that a bug exists in SU2 for it. I got very unusual and different results when using MUSCL vs. not. To further look into this, I also completed additional simulations using `KIND_TURB_MODEL=SA`, which got me much more reasonable-looking results. Please see the plots below:. ![image](https://github.com/su2code/SU2/assets/116454159/e5d80bbd-9bc2-4f3c-a6e2-bb5dfc43336b); ![image](https://github.com/su2code/SU2/assets/116454159/3804bdf1-7f99-4584-9683-cfbfd7dfa916). Lastly, here is the config file:; [config.txt](https://github.com/su2code/SU2/files/12155765/M6_LowRe.txt). Note that the ""MUSCL=ON"" in the plots indicate the solution for both `MUSCL_FLOW=YES` and `MUSCL_TURB=YES`. That is the only difference between config files. Also, I tried using `MARKER_RIEMANN`, `MARKER_OUTLET`, and `MARKER_SUPERSONIC_OUTLET` on the outlets with no success on fixing this discrepancy, so I believe it is not related to the boundary conditions. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (CentOS 7)]; - C++ compiler and version: GCC 9.1.0; - MPI implementation and version: Intel MPI 19.0.9; - SU2 Version: v7.5.1 but with following additional commits cherry-picked:; - 8ce4c3fd5e030949d037e073e1b4418e51c8754",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2088:1377,config,config,1377,https://su2code.github.io,https://github.com/su2code/SU2/issues/2088,1,['config'],['config']
Modifiability," import amginria as su2amg; from interface import CFD as SU2_CFD. try :; import pyamg ; except:; sys.stderr.write(""## ERROR : Unable to import pyamg module.\n""); sys.exit(1). def amg ( config , kind='' ):; ; sys.stdout.write(""SU2-AMG Anisotropic Mesh Adaptation\n""); ; #--- TODO: Check pyamg version compatibility; ; #--- Check config options related to mesh adaptation; ; adap_options = ['ADAP_SIZES', 'ADAP_SUBITE', 'ADAP_SENSOR', \; 'ADAP_BACK', 'ADAP_HMAX', 'ADAP_HMIN', 'ADAP_HGRAD', 'ADAP_RESIDUAL_REDUCTION', 'ADAP_EXT_ITER', 'ADAP_SOURCE','ADAP_PYTHON']; required_options = ['ADAP_SIZES', 'ADAP_SUBITE', \; 'ADAP_SENSOR', 'MESH_FILENAME', 'RESTART_SOL', 'MESH_OUT_FILENAME']; ; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : Missing options: \n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; # Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(ada",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:3298,config,config,3298,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability," in this commit. ## Proposed Changes; The hybrid upwind/central blending introduced for DES has the option to use the blending by Travin _et al._ (2002). It's referred to as the ""NTS adaptive"" blending or the ""NTS"" blending for short, and was labeled as a ""low dissipation function"". But the what's implemented in the code doesn't match the paper, and it doesn't even make sense. You can compare the code to the paper by Travin _et al.__ at: https://doi.org/10.1007/0-306-48383-1_16 or the related AIAA presentation at: https://arc.aiaa.org/doi/pdf/10.2514/6.2001-879. There's multiple issues that I believe are present:. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1033,variab,variables,1033,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,2,['variab'],"['variable', 'variables']"
Modifiability," instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninja uses all available cores in your system by default. Still you can set the number of jobs using `-j N`. ### Additional notes; - Meson requires python 3, so implicitly we get this requirement now. But I think it is less of a problem than some of you probably might think. A lot of problems we have come from the fact the we support python 2 and python 3. As I was setting up travis (getting there in a moment) I noticed that is easily possible to compile the code with python 3 (for the python wrapper) and run the python scripts with python 2 and vice versa, which eventually leads to errors and crashes. If we require(!) version 3 (which should be installed on all machines now ...) we can avoid such problems from the beginning. Furthermore, python 2 is deprecated anyway ... - I already changed travis to use the new build system. This as one major advantage: we can now properly use ccache and the caching feature of travis (that means only files that have changed will",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1995,config,configure,1995,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,2,['config'],"['configurations', 'configure']"
Modifiability," is used for solving the linear system.; Using a LU-SGS preconditioning.; Convergence criteria of the linear solver: 1e-06.; Max number of linear iterations: 7.; CFL adaptation. Factor down: 1.5, factor up: 0.5,; lower limit: 0.5, upper limit: 3.5.; Courant-Friedrichs-Lewy number: 1; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-Bndry|; | | Tria-5-Bndry|; +-----------------------------------------+; | Symmetry plane| Tria-3-Bndry|; | | Quad-6-Bndry|; +-----------------------------------------+; | Heat flux wall| Tria-1-Bndry|; | | Tria-8-Bndry|; | | Tria-9-Bndry|; | | Tria-10-Bndry|; | | Tria-11-Bndry|; | | Tria-12-Bndry|; | | Tria-13-Bndry|; | | Tria-14-Bndry|; | | Tria-15-Bndry|; | | Tria-16-Bndry|; | | Tria-17-Bndry|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 2405969 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 5820762 interior elements before parallel partitioning.; Execu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:2448,variab,variables,2448,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['variab'],['variables']
Modifiability," means for each numerical method we will have 4 explicit template instantiations (Euler2D, Euler3D, (RA)NS2D, (RA)NS3D) but in the end these are still polymorphic objects that will be instantiated by some factory function (i.e. it will look clean, especially because I will not port all methods in one go xD). The template machinery to support this is actually not too crazy:; ```c++; #include <array>; #include <cmath>. // An example type to use instead of the container that stores solution data for all vertices.; struct SolutionContainer; {; std::array<double,3> velocity;; std::array<double,3> areaVector;; };. using ResultType = double;. // We want classes with this interface.; class VirtualInterface; {; public:; virtual ResultType Compute(const SolutionContainer&) const = 0;; };. // The Compute method is to be composed via an inheritance chain, to do this; // we allow each building block to inherit from any class. These classes should; // be function objects that have no member variables, all data used in the; // resulting Compute method will be on the stack.; template<typename Base>; class ComputeArea : Base; {; protected:; // Different template instantiations will be made for; // 2D/3D to allow perfect loop unrolling.; enum : int {nDim = Base::nDim};. // To share variables between building blocks we will pass; // down a struct which is also composed by inheritance; struct WorkVarsType : Base::WorkVarsType; {; double area; // add ""area"" to the variables of Base; };; ; // The final implementation of Compute will be a call down the chain.; // The final constructed WorkVarsType is not known at this stage,; // hence we also template the method.; template<typename WV>; void Compute(WV& wv, const SolutionContainer& sol) const; {; // Boilerplate, call base first. This is akin to the decorator design pattern; // without polymorphism. The working variables resemble Python's ""self"" which; // makes this solution reasonably idiomatic.; Base::Compute(wv, sol);. // Then do our sp",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-622941617:2712,variab,variables,2712,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-622941617,2,['variab'],['variables']
Modifiability," model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2"";",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7477,config,configure,7477,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Co",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16282,config,config,16282,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability," of contiguous data.; It is not the only way, it is also possible to `gather` and `scatter` data. That is populating the register from non-contiguous locations and vice versa. This is about one order of magnitude slower, to the point where if the computations are very simple it may not pay-off to vectorize. **Relation with algorithms**; Some form of `gather` and `scatter` is required in unstructured CFD, which means SIMD has a price of admission. Some thought needs to go into designing algorithms that amortize that cost by maximizing the so called FLOP/Byte ratio, and mask the latency of those operations by being able to start computing as soon as the first element of data is available. **What elements should we try to process simultaneously?**; The choice is between multiple geometric primitives (edges/points) or multiple solution primitives (variables). The latter sounds like a sensible idea until we get to areas of the code where different primitives require different treatment, that and the fact that the number of variables might not fit evenly in the number of lanes can lead to very tricky and non-generic code. Nevertheless if the same code were to be applied to e.g. 4 solution variables, this strategy would likely perform better as it avoids the pesky gather/scatter operations.; Processing multiple geometric primitives can make full utilization of whatever register size (important on GPU's), the code is just as readable (as I hope to show), but gather/scatter cannot be avoided. ### Intro to SPMD; This one is simpler, in a nutshell multiple threads operate on the sub domain of an MPI rank.; The typical implementation has each thread executing a chunk of an edge or cell loop. **Why should we care about SPMD?**; Reduce the communication overhead resulting from domain decomposition and improve load balancing, important for strong scaling.; Some algorithms are more efficient that way, e.g. the ADT (as mentioned by Edwin), the current MG also seems to work better on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-529662724:2382,variab,variables,2382,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-529662724,2,['variab'],['variables']
Modifiability," of time spent; > in bug-fixing and maintaining.; >; > For more information, see this relevant Stack Exchange question.; > <https://scicomp.stackexchange.com/questions/206/is-it-worthwhile-to-write-unit-tests-for-scientific-research-codes>; > What do I propose?; >; > My research group at UT Austing has implemented a unit testing framework; > on our branch, which we're happy with. Some choices were arbitrary, and; > some choices were made based on our development environment. Those choices; > may be different for other groups. Here's what we have done:; >; > The unit testing framework is compiled and run using autotools. For more; > information on autotool's setup, see their documentation; > <https://www.gnu.org/software/automake/manual/html_node/Tests.html>.; > Since autotools is the build system for SU2, this involves minimal changes.; >; > Using automake, the build process for building unit tests becomes:; >; > '''; > ./bootstrap; > ./configure; > make; > make check; > '''; >; > We use Boost's unit testing framework; > <https://www.boost.org/doc/libs/1_70_0/libs/test/doc/html/index.html>.; > This provides a convenient set of macros for instatiating tests, grouping; > tests into suites, and running checks. This choice was based on what is; > available in our development setup.; >; > We have integrated our unit tests into our Travis CI regression testing.; > Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:4176,config,configure,4176,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['config'],['configure']
Modifiability," optimization using a FFD and the optimizer spits out a suggested DV_VALUE of 0.001, the mesh deformation routine will move the FFD control point by 1 (according to the scaling given above). 5. OPT_LINE_SEARCH_BOUND: This is an interesting one and the one I am least sure off. This option limits the maximum final movement of the FFD control points in the cartesian coordinate system. So, DV_VALUE * OPT_RELAX_FACTOR results in a movement of the FFD_CONTROL_POINT. If the the maximum movement of any of the control points is greater than OPT_LINE_SEARCH_BOUND, then all the control point movements are scaled such that the maximum movement = OPT_LINE_SEARCH_BOUND. . 6. OPT_UPPER/LOWER_BOUND: This value is divided by the OPT_RELAX_FACTOR to give the optimizer the maximum/minimum values for the design variables. . 7. DEFINITION_DV Scaling: This one I am really confused about. The only place that I can find this being used, is to scale the gradient of the objectives/constraints. It doesn't seem to actually scale the DVs anywhere in the python code, except for in the initialization, where the DVs are zeroed out anyway. Am I missing something here? Is it correct to think that scaling the gradients is one way to ensure that the DVs that the optimizer outputs scaled DVs?. In general, I think it'd be useful to have more information in the config template so that the scalings don't seem to be a dark art. The template does have some suggestions, like the gradient norm should order 10^-6. I have found this suggestion to be super useful, and it does work well. But I am not sure why the gradients need to be so small for the optimizer to work well. Any insight into this value?. In the end I am hoping to de-mystify some of the scalings, and how best to go about them. Ideally at the end of this discussion I can document some best practices (at least for the case of 3D shape optimization with FFD_CONTROL_POINTS). Any comments, suggestions, corrections, and/or insight would be super helpful.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733:4818,config,config,4818,https://su2code.github.io,https://github.com/su2code/SU2/issues/733,1,['config'],['config']
Modifiability," performed. Presently, there is no compressible open-source CFD code capable of supersonic simulations, as far as I know, able to obtain ''unstable'' steady-states. The solutions outlined below not only would give the users capabilities needed to perform stability analysis of globally unstable flows with help of SU2 code but would also provide means of accelerating convergence of any unsteady solution. **Describe the solution you'd like**; Implementation of selective frequency damping (SFD) for unsteady simulation as introduced in [1] and boostconv algorithm as proposed by [2]. _SFD_: A method, enabling the computation of steady solutions of the Navier-Stokes equations in globally unstable configurations. Steady-state is achieved by damping the unstable temporal frequencies with addition of a dissipative relaxation term proportional to the high-frequency content of the velocity fluctuations. [1]. _boostconv_: An iterative algorithm, inspired by Krylov-subspace methods, which is able to compute unstable steady states and/or accelerate the convergence to stable configurations. This algorithm is based on the minimization of the residual norm at each iteration step with a projection basis updated at each iteration rather than at periodic restarts like in the classical GMRES method. The algorithm is able to stabilize any dynamical system without increasing the computational time of the original numerical procedure used to solve the governing equations. _Moreover, it can be easily inserted into a pre-existing relaxation (integration) procedure with a call to a single black-box subroutine_. [2]. **Additional context**; I would be happy to collaborate on implementation of said algorithms in SU2 but I do not have much experience with C++ (I mostly use Fortran) and I am not too familiar with SU2 source code so it would be great to work with someone more experienced in those areas. Figure from [2] outlining performance of SFD and boostconv on a cylinder:; <img width=""882"" alt=",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2022:1699,config,configurations,1699,https://su2code.github.io,https://github.com/su2code/SU2/issues/2022,1,['config'],['configurations']
Modifiability," points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 is merged. As of now, a bug reported in #713 prevents me from adding any meaningful tutorial - but that should be fixed in #724 according to @talbring ; - I already started adding the mesh solver, numerics and transfer functions in separate files as discussed in #583 and already started in #725. For clarity and ease of merging, only new classes are split so far, but I will probably start splitting other structures soon in PRs to come. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:1852,adapt,adapt,1852,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,2,"['adapt', 'variab']","['adapt', 'variable']"
Modifiability," res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptool",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:4848,variab,variable,4848,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability," result: yes; configure:2872: checking for a thread-safe mkdir -p; configure:2911: result: /bin/mkdir -p; configure:2918: checking for gawk; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI support disabled by default <<<; configure:3269: checking for g++; configure:3285: found /usr/bin/g++; configure:3296: result: g++; configure:3323: checking for C++ compiler version; configure:3332: g++ --version >&5; g++ (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unreco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:3012,config,configure,3012,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability," results. However, at low Mach numbers, the code is presenting poor convergence due to the wide disparity between the particle and acoustic wave speeds in the dual time stepping. During the last weeks, I studied some preconditioning formulations that can be added to SU2. Currently, we are only scaling the dissipation part improving accuracy not convergence at Low Mach number flows. . I found this interesting paper that presents the preconditioning formulation in conservative variables (minor changes in the code) for implicit solvers based on the classical Weiss and Smith formulation. A robust low speed preconditioning formulation for viscous flow … <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&ved=0ahUKEwjS8_vzre3QAhXIjJAKHatADsQQFggfMAA&url=http%3A%2F%2Fwww.sciencedirect.com%2Fscience%2Farticle%2Fpii%2FS0045793011000223&usg=AFQjCNG9Pc2UPSeqsdqHfVa0symixryb9w&sig2=2eqLmLoBa4t3XCMT_DWSrQ&bvm=bv.141320020,d.Y2I>; Preconditioning applied to variable and constant density flows - AIAA <https://www.google.com.br/url?sa=t&rct=j&q=&esrc=s&source=web&cd=1&cad=rja&uact=8&sqi=2&ved=0ahUKEwjF65S3s-3QAhXFkZAKHfwbDlEQFggfMAA&url=http%3A%2F%2Farc.aiaa.org%2Fdoi%2Fpdf%2F10.2514%2F3.12946&usg=AFQjCNGpofvU3ntuYJaA6o_nAz8MOKubCg&sig2=YIumr88W2hKQK0AMzI3fAw&bvm=bv.141320020,d.Y2I>. I really would like some help to implement the above preconditioning implicit dual time-step formulation (Eq. 18 of the Weiss and Smith paper or section 4.3.3 of Colin et al.). Supposing I already have the preconditioning matrix, I just have to modify CEulerSolver::SetResidual_DualTime?. Thanks in advance. Eduardo . > On 5 Dec 2016, at 17:29, Thomas D. Economon <notifications@github.com> wrote:; > ; > Great! Thanks, Eduardo. Let's work now together in this branch to make sure that everything is integrated nicely. Just let me know what help you may need.; > ; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/333#issuecomment-266321042:1027,variab,variable,1027,https://su2code.github.io,https://github.com/su2code/SU2/pull/333#issuecomment-266321042,1,['variab'],['variable']
Modifiability," rough wall, the WALL_TYPE option must specified for all the markers and WALL_ROUGHNESS set to 0.0 for smooth walls and the desired value for rough walls. ; [Sample input file for airfoil with smooth and rough walls](https://github.com/su2code/SU2/files/4198580/turb_naca62215_v7cfg.txt). The airfoil used here is the NACA 622215 and I can send the mesh and experimental data in case anyone is interested. . ## Additional notes. Modification of wall distance computation required some changes to the ADT routines and subsequently to some FEM stuff as well. To modify the wall distance with roughness, I needed to know which marker was the closest wall and add the corresponding roughness. However, I wasn't sure how to properly do this in MPI. My solution was to pass the marker roughness information to the ADT class itself. This meant I had to add a dummy argument whenever the corresponding ADT classes were called elsewhere. Just to clarify, the modification is only in CADTElem class constructor and ComputeWallDistance routines. I hope this will not be a problem. I made this as a draft PR in case there are some issues with this. Also, if there are any issues with how the config file is changed, I can update that as well. I haven't modified the config_template for this yet. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877:4728,config,config,4728,https://su2code.github.io,https://github.com/su2code/SU2/pull/877,1,['config'],['config']
Modifiability," running! Well done!; But I have some suggestions about the ""building"" and design philosophy of SU2. This (programming-related) ""feature request"" is all about making SU2 even more extendable. ## Is my feature request related to a problem?; Maybe! It's not pleasant when I'm forced to link libraries statically. I think it hinders the potential of the C++ language and makes compilation time unnecessarily longer. For example, in [SU2_CFD.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/SU2_CFD.cpp#L117) the program decides what to do with an if statement and **all drivers need to be linked at compile-time**. What if I want to write my own driver? I need to include my headers in ""SU2_CFD.hpp"" and rebuild the whole thing again!!!. ## The solution I would like; Why not use a [Factory With Self-Registering Classes](https://www.bfilipek.com/2018/02/factory-selfregister.html) instead. Ideally, the parent class (CDriver for example) would have; a static ::new() (or ::create() ) method which will create the appropriate type (child classes) based on **user input** (aka, from config file).; Of course, this way, the table of registered classes (drivers in my example) could be extended if the user requests to; dynamically load his own library (assuming that the library contains a child class that registers itself to the table). There is another vital related issue: Incorporating SU2 code in user-developed code is the main concern of this feature request but we also need a mechanism for getting references to all created objects. In the shared separate library, the user expects to; use already created CVariables, ... etc; how can he get those? An object database that keeps references to most involved objects is needed. **This roughly describes what I think is needed to be done. I'm willing to help and even lead the development of this feature if it gets enough approval**. ### Alternatives?; Can't think of anything else! This feature will enable devs to effortlessly extend t",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058:1171,config,config,1171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058,1,['config'],['config']
Modifiability," so I consider that to be ok; 2. For prescribed massflow (and I differentiate here between the code before this PR and ...well this PR): The gradient for Avg_Temp and drag are okay-ish but far from being validated (just like for massflow and dp for prescribed dp); ![image](https://user-images.githubusercontent.com/31306376/152564385-4ce45439-ec60-459a-a16b-7ec61b0c1cec.png); For massflow OF I get wrongly reported gradients by the adjoints, both before and after this PR; ![image](https://user-images.githubusercontent.com/31306376/152565095-f84084c6-3568-495b-bc14-19278b2a5eb6.png); and pressure drop OF; ![image](https://user-images.githubusercontent.com/31306376/152565915-1f5a9bd8-203a-4711-81f7-7021e307c756.png). Two other aspects.; 1. the PRESSURE_DROP OF is computed in streamwise periodic flow using the Recovered_Pressure (as the ""standard"" Pressure is the same on both faces). There I need to make sure that the recovered values are computed as well after the iteration (but with the Flow Preprocessing after the MultiGridCycle that seems to be the case); 2. As pressure drop is iterated to get the correct flow solution, is it necessary to treat is specially in the adjoint like a solution variable? <- turns out, that was the case and also is the majority of work done in this PR. Le fin. ## Related Work; #773 initial implementation; #1527 first step in getting a consistent restart for massflow prescribed flow by storing the pressure drop in massflow-meta file. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536:3525,variab,variable,3525,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536,1,['variab'],['variable']
Modifiability, sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? =,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10822,config,configure,10822,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability," sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Forums/su2-installation/227676-su-installation-failed-due-insufficient-permissions.html). These passages, at least for me, result in a running SU2 with mesh adaptation, although I have made no tests on running actual simulations. That being said, the involvement of pyenv is due to the fact that the provided python wheel for pyamg is for python 3.7 only. If I understand correctly, the library itself is proprietary, sadly, so I assume @bmunguia has access either to the source files or to someone who can package them. Depending on the actual compatibility of the code, it would be nice if the wheel was updated to the latest python",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:1633,config,configure,1633,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['config'],['configure']
Modifiability," that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:982,refactor,refactor,982,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['refactor'],['refactor']
Modifiability," the parameter MATH_PROBLEM from DIRECT to CONTINUOUS_ADJOINT in the configuration file and:. $ ln -s restart_flow.dat solution_flow.dat; $ SU2_CFD inv_adj_NACA0012.cfg. I obtained a correct adjoint solution (density adjoint field visualized with ParaView from 'adjoint.vtu' looks reasonably similar to the image shown in the tutorial). Finally, I wanted to also try the algorithmic differentiation, so I changed the parameter MATH_PROBLEM to DISCRETE_ADJOINT in the configuration file and:. $ SU2_CFD_AD inv_dadj_NACA0012.cfg. I failed to obtain a correct adjoint solution (I expected to see something really similar to what I got with the CONTINUOUS_ADJOINT method): the density adjoint field seems to have a completely different scale (instead of having values in the approximate range -200 ÷ +200, it has values in the range -0.264 ÷ +0.217 and the values not too close to zero are concentrated in an area near the farfield boundary, far from the airfoil). What's wrong?; Does anything else need to be changed in the configuration file?. **Bug report checklist**. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/). From the above mentioned commit, I built with:. $ ./preconfigure.py --no-medi --no-opdi --no-mpp --no-coolprop; $ export CXXFLAGS='-march=native -mtune=native -O3 -msse -mfpmath=sse'; $ meson setup -Dwith-mpi=disabled -Denable-cgns=true -Denable-tecio=false -Denable-autodiff=true -Denable-directdiff=true --prefix=${HOME}/local build; $ ninja -C build install. N.B.: CPU is an Intel Core i5-6600 CPU @ 3.30GHz. - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/). I haven't found any other GitHub issue about the Quick Start tutorial. - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). I used the tip of the develop branch, as of yesterday. **Desktop:**; - OS: Debian GNU/Linux 12.0 'bookworm' (",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1993:1511,config,configuration,1511,https://su2code.github.io,https://github.com/su2code/SU2/issues/1993,1,['config'],['configuration']
Modifiability," to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem. However, this concept could reduce code duplication and improve readability and maintainability, so I'm curious to see the progress on this...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:1604,config,config,1604,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,2,"['config', 'maintainab']","['config', 'maintainability']"
Modifiability," we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar, int nNode); {; primary = new double [nVar*nNode];; ...; }; virtual ~DenseVariableBase() {delete [] primary;}; inline DenseVariableBase* operator[] (int iNode); {; i = iNode;; return this;; }; inline double* GetPrimary() {return &primary[i*n];}; inline virtual double* GetSecondary() {return nullptr;}; };; ```; To keep the same semantics of accessing variables `node[iNode]->Get()` (and thus avoid changing the entire code) the class now keeps track of what node we are accessing (member variable `i`) and all its methods have this in consideration see for example `GetPrimary` above.; We tell the class what node we want via `operator []` which returns a pointer to the object itself so we can call other methods on top of `[]`.; This does not exactly recover the same interface and it can create some bugs because one would be able to call methods without knowing what index they are on (it is also not thread safe but that is not a problem now).; So the final piece to recover the interface and shield direct calls to methods without specifying the index is a lightweight wrapper.; ```; class DenseWrapper; {; private:; DenseVariableBase* nodes;; public:; DenseWrapper(int nVar, int nNodes);; ~DenseWrapper();; inline DenseVariableBase* operator[] (int iNode); {; return (*nodes)[iNode];; }; };; ```; With this there",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:5722,variab,variables,5722,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['variab'],"['variable', 'variables']"
Modifiability," what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not merged); #1223 by @danielmayer @bigfooted which builds up on #777 and extends it to its needs (but does not support the turb solvers e.g.); #1226 by @oleburghardt - In this PR is a discussion on creating the structure which this (and following) PR('s) try to achieve; #1332 by @mheimgartner - implementing multi component flow (or analytic mixing properties of said multicomp flow). That PR is built upon #1223 but will merge this PR (once it is done) and throw out all additional changes in order to be merged into develop without relying on feature_flamelet. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated a",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:2072,extend,extends,2072,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,1,['extend'],['extends']
Modifiability," where integration to the wall makes sense and a fuselage marker where wall functions (or even an inviscid BC) is the right thing to do. So let’s indeed do something like what Tom suggests (in the spirit of MARKER_MONITORING) so that one can control which markers get wall functions applied. If a list of markers is not specified in the config file, the default behavior should be that all no-slip walls get wall function BCs. If a list of markers is specified, then those and only those markers listed get wall function Bfs (with the others getting integration to the wall treatment). Now, what you point out in the second half of your message is the ultimate in flexibility: not only specifying wall functions in a subset of the no-slip wall markers, but also allowing for different kinds of wall functions to be used in those markers. I imagine that this would be a seldom used capability…but someone out there might have the need. I guess it does not seem to me that the coding of the most flexible logic is that much more complicated, so we may as well do that. If you guys think it is too complicated, the advertised options in the config file can allow some simpler behavior. My two cents,. Juan. On Sep 5, 2017, at 9:58 PM, Edwin van der Weide <notifications@github.com<mailto:notifications@github.com>> wrote:. Juan,. I think that having the flexibility to apply wall functions on only a subset of the viscous wall boundaries would be useful. E.g., if you are interested in a wing, you can apply integration to the wall there, but apply wall functions on the fuselage. My preference would be to have a dedicated BC type for that, i.e. Tom's second suggestion. Apart from this, we can have the different wall model types as a single input parameter, i.e. you apply the same wall model type for all viscous boundaries. Or would you like to have the flexibility to specify this as well per individual marker?. Edwin. —; You are receiving this because you commented.; Reply to this email directl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327377108:1200,flexible,flexible,1200,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327377108,2,['flexible'],['flexible']
Modifiability," with SST-2003m, so I created a smaller 2D case to test out why this may be occurring. Below is a screenshot of one of the meshes, where the pinkish line indicates a value for an interface that I plot heat fluxes from. I have generated several meshes with increasing level of refinement from A to D. ![image](https://github.com/su2code/SU2/assets/116454159/4d04287e-b111-45b5-96dd-6b9cc5f18217). It appears that there may be either a misunderstanding on my part with the implementation of SST-V2003m w/ MUSCL, or that a bug exists in SU2 for it. I got very unusual and different results when using MUSCL vs. not. To further look into this, I also completed additional simulations using `KIND_TURB_MODEL=SA`, which got me much more reasonable-looking results. Please see the plots below:. ![image](https://github.com/su2code/SU2/assets/116454159/e5d80bbd-9bc2-4f3c-a6e2-bb5dfc43336b); ![image](https://github.com/su2code/SU2/assets/116454159/3804bdf1-7f99-4584-9683-cfbfd7dfa916). Lastly, here is the config file:; [config.txt](https://github.com/su2code/SU2/files/12155765/M6_LowRe.txt). Note that the ""MUSCL=ON"" in the plots indicate the solution for both `MUSCL_FLOW=YES` and `MUSCL_TURB=YES`. That is the only difference between config files. Also, I tried using `MARKER_RIEMANN`, `MARKER_OUTLET`, and `MARKER_SUPERSONIC_OUTLET` on the outlets with no success on fixing this discrepancy, so I believe it is not related to the boundary conditions. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (C",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2088:1145,config,config,1145,https://su2code.github.io,https://github.com/su2code/SU2/issues/2088,2,['config'],['config']
Modifiability," yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PA",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11622,config,configure,11622,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,""" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so; /usr/lib64/openmpi/bin/mpicxx -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.cxx.o SU2_CFD/src/libSU2core_AD.a.p/definition_structure.cpp.o SU2_CFD/src/libSU2core_AD.a.p/python_wrappe",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1716,config,configuration,1716,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['config'],['configuration']
Modifiability,"""Did you mean...?"" (make config errors more helpful)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1269:25,config,config,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/1269,1,['config'],['config']
Modifiability,"""Mass flux ratio on the outlet"", HistoryFieldType::COEFFICIENT);. AddHistoryOutput(""FLOW_ANGLE_OUT"", ""FLOW_ANGLE_OUT"", ScreenOutputFormat::SCIENTIFIC, ""TURBO_COEFF"", ""FLOW ANGLE OUT at outlet"", HistoryFieldType::COEFFICIENT);. /// END_GROUP. }. void CFlowOutput::SetTurbomachineryCoefficients(const CConfig* config, COutputLegacy* output_legacy){; if (!config->GetBoolTurbomachinery()) return;; if (config->GetnZone() < 2) {; SetHistoryOutputValue(""ENTROPY_GENERATION"", output_legacy->GetTurboEntropyGen(0,config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""TT_EFFICIENCY"", output_legacy->GetTurboTTEff( 0,config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""PRESSURE_LOSS"", output_legacy->GetTurboPressLoss(0,config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""MASS_FLOW_RATIO"", output_legacy->GetTurboMassFlow(0,config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""FLOW_ANGLE_OUT"", output_legacy->GetFlowAngleOut(0,config->GetnSpanMaxAllZones()));; }; else {; 	 SetHistoryOutputValue(""ENTROPY_GENERATION"", output_legacy->GetTurboEntropyGen(config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""TT_EFFICIENCY"", output_legacy->GetTurboTTEff( config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""PRESSURE_LOSS"", output_legacy->GetTurboPressLoss(config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""MASS_FLOW_RATIO"", output_legacy->GetTurboMassFlow(config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; 	 SetHistoryOutputValue(""FLOW_ANGLE_OUT"", output_legacy->GetFlowAngleOut(config->GetnMarker_Turbomachinery()+; 	 SU2_TYPE::Int(config->GetnMarker_Turbomachinery()/2),config->GetnSpanMaxAllZones()));; }. }",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1720:3152,config,config,3152,https://su2code.github.io,https://github.com/su2code/SU2/issues/1720,23,['config'],['config']
Modifiability,"""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; config",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10037,config,configure,10037,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,"# Describe the bug. **Issue**; The memory usage of SU2_CFD continuously grows over time and is most noticeable when writing out files at high frequency. This caught my attention when cluster jobs with higher output frequency were consistently exceeding memory limits after a certain amount of time, leading to the job being killed. The same configuration with a lower output frequency can run significantly more iterations without exceeding limits. I may be missing something, but it seems like there is a potential memory leak dependent on the output frequency, which I've documented in this report. **Expected**; Memory usage remains steady over time and does not significantly change with output frequency. **Local tests**; I was able to reproduce the issue locally on a workstation using the [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012), whereby all 2200 time iterations are performed by setting `WINDOW_CAUCHY_CRIT = NO`. As you can see in the plot below, the memory usage increases over time and is more pronounced with a lower `OUTPUT_WRT_FREQ`:. ![unsteady_naca0012_mem_usage_by_freq_20210413](https://user-images.githubusercontent.com/82448366/114564646-c9275380-9c70-11eb-8352-c5f1e4492c35.png). Further editing the config file to run as a steady state simulation with `INNER_ITER= 20000` iterations produces similar results:. ![steady_naca0012_memory_usage_by_output_freq_v711_20210413](https://user-images.githubusercontent.com/82448366/114564622-c4fb3600-9c70-11eb-873d-f9e0696c6484.png). **Serial case**; This issue was not reproducible in serial and exhibits expected behavior:. ![serial_steady_state_naca0012_memory_usage_20210413](https://user-images.githubusercontent.com/82448366/114564602-bf9deb80-9c70-11eb-89dd-88d1e240ce79.png). # To Reproduce. Using [Unsteady NACA0012 Tutorial case](https://github.com/su2code/Tutorials/tree/master/compressible_flow/Unsteady_NACA0012) mesh, config, and restart files.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1261:341,config,configuration,341,https://su2code.github.io,https://github.com/su2code/SU2/issues/1261,1,['config'],['configuration']
Modifiability,"# Failing Regression tests (91 of'em); The Euler Wall BC (comp. & incomp. affected) is used in many Testcases. All failing tests are listed. ; Box checkked -> values adapted to newer ones. ; tiny delta = all delta_vals below 0.1; ; medium delta = one delta val larger than 0.1 but all below 1.0; ; big delta = one delta_val larger than 1.0. I use this post for me to keep track of what I already fixed on what is left to do. ## serial_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medium delta; - [x] oneram6, big delta, restart; - [x] fixedcl_naca0012, tiny delta; - [x] polar_naca0012, tiny delta; - [x] bluntbody, medium delta; - [x] inc_euler_naca0012, tiny delta; - [x] inc_nozzle, medium delta; - [x] inc_lam_bend, tiny delta; - [x] contadj_naca0012, big delta, cont.Adj. There is some issue with all the cont.adj. cases in the boundary formulation; - [x] contadj_oneram6, big delta, cont.Adj., great diff to develop; - [x] contadj_wedge, big delta, cont.Adj.; - [x] contadj_fixedcl_naca0012, big delta (no computed vals), cont.Adj.; - [x] harmonic_balance, tiny delta; - [x] sine_gust, tiny delta; - [x] aeroelastic, tiny delta; - [x] edge_VW, tiny delta, NICFD; - [x] edge_PPR, tiny delta, NICFD; - [x] uniform_flow, tiny delta; - [x] channel_2D, tiny delta; - [x] channel_3D, tiny delta; - [x] pipe, tiny delta; - [x] rotating_cylinders, medium delta; - [x] supersonic_vortex_shedding, big delta; - [x] fsi2d, tiny delta; - [x] stat_fsi; - [x] stat_fsi_restart; - [x] dyn_fsi; - [x] airfoil_fsi_rbf, big delta (no computed vals); - [x] contadj_euler_py; - [x] shape_opt_euler_py, big delta; - [x] opt_multiobj_py, medium delta; - [x] opt_multiobjcombo_py, medium delta; - [x] opt_multiobj1surf_py, medium delta; - [x] opt_2surf1obj_py, tiny delta; - [x] pywrapper_naca0012, tiny delta; - [x] pywrapper_aeroelastic, tiny delta; - [x] pywrapper_fsi2d, tiny delta. ## parallel_regression; - [x] channel, tiny delta; - [x] naca0012, tiny delta; - [x] wedge, medi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-524639197:166,adapt,adapted,166,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-524639197,1,['adapt'],['adapted']
Modifiability,"# Print adap options; sys.stdout.write(su2amg.print_adap_options(config, adap_options)); ; #--- How many iterative loops? Using what prescribed mesh sizes? ; ; mesh_sizes = su2amg.get_mesh_sizes(config); sub_iter = su2amg.get_sub_iterations(config); ; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4234,adapt,adaptation,4234,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Modifiability,"## Disclaimer; This is my first ever contribution to any GitHub project. Please give feedback on what I can Improve if I haven't done something that is expected of me. ## Proposed Changes; Added Velocity output, since I am interested in that and adding it only in the config just gets ignored and no output happens; . ## Related Work. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2077:268,config,config,268,https://su2code.github.io,https://github.com/su2code/SU2/pull/2077,1,['config'],['config']
Modifiability,"## Motivation; Fundamental bottlenecks exist for industrial adoption of high-fidelity physics codes with fully coupled discrete adjoint sensitivity analysis. These bottlenecks include a lack of flexibility, modularity, and robustness of the computational tools, as well as the potential startup development costs needed to implement and verify the MDAO features. The purpose of this work is to facilitate the coupling of SU2 with external structural codes (e.g. NASTRAN, TACS, Airbus structural suite Lagrange) for gradient-based aerodynamic shape and structural sizing optimization using dedicated frameworks (e.g. OpenMDAO). . Startup development costs include the creation of modular tools that are _designed to be driven_ by another framework like OpenMDAO, rather than _to drive execution_ themselves. However, leveraging those MDAO frameworks assumes that software codes and modules to be coupled exist, have appropriate data structures, execution and query APIs, and are wrapped in Python for flexibility and ease of use. The proposed changes were motivated with the goal of making SU2 more modular and flexible, particularly to facilitate its integration into large-scale MDAO frameworks. For more details on the motivation, methodology, and verification & validation results, please refer to our [paper from AIAA Aviation 2022](https://doi.org/10.2514/6.2022-3358). . ## Proposed Changes; @aa-g and I propose the following code updates:. 1. Implementation of residual-based discrete adjoint solver as `CDiscAdjResidualSolver`; a. New config option: `KIND_DISC_ADJ` . 2. Enhancements and standardization of SU2 Python API; a. Add pysu2/pysu2ad methods; b. Standardize Python API and function names ; c. Overloaded getter/setter methods to make data handling more flexible. ## Related Work; These efforts are related to Issue #1262, Pull Request #1300, and Discussion [#1325](https://github.com/su2code/SU2/discussions/1325). . ## PR Checklist; - [X] I am submitting my contribution to the deve",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750:409,coupling,coupling,409,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750,1,['coupling'],['coupling']
Modifiability,"## Proposed Changes & related work; See issue #1928:. The filename of the Paraview multiblock is set to the case name / config filename. For all other volume outputs, the filename is specified with 'VOLUME_FILENAME' in the config file. See e.g. the Paraview XML filename. This is counter-intuitive and the user is not able to change the multiblock filename in the config file. . This PR aligns the filename handling of the Paraview multiblock output with the other volume outputs, besides calling the `config->GetUnsteady_FileName` function instead of the `config->GetFilename` function which is used for the other volume outputs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1930:120,config,config,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1930,5,['config'],['config']
Modifiability,"## Proposed Changes. - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work. - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1717:452,inherit,inheritance,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/1717,1,['inherit'],['inheritance']
Modifiability,"## Proposed Changes. - Added the missing config->SetInflow_Mach(iMarker_Inlet, Inlet_Mach_Total[iMarker_Inlet]) to CEulerSolver::GetPower_Properties; - Added a new option,BC_EVAL_FREQ for setting the evaluation frequency for the Actuator Disk and Engine Markers, in order to control the stability of the marker. ## Related Work; Fix for issue #2274 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2278:41,config,config,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/2278,1,['config'],['config']
Modifiability,"## Proposed Changes. - Addition of species diffusion terms to surface energy balance in NEMO, important for highly dissociated flows; - Addition of vector for s species, ""enthalpys"", to variable to store values accessed in solver.; - General cleanup/commenting of the NEMO heat flux computation in CFVMFlowSolverBase.inl. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1383:186,variab,variable,186,https://su2code.github.io,https://github.com/su2code/SU2/pull/1383,1,['variab'],['variable']
Modifiability,"## Proposed Changes. . 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better.; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader.; 4. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to #1263 and #1265 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1268:156,config,config,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/1268,1,['config'],['config']
Modifiability,"## Proposed Changes. 1. fixed factor of 100 in the transition turbulence models; 2. changed initialization of inlet profile from 0.0 to values taken from config file. I guess this was done to make this routine more general (for other boundaries) in the future. However, I think generating a default file that works out of the box is better. ; 3. added a descriptive comment line to the inlet profile file (one for each marker) with the names of the columns. This line is intended to make editing easier for the user. This comment line is not mandatory and is ignored by the profile reader. ; 3. do not write residuals of temperature to output file when energy equation is off. ## Related Work; Related to issue #1265 and #1263. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1267:154,config,config,154,https://su2code.github.io,https://github.com/su2code/SU2/pull/1267,1,['config'],['config']
Modifiability,"## Proposed Changes. Current situation: The translation velocities and rotation rates of a moving frame (activated with GRID_MOVEMENT= ROTATING_FRAME) can only be set in the config file using parameters TRANSLATION_RATE and ROTATION_RATE. During a trim analysis of a free-flying aircraft, these parameters are modified until an equilibrium is achieved. Problem: A change of these parameters requires a new initialization of the solver, which can be time-consuming depending on the mesh size. Proposed solution: A python interface is implemented that allows to change the parameters on-the-fly. The grid velocities are updated before a new iteration. . ## Related Work; This is an extension to pull request #1621. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024:174,config,config,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024,1,['config'],['config']
Modifiability,"## Proposed Changes. Even though the website has a style guide and the repo has a `.clang-format` file it has not strictly applied to pull requests. There is no style-checking workflow. As different users use different environment sometimes pull request contains unrelated style changes which makes the PR unreadable. This PR proposes to use [pre-commit-hooks ](https://pre-commit.com/) which are easy to use and enforce the style and adds a workflow check for formatting. There is no formatted/style proposed for python files. This PR additionally proposes a[ black](https://pypi.org/project/black/) based python formatting that ensures the python files are consistent maximum line length is set to 120 to increase readability. Moreover, pre-commit has additional hooks for the style of files. ; The following ones are proposed: ; `trailing-whitespace - trims trailing whitespace.` -> Especially useful for config files.; `mixed-line-ending - replaces or checks mixed line ending.`; `end-of-file-fixer - ensures that a file is either empty or ends with one newline.`. the pre-commit hooks can be easily installed via pip `pip install pre-commit`. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948:908,config,config,908,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948,1,['config'],['config']
Modifiability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1663:21,Extend,Extend,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1663,1,['Extend'],['Extend']
Modifiability,"## Proposed Changes. Extend the Github Actions workflows to run the regression tests on Linux ARM64 too. . ## Related Work. https://github.com/su2code/SU2/pull/1619. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1662:21,Extend,Extend,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1662,1,['Extend'],['Extend']
Modifiability,"## Proposed Changes. I added a separate test script file for the tutorial cases. This way they can run in parallel on github actions. Not all of the tutorial cases are included at the moment though. I am also working on a way to analyze all the test cases we have at the moment to eventually remove redundant ones. The analysis will be based on a coverage of the config options. . On a related note, we moved all the config files/meshes for the tutorials into their own repository (Tutorials). This way people don't have to clone the whole website just to get the files ... ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/899:363,config,config,363,https://su2code.github.io,https://github.com/su2code/SU2/pull/899,2,['config'],['config']
Modifiability,"## Proposed Changes. I have refactored some of the viscous residual calculation. This should not change any of the underlying numerics. + The stress tensor due to molecular viscosity and turbulence is now separated out from the residual calculation. This removes the implicit assumption that eddy-viscosity models are used. Now other models, such as explicit algebraic stress models, can be added.; + The ""heat flux vector"" was also separated out from the residual calculation.; + The Jacobian calculation for `CAvgGrad_Flow` has been rewritten so as to be more readable.; + The three main viscous numerics classes (`CAvgGrad_Flow`, `CGeneralAvgGrad_Flow`, and `CAvgGradInc_Flow`) are now all children of a base class, `CAvgGrad_Base`.; + Instead of two sets of classes for the viscous residual, normal and ""corrected"", I made a boolean switch in the constructor. This eliminates the duplication between normal and ""corrected"" viscous numerics. There's definitely some more work that could be done to generalize the base class and optimize the speed, but I'm content with the code for now. ## Related Work. This piggybacks off of PR #612, though the two PRs are separate and distinct. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626:28,refactor,refactored,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/626,1,['refactor'],['refactored']
Modifiability,"## Proposed Changes. In line with what we presented in the hackathon, this PR comes to be the first stage of a major reformatting that we are planning for the Driver structure. The goal is to converge to a structure that is more constant in time and that easily accommodates multi-physics via config file definition, instead on a *case by case* new CDriver class. The goal of this PR is not to be merged immediately, but rather to initiate discussion on the topic. I have created a project in; https://github.com/su2code/SU2/projects/8; where the stages of this process will be done. . ## Related Work. I run a presentation together with @talbring on input/output reformatting during the hackathon that took place at the annual SU2 Developers Meeting. The relevant slides for this PR are shared:. [ReformattingDriver.pdf](https://github.com/su2code/SU2/files/2405682/ReformattingDriver.pdf). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/585:293,config,config,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/585,1,['config'],['config']
Modifiability,"## Proposed Changes. It would be good to extend the CFL_ADAPT option to include species transport for compressible flows. I can add a test case if it is needed. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2298:41,extend,extend,41,https://su2code.github.io,https://github.com/su2code/SU2/pull/2298,1,['extend'],['extend']
Modifiability,"## Proposed Changes. The draft pull request has changes to fix couple of issues in the incompressible solver for rotating frame and convergence rate of unsteady problems (both with and without grid movement).; ; For the rotating frame, there was a confusion between conservative and primitive variables being used for the numerics. For the convergence rate of unsteady problems, the Jacobian contributions in the dual time residual calculations had been altered to include the preconditioner. However, this slows down the convergence from only an order of 100 iterations needed for converged solution per time step to the order of 1000 iterations. Therefore this has been reverted to regain the previous faster convergence rate and further work is necessary to understand the reason for this change. ## Related Work; PR #652 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1067:293,variab,variables,293,https://su2code.github.io,https://github.com/su2code/SU2/pull/1067,1,['variab'],['variables']
Modifiability,"## Proposed Changes. The goal of this PR is to establish AD support for the OpenMP features of SU2. AD support in SU2 is provided by [CoDiPack](https://www.scicomp.uni-kl.de/software/codi), which is coupled with [MeDiPack](https://www.scicomp.uni-kl.de/software/medi) for the differentiation of MPI. OpenMP support is added by coupling it in addition with [OpDiLib](https://www.scicomp.uni-kl.de/software/opdi) so that all in all, hybrid parallel AD is achieved. This involves at least the following steps.; 1. Incorporate OpDiLib into the AD workflow.; 2. Establish thread-safety and parallelization of the discrete adjoint code.; 3. Testing of hybrid parallel adjoints.; 4. Performance optimizations. ## Related Work. OpenMP features introduced in #789, #824, #830, #834, #843, #861, #895, #975, #1178, possibly others. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1214:327,coupling,coupling,327,https://su2code.github.io,https://github.com/su2code/SU2/pull/1214,1,['coupling'],['coupling']
Modifiability,"## Proposed Changes. The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. . Sobolev smoothing of gradients computes a reinterpretation of the gradient in a different Hilbert space, [see this short overview.](http://www.cse.unt.edu/~renka/papers/sobolev.pdf); This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2. Inserting the sensitivities from the discrete adjoint solver for (dF / dx) leads to the gradient in a Sobolev space.; The method can be extended to incorporate the parameterization of the mesh cells x=M(p) with design values p, [see here.](https://arxiv.org/abs/2109.15279) Using the projected gradient w.r.t. the design values the systems takes the form; (dM/dp)^T (e1 Id - e2 Laplace) (dM/dp) = - dF/dp. Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One-Shot optimization context.; Here the optimization is done with inexact function values and gradients, i.e., the flow and adjoint solvers are only partially converged between design updates. For this setting simple gradient descent with too large update steps will not work, since a few flow iterations are not enough to recover a solution from the restart file from the last optimization step.; See the graphic below for drag minimization of a NACA 0012 airfoil with constant lift, where the Sobolev solver for the gradient leads to smoother deformations and better optimization.; ![pullrequest1](https://user-images.githubusercontent.com/16785869/143250126-e5bdd360-e265-40ca-9d24-5811ecbb759c.jpg). Application is done as a post-processing step in the SU2_DOT_AD executable.; The new solver constructs the necessary operator and solves it using the features of the finite element implementation in SU2. For this, it uses the same elements as the FEA solver but extends the definiti",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1446:608,extend,extended,608,https://su2code.github.io,https://github.com/su2code/SU2/pull/1446,2,"['extend', 'parameteriz']","['extended', 'parameterization']"
Modifiability,"## Proposed Changes. This PR enforces the continuity of velocity explicitly at the fluid structure interface for each time step. The velocity was previously recalculated for the fluid nodes based on displacement history of the nodes. This is still needed for fluid only problems with deforming meshes. However, for FSI problems, the velocity at the interface can be transferred from the structural solution and propagated to the fluid nodes similarly to the displacement which ensures exact agreement at the interface at each time-step. This change has been validated using a typical FSI benchmark of square cylinder with a flexible cantilever beam, which gives good agreement in peak tip displacement and Strouhal number.; . ## Related Work. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1174:624,flexible,flexible,624,https://su2code.github.io,https://github.com/su2code/SU2/pull/1174,1,['flexible'],['flexible']
Modifiability,"## Proposed Changes. This PR introduces a completely rewritten output structure. If you have ever looked into the old output_structure.cpp file, you probably noticed that it was quite messy. To add new output to screen or history people just copied what was there and modified it to suit there own needs. This resulted in a lot of if/switch statements and was hard to read ... one reason for this was that we have not really used an object oriented structure for the output. Despite rearranging everything into separate classes, here is a non-exhaustive list of new features and changes:. - Fully customizable screen, history and volume output; - New multizone screen output; - New flexible way so set convergence criteria (any residual and/or coefficient can be used as a monitor); - Consistent naming of iteration variables (TIME_ITER, OUTER_ITER, INNER_ITER); - Consistent file naming options (RESTART_FILENAME, SOLUTION_FILENAME); - On-the-fly writing of all visualization files; - New Singlezone and Multizone drivers are now used by default. Note that this is a very big change. And i apologize for any inconvenience and troubles that this might cause. I can only maintain features covered by the regression tests. So please test it with your cases and let me know if anything is missing (especially in the output). . I will create documentation for all the new features soon. If you want to test it already, please let me know, I need some feedback. . User Documentation on the changes:; https://su2code.github.io/docs/Solver-Setup; https://su2code.github.io/docs/Custom-Output; https://su2code.github.io/docs/Guide-to-v7/. ## Related Work; #715 is already included in this PR and should be merged before. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contri",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724:682,flexible,flexible,682,https://su2code.github.io,https://github.com/su2code/SU2/pull/724,2,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,"## Proposed Changes. This PR just contains two small changes:. 1. I added the capability to use multi-line statements in the config file. That should make the file a little bit more readable, especially for list options. To continue a statement in the next line, use `\` at the end of the current line. Commented lines and everything after the `\` are skipped. That means the following way to specify an option works now:; ```; SCREEN_OUTPUT=(INNER_ITER, \ % A comment that is ignored; WALL_TIME, \; RMS_DENSITY, \; LIFT, \; DRAG, \; %CAUCHY_SENS_PRESS, \ Option value is ignored; CAUCHY_DRAG, \; %RMS_ADJ_DENSITY, \ Option value is ignored; RMS_ADJ_ENERGY); ```; Furthermore, if an error occurs now during the processing of the config file, the line number is also printed in order to quickly identify the location.; ; 2. Paraview XML format is now the default format (*.vtu) if the option `OUTPUT_FILES` is not present. I wanted to do that already when I added the XML format in January, but I simply forgot... The old format can be used with `PARAVIEW_LEGACY` and `SURFACE_PARAVIEW_LEGACY`. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/996:125,config,config,125,https://su2code.github.io,https://github.com/su2code/SU2/pull/996,2,['config'],['config']
Modifiability,"## Proposed Changes. This is a draft PR to discuss and document a much needed overhaul of the shape optimization features in SU2. There have been significant improvements to the main code base (for example, python wrapper integration, the new output structure, new mesh solver etc.) which haven't been leveraged by the shape optimization structure of SU2. . The main idea behind this overhaul is to move as much of the functionality of the current shape optimization framework to python. This creates a more user-friendly and robust interface for defining design variables and constraints. Its easy to make that claim, but let me elucidate it with an example:. > Suppose I am trying to optimize a wing for a given flight condition but I want more design freedom than altering the airfoil shapes along the wing using FFDs. I want to be able to control wing span, taper ratio, dihedral angle, twist, and any number of other geometrical representations of the wing. Currently, I would have to create a new Design Variable (DV) for most of those variables. If anyone has tried this, they know it is a tedious task with having to make alterations in various parts of the code.; >; > But all of these design variables can be represented by aggregations of FFD point movements. The span of the wing can be controlled by constraining the movement of FFD points in the y-direction to be proportional to their y coordinate. The current twist variable does a similar aggregation, at each twist location it rotates the corresponding 4 FFD points by the given angle. ; >; >These design variables could be represented by simple python functions that take in a set of FFD points and aggregate their movement in the desired way. All this can be done without any incision into the C++ code, given a python interface that can provide the C++ code the final FFD point locations and letting it do the deformation. . Moving functionality to python could also remove the need for some of the other SU2 modules that haven't ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/922:563,variab,variables,563,https://su2code.github.io,https://github.com/su2code/SU2/pull/922,2,['variab'],['variables']
Modifiability,"## Proposed Changes. This is intended to be a small PR, but a big design shift. As discussed in issue #698, unit tests can serve an important role in software development. They complement, rather than replace, validation and verification tests. They are most useful when you want to isolate a specific behavior. Unit-testing increases development time, but improves the quality of the code and reduces code-maintenance time \[[source](https://collaboration.csc.ncsu.edu/laurie/Papers/TDDpaperv8.pdf)\]. ### Vision. In my mind, the most efficient way to proceed is to add unit tests as new behaviors are added and bugs are fixed. With each new PR, we should ask ""Should this have a unit test to verify this behavior?"" Unit tests will provide a clear way to show that each PR does what the developer promises it will do. This will require refactoring some of the code. Some parts of the code, like the CConfig class, are not unit-testing friendly. Unit testing is hard when you have God-classes and ""do-it-all"" functions. The hope is that refactoring these classes will lead to more modular and easier-to-maintain code. ### Decision to use Catch2. Catch2 was chosen for the unit testing library for the following reasons:. + It can be included as a header-only library.; + It has a very clean, easy-to-use syntax; + It has widespread use, including the FEniCS library. ### Design choices. The following design choices are in place. If you disagree with them, then please start a discussion here:. + All tests are placed in a root-level directory named `UnitTests`. Inside this directory is a structure just like the existing folder structure (e.g. `SU2_CFD/numerics`), except that there are not separate `src` and `include` folders.; + Tests are grouped by class, and put in files such as `CNumerics_tests.cpp`.; + A single test executable is compiled and run, as opposed to a separate test executable for each group of tests. With the single test executable, you can always filter down to groups of tes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850:837,refactor,refactoring,837,https://su2code.github.io,https://github.com/su2code/SU2/pull/850,1,['refactor'],['refactoring']
Modifiability,"## Proposed Changes. This is the modified version of SU2 code that supports CUDA usage for the FGMRES solver and the use of NVBLAS. The main focus is the offloading of the Matrix Vector Product in the FGMRES solver to the GPU using CUDA Kernels. This implementation shows promise with marginally better run times (all benchmarks were carried out with the GPU Error Checking switched off and in debug mode to check if the correct functions were being called). The use of NVBLAS is secondary and while functionality has been added to make it usable, it is not activated as it doesn't cause an appreciative increase in performance. ## Compilation and Usage. Compile using the following MESON Flag; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:772,Config,Config,772,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,2,['Config'],['Config']
Modifiability,"## Proposed Changes. This pull request adds the thermal conductivity, heat capacity and diffusivity as output for the incompressible solver in order to help the process of debugging inside SU2. During this process, we found some bugs regarding the diffusivity and thermal conductivity when the FLUID_MIXTURE model is used. Additionally, unused variables for computing the diffusivity have been removed. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1956:344,variab,variables,344,https://su2code.github.io,https://github.com/su2code/SU2/pull/1956,1,['variab'],['variables']
Modifiability,"## Proposed Changes. To satisfy the code standard in SU2. Refactorization of method names in Output family class methods to CamelCase. . Will follow up with other class families. Depends on #1985, can be merged after. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1987:58,Refactor,Refactorization,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/1987,1,['Refactor'],['Refactorization']
Modifiability,"## Proposed Changes. With this pull request, we aim to initialize the fluid models based on the Ideal gas laws for incompressible flows in a standard way using the THERMODYNAMIC_PRESSURE($P_{op}$) and the INC_TEMPERATURE_INIT ($T_{init}$), the initial density is computed based on the ideal gas law :. $\rho_{init}= P_{op} / R T_{init}$. When the FLUID_MODEL is CONSTANT_DENSITY, the constant density must be given in the config file using the option DENSITY_CONSTANT, similar as it is done when viscosity, thermal conductivity and diffusivity models are chosen as constant. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2137:422,config,config,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/2137,1,['config'],['config']
Modifiability,"## Proposed Changes. build-su2-cross should extend from build-su2 Docker image to use the same GCC version. . Failed build: https://github.com/su2code/SU2/runs/7125551739?check_suite_focus=true. The PR is draft because it depends on the build of https://github.com/su2code/Docker-Builds/pull/7. ## Related Work. https://github.com/su2code/SU2/pull/1619 - Updates Ubuntu to 20.04 and GCC from 7.x to 9.x. . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1693:44,extend,extend,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/1693,1,['extend'],['extend']
Modifiability,"## Proposed Changes; *As mentioned in the last few dev meetings, there was some error with GradVal for the streamwise solver with Massflow. This was because the tape was not cleared during SetRecoding. In the current version, the register of extra solutions is moved to Register Variables and gradients look consistent.*. ## Related Work; *SWP-Isothermal with mass flow also shows good gradient validation after implementing this fix. In theory, this should not break any other part of the code.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ x ] I am submitting my contribution to the develop branch.; - [ x ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ x ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.; ![CAD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/e0bfa7aa-0347-48a7-abf6-8e0526a706b6); CAD Sensitivites after making changes, gradients are symmetric for the upper and lower variables.; ![CAD_GRAD_BEFORE](https://github.com/su2code/SU2/assets/22835014/49f9d6fa-040c-4ee2-9fe8-da7e6c5d5b72); CAD Sensitivities before making changes, gradients are not-symmetric for the upper and lower variables.; ![Case_Image_RTemp](https://github.com/su2code/SU2/assets/22835014/a1335570-f0a4-412f-aceb-fc2a7dcd754a); Test Case!; ![FFD_GRAD_AFTER](https://github.com/su2code/SU2/assets/22835014/4e3eb1ff-51ed-4adc-afc7-00ec16d17506); FFD Sensitives also co-r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2272:279,Variab,Variables,279,https://su2code.github.io,https://github.com/su2code/SU2/pull/2272,1,['Variab'],['Variables']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. - add frequency for each filename in OUTPUT_FILES: ; ` OUTPUT_WRT_FREQ= 10, 100, 50`. - for dual timestepping, write only the restart files twice (for timestep n and n-1) and not the visualisation files.; - history output accepts fields; - marker_inlet does not need normalized vectors (removed the error message). ```diff; - DONE; The suggestion was to just extend the OUTPUT_WRT_FREQ instead of introducing a new keyword VOLUME_OUTPUT_FREQUENCIES. . ```. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1495 ; #1539 ; #1493 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1552:451,extend,extend,451,https://su2code.github.io,https://github.com/su2code/SU2/pull/1552,1,['extend'],['extend']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*. Using the python interface to modify the config file, it may happen that the temporary config file is accessed at once by multiple SU2 runs, leading to io conflicts. Thus, the name of the temporary file should not be hard-coded. This bugfix simply adds a '_tmp' to the original config file name. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:133,config,config,133,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,3,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; - fixed a small bug in the wall model; - added config options (replace as many hard coded constants as possible); - aerodynamic heating (wall temperature imposed in compressible flow, still needs a high mach testcase); - added a test case for SA model; - cleaned up a bit. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1360:139,config,config,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/1360,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; * Bug fix for surface-based objectives so that they are not counted multiple times when multiple surfaces are being designed; * Segfault fix for ParaView binary in serial.; * Fixes so that ParaView binary works properly with SU2_SOL (writing ASCII instead) and the python scripts for gradients and shape design; * Fixes line endings of SU2_PY/SU2/run/mergy.py; * Fixes TecIO typecasting issue found in #339; * Removes y^+ output from laminar Navier-Stokes (now RANS only); * Adjustment to output variables for incompressible flows; * Removes some warnings; * Xcode project file update. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Includes fix from #339, which will be closed.; Resolves #62 ; Resolves #54 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/598:590,variab,variables,590,https://su2code.github.io,https://github.com/su2code/SU2/pull/598,1,['variab'],['variables']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adapting and fixing mixing density model when species transport equations are being solved.; The species dependent properties will be added in 3 PRs:; 1/3 : mixture density model (this PR); 2/3 : mixture viscosity + heat capacity; 3/3 : mixture mass diffusivity + thermal conductivity. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Mark Heimgartner implemented the MIXTURE_FLUID model during his master thesis at Bosch. In this pull request, we aim to adapt his implementation to the latest version of develop branch, fixing some implementations that we think were causing numerical issues in his original implementation. EDIT: Here, the mixture density will be implemented, based on the ideal gas law (computing mixture molecular weights). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:94,Adapt,Adapting,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,2,"['Adapt', 'adapt']","['Adapting', 'adapt']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds ParaView binary output (legacy format) in both serial and parallel with MPI IO. Activate by setting OUTPUT_FORMAT= PARAVIEW_BINARY. Binary VTK files are now written when running SU2_CFD in parallel, so SU2_SOL is not required to get these files. ~~ParaView binary requires writing data in big endian. A header from the public domain that helps with the portability of endian conversion routines has been added and documented in externals/endian/.~~. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/562:452,portab,portability,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/562,1,['portab'],['portability']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Adds an interface to SU2_DOT_AD for volume -> surface sensitivity projection. New option to write out sensitivities at each surface vertex to a generic ASCII file for use with an external parameterization. Includes some minor code clean up and fixes some compiler warnings. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/625:282,parameteriz,parameterization,282,https://su2code.github.io,https://github.com/su2code/SU2/pull/625,1,['parameteriz'],['parameterization']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Bug fixes and consistent naming of flow output variables so that both Tecplot and ParaView correctly render vector quantities. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/546:141,variab,variables,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/546,1,['variab'],['variables']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Fixes a bug that I introduced in #598. When the energy eqn. is not active, the temperature is not written to the restart file, but this was not taken into account for the restart loader. This corrects the restart loader to read the correct number of variables when energy is inactive. I have also taken the opportunity to improve the regression cases for the incompressible solver. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Thanks to @TobiKattmann and @talbring for finding this so quickly!. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/601:344,variab,variables,344,https://su2code.github.io,https://github.com/su2code/SU2/pull/601,1,['variab'],['variables']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; I believe it would be helpful if the user can choose between relative or absolute values for cauchy convergence. ; Example: For the clean aircraft, the rolling moment coefficient MOMENT_X is close to zero and thus will never reach a relative cauchy convergence ->> dividing tiny numbers is not a good idea. Using absolute cauchy convergence is more robust in this case. At the same time, I understand that a more complex input / more parameters might confuse users. An automatic switch, as propsed in this pull request, is a good compromise. The code now switches automatically to absolut cauchy convergence if the coefficient is < 0.1 to avoid the problem described above. The config file is unchanged. . See short discussion here: https://www.cfd-online.com/Forums/su2/240148-cauchy-convergence-criteria-cmx-cmy-cmz.html. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1577:772,config,config,772,https://su2code.github.io,https://github.com/su2code/SU2/pull/1577,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; In this pull request, we extend the previous pull request of the mixing model adding the options of viscosity, thermal conductivity and other properties based on the species mass fractions. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. This corresponds to the 2/3 part of the complete mixing model which started with the feature_mixturedensity in the previous pull request. We expect to add the final properties and the mixture specific heat capacity in the next pull request. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ X] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1687:119,extend,extend,119,https://su2code.github.io,https://github.com/su2code/SU2/pull/1687,1,['extend'],['extend']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Removing CFL adaption for the Quick Start. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Fixes #887. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/958:107,adapt,adaption,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/958,1,['adapt'],['adaption']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; Separates all classes related to the fluid properties and moves them to a new folder. Also cleans up and refactors some of the classes. For example, the viscosity and conductivity classes are now pure abstract classes (interfaces). I have moved them to a folder named thermophysical/, which makes sense given the current contents (equations of state and transport properties), but once we add chemistry and more advanced models, I am not sure this will make sense. @CatarinaGarbacz, since you are going to be working this area, is there a name you would prefer?. p.s. in a future pass, there is room for improvement in the current CFluidModel class. I think it is best practice not to use the type of implementation inheritance found there. Instead, the EoS classes could be given a dedicated interface class and moved inside the CFluidModel class (just like the viscosity and conductivity classes). Then, the CFluidModel class can simply be a composition of those classes (with no data members) and serve back their data to the client. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1010:199,refactor,refactors,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/1010,2,"['inherit', 'refactor']","['inheritance', 'refactors']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR adds the necessary base classes (solver, numerics, variable) for having an arbitrary number of scalar transport equations added to flow problems in a segregated manner (alongside a turbulence model, if necessary). Most of the numerics is shared with the scalar methods for the turb. solvers to eliminate duplication, and it should be easy now to add child classes for any new scalar transport models. In this PR, only a passive scalar has been implemented, but we are also building on this framework to add a flamelet model for combustion as a child class. A passive scalar test case will be added. It still needs more work, but it is important to have the skeleton merged now to lessen the burden of fixing conflicts with the ongoing restructuring in driver, variable, output, etc. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/777:153,variab,variable,153,https://su2code.github.io,https://github.com/su2code/SU2/pull/777,2,['variab'],['variable']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR changes the convergence criteria for mesh deformation with SU2_DEF. The existing tolerance is related to the smallest cell in the grid, but this results in a criteria that depends on the grid scale and can be hard to tune. Instead, we switch to a standard relative residual reduction criteria for the linear solver during deformation, which brings it in line with other solvers. The change will break existing config files with 'DEFORM_TOL_FACTOR', so a clear error message has been added informing users of the change. Changes to the su2code.github.io repo for the tutorial configs need to be merged simultaneously. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/623:512,config,config,512,https://su2code.github.io,https://github.com/su2code/SU2/pull/623,2,['config'],"['config', 'configs']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains a new routine to compute 3 mesh quality metrics (similar to what you may find in commercial codes): orthogonality angle, cell aspect ratio, and cell volume ratio. It replaces an old routine that was not being used. Note that this is for the **dual control volumes of the finite volume solver** (not the primal elements), so the values are vertex-based. The min & max of the 3 metrics are reported to the console during preprocessing, and if you would like the fields to be written to the viz. files, you can use . ```; WRT_MESH_QUALITY= YES; ```. For now, it is just for sanity checks. In the future, we can use this as an optimization objective/constraint, for automatically improving grids (r-adaptation), or as part of advanced limiters/numerical methods. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/778:806,adapt,adaptation,806,https://su2code.github.io,https://github.com/su2code/SU2/pull/778,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; * More strict SU2_DEF error checking; * Improved SURFACE_FILE mode for SU2_DEF for external parameterizations (plus new regression); * New SCALE_GRID, TRANSLATE_GRID, and ROTATE_GRID options for SU2_DEF for quick volume mesh transformations (separated from the SCALE, TRANSLATION, ROTATION, design variables); * Bug fixes for the incompressible solver; * More consistent naming in the incompressible solver (ArtComp -> Inc, ROE -> FDS); * Removes warnings not already fixed by PR #528 . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #134. Resolves #151. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/535:219,parameteriz,parameterizations,219,https://su2code.github.io,https://github.com/su2code/SU2/pull/535,2,"['parameteriz', 'variab']","['parameterizations', 'variables']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR contains the following:; - A new fluid model for incompressible ideal gas with variable Cp via polynomial fit as Cp(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 where the user specifies b coefficients.; - Polynomial viscosity model (incompressible only) with Mu(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - Polynomial laminar thermal conductivity model (incompressible only) with Kt(T) : b0 + b1.T + b2.T^2 + b3.T^3 + b4.T^4 (user specifies b's).; - New option for TURBULENT_CONDUCTIVITY_MODEL, which is CONSTANT_PRANDTL_TURB by default, but gives flexibility for more options in the future. This was not exposed before, which can be dangerous, depending on the choice of laminar conductivity model. Now, any of the laminar models can still include the effect of turbulence on heat transfer with a constant turbulent Prandtl number, or it can be deactivated.; - A few fixes for FFD parameterization, including ParaView output and handling of symmetry planes. The polynomial models have only been added to the incompressible solver to start. However, one could activate them in the compressible solver(s) too, since they are in the shared fluid/transport model classes. A cylinder test case has been added for the polynomial fluid models. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/624:181,variab,variable,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/624,1,['variab'],['variable']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR greatly improves the robustness and convergence behavior of the flow solvers by implementing a more sophisticated controller for nonlinear iterations along with several other important modifications. The changes are the following:; - New under-relaxation strategy. Variables such as density and energy are only allowed to change by +/- 20% with each nonlinear iteration by applying an under-relaxation parameter to the updates at each node, which helps with difficult transients, especially at calculation startup. Also applied to turbulence model updates (though threshold is larger).; - CFL adaption via an exponential progression with under-relaxation approach, i.e., changes to CFL are coupled to the under-relaxation parameter (small under-relaxation parameter = decrease, and large = increase). CFL is now locally defined for each CV for this process.; - Modified realizability checks to avoid negative density/pressure/temperature at the nodes and also during 2nd-order reconstruction at cell faces.; - CV face states for 2nd-order MUSCL are now optionally reconstructed with a separate gradient method (unweighted least squares recommended), which is very important for robustness. Gradients for viscous terms and sources are still computed via GG or WLS for accuracy reasons.; - SA model was being clipped unnecessarily. This clipping has been removed. Here is my recommendation on how to run all of your 2nd-order cases going forward:. ### Euler / Laminar N-S; Turn off the limiters, unless you truly need them for preserving solution monotonicity (e.g., for shocks/discontinuities). Use ; ```; NUM_METHOD_GRAD_RECON= LEAST_SQUARES; ```; for robustness. Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:367,Variab,Variables,367,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,2,"['Variab', 'adapt']","['Variables', 'adaption']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This PR is a clean up of the configure options and bindings. I have removed unused bindings: HDF5, ZLIB, SZIP, JSON, and LAPACK. If anyone needs these, just let me know and we can put the necessary bindings back into configure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. We can also think about changing the autotools here as discussed in #584. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586:123,config,configure,123,https://su2code.github.io,https://github.com/su2code/SU2/pull/586,2,['config'],['configure']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is a joint effort with @vdweide. . We have added an extensible library of classes for the purposes of solution verification. We hope that folks will use it and continue growing the library to increase the formal verification activity for the code. Our design goals for the classes were:. * lightweight & small memory footprint.; * reusable by different solvers (so far: all DG and FV fluid solvers).; * require almost no changes to the solver classes when switching between different solutions by using polymorphism (other than maybe where they get instantiated).; * applicable for any of the following: imposing initial conditions, analytic solutions, or manufactured solutions. There is also now a user-defined solution class that folks can use to prescribe initial conditions as a function of space for any type of calculation. It should be easy to add new solutions to the library by creating new child classes. We are placing a few cases in the regressions, but we will also add full cases with analysis to the V&V repo. It will also be discussed in a presentation at the developers meeting. You will find a few other small bug fixes in the PR as well. As an example, here are some (particularly nice) sample observed order of accuracy results for the compressible FV solver with a laminar N-S MMS (to be fair, not all look this clean):. ![accuracy_rms_rho](https://user-images.githubusercontent.com/4896083/56620511-fc80fb80-65dd-11e9-942f-b7add7edeae8.png); ![slope_rms_rho](https://user-images.githubusercontent.com/4896083/56620512-fd199200-65dd-11e9-97db-537f6bd00114.png). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Cases to be added as part of the V&V repo discussed in #581 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/672:602,polymorphi,polymorphism,602,https://su2code.github.io,https://github.com/su2code/SU2/pull/672,1,['polymorphi'],['polymorphism']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is joint work with @MicK7. The CGNS mesh reader (ADF format, serial) has been rewritten to improve performance, and the underlying CGNS library has been updated to v3.4.0, along with some other modifications for mixed element grids. This new version is capable of running meshes > 100 million cells. I was able to run an X-Fine mesh for the high-lift CRM, which contains 210 million grid nodes and 400 million cells. . If folks have resources to try, please use the attached config file and meshes here: . https://hiliftpw-ftp.larc.nasa.gov/HiLiftPW3/HL-CRM_Grids/Committee_Grids/B3-HLCRM_UnstrHexPrismPyrTet_PW/FullGap/. [turb_hl_crm.txt](https://github.com/su2code/SU2/files/3388290/turb_hl_crm.txt). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. Resolves #727 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728:574,config,config,574,https://su2code.github.io,https://github.com/su2code/SU2/pull/728,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; This is one for v7 and needs some testing. This PR contains a complete refactoring of the point-to-point MPI infrastructure and an entirely new implementation of the periodic BC for the FV solvers. For the MPI refactoring:; - All calls are abstracted to parent classes (geometry, solver, matrix), meaning we will remove all Set_MPI_* routines.; - Point-to-point comms are all non-blocking calls that have been separated into InitiateComms() & CompleteComms(), so that, in theory, they can be overlapped with computation where possible. It would also be possible now to group the comms into larger messages easily. These optimizations are a next step (not for this PR).; - Persistent communication schedules and memory are used throughout the calculation.; - Results are the same, this is just a refactoring to improve performance, scalability, etc. while making the code much simpler and separating the periodic part. For the periodic BC:; - No longer need a preprocessing with SU2_MSH - use the original grid and just call SU2_CFD.; - Adjacent periodic faces are now possible, e.g., triply-periodic cube.; - Concept is now based on completing the residuals from partial control volumes on either side of a periodic face instead of creating extra halo cells.; - All periodic comms have been separated from the MPI point-to-point comms and are performed first for consistency. In a follow-up PR, I will remove many lines of code that are no longer needed (all Set_MPI_* routines, many outdated geometry routines, etc.). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ~~I could use some help with testing this one, in particular the rotational periodicity, which might still need some changes. Unfortunately, I do not have the original meshes for the periodic cases in the repo that are failing (other than P",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652:165,refactor,refactoring,165,https://su2code.github.io,https://github.com/su2code/SU2/pull/652,3,['refactor'],['refactoring']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; ; To make updating the regressions that rely on file diffs easier, this PR moves those reference files to the code repo. They are very small files, and as they are what needs to be updated for the tests to pass, it makes sense to have them with the config files and regression scripts in the main repo. This will help avoid the chicken-egg problem with the two repos that sometimes happens when updating them. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/589:341,config,config,341,https://su2code.github.io,https://github.com/su2code/SU2/pull/589,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Adds the functionality of reading fluid data from an unstructured triangulated lookup table and interpolating. No coupling with a solver (combustion) yet, at this point we will only add a verification test. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; We split #1223 into smaller chunks. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1637:206,coupling,coupling,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/1637,1,['coupling'],['coupling']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Based on the observations of Albring et al. in ""Challenges in Sensitivity Computations for (D)DES and URANS"" we implemented the windowing regularizers proposed in the work of Krakos et al. ""Sensitivity analysis of limit cycle oscillations"" and adapted it to the AD framework of SU2. ; We call the feature in the following ""windowing"". ; Windowing can be applied if one takes the (windowed) time average of a periodic function, i.e. in the case of an instationary flow field that exhibits periodic behaviour. ; - We changed the functionality of the output-field-prefix TAVG and D_TAVG from a simple time average to a time averaged weighted with a windowing function. For the direct run this is just a post-processing step and changes happen only in signal_processing_toolbox and Coutput. ; - We adapted the seeding for the adjoint run from a the classic time average to a windowed time average. ; - Tests have shown, that higher order windowing regularizers, tend to converge quickly with respect to the averaged time span. We have implemented a ""timeConvergenceMonitor"", that acts similarly to the convergence monitoring of the inner convergence. It applies a cauchy convergence criterion to the chosen windowed time average output coefficients. ; - The cauchy convergence criterion works for direct run, adjoint run and shape optimization scripts; - In case of shape optimization, the script remembers the final time iteration of the direct run. If the final time step is smaller than the ""original"" final time step stated in the configuration file, it adapts the starting time of the adjoint run; and the time to seed the objective function, such that the seeding does not exceed the original time to end the seeding. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that ap",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/836:336,adapt,adapted,336,https://su2code.github.io,https://github.com/su2code/SU2/pull/836,2,['adapt'],['adapted']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; Ffor wall functions a warning is issued when y+ < 5, but the value 5 should be the user defined limit obtained from the config option.; Furthermore, some spelling errors are correcred. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1753:212,config,config,212,https://su2code.github.io,https://github.com/su2code/SU2/pull/1753,1,['config'],['config']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; The wall function variable y+ was not computed on the halo nodes, leading to visual 'spots' in the solution. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; #1768 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1791:110,variab,variable,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/1791,1,['variab'],['variable']
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames. ; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. 2 additional independent transport equations are solved for the species NO and CO. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## Nijso Checklist; - [ ] Replace bloated initialization (burnt and unburnt region) with python wrapper; - [ ] Check Conjugate Heat Transfer; - [ ] Check adjoint optimization workflow; - [x] Check axisymmetric setup; - [x] Check diffusivity; - [x] Check primal restart; - [x] Check adjoint restart; - [x] Adjoint comparison with FD. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826:411,variab,variable,411,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; This PR introduces a tabulated chemistry approach. The focus for this PR is on laminar and premixed flames in the incompressible framework, but it is generalizable to non-premixed and partially premixed flames, turbulent flames and compressible flames.; In this approach, 2 transport equations are solved for progress variable and total enthalpy. The lookup table retrieves quantities (temperature, density, viscosity, diffusivity, source terms, etc) as a function of these independent control variables. Additional independent transport equations are optionally solved for the species like NO and CO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917:410,variab,variable,410,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; *Give a brief overview of your contribution here in a few sentences.*; When `(Objective < Value ) * Scale` ('<' can be '>') is added to OPT_OBJECTIVE in the configuration file, it is treated as a penalty function. When the constraint is satisfied, the penalty function value should be zero. However, it is currently set to the function value. The same `elif` condition as in `obj_dp` should be used. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*; Resolve #1968. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1969:178,config,configuration,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/1969,1,['config'],['configuration']
Modifiability,"## Proposed Changes; *This branch includes steady state turbomachinery features like multi-zone mixing plane, pressure ramps and rotations ramps essential for convergence. In additions, multi-zone performance computations with screen output is also implemented here.*; . ## Related Work; * The code now follows the same path as that of fluid driver, CTurbomachineryDriver will be removed after verification. There is some implementation of boost currently, it will be re-coded soon.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. *Please note, this is a draft pull request. I wish to get more comments on the section of code which are working like, mixing plane and performance computations. Config, tutorial and comments will be updated follow soon after.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1316:1407,Config,Config,1407,https://su2code.github.io,https://github.com/su2code/SU2/pull/1316,1,['Config'],['Config']
Modifiability,"## Proposed Changes; - Added non-polytropic Peng-Robinson (NPPR_GAS) equation of state (CP temperature dependant model): the specific heat ratio is not constant but a polynomial model (CP = n0 + n1T + n2T^2 +n3T^3 + n4T^4) can be specified for the specific heat via the input file option (CP_POLYCOEFFS). - The NPPR fluid model uses the polytropic Peng-Robinson fluid model as a base class. Therefore, the polytropic Peng-Robinson class now allows for inheritance. - New test case (TestCases/nicfd/edge_NPPR) to compare the results of the NPPR with a constant CP model (CP = n0) and the polytropic Peng-Robinson models. The results of both simulations for this test case are equivalent. ## Related Work; - The polytropic Peng-Robinson remains functionally unchanged. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1718:452,inherit,inheritance,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/1718,1,['inherit'],['inheritance']
Modifiability,"## Proposed Changes; - Fixes the adjoint residual computation for multizone cases (which was wrong on first inner iterations due to cross term extraction).; - Fixes (hopefully for good) discadj FEA solutions when INCREMENTAL_LOAD=YES (left over from #933); - Add relaxation to CDiscAdjSolver via option RELAXATION_FACTOR_ADJOINT, that replaces the old RELAXATION_FACTOR_ADJFLOW . I found this to be necessary for adjoint FSI problems, the adjoint of the interpolation matrix (and therefore the cross terms) are not smooth which makes convergence more difficult. In version 6 this was achievable via the old options RELAXATION_FACTOR_FLOW/TURB.; - Adds OpenMP directives to the CFL adaptation routine (a ""todo"" from #861), restricts the Min/Max/Avg CFL calculation to the fine grid (which will change the output but not the solution). ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/950:681,adapt,adaptation,681,https://su2code.github.io,https://github.com/su2code/SU2/pull/950,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; -This work is focused on fixing some of the axisymmetric loop structures within NEMO, which prevented residual evolution. This also changes a viscous planar wedge regression to an axisymmetric case. . -Code updates to make NEMO more-in-line with SU2 code style. i.e. variable declarations, SU2 MPI errors, etc. -Fixes bug in vibrational-electronic functionality for CSU2TCLib. -Updating ionization/nheavy loops so CSU2TCLib and CMutationTCLib are consistent. . ## Related Work; This addresses/builds on #1106 #1205 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1326:288,variab,variable,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/1326,1,['variab'],['variable']
Modifiability,"## Proposed Changes; 1 - Generalize the conservative interpolation approach for the following interpolation schemes:; NEAREST_NEIGHBOR, ISOPARAMETRIC, and RADIAL_BASIS_FUNCTION; The therefore redundant CONSISTCONSERVE option can be recovered with:; KIND_INTERPOLATION= ISOPARAMETRIC; CONSERVATIVE_INTERPOLATION= YES; If you guys think the conservative option also makes sense for the WEIGHTED_AVERAGE (sliding mesh) scheme I will put that in too (I am not familiar so left it alone). 2 - In CTransfer_FlowTraction, if not matching mesh and not conservative interpolation:; Compute the donor variables as stresses instead of forces;; Integrate the target variables on the structural side before transferring them. 3 - Removed a bit of code duplication in transfer_physics.cpp while I was there. I have yet to test this for the FSI adjoint but for the direct problem it looks ok. ## Related Work; #596 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/597:591,variab,variables,591,https://su2code.github.io,https://github.com/su2code/SU2/pull/597,2,['variab'],['variables']
Modifiability,"## Proposed Changes; 1 - Local indices for solution variables (which are overwritten during recording), even in singlezone problems (it was already used in multizone), to make things consistent for the two drivers. 2 - SU2_TYPE::GetDerivative was based on a global counter and a shared vector of input indices, which meant derivatives had to be extracted in the same order they were registered, and made the whole process not thread-safe. This is gone, if an input variable is overwritten during recording its (initial) index needs to be managed explicitly. 3 - Simplify and improve the restart logic because of unsteady FSI issues (not an Hybrid AD topic, but I had enough branches). ## Related Work; Continues #1214 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1284:52,variab,variables,52,https://su2code.github.io,https://github.com/su2code/SU2/pull/1284,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; @jtneedels and I have worked on implementing the Air-7 gas model to the NEMO native fluid model. This allows for simulations of inviscid weakly ionized flows with the addition of NO+ and e-. . I am open to adding a test case for this, similar to the thermal bath case, since they run extremely fast, though I am open to idea. Work is ongoing to extend this viscous simulations.; Updates from #1533 are added here as well. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1555:366,extend,extend,366,https://su2code.github.io,https://github.com/su2code/SU2/pull/1555,1,['extend'],['extend']
Modifiability,"## Proposed Changes; @patelha57 @aa-g @Nicola-Fonzi @bigfooted ; I'm proposing this as the way to interact with volume fields via the python wrapper.; We create a matrix view (does not copy data) into the coordinates, solution, primitives, etc. which then allows point-wise or row-wise access to the data (read or write). We can extend it to also expose derivative information.; For example:; ```python; coords = driver.Coordinates(); print(coords(iPoint, 1)) # read a value; coords.Set(iPoint, (x, y, z)) # write a row; coords.Set(iPoint, 0, coords.Get(iPoint, 0)) # set a value and different way of reading a value. solversIndices = driver.GetSolverIndices() # maps solver names to our solver integers, similar to what we do with markers; solution = driver.Solution(solverIndices[""C.FLOW""]) # same object type as coords. primitiveIndices = driver.GetPrimitiveIndices() # maps primitive names to their indices.; temperatureIndex = primitiveIndices[""TEMPERATURE""]; primitives = driver.Primitives(); print(primitives(iPoint, temperatureIndex)); ```. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1938:329,extend,extend,329,https://su2code.github.io,https://github.com/su2code/SU2/pull/1938,1,['extend'],['extend']
Modifiability,"## Proposed Changes; A draft PR for creating self-registering classes with a factory.; The class (CEulerSolver implemented) that wants to register to a factory (CSolverFactory implemented) should:; - Inherit from DBMember template class (new, only handles automatic-registration).; - Provide a ""GetName()"" member method which returns the registered name as a string.; - Provide a ""CreateMethod()"" member with specific signature. This function should handle the full-creation of the object (For CEulerSolver, it makes a pointer and runs Preprocessing on it). The factory class must provide a Register() method that accepts the to-be registered class's name and a pointer to its creation method with the specific signature mentioned above. These design constraints are all enforced in DBMember but no checks where made for now. Instead of meddling with member functions of CSolverFactory, I chose to create the test solver (EULER) directly in CDriver. ### Results so far; 1. Solver gets instantiated successfully, the solver preprocessing phase passes with no problems; 2. When the program gets to integration preprocessing, it fails with out_of_range exception. But that's to be expected as no solver metadata is tracked for the newly created solver yet :). Again, testing on the ""Inviscid bump in a channel"" case. ## Related Work; This PR extends the work on #1058 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1062:200,Inherit,Inherit,200,https://su2code.github.io,https://github.com/su2code/SU2/pull/1062,2,"['Inherit', 'extend']","['Inherit', 'extends']"
Modifiability,"## Proposed Changes; Add option `-Dextra-deps=a,b,c` to meson to provide a simpler work around for build problems with MPICH and LAPACK.; For example if you have MPICH but it is not detected (because its pkg config name is not ""mpi"" but ""mpich"" instead), you would do `-Dcustom-mpi=true -Dextra-deps=mpich`.; If you have linker errors because the blas library does not contain LAPACK functions, you would do `-Dextra-deps=lapack`.; The option takes a comma-separated list. I will update the documentation once this goes through. ## Related Work; #991; #1000. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1102:208,config,config,208,https://su2code.github.io,https://github.com/su2code/SU2/pull/1102,1,['config'],['config']
Modifiability,"## Proposed Changes; Add periodic BCs with dummy points. With internal markers, we could probe data from any inner surfaces, and here, we choose to construct periodic boundaries using dummy points which is preset on the input domain just like the internal markers. Four layers in both side is needed for MUSCL: the inner two layers send and the outer layers recieve.; With this way, we can use a larger CFL number similar to the cases using symmetry BCs and avoid passing too many variables with mpi.; ; ## Related Work; #1467 or other works about periodic BCs. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2038:270,layers,layers,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/2038,4,"['layers', 'variab']","['layers', 'variables']"
Modifiability,"## Proposed Changes; Add the Kenway-Martins separation sensor for buffet-onset detection (see [doi.org/10.2514/1.J055172](https://doi.org/10.2514/1.J055172) for details). Config options include:. 1. BUFFET_MONITORING= YES will compute; a. The sensor value (between 0 and 1) on NS marker vertices, stored in CNSSolver as Buffet_Sensor; b. The integral of the sensor values normalized by reference area (percent of reference area over which separation occurs), stored in CNSSolver as Buffet_Metric (per-surface) and Total_Buffet_Metric; 2. BUFFET_K and BUFFET_LAMBDA specify the sharpness and offset of the Heaviside function used to compute the nodal sensor value; 3. Objective function option BUFFET, which uses the integrated metric as a cost function; . ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/614:171,Config,Config,171,https://su2code.github.io,https://github.com/su2code/SU2/pull/614,1,['Config'],['Config']
Modifiability,"## Proposed Changes; Added CMake build support for SU2. With this, many popular IDEs will be able to use SU2 as a project with minimal setup. CMake also enables to add dependencies more easily since most libraries have CMake support. `vcpkg` is great for the libraries available there. SU2 CMake has the same build options as autotools but uses CMake to find system libraries and compilers (MKL, Mutationpp, MPI and Python currently). No longer need to specify paths to compilers/libraries if they are in standard locations. In addition, compile flags can be modified from CMake. There is no need to use `preconfigure.py` anymore since downloading/unpacking is handled by CMake and is system-agnostic. At the moment, all library targets are static but that could be easily changed to be configurable from CMake. The installation directory is `${CMAKE_PREFIX_PATH}/bin`. Similarly to autotools, some build options are disabled if built with Codi forward/reverse datatypes or without MPI. Note that SWIG fails to compile `pySU2ad` with `Nothing known about namespace 'medi'` in `Common/include/mpi_structure.hpp:57` without `-includeall` SWIG option but then it takes forever to generate the wrapper (more than 15 minutes on my machine, stopped early). I suggest removing `using namespace` declarations and either importing used symbols explicitly with `using` or prepending namespace name, `clang-tidy` warns against them and it makes the code clearer. SU2 CMake options are:; * Build modules:; * `SU2_BUILD_CFD`: `ON|OFF`; * `SU2_BUILD_DEF`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_DOT`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_GEO`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_MSH`: `ON|OFF`, disabled when building with Codi; * `SU2_BUILD_PY_WRAPPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pas",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:787,config,configurable,787,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['config'],['configurable']
Modifiability,"## Proposed Changes; Added local timestep and local CFL as volume output for both the flow and turbulence variables; . ## Related Work; In relation to #2056. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2060:106,variab,variables,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/2060,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Added profiling option through `gprof`. This allows you to profile your SU2 application to see where it spends most of its time and therefore figure out which of your new features could use some better efficiency. . How to enable profiling? Add the flag `-Denable-gprof` to your `meson.py` command and re-configure. . Now you can run SU2 or SU2 AD as normal. However, at the end, a file called `gmon.out` will be generated in your working directory. . In order to get the analysis from the profiling, run `gprof <path/to/SU2/executable> > analysis.txt`. Now, the file `analysis.txt` contains the profiling analysis which you can use to assess the efficiency of your code. Added instructions for enabling and using the gprof option on the su2code.github.io repository under PR #145 ; ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2243:326,config,configure,326,https://su2code.github.io,https://github.com/su2code/SU2/pull/2243,1,['config'],['configure']
Modifiability,"## Proposed Changes; Adding cstdint header to printing_toolbox.hpp. ## Reason; I was building SU2 from source this morning. Running ninja threw an compilation error with a comment to import cstdint in printing_toolbox.hpp since uint8_t is not defined in the scope:. ```; ...; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:240:10: error: ‘uint8_t’ was not declared in this scope; 240 | vector<uint8_t> typeBuf(myElem);; | ^~~~~~~; ../SU2_CFD/src/output/filewriter/CParaviewXMLFileWriter.cpp:30:1: note: ‘uint8_t’ is defined in header ‘<cstdint>’; did you forget to ‘#include <cstdint>’?; 29 | #include ""../../../../Common/include/toolboxes/printing_toolbox.hpp""; +++ |+#include <cstdint>; 30 | ; ...; ```; Adding the header solves the issue. . Here some additional information:; OS: Fedora 38; Configuration: MPI, pythonwrapper, autodiff; Compiler: g++ 13.1.1. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2099:807,Config,Configuration,807,https://su2code.github.io,https://github.com/su2code/SU2/pull/2099,1,['Config'],['Configuration']
Modifiability,"## Proposed Changes; Adding in history output residuals of species flamelet controlling variables for multizone simulations. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X ] I am submitting my contribution to the develop branch.; - [X ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2269:88,variab,variables,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/2269,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Adding the new solver NEMO to the develop branch. The NEMO solver concerns the simulation of hypersonic flows, accounting for thermal nonequilibrium and finite-rate chemistry, following Park's 2Temperature model. The system of equations to solve is the conservation of each chemical species mass, momentum, total energy and vibrational energy. Both inviscid and viscous simulations are available, respectively, solver NEMO_EULER and NEMO_NAVIER_STOKES. Most of the changes consisted in the addition of new files (listed below), and all the necessary changes in the high-level classes (drivers, integration, config).; ; new files concerning this solver:; output/CNEMOCompOutput.cpp; variables/CNEMOEulerVariable.cpp; variables/CNEMONSVariable.cpp; solvers/CNEMOEulerSolver.cpp; solvers/CNEMONSSolver.cpp; numerics/NEMO/convection/lax.cpp; numerics/NEMO/convection/roe.cpp; numerics/NEMO/convection/ausm.cpp; numerics/NEMO/convection/ausmplusup2.cpp; numerics/NEMO/convection/ausmpwplus.cpp; numerics/NEMO/convection/msw.cpp; numerics/NEMO/NEMO_diffusion.cpp; numerics/NEMO/NEMO_sources.cpp. Future/ongoing work is looking into making use of the CFluidModel class , introducing a new child class CNEMOGas to handle all mixture/thermodynamics/transport/chemistry related computations - follwing the generic SU2 structure. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent w",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1014:628,config,config,628,https://su2code.github.io,https://github.com/su2code/SU2/pull/1014,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"## Proposed Changes; Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors:; Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II.; EttoreSaetta, lorenzorusso07, rtogna. ## Related Work; Introduction of new options in the config. file.; Introduction of an additional input file that contains the propeller data.; Introduction of additional c++ functions.; Addition of code lines to existing functions preserving the original actuator disk model. ## PR Checklist; - [X ] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027:66,variab,variable,66,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"## Proposed Changes; Allow for conjugate heat transfer between solid domains and the modeling of contact resistance. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] Configuration option for contact resistance at interfaces.; - [x] Communicate contact resistance values between config and CInterface.; - [x] Test grid independence of contact resistance model.; - [x] Test case with both solid-solid and solid-fluid.; - [x] Add test case to regression tests.; - [x] Update documentation.; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2152:399,Config,Configuration,399,https://su2code.github.io,https://github.com/su2code/SU2/pull/2152,2,"['Config', 'config']","['Configuration', 'config']"
Modifiability,"## Proposed Changes; Along the lines of #753 and #959 . If this causes someone lots of conflicts when merging, or you have a lot of new code using the old CPoint (that will not compile anymore) it may be helpful to run this python script ([refactor_cpoint.txt](https://github.com/su2code/SU2/files/4608693/refactor_cpoint.txt)) before or after respectively, it was used for 80% of the refactoring done here. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/966:385,refactor,refactoring,385,https://su2code.github.io,https://github.com/su2code/SU2/pull/966,1,['refactor'],['refactoring']
Modifiability,"## Proposed Changes; Another snapshot from #824.; All major routines of CFEASolver (and by association CMeshSolver) now use OpenMP directives.; Parallelization is at the level of each individual routine, i.e. threads are ""started"" locally.; This required avoiding the use of small auxiliary array member variables, as that is not thread safe (multiple threads cannot write to the same location) In doing that I ended up doing some cleanup and so I thought it would be better to move the files, strip spaces, etc., it should make the review easier actually.; I will document to the major changes below. ## Related Work; #824 #789 ; Depends on #834 and #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/843:304,variab,variables,304,https://su2code.github.io,https://github.com/su2code/SU2/pull/843,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Changes have been made to accomodate very large meshes/data sets.; MPI calls were changed to accomodate values over the limit of INT_MAX, and some standard int variables were changed to unsigned long variables. ## Related Work; Addresses problems raised in issue #949 . ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/980:181,variab,variables,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/980,2,['variab'],['variables']
Modifiability,"## Proposed Changes; Collection of improvements to fix SU2 bugs:; - Inconsistency between NO_DEFORMATION (index 24) and NONE (index = 0). I have updated and sorted the numbering of the design variables and set NO_DEFORMATION to index 0 (for consistency with the rest of the code).; - SU2_GEO was not working properly for 2D cases and the wing slicing routine was extremely expensive for the AD.; - VISUALIZE_DEFORMATION was very expensive and not useful, I have divided VISUALIZE_DEFORMATION between surface VISUALIZE_SURFACE_DEF and volume VISUALIZE_VOLUME_DEF.; - The actuator disk was not working properly when a pressure ratio (total pressures) was prescribed (the restart was not working either).; - The FFD twist design variable was not working properly. ## Related Work; This commit resolves the issues (bugs) described above without adding any extra capabilities to the software. It should be approved as soon as possible because some of the changes directly impact most of the the user's community. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/563:192,variab,variables,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/563,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; Couple efficiency/functionality improvements to the topology optimization implementation as detailed in TestCases/fea_topology/config.cfg. Edit: This requires c++11 so it will have to go after the PR that enables it. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/752:148,config,config,148,https://su2code.github.io,https://github.com/su2code/SU2/pull/752,1,['config'],['config']
Modifiability,"## Proposed Changes; Description of `LINEAR_SOLVER_ILU_FILL_IN` wrote Linael instead of Linear .. and that was copied quite a few times; Done using `find ./ -type -f -exec sed -i -e 's/Linael/Linear/g' {} \;` in ./Testcases on Linux. As in none of the appearances the option is not using the default of zero, that option could be removed from all those testcases imo, but I put that up to discussion. As @pcarruscag mentioned in #1195 `[...]simplify the config by removing options that are not needed, this is to make it easier to maintain the testcases if there are changes to some options.`. Feel free to chip any other typos here. . ## Related Work; Seen in #1195 and annoyed me enough to open a PR, but of course not introduced there. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1201:454,config,config,454,https://su2code.github.io,https://github.com/su2code/SU2/pull/1201,1,['config'],['config']
Modifiability,"## Proposed Changes; Detect when meson can run configuration test or if cross compiling for cgns hdf5 backend; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1508:47,config,configuration,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1508,1,['config'],['configuration']
Modifiability,"## Proposed Changes; Enhance CoolProp model by:; 1. add checkTemperature function to avoid critical temperature.; 2. impose gas phase by shifting temperature slightly.; . ## Related Work; This work is an extension of PR #1947. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2021:21,Enhance,Enhance,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2021,1,['Enhance'],['Enhance']
Modifiability,"## Proposed Changes; Enhanced the script discrete_adjoint.py such that in unsteady simulations; - one can execute an ""only adjoint"" run. This requires the solution files of a direct run (option -a True, default is -a False).; - it supports restart solutions. Configure the restart iteration in the config-file as one would in a restartet direct simulation. The script then runs the direct iteration until final time has been reached. Then the adjoint run is performed from final time up to the restart iteration. ; . ## Related Work; None. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/900:21,Enhance,Enhanced,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/900,3,"['Config', 'Enhance', 'config']","['Configure', 'Enhanced', 'config-file']"
Modifiability,"## Proposed Changes; Extend the MPI+Threads framework to CEulerSolver, CNSSolver and the CTurb***Solver(s).; I can finally start showing what this effort is about in pictures, this is how the relatively small benchmark case from #716 scales on Imperial's cluster:; ![image](https://user-images.githubusercontent.com/38071223/73931463-410d2780-48d0-11ea-855e-8dc87be153f1.png); **C** is for cores, **R** for MPI ranks, and **T** for OpenMP threads per rank. It may not look like much close to the ideal scaling but on 192 cores there are only 2.7k cells per core, and at different level of ""hybridisation"" this is what you get:; ![image](https://user-images.githubusercontent.com/38071223/73931985-3bfca800-48d1-11ea-8676-acef927a1ab5.png). As mentioned in #789 this behaviour is due to the worse quality / quantity of coarse grids that can be generated as the domain is decomposed further and further. **EDIT**; This is **finished for now**, apart from the odd routine that I will document below (and all the boundary conditions) every method called in `SingleGrid_Iteration` and `MultiGrid_Iteration` (including prolongations, smoothings and whatnot) is hybrid parallel.; Threads are started in those functions which means that for a RANS case we enter parallel regions only twice per iteration, this should give minimal overhead, I will update the scalability results once they converge (statistically :) ). I will document the changes by ""themes"" below. ## Related Work; Another snapshot of #824. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/861:21,Extend,Extend,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/861,1,['Extend'],['Extend']
Modifiability,"## Proposed Changes; Extend the Turbulence CFL reduction option, such that it can be used for adaptive CFL too. Turbulence cfl reduction was previously implemented only for a constant cfl, here the treatment is extended also for adaptive cfl. . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [] I have added a test case that demonstrates my contribution, if necessary.; - [] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2295:21,Extend,Extend,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/2295,4,"['Extend', 'adapt', 'extend']","['Extend', 'adaptive', 'extended']"
Modifiability,"## Proposed Changes; Extends the custom outputs with point probes (nearest point, no interpolation is done). ## Related Work; #1907 cc @DonalMcC. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1909:21,Extend,Extends,21,https://su2code.github.io,https://github.com/su2code/SU2/pull/1909,1,['Extend'],['Extends']
Modifiability,"## Proposed Changes; Fix #1190; Prevent possible OpenMP bug for van Albada limiter.; Fix frozen limiter logic, freezing means ""do not compute"", and not ""do not apply"".; Fix limiter outputs for turbulence variables. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1193:204,variab,variables,204,https://su2code.github.io,https://github.com/su2code/SU2/pull/1193,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Fixes AD compilation of parallel Tecplot binary output.; . ## Related Work; AD build failure noted by Tom Economon on Mac w/ configure command:; ./preconfigure.py --enable-mpi --with-cc=mpicc --with-cxx=mpicxx --enable-autodiff --enable-direct-diff --enable-tecio. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/665:146,config,configure,146,https://su2code.github.io,https://github.com/su2code/SU2/pull/665,1,['config'],['configure']
Modifiability,"## Proposed Changes; Fixes bug that causes rotational grid velocity ramp to not be applied correctly if the ramp is specified in a multizone configuration file. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2320:141,config,configuration,141,https://su2code.github.io,https://github.com/su2code/SU2/pull/2320,1,['config'],['configuration']
Modifiability,"## Proposed Changes; Generalize the variables in the CLookUpTable class for use in general look-up cases (not only progress variable-enthalpy).; Add dimension to CLookUpTable class to allow for quasi-3D interpolation (linear interpolation between two trapezoidal maps stacked in the third dimension).; ; I added a unit test as a test case with the quasi-3D table to show the correct use of syntax for 3D look-up operations. ## Related Work; Can be used in feature_multilayer_perceptron in the CDataDrivenFluid fluid model for look-up operations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1825:36,variab,variables,36,https://su2code.github.io,https://github.com/su2code/SU2/pull/1825,2,['variab'],"['variable-enthalpy', 'variables']"
Modifiability,"## Proposed Changes; Hello to everyone,; I added a tutorial for the actuator disk with variable load in the Tutorials repository.; Because of this I changed the regression tests moving from parallel_regression.py to tutorials.py.; Hope this could be useful. ## Related Work; PR from SU2 repository: #1027; PR from su2code.github.io repository: #44; PR from Tutorials repository: #4. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1128:87,variab,variable,87,https://su2code.github.io,https://github.com/su2code/SU2/pull/1128,1,['variab'],['variable']
Modifiability,"## Proposed Changes; Hello to everyone,; I would like to propose a slight change in the Actuator Disk with Variable Load function. The change consists in re-writing the computation of the axial, radial and tangential force coefficients by developing the advance ratio term. In this way it is possible to eliminate the explicit dependence with the free-stream velocity.; Thanks to this change, it is possible to simulate the hover condition (free-stream velocity equal to zero) since we eliminated the free-stream velocity from the denominator.; ; In addition, we do not need the input of the advance ratio J, but the RPM of the propeller. This is a draft PR since a validation is needed and will be provided soon. Regards,; Ettore.; TAARG, University of Naples Federico II. ## Related Work; #1027 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1648:107,Variab,Variable,107,https://su2code.github.io,https://github.com/su2code/SU2/pull/1648,1,['Variab'],['Variable']
Modifiability,"## Proposed Changes; Hi all, . This draft PR contains all work on composition dependent fluid properties for multicomponent flow. . What I did so far: . •	Implemented new CFluidScalar class (which inherits from CFluidModel) and can be accessed via a new fluid model: MIXTURE_FLUID_MODEL. ; •	Verified the current implementation by comparing with Fluent. ; •	Added regression test case for two component incomp_rans flow with variable fluid properties. . Future work:. •	Fix variable specific heat capacity and convergence issues in case of axisymmetric flow. ; •	Add possibility to have more than a single transported scalar (i.e. mixture containing more than two components). ; •	Remove flamelet implementation from feature_multicomp in order to have this work self-contained. **Note:** Currently this is a PR into feature_flamelet to make the diff easier. In case there are comments, ideas, foreseeable stepping stones from experience please let me know. . ## Related Work; #1223 by @danielmayer @bigfooted which feature_multicomp currently branches from. ; #1330 by @TobiKattmann which cuts the scalar transport necessary for this work out to merge it separately into develop. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332:197,inherit,inherits,197,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332,3,"['inherit', 'variab']","['inherits', 'variable']"
Modifiability,"## Proposed Changes; Hi all,. In neither solver (incompressible and compressible) viscous fluxes are considered in the symmetry plane boundary condition. In both codes the BC_sym_plane links directly to Euler_Wall. . Compressible: A ""reflected state"" approach is done. Create a reflected halo node which enforces symmetry and compute the occurring flux just as in the interior. Problem: the primitive gradients are not adapted nor a viscous flux based on that is computed. Incompressible: Here a ""direct flux"" approach is chosen in Euler Wall. Insert the symmetry conditions directly in the FV derivation on the boundary part and thereby eliminate most terms. For the convective terms only a pressure contribution in the momentum equation remains. No Viscous terms are currently considered which is not correct for the momentum equation. . For both solvers I implemented a ""reflected state"" approach in C*Solver::BC_sym_plane as I didn't want to touch the Euler_wall implementations especially from the compressible solver. . I (informally) wrote a bit down as explanation in Latex how I did the derivation.; [Symmetry_BC.pdf](https://github.com/su2code/SU2/files/2891210/Symmetry_BC.pdf); Note that in the DG-FEM solver of @vdweide the same ""reflected state"" approach is implemented although it is not clear to me how the derivation was done there. See the bottom of the pdf for more info. I would be happy to get some insight here :). I also did a bit of testing with some cases and will showcase the differences between current develop and my implementation with pictures below. I attached two easy 2D cases (compr. & incompr. half cylinder) which you could quickly compare the current develop and this PR with.; [Sym_plane_testcases.gz](https://github.com/su2code/SU2/files/2891254/Sym_plane_testcases.gz); tar xzf Sym_plane_testcases.gz. 1. Compressible half cylinder, navier-stokes, no Turb-model, Pin has a solid wall, farfield around. You see pressure contour lines:; ![compr_half_cyl_p](https",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657:419,adapt,adapted,419,https://su2code.github.io,https://github.com/su2code/SU2/pull/657,1,['adapt'],['adapted']
Modifiability,"## Proposed Changes; Hi all,. The general idea for this PR can be cited from @pcarruscag in #1226:; ```; The ideia would be to create a CFVMSolverBase (in the style of the one for flow solvers) to cover:. Turbulence solvers;; Heat solver;; Radiation solver;; General passive/active scalar solvers;; Eventual transition solvers;. The starting point would be the current base turbulence solver.; ```; ; Right now the only things I did were (i.e. don't fear the large diff); - create CScalarSolver/Variable files/classes and scalar_convection/diffusion/sources files and fill them with the contents of the CTurb* or turb_* files.; - Make CScalarSolver/Variable the parent class of CTurbSolver/Variable; - Delete pretty much everything from CTurb* or turb_* files except for some constructors. So far it compiled and some local regression testing showed no problems, lets see what the CI pipeline has to say about this. Now with this additional class introduced the actual works begins:; - figure out what is a reasonable interface in CScalar* to unify transported species and turb-models (and the other solvers probably); - code this common interface and push all turb-specific things back into the respective files (that is why I didn't `git mv` ). In order to keep this somewhat limited I would focus on porting the Turbsolvers to the new structure (however that might look, but looking at #1223 is what I'll do first) and maybe a simple transported passive scalar or so. We want the turb solver to be integrated under that Scalar-class which is arguably what most/all people use, that's why I want to have in this work at the beginning. We also have quite a few RANS Testcases so it is directly visible if something in the actual computation is changed. In case there are comments, ideas foreseeable stepping stones from experience please let me know here. ## Related Work; #777 by @economon which is the initial push towards this separate scalar solver class for additionally transported scalars (not",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1330:495,Variab,Variable,495,https://su2code.github.io,https://github.com/su2code/SU2/pull/1330,3,['Variab'],['Variable']
Modifiability,"## Proposed Changes; Hi all,. this PR removes all trailing whitespaces from `.cpp` `.hpp` `.inl` `.py` `.build ` files using ; `find . -type f -name '*.cpp' -exec sed --in-place 's/[[:space:]]\+$//' {} \+`; in the code root. and all tabs are replaced by 2 spaces for `.cpp` `.hpp` `.inl` files using; `find . -name '*.cpp' ! -type d -exec bash -c 'expand -t 2 ""$0"" > /tmp/e && mv /tmp/e ""$0""' {} \;`; This step of course can lead some misalignment if the person introducing the tab did not have tabs rendered as 2 spaces (e.g. 4 spaces per tab). This is up of course for discussion and can be seen as a test vehicle to get everyones discussion. One can try to merge this to check if merge conflicts are really that bad to handle. Of course there will be conflicts on lines you touched as well. A possible solution to merge conflicts is to apply the commands to your filebase and then merge... then it is quite likely that your only merge conflicts are the ones you have with develop anyway. The rough plan discussed with @talbring is to include automatic checking of trailing whitespaces, tabs, overlong lines and possibly other stuff. . Cheers 🍾 to @WallyMaier who seemed to have to have that on his agenda for quite some time. . **Edit**: Only the restructured C*cpp C*hpp C*inl files are currently cleaned to keep the commit size down. This could be extended to other file chunks in the future. See externals/utils/replace-tabs...sh for a little shell script to get the receive the same results as in this PR. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style. **-> now it should be a bit more**; - [x] I have added a test case that demonstrates my contribution, if necessary. **not necessary**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/808:1353,extend,extended,1353,https://su2code.github.io,https://github.com/su2code/SU2/pull/808,1,['extend'],['extended']
Modifiability,"## Proposed Changes; Hi all,; ; a wrong index (iZone vs iInst) caused the SU2_SOL module to segfault if nZone > nInst. The geometry container is called with the wrong index in the `CBaseLineSolver::LoadRestart` routine. In SU2_SOL.cpp `&geometry_container[iZone][INST_0]` to `geometry_container[iZone]` are interchangeable, I just thought the 2nd formulation is used more often throughout the code. I cannot guarante though that it now runs for multiple instances, but as far as I know there is no such testcase. Testcase: The PR does not come with a Testcase which would catch the error in the future. In testcases started with parallel_computation.py the SU2_SOL module is called and fails for multizone cases (e.g. Jones_rst.cfg which I tested on) but if the residuals fit the case passes. That circumstance is not tackled in this PR but I heard that this is a know issue. I briefly chatted with @rsanfer about that and I offer my help if this is approached. . Additionally I fixed an error message to contain the correct config-option and added a --disable-tecio option to the preconfigure.py script as it is convenient for me as I build on compute nodes which cannot access the necessary X11 libraries and I couldn't get it to work with tecio enabled :( . If there are comments or requests for changing s.th. let me know. . Best Regards, Tobi. ## Related Work; Please see issue https://github.com/su2code/SU2/issues/568 for more information. There the error is described more detailed there. ## PR Checklist. - [ X ] I am submitting my contribution to the develop branch.; - [ X ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ X ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/572:1025,config,config-option,1025,https://su2code.github.io,https://github.com/su2code/SU2/pull/572,1,['config'],['config-option']
Modifiability,"## Proposed Changes; Hi all,; I have implemented the PGOmega S-A turbulence model(TM) which is proposed by Xiao He(2022). This TM enables us to get a more accurate prediction of stall margin which is very important in turbomachinery. This TM has been used in the simulations of ROTOR67, TUDarmstadt single stage compressor, and the validation work is shown in GPPS 2024 conference.; I also added the option related in configuration file.; The paper related is ""He, X., Zhao, F., and Vahdati, M. (September 19, 2022). ""A Turbo-Oriented Data-Driven Modification to the Spalart–Allmaras Turbulence Model."". ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2354:418,config,configuration,418,https://su2code.github.io,https://github.com/su2code/SU2/pull/2354,1,['config'],['configuration']
Modifiability,"## Proposed Changes; Hi everyone,. I have been working on the implementation of the DDES formulations for the SST model, following the work in ""Development of DDES and IDDES Formulations for the k-ω Shear Stress Transport Model"" (DOI:10.1007/s10494-011-9378-4). The implementation is easy, whereas the validation may take some time. I am currently working on the backward facing step and I will work on the flatplate too. The choice of the validation test cases is key since the computational cost is quite large, thus if you have any suggestions that may speed up this part then feel free to write them down. . Implemented versions:; - SST-DDES; - SST-IDDES; - SST-SIDDES. I am also working on the Scale Adaptive Simulations (SAS) implementations for SST, following the work in ""ON URANS SOLUTIONS WITH LES-LIKE BEHAVIOUR"", Travis et al., and ""[Evaluation of scale-adaptive simulation for transonic cavity flows"", Babu et al., (https://www.inderscienceonline.com/doi/abs/10.1504/IJESMS.2016.075510). The last one, especially, is quite tricky due to the computation of the velocity laplacian. I tried computing it in Paraview as the divergence of the gradient field and it seems quite similar, but it is the first time that I've touched that section of the code, thus some work might still be needed. Implemented versions:; - SST-SAS_Simple (better naming is necessary), from the article of Travis et al.; - SST-SAS_Complicated (better naming is necessary), it is related to the article from Babu et al. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2150:705,Adapt,Adaptive,705,https://su2code.github.io,https://github.com/su2code/SU2/pull/2150,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability,"## Proposed Changes; Hi, I found some problems with the implementation of the SA-NEG and SA-NEG-R models wrt to what is described on TMR. Plus, I found a suggestion on the computation of the SHat variable to avoid clipping for negative values (also reported on TMR).; . ## Related Work; - Implementation of new computation of SHat (Jacobian was computed by hand and is somewhat complex. Probably I could derive a simplified formulation); - Added CRot constant for SA-R model; - Modified computation of var.S for the combination SA-NEG-R; - Slightly change the computation of muT from nu_tilde: now muT = 0 if nu_tilde <0. Before it was muT = max(muT, 0.0), which should not always coincide with nu_tilde > 0.; - Not related to SA: added viscous drag as output in the history file. . I should also try to add the maximum value of nu_tilde within the mesh to the history file, although I still have to implement it. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2014:196,variab,variable,196,https://su2code.github.io,https://github.com/su2code/SU2/pull/2014,1,['variab'],['variable']
Modifiability,"## Proposed Changes; Hi, I noticed that the mesh quality metrics are not available in the current output structure, so here they are. ; I removed WRT_MESH_QUALITY and just check&set in the configs postprocessing routine.; Compressible, Incompressible, Heat and Mesh Output are added here as the FEM solvers dont have the dual grid as stated in the original PR. . **Bonus issue:** I noticed that Coordinates are not written in the Volume Output for the cases I tested (also the Quickstart) but haven't really figured out why yet. Doesn't matter whether VOLUME_OUTPUT is set with COORDINATES or not at all. I will look into this again but if you have a hint that would be appreciated💐 **Edit:** of course they are written implicitly otherwise on couldn't open a visu file but what do we have the volume output field COORDINATES for then? Maybe I am just blind, but this is not really part of this PR anyway. Cheers, Tobi. ## Related Work; Initial implementation #778 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1104:189,config,configs,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/1104,1,['config'],['configs']
Modifiability,"## Proposed Changes; I added new output file formats. First of all support for the VTK XML file format ([see this pdf](https://vtk.org/wp-content/uploads/2015/04/file-formats.pdf)) (file ending *.vtu). This adds support for possible compression, portable binary encoding, random access, big endian and little endian byte order, multiple file representation of piece data. I made this the new default format if `PARAVIEW` has been added to `OUTPUT_FILES`. The old *.vtk format can still be used with `PARAVIEW_LEGACY`. However, the main reason for this new format is that it is required for new Multiblock file (*.vtm) output. This file is a simple XML file which defines a data hierarchy in order to represent individual parts of the domain (which are stored as *.vtu files). With this it is possible to directly select and visualize the solution in individual zones and/or on boundaries. This new format can be enabled with `PARAVIEW_MULTIBLOCK` as value for `OUTPUT_FILES`. At the moment all boundaries are written, I might add an option to disable/enable some of them (maybe re-using the `MARKER_PLOTTING` option). In order not to cluster the working directory, the individual *.vtu files are placed in subfolders, since they are more or less opaque to the user. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/845:246,portab,portable,246,https://su2code.github.io,https://github.com/su2code/SU2/pull/845,1,['portab'],['portable']
Modifiability,"## Proposed Changes; I found two bugs that lead to crashes when trying to restart a shape optimization problem:. 1. The python code still uses the deprecated `has_key` function for dicts.; 2. If the default config file is used in the python scripts, then the aerodynamic coefficients aren't saved anywhere even if `aerodynamics` is called. You can reproduce the bugs using the following MWE:. #### Minimal working example. As per the documentation, you should be able to restart a previous shape optimization problem with a command like:; ```; python shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl; ```; where the `-r` command specifies a pickle files with the saved project state from a previous run. I checked the problem on the [RAE2822 constrained optimization tutorial](https://su2code.github.io/tutorials/Turbulent_2D_Constrained_RAE2822/). You can download the files using the instructions on that page. In order to reproduce the bug, run the following chain of commands:. 1. As per the tutorial, run `SU2_GEO turb_SA_RAE2822.cfg`; 2. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=1`; 3. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg`; 4. Modify the `turb_SA_RAE2822.cfg` file to specify that `OPT_ITERATIONS=2`; 5. Run `python $SU2_RUN/shape_optimization.py -f turb_SA_RAE2822.cfg -r project.pkl`. ## Remaining work. This should be covered by a test case. The problem I used takes a bit of time to compute, even using just the restart. Is there an cheaper shape optimization problem that could run quickly as a test case?. ## Related Work; None. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/921:207,config,config,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/921,1,['config'],['config']
Modifiability,"## Proposed Changes; I have found it useful to be able to adaptively change deltaT using the Python wrapper -- this PR implements that functionality. Instead of `CDriver::GetUnsteadyTimeStep` returning `CConfig::GetTime_Step`, it was updated to return the actual dimensional timestep used in iterations. A new `CDriver::SetUnsteadyTimeStep` function was implemented that updates both `Delta_UnstTimeND` and `Delta_UnstTime` in `CConfig`. A new setter function for `Delta_UnstTime` had to be implemented to do this as well. A quick grep showed me that the only usage of `CConfig::GetTime_Step` appears to be in SU2_SOL, initialization, and outputting in the NonDimTable. However, I did see one usage of it here, which appears to be called every iteration:. https://github.com/su2code/SU2/blob/2c9fbb6cfc0f9dfbb4a1f6afb9cf5004c33b1c25/SU2_CFD/src/integration/CFEM_DG_Integration.cpp#L75. I can update that line if necessary to instead call `CConfig::GetDelta_UnstTime`. I don't _believe_ that there are any additional issues that may be arisen beyond this. ## Related Work; N/A. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190:58,adapt,adaptively,58,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190,1,['adapt'],['adaptively']
Modifiability,"## Proposed Changes; I just added a new folder in the Turbomachinery test cases, containing the configuration files for the Aachen turbine test case. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158:96,config,configuration,96,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158,1,['config'],['configuration']
Modifiability,"## Proposed Changes; I made this in micro steps and the commit messages are fairly detailed, so here I will give only the highlights. Every change is mathematically equivalent.; I claim performance improvements based on the type of cases I run (steady RANS implicit, elasticity), results may vary, so please give this a try. **Cleanup**; - Iterative smoothers (Jacobi, ILU, etc.) are now implemented in CSysSolve as one generic method with the same interface as the Krylov solvers.; - Dead code was removed from CSysMatrix (as requested in #653).; - Duplicated code, mostly dealing with block-block/vector multiplication, was merged.; - Row/column elimination tasks implemented in CSysMatrix (as requested in #658).; - Linelet uses fewer working variables.; - Make a lot of methods private (the diff of matrix_structure.hpp is not going to be pretty...). **Performance**; - Inlined small methods.; - No calls to ""Get/SetBlock"" when the block location is already known (helps ILU and LU_SGS).; - Block inversion done in one go instead of multiple Gaussian eliminations (which used to require repeated upper matrix transformations) (helps Jacobi, Linelet, and ILU).; - Inverted ILU diagonal blocks are stored during ""build"" for use in ""compute"". **Bugs**; - Linelet preconditioner was not working for multiple wall markers. **ToDo**; - I will try to make the MKL optimizations work for the discrete adjoint (I say try because it may require too much creativity with the templates...).; - Get some benchmarks (I don't want you to just take my word for it). ## Related Work; #650, #653, #658. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700:746,variab,variables,746,https://su2code.github.io,https://github.com/su2code/SU2/pull/700,1,['variab'],['variables']
Modifiability,"## Proposed Changes; I overlooked something in #951, in that PR I made possible defining many-to-many multi-physics interfaces, i.e. one marker can receive some variables from zone A (e.g. temperature) and others from zone B (e.g. displacements). The problem is that unless the case is very very trivial, this does not work because currently the target geometry can only store donor information (interpolation coefficients and donor point indices) for one donor.; So many-to-many only works if everything matches, interpolation method, point indices, etc. The proposed solution is to move the donor information out of CVertex and into the CInterpolator object, which has a one-to-one relation with the interfaces, hopefully this will make the interfaces generic enough. ## Related Work; #951 . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1061:161,variab,variables,161,https://su2code.github.io,https://github.com/su2code/SU2/pull/1061,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Implemented updated turboperformance methods and adds improved history ouput of turboperformance variables to match screen output. ## Related Work; Follows on from removal of legacy output - https://github.com/su2code/SU2/pull/2003. Implements improved turboperformance calculations used in feature_turbomachinery_restruct_singlezone - https://github.com/su2code/SU2/pull/1316. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2011:118,variab,variables,118,https://su2code.github.io,https://github.com/su2code/SU2/pull/2011,1,['variab'],['variables']
Modifiability,"## Proposed Changes; Improve the configuration file for the turbulence_models SA Neg test case. With this new config file we should be better able to detect bugs in the code. For instance, with this new config file and number of iterations for the regression test, we will be able to detect bd4021020147e8e03d519cad2ddbaeef10c0bf3d. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1559:33,config,configuration,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/1559,3,['config'],"['config', 'configuration']"
Modifiability,"## Proposed Changes; Improvements and general cleanup / restructuring of CInterpolator and co. consisting of:; #### New features:; - Control of the RBF interpolation matrix sparsity via option `RADIAL_BASIS_FUNCTION_PRUNE_TOLERANCE` to drop relatively small coefficients.; - Generalize nearest neighbor interpolation to KNN + inverse distance weighting, ""k"" determined by option `NUM_NEAREST_NEIGHBORS` (because ""why not"").; #### Enhancements:; - The setup of CRadialBasisFunction was optimized (more use of BLAS) and it is now parallel (MPI and threads) over multiple interface patches.; - The setup of CIsoparametric was optimized, now it only evaluates isoparameters for a few nearby candidate donor elements (instead of all possible ones).; - The setup of CMirror was optimized both for memory (by communicating only information as needed) and speed (by reducing algorithmic complexity from quadratic to linearithmic) this item is in #833.; - The setup of CIsoparametric, CNearestNeighbor, and CMirror are now hybrid parallel.; #### Maintenance:; - Restructure (split) and cleanup the files.; - Heavy refactoring of RBF interpolation.; - Heavy refactoring of isoparametric interpolation, the method was incorrect for quadrilaterals (and the code too complex).; - Heavy refactoring of mirror (conservative) interpolation, the algorithm is perhaps more complex but the code is cleaner and 10x faster (this is in #833).; - Medium cleanup of CInterpolator (const correctness, unnecessary mpi ifdefs, etc.).; - Light cleanup of CDriver/CTransfer (deleting copy-pasted code); #### Other enhancements:; - Initialize the linear system solutions in CMeshSolver to speedup 3D FSI simulations, but especially to reduce overhead in FSI discrete adjoint cases.; - Too improve the quality of deformed grids in FSI cases with large ""out-of-plane"" displacements, a thicker layer of stiff cells can be imposed around the deforming boundaries. The thickness of the layer is defined by option `DEFORM_STIFF_LAYER_SIZ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/914:430,Enhance,Enhancements,430,https://su2code.github.io,https://github.com/su2code/SU2/pull/914,1,['Enhance'],['Enhancements']
Modifiability,"## Proposed Changes; In a joint collaboration with @rsanfer we discovered that the Prism and Pyramid shape elements used for mesh deformation had some issues, namely:; - The Prism (6 nodes) element had incorrect integration points, and perhaps due to some inconsistency between the ordering of the nodes and the shape function it had ""negative"" stiffness (deform opposite to force). The latter issue was remedied by using negative weights... I tried permuting the integration points but that did not help.; - The Pyramid (5 nodes) had inconsistent integration points and shape functions, it was using pyramid points but degenerate hex functions, this made the element some 20 times more flexible than it should be, pyramid shape functions are used now. My main reason to look into this was to support all element types in the structural solver both for linear and nonlinear analysis, in principle that should be working now, but I still have tests to run. I took the opportunity to refactor the CElement family of classes, now the derived classes only deal with the shape specifics:; - Integration/extrapolation points, shape function and derivatives, are computed and stored at construction.; - Area/Volume computation in undeformed (reference) or deformed (current) coordinates. Generic actions like allocating data and computing gradients are done by the base class. For the latter I included one method for 2D and another for 3D, they only differ in the inversion of the Jacobian but being specialized nDim can be ""hardcoded"" which should allow for more compile time optimization. I expect some regressions to fail, and I will still run more tests to verify the revised elements. I will post those results and add a regression. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consiste",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/681:687,flexible,flexible,687,https://su2code.github.io,https://github.com/su2code/SU2/pull/681,1,['flexible'],['flexible']
Modifiability,"## Proposed Changes; In a nutshell, we still solve a linear system to update the solution, but the approximate Jacobian is replaced by matrix-free products with the ""real"" Jacobian which are obtained by finite differences (each product requires the computation of the residual for a perturbed solution).; This linear system is much more ill-conditioned, and so in addition to the classical linear preconditioners, it is possible to use the traditional linear system as the preconditioner (you gotta love the kind of stuff SU2 lets you get away with sometimes).; This nesting makes each iteration potentially very expensive, it is crucial not to ""over solve"" the linear systems, and to use adaptive CFL to run always at the highest CFL possible. Notwithstanding the preconditioner madness, this also works for explicit solvers, but that may only be good enough for dual time methods with relatively small time steps. This seems to be good at converging problems that would otherwise not get past a limit cycle.; I do not expect it to be faster when that is not a problem. Some references:; https://arc.aiaa.org/doi/abs/10.2514/6.2021-0857; https://arc.aiaa.org/doi/10.2514/1.J052255. Example config for the RANS ONERA M6 in the repo: [turb_ONERAM6_nk.txt](https://github.com/su2code/SU2/files/5947580/turb_ONERAM6_nk.txt); It contains the explanation and recommendations for the different parameters. The initial idea was to couple all solvers (flow, turbulence, etc.) but that makes the problem even more ill-conditioned and so I took a step back (as that also makes the implementation simpler...).; The skeleton of the coupled iteration exists in commit c97221b6f7dfd315dfceb9f59f8928790c78e0ce and it was functional... if anyone wants to take it further, it's there. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1183:689,adapt,adaptive,689,https://su2code.github.io,https://github.com/su2code/SU2/pull/1183,1,['adapt'],['adaptive']
Modifiability,"## Proposed Changes; Introduction of mixture fraction transport equation to flamelet species solver. This allows for solving partially premixed, laminar combustion problems with heat transfer. The controlling variable names are generalized and have to be specified in the configuration file, such that they can be matched to the controlling variable names in the table. ; Additionally, the output writing for the flamelet variables has been generalized such that it can generate all the necessary outputs for any number of controlling variables.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057:209,variab,variable,209,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057,5,"['config', 'variab']","['configuration', 'variable', 'variables']"
Modifiability,"## Proposed Changes; Plain vanilla approach to topology optimization, element-wise constant density parameterization and SIMP interpolation scheme. It is working nicely for 2D cases of moderate size (10 to 100k elements), over that the linear solvers will struggle.; Practical issues with the feature:; - Requires ad-hoc scripting to use with an optimizer, so far the L-BFGS-B from Scipy together with a penalty formulation has served me well. Technical issues with the implementation:; - Scalability. A filter is applied to the densities to avoid numerical issues such as hinges, and checkerboards, and to ensure minimum feature size and mesh independence. My implementation, although parallel, requires all ranks to get a copy of global information, namely the connectivity and the element centroid coordinates. The ranks get this in compact format, so it is not super expensive (100MB per rank per million hexahedrons) and definitely not an issue for the problem size the linear solvers and preconditioners can currently handle.; - Output. Currently this is done at every iteration of the adjoint solver into a file (only the master rank writes the file) mainly because I did not see an easy way to output element values using the output class, everything else is computed at the nodes. So not perfect but a nice feature to have (I think). Feedback is welcome on any of these issues (or others you see!). If all goes well (with my PhD) I will address these issues as I plan to use this for large-ish problems. I added an example case to explain the new options, the large files will be in the Testcases repo. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/595:100,parameteriz,parameterization,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/595,1,['parameteriz'],['parameterization']
Modifiability,"## Proposed Changes; Prior to this PR, tape statistics were collected and printed for the tape of thread 0 of rank 0, with special handling for the memory usage of thread 0, which was reduced across MPI processes. This PR extends this to also take OpenMP parallel parts into account (threads other than thread 0), and reduces everything (not only used memory) across MPI processes. ## Related Work; any prior work on hybrid AD. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2235:222,extend,extends,222,https://su2code.github.io,https://github.com/su2code/SU2/pull/2235,1,['extend'],['extends']
Modifiability,"## Proposed Changes; Removing a couple unused variables to quash compiler warnings on Mac.; . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/702:46,variab,variables,46,https://su2code.github.io,https://github.com/su2code/SU2/pull/702,1,['variab'],['variables']
Modifiability,"## Proposed Changes; The PR changes the current limiter routine with the NEMO solver from a conservative variable limiter scheme to limiting on the basis of the primitive variables. This also updates some routines within SU2-NEMO to look/behave/take advantage of the standard SU2 implementations. I also tried tried to remove any other compiler errors. ## Related Work; This was first done with the AUSM scheme by @fmpmorgado. ; This is working towards functional implicit and dual-time capabilities in SU2-NEMO. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139:105,variab,variable,105,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; The ```CLookUpTable``` class allows for the fast interpolation of unstructured 2D data. It was found that the query time of this class scaled significantly with the number of output variables, indicating inefficiencies in the query process.; ; These inefficiencies came from string comparison routines in the ```GetIndexOfVar``` function of the ```CLookUpTable``` class. By implementing overloaded instances of the look-up functions which retrieve data from data indices directly, the query time efficiency scaling was significantly improved. . Also reduced duplicate code within the ```CLookUpTable``` class. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214:203,variab,variables,203,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214,1,['variab'],['variables']
Modifiability,"## Proposed Changes; The conjugate heat variables were not communicated properly between the flow and flamelet solver, resulting in the interface temperature between the fluid and solid to be always maintained at 300 kelvin for flamelet simulations. The changes mainly regard the recognition of the inclusion of energy for flamelet problems for the CHT methods, while in the flamelet solver, the conjugate variables are obtained from the flow solver instead of the flamelet solver itself. ; . ## Related Work; Related work includes the pull requests regarding the flamelet solver, as well as the related regression tests. The latter were obtained with this bug included, so the solution files have to be updated and the residual values in the regression tests have to be updated. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2067:40,variab,variables,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2067,2,['variab'],['variables']
Modifiability,"## Proposed Changes; The current PR serves two purposes. First, it extends the sliding interface capabilities for multi-zone fluid-fluid interfaces to incompressible flows. Until now, these features were only available for compressible flows. For example, take the following case of a viscous flow enclosed by diathermal walls and discretized using two different zones with a permeable, non-matching interface:. ![testcase](https://user-images.githubusercontent.com/8706821/51894668-b6cee100-23a8-11e9-8ee8-4b3d846417b2.png); ![discretization](https://user-images.githubusercontent.com/8706821/51894939-5e4c1380-23a9-11e9-8acb-8ac04d555e2b.png). With the current SU2 implementation, the solution diverges due to the lack of interface boundary conditions. After only 10 iterations, the contours of velocity are:. ![former](https://user-images.githubusercontent.com/8706821/51894620-99017c00-23a8-11e9-938a-d8b0e38fa141.png). With this PR, the problem can be successfully solved with a multizone solution process. The contours of velocity and temperature are now:. ![velocity](https://user-images.githubusercontent.com/8706821/51894679-bdf5ef00-23a8-11e9-9466-d360fdc42733.png); ![temperature](https://user-images.githubusercontent.com/8706821/51894683-bfbfb280-23a8-11e9-8ffe-1901b33677bf.png). and also for unsteady problems. ![unsteady](https://user-images.githubusercontent.com/8706821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the inc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:67,extend,extends,67,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['extend'],['extends']
Modifiability,"## Proposed Changes; The hybrid parallel implementation uses grid coloring (edge and element) to avoid race conditions when building the residual vector and Jacobian matrix.; Depending on grid size, type, and ordering, it may be difficult to find a good coloring, i.e. providing locality and enough parallelism (all threads getting almost the same number of work chunks to work on per color). This PR extends the use of the ""reducer strategy"" to fine grids (introduced and described in #861 for coarse grids, which before #894 I thought would be the only problematic scenarios) as a fallback strategy that is automatically selected when the coloring efficiency (highlighted below) drops below a threshold value. The reducer strategy can be forced by setting EDGE_COLORING_GROUP_SIZE to 0 (for some cases it seems to give better performance, contrary to the initial assessment from #789).; For element loops (CFEASolver and CMeshSolver, modified in #843) an automatic fallback was also introduced, but using ""locks"" (explained below) as a ""reducer strategy"" would use too much memory, and element loops are more compute intensive (and therefore less affected by the overhead of using these locks). ## Related Work; Part of #789, namely:; Improves scaling of the work from #861 #843 (should help with #894); Fixes a bug from #830. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/908:401,extend,extends,401,https://su2code.github.io,https://github.com/su2code/SU2/pull/908,1,['extend'],['extends']
Modifiability,"## Proposed Changes; The implementation of the symmetry plane is incomplete. We follow here the book of Blazek, _Computational Fluid Dynamics: Principles and Applications_ . According to Blazek, (chapter 8.6) 4 conditions have to be met on a symmetry plane:. 1. No flux across the boundary; 2. $\overline n \cdot \nabla \phi = 0$ (gradient of scalars are zero); 3. $\overline n \cdot \nabla (\overline U \cdot \overline t) = 0$ (gradient of tangential velocity normal to boundary); 4. $\overline t \cdot \nabla (\overline U \cdot \overline n) = 0$ (gradient of normal velocity along the boundary). Points 2-4 all deal with gradients and can be dealt with in the gradient computation, i.e. Green-Gauss or Least Squares. According to Blazek, 2 approaches can be followed. ""One possibility is to construct the missing half of the control volume by mirroring the grid on the boundary. The fluxes and gradients are then evaluated like in the interior using reflected flow variables."" This approach can be implemented in an easy way when computing the Green-Gauss gradients. In SU2, routines are already in place that deal with GG gradients on boundaries. Here, we just have to identify the symmetry planes and mirror the flux through the faces. ; Blazek continues: ""The second methodology computes the fluxes for the halved control volume (but not accross the boundary). The components of **the residual normal to the symmetry plane** are then zeroed out. It is also necessary to correct normal vectors of those faces of the control volume, which touch the boundary. The modification consists of removing all components of the face vector, which are normal to the symmetry plane. The gradients also have to be corrected according to Eq. (8.40) [points 2,3,4 above]"". 1. Modify Green-Gauss and Least-Squares gradient computation for symmetry planes; -> This seems to work fine; 2. Fix normal components of edges connected to symmetry plane; -> This seems to work fine; 3. Fix residual components of velocity",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2194:967,variab,variables,967,https://su2code.github.io,https://github.com/su2code/SU2/pull/2194,1,['variab'],['variables']
Modifiability,"## Proposed Changes; The is a first step in updating the output structure in order to make it a little bit more flexible and easier to maintain. The plan is to eventually have a consistent way of defining objective functions and/or define custom output quantities on individual surfaces. . I introduced a new structure to store scalar quantities for the history output. This makes it much easier to filter and loop through a specific subset of fields. Next step is to have per surface values stored in the same structure. Furthermore, creating structure to compute problem-specific outputs like aerodynamic coefficients, time-averaged quantities, surface quantities and so on. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913:112,flexible,flexible,112,https://su2code.github.io,https://github.com/su2code/SU2/pull/913,1,['flexible'],['flexible']
Modifiability,"## Proposed Changes; The multizone discrete adjoint driver is extended for dynamic problems. A time loop is added to the multizone DA driver, with additional handling for the external container to store the intermediate values and cumulative sensitivities per time step. @TobiKattmann - the changes to the DA multizone driver have been kept generic, they should be transferrable for CHT problems. Adjoint gradients for both dynamic FSI and dynamic CHT have been verified against finite differences. Dynamic adjoint test case has been added similar to an existing steady FSI test. . ## Related Work; #1259 (time averaged history output); #1174 (velocity transfer at FSI boundary). ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1260:62,extend,extended,62,https://su2code.github.io,https://github.com/su2code/SU2/pull/1260,1,['extend'],['extended']
Modifiability,"## Proposed Changes; The thread sanitizer analysis of the hybrid AD regression tests is clean, including the tests added in #1966. Given that the deviations observed in the CI pipeline (see #1980) are small, this is probably due to inherent non-determinism like varying orders of atomic updates on adjoint variables. This PR sets the tolerance of the recently added tests to the same tolerance that was already used for the other hybrid AD tests. . ## Related Work; #1966, fixes #1980. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1984:306,variab,variables,306,https://su2code.github.io,https://github.com/su2code/SU2/pull/1984,1,['variab'],['variables']
Modifiability,"## Proposed Changes; There has been talk about using external solvers in SU2. I am especially interested in this as due to the ill-conditioned matrices I get in structural topology optimization a direct sparse solver will probably be required.; One tricky issue with using external solvers is their compatibility with the discrete adjoint. Luckily in the reverse mode we do not differentiate the solver, only the operation A^-1 * b. Nevertheless currently all CSysVectors and CSysMatrices use su2double which makes them incompatible with external libraries and slower than in direct mode.; To address this issue I want to template the required classes such that we have the option (but not be obligated) to have CSysMatrices of passivedoubles in the discrete adjoint.; Moreover, I want to do some refactoring to make CSysSolve a proper class instead of an aggregate of functions. Currently we instantiate a CSysSolve whenever we need to solve a system, I think it would be beneficial to keep CSysSolve as a member of the classes that use it, so that for example, working memory used by Krylov methods is allocated only once. Note: I am aware that @talbring started some work on this (and more) in the *feature_template_linear_solver* branch, I tried to pick up were Tim left of but it was too much (a lot changes in one year). I really like the refactoring he was doing and will try to bring as much as possible into this, but I need to do it in smaller steps. Now this PR deals with some of the aforementioned refactoring, namely:; - CG, BCGSTAB, and GMRES have their working vectors and matrices as members of CSysSolve and allocate them only on the first call.; - CSysSolve is now a member of CSolver and CVolumetricMovement.; - BCGSTAB uses two fewer vectors than before and the ""p"" and ""v"" vectors are initialized to 0 instead of ""b"" (I think this was a small bug?).; - CSysSolve takes a ""mesh deformation"" flag at construction so that Solve can be called by CSolver and by CElasticityMovement, b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/650:797,refactor,refactoring,797,https://su2code.github.io,https://github.com/su2code/SU2/pull/650,1,['refactor'],['refactoring']
Modifiability,"## Proposed Changes; There was a bug in the CTurbSolver::ComputeUnderRelaxation() that would return a negative UR if the change in solution was too negative (less than the allowable decrease), which could cause the solution to head in the wrong direction. I'm not really sure why the turbulent solver version of this function was written differently than the flow solver (maybe the intention was to have a different allowable increase and decrease but they ended up being the same in the end?), but I changed it to make it consistent with the flow solver version. Also, as I mentioned in #1036, the UR parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. While on the topic of UR, I was wondering what the community's thoughts are on changing the SST models to use UR instead of solution clipping. The limits seem somewhat arbitrary to me (is there a ref?), and the tests I've done on my mesh adaptation cases have performed well where I've replaced clipping with UR. I realize this is a very limited dataset so if anyone has any strong opinions of why we should be clipping, let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1057:988,adapt,adaptation,988,https://su2code.github.io,https://github.com/su2code/SU2/pull/1057,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; There were some changes to the config_template options for the DV indices which was not reflected in the python code and the TestCases config files. For example, the index for HICKS_HENNE bumps changed from 1 to 30 in the config_template.cfg file. But this change was not reflected in the python scripts or any of the TestCases config files. This PR fixes this issue. ; . ## Related Work; #733 . ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/757:156,config,config,156,https://su2code.github.io,https://github.com/su2code/SU2/pull/757,2,['config'],['config']
Modifiability,"## Proposed Changes; This PR adds a regression testing pipeline based on the new Github actions features (https://github.com/su2code/SU2/actions). It uses docker containers for building and running the tests (https://hub.docker.com/r/su2code/build-su2 and https://hub.docker.com/r/su2code/test-su2, respectively, based on Ubuntu18.04/gcc7.4/OpenMPI2). This has several advantages over the current (Travis based) system:. - Using the containers you can run the building/testing environment locally on your machine. You can even download the compiled binaries produced on github and run them locally to further debug problems.; - It is faster and more flexible. Compiling and running all tests requires ~1h since a lot of things run in parallel now (e.g. building the base, reverse AD and forward AD binaries). There is potential to further speed things up by splitting the test case scripts into several files. All of that requires minimal work. Unfortunately there is no caching using ccache at the moment, but it is likely that github introduces this feature mid of november. ; - Additional tests like unit tests can make use of the same docker containers and can be easily set up by creating a new workflow file.; - We can easily add a deployment step to automatically create releases and/or nightly builds. **Note:** the linked docker containers are **only** for development/testing purposes. Hence we cannot give any support in this regard. For production use it is recommended to use singularity containers. But: the docker containers can be used as basis layers for singularity. I will get back with more information on that topic. ~~I had to change regression test values of two cases since apparently they are compiler dependent.~~ I changed it to the same versions as we have on Travis. There will be some documentation on how to use the containers locally soon. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/806:650,flexible,flexible,650,https://su2code.github.io,https://github.com/su2code/SU2/pull/806,1,['flexible'],['flexible']
Modifiability,"## Proposed Changes; This PR adds the [Piperno slope limiter](http://citeseerx.ist.psu.edu/viewdoc/download;jsessionid=71E315A30221171183B3425C51A4A33B?doi=10.1.1.493.3132&rep=rep1&type=pdf) and introduces a parameter to control the relative upwind vs central differencing in the MUSCL scheme:; <img width=""359"" alt=""Screen Shot 2020-07-17 at 11 35 28 AM"" src=""https://user-images.githubusercontent.com/19416354/87819813-b981f800-c821-11ea-85b9-c9427e7b5378.png"">; where ; - X=0 gives the original unstructured formulation for second-order variable extrapolation (default); - X=-1 gives second-order fully-upwinded MUSCL-type variable extrapolation; - X=1/2 gives third-order variable extrapolation to the cell face; - X=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ``",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:540,variab,variable,540,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,4,"['adapt', 'variab']","['adaptation', 'variable']"
Modifiability,"## Proposed Changes; This PR breaks up the following files:; 1. grid_movement_structure; 2. adt_structure. It also gets rid of grid_adaptation_structure and the entire SU2_MSH module. These files have not be updated in a long time are are deprecated. None of the new work in mesh adaptation by @bmunguia uses any of these routines. . ## Related Work; #583 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1035:280,adapt,adaptation,280,https://su2code.github.io,https://github.com/su2code/SU2/pull/1035,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; This PR cleans up some functions in NEMO. removing some unused code, adding comments, etc.; I plan to do some more cleanup for the PR, but this should impact the functioning of the code at all. Future work will:; 1.) Update boundary conditions to a working state (Supersonic Inlet, inlet, etc.); 2.) Make use of CharacPrimVar() for further code integration; 3.) Remove dependency of conserved variables in numerical schemes",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1488:414,variab,variables,414,https://su2code.github.io,https://github.com/su2code/SU2/pull/1488,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This PR fixes a bug in the restart of problems which involve dynamic meshes and turbulence.; Given that the Grid Velocities are written in the restart files after the turbulence variables, the indices must me incremented when the restart file is being read in.; At this moment that does not happen, as the variable index is incremented but later reset, and therefore the GridVel container receives incorrect values. ## Related Work; -. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/618:199,variab,variables,199,https://su2code.github.io,https://github.com/su2code/SU2/pull/618,2,['variab'],"['variable', 'variables']"
Modifiability,"## Proposed Changes; This PR fixes a couple issues in the nonlinear adaptive CFL scheme. - Convergence of the linear solver was assumed if the residual was greater than 0.5, which is quite large. I replaced this with the linear solver tolerance.; - The sum of nonlinear residuals was never computed for steady since `TimeIter` was used.; - The under-relaxation parameters for the flow solver and turbulent solver both took the min of each other and were never reset for steady, meaning it was non-increasing. @jayantmukho and I wanted to discuss more possible improvements to the scheme. I wanted to open this up before making any actual changes. - Currently there is a check for stalling residuals (the sum over 100 iterations of delta_Res must be > 0.1 Res), but this doesn't protect against increasing residuals. We should implement another check to prevent divergence.; - Instead of computing a single local CFL for flow/turbulence with a reduction factor for turbulence, maybe it would be better to have both solvers make their own call to `AdaptCFLNumber` and compute their own local CFL based on their own ResRMS. I feel like this would make more sense since the solvers are decoupled anyway. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036:68,adapt,adaptive,68,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036,2,"['Adapt', 'adapt']","['AdaptCFLNumber', 'adaptive']"
Modifiability,"## Proposed Changes; This PR fixes a couple of bugs I found recently. I also adapted the config preprocessing output to reflect the new output and convergence criteria options. . Furthermore it fixes the artifacts mentioned by @TobiKattmann in #774 regarding the Heatflux sensitivity. . Feel free to add any other fixes that you might came across. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/798:77,adapt,adapted,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/798,2,"['adapt', 'config']","['adapted', 'config']"
Modifiability,"## Proposed Changes; This PR fixes the version numbers of files and test cases up to the 7.1.1. (Mostly in NEMO) All files should be consistent now, but I may have missed some. . I am not sure if the test cases were intentionally left old, but I can change that. EDIT:; After taking a look through, I used my best judgement regarding what is up-to-date. The biggest issue I had was in the sliding_interface sections where configs for Kind_Interpolation= Weight-Average and Nearest-Neighbor. In this case I assumed that these options or used interchangeably among test cases, that I can update both _NN and _WA. I did similar things for some SST vs SA options. Below are the only cases that Im not sure if they are being used/up-to-date with develop: . fea_fsi/SquareCyl_Beam/; incomp_rans/rough_wall/ [pretty sure this is up-to-date, but not used in regressions]; optimization_euler/steady_inverse_design/; sliding_interface/incompressible_unsteady/ [Commented out, so I left this one alone]; sliding_interface/single_stage/; turbomachinery/centrifugal_*/ . I also went ahead and removed:; rans/naca0012/*_sa_neg [SA_neg is already used in turb_NACA0012_sa.cfg] ?; rans/naca0012/*_sa_binary. ## Related Work; This is a chore. ## PR Checklist; - [ x] I am submitting my contribution to the develop branch.; - [ x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x ] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1271:422,config,configs,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1271,1,['config'],['configs']
Modifiability,"## Proposed Changes; This PR goes in line with the driver reorganisation started in #585. At this time, it is the single-zone adjoint driver that is introduced, which inherits from the primal single-zone driver class. Problem properties are set at time of driver instantiation, and routines are mostly opaque to the physics (not yet completely as some further work is required in input/output). The functions are exposed to python so in a later PR the adjoint can also be used with the AD mode enabled. Some old driver classes are already removed. ## Related Work; - Further work by @oleburghardt to follow on the multizone adjoint driver.; - Some features awaiting the input/output restructuring PR by @talbring. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/671:167,inherit,inherits,167,https://su2code.github.io,https://github.com/su2code/SU2/pull/671,1,['inherit'],['inherits']
Modifiability,"## Proposed Changes; This PR implements a combustion model for laminar premixed flames in low Mach number flows. The implementation is based on a flamelet progress variable approach - i.e., the combustion chemistry is parameterized with scalar quantities for which scalar transport equations are solved. The scalars are then used to look up scalar source terms, transport -, and thermodynamic quantities from a lookup table. The lookup table is compiled from one-dimensional flame simulations using more expensive chemistry models - typically finite rate mechanisms. In this implementation we introduce 2 additional transported scalars: the progress variable **c** and the total enthalpy **h**. All fluid properties like density, viscosity, temperature, diffusivity, reaction source terms, etc. are obtained from a lookup table that is made by the user with external 1D detailed chemistry codes like Cantera. Since temperature is now a dependent variable, we do not need to solve the regular temperature equation. However, We keep the SU2 temperature field and simply write our lookup temperature T(c,h) into this field. . As a 'limiting case', a nonreacting passive scalar transport equation has also been implemented. All fluid properties for this passive scalar are constant, but this passive scalar can be easily extended to model nonreacting mixing flows of two fluids with different properties. This model has also been verified to work together with turbulence, although no turbulence chemistry interaction has been implemented for this WIP. . ## Related Work; This PR implements a generic scalar transport framework which can be aligned with other physics models that make use of transported scalars, e.g. turbulence models. It furthermore implements a generic lookup table framework that can be used as a basis for lookup table based physics models, such as real gas models. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223:164,variab,variable,164,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223,4,"['parameteriz', 'variab']","['parameterized', 'variable']"
Modifiability,"## Proposed Changes; This PR introduces the discrete adjoint counterpart for the multizone driver. It also comes with some heat solver-related additions for the new input/output structure as CHT (conjugate heat transfer) cases are the primary application so far. The new driver adapts many of the well-known routines for registering variables, recording, initializing and extracting adjoints. The main difference is the handling of multiple zones. . The adjoint (fixed point-) iteration approach in `CDiscAdjMultizoneDriver` is to initialize them per-zone in an outer loop and to extract adjoints with respect to _dependent variables from all zones_, thereby inherently capturing the cross dependencies.; Multiple successive evaluations of adjoints with respect to the same zone (equivalent to inner iterations in the multizone driver) are possible.; ; In order not to have to re-record a tape in the (outer) zone-loop as it can be quite costly, this branch includes some new functionalities in the underlying AD-structure which make it possible to record a ""full"" tape that holds all derivative information and that can be accessed flexibly for different input and output variables across zones.; This also overcomes the restriction that adjoints have to be evaluated in the same order as their variables had been registered.; ; This is the first version of the driver and my intention is to continue contributing to it in terms of both performance and coverage of different kinds of physical couplings in SU2. ## PR Checklist; A regression test for a heated cylinder array with conjugate heat transfer is added to `TestCases/coupled_cht/disc_adj_incomp_2d`. The very same case is used in a tutorial showcasing the new driver and CHT sensitivity analysis, see [Heated cylinders test case](https://github.com/su2code/su2code.github.io/pull/14). I'll check carefully for compiler warnings during test phase. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774:278,adapt,adapts,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/774,3,"['adapt', 'variab']","['adapts', 'variables']"
Modifiability,"## Proposed Changes; This PR is a preparatory step to reintegrate all the turbo-machinery features with the current develop.; In this first step, I have restructured the single-zone turbomachinery problem to run using both the SingleZoneDriver and the FluidIteration. ; The Next steps will be . - [x] Adapt the turbomachinery output with the new Output structure. ; - [ ] Fix the Multizone steady turbomachinery problem to run with the MultizoneDriver.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/866:301,Adapt,Adapt,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/866,1,['Adapt'],['Adapt']
Modifiability,"## Proposed Changes; This PR makes several changes to the NEMO code:; 1.) @fmpmorgado Introduced the AUSM+M convective scheme that avoids the carbuncle phenomena in hypersonic blunt bodies (https://doi.org/10.1016/j.apm.2019.09.005); 2.) Wally - A full refactoring of the AUSM schemes within NEMO; 3.) Removal of AUSMPW+ scheme; ; ## Related Work; This work is a follow-up and a cleaner version of the work in the branch **feature_NEMO_AUSMPLUSM**. I will delete both branches after merge. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary. ### Benchmark. I have conducted a comparison between the AUSM and AUSM+M for a 2D axisymmetric non-equilibrium flow over a cylinder with a 0.1 meter diameter and a freestream of M=24, P = 10.23 N and T = 224.5 K. ![image](https://user-images.githubusercontent.com/29612207/192250118-eb074187-3002-468a-8406-b01047c790bd.png); The left image represents the converged 2nd order solution using AUSM+M and the right image using the standard AUSM scheme. The new AUSM+M scheme enables to get rid of the pressure oscillations near the stagnation area. ![image](https://user-images.githubusercontent.com/29612207/192250632-85b64454-c54c-4815-8664-f72fc17d705d.png); Temperature at the stagnation line (solid line is AUSM+M and dashed line is AUSM). ![image](https://user-images.githubusercontent",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1773:253,refactor,refactoring,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/1773,1,['refactor'],['refactoring']
Modifiability,"## Proposed Changes; This PR refactors the SST model implementation to include (hopefully) the KL, RC, V, m, SUST models. ; Mainly for the models SST-V(m) and SST-Vsust(-m). These tend to be used in higher speed flows. https://turbmodels.larc.nasa.gov/sst.html. A quick summary of some of the changes are:. Adding the""V"" term simply changes the P-term from; `Eddy_Viscosity_i * pow(StrainMag,2)` to; `Eddy_Viscosity_i * pow(VorticityMag,2)`. Adding the ""KL"" source term changes the P-term to; `Eddy_Viscosity_i *StrainMag*VorticityMag`. Adding the ""RC"" term:; Multiplying the P-term by a function, f. . Many of the Options can be used together -> SST-V-sust-m. The NASA TMR doesn't explicitly mention something like SST-2003-V-RC-sust-m,so I don't know if that is a valid permutation. That being said, the amount of options is fairly so I'm not sure the best way to approach this formulation, without unnecessarily bloating the code. Hence this isn't operational yet. Work will need to be done to validate the addition. ## Related Work; This is part of the larger turbulence fixes/additions/modernization efforts seen in #1557. It also addresses some comments in #1551 and #1413. Also as @pcarruscag pointed out below, this falls out in the larger discussion mentioned in #1364. ## PR Checklist; - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1560:29,refactor,refactors,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/1560,1,['refactor'],['refactors']
Modifiability,"## Proposed Changes; This PR removes `CMultiphysicsZonalDriver` from the legacy `CDriver.cpp` and related config options.; It was part of some initial contributions that went into a major driver structure rework. It's now just a leftover which is fully superseded by the new `CMultizoneDriver` anyway. It's meant just as a quick deletion to tidy up the code before the next release.; ; ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/776:106,config,config,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/776,1,['config'],['config']
Modifiability,"## Proposed Changes; This PR; -changes the name of the class CUserDefinedTCLib to CSU2TCLib (class that refers to the SU2 native fluid model for nonequilibrium flows); -introduces another nonequilibrium fluid model that refers to the support of Mutation++ library. CMutationTCLib class is introduced at the same level of CSU2TCLib, as a child of CFluidModel; -sets up the meson configuration of Mutation++ as a git submodule (since Mutation++ is a cmake library, it needs to be treated as meson subproject). For appropriate review of this PR; 1. please test the link to mutation++ with:; `$./meson.py <build_dir> --prefix=<path_to_su2> -Denable-mpp=true`; and follow the instructions at the end of the meson log; 2. run the regression test in TestCases/nonequilibrium/viscwedge_mpp. ## Related Work; This PR follows a series of PRs to migrate the full NEMO solver to the develop/master branch, with @WallyMaier and @fmpmorgado . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160:378,config,configuration,378,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160,1,['config'],['configuration']
Modifiability,"## Proposed Changes; This adds/extends the turbulence solver for NEMO. As of right now, there is a lot of repeated code. ; Much testing is still needed, but the base structure is here. I hoping to get some early comments, and ideas of how to reduces the code repetition. ## Related Work; Other feature developments in NEMO, as PR #1356 and PR #1383 . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1385:31,extend,extends,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/1385,1,['extend'],['extends']
Modifiability,"## Proposed Changes; This branch implements the Langtry Menter transition model coupled to SA turbulence model (https://turbmodels.larc.nasa.gov/sa_gamma_retheta_3eqn.html). It also includes the transition induced by crossflow effects through the LM2015 implementation (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html). The config options added are:. 1. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in the case of SA. (Implemented); 2. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. (Implemented); 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. (Not yet Implemented). The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is not always the case, especially if SST is used (you can see in on the figure below). References are https://doi.org/10.1007/s10494-021-00288-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:333,config,config,333,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"## Proposed Changes; This branch implements the Langtry Menter transition model coupled to SST turbulence model (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html) and to SA turbulence model (https://turbmodels.larc.nasa.gov/sa_gamma_retheta_3eqn.html). It also includes the transition induced by crossflow effects through the LM2015 implementation (https://turbmodels.larc.nasa.gov/langtrymenter_4eqn.html). The config options added are:. 1. KIND_TRANS_MODEL. Values are LM for LM2009 implementation and LM2015 for the respective model. The default is NONE.; 2. KIND_TRANS_CORRELATION. It allows the selection among correlation models found in the literature for F_length and ReTheta_c variables. Values are MALAN, SULUKSNA, KRAUSE, MEDIDA_BAEDER, MEDIDA, MENTER_LANGTRY. It defaults to the MENTER_LANGTRY If the underlying turbulence model is SST or to MALAN in case of SA.; 3. CONVERTSA2SST. If the SA turbulence model is used, it is possible to use the LM version for SST by computing k and w from SA variables. Values: YES, NO. The default is NO. I have never really used this feature, it is there just because it is another way of coupling the LM model with SA.; 4. HROUGHNESS. RMS value of roughness for LM2015 transition model. It defaults to 1e-6m. Output fields added:. 1. The values of intermittency and Retheta_tilde have been added to the SOLUTION field. Also, their respective residuals and linear solver residuals/iterations have been added.; 2. I have added the possibility of printing some variables related to transition. These are useful in the case of investigation of the transition phenomenon. The field associated is TRANS_VARS. I do not know if I can leave it as it is or if you want just the essential variables to be printed in the output. The turbulence index has been implemented for the turbulence models. It is used to detect transition when it is higher than 0. In theory, it should be equal to 1 for a fully-turbulent flow. However, in my simulations, this is no",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:420,config,config,420,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,3,"['config', 'variab']","['config', 'variables']"
Modifiability,"## Proposed Changes; This draft PR aims to generalize and template the turbulence solver/ scalar solvers to reduce code duplication and allow NEMO access to the turbulence solvers. The ideas were discussed with @pcarruscag, @TobiKattmann and @suargi, ; I am opening up the draft PR very early, so this is very much a work in process. The main idea is use templates to introduce differing variable index values into the Scalar/Turb solvers. ## Related Work; This idea follows PR #1375 and PR #1330. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1392:388,variab,variable,388,https://su2code.github.io,https://github.com/su2code/SU2/pull/1392,1,['variab'],['variable']
Modifiability,"## Proposed Changes; This feature allows for computationally efficient through-flow computations for turbomachinery applications in the form of body-force modeling. The body-force model (BFM) generates density, momentum and energy source terms which turn the flow according to the local flow conditions and blade geometry. The blade geometry is defined through the camberline and blade thickness parameters, which are interpolated onto the mesh nodes prior to the solution process. ; Two BFM formulations are currently implemented: Hall (2015) and Thollet (2017). The code is up-to-date with ""develop"", version 7.1.1. ; Upcoming milestones will be MPI integration and coupling with adjoint. The latter will allow for computationally efficient design workflows of turbomachinery components. This will be especially useful for distortion-tolerant machines, as the design variable count and computational requirements are significantly higher than for machines experiencing uniform inflow. ; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1348:668,coupling,coupling,668,https://su2code.github.io,https://github.com/su2code/SU2/pull/1348,2,"['coupling', 'variab']","['coupling', 'variable']"
Modifiability,"## Proposed Changes; This feature allows of employing cubic equation of state based on the **CoolProp** library's Peng-Robinson backend [1,2]. The present Peng-Robinson fluid model implementation (CPenRobinson.cpp file) requires '_Specific heat ratio_' (_gamma_) as an input which is not always possible to know in advance, especially for organic fluids (refrigerants).; The fluid model (titled as **PR_COOLPROP_GAS** in config file) in the proposed branch is completely free of any '_gamma_' in particular functions and allows of utilizing the spatially variable of isobaric and isochoric specific heats. The full set of available fluids is presented in the **config_template.cfg** file. One must be aware that the reviewed fluid model assumes imposing pure substance in gas phase (no mixtures or multiphase flows). The implemented fluid model improves the thermodynamic consistency however there is performance penalty related to algorithmic overhead. . 1. http://coolprop.org/; 2. https://github.com/CoolProp/CoolProp. ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [+ ] I am submitting my contribution to the develop branch.; - [+ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ +] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ +] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402:421,config,config,421,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"## Proposed Changes; This introduces the implicit solver for the Euler solver with SU2-NEMO. I created this branch/PR for a clean commit history version. ; This PR also does some general cleanup (declaring variables, use of geometry toolbox) to be more consistent in the SU2 style. ## Related Work; This is based on the previous draft PR #1356. And in general work continued from other NEMO cleanups #1343 and #1347. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1399:206,variab,variables,206,https://su2code.github.io,https://github.com/su2code/SU2/pull/1399,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This is a ""don't pay for what you don't use"" optimization.; I've disabled implicit time integration during the computation of the MG forcing term. I've also refactored CMultiGridQueue, it had a bad scaling problem because to remove a point from the queue we were doing a linear search followed by vector::erase, both being O(N) operations.; I've put together a queue-type class that allows fast (amortized O(1)) ""seek-and-destroy"" of arbitrary items. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/963:178,refactor,refactored,178,https://su2code.github.io,https://github.com/su2code/SU2/pull/963,1,['refactor'],['refactored']
Modifiability,"## Proposed Changes; This is a chore PR to const variables when allowed and to alter loops to prevent declared iterators. This may be unnecessary/overkill. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [x] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1923:49,variab,variables,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/1923,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This is a restructuring of the solver classes in the fashion of what has been done for variable classes, output classes etc. Changes include:. - Moving all solver .hpp and .cpp files into individual class specific files; - Moving all inline functions into the header files ; - Some bits of code cleanup. Things still left to be done: . - Updating the IDE files; - Any other things that might come up in the review process. This has mostly just been copying and pasting things around. If there any thing else to address in the solver classes (menial or significant) that would be appropriate to include in this restructuring, let me know in the comments!. ## Related Work; @pcarruscag is already working on the CFEASolver in #843. I have split the files here as well since it was already automated. But I can just merge with his branch in the likely case that his PR is ready for merging before this one. . ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849:108,variab,variable,108,https://su2code.github.io,https://github.com/su2code/SU2/pull/849,1,['variab'],['variable']
Modifiability,"## Proposed Changes; This is a simple enhancement of the fixed CL mode. Currently the Fixed CL mode only exits when the specified iteration limit is reached. With these changes, the mode is a little more robust and checks for the specified Residual or Cauchy convergence and additionally checks that the CL is converged to the target CL value to within CAUCHY_EPS. I have currently preserved the Finite Differencing that occurs at the end of the Fixed CL mode. I am not sure why this is required and would like to get rid of it if possible. If there is a reason for the finite differencing to calculate dCL/dAlpha, please let me know. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/779:38,enhance,enhancement,38,https://su2code.github.io,https://github.com/su2code/SU2/pull/779,2,['enhance'],['enhancement']
Modifiability,"## Proposed Changes; This is a solver I have been working on for some time.; The proposed solver is a treatment of the discrete adjoint sensitivities based on the idea of Sobolev gradient smoothing. This is done by solving an elliptic PDE with the sensitivities, i.e., ( e1 Id - e2 Laplace) delta_x = - dF / dx, with different weights e1, e2.; Such treatment can help prevent noise in the derivative computation and leads to smoother design updates. Especially, when working in a One Shot optimization context.; The new solver constructs the necessary operator and solves it using the finite elements features in SU2. It also includes the possibility to take the mesh parameterization into account and smooth the sensitivities w.r.t. the design parameters. I will update this draft and the comments, but I wanted to share this first version. I would be happy if anyone wants to comment on it. The draft needs some steps to be done, including:; - clean up the comments and make them consistent with SU2 style; - remove the dependency on Eigen. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1439:668,parameteriz,parameterization,668,https://su2code.github.io,https://github.com/su2code/SU2/pull/1439,1,['parameteriz'],['parameterization']
Modifiability,"## Proposed Changes; This is one I have been trying to solve for a while and now found a solution that is not a hack.; Under some circumstances that I do not understand (very case dependent) one of the cross terms (structure w.r.t. fluid) creates spurious values, e.g.:; ![image](https://user-images.githubusercontent.com/38071223/48981547-af503a80-f0ce-11e8-9875-1b9a2d5fd50d.png); The fix I found is to change the recording strategy, instead of making 3 recordings of the structural iteration (one for each set of input variables) this is merged into a single recording.; So from this:; ![image](https://user-images.githubusercontent.com/38071223/48981607-aad85180-f0cf-11e8-9740-dd6f51f249c3.png); To this:; ![image](https://user-images.githubusercontent.com/38071223/48981615-bc215e00-f0cf-11e8-8dd1-c2ae00b3a973.png); So far this has fixed the issue for a range of cases, large to small.; [Here](https://github.com/su2code/SU2/files/2613239/spurious_values.zip) you can see the difference between running the case in the example picture with and without the fix.; . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/615:522,variab,variables,522,https://su2code.github.io,https://github.com/su2code/SU2/pull/615,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This is the first part of a series of PRs which completely refactor the output (and parts of the input). In this one I introduce the sub-config file feature for multizone/multiphysics problems. More information on how it works can be found here:. https://su2code.github.io/docs/Multizone. Note that the automatic deduction of the correct interface type is *not* working at the moment. So the `MARKER_FLUID_INTERFACE` or `MARKER_CHT_INTERFACE` still has to be there at the moment ... Furthermore this changes the way grid movement is specified in the config files. Examples can be found also using the link above or by simply looking at the `sliding_interface` test cases. . ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/715:80,refactor,refactor,80,https://su2code.github.io,https://github.com/su2code/SU2/pull/715,3,"['config', 'refactor']","['config', 'refactor']"
Modifiability,"## Proposed Changes; This is the initial PR for a long overdue refactorization of the mesh deformation routines. The mesh deformation acquires here a full ""solver"" status, and uses the FEA Elasticity classes as its basis. The pseudo-linear elastic solver now always refers to the initial, undeformed geometrical discretization, therefore ensuring that the problem remains traceable to the original mesh, and that when volumes are computed to deform the mesh, the initial quality of the elements is observed. . With this framework, the wall distances only need to be computed once for distance-based stiffness, and the stiffness matrix is now symmetric after applying BCs so conjugate gradient can be used to compute the mesh deformation. The adjoint sensitivities can now be propagated down to the surface mesh points without the need to use DOT, although further work is needed to propagate them to the FFD points or other DV of choice. I tried to keep config options simple: the new mesh solver is enabled using; ` DEFORM_MESH = YES `; and the relevant markers which will move and introduce deformations into the domain are set using; `MARKER_DEFORM_MESH= ( wall )`; Hopefully, previous mesh deformation structures can be deprecated and removed soon, but we will need to adapt the rigid/imposed boundary deformation of other kinds of grid movement. I kindly ask for your help in there, as I'm not very familiar with some of the legacy code for this purpose. Additionally, in this PR I have done some refactoring so the AD-based adjoint routines are accessible from the python-wrapped version of the code. The SWIG wrapper now compiles the AD binaries and interfaces directly to sensitivity information, which should make it much easier to integrate SU2 within any python-based optimization framework. . ## Related Work; - Some work will be needed to adapt the new contiguous variable structure by @pcarruscag in #753; - I have added a couple of regression tests, but I will add tutorials once #724 i",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/760:63,refactor,refactorization,63,https://su2code.github.io,https://github.com/su2code/SU2/pull/760,1,['refactor'],['refactorization']
Modifiability,"## Proposed Changes; This makes the routines InitiateComms and CompleteComms (and periodic counterparts) safe to call in parallel, until now they had to be guarded inside SU2_OMP_MASTER sections.; The calls to MPI are still only made by the master thread (funneled communication) but the buffers are packed and unpacked by all threads.; I also made a slight change which seems to make communications more efficient, we were always communicating the entire buffer, which is sized for the maximum number of variables per point, because the data was packed like this:; `o o o o _ _ _ _ o o o o _ ...` (count = 4, maxCount = 8);; I changed it to:; `o o o o o o o o ... _ _ _ _ ...`; Which allows only part of the buffer to be communicated.; (The maximum size `nPrimVarGrad*nDim*2` is actually quite large compared to the median `nVar`). In the process I also had to make a few more CGeometry routines thread safe. ## Related Work; #789; Resolves #1011. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1009:505,variab,variables,505,https://su2code.github.io,https://github.com/su2code/SU2/pull/1009,1,['variab'],['variables']
Modifiability,"## Proposed Changes; This one's really small, but when running valgrind on some of my adaptation runs, I noticed that a lot of memory was being leaked due to not deleting direct_iteration and direct_output in CDiscAdjSinglezoneDriver.; ; ## Related Work; None that I'm aware of after a cursory look through PRs. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/929:86,adapt,adaptation,86,https://su2code.github.io,https://github.com/su2code/SU2/pull/929,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [ ] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782:911,coupling,coupling,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782,1,['coupling'],['coupling']
Modifiability,"## Proposed Changes; This project aims to couple the free and open-source thermodynamics library CoolProp with SU2. There are **two advantages:**. 1. More accurate numerical results. ; CoolProp can provide accurate thermodynamics properties (P, T, rho, ect) of commone fluids by either extracting experiment data from published papers, or computing based on the state-of-the-art Helmholtz energy formulations. ; So, thermodynamics properties obtained from CoolProp should be more accurate than those obtained from Van der Waals or peng robinson gas model embedded in SU2. Also, the numerical results should be more accurate.; 2. More user-friendly; To use CoolProp feature, the ony input from the user is the name of fluid. Then all other thermodynamics can be provided by CoolProp.; %FLUID_MODEL = COOLPROP; %FLUID_NAME = nitrogen; ; ## Related Work; This project references the following work:; 1.the work of coupling 'Mutationpp' with SU2.; 4. the pull request of 'Feature nppr gas #1718'. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings.; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] Simulations with the following test fluids succeed: nitrogen, oxygen, carbon dioxide, MM.; - [x] Currently, this new feature is applied for only Euler flow. For viscous flow, further work need to be done, including viscosity, conductivity from CoolProp. ; - [ ] CoolProp does not support non-dimension.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1806:911,coupling,coupling,911,https://su2code.github.io,https://github.com/su2code/SU2/pull/1806,2,['coupling'],['coupling']
Modifiability,"## Proposed Changes; This pull request represents progress towards exposing the mesh deformation routines and their adjoint counterparts to Python through pysu2 and pysu2ad, respectively. This refactorization introduced:. 1. `CDriverBase`; a. Parent class for `CDriver`, `CDeformationDriver`, `CDiscAdjDeformationDriver`; b. Common methods regarding geometry, markers, MPI, etc. 2. `CDeformationDriver` and `CDiscAdjDeformationDriver`. In addition, the `CDeformationDriver` was modified to use the new mesh deformation solver `CMeshSolver`. The integration of `CMeshSolver` required introducing the `numerics_container` and `solver_container`, as well as minor changes to `CMeshSolver` (e.g., `DeformMesh` and `SetMesh_Stiffness`). Both the legacy mesh deformation solver `SU2_DEF` and the newer `CMeshSolver` can be used with these new drivers, depending on how the `DEFORM_MESH` option is set in the SU2 config file. . ## Related Work; These efforts are related to Issue #1262. The purpose of this work is to enable the coupling of SU2 with external solvers like Nastran, particularly for aerostructural MDAO. The goal is to apply this for coupled discrete adjoint sensitivities. . In the future, these driver classes will be extended to include more methods accessible via Python (i.e., for setting or extracting variables, config parameters, etc.). Currently `CDiscAdjDeformationDriver` is not integrated with `CMeshSolver`, but this will be addressed in the future. . ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300:193,refactor,refactorization,193,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300,6,"['config', 'coupling', 'extend', 'refactor', 'variab']","['config', 'coupling', 'extended', 'refactorization', 'variables']"
Modifiability,"## Proposed Changes; This removes some leftovers from when we deprecated the mesh adaptation.; I had a look at the ""adap"" branches and it seems that the new interface has completely new scripts and these are not needed, @bmunguia correct me if I am wrong. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:82,adapt,adaptation,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['adapt'],['adaptation']
Modifiability,"## Proposed Changes; Try to improve the configuration detection of hdf5.; . ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ ] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [ ] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1511:40,config,configuration,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1511,1,['config'],['configuration']
Modifiability,"## Proposed Changes; Two small bug fixes that I have encountered.; - One typo that was messing up the` REL_RMS_ADJOINT_*` variables; - One initialization for fixed CL which was missing. ; . ## Related Work; Feel free to add any other bugs to squash. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/816:122,variab,variables,122,https://su2code.github.io,https://github.com/su2code/SU2/pull/816,1,['variab'],['variables']
Modifiability,"## Proposed Changes; We aim to implement 2 things:; 1. Restart files contain variables that are not necessary for restarts. with the keyword WRT_RESTART_COMPACT= YES we can write compact restart files containing only necessary fields.; 2. Other output contains variables that are not requested (all SOLUTION variables are always written). When WRT_RESTART_COMPACT= YES, we do not automatically write the SOLUTION fields to e.g. paraview.; 3. When WRT_RESTART_COMPACT= NO, we keep the original behavior for backward compatibility. ## Related Work; Mentioned in Issue (request) #2118 . ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2372:77,variab,variables,77,https://su2code.github.io,https://github.com/su2code/SU2/pull/2372,3,['variab'],['variables']
Modifiability,"## Proposed Changes; With steady computations, the pywrapper call to `SU2Driver.Run()` will run it for the number of iterations in the config file. The first change this PR makes is that a call to `SU2Driver.Preprocess(nIter)` will overwrite the number of inner iterations when the case is not time dependent. We can now do `SU2Driver.Run()` for a single iteration by setting `SU2Driver.Preprocess(1)`. A call to `SU2Driver.Monitor(Iter)` will check the stopping criteria, including the maximum number of iterations. When you have set this to 1 using `SU2Driver.Preprocess(1)`, a call to `SU2Driver.Monitor(0)` will still stop the calculations because we are checking if (iter+1)>=nIter. The second change is that we now check if (iter >= nIter). I also change this behavior for time dependent problems to make this behavior consistent. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [x] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1960:135,config,config,135,https://su2code.github.io,https://github.com/su2code/SU2/pull/1960,1,['config'],['config']
Modifiability,"## Proposed Changes; `CSlidingInterface::GetDonor_Variable` needs to access the `Primitive` of flow variables and the `Solution` of turbulent variables. Which one is the case, is currently decided by checking `donor_solution->GetnPrimVar() == 2` (true->turbulent, false->flow). If the SA turbulence model is used, the non-overidden ""virtual placeholder"" `CVariable::GetPrimitive(unsigned long,unsigned long) const` returning zero is incorrectly called. We propose to fix this by additionally checking for `donor_solution->GetnPrimVar() == 1`. ## Related Work; @maxaehle, @mcmorelli, @BeckettZhou, @EduardoMolina. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344:100,variab,variables,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344,2,['variab'],['variables']
Modifiability,"## Proposed Changes; ```; CVariable -> CFlowVariable -> CEulerVariable -> CNSVariable; ```; **Likewise for incompressible and NEMO.**. **CFlowVariable** stores, allocates, and gives access to, primitives, their gradients and limiters, and a few other odd things.; For now this is just cleanup but it can be used to give non-virtual access to these flow variables to other solvers.; For example, the scalar solver #1330 can static_cast or dynamic_cast the nodes of the flow solver to access some quantities more efficiently.; I'll leave that for after #1330 is merged. ## PR Checklist; - [X] I am submitting my contribution to the develop branch.; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1375:353,variab,variables,353,https://su2code.github.io,https://github.com/su2code/SU2/pull/1375,1,['variab'],['variables']
Modifiability,"## Proposed Changes; mini-PR that adds missing privatization to a loop variable. ## PR Checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2350:71,variab,variable,71,https://su2code.github.io,https://github.com/su2code/SU2/pull/2350,1,['variab'],['variable']
Modifiability,"## Proposed changes. Dear all,. I am very new to collaboration on a open source project, but I have been working on an update for the FSI computation in python that I think may be useful also for other researcher. Would you mind giving me a feedback about the modifications?. In few words, I have updated the python interface for fluid structure interaction to the new version of SU2, including the new driver, the new mesh deformation methods and few other modifications in the python scripts. It works with python3. As far as the C++ code is concerned, I only added the possibility to separate the symmetry boundary conditions for the fluid solver from the ones of the mesh solver. There is an explanation of this modification in the ReadMe file in SU2_PY/FSI_tools, together with an example of application. . The interface is still general and new structural solvers can be coupled by adding it to the fsi_computation.py file. With the present pull request I only include one structural solver, which provides a coupling with the commercial code Nastran. I added ReadMe files to explain in detail all the modifications and also the keywords to be used in the config files. Finally, there is also a complete test case where the flutter of a flat plate is studied. I am looking forward for your comments. Nicola. ## PR checklist. - [X] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags, or simply --warnlevel=2 when using meson).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [X] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1124:1015,coupling,coupling,1015,https://su2code.github.io,https://github.com/su2code/SU2/pull/1124,2,"['config', 'coupling']","['config', 'coupling']"
Modifiability,"## Summary; The fluid should freely pass a fluid interface between RANS zones. However, in some unsteady 2D simulations, I encountered the interface generating unexpected flow solutions which is observed through the increased eddy viscosity and unphysical velocity as the inner zone rotates with respect to the stationary outer zone. I have tried using; - a finer mesh with more cells on the zone interface,; - the incompressible and compressible RANS solvers, ; - smaller time steps and more pseudo-time iterations,; - different interface interpolation methods (NEAREST_NEIGHBOR and WEIGHTED_AVERAGE),; - different convective numerical methods (upwind/central and with and without MUSCL_FLOW). however the problem persisted. ## Setup. ### Mesh; <img width=""600"" alt=""Screenshot 2024-03-30 at 10 28 21"" src=""https://github.com/su2code/SU2/assets/81166192/6e5a8fcf-fd72-41ed-a5cf-b2a477a55b0a"">. _File_: ; [vawt_ami.su2](https://github.com/su2code/SU2/files/14811551/vawt_ami.txt). ### Configuration files; _su2Config.cfg_:; ```; SOLVER= INC_RANS; KIND_TURB_MODEL= SST; MATH_PROBLEM= DIRECT; CONFIG_LIST= (zone_sta.cfg, zone_rot.cfg). INNER_ITER= 1; OUTER_ITER= 20; TIME_ITER= 3160. TIME_DOMAIN= YES; TIME_MARCHING= DUAL_TIME_STEPPING-2ND_ORDER; TIME_STEP = 0.000593412; MAX_TIME= 50.0. INC_DENSITY_INIT= 1.225; INC_VELOCITY_INIT= ( 10.0, 0.0, 0.0 ); INC_TEMPERATURE_INIT= 288.15; INC_INLET_TYPE= VELOCITY_INLET; INC_OUTLET_TYPE= PRESSURE_OUTLET. REF_ORIGIN_MOMENT_X = 0.00; REF_ORIGIN_MOMENT_Y = 0.00; REF_ORIGIN_MOMENT_Z = 0.00; REF_LENGTH= 0.85; REF_AREA= 1.7. VISCOSITY_MODEL= CONSTANT_VISCOSITY; MU_CONSTANT= 1.8375E-5. MARKER_ZONE_INTERFACE= ( AMI1, AMI2 ); MARKER_FLUID_INTERFACE= ( AMI1, AMI2 ); KIND_INTERPOLATION= NEAREST_NEIGHBOR. NUM_METHOD_GRAD= WEIGHTED_LEAST_SQUARES; CFL_NUMBER= 20.0; MAX_DELTA_TIME= 1E6. SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; MUSCL_TURB= NO; SLOPE_LIMITER_TURB= VENKATAKRISHNAN; VENKAT_LIMITER_COEFF= 0.05; REF_SHARP_EDGES = 3.0; SENS_REMOVE_SHARP = NO; LIMITER_ITER= 9",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255:985,Config,Configuration,985,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255,1,['Config'],['Configuration']
Modifiability,"## V&V; Now we have a regression script dedicated to the V&V examples see #1538; I have added a high-lift case to the website ([here](https://github.com/su2code/su2code.github.io/pull/71), and [here](https://su2code.github.io/vandv/30p30n/)).; I think that to avoid the [issue of outdated files](https://github.com/su2code/VandV/pull/3) in V&V repo, the best strategy is to add only meshes and documentation to the V&V repo (without duplicating the website). Then anything needed to run the case should be put under regression (via the TestCases and SU2 repos as usual).; If the meshes are too large for GitHub, and are not publicly available elsewhere, we can use the SU2 Foundation Google drive. The config files can be forced to remain updated by running them in --dry_run mode in the V&V regressions. So I think the next steps would be:; - Revive the configs of the [other V&V cases](https://github.com/su2code/VandV) and put them under regression.; - Add V&V for other areas. So if you have ever done any V&V of an SU2 feature not covered yet please consider **adding the data to the V&V repo, the results to the website, and creating a minimal regression test** for it. If you have never done any V&V, please consider reviving one of the existing ones.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507:702,config,config,702,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487#issuecomment-1032966507,2,['config'],"['config', 'configs']"
Modifiability,"### Discussed in https://github.com/su2code/SU2/discussions/1877. <div type='discussions-op-text'>. <sup>Originally posted by **ChristianBauerEng** January 5, 2023</sup>; I would like to monitor the average fluid temperatures in parts of the domain volume. For example here i the part marked red.; ![grafik](https://user-images.githubusercontent.com/42602495/210860583-4e521476-096e-454c-9824-33de652b8e40.png); </div>. In the discussion it became clear, that surface-averages and integrals are supported by means of specifying an MARKER_INTERNAL in the mesh. Could it be possible to extend this functionality to support also volume-elements for MARKER_INTERNAL?. Which code changes would be required to make this happen?. Kind regards,. Christian",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1894:584,extend,extend,584,https://su2code.github.io,https://github.com/su2code/SU2/issues/1894,1,['extend'],['extend']
Modifiability,"### Discussed in https://github.com/su2code/SU2/discussions/2101. <div type='discussions-op-text'>. <sup>Originally posted by **albenstein** July 26, 2023</sup>; *If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 7.9)]; - C++ compiler and version: [e.g., g++ (GCC) 8.5.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.5.1]. When I use SU2 with QuickStart config file with OpenMPI, it gives error like in attached file.; Command is:; `mpirun -np 8 --allow-run-as-root SU2_CFD inv_NACA0012.cfg`. [segmentation_fault.txt](https://github.com/su2code/SU2/files/12170716/segmentation_fault.txt); </div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2103:483,config,config,483,https://su2code.github.io,https://github.com/su2code/SU2/issues/2103,2,['config'],['config']
Modifiability,"#### Verification. The NTS method sets the value of the `Roe_Dissipation`, or the central/upwind blending constant. In this context, 1 = upwind scheme, 0 = central scheme. The NTS method was explicitly designed to make `Roe_Dissipation`:. + Go to 1 in attached boundary layers; + Go to 1 in irrotational regions, even if strain is present (i.e., the freestream); + Go to 0 in regions with high vorticity. Below is an example result from the backward facing step problem. The figure compares the current develop branch with the branch from the PR. Something definitely looks wrong with the current develop branch, but the PR looks much better. All three goals seem to be met. ![nts_comparison](https://user-images.githubusercontent.com/13340225/45257129-ccdef500-b366-11e8-88b6-a1d1df38e8fc.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/577#issuecomment-419661485:270,layers,layers,270,https://su2code.github.io,https://github.com/su2code/SU2/pull/577#issuecomment-419661485,1,['layers'],['layers']
Modifiability,"$? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #d",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12019,config,configure,12019,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,'Custom' Design variable,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/215:16,variab,variable,16,https://su2code.github.io,https://github.com/su2code/SU2/pull/215,1,['variab'],['variable']
Modifiability,"('%dd'%(nvar*ndof),data[start:end])); 	array = array.reshape(ndof,nvar). 	# The last two values are for metadata: one int for ExtIter and 8 su2doubles.; 	# Metadata: 1 int for ExtIter and 8 doubles; 	#ncount = len(data) - nvar*ndof*8 - 4 - 64; 	ExtIter = struct.unpack('i',data[end:end+4])[0]; 	metadata = struct.unpack('8d',data[end+4:end+4+8*8]). 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':ExtIter, 'MetaData':metadata}; 	return data_file. def read_restart_ascii(filename):; 	""""""; 	; 	""""""; 	infile = open(filename, 'r'); 	header = infile.readline(); 	variables_names = header.replace(""\"""","" "").replace(""\t"", "" "").strip().split()[1:]; 	infile.close(); 	; 	array = np.loadtxt(filename, skiprows = 1). 	array = array[:,1:]; 	; 	# Create dictionary; 	data_file = {'names':variables_names,'data':array, 'ExtIter':0, 'MetaData':[]}	; 	return data_file. def write_restart_binary(data_file,filename=""solution_flow_bin.dat""):; 	"""""". 	""""""; 	fout = open(filename,'wb'). 	# The first is a magic number that we can use to check for binary files (it is the hex; 	# representation for ""SU2"").; 	fout.write(struct.pack('i', 535532)). 	# The second two values are number of variables and number of points (DoFs).; 	nvar = data_file['data'].shape[1]; 	ndof = data_file['data'].shape[0]; 	fout.write(struct.pack('i', nvar)); 	fout.write(struct.pack('i', ndof)); 	fout.write(struct.pack('i', 1)); 	fout.write(struct.pack('i', 8)). 	# Write the variable names of the file. Note that we are adopting a; # fixed length of 33 for the string length to match with CGNS.; 	for variable_name in data_file['names']:; 		fout.write(struct.pack('33s', variable_name)); 	; 	# Write the entire data in one shoot; 	fout.write(struct.pack('%dd'%(nvar*ndof), *data_file['data'].flatten())). 	# Write ExtIter and Metadata; 	fout.write(struct.pack('i',data_file['ExtIter'])); 	for i in range(8):; 		fout.write(struct.pack('d', data_file['MetaData'][i])); 	fout.close(). 	return None; # ----------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-528461173:2694,variab,variables,2694,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-528461173,2,['variab'],"['variable', 'variables']"
Modifiability,(121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPU,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18007,plugin,plugins,18007,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,(307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUns,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15077,plugin,plugins,15077,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"(I don't usually build the python wrapper locally); On Ubuntu 18 (GCC 7.5) I can confirm the same problem linking the python wrapper library with default meson options.; However, passing -fPIC in CXXFLAGS and LDFLAGS solves the issue, clang-10 does not have this fPIC problem, and looking around I found other reports of this issue being particular to GCC (https://github.com/xoreaxeaxeax/rosenbridge/issues/1). Maybe in your case the environment variables are not making it to the compiler wrapper? (it looks like you are using a cluster and they can be funny...) Try giving a wrong value to CXXFLAGS (e.g. fPIK), meson should fail when it tests the compiler. So in summary I don't think we should change the defaults of the build system, but I'll ask other devs if they've had the same problem.; I'll change the tittle to make it easier for folks with the same issue to find this.; Please do let us know what solution you find, we may at least add a warning to ours doc.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714:447,variab,variables,447,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568#issuecomment-1076433714,1,['variab'],['variables']
Modifiability,"(Krylov solvers, sparse approximate factorizations, etc.) is relatively independent from what I have in mind.; Nevertheless being able to use PETSc or HYPRE would be interesting as it would give us access to AMG, and @talbring 's branch feature_template_linear_solver would make such an integration compatible with AD.; What I would like is to have a ""CMatrixDense"" class, to give concrete examples:; - For RBF interpolation the guy who worked on it before me implemented his own Cholesky and LU factorizations, matrix-matrix, matrix-vector routines, etc.; - @jayantmukho recently needed some eigenvector decomposition's for the uncertainty quantification feature.; - I imagine in some other places of the code similar routines were needed, for example small matrix inversion when computing gradients by weighted least squares (indeed what I need now is a QR decomposition). And, as an added bonus, I think some other areas of the code could be simplified / optimized by adopting a dense matrix format, for example:; - This snipped from the viscous numerics refactoring`for (iDim = 0; iDim < nDim; iDim++) {; TauElem[iDim] = 0.0;; for (jDim = 0; jDim < nDim; jDim++); TauElem[iDim] += tau[iDim][jDim]*UnitNormal[jDim];; }` would simply become `TauElem=tau*UnitNormal`; - Cumbersome allocations like `tau_jacobian_i = new su2double* [nDim];; for (iDim = 0; iDim < nDim; iDim++) {; tau_jacobian_i[iDim] = new su2double [nVar];; }` become `Matrix tau_jacobian_i(nDim,nVar);` and the cleanup is dealt with by the destructor of the object automatically. Now to answer some questions.; @juanjosealonso @erangit LAPACK and BLAS are indeed the standard, so much so that most (all?) newer libraries will call their routines behind the scenes.; However they considerably simplify the user interface by encapsulating the aforementioned construction/destruction and by exposing natural ways of manipulating the matrices, e.g. access entire rows, columns, blocks, etc.; Another issue with using BLAS routines is th",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459653772:1257,refactor,refactoring,1257,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459653772,2,['refactor'],['refactoring']
Modifiability,"(new user here and apologies if this has been raised/addressed before). I want to perturb the Hicks and Henne bump function design variables and write out the airfoil shape, __without running the primal or adjoint solvers__. So I want to implement `Y = f(X)` where `X` is the vector of Hicks and Henne bump function weights and `Y` is a vector of the actual `y` coordinate of the airfoil at each `x` corresponding to an element of `X`. Is there a script that already exists to this effect? If so can you share that with me? If not do you have suggestions as to how to implement this? Thank you!",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1234:131,variab,variables,131,https://su2code.github.io,https://github.com/su2code/SU2/issues/1234,1,['variab'],['variables']
Modifiability,) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/Ca,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18658,plugin,plugins,18658,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,") |; -------------------------------------------------------------------------; | Copyright 2012-2022, SU2 Contributors (cf. AUTHORS.md) |; | |; | SU2 is free software; you can redistribute it and/or |; | modify it under the terms of the GNU Lesser General Public |; | License as published by the Free Software Foundation; either |; | version 2.1 of the License, or (at your option) any later version. |; | |; | SU2 is distributed in the hope that it will be useful, |; | but WITHOUT ANY WARRANTY; without even the implied warranty of |; | MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU |; | Lesser General Public License for more details. |; | |; | You should have received a copy of the GNU Lesser General Public |; | License along with SU2. If not, see <http://www.gnu.org/licenses/>. |; -------------------------------------------------------------------------; Found: mesh_NACA64A010_turb.su2; New Project: ./; Sequential Least SQuares Programming (SLSQP) parameters:; Number of design variables: 50 ( 50 ); Objective function scaling factor: [1.0]; Maximum number of iterations: 100; Requested accuracy: 1.0000000000000001e-11; Initial guess for the independent variable(s): [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]; Lower and upper bound for each independent variable: [(-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), (-0.05, 0.05), ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1666:1659,variab,variables,1659,https://su2code.github.io,https://github.com/su2code/SU2/issues/1666,1,['variab'],['variables']
Modifiability,"* When installing SU2 from fresh or recompiling to update changes, the installation process always requires root permission to finish. The reason is that the binaries are installed in `/usr/local/bin`, which needs root access. The installation went well, it is just that I don't feel like entering root password everytime. . * A way to go around this would be to have the binaries installed in the bin folder in the home folder, so on Linux that would be `/home/user/bin`. Even better, we can have it creates a separate SU2bin folder, where only the binaries from SU2 will be stored. Of course, doing this would change the environmental variables as well. . * What do you all think? Is this too much hassle?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/979:637,variab,variables,637,https://su2code.github.io,https://github.com/su2code/SU2/issues/979,1,['variab'],['variables']
Modifiability,"**### MPI partitioning issues for Turbomachinery for processor count more than 6 in mpi**. I have noticed an issue with running my turbomachinery model in SU2 version 7.04, 7.1 and version 7.1.1 during the Turbomachinery preprocessing step at the ""Initialize Turbo Vertex Structure"" where it **incorrectly** calculates the number of spanwise section in zone 0 and then there is a MPI fatal error. **This happens only when I use more than 6 processors**. For less than or equal to 6 processors there is no error. I have this issue with 7.04, 7.1 and now 7.1.1. . This issue has a previous bug report in the MPI partitioning issues for Turbomachinery runs #990. I am sure the config file is correct. I have my solutions from 6 processors, but I really need to scale up the processor count so that the restitution time is within a reasonable time.; Below is an example of where it crashes for 7 processors: ; ### WITH 7 processors:; ---------------------- Turbomachinery Preprocessing ---------------------. Initialize Turbo Vertex Structure.; **_Number of span-wise sections in Zone 0: 139. [This is incorrect number of span-wise sections]_**; Max number of span-wise sections among all zones: 139.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; [1:node0567] unexpected disconnect completion event from [0:node0564]; [3:node0566] unexpected disconnect completion event from [0:node0564]. ### WITH 6 processors:; Initialize Turbo Vertex Structure.; **Number of span-wise sections in Zone 0: 137. [This is the correct number of span-wise sections]**; Max number of span-wise sections among all zones: 137.; Initialize solver containers for average and performance quantities.; Compute inflow and outflow average geometric quantities.; Transfer average geometric quantities to zone 0.; Inlet area for Row 1: 30.7045 cm^2.; Oulet area for Row 1: 16.9716 cm^2.; Recomputed number of blades for Row 1: 36.; Initialize inflow an",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219:674,config,config,674,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219,1,['config'],['config']
Modifiability,"**Context**; I am working in a parallel MDO framework where one or several instances of SU2 (corresponding to different operating cases) can coupled with other solvers and tools, to perform coupled aero-structural shape optimisation. . The framework initialises MPI and assigns processors to the different solvers and tools as required. The SU2 instances are initialised and controlled through Python, and given a communicator for the relevant subset of the MPI processes. . **Issue**; Shape optimisation with SU2 (using discrete adjoints) require four operations at each major optimisation iteration:. 1. `SU2_DEF`: Deform the mesh according to the new design variables (or _design deformations_, in contrast to e.g. the _structural deformations_ in an aeroelastic analysis), and output the deformed mesh to file,; 2. `SU2_CFD`: Update the primal solution, which may include a mesh deformation due to structural deformations in an aeroelastic analysis, and output the converged state to file,; 3. `SU2_CFD_AD`: Update the discrete adjoint solution corresponding to the converged primal solution, once for each objective function of interest, and output the converged adjoints to file,; 4. `SU2_DOT_AD`: Calculate the surface sensititivities from the discrete adjoint solution (from what I can gather, this step is required in the discrete-adjoint sensitivity analysis to account for the in-direct influence surface deformations have on the objective through the volume deformation; essentially a differentiation of `SU2_DEF`), and output these to file. Currently, the SU2 Python wrapper exposes _driver_ classes which allow control of the execution of steps 2 and 3 described above, namely `CSinglezoneDriver` and `CDiscAdjSinglezonedriver` (among other variants). For steps 1 and 4 however, there is no such option: these steps must be executed by a ""command-line call"" in a newly spawned sub-process, as is done in the SU2 Python tools, in `SU2.run.DEF` and `SU2.run.DOT` respectively. However, spa",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262:661,variab,variables,661,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262,1,['variab'],['variables']
Modifiability,"**Describe the bug**. Hi SU2 developers,. I will consider this as a possible bug until I hear the opinion of the SU2 community. As a validation test case for turbulence models, I am running the NASA Hump test case (https://turbmodels.larc.nasa.gov/nasahump_val.html). However, the results obtained from the develop and master branch are quite different, specially the pressure distribution over the hump. The same difference also appears when other numerical scheme is used (SLAU2 instead of Roe). On the other hand, the skin friction seems not be affected. Please see attached figures. Also, I attached the plot of the residual over iterations, showing that all simulations converged nicely. Firstly, I thought that this was related to pull request #670 but I ran the same case with an older version of the dev branch and the results were identical. This suggest that the difference started from pull requests that were merged before #670. I also attached the config and mesh files if someone wants to reproduce. Thanks to Danah Park (PhD student) for pointed me out. I appreciate your time and feedback. Best,. Eduardo. ![rans_cf_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551958-7113dc80-aa0b-11e9-8074-7d754d36a99c.png); ![rans_cf_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551959-7113dc80-aa0b-11e9-83c2-918d89d26f07.png); ![rans_cp_compare-branch_roe](https://user-images.githubusercontent.com/9790985/61551960-71ac7300-aa0b-11e9-9f1a-e1be993377cb.png); ![rans_cp_compare-branch_slau2](https://user-images.githubusercontent.com/9790985/61551962-71ac7300-aa0b-11e9-80c6-2ee9390e61f9.png); ![rans_rho0Res_compare-branch](https://user-images.githubusercontent.com/9790985/61551963-71ac7300-aa0b-11e9-962a-7ea04a98ecd4.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [hump_ddes_full.su2.gz](https://github.com/su2code/SU2/files/3412065/hump_ddes_full.su2.gz); [turb_SA_hum",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/735:961,config,config,961,https://su2code.github.io,https://github.com/su2code/SU2/issues/735,1,['config'],['config']
Modifiability,"**Describe the bug**. Hi, everyone. I'm trying to using hybrid rans/les method in my work. However, it seems that the implementation of SA_EDDES length scale in su2 is different from the paper, so I wonder whether it is a bug or just for the sake of experience. The relevant code locate in the void SetDES_LengthScale() function in SU2_CFD/src/solvers/CTurbSASolver.cpp， in line 1480 to 1495 the vorticity-adaptive SGS is calculated. But different for the published function, the absolute value of edge vector between vertex i and j are used and such a form seems unphysical. 1480 ln_max = 0.0;; 1481 deltaDDES = 0.0;; 1482 for (iNeigh = 0;iNeigh < nNeigh; iNeigh++){; 1483 jPoint = geometry->nodes->GetPoint(iPoint, iNeigh);; 1484 coord_j = geometry->nodes->GetCoord(jPoint);; 1485 for (iDim = 0; iDim < nDim; iDim++){; 1486 delta[iDim] = fabs(coord_j[iDim] - coord_i[iDim]); //why absolute value; 1487 }; 1488 deltaDDES = geometry->nodes->GetMaxLength(iPoint);; 1489 ln[0] = delta[1]*ratioOmega[2] - delta[2]*ratioOmega[1];; 1490 ln[1] = delta[2]*ratioOmega[0] - delta[0]*ratioOmega[2];; 1491 ln[2] = delta[0]*ratioOmega[1] - delta[1]*ratioOmega[0];; 1492 aux_ln = sqrt(ln[0]*ln[0] + ln[1]*ln[1] + ln[2]*ln[2]);; 1493 ln_max = max(ln_max,aux_ln);; 1494 vortexTiltingMeasure += nodes->GetVortex_Tilting(jPoint);; 1495 }. Any help would be appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1462:406,adapt,adaptive,406,https://su2code.github.io,https://github.com/su2code/SU2/issues/1462,1,['adapt'],['adaptive']
Modifiability,"**Describe the bug**. I am unable to complete the compilation of SU2 v7.3.0 on Fedora 35 using the GCC compiler.; There is a problem when trying to link with the system's libz library. ```; /usr/bin/ld: /usr/lib64/libz.a(deflate.o): warning: relocation against `z_errmsg' in read-only section `.text'; /usr/bin/ld: /usr/lib64/libz.a(zutil.o): relocation R_X86_64_PC32 against symbol `z_errmsg' can not be used when making a shared object; recompile with -fPIC; /usr/bin/ld: final link failed: bad value; collect2: error: ld returned 1 exit status. ```; **To Reproduce**. I configured the source code with the commands:. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Bu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:573,config,configured,573,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['config'],['configured']
Modifiability,"**Describe the bug**. When compiling SU2 7.1.1 Blackbird from the Develop Branch with Pastix support, the build fails at Common/src/libSU2CommonAD.a.p/wall_model.cpp.o with a c++ error saying unrecognized command-line-option '-fexceptions;-pthread'. Here is a snip from the error message: ; ![image](https://user-images.githubusercontent.com/24353606/128623331-461f0ded-4b4d-4ece-83e8-b2eb40e9129d.png). **To Reproduce**; Basically I download the develop branch from SU2 7.1.1,; extract it and configure using:; ![image](https://user-images.githubusercontent.com/24353606/128623382-55f4bc2e-e971-4b1d-81bf-626fc9ae484d.png). **Desktop (please complete the following information):**; - OS: Fedora 34; - C++ compiler and version: g++ (GCC) 11.2.1; - MPI implementation and version: OpenMPI-4.1.1; - SU2 Version: 7.1.1-Develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349:494,config,configure,494,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349,1,['config'],['configure']
Modifiability,"**Describe the bug**. You will have to bear with me, I might get some of this wrong, I am not entirely sure what is going on here so I will try and include as much information as possible. Using the tape tagging method developed by @oleburghardt in #2343 and presented at the most recent SU2 Conference, a run of the full tape reveals that a variable used in a preaccumulation output is not properly recorded. The variable is the `val` in the function `PassiveAssign` in `CSysMatrix.hpp` line 215. `FORCEINLINE static ScalarType PassiveAssign(const SrcType& val) {; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:342,variab,variable,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,3,['variab'],"['variable', 'variables']"
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/855:221,config,config,221,https://su2code.github.io,https://github.com/su2code/SU2/issues/855,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. As I used SU2 develop version for shape optimization, it gave a keyerror in TestCase ; disc_adj_rans/naca0012, ; shape_optimization.py -f turb_NACA0012_sa.cfg; and disc_adj_rans/cylinder,; shape_optimization.py -f cylinder_Windowing.cfg. I have compiled SU2 with AD enabled. ; Also try disc_adj_turbomachinery/transonic_stator_2d, gave the same error.; I would like to know if I make some mistakes to run the testcases. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Found: mesh_cylinder.su2; New Project: ./; Traceback (most recent call last):; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 164, in __getitem__; return super(Config,self).__getitem__(k); KeyError: 'OPT_OBJECTIVE'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/home/wkholy/su2/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/home/wkholy/su2/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/home/wkholy/su2/bin/SU2/opt/project.py"", line 114, in __init__; def_objs = config['OPT_OBJECTIVE']; File ""/home/wkholy/su2/bin/SU2/io/config.py"", line 166, in __getitem__; raise KeyError('Config parameter not found: %s' % k); KeyError: 'Config parameter not found: OPT_OBJECTIVE'. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 6.6)]; - C++ compiler and version: [e.g., g++ (GCC) 4.8.5]; - MPI implementation and version: [e.g., OpenMPI 3.0.0]; - SU2 Version: [e.g., v6.2.0]. Ubuntu 20.04; C++ gcc version 9.4.0; SU2 version 7.3.1 develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1714:641,config,config,641,https://su2code.github.io,https://github.com/su2code/SU2/issues/1714,8,"['Config', 'config']","['Config', 'config']"
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi all,. The STL-file writer does not write quad surface elements (So far so good :) ). So in case of a Hexa-Grid (i.e. quad surface elements) the .stl is pretty much empty, which is not really what we want.; I will attach an image later (firewall's at it again) down below which shows a mixed surface mesh (tris and quads). On the left will be the current version of SU2 where quads are simply not written and on the right a fixed version where each quad is separated into 2 tris. ![stl_quads_tris](https://user-images.githubusercontent.com/31306376/58827759-17667700-8644-11e9-9e6f-4643d2e7fdb7.JPG). That was found (and fixed) by Fabian Woerenkaemper @ElGarno . As the output is currently overhauled, I shortly chatted with its adoptive father @talbring and I will adapt the fixed STL-writer to the new structure and it will (hopefully) go into develop with that in a somewhat near future. If you desperately ;) need that fix right now, I can add a patch for the current develop down below. Cheers, Tobi. **Desktop (please complete the following information):**; - SU2 Version: latest develop, but this problem is probably also present in older versions.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/694:953,adapt,adapt,953,https://su2code.github.io,https://github.com/su2code/SU2/issues/694,1,['adapt'],['adapt']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Hi,. I am currently using SU2 to do some test cases for AIAA 1st Stability and Control Workshop. These cases need to run with a fixed-Cl as the DPW6 cases did. When I tried to use the knobs “FIXED_CL_MODE= YES” and “TARGET_CL= 0.50” in the .cfg input file to run these cases, the Cl change always got some odd significant jumps even though the AoA change was quite small and then the computations diverged after a while. . I am not sure if I used a correct way for the fixed-Cl computations (no optimization and design needed). I know some reported research did use SU2 for DPW6 cases with fixed-Cls. . Thank you very much!. Wei. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; % %; % SU2 configuration file %; % Case description: CRM model for S&C workshop %; % Author: %; % Institution: %; % Date: %; % File Version 7.1.1 ""Blackbird"" %; % %; %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%. % ------------- DIRECT, ADJOINT, AND LINEARIZED PROBLEM DEFINITION ------------%; %; % Physical governing equations (EULER, NAVIER_STOKES,RANS,; % WAVE_EQUATION, HEAT_EQUATION, FEM_ELASTICITY,; % POISSON_EQUATION) ; SOLVER= RANS; %; % Specify turbulence model (NONE, SA, SA_NEG, SST); KIND_TURB_MODEL= SST; %; % Mathematical problem (DIRECT, CONTINUOUS_ADJOINT, DISCRETE_ADJOINT); MATH_PROBLEM= DIRECT; %; % Restart solution (NO, YES); RESTART_SOL= YES; %; % System of measurements (SI, US); % International system of units (SI): ( meters, kilograms, Kelvins,; % Newtons = kg m/s^2, Pascals = N/m^2, ; % Density = kg/m^3, Speed = m/s,; % Equiv. Area = m^2 ); % United States customary units (US): ( inches, slug, Rankines, lbf = slug ft/s^2, ; % p",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1297:851,config,config,851,https://su2code.github.io,https://github.com/su2code/SU2/issues/1297,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. I am running a WMLES channel flow test case with grid size 102 x 31 x 52 = 164424 nodes. When running the problem on a large number of cores, e.g. 128 cores, SU2 fails during the preprocessing step. Running valgrind gives the error; ![image](https://user-images.githubusercontent.com/41386609/97629439-580a2180-19eb-11eb-9e9f-023fc96c05aa.png); which for my version corresponds to this line; ![image](https://user-images.githubusercontent.com/41386609/97629473-66f0d400-19eb-11eb-89c8-9b677c720240.png); It seems that theres a mismatch on the receiver end. The problem disappears if I use smaller number of cores, e.g. 64, and everything will look normal (solution converges and SU2 exit normally). The actual number of MPI cores that triggers the bug seems to be problem dependent. I also ran a couple of finer grids but started to see the bug with 64 cores. For these finer mesh, reducing to a smaller number like 48 cores makes the problem disappear again. Similar problem has been observed by @clarkpede and mentioned in pecos-hybrid/su2#53 but he was using an older version of SU2 (v6.2.0). I should mention another common thing is that we are both using periodic boundary conditions. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wmles_chan_re5200.zip](https://github.com/su2code/SU2/files/5461150/wmles_chan_re5200.zip); (Reminder: This has to be ran with very large number of cores though. I see the problem with 128 cores). **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810; - C++ compiler and version: gcc/6.3.0 ; - MPI implementation and version: openmpi/3.1.2; - SU2 Version: v7.0.3",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1099:1411,config,config,1411,https://su2code.github.io,https://github.com/su2code/SU2/issues/1099,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. Python wrapper hangs on Set_MPI_ActDisk in CEulerSolver.cpp line 1091 ""SU2_MPI::Barrier(MPI_COMM_WORLD);""; If the SU2_CFD is called without python wrapper, it runs ok. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. Go to the test case solver, choose the propeller one and run the following script. mpirun -np 2 python launch_su2.py --parallel -f propeller.cfg; [launch_su2.py.txt](https://github.com/su2code/SU2/files/5762218/launch_su2.py.txt). There is no issue when SU2_CFD is called directly:; mpirun -np 2 SU2_CFD propeller.cfg. **Desktop (please complete the following information):**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ (GCC) 9.3.0]; - MPI implementation and version: [OpenMPI 4.0.5]; - SU2 Version: [develop]; - Python Version: 3.6.12; - MPI4Py Version: 3.0.3. In order to fully reproduce the error one can try running the following commands under Anaconda Python Manager, although the same error appears using the default ubuntu python3 and openmpi compilers :; ->conda create -n su2code python=3.6; ->conda activate su2code; ->conda install -c conda-forge c-compiler compilers cxx-compiler openmpi swig mpi4py numpy scipy. Install SU2 with the following script:. #!/bin/bash; export CC=/path/anaconda3/envs/su2code/bin/mpicc; export CXX=/path/anaconda3/envs/su2code/bin/mpicxx; export CXXFLAGS=${CXXFLAGS}:""-lmpi""; rm -rf SU2/build; rm -rf SU2_exec_dev/bin; cd SU2; ./meson.py build -Denable-pywrapper=true -Dcustom-mpi=true --prefix=/path/SU2_exec_dev; ./ninja -C build install",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1150:389,config,config,389,https://su2code.github.io,https://github.com/su2code/SU2/issues/1150,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. This issue is a follow-up of a discussion here: https://www.cfd-online.com/Forums/su2/241889-rotating_frame-grid-velocity-correct-flow-physics-wrong.html. Summary: To calculate an aircraft during pitch-up as a steady Euler simulation, I use the dynamic / moving mesh module with GRID_MOVEMENT= STEADY_TRANSLATION and/or ROTATING_FRAME and set the farfield mach number = 0.0. The results look fine, but when reading the nodal forces f_xyz on the surface via pysu2 and GetFlowLoad(), I now receive NaNs... My first idea was that maybe the forces are calculated from the pressure coefficients, which show ""strange"" values in Tecplot, probably due to the division by V_inf=0.0. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; I derived a test case from the Naca0012 example and added a short python script that should reproduce the NaNs in line 66.; [testcase_dynamic_mesh.zip](https://github.com/su2code/SU2/files/8396025/testcase_dynamic_mesh.zip). **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux Workstation 7.9; - C++ compiler and version: mpicc (gcc 4.8.5 ""gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)""); - MPI implementation and version: MPICH 3.4.2; - SU2 Version: 7.3.0 ""Blackbird""",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1588:895,config,config,895,https://su2code.github.io,https://github.com/su2code/SU2/issues/1588,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. related to #1631 . A similar fix is necessary for supersonic inlets. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1639:290,config,config,290,https://su2code.github.io,https://github.com/su2code/SU2/issues/1639,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; For axisymmetric flows where the outflow is aligned with the symmetry axis (horizontal axisymmetry, vertical outlet), the computed outlet area of the circular outlet can be off by 10%.; This is due (I think) to the fact that the node normals are used for the computation of the edge size and integrated area and mass flux. This computation is performed e.g. in CIncEulerSolver::GetOutlet_Properties. An approach where the marker edges are used instead to compute the edge sizes leads to the correct area and mass flux computations. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. **Desktop (please complete the following information):**; - SU2 Version: current develop",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1710:753,config,config,753,https://su2code.github.io,https://github.com/su2code/SU2/issues/1710,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; I try to build SU2 from source on cluster. but it failed in Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'. The log of meson build info is like the figure shows; ![image](https://user-images.githubusercontent.com/54931653/165111891-b9f26f7f-efe4-4e08-a7af-0945f916748a.png); ![image](https://user-images.githubusercontent.com/54931653/165111974-25211d0c-72e0-401e-8619-ab8c30163fd5.png); ![image](https://user-images.githubusercontent.com/54931653/165112038-98e00c96-c2fb-4662-b98d-6b7a9be4581a.png); ![image](https://user-images.githubusercontent.com/54931653/165112129-cd00f7ef-1195-4a39-86a5-608fb0b036eb.png); ![image](https://user-images.githubusercontent.com/54931653/165112177-4dbef8c9-cb54-48ec-9787-6ef7213ce934.png). when using ninja, it shows the error like the figure show; ![image](https://user-images.githubusercontent.com/54931653/165111571-a795012b-e0f4-4fb7-9f87-f78c67242a2f.png). **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; The meson command for build is; ./meson.py build -Dcustom-mpi=true -Denable-pywrapper=true --prefix=$HOME/SU2_prefix . **Desktop (please complete the following information):**; - OS: [Red Hat 8.5.0-4]())); - C++ compiler and version: [gcc 8.5.0]; - MPI implementation and version: [intel MPI]; - SU2 Version: [ v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1617:1121,config,config,1121,https://su2code.github.io,https://github.com/su2code/SU2/issues/1617,1,['config'],['config']
Modifiability,"**Describe the bug**; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*; When I build a parallel version of SU2 under Win10, I get an error like. “OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'”. I noticed that other people on Github have also raised this issue, but it hasn't been resolved, and I'm curious to know, what should I deal with it.; thanks！. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [wrong _information.txt](https://github.com/su2code/SU2/files/7734843/wrong._information.txt); [meson-info_json.txt](https://github.com/su2code/SU2/files/7734868/meson-info_json.txt). **Desktop (please complete the following information):**; - OS: [win10 ]; - C++ compiler and version: [ g++ (GCC) 8.1.0]; - MPI implementation and version: [Microsoft MPI v10.1.2]; - SU2 Version: [v7.2.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471:645,config,config,645,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471,1,['config'],['config']
Modifiability,"**Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behaviour to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. Hi all,. I posted this on the CFD forum, and one of the members mentioned it may be a bug and post it here. . I am simulating flow over an inlet at hypersonic speeds (Mach 7) in 2D using the JST scheme. I have done a mesh convergence study with an inviscid simulation and the residuals go to machine accuracy for all the meshes and works fine. I am using the Navier-Stokes solver for the viscous simulations. I have 5 meshes (very_coarse, coarse, medium, fine, very_fine) to do a mesh convergence study. The very_coarse (VC) and coarse (C) meshes converge to a residual rho of -8.5 and -9 with Cauchy on drag = -10 orders of magnitude. The finer meshes barely converge to -4 to -5, before increasing -2 where they plateau. For all of the meshes (including the converged VC and C), there is an abnormal region with a higher Mach number at the leading edge (11 for VC and 9 for C). Following one of the discussion on the CFD forum (https://www.cfd-online.com/Forums/su2/142261-anomalous-mach-number.html), I extended the domain around the leading edge, but that had no effect on this region. I played around with the 2nd and 4th coefficients in the scheme; the 4th coefficient has not effect on this region. Increasing 2nd coefficient smooths discontinuities, so it decreases the Mach number in those regions but its still higher than freestream. Increasing the 2nd coefficient also makes the shock resolution in the rest of the flow field very smooth (looks like a smudge on the screen). Is there a reason why this happens? I did a few first order upwind simulations; they converge almost instantly and the higher Mach region does not exist. Nor does it exist in 2nd order upwind sc",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2330:214,config,config,214,https://su2code.github.io,https://github.com/su2code/SU2/issues/2330,1,['config'],['config']
Modifiability,"**Describe the bug**; *This is not a bug, rather it is a defect in the implementation of the symmetry boundary conditions. The pressure field show imperfections in the vicinity of the symmetry plane whereas the temperature field seems to be fine, as can be seen in the attached figure. Of note, although the attached result and corresponding config and mesh file belong to SU2-NEMO (i.e. non-equilibrium), this problem exists for the SU2 branch, based on private communication with @WallyMaier and @jtneedels. This case is Argon flow over a cylinder at Mach 7.68 with a freestream pressure of 50Pa.*. **To Reproduce**; *Please find the attached config and mesh file.*. [configmesh.zip](https://github.com/su2code/SU; ![SymmetryPlaneDefect](https://user-images.githubusercontent.com/104862595/166668880-2c0ba583-b276-4759-9ded-0b977e0658dc.png); 2/files/8619649/configmesh.zip)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1625:342,config,config,342,https://su2code.github.io,https://github.com/su2code/SU2/issues/1625,4,['config'],"['config', 'configmesh']"
Modifiability,"**Describe the bug**; 1. Please update config template. Now the physical problem choices in config template file still indicate that users have (EULER, NAVIER_STOKES, FEM_EULER, FEM_NAVIER_STOKES, FEM_RANS, FEM_LES,; **WAVE_EQUATION**, **HEAT_EQUATION**, FEM_ELASTICITY,; **POISSON_EQUATION**) to choose, where Wave and Poisson have expired, while Heat_Equation needs to be typed in as **HEAT_EQUATION_FVM**. 2. HEAT_EQUATION_FVM hard to run standalone; There is no example demonstrating how to use HEAT_EQUATION_FVM as the physical kernel. Users don't know how to configure. And there seem to be bugs while using HEAT_EQUATION_FVM physical kernel. ![2019-09-01 22-26-35 的屏幕截图](https://user-images.githubusercontent.com/33152225/64077943-c4b25f00-cd07-11e9-92cb-36fb96d97c69.png). **Reproduce**. Here are configuration files for developers to debug. [heat_wedge_HLLC.zip](https://github.com/su2code/SU2/files/3563624/heat_wedge_HLLC.zip). **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 19.04); - C++ compiler and version: g++ (GCC) 8.3.0; - MPI implementation and version: no MPI; - SU2 Version: v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/783:39,config,config,39,https://su2code.github.io,https://github.com/su2code/SU2/issues/783,4,['config'],"['config', 'configuration', 'configure']"
Modifiability,"**Describe the bug**; 1.; *A clear and concise description of what the bug is and what you expect the behavior to be instead. If applicable, add screenshots to help explain your problem.*. When I tried to run the TestCases/disc_adj_turbomachinery/transonic_stator_2D, it showed the error.; Seem the error was reported in https://github.com/su2code/SU2/issues/889.; But in version 7.3.1, it still has similar issues.; May I ask how to use updateHistoryMap.py to add custom objectives? Thanks. raceback (most recent call last):; File ""/usr/local/bin/shape_optimization.py"", line 183, in <module>; main(); File ""/usr/local/bin/shape_optimization.py"", line 92, in main; shape_optimization( options.filename ,; File ""/usr/local/bin/shape_optimization.py"", line 155, in shape_optimization; project = SU2.opt.Project(config,state); File ""/usr/local/bin/SU2/opt/project.py"", line 129, in __init__; group = historyOutFields[this_obj]['GROUP']; KeyError: 'ENTROPY_GENERATION'. 2; When I run the case in TestCases/turbomachinery/axial_stage_2D, the value for Total-Total Eff is increased with the total iterative step. When I set Number of total iterations = 3000, the EFF is increased than Number of total iterations =1000. But the pressure ratio remains unchanged. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*. TestCases/turbomachinery/axial_stage_2D. **Desktop (please complete the following information):**; - OS: [e.g., Linux (Ubuntu 20.04)]; - C++ compiler and version: [e.g., g++ (GCC) 9.4.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1628:810,config,config,810,https://su2code.github.io,https://github.com/su2code/SU2/issues/1628,2,['config'],['config']
Modifiability,"**Describe the bug**; After defining the FFD box correctly, using SU2_DEF, the *shape_optimization.py* script was launched to perform adjoint optimization of an internal flow over airfoil. The following error is printed out by SU2:; [SU2_error.txt](https://github.com/su2code/SU2/files/10999828/SU2_error.txt). The .cfg file attached below is largely inspired by the Onera test case already published in the tutorial collection. ; However, I checked the code looking for some issues that my configuration might have caused and I couldn't find any (to my knowledge). It seems the solver has issues converting to float-type variable my text indications for DV_PARAM option. Moreover, I tried to ""play"" with the values related to DV_PARAM and no difference was noted. The same issue was experienced both in version 7.5.0 and 7.5.1 regardless of running a pre-compiled version (Microsoft) or the built-from-source version (Ubuntu). **To reproduce**. [airfoil.txt](https://github.com/su2code/SU2/files/10999881/airfoil.txt); *Mesh file extension is not supported for upload*. **Bug report checklist**. - [ ✓] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [ ✓] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [ ✓] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04.0 & Microsoft; - C++ compiler and version: g++ 9.4.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: v7.5.1 & v7.5.0. *Thank you in advance for your help.*",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1970:491,config,configuration,491,https://su2code.github.io,https://github.com/su2code/SU2/issues/1970,2,"['config', 'variab']","['configuration', 'variable']"
Modifiability,"**Describe the bug**; Building SU2 with building options -Denable-pywrapper and -Dwith-mpi, The meson error occured.; Please let me know if anyone knows what to do. The part of meson-log.txt is below:. > Message: Boost sources found.; Program swig found: YES (/usr/bin/swig); Running command: /---/---/---/work/SU2/venv/bin/python3 -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include. > --- stderr ---. > Message: Using mpi4py from /---/---/---/work/SU2/venv/lib/python3.7/site-packages/mpi4py/include; Pkg-config binary for 1 is cached.; Determining dependency 'python-3.7m' with pkg-config executable '/usr/bin/pkg-config'; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --modversion python-3.7m` -> 0; 3.7; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --cflags python-3.7m` -> 0; -I/data/home/yamazaki/soft/Python-3.7.9/build/include/python3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; env[PKG_CONFIG_LIBDIR]: /---/---/---/soft/Python-3.7.9/build/lib/pkgconfig; env[PKG_CONFIG_PATH]: /opt/intel/compilers_and_libraries_2019.1.144/linux/mkl/bin/pkgconfig; Called `/usr/bin/pkg-config --libs python-3.7m` -> 0; -L/---/---/---/soft/Python-3.7.9/build/lib -lpython3.7m; WARNING: extract_all_objects called without setting recursive; keyword argument. Meson currently defaults to; non-recursive to maintain backward compatibility but; the def",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1672:588,config,config,588,https://su2code.github.io,https://github.com/su2code/SU2/issues/1672,4,['config'],['config']
Modifiability,"**Describe the bug**; Certain meshes seem to get stuck at Geometry Preprocessing: Checking the numerical grid orientation. It will remain stuck indefinitely (I've only left it for up to 20 hours, however). This has only happened to prism meshes that I've generated with Pointwise's T-Rex function. However, it only seems to affect some of them. I should mention that the geometry has a very sharp and flat wingtip - sometimes the final few cells on the wingtip become 2D flat plates rather than 3D cells. Will SU2 handle these? I notice that not all meshes with 2D tips get stuck, but all the meshes that are stuck are meshes with 2D tips. (i.e. some meshes seem to run fine.). I'm not sure if this is a bug or user error but I've also attached some images to demonstrate what I mean. I hope this helps.; ![Screenshot from 2019-05-17 17-20-26](https://user-images.githubusercontent.com/16842258/57913834-66807e00-78c8-11e9-9899-c96b10d14c7e.png); ![Screenshot from 2019-05-17 17-20-44](https://user-images.githubusercontent.com/16842258/57913836-66807e00-78c8-11e9-8bbe-c643994a62d4.png); ![Screenshot from 2019-05-17 17-21-11](https://user-images.githubusercontent.com/16842258/57913837-67191480-78c8-11e9-9c16-296cef99df9f.png). **To Reproduce**; This is a case which got stuck for me. I had used `mpirun -n 40 SU2_CFD inv_69deg-delta.cfg`; N.B. Added .txt to the configuration file for upload.; [inv_69deg-delta.cfg.txt](https://github.com/su2code/SU2/files/3190339/inv_69deg-delta.cfg.txt); [mesh.zip](https://www.dropbox.com/s/s3f3er9n0wv4bbf/mesh.zip?dl=0). **Desktop (please complete the following information):**; - OS: Linux (Red Hat Enterprise Linux Server release 7.3 (Maipo)); - C++ compiler and version: g++ (GCC) 4.8.5 20150623; - MPI implementation and version: Intel(R) MPI Library for Linux* OS, Version 2018 Update 2; - SU2 Version: v6.2.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683:1366,config,configuration,1366,https://su2code.github.io,https://github.com/su2code/SU2/issues/683,1,['config'],['configuration']
Modifiability,"**Describe the bug**; Coupling a turbomachinery simulation with a structural mechanic simulation seems to result in an segmentation error. I have tested the case by turning off the turbomachinery settings and it runs perfectly. However when applying markers to the inlet and outlet of the section, it returns the error. . Case: radial turbine, where i would like to calculate the stress on the blades. . _Attached: config files and log ._ ; fsi.cfg -> multiphysical file to couple both zones; rotor.cfg -> describing the compressible flow in the rotor section; blade.cfg -> structural analysis . **Bug report checklist**; - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). . **Desktop:**; - OS: Ubuntu 20.04 LS (WSL); - C++ compiler and version: 9.4.0; - MPI implementation and version: 4.0.3; - SU2 Version: 7.5.1. **Files**; [fsi.txt](https://github.com/su2code/SU2/files/12079269/fsi.txt); [configBlade.txt](https://github.com/su2code/SU2/files/12079270/configBlade.txt); [configRotor.txt](https://github.com/su2code/SU2/files/12079271/configRotor.txt); [log.txt](https://github.com/su2code/SU2/files/12079360/log.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2085:22,Coupling,Coupling,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/2085,6,"['Coupling', 'config']","['Coupling', 'config', 'configBlade', 'configRotor']"
Modifiability,"**Describe the bug**; Error at link time when compiling SU2 without mpi (""-Dwith-mpi=disabled"") with debug flags (""--buildtype=debug""). This problem does not seem to occur when compiling with release (""--buildtype=release""). Error message:; ```; /usr/bin/ld: Common/src/libSU2Common.a(interface_interpolation_CMirror.cpp.o): in function `CMirror::SetTransferCoeff(CConfig const* const*)':; /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:173: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:174: undefined reference to `MPI_STATUS_IGNORE'; /usr/bin/ld: /local/SU2/build/../Common/src/interface_interpolation/CMirror.cpp:175: undefined reference to `MPI_STATUS_IGNORE'; ```; I noticed that this method does not use any MPI preprocessor flags (i.e. this function does not make use of #ifdef HAVE_MPI); however, it's not obvious to me why switching the build type to release would solve the problem. . **To Reproduce**; Configure with meson:; ""./meson.py build --reconfigure --buildtype=debug -Dwith-mpi=disabled""; Build with ninja:; ./ninja -C build install. **Desktop (please complete the following information):**; - OS: Arch Linux 5.6.3-arch1-1; - C++ compiler and version: gcc (Arch Linux 9.3.0-1) 9.3.0; - MPI implementation and version: Open MPI 4.0.3; - SU2 Version: SU2 v. 7.0.3, branch: develop, commit: c093a62a2b",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/956:1012,Config,Configure,1012,https://su2code.github.io,https://github.com/su2code/SU2/issues/956,1,['Config'],['Configure']
Modifiability,"**Describe the bug**; I am trying to restart an unsteady RANS 2nd order dual-time stepping simulation. I set READ_BINARY_RESTART=YES but it searches for the *.csv* restart file. This happens whenever I put SOLUTION_FILENAME equal to *name.dat* or just *name*. . If *name_0000x.dat* exists in the folder then it crashes in CSolver::Restart_OldGeometry, saying that there is no *name_0000x.csv* . But if *name_0000x.dat* does not exist, then it fails in CSolver::Read_SU2_Restart_Binary, saying that there is no *name_0000(x-1).dat* (as expected). I have uploaded the mesh, the config, and the restart files. https://polimi365-my.sharepoint.com/:f:/g/personal/10507725_polimi_it/ErBtq0WVe45Eq_PFxKVQsFQBiYVWBoAoGURCxEBdkR3tAA?e=QODQkw. **Desktop (please complete the following information):**; - OS: Linux [Ubuntu 20.04.5 LTS]; - C++ compiler and version: g++ (GCC) 9.4.0; - MPI implementation and version: OpenMPI 4.0.3; - SU2 Version: v7.4.0(develop)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1800:576,config,config,576,https://su2code.github.io,https://github.com/su2code/SU2/issues/1800,1,['config'],['config']
Modifiability,**Describe the bug**; I expect a restart file to be generated by running SU2. If I include Turbomachinery markers it is not generating a restart file. I am using the transonic_stator 2D case in the Testcases directory. **To Reproduce**; The config and mesh files can be found at: ; https://mailuc-my.sharepoint.com/:f:/g/personal/baigan_mail_uc_edu/EumoIwGRZqRChSZ8NvdQpyoBPgBXZpnS_xVrPDuzZYHkxA?e=SXJov7. One config file has Turbo markers and the other has Turbo markers commented. You just have to run the two config files and see the difference. **Desktop (please complete the following information):**; - OS: [ OpenSuse 15.1]; - C++ compiler and version: [g++ > 7]; - MPI implementation and version: [N/A]; - SU2 Version: [v7.0],MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/831:241,config,config,241,https://su2code.github.io,https://github.com/su2code/SU2/issues/831,3,['config'],['config']
Modifiability,"**Describe the bug**; I have 3 different versions of SU2 on my machine and they all work (master branch, feature_turbomachinery_restruct_singlezone, feature_turbomachinery).; I wanted to try feature_TMZHB in order to study Harmonic Balance problems. However during make process I faced an error. I tried it on my laptop as well and faced exactly the same error. It occurred during compiling of geometry_structure.cpp. I don't know how to solve this issue. Thanks for your help in advance.; Koray. **To Reproduce**; Here's my configure outputs:. Build Configuration Summary:. Source code location: /home/koray/SU2_TMZHB/SU2; Install location: 	 /usr/local; Version: 6.0.1; C++ Compiler: g++; C Compiler: gcc; Preprocessor flags: ; Compiler flags: -g -O2; Linker flags: ; MPI support: no; Metis support: no; Parmetis support: no; TecIO support: yes; CGNS support: yes; HDF5 support: no; SZIP support: no; ZLIB support: no; Mutation++ support: no; Jsoncpp support: 	 no; LAPACK support: no; Datatype support:; double yes; complex no; codi_reverse no; codi_forward no. External includes: -DHAVE_CGNS -I$(top_srcdir)/externals/cgns -I$(top_srcdir)/externals/cgns/adf -DHAVE_TECIO -I$(top_srcdir)/externals/tecio/include ; External libs: $(top_builddir)/externals/cgns/libcgns.a $(top_builddir)/externals/tecio/libtecio.a . Build SU2_CFD: yes; Build SU2_DOT: yes; Build SU2_MSH: yes; Build SU2_DEF: yes; Build SU2_SOL: yes; Build SU2_GEO: yes; Build Py Wrapper: no; ################. Here are the error lines during make process:. CXX ../src/libSU2_a-dual_grid_structure.o; CXX ../src/libSU2_a-geometry_structure.o; ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::UpdateTurboVertex(CConfig*, short unsigned int, short unsigned int)’:; ../src/geometry_structure.cpp:14365:20: error: ‘HUGE’ was not declared in this scope; 14365 | su2double max = -HUGE;; | ^~~~; make[1]: *** [Makefile:857: ../src/libSU2_a-geometry_structure.o] Error 1; make[1]: Leaving directory '/home/ko",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1644:525,config,configure,525,https://su2code.github.io,https://github.com/su2code/SU2/issues/1644,2,"['Config', 'config']","['Configuration', 'configure']"
Modifiability,"**Describe the bug**; I'd like to use the FFD shape optimization feature of SU2. From a geometrical point of view the domain is very similar to the ""2 way mixing channel optimization"" tutorial example. I've therefore followed the steps of this tutorial and tested the mesh deformation with some dummy values. The result of the deformation can be seen here:; ![grafik](https://user-images.githubusercontent.com/42602495/211366671-1344820b-87f6-429f-b1d4-c396a6467440.png). The lower halve of the picture shows the original, undeformed mesh. The upper halve contains in green the original FFD box (ffd_box_0.vtk), in white the deformed FFD box and the deformed mesh (volume_deformed_0000.vtu) in blue/white. From the definition of the deformation I'd expect that the cells outside the FFD box to remain largely unchanged. Instead, here the largest deformations occur. Following the mixer-example the FFD information was added to the mesh by running SU2_DEF with a config file containing this information:; ```; %%%%%%%%%%%%%%% FFD definition %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%; FFD_DEFINITION = (BOX, \; 0.012, 0.0005, 0.0,\; 0.080, 0.0005, 0.0,\; 0.080, 0.0035, 0.0,\; 0.012, 0.0035, 0.0 ); FFD_DEGREE= (4, 1, 0); FFD_CONTROL_POINT; DV_KIND = FFD_SETTING; DV_MARKER = (NS_Resonator_Wall, NS_ResonatorTip_Wall); DV_PARAM = (1.0); ```. This added the following info to the mesh:; ```; FFD_NBOX= 1; FFD_NLEVEL= 1; FFD_TAG= BOX; FFD_LEVEL= 0; FFD_DEGREE_I= 4; FFD_DEGREE_J= 1; FFD_BLENDING= BEZIER; FFD_PARENTS= 0; FFD_CHILDREN= 0; FFD_CORNER_POINTS= 4; 0.012 0.0005; 0.08 0.0005; 0.08 0.0035; 0.012 0.0035; FFD_CONTROL_POINTS= 20; 0 0 0 0.012 0.0005 -0.5; 0 0 1 0.012 0.0005 0.5; 0 1 0 0.012 0.0035 -0.5; 0 1 1 0.012 0.0035 0.5; 1 0 0 0.029 0.0005 -0.5; 1 0 1 0.029 0.0005 0.5; 1 1 0 0.029 0.0035 -0.5; 1 1 1 0.029 0.0035 0.5; 2 0 0 0.046 0.0006 -0.5; 2 0 1 0.046 0.0005 0.5; 2 1 0 0.046 0.0036 -0.5; 2 1 1 0.046 0.0035 0.5; 3 0 0 0.063 0.0007 -0.5; 3 0 1 0.063 0.0005 0.5; 3 1 0 0.063 0.0037 -0.5; 3 1 1 0.06",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1879:962,config,config,962,https://su2code.github.io,https://github.com/su2code/SU2/issues/1879,1,['config'],['config']
Modifiability,"**Describe the bug**; I'm attempting to run coupled CHT simulations with a single fluid and a single solid zone. Both zones are read as seperate CGNS files.; In Dry-run mode everything works fine. However, when starting an actual run no matter in which order the zones are specified in the configuration list, the 2nd zone is always considered invalid:. > ------------------- Geometry Preprocessing ( Zone 1 ) -------------------; > Reading the CGNS file: MeshSolid.cgns.; > WARNING: The CGNS file version (3.31) is old and may cause high memory usage issues, consider updating the file with the cgnsupdate tool.; > CGNS file contains 1 database(s).; > Database 1, BASE#1: cell dimension of 2, physical dimension of 3.; > 1 total zone(s).; > Zone number 2 invalid. It seems this error is thrown during the CGNS import.; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/externals/cgns/cgns_internals.c#L10186-L10198. Both zones run fine individually (when adding the missing, coupled BC of course).; When the second zone is converted to SU2 format and read in the native format, the case runs normally. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; [CoupledSim.zip](https://github.com/su2code/SU2/files/8303540/CoupledSim.zip). **Desktop (please complete the following information):**; - OS: SUSE Linux Enterprise Server 15 SP1; - C++ compiler and version: intel 19.0.5.281; - MPI implementation and version: intel MPI 2019; - SU2 Version: v7.3.0 (develop)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1564:290,config,configuration,290,https://su2code.github.io,https://github.com/su2code/SU2/issues/1564,2,['config'],"['config', 'configuration']"
Modifiability,"**Describe the bug**; I'm reading the python codes of SU2-7.3.1 to figure out the whole framework of shape optimization. Here, I find a small irrational point in the definition of evalution of constraint gradients. (in SU2_PY/SU2/eval/design.py). For example, we may add a weight coefficient to each equality/inequality constraint in the .cfg file. So in the python framework, the weight will be stored in <config['OPT_CONSTRAINT']['EQUALITY']['SCALE']>, right? When we compute the constraint as well as its gradients using SU2_CFD solver, the python code will get the constraint and gradients from the history files, and then multiple them with the weight (or SCALE), and then return the results to scipy_tools.py for optimization. Look at line 429 in the function ""con_ceq"" in file ""design.py"", the resulted constraint is scaled by the SCALE parameter, which is no problem. Then look at line 477 in the gradient function ""con_dceq"", the resulted gradients are not scaled by the SCALE parameter, that I think it is irrational. The same problem also happens in the function ""con_dcieq"", the gradients of inequality constraints. I think that the two gradients function for constraints should be scaled with the SCALE parameter, because at line 386 in the objective gradient function ""obj_df"", the computed objective gradients are indeed scaled. **Desktop (please complete the following information):**; - SU2 Version: [v7.3.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1653:407,config,config,407,https://su2code.github.io,https://github.com/su2code/SU2/issues/1653,1,['config'],['config']
Modifiability,"**Describe the bug**; If you follow the Quickstart tutorial, you get one warning (""The adjoint solver should use a non-dimensional flow solution"") and this error when running the CONTINUOUS_ADJOINT pass:. ```; SU2_CFD inv_NACA0012.cfg; WARNING: The adjoint solver should use a non-dimensional flow solution. Error in ""void CConfig::SetPostprocessing(unsigned short, unsigned short, unsigned short)"": ; -------------------------------------------------------------------------; CFL adaption only available for finite-volume fluid solvers.; Please select CFL_ADAPT = NO.; ------------------------------ Error Exit -------------------------------. --------------------------------------------------------------------------; MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD; with errorcode 1. NOTE: invoking MPI_ABORT causes Open MPI to kill all MPI processes.; You may or may not see output from other processes, depending on; exactly when Open MPI kills them.; --------------------------------------------------------------------------; ```. **To Reproduce**; *Just follow the steps in the tutorial, one by one, and when you get to step 3 in the CONTINUOUS_ADJOINT run, you get the error.*. **Desktop (please complete the following information):**; - SU2 Version: [e.g., v7.0.1]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/887:481,adapt,adaption,481,https://su2code.github.io,https://github.com/su2code/SU2/issues/887,1,['adapt'],['adaption']
Modifiability,"**Describe the bug**; In #1104 I re-enabled the mesh quality output originally implemented in #778. In some cases the output for all 3 metrics is 0 in the domain and just on the boundary actual values are computed. If you know more, have hints feel free to join. Even an info if it runs works for your case might help cornering the problem. I haven't looked in depth into this but already wanted to open this such that you know :building_construction: . The output for the Quickstart for example is fine: :+1: ; ![image](https://user-images.githubusercontent.com/31306376/99533521-53130f00-29a6-11eb-8c01-b7951322740e.png). Testcases/incomp_navierstokes/bend in comparison exhibits the mentioned problem: :-1: ; ![image](https://user-images.githubusercontent.com/31306376/99533921-ea786200-29a6-11eb-9315-3aa3b9b0287b.png). **To Reproduce**; Run the bend Testcase using the additional config entry `VOLUME_OUTPUT= (MESH_QUALITY)`. **Desktop (please complete the following information):**; This already occurred on multiple platforms with different OS compiler and MPI version so I consider this to be actual problem in the code; - SU2 Version: latest develop [18 Nov 2020]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1109:885,config,config,885,https://su2code.github.io,https://github.com/su2code/SU2/issues/1109,1,['config'],['config']
Modifiability,"**Describe the bug**; In a RANS computation of a 2.5D section of a wing, the periodic plane exhibits oscillations of pressure in the boundary layer. The issue is only present on the periodic face, not in the volume. Using a CFL of 1 helps but the instability does not disappear. A CFL of 10 leads to a crash of the computation with multiple spots like on the screenshot. Would it be linked to issue #1090 ?. ![pres_per_face](https://user-images.githubusercontent.com/91184648/145236024-fc713cbd-66d8-40b3-9036-7c1925f10229.png); ![pres_cut](https://user-images.githubusercontent.com/91184648/145236048-a91ca27a-c1c9-4d6c-9639-8b34ea5de307.png). Here is the config file:; [hl_3d_landing.txt](https://github.com/su2code/SU2/files/7677092/hl_3d_landing.txt). **Hardware and software:**; - OS: Linux Red Hat ELS 6.5; - Nodes: Intel Xeon Ivy bridge; - C++ compiler and version: intel/2018.0.1; - MPI implementation and version: intelmpi/2018.0.1; - SU2 Version: v7.2.1. Thank you for looking at this issue and for any help.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1467:657,config,config,657,https://su2code.github.io,https://github.com/su2code/SU2/issues/1467,1,['config'],['config']
Modifiability,"**Describe the bug**; It looks like we do not actually need to prescribe unit normal vectors for MARKER_INLET, because it is normalized in the code, e.g. in BC_Inlet. When a 2D inlet is at a 45 degree angle, the normal vector of the inlet can be given as [1.0, 1.0] in the config file. However, when you want to generate and use an inlet profile for this, you will get an error message . ```; ERROR: Found these values in columns 4 - 5; [1.000000e+00, 1.000000e+00]; These values should be components of a unit vector for direction,; but their magnitude is: 1.414214e+00; ```; I suggest to accept non-normalized vectors as input. This simply means that we remove this check for inlet profiles and update the description for the inlet boundary condition: **accepts surface normal vector** instead of **accepts surface unit normal vector**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1495:273,config,config,273,https://su2code.github.io,https://github.com/su2code/SU2/issues/1495,1,['config'],['config']
Modifiability,**Describe the bug**; Multizone CHT coupling does not appear to work properly for compressible flows. Specifically there does not seem to be heat transfer between linked markers. **To Reproduce**; See the config files / explanation in this post: https://www.cfd-online.com/Forums/su2/222835-su2-compressible-cht.html. **Desktop (please complete the following information):**; - OS: Linux; - C++ compiler and version: GCC 5.4.0; - MPI implementation and version: Open MPI 1.10.2; - SU2 Version: 7.0.0,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/838:36,coupling,coupling,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/838,2,"['config', 'coupling']","['config', 'coupling']"
Modifiability,"**Describe the bug**; Symmetry boundary condition does not work properly. In particular, the values on the symmetry plane are wrong with respect to a computation performed on the complete mesh. In the images you can see the pressure coefficient and the skin friction coefficient magnitude for both the simulations. For each image, the upper half is the solution on the complete mesh whereas the lower portion is the solution on the halved mesh with the symmetry plane. I am performing an incompressible RANS simulation with SST turbulence model. I am attaching the files needed to perform both the simulations. The branch I used is the develop one. I also tried with the main branch but the error persists. ![PressureCoefficient](https://user-images.githubusercontent.com/43813346/180821411-9978c962-b3c0-42d0-b631-35a5b0c71b29.png); ![SFC_Error](https://user-images.githubusercontent.com/43813346/180821429-f476bb80-1ac1-4fad-b55b-f5ea05f3a604.png). **To Reproduce**; Please find the config and mesh file at the following link. https://we.tl/t-nmjBv7HJv0. **Desktop (please complete the following information):**; - OS: CentOS Linux release 7.6.1810 (Core); - C++ compiler and version: gcc 11.2.0; - MPI implementation and version: OpenMPI 4.0.1; - SU2 Version: v7.3.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1723:985,config,config,985,https://su2code.github.io,https://github.com/su2code/SU2/issues/1723,1,['config'],['config']
Modifiability,"**Describe the bug**; The rotating frame grid velocities are not set properly if used in 2-D. This is due to the error in SetRotationalVelocity routine in CGeomtery class (Cgeometry.cpp line 3881). The loop counter to find the Omega only goes upto nDim and in 2-D any rotation about the Z-axis is not considered. . **To Reproduce**; https://github.com/su2code/SU2/tree/master/TestCases/turbomachinery/centrifugal_blade is an example of a test case using rotating frame simulations in 2-D. Some of the turbomachinery options did not work for me, so I changed the turbomachinery markers to simple inlet and outlet just to get something running in this [config file.](https://github.com/su2code/SU2/files/4158761/centrifugal_blade.txt). The fix is fairly straightforward to change the loop counter to 3 in line 3891, but I wasn't sure if it is appropriate to make a PR for just this. Is it possible to add it into one of the existing ones?. Regards,; Akshay",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/860:651,config,config,651,https://su2code.github.io,https://github.com/su2code/SU2/issues/860,1,['config'],['config']
Modifiability,"**Describe the bug**; There is some issue with having two sets of intersecting periodic boundary conditions. I was attempting to simulate plane channel flow (Poiseuille) between two infinite plates with SU2 v. 7.0.7 using RANS, but the results are not correct. Specifically, I see a lot of garbage in the corners, where the periodic BCs intersect (see pictures). ![corner_problems](https://user-images.githubusercontent.com/6933834/95637061-a5771c80-0a45-11eb-80d9-9e81affa0c89.png). I thought that periodic BCs had been updated and working, and that having multiple periodic BCs was not an issue. Is this not the case, or have I done something wrong?. **To Reproduce**; *Please provide a config file and mesh for a minimal example that recreates the problem.*; (See attached). **Desktop (please complete the following information):**; - OS: Arch Linux - Linux Kernel 5.8.14; - C++ compiler and version: GCC 10.2.0; - MPI implementation and version: Open MPI 4.0.5; - SU2 Version: 7.0.7 - branch: develop - commit: e9c824cd70. [channel_bug_files.tar.gz](https://github.com/su2code/SU2/files/5357906/channel_bug_files.tar.gz)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1090:689,config,config,689,https://su2code.github.io,https://github.com/su2code/SU2/issues/1090,1,['config'],['config']
Modifiability,"**Describe the bug**; This is something I have noticed multiple times when running with JST on RANS cases: If the CFL number is increased (>5) the density residual stops changing and the solution essentially stalls: . ![image](https://user-images.githubusercontent.com/30271435/65646456-01444400-dfb0-11e9-9c77-59d3458ceb92.png). I am digging into the JST implementation to see what is going on but haven't had any luck so far. Is this something that other people have experienced and have an explanation for? . Changing the LINEAR_SOLVER_PREC sometimes helps. In this flatplate case ILU does better but for other simulations this stalling will persist. Adaptive CFL will almost certainly mess things up (even #790). Sidenote, is there a rule of thumb for which LINEAR_SOLVER_PREC and LINEAR_SOLVER to use?. **To Reproduce**; This was on the basic flatplate test case that is available with the repo. Including files here for completeness ; [flatplate_jst_Sa.tar.gz](https://github.com/su2code/SU2/files/3655187/flatplate_jst_Sa.tar.gz). If the CFL is set to 5, the solution converges as expected. But if it is increased to 8, it stops moving. . **Desktop (please complete the following information):**; - OS: Linux (Ubuntu 16.04.11); - C++ compiler and version: g++ (GCC) 5.4.0; - MPI implementation and version: openmpi 1.10.2; - SU2 Version: v6.2.0 develop. This has been replicated on a variety of systems",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/793:654,Adapt,Adaptive,654,https://su2code.github.io,https://github.com/su2code/SU2/issues/793,1,['Adapt'],['Adaptive']
Modifiability,"**Describe the bug**; Title says it all. SU2 v. 7.1.1 gives me the following: ""Info: Ignoring the following screen output fields: AVG_MASSFLOW, AVG_MACH"". **To Reproduce**; Use ""MARKER_ANALYZE"" and ""SCREEN_OUTPUT = ( ... , AVG_MASSFLOW, AVG_MACH, ... ) in your configure file. **Desktop (please complete the following information):**; - OS: WSL Debian; - C++ compiler and version: gcc 8.3; - MPI implementation and version: OpenMPI 3.1.3; - SU2 Version: 7.1.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1231:261,config,configure,261,https://su2code.github.io,https://github.com/su2code/SU2/issues/1231,1,['config'],['configure']
Modifiability,"**Describe the bug**; When I read the turb model code, I find the primitives used are usually in different iterations. What I mean is the NS solver has done Preprocessing/Space_Integration/Time_Integration/Postprocessing and updated the Solution before turb solver in CFluidIteration::Iterate(). And the consequence of that is the two vars Solution and Primitive are out of step for turb solver and the gradients is all related to Primitive but not Solution. Normally turb solver uses the Primitive and Gradient to compute flux, but when it comes to compute the eddy viscocity(MuT) in Postprocessing function both in SA and SST model. Take SA model as an example:. '''; void CTurbSASolver::Postprocessing(CGeometry *geometry, CSolver **solver_container, CConfig *config, unsigned short iMesh) {. const su2double cv1_3 = 7.1*7.1*7.1, cR1 = 0.5, rough_const = 0.03;. const bool neg_spalart_allmaras = config->GetSAParsedOptions().version == SA_OPTIONS::NEG;. /*--- Compute eddy viscosity ---*/. for (unsigned long iPoint = 0; iPoint < nPoint; iPoint ++) {. const su2double rho = solver_container[FLOW_SOL]->GetNodes()->GetDensity(iPoint);; const su2double mu = solver_container[FLOW_SOL]->GetNodes()->GetLaminarViscosity(iPoint);. const su2double nu = mu/rho;; const su2double nu_hat = nodes->GetSolution(iPoint,0);; const su2double roughness = geometry->nodes->GetRoughnessHeight(iPoint);; const su2double dist = geometry->nodes->GetWall_Distance(iPoint) + rough_const * roughness;. su2double Ji = nu_hat/nu;; if (roughness > 1.0e-10); Ji += cR1*roughness/(dist+EPS);. const su2double Ji_3 = Ji*Ji*Ji;; const su2double fv1 = Ji_3/(Ji_3+cv1_3);. su2double muT = rho*fv1*nu_hat;. if (neg_spalart_allmaras) muT = max(muT,0.0);. nodes->SetmuT(iPoint,muT);. }. }; '''. Defined in CEulerVariable.hpp and CNSVariable.hpp, the following two functions returns vars in next and current iterations:. rho = solver_container[FLOW_SOL]->GetNodes()->GetDensity(iPoint);; mu = solver_container[FLOW_SOL]->GetNodes()->G",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1809:763,config,config,763,https://su2code.github.io,https://github.com/su2code/SU2/issues/1809,2,['config'],['config']
Modifiability,"**Describe the bug**; When I try to create the OpenMP version of the adjoint solver with the Intel compiler, I get compiler error in opdi. Here are a couple of examples, which are all of the same error type. ../SU2/externals/opdi/include/opdi/backend/macro/dataTools.hpp(39): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(parallelData). ../SU2/externals/opdi/include/opdi/backend/macro/implicitBarrierTools.hpp(41): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(implicitBarrierStack). ../SU2/externals/opdi/include/opdi/logic/omp/adjointAccessControl.hpp(47): error: threadprivate variable should not be incomplete or reference type; #pragma omp threadprivate(currentAdjointAccess). **To Reproduce**; Use the following build options (I don't think the mkl option is needed, but that is what I used). export CXX=mpiicpc; export CC=mpiicc; export CXXFLAGS=""-O2""; export CFLAGS=""-O2"". ./meson.py ../Build_MKL --prefix=/home/whatever -Denable-mkl=true -Dcustom-mpi=true -Dwith-omp=true -Denable-autodiff=true -Denable-directdiff=true; ./ninja -C ../Build_MKL install. **Desktop (please complete the following information):**; - OS: Ubuntu 18.04; - C++ compiler and version: Intel 19.1.0.166 20191121; - MPI implementation and version: Intel MPI; - SU2 Version: Latest develop version",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1273:297,variab,variable,297,https://su2code.github.io,https://github.com/su2code/SU2/issues/1273,3,['variab'],['variable']
Modifiability,"**Describe the bug**; When running any dry run in the form; `SU2_CFD -d <configname>.cfg`; an integer divide by zero (`Floating point exception: integer divide by zero`) happens. A backtrace pointed me towards `roundUpDiv (numerator=0, denominator=0)` in `omp_structure.hpp` +104 and further up `computeStaticChunkSize (totalWork=0, numThreads=1, maxChunkSize=4096)`. I guess one might check somewhere along the line whether there is even work to do, i.e. wrap the `*.Initialize(nPoint,...)` in `C<Inc>EulerSolver` etc in `if (nPoint != 0)` conditionals (that got the Quickstart working again for me). But maybe there is a better more elegant solution without too much overhead. I would like @pcarruscag to take a look as the omp stuff is involved :). **To Reproduce**; Every dryrun I tried, using Quickstart should be enough to understand the problem. **Desktop (please complete the following information):**; - OS: Red Hat Enterprise Linux 7.6; - C++ compiler and version: GCC 4.8.5; - MPI implementation and version: openMPI 3.1.2; - SU2 Version: latest develop, but this probably affects 7.0.1 as well, i.e. hotfix time 🕙",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/857:73,config,configname,73,https://su2code.github.io,https://github.com/su2code/SU2/issues/857,1,['config'],['configname']
Modifiability,"**Describe the bug**; When running under valgrind I get the following error message from valgrind for the develop version. ==46590== Invalid read of size 1; ==46590== at 0x8C9CA5: CConfig::SetConfig_Parsing(std::istream&) (CConfig.cpp:2836); ==46590== by 0x8C9A6E: CConfig::SetConfig_Parsing(char*) (CConfig.cpp:2797); ==46590== by 0x8A98F1: CConfig::CConfig(char*, unsigned short) (CConfig.cpp:205); ==46590== by 0x1BD2FA: main (SU2_CFD.cpp:99); ==46590== Address 0x5eae8ef is 1 bytes before a block of size 161 alloc'd. **To Reproduce**; Take e.g. the config file of rae2822 rans test case and run under valgrind. To avoid a lot of MPI warnings, create the sequential executable. **Desktop (please complete the following information):**; - Operating system: Ubuntu 18.04; - C++ compiler and version: g++ (GCC) 8.4.0; - MPI implementation and version: sequential; - SU2 Version: 7.0.5",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1040:554,config,config,554,https://su2code.github.io,https://github.com/su2code/SU2/issues/1040,1,['config'],['config']
Modifiability,"**Describe the bug**; When setting OUTPUT_FILES= (SURFACE_TECPLOT) the output file is <name>.szplt. According to the code nomenclature, this file extension should be for the binary file: SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp; When using the OUTPUT_FILES= (SURFACE_TECPLOT_BINARY) I get the following error:; OUTPUT_FILES: invalid option value SURFACE_TECPLOT_BINARY. Check current SU2 options in config_template.cfg. I think the nomenclature has changed w.r.t. previous versions but the template config file did not. SURFACE_TECPLOT which should output a "".dat"" file (see SU2_CFD/src/output/CTecplotFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT_ASCII; SURFACE_TECPLOT_BINARY which should output a "".szplt"" file (see SU2_CFD/src/output/CTecplotBinaryFileWriter.cpp) is now (v7.0.6) SURFACE_TECPLOT. **Correction**; Update the config file. - SU2 Version: v7.0.5 (also applicable to v7.0.6)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1051:506,config,config,506,https://su2code.github.io,https://github.com/su2code/SU2/issues/1051,2,['config'],['config']
Modifiability,"**Describe the bug**; hello, I use SU2 to do shape optimization for M6 wing. I discover SU2_GEO can not identify the section shape correctly if I use the structured grid. But it can correctly identify the section shape，airfoil，when I use the unstructured grid. Does it means the unstructured grid is the only mesh type can be used in shape optimization? ; I use a unstructured grid do shape optimization, my objective is minimizi drag with fixed lift, I got a model with less drag in SU2. I used the SU2_CFD module to verify whether the optimized model really reduces drag with more volume mesh. I got a nice result. Compared to the original model, the optimized model has reduced drag. But when the same grids, original model grid and optimized model grid, is used for numerical simulation in Fluent, I got a bad result. there is almost no drag reduction, and drag, lift and pitching moment are all smaller than SU2. Is there something wrong with the grid or something else? ; I used SU2 to simulate the structural grid of the CRM model downloaded from the https://aiaa-dpw.larc.nasa.gov. The drag and lift are consistent with the result of Fluent. But pitching moment is 5 times of that calculated by Fluent. I think maybe there is something wrong with my configuration. But I got a relatively correct pitching moment when I use the same configuration to similate with a unstructured grid. This makes me doubt the mesh type.; I am so confused with these problems. I will appreciate very much if someone can give me some advice？. - SU2 Version: [e.g., v6.2.0]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1229:1258,config,configuration,1258,https://su2code.github.io,https://github.com/su2code/SU2/issues/1229,2,['config'],['configuration']
Modifiability,"**Description of the issue**; Hello everybody,. I'm currently running the same testcase (Unsteady Euler ONERAM6 AoA=3deg) on two different versions of SU2 ( version 6.0.1 and 6.2.0). What I noticed is a different evolution in time of coefficients, Cl and Cd as given in the figure. Both the codes look at convergence and the input files (despite the version of the code being different) are the same. I attach the two screen outputs for comparison. I'm running SU2_CFD through the **parallel_computation.py** with only one core (using different number of cores doesn't affect the result anyway). <img width=""1437"" alt=""Screenshot 2019-11-28 at 17 53 42"" src=""https://user-images.githubusercontent.com/23583209/69819810-539c1e00-1208-11ea-902e-10f816f8a9ed.png"">. [Summary_singlecore_6_2_0.txt](https://github.com/su2code/SU2/files/3902407/Summary_singlecore_6_2_0.txt); [Summary_singlecore_6_0_1.txt](https://github.com/su2code/SU2/files/3906057/Summary_singlecore_6_0_1.txt). **To Reproduce the problem**; To reproduce the problem I attach the config files. The mesh is available in the repository: **mesh_ONERAM6_inv.su2**. Note: both versions are/were on the develop branches. Latest one is up to date. [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3906061/config_CFD_6_0_1.txt); [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3902415/config_CFD_6_2_0.txt). Im running the two versions on different machines with same specs:; **Details for the new version**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ 5.4.0]; - MPI implementation and version: [Open MPI 1.10.2]; - SU2 Version: [v6.2.0]. **Details for the old version**; - OS: [Ubuntu 16.04.6 LTS]; - C++ compiler and version: [g++ 5.4.0]; - MPI implementation and version: [Open MPI 1.10.2]; - SU2 Version: [v6.0.1]. Thank you and best,; Rocco",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828:1045,config,config,1045,https://su2code.github.io,https://github.com/su2code/SU2/issues/828,1,['config'],['config']
Modifiability,"**Description:**; I am running some nozzle simulations and once in a while I got the following error when the software is writing the restart file:. ```; Error in ""virtual void CSU2BinaryFileWriter::Write_Data()"":; -------------------------------------------------------------------------; Unable to open SU2 restart file restart_flow.dat; ```. **To Reproduce**; I am attaching a config file and mesh that recreates the problem.; [Config_and_mesh.zip](https://github.com/su2code/SU2/files/4304107/Config_and_mesh.zip). Command used: `mpiexec -n 4 SU2_CFD config.cfg`. I run this simulation four times, two of them worked properly and the other two had the error (one of them in iteration 1000 and the other 3000). **Desktop:**; - OS: Windows 10 x64; - MPI implementation and version: Microsoft MPI v10.1.12498.18; - SU2 Version: v7.0.2 (win64-mpi) and v7.0.0 (win64-mpi).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/906:380,config,config,380,https://su2code.github.io,https://github.com/su2code/SU2/issues/906,2,['config'],['config']
Modifiability,**Desktop (please complete the following information):**; - OS: WSL (Ubuntu22.04); - C++ compiler and version: g++ 11.3.0; - MPI implementation and version: 4.0; - SU2 Version: v7.5.1. Hello：; My computer have 2 epyc cpus，when I run QuickyStart ，; it warns：SU2 was not compiled for an AVX-capable architecture. Performance could be better。; My compile configuration：; ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true . How can I solve it？; Thanks！,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1939:352,config,configuration,352,https://su2code.github.io,https://github.com/su2code/SU2/issues/1939,1,['config'],['configuration']
Modifiability,"**Is your feature request related to a problem? **; PR #1076 is missing documentation and a testcase. This is the PR where we check the mesh validity after a mesh deformation.; Specifically, we check if a mesh is self-intersecting. **Describe the solution you'd like**; A testcase explaining and showing the usage of the method (config options and description) should be added. ; A testcase is available from the thesis of L.Tol: https://pure.tue.nl/ws/portalfiles/portal/165889356/0894988_Tol.pdf",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1154:329,config,config,329,https://su2code.github.io,https://github.com/su2code/SU2/issues/1154,1,['config'],['config']
Modifiability,"**Is your feature request related to a problem? Please describe.**. Hello guys,. Have you ever heard about MHD(magnetohydrodynamics) simulation? That's used in plasma physics with the hypothesis that most of the particles in a control volume have the same velocity. However, the atoms' first electrons are stripped and, hence, magnetic field confinement to the plasma is possible due to ions and electrons' net charge. Moreover, due to the huge mass difference between ion and electron, they are normally treated as two-fluid interacting with each other. The most successful MHD code is produced by [PPPL](https://w3.pppl.gov/~nferraro/m3dc1.html), but not open source. I want to base on SU2 to make a flexible one. Do you think a feature_* or develop branch is better?. feature_ExMHD(extended MHD) may be a good branch name?. **Describe alternatives you've considered**; If there already exists the relevant module concerning the electromagnetic content, please let me know. Importantly, if there exists a chemical diffusion problem solver, it would reduce my coding time significantly by imitating the code. . If anyone can give some guidance on how to change the governing equations quickly and safely, please inform me.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/741:702,flexible,flexible,702,https://su2code.github.io,https://github.com/su2code/SU2/issues/741,2,"['extend', 'flexible']","['extended', 'flexible']"
Modifiability,"**Is your feature request related to a problem? Please describe.**. Overset grids are very advantageous for storage separation or rotorcraft dynamic problems where rigid bodies move independently. In the past, it is shown that SU2 can be adapted to work with the overset grid as shown in [video](https://www.youtube.com/watch?v=tsr-1Qyk1AQ) [paper](https://arc.aiaa.org/doi/abs/10.2514/6.2015-3428) however this future newer added to community version. . **Describe the solution you'd like**. I would like to get the idea of the community about overset grids, the possible implementation, and the work effort required for such a modification. . Any contribution/suggestion is highly appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1905:238,adapt,adapted,238,https://su2code.github.io,https://github.com/su2code/SU2/issues/1905,1,['adapt'],['adapted']
Modifiability,"**Is your feature request related to a problem? Please describe.**. The currently implemented wall model for SA is not working robustly, and needs be modified for incompressible flows. The model has not been implemented for SST but can easily be implemented from the SA wall model. The SA wall model implementation in @EduardoMolina 'feature_WallModelLES' works well with almost no modifications and the implementation can be based on this version. . **Describe the solution you'd like**; Current implementation of wall model extended to incompressible flows for SA and SST.; Also needed is proper computation of y+ and wall shear stress in output files.; Validation test case replicating literature performance. Currently available to me: Buice & Eaton Diffuser. **Describe alternatives you've considered**; -. **Additional context**; I performed a preliminary implementation and validation for isothermal walls (Buice & Eaton diffuser).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1155:526,extend,extended,526,https://su2code.github.io,https://github.com/su2code/SU2/issues/1155,1,['extend'],['extended']
Modifiability,"**Is your feature request related to a problem? Please describe.**; Associated with #1888. There is a request to separately report the components of the total surface heat flux: trans-rot mode temperature gradient, vib-el mode temperature gradient, and enthalpy diffusion. **Describe the solution you'd like**; Adding a volume output field for each heat flux source to CNEMOCompOutput, and the necessary associated member variables to enable this. **Describe alternatives you've considered**; Output quantities required to compute heat flux (temperature gradient, concentration gradient, diffusion coeff, etc.) but this becomes too many parameters and puts too much onus on user. **Additional context**",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1891:422,variab,variables,422,https://su2code.github.io,https://github.com/su2code/SU2/issues/1891,1,['variab'],['variables']
Modifiability,"**Is your feature request related to a problem? Please describe.**; For the problems in which parameters located in only a limited region vary much faster than others, the mesh is able to self-adjust to reduce the requirement to computational resources. One mature framework of the technique is [Chombo](https://commons.lbl.gov/display/chombo?atl_token=81243520c3e3754ade36ac0a45eb4e156dac45e0), which can surprisingly reduce the time required to finish the computation job for the aforementioned problem such as moving shock-wave. **Describe the solution you'd like**; AMR frame option added. ; Maybe it will be very difficult to merge Chombo and SU2, and not necessary. We can also develop our own AMR algorithm based on current research. **Describe alternatives you've considered**; The aim of AMR is just for reducing run time. Or just increase the Grid number . **Additional context**; [Adaptive Mesh Refinement.pdf](https://github.com/su2code/SU2/files/3426255/Adaptive.Mesh.Refinement.pdf); [An introduction to AMR.pdf](https://github.com/su2code/SU2/files/3426257/An.introduction.to.AMR.pdf)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743:892,Adapt,Adaptive,892,https://su2code.github.io,https://github.com/su2code/SU2/issues/743,2,['Adapt'],['Adaptive']
Modifiability,"**Is your feature request related to a problem? Please describe.**; Hello guys, I developed a [primitive tool](https://github.com/WenyinWei/SU2Configurer) to help with editing the configure file. Anyone can add or delete lines freely in the tool to configure your input to SU2. After the editing, the menu can save the .cfg file as a standard SU2 configure file. . ![Profile_Screenshot_2019_08_16](https://user-images.githubusercontent.com/33152225/63140409-6cdfdc80-c014-11e9-9e09-fe8b970d84ff.png). **Describe the solution you'd like**; 1. I am not familiar with the software release pipeline so the tool now just works in my PC with Linux version. Anyone interested in joining to make it more complete?; It is based on Qt so there should be no problem for its usage on cross-platform. . 2. I am not so familiar with the option reliance relationship in SU2 cause there are too many options in the configure template. Complicated reliance and number of options obstrcut the further intelligent implementation of automatical completion. . Any developer willing to tell me your module's option relationship will be appreciated.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/759:180,config,configure,180,https://su2code.github.io,https://github.com/su2code/SU2/issues/759,4,['config'],['configure']
Modifiability,"**Is your feature request related to a problem? Please describe.**; In my application the heat flux over various surfaces is an important figure of merit of a specific design. Being able to monitor the average (or total) heat flux over different surfaces during runtime would be a good metric for judging convergence and quality of the design. Currently (as of 7.3.0) this does not seem to be possible. *A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]*; In my mesh I have defined various markers which indicate the surfaces of interest, where I would like the average heat-flux to evaluate over time. As suggested by the DryRun info I've indicated the surfaces with the MARKER_MONITORING specifier in the config file:. `MARKER_MONITORING = (NS_WALL_RESONATORTIP, NS_WALL_RESONATOR3, NS_WALL_RESONATOR2)`. However, the history and screen output shows only the heat flux aggregated over all surfaces. **Describe the solution you'd like**; *A clear and concise description of what you want to happen.*. I would like the values of the HEAT group to behave just like those of the FLOW_COEFF group, where the heat flux is indicated on a per-surface basis. This would allow me to track the development of the heat fluxes with good time resolution, without having to write an excessive amount of surface files. The output in the solution history could be similar to that of other output groups, i. e.:; `""Avg_HeatFlux(SURF1)"",""Avg_HeatFlux(SURF2)"",...`. **Describe alternatives you've considered**; *A clear and concise description of any alternative solutions or features you've considered.*; Regularly exporting the entire surface data to discrete files and analyzing them during post-processing is a possible work-around, but leads to an excessive amount of files. **Additional context**; *Add any other context or screenshots about the feature request here.*; My cases are highly transient and require quite some timesteps until a quasi-stationary limit cycle ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1531:750,config,config,750,https://su2code.github.io,https://github.com/su2code/SU2/issues/1531,1,['config'],['config']
Modifiability,"**Is your feature request related to a problem? Please describe.**; Under high aerothermal loads heat fluxes over walls are an important design aspect of many components. In my specific case a wall temperature distribution is known from experiments. I would like to apply this spacial temperature distribution as boundary condition to one or more isothermal walls. In my case the heat flux is then used for validation purposes. **Describe the solution you'd like**; I would like to specify the temperature of an isothermal wall with respect to the x/y/z coordinate. I believe something similar is already possible with the structural load boundaries:; `MARKER_DISPLACEMENT = (surface, multiplier, magnitude [m], x component, y component, z component)`. For temperature this could possibly look like this:; `MARKER_ISOTHERMAL_PROFILE = (surface, temperature[0...N], x[0...N], y[0...N],z[0...N])`. In order to keep the config file cleaner a better solution may be to specify an external file, from which the locations and temperatures are read. This seems to be already possible for inlet boundaries:; https://github.com/su2code/SU2/blob/72b2fa977b64b9683a388920f05298a40d39e5c5/config_template.cfg#L812-L816; However, I could not find any example actually using this functionality. If this is implemented, extending the functionality to also work with isothermal walls is probably the least intrusive modification. **Describe alternatives you've considered**; A possible, but cumbersome solution could be to split the respective walls into many markers and specify piecewise-constant wall temperatures for each marker.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1553:917,config,config,917,https://su2code.github.io,https://github.com/su2code/SU2/issues/1553,2,"['config', 'extend']","['config', 'extending']"
Modifiability,"**Issue Description**; Dear all,; my research group and me found a problem when using the JST scheme.; The problem consists in a difference in the skin friction coefficient along the airfoil between 2D and 3D meshes (the 3D one is obtained by extruding the 2D mesh using only 1 cell in the span wise direction).; This difference arises when the JST scheme is used, and it leads to a ~25% of difference in the drag coefficient. In order to better explain what is happening, here is a summary table of the results for the CRM airfoil:; ![roe_jst](https://user-images.githubusercontent.com/53580993/117454345-56935600-af46-11eb-8c2f-7c314376a2a0.png). It is possible to notice that this difference does not emerge if the ROE scheme is used. For the 3D case, the boundary conditions at the side faces of the domain are `MARKER_SYM`, so that we think that this issue could be connected to the #1125 . **To Reproduce**; In order to reproduce the issue, a zip file is attached. It contains the configuration files for the 3D and 2D cases using JST and ROE, and the two grids of the CRM airfoil. It is possible to reproduce this issue also using a different airfoil. [ROEvsJST.zip](https://github.com/su2code/SU2/files/6441697/ROEvsJST.zip). **Desktop:**; - OS: Linux (Ubuntu); - C++ compiler and version: -; - MPI implementation and version: -; - SU2 Version: v7.1.1 and previous. Thanks for your help.; Ettore Saetta. Theoretical and Applied Aerodynamics Research Group (TAARG); University of Naples Federico II",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280:987,config,configuration,987,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280,1,['config'],['configuration']
Modifiability,"**Observed behaviour**; Thread sanitizer tests in the CI pipeline fail across PRs, e.g. #2158, with errors along the lines; ```; FATAL: ThreadSanitizer: unexpected memory mapping 0x7d81770ae000-0x7d8177500000; ```. **Background and possible causes**. There is some incompatibility between sanitizers and high degrees of address space layout randomization (https://github.com/google/sanitizers/issues/1716), it seems to be triggered by a combination of too recent kernel and/or too old LLVM and affects also github runners (https://github.com/actions/runner-images/issues/9491). **Possible fixes**. From what I understand in https://github.com/actions/runner-images/issues/9491 the corresponding parameters will be adapted in the runner, but it seems that there is also a workaround at the level of the workflow (https://github.com/openvswitch/ovs/commit/fa0dfa18d5344c82bc8387b4f79f4257a59d6f58).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2241:714,adapt,adapted,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/2241,1,['adapt'],['adapted']
Modifiability,"**Running unsteady simulations w/ dual-time stepping on many cores causes solution (and residuals) to freeze at 3rd outer iteration**. After running unsteady simulations with dual-time stepping both in serial and parallel, I discovered an issue where using a *relatively larger number of processes* led to ""frozen"" residuals while running. An image of this is shown below:. ![image](https://user-images.githubusercontent.com/116454159/217113776-1a502356-43c1-4971-ac55-102a203476ad.png). These residual values remain throughout the remaining duration of the run. This does not occur when running in serial. Additionally, as expected, the solution does not change after this 3rd iteration. The serial run results do, and they match the data I was comparing against. I use Intel MPI, where I set `-Dcustom-mpi=true` and set the following environment variables prior to calling meson:. ```; export CC=$(which mpicc); export CXX=$(which mpicxx); export MPICC=$(which mpicc); export MPICXX=$(which mpicxx); ```. I have noticed on a variety of other simulations I am running that **the error trends with # of cores I am using.**. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: CentOS Linux 7 (Core); - C++ compiler and version: g++ (GCC) 9.1.0; - MPI implementation and version: Intel MPI 19.0.9; - SU2 Version: v7.5.1 (also noticed on v7.5.0)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1914:848,variab,variables,848,https://su2code.github.io,https://github.com/su2code/SU2/issues/1914,1,['variab'],['variables']
Modifiability,"**SCALE_GRID does not ""always"" work**. Hello Everybody,; I have been using the SCALE_GRID function in SU2 quite often with previous versions of SU2, without any problem. However, after passing to v7.0.5 and working with a completely new mesh the SCALE_GRID option does not seem to work anymore (at least for me!). I am trying to scale down my mesh of a factor 0.001. In the config file, I set up the following parameters :; - DV_KIND= SCALE_GRID; - % Marker of the surface in which we are going apply the shape deformation; DV_MARKER= (Inlet_wall ) %this has also been commented but the result is the same; - DV_PARAM= ( 1.0 ); - % Value of the shape deformation; DV_VALUE=0.001. However, when I run SU2_DEF I obtained the following . *--------------------- Volumetric grid scaling (ZONE 0) ------------------; Scaling the mesh by a constant factor of 1.*. **To Reproduce**; *The config file is attached. The mesh file is quite big but it can be provided on request.*; [inlet.cfg.txt](https://github.com/su2code/SU2/files/4761675/inlet.cfg.txt). **Desktop (please complete the following information):**; - OS: [centos7.5 and centos8]; - C++ compiler and version: [g++ (GCC) 4.8.5]; - MPI implementation and version: [OpenMPI 4.0.0]; - SU2 Version: [v7.0.5]",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1023:374,config,config,374,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023,2,['config'],['config']
Modifiability,"**SOLVED** see edit. Hello! I seem to remember that it used to be possible to get angle of attack in the history file? Is this still possible? I would like to be able to just pull the angle of attack out of the history file, along with the aero coeffs.; Context:; I have looked through the custom output document and the reference config file, and (perhaps I am secretly blind), but there does not seem to be a simple output group for it.; Reason I need it: performing analysis for fixed Cl, so angle of attack is useful information. At the moment I am getting probed data:; ```; CUSTOM_OUTPUTS='m_vel_x : Macro{VELOCITY_X};\; m_vel_y : Macro{VELOCITY_Y};\; vel_x1: Probe{$m_vel_x}[-15, -15];\; vel_y1: Probe{$m_vel_y}[-15, -15]'; ```; And just getting the tan(y/x) of the probed values for angle. This works well enough.; The other option I have is stripping the angle of attack out of the forced breakdown file, would prefer to not do, but can. EDIT:. **It can be pulled out of line 2 of flow.meta**",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397:331,config,config,331,https://su2code.github.io,https://github.com/su2code/SU2/issues/2138#issuecomment-1780159397,2,['config'],['config']
Modifiability,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; *Give a clear and concise description of what the bug is and what you expect the behavior to be instead. Please provide enough instructions and data for a developer to reproduce the problem (config, mesh, commands, etc.). Please provide the smallest working example that reproduces the problem.*. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [e.g., Linux (Redhat 7.9)]; - C++ compiler and version: [e.g., g++ (GCC) 8.5.0]; - MPI implementation and version: [e.g., OpenMPI 4.0.3]; - SU2 Version: [e.g., v7.5.1]. When I use SU2 with QuickStart config file with OpenMPI, it gives error like in attached file.; Command is:; `mpirun -np 8 --allow-run-as-root SU2_CFD inv_NACA0012.cfg`. [segmentation_fault.txt](https://github.com/su2code/SU2/files/12170716/segmentation_fault.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2091:321,config,config,321,https://su2code.github.io,https://github.com/su2code/SU2/issues/2091,2,['config'],['config']
Modifiability,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; Not really a bug, but compiler warnings that can be avoided easily. In the file SU2_CFD/include/numerics/NEMO/NEMO_diffusion.hpp, class CAvgGradCorrected_NEMO, the variables iDim and iVar are defined, which are used as counters as far as I can tell. First of all I don't think such variables should not be defined as member variables of a class, but if you do then don't define variables with the same name in the implementation of the member functions. In this case in SU2_CFD/src/numerics/NEMO/NEMO_diffusion.cpp. It is causing a lot of compiler warnings in combination with the Intel compiler, which makes it more difficult to see the warnings that actually matter. If you want I can fix this, but maybe it is better if somebody with a NEMO background does it. **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Ubuntu 20.04; - C++ compiler and version: Intel compilers version 19.1.0.166; - MPI implementation and version: Intel MPI; - SU2 Version: develop branch",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1916:294,variab,variables,294,https://su2code.github.io,https://github.com/su2code/SU2/issues/1916,4,['variab'],['variables']
Modifiability,"*If this is a general question or difficulty building/using the code, please open a ""Discussion"" instead.*. **Describe the bug**; This might be linked to issue #2086; I am building SU2 with both Terminal and using a build system called EasyBuild.; On terminal everything went seamlessly. The issue is on EasyBuild. The meson configs are not pulling in the external files. I had to clone it recursively. None of the following options were activated in my tests, so the external files should have been added . ```; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ```. **HPC; - OS:Centos7; - C++ compiler and version: [e.g., g++ (GCC) 12.2]; - MPI implementation and version: [e.g., OpenMPI 4.1.4]; - SU2 Version: 7.0.6",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2363:325,config,configs,325,https://su2code.github.io,https://github.com/su2code/SU2/issues/2363,1,['config'],['configs']
Modifiability,"*WHY* should this be a bug? You don't provide any problems or erroneous solutions you might have had...; This way you could just as well refer randomly to any other code line. Possibly you are asking for whether that might be an improvement?; (I don't think so. Although it might actually work to some extend, I see no point in breaking up the numerical scheme at certain surface elements... ? What is your argument?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313379854:302,extend,extend,302,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313379854,1,['extend'],['extend']
Modifiability,"++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python); Found pkg-config: /usr/bin/pkg-config (1.6.3); Dependency python found: YES (pkgconfig); Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2072,Config,Configuration,2072,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['Config'],['Configuration']
Modifiability,", ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #11 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #12 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x1fe0f80); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #13 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; ... and two other processes waiting at ; <details>; <summary>that place</summary>. ```; #0 ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:3308,config,config,3308,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,", expr=...); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:317; #6 0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numeri",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6301,config,config,6301,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,", line 120, in scipy_slsqp; outputs = fmin_slsqp( x0 = x0 ,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 207, in fmin_slsqp; res = _minimize_slsqp(func, x0, args, jac=fprime, bounds=bounds,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\slsqp.py"", line 375, in _minimize_slsqp; sf = _prepare_scalar_function(func, x, jac=jac, args=args, epsilon=eps,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\optimize.py"", line 261, in _prepare_scalar_function; sf = ScalarFunction(fun, x0, args, grad, hess,; File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 140, in __init__; self._update_fun(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 233, in _update_fun; self._update_fun_impl(); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 137, in update_fun; self.f = fun_wrapped(self.x); File ""C:\ProgramData\Anaconda3\lib\site-packages\scipy\optimize\_differentiable_functions. py"", line 134, in fun_wrapped; return fun(np.copy(x), *args); File ""C:\SU2\bin\SU2\opt\scipy_tools.py"", line 383, in obj_f; obj_list = project.obj_f(x); File ""C:\SU2\bin\SU2\opt\project.py"", line 237, in obj_f; return self._eval(konfig, func,dvs); File ""C:\SU2\bin\SU2\opt\project.py"", line 206, in _eval; vals = design._eval(func,*args); File ""C:\SU2\bin\SU2\eval\design.py"", line 147, in _eval; vals = eval_func(*inputs); File ""C:\SU2\bin\SU2\eval\design.py"", line 244, in obj_f; func += su2func(this_obj,config,state) * sign * scale * global_factor; File ""C:\SU2\bin\SU2\eval\functions.py"", line 118, in function; func_out = state['FUNCTIONS'][func_name]; KeyError: 'INVERSE_DESIGN_PRESSURE' ; ```. SU2 version - 7.2.0 ; OS - Windows-11. I have also tried the latest version 7.3.1 on a Linux machine, I get the same error. Please help me understand this error and fix it. Thanks in advance. ; </div>",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1725:2355,config,config,2355,https://su2code.github.io,https://github.com/su2code/SU2/issues/1725,1,['config'],['config']
Modifiability,", propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ); %; % Marker of the far field (NONE = no marker); %; % Read inlet profile from a file (YES, NO) default: NO; %SPECIFIED_INLET_PROFILE= YES; %; % File specifying inlet profile; INLET_TYPE= TOTAL_CONDITIONS; MARKER_INLET = (inlet, 288.15, 101325, 0.0, 0.0, 0.0 ); MARKER_FAR= (farfield); MARKER_OUTLET = ( outlet, 101325 ); %; % Marker of the surface which is going to be plotted or designed; MARKER_PLOTTING= ( propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ); %; % Marker of the surface where the functional (Cd, Cl, etc.) will be evaluated; MARKER_MONITORING= ( propellerUpperSurface, propellerLowerSurface, propellerRightTip, propellerLeftTip ). % ------------- COMMON PARAMETERS DEFINING THE NUMERICAL METHOD ---------------%; %; % Numerical method for spatial gradients (GREEN_GAUSS, LEAST_SQUARES, ; % WEIGHTED_LEAST_SQUARES); NUM_METHOD_GRAD= GREEN_GAUSS; %; % Courant-Friedrichs-Lewy condition of the finest grid; CFL_NUMBER= 1; %; % Adaptive CFL number (NO, YES); CFL_ADAPT= NO; %; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT_PARAM= ( 0.1, 2.0, 15, 1e6 ); %; % Runge-Kutta alpha coefficients; RK_ALPHA_COEFF= ( 0.66667, 0.66667, 1.000000 ); %; % Number of total iterations; ITER= 99999. % ------------------------ LINEAR SOLVER DEFINITION ---------------------------%; %; % Linear solver for implicit formulations (BCGSTAB, FGMRES); LINEAR_SOLVER= FGMRES; %; % Preconditioner of the Krylov linear solver (JACOBI, LINELET, LU_SGS); LINEAR_SOLVER_PREC= ILU; %; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10. % -------------------------- MULTIGRID PARAMETERS -----------------------------%; %; % Multi-Grid Levels (0 = no multi-grid); MGLEVEL= 3; %; % Multi-",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1669:6171,Adapt,Adaptive,6171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1669,2,"['Adapt', 'adapt']","['Adaptive', 'adaptive']"
Modifiability,", this was not good enough... With the new strategy it is ok (see ""performance"" below), hence this is ready for review. ### Overall Strategy; The strategy now is to start a parallel section in CSysSolve::Solve that covers building the preconditioner and solving the linear system.; Linear algebra routines called within this section have _worksharing_ constructs instead of _parallel_ ones, i.e. the work is distributed by however many threads arrive to that routine. This also makes the routines safe to call in serial.; The only ""dangerous"" things to do in parallel are to: manage memory for a shared object (multiple threads call `new` but there is only one shared pointer on which to call `delete`); writing to the same memory locations concurrently.; I tried to make the first issue debugable by asserting that the initialization routines of CSysMatrix and CSysVector are only called by the master thread.; For the second issue I made the associated classes as const-correct as possible, that should at least make someone think twice before changing a member variable of those classes. The risk is still there for input variables as an algorithm development aspect... For example `MatrixVectorProductTransposed` cannot be made thread-parallel as simply/naively as its normal counterpart. ### Communication Model; The MPI + Threads communication model is very simple, currently only the master thread calls MPI routines (including `Error`), this requires thread barriers before and after the communication to make sure the correct values are passed and _seen_ by all threads.; We can test other alternatives in the future but at the moment this does not seem to be a significant bottleneck.; _Worksharing_ constructs have implicit barriers at completion, for CSysVector routines I used `nowait` modifiers, it is safe to call those routines in sequence since the loop sizes, and static work scheduling specifications are identical.; However, routines that access a CSysVector in a different way, s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/830#issuecomment-562646766:1410,variab,variable,1410,https://su2code.github.io,https://github.com/su2code/SU2/pull/830#issuecomment-562646766,2,['variab'],['variable']
Modifiability,",; const Vector& volume,; const Matrix& phi,; VectorOfMatrix& grad); {; const size_t SIMDLEN = 4;. for(size_t iPoint=0; iPoint<nPoint; iPoint+=SIMDLEN); {; for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad.setVec(iPoint,iVar,iDim,Array<double,SIMDLEN>(0.0));. for(size_t iNeigh=0; iNeigh<adj.nNeighbor_vec(iPoint); ++iNeigh); {; auto jPoint = adj.jPoint_vec(iPoint,iNeigh);; auto iEdge = adj.iEdge_vec(iPoint,iNeigh);; auto dir = adj.dir_vec(iPoint,iNeigh);. for(size_t iVar=0; iVar<nVar; ++iVar); {; auto phi_ave = (phi.getVec(iPoint,iVar)+; phi.getVec(jPoint,iVar))*0.5;. for(size_t iDim=0; iDim<nDim; ++iDim); grad.addVec(iPoint,iVar,iDim,; phi_ave*dir*area.getVec(iEdge,iDim));; }; }. for(size_t iVar=0; iVar<nVar; ++iVar); for(size_t iDim=0; iDim<nDim; ++iDim); grad.setVec(iPoint,iVar,iDim,; grad.getVec(iPoint,iVar,iDim)/volume.getVec(iPoint));; }; }; ```; I think this is just as readable especially considering that in SU2 we always need to use some Set/Get/Add/Sub method to update a variable, the difference is that here those methods have overloads to operate on small fixed size vectors. The speedup is **1.35** (i.e. 35% faster than edge-based reference) note that the improvement relative to scalar-point-based is only 1.6, those pesky gathers... The loop advances `SIMDLEN` points on each iteration, yet there are no pragmas and small simd-loops in sight, in good C++ fashion that trickery has been encapsulated in a ""simd-friendly"" class.; Such a class can look something like this:; ```C++; template<class T, size_t N>; class Array; {; #define FOREACH for(size_t k=0; k<N; ++k); public:; enum : size_t {Size = N};; enum : size_t {Align = N*sizeof(T)};; private:; // fixed size and aligned array of internal data, naturally maps to a SIMD register; alignas(Align) T vals_[N];; /*; * Some helper methods go here; */; public:; // **** CONSTRUCTORS **** //; // We want to be able to construct this type from single scalars,; // a memory location from whi",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-530328194:6289,variab,variable,6289,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-530328194,2,['variab'],['variable']
Modifiability,- D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin_Instructions.txt (0) ; ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19627,plugin,plugins,19627,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"- The meshes are available here: https://github.com/su2code/VandV/tree/master/rans/dsma661; - The config files for the GG + LSQ results are here: [dsma661_configs.zip](https://github.com/su2code/SU2/files/3842634/dsma661_configs.zip). - I did not run the other solvers myself. Those are results from the NASA TMR website. I don't have access to those solvers unfortunately. . - Yeah the non-monotonic variation worried me as well. But all the simulations were converged to a density residual of -13. (all of them have over 6 orders of residual reduction). The residuals for the GG+LSQ results shown here:; ![res_SA](https://user-images.githubusercontent.com/30271435/68789548-8a641880-05fa-11ea-8885-4e024fe84eda.png); I tried a few re-runs of that finest mesh with a couple of different options. I reduced the maximum CFL to ~30 from 1000 and it still gave the same result. I reduced the number of cores I was running on from 80 to 20 and that had no effect either. As soon as I ran without the `NUM_METHOD_GRAD_RECON= LEAST_SQUARES` option, it got a C_L of about 0.159402 which would be more in line with the other solvers. @economon I haven't tried a high fixed CFL. Let me check that behavior and report back.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553524258:98,config,config,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553524258,1,['config'],['config']
Modifiability,"- having a configuration switch to the class so that each process write its own file should work really well (already seen this stuff in other cfd packages) : it is very fast and not too memory consuming. - To cope with high memory usage, the only other solution is to enable parallel cgns in su2. But the problem may be that it requires hdf5 parallel library. @pcarruscag do you know if it is a licence issue or just technical difficulties (hdf5 use cmake and not meson) that prevent adding hdf5 to the external libraries ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1131#issuecomment-745160184:11,config,configuration,11,https://su2code.github.io,https://github.com/su2code/SU2/pull/1131#issuecomment-745160184,1,['config'],['configuration']
Modifiability,----------------------------+; | 0| 1| 0| 0|; | 1| 1| 0| 0|; | 2| 1| 0| 0|; | 3| 1| 0| 0|; +-------------------------------------------+; Courant-Friedrichs-Lewy number: 10; Euler implicit time integration for the turbulence model. ------------------------- Convergence Criteria --------------------------; Maximum number of iterations: 99999.; Reduce the density residual 10 orders of magnitude.; The minimum bound for the density residual is 10^(-12).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 10000 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot ASCII (.dat).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; Far-field boundary marker(s): farfield.; Constant heat flux wall boundary marker(s): airfoil. ---------------------- Read Grid File Information -----------------------; Two dimensional problem.; 14576 points.; 2 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| airfoil| 128|; | 1| farfield| 352|; +------------------------------------+; 14336 quadrilaterals. ------------------------- Geometry Preprocessing ------------------------; Setting point connectivity.; Renumbering points (Reverse Cuthill McKee Ordering).; Recomputing point connectivity.; Setting element connectivity.; Checking the numerical grid orientation.; There has been a re-orientation of the LINE surface elements.; Identifying edges and vertices.; Computing centers of gravity.; Setting the control volume structure.; Area of the computational grid: 8.76e+05.; Searching for the closest normal neighbors to the surfaces.; Storing,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/591:4448,Config,Config,4448,https://su2code.github.io,https://github.com/su2code/SU2/issues/591,1,['Config'],['Config']
Modifiability,-----------------; Maximum number of iterations: 999999.; Reduce the density residual 6 orders of magnitude.; The minimum bound for the density residual is 10^(-5.9).; Start convergence criteria at iteration 10. -------------------------- Output Information ---------------------------; Writing a solution file every 999999999 iterations.; Writing the convergence history every 1 iterations.; The output file format is Tecplot binary (.plt).; Convergence history file name: history.; Forces breakdown file name: forces_breakdown.dat.; Surface flow coefficients file name: surface_flow.; Flow variables file name: flow.; Restart flow file name: restart_flow.dat. ------------------- Config File Boundary Information --------------------; +-----------------------------------------+; | Marker Type| Marker Name|; +-----------------------------------------+; | Far-field| Tria-2-Bndry|; | | Tria-4-Bndry|; | | Tria-5-Bndry|; +-----------------------------------------+; | Symmetry plane| Tria-3-Bndry|; | | Quad-6-Bndry|; +-----------------------------------------+; | Heat flux wall| Tria-1-Bndry|; | | Tria-8-Bndry|; | | Tria-9-Bndry|; | | Tria-10-Bndry|; | | Tria-11-Bndry|; | | Tria-12-Bndry|; | | Tria-13-Bndry|; | | Tria-14-Bndry|; | | Tria-15-Bndry|; | | Tria-16-Bndry|; | | Tria-17-Bndry|; +-----------------------------------------+. ---------------------- Read Grid File Information -----------------------; Three dimensional problem.; 2405969 points before parallel partitioning.; Performing linear partitioning of the grid nodes.; 5820762 interior elements before parallel partitioning.; Executing the partitioning functions.; Building the graph adjacency structure.; Distributing elements across all ranks.; 16 surface markers.; +------------------------------------+; | Index| Marker| Elements|; +------------------------------------+; | 0| Tria-1-Bndry| 14188|; | 1| Tria-2-Bndry| 188|; | 2| Tria-3-Bndry| 6421|; | 3| Tria-4-Bndry| 188|; | 4| Tria-5-Bndry| 612|; | 5| Tria-8-Bndry| 46107|,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/633:2538,Config,Config,2538,https://su2code.github.io,https://github.com/su2code/SU2/pull/633,1,['Config'],['Config']
Modifiability,"-linear iter.: 2/2. Linear iter.: 0. Min. area: 5.37582e-07. Error: 0.; Computing grid velocities by finite differencing.; ```. The value of `Pitching frequency` is totally wrong. So I do some debugging, found that there is **no initialization of Omega_Ref in slover_direct_mean.cpp for incompressible flow**. . ``` C++; /*--- Incompressible non dimensionalization ---*/. else {. /*--- Reference length = 1 (by default); Reference density = liquid density or freestream; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating di",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193:3901,config,config,3901,https://su2code.github.io,https://github.com/su2code/SU2/issues/193,3,['config'],['config']
Modifiability,"-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3385: g++ conftest.cpp >&5; configure:3389: $? = 0; configure:3437: result: yes; configure:3440: checking for C++ compiler default output file name; configure:3442: result: a.out; configure:3448: checking for suffix of executables; configure:3455: g++ -o conftest conftest.cpp >&5; configure:3459: $? = 0; configure:3481: result: ; configure:3503: checking whether we are cross compiling; configure:3511: g++ -o conftest conftest.cpp >&5; configure:3515: $? = 0; configure:3522: ./conftest; configure:3526: $? = 0; configure:3541: result: no; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MER",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:4626,config,configure,4626,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"-o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12373,config,configure,12373,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"-with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-PY_WRAPPER \; --enable-tecio \; --enable-parmetis \; --enable-metis \; --enable-cgns \; --prefix=$HOME/share/SU2/6.1.0-AD \. # ...; **Running configure in folder SU2_BASE; =====================================================================; Command: ../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER. There was an error while running command '../configure --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include --enable-tecio=--enable-parmetis --enable-metis=--enable-cgns --prefix=/home/dic17007/share/SU2/6.1.0-AD --enable-mpi --enable-PY_WRAPPER '.; === Error Log ===; configure: error: bad value --enable-parmetis for --enable-tecio; **; ```. a work-around: add `=yes` at certain `enable-xxx` options.; ```; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./preconfigure.py --enable-autodiff \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/hom",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567:1340,config,configure,1340,https://su2code.github.io,https://github.com/su2code/SU2/issues/567,1,['config'],['configure']
Modifiability,. 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's ,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6308,config,config,6308,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,". Start with a CFL around 10 and converge the implicit system with LINEAR_SOLVER_ITER= 10 for each nonlinear iteration (FGMRES + ILU0 recommended). Activate the CFL adaption with. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 2.0, 10.0, 1e10); ```. It is important that the linear solve behaves well for each nonlinear iteration, so if this does not converge immediately, adjust the tolerance or number of linear iterations. Roe seems very stable, but some of the other upwind schemes or centered schemes may require improved Jacobian accuracy (to recover fast convergence) with:. ```; USE_ACCURATE_FLUX_JACOBIANS= YES; CENTRAL_JACOBIAN_FIX_FACTOR= 4.0; ```. ### RANS; Due to the segregated approach for the turbulence models, you have to be more conservative with the CFL adaption. All else is the same as above, but I recommend. ```; % Parameters of the adaptive CFL number (factor down, factor up, CFL min value,; % CFL max value ); CFL_ADAPT= YES; CFL_ADAPT_PARAM= ( 0.1, 1.2, 10.0, 1e3); ```. Most inviscid/laminar cases that I have tested so far converge to machine precision within a couple of hundred iterations. RANS cases within a few thousand. Ultra fine RANS meshes can still slow things down (MG could help there), but otherwise, speedups of an order of magnitude (or more) are possible for most problems. Experiment yourselves.. sometimes you can get even more performance, sometimes less, case depending. I could use help testing this one with your cases, since I think almost all regression tests will change. As a start, I have run all of the NASA TMR 2D bump-in-channel cases. Everything looks good with that (see figures). I have also checked that the inviscid and laminar MMS give 2nd-order accuracy properly. ![bump_cd_gridconv](https://user-images.githubusercontent.com/4896083/64910870-09f36b00-d6d0-11e9-9e1c-553fd09b42c8.png); ![bump_cf_0p63_gridconv](https://user-images.githu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790:2719,adapt,adaptive,2719,https://su2code.github.io,https://github.com/su2code/SU2/pull/790,1,['adapt'],['adaptive']
Modifiability,.. /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; ----,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5881,config,configure,5881,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['configure']
Modifiability,... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palac,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6579,config,config,6579,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"..654ba3dfc207e25c31da9c09860224ad4044a610), which was the original branch merged in #724. . Unfortunately, given that during this time both #753 and #774 were merged, the tests are failing now. Particularly, the disc_adj_fsi case runs into a segfault in `CDiscAdjSolver::ExtractAdjoint_CrossTerm_Geometry`, when trying to execute ; `geometry->node[iPoint]->GetAdjointCoord(Solution_Geometry);`. . I believe this is related to the changes to the index based recording introduced in #774, as the code was running before into the same problem in `CDiscAdjSolver::ExtractAdjoint_CrossTerm`, and now goes beyond this point having changed the Get routine into `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution);`. Currently, there is no `GetAdjointCoord_intIndexBased` or similar available, and its implementation requires some constructs for the indices. Therefore, I would like to ask for support from @oleburghardt and @pcarruscag to make this work with their changes. ## Related Work; #724 involuntarily removed the discrete adjoint FSI cases from the regression tests.; Branch [fix_discadjfsi](https://github.com/su2code/SU2/tree/fix_discadjfsi) successfully recovers the functionality removed.; #774 introduced relevant changes to the adjoint solver that are making.; #753 was merged and, although I tried to adapt to it, I can't guarantee it's working correctly. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [x] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803:1726,adapt,adapt,1726,https://su2code.github.io,https://github.com/su2code/SU2/pull/803,1,['adapt'],['adapt']
Modifiability,".0_intel2018u2/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -m64 -pthread -Wno-empty-body -Wno-unused-parameter -Wno-deprecated-declarations -Wno-non-virtual-dtor -DHAVE_CGNS -DNDEBUG -DHAVE_MPI -DHAVE_METIS -DHAVE_PARMETIS -DHAVE_TECIO -DTECIOMPI -DHAVE_MKL -DCODI_REVERSE_TYPE -MD -MQ SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -MF 'SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o.d' -o SU2_CFD/src/libSU2core_AD.a.p/solvers_CTurbSolver.cpp.o -c ../SU2_CFD/src/solvers/CTurbSolver.cpp; In file included from ../SU2_CFD/src/solvers/CTurbSolver.cpp:31:0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:3682,Variab,VariableType,3682,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,1,['Variab'],['VariableType']
Modifiability,".2.8.3; - Updated CGNS in parallel.; - Added the ability to writting 2 files at each checkpoint when using 2nd order dual time stepping; - Merge branch 'develop' into feature_dualoutput; - Updated FieldView; - Preliminary implementation (ASCII); - Minor changes; - Update code; - Updated FieldView format; - Merge branch 'develop' into feature_dualoutput; - Bug fixing; - Updated FieldView ASCII format; - Complete implementation of the FFD_CONTINUITY capability; - Updated FFD intersections; - ver 3.2.9; - adding targetea file to equivalent area adjoint folder. address issue #160; - Merge branch 'develop' of github.com:su2code/SU2 into develop; - Final push to v3.2.9; - after bootstrap; - updates to comments in config_structure to make doxygen pretty; - Bug fixing; - Merge branch 'develop'; - EA in ft^2; - further update to config; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - Minor changes; - Updated NF BC; - More adjustments; - Small update; - Final update Nearfield BC; - added massflowrate as option for cauchy criteria, more config file comments; - Merge remote-tracking branch 'upstream/develop' into upstream_dev; - paraview output modified/added back in for current version for SU2_DEF; - Merge branch 'develop' into feature_dualoutput; - Removed deprecated options from quicstart config.; - Working version of the compressible actuator disk; - Updated fixed CL mode.; - Very minor change; - Merge branch 'develop' into feature_dualoutput; - Final push to 3.2.9; - Merge branch 'develop'; - Minor change; - Minor change; - Small change; - Minor change; - Bug fixing: unsigned short val_vertex --> unsigned long val_vertex; - CFL adapt now works for adjoint problems; - Merge branch 'develop' into feature_dualoutput; - Fixing a typo; - Fix in the Euler BC for grid movement cases; - merging and fixing conflicts bwtn feature_dealloc and develop; - dealloc; - Time spectral fix.; - Merging some recent bug fixes from master into the develop branch to keep nsy",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:9016,config,config,9016,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,6,['config'],['config']
Modifiability,".7.5, and made sure to reconfigure (had an issue with the gnome-terminal, but solved).; I re-compiled everything, but unfortunately the error persists, so I checked .local/python3.7.5./site-packages/pyamg but no _amgio extension was there.; When I move in external/AMGIO/su2io/ and run :; `python3 setup.py build_ext && python3 setup.py install`; An error occours:; ```; running build_ext; building '_amgio' extension; swigging ./sources/Python3.7/amgio_py.i to ./sources/Python3.7/amgio_py_wrap.c; swig -python -o ./sources/Python3.7/amgio_py_wrap.c ./sources/Python3.7/amgio_py.i; x86_64-linux-gnu-gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O2 -Wall -g -fstack-protector-strong -Wformat -Werror=format-security -g -fwrapv -O2 -g -fstack-protector-strong -Wformat -Werror=format-security -Wdate-time -D_FORTIFY_SOURCE=2 -fPIC -I/usr/include/python3.7m -c ./sources/Python3.7/amgio_py.c -o build/temp.linux-x86_64-3.7/./sources/Python3.7/amgio_py.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/amgio_py.c:2:10: fatal error: Python.h: No such file or directory; #include ""Python.h""; ^~~~~~~~~~; compilation terminated.; error: command 'x86_64-linux-gnu-gcc' failed with exit status 1; ```; Shall I remove python2.7 as well?; Thanks. During compilation the following warning appears:; ```; cc1: warning: command line option ‘-Wno-non-virtual-dtor’ is valid for C++/ObjC++ but not for C; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfGetLinTab’:; ../externals/AMGIO/sources/libmeshb7.c:1391:35: warning: format ‘%lld’ expects argument of type ‘long long int *’, but argument 3 has type ‘int64_t * {aka long int *}’ [-Wformat=]; safe_fscanf(msh->hdl, ""%lld"", &IntTab[ (*IntCpt)++ ], msh->err);; ^ ~~~~~~~~~~~~~~~~~~~~~~; ../externals/AMGIO/sources/libmeshb7.c:475:23: note: in definition of macro ‘safe_fscanf’; if( fscanf(hdl, format, ptr) != 1 ) \; ^~~~~~; ../externals/AMGIO/sources/libmeshb7.c: In function ‘GmfSetLinTab’:; ../externals/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-619345758:1094,variab,variable,1094,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-619345758,1,['variab'],['variable']
Modifiability,".; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ; --- stderr ---; ; ; Message: Using mpi4py from C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\include; ""python-3.9-embed"" could not be found in LIBPC (None), this is likely due to a relocated python installation; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'python-3.9-embed' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion python-3.9-embed` -> 1; ; Found ""python-3.9-embed"" via fallback pkgconfig lookup in PKG_CONFIG_LIBDIR/PKG_CONFIG_PATH; Found ""python-3.9"" via SYSCONFIG module; Dependency python found: YES (sysconfig); Program install.sh found: YES (sh D:\Programme\SU2-7.1.1\SU2_PY/pySU2\install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; Te",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:7792,config,config,7792,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15949,plugin,plugins,15949,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,".c:28:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:87",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15167,config,configure,15167,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,".dependabot.com/actions/cache/pull/834"">PR</a>)</li>; </ul>; <h3>3.0.6</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/809"">#809</a> - zstd -d: no such file or directory error</li>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/833"">#833</a> - cache doesn't work with github workspace directory</li>; </ul>; <h3>3.0.7</h3>; <ul>; <li>Fixed <a href=""https://github-redirect.dependabot.com/actions/cache/issues/810"">#810</a> - download stuck issue. A new timeout is introduced in the download process to abort the download if it gets stuck and doesn't finish within an hour.</li>; </ul>; <h3>3.0.8</h3>; <ul>; <li>Fix zstd not working for windows on gnu tar in issues <a href=""https://github-redirect.dependabot.com/actions/cache/issues/888"">#888</a> and <a href=""https://github-redirect.dependabot.com/actions/cache/issues/891"">#891</a>.</li>; <li>Allowing users to provide a custom timeout as input for aborting download of a cache segment using an environment variable <code>SEGMENT_DOWNLOAD_TIMEOUT_MIN</code>. Default is 60 minutes.</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/fd5de65bc895cf536527842281bea11763fefd77""><code>fd5de65</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/899"">#899</a> from actions/kotewar/download-and-compression-fix</li>; <li><a href=""https://github.com/actions/cache/commit/d49b6bb21d712fc1556f99339b8324b1603f7560""><code>d49b6bb</code></a> Updated actions/cache toolkit dep to v3.0.4</li>; <li><a href=""https://github.com/actions/cache/commit/a7c34adf76222e77931dedbf4a45b2e4648ced19""><code>a7c34ad</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/actions/cache/issues/894"">#894</a> from actions/kotewar/update-toolkit-version</li>; <li><a href=""https://github.com/actions/cache/commit/83394c99b7089b29ee6c302fad5e94",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1755:6800,variab,variable,6800,https://su2code.github.io,https://github.com/su2code/SU2/pull/1755,1,['variab'],['variable']
Modifiability,.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpV,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15638,plugin,plugins,15638,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The current SU2 release has been coordinated by the |; | SU2 International Developers Society <www.su2devsociety.org> |; | with selected contributions from the open-source community. |; -------------------------------------------------------------------------; | The main research teams contributing to the current release are: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Pr,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:6492,config,config,6492,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,".py script. The command used was:. ```; python3 $SU2_RUN/mesh_adaptation_amg.py -f adapt_Mesh.cfg -n 4; ```; The script initiates the mesh adaptation process as expected, with the following output:. ```; SU2-AMG Anisotropic Mesh Adaptation. Mesh adaptation options:; PYADAP_COMPLEXITY : (30000, 60000, 120000); PYADAP_SUBITE : (2, 2, 2); PYADAP_SENSOR : GOAL; PYADAP_HMAX : 500.0; PYADAP_HMIN : 1e-9; PYADAP_HGRAD : 1.8. ./adap exists. Removing old mesh adaptation in 10s.; The ./adap folder was deleted. Generating GMF background surface mesh.; Initial CFD solution is provided.; ```; However, no _adap\ite0_ folder gets created. ; The log.err file in the _adap/ini_ directory provides this traceback:. ```; Traceback (most recent call last):; File "".../mesh_adaptation_amg.py"", line 111, in <module>; ...; RuntimeError: ...; Error in TokenizeString(): two or more options before an ""="" sign in the configuration file.; terminate called after throwing an instance of 'int'; ...; *** Process received signal ***; Signal: Aborted (6); Signal code: (-6); ...; ```. The critical part of this error seems to be the Error in TokenizeString() message, suggesting an issue with parsing the configuration file. This error typically indicates a syntax problem, such as having multiple options on a single line without proper separation by an equal sign (=). However, upon reviewing _adap/ini/config_CFD.cfg_, was unable to find any lines that clearly violated this syntax rule. Could this error be indicative of a more subtle issue within the configuration file, or might it be related to specific aspects of the feature_adap branch? Any insights, suggestions, or guidance on how to troubleshoot this error would be greatly appreciated. If anyone has a working adapt_mesh.cfg file for a similar setup or for the feature_adap branch, I would be very interested in seeing it. Understanding the configuration details of a working example could be highly beneficial in resolving my issue. Thank you for your help!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809:1520,config,configuration,1520,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-1847333809,6,['config'],['configuration']
Modifiability,".stderr = sav_stderr; ; else:; required_options=['SOLUTION_FLOW_FILENAME']; if not all (opt in config for opt in required_options):; err = '\n\n## ERROR : RESTART_SOL is set to YES, but the solution is missing:\n'; for opt in required_options:; if not opt in config:; err += opt + '\n'; raise RuntimeError , err; ; current_mesh = config['MESH_FILENAME']; current_solution = config['SOLUTION_FLOW_FILENAME']; ; sys.stdout.write('Initial CFD solution is provided.\n'); ; #--- Check existence of initial mesh, solution; ; required_files = [current_mesh,current_solution]; ; if not all (os.path.exists(fil) for fil in required_files):; err = '\n\n## ERROR : Can\'t find:\n'; for fil in required_files:; if not os.path.exists(fil):; err += fil + '\n'; raise RuntimeError , err; ; #--- Start looping; ; # Get mesh dimension; dim = su2amg.get_su2_dim(current_mesh); if ( dim != 2 and dim != 3 ):; raise RuntimeError , ""Wrong dimension number\n""; ; #--- AMG parameters; ; config_amg = dict(); ; config_amg['hgrad'] = float(config['ADAP_HGRAD']); config_amg['hmax'] = float(config['ADAP_HMAX']); config_amg['hmin'] = float(config['ADAP_HMIN']); config_amg['mesh_in'] = 'current.meshb'; config_amg['mesh_out'] = 'current.new.meshb'; config_amg['metric_in'] = ''; config_amg['sol_in'] = 'current_sensor.solb'; config_amg['itp_sol_in'] = 'current.solb'; config_amg['adap_source'] = ''; ; if 'ADAP_BACK' in config:; config_amg['adap_back'] = os.path.join(cwd,config['ADAP_BACK']); #os.symlink(os.path.join(cwd, config.ADAP_BACK), config.ADAP_BACK); else:; config_amg['adap_back'] = config['MESH_FILENAME']; ; print ""config_amg : "" + config_amg['adap_back']; back_name, back_extension = os.path.splitext(config_amg['adap_back']); ; if not os.path.exists(config_amg['adap_back']):; raise RuntimeError , ""\n\n##ERROR : Can't find back mesh: %s.\n\n"" % config_amg['adap_back']; ; if back_extension == "".su2"":; ; #pyamg.su2_to_libmeshb(config_amg['adap_back'], """", ""amg_back""); print ""skipping back mesh ...""; #import _",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:6629,config,config,6629,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,3,['config'],['config']
Modifiability,"/21182966/28308831-b937bf76-6ba7-11e7-9108-e8a2ab959b74.png). Then I noticed a difference in SENS_GEO (which is the second term of the upper equation, right?) between compressible and incompressible. . ![image](https://user-images.githubusercontent.com/21182966/28310143-bb28c42a-6bab-11e7-8c14-8409b6b12027.png). So if the scale is adjusting current step size the step of dC and SENS_GEO represents the second term, then the SENS_GEO would change when the scale is changed. But this is not the case for incompressible and compressible. . In short, the only noticeable change, due to scaling, occurs in deformation folder of DSN_002. But this is after the optimization step, which is really confusing. Scaling adjusts the current step size and because it can not find a sufficient decrease it is halving the dv_value. But then one should expect different values in the adjoint folder for different scale factors, right?. I hope you can use this information and can tell me whether it is a correct behavior of the optimizer. I should also note that I did not make use of constraints, just as in the test case. I read that the optimizer will switch from optimization procedure. I think this should not matter because of the test case. . I attached also the configure files (compressible (working, scale= 0.01) and incompressible (not working, scale =0.01)) and the mesh file, which is in both cases the same file. [compressible_cfg.txt](https://github.com/su2code/SU2/files/1155421/compressible_cfg.txt); [incompressible_cfg.txt](https://github.com/su2code/SU2/files/1155427/incompressible_cfg.txt); [mesh_300_su2.txt](https://github.com/su2code/SU2/files/1155430/mesh_300_su2.txt). I hope I provide enough information so that one can clarify the behavior of the optimizer. I also appreciate if one can tell me which variables have to be kept in mind. I really want to learn from this and if more information is needed, I really do not mind to provide it. Many thanks in advance!. Floris van der Schuur",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/409#issuecomment-316018103:3795,config,configure,3795,https://su2code.github.io,https://github.com/su2code/SU2/issues/409#issuecomment-316018103,4,"['config', 'variab']","['configure', 'variables']"
Modifiability,"/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_mean.cpp , I've read compute_residual of CUSP and found something doubtly.; ; At line 643 . > for (iDim = 0; iDim < nDim; iDim++) {; Velocity_i[iDim] = V_i[iDim+1];; Velocity_j[iDim] = V_j[iDim+1];; sq_vel_i += 0.5*Velocity_i[iDim]*Velocity_i[iDim];; sq_vel_j += 0.5*Velocity_j[iDim]*Velocity_j[iDim];; }; ; SoundSpeed_i = sqrt(Gamma*Gamma_Minus_One*(Energy_i-0.5*sq_vel_i));; SoundSpeed_j = sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j));. Here I assume is computing Roe-Sound-Speed, but sq_vel_j's coefficient is not 1/4 but 1/2.; >sqrt(Gamma*Gamma_Minus_One*(Energy_j-0.5*sq_vel_j)). And I don't know whether it's suitable to mix original CUSP and simplified CUSP.; Here, in computing dissipation parameters, SU2 used a simplified Lamda. > LamdaNeg = ProjVelocity - MeanSoundSpeed;; LamdaPos = ProjVelocity + MeanSoundSpeed;. I've read paper and there are two kind of computing-dissipation-parameter method, SU2 seems mixed them. Whether it's legal?. At line 729 ; > if ((Beta > 0.0) && ((0.0 < Mach) && (Mach < 1.0))) Nu_c = - (1.0-Beta)*LamdaNeg;. In Computational Fluid Dynamics (Computational Fluid Dynamics: Principles and Applications (Third Edition)[J]. Computational Fluid Dynamics Principles & Applications, 2015:ix.); Nu_c seems to be - (1.0+Beta)*LamdaNeg. And I want to know which configuration is suit for this condition, thanks~. That's all my confusion. I don't know where I've done wrong and where I've misunderstood. ：）",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:4689,config,configuration,4689,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['config'],['configuration']
Modifiability,/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D Me,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15740,plugin,plugins,15740,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16211,plugin,plugins,16211,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInitItems.h (142) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtCaepSupportData.h (83) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/rtPwpVersions.h (64) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite.c (439) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/runtimeWrite_orig.txt (60) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:16937,plugin,plugins,16937,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"/SU2/SU2_PY/pySU2'; make real;; make[2]: Entering directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; swig -DHAVE_MPI -qopenmp -O3 -Wall -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/.local/lib/python2.7/site-packages/mpi4py/include -I/home/dic17007/miniconda3/lib/python3.6/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2/pySU2.i; swig error : Unrecognized option -qopenmp; swig error : Unrecognized option -O3; Use 'swig -help' for available options.; make[2]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[2]: Leaving directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; make[1]: *** [all] Error 2; make[1]: Leaving directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; make: *** [all-recursive] Error 1; ```. my configure:; ```shell; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./configure --prefix=$HOME/share/SU2/6.1 \; --enable-mpi \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-PY_WRAPPER \; --enable-tecio \; --enable-parmetis \; --enable-metis \; --enable-cgns. make -j8; ```. I manually build the output object `SU2_APIPYTHON_wrap.cxx` and complete the build:; ```shell; [dic17007@cn01 SU2]$ cd /home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2; [dic17007@cn01 pySU2]$ swig -DHAVE_MPI -Wall -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/.local/lib/python2.7/site-packages/mpi4py/include -I/home/dic17007/miniconda3/lib/python3.6/site-packag",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/566:4036,config,configure,4036,https://su2code.github.io,https://github.com/su2code/SU2/issues/566,2,['config'],"['config', 'configure']"
Modifiability,"/index.html) and ninja build system to eventually replace autotools and make. A [lot of bigger projects](https://mesonbuild.com/Users.html) already use that system (e.g. GNOME, systemd ...) or are transitioning. Compared to autotools and make, building the code should be faster, especially if you build with more cores, as all objects files are build truly in parallel (with make only objects of the same target are build in parallel). Another advantage is that meson has multiplatform support for linux, mac and windows. . ### Why not cmake ?; Meson files are much easier to read and in general it is much better to maintain. Furthermore it has a great documentation. Finally, meson has no dependencies apart from python and we can easily ship it (as a submodule) since it needs no installation/compilation. . ### What is ninja ?; ninja is a replacement for make and is used to execute the compiler and to resolve dependencies. Meson uses ninja as the default backend. So instead of using configure + make, we use meson + ninja. As with meson, we can ship it as a submodule. It needs a compilation, but again it has no dependencies apart from python. ### How to use ?; The correct meson and ninja versions are added as git submodules. So in case you don't have meson and ninja installed (there should be packages available for all major distros), compile ninja using:. ```; cd externals/ninja; ./configure.py --bootstrap; cd ..; export PATH=$PWD/externals/ninja:$PWD/externals/meson:$PATH; ```; and run meson using; ```; meson.py build --prefix=$PWD -Denable-pywrapper=true -Denable-autodiff=true; ```; to ocnfigure SU2 with the python wrapper and AD support enabled. MPI support will be enabled by default if a proper mpi installation can be found. ; Finally compile the code with; ```; ninja -C build; ```. - ""build"" in the commands above is a folder where the configuration will be stored. You can configure multiple directories with different configurations (like for a debug build etc); - ninj",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745:1083,config,configure,1083,https://su2code.github.io,https://github.com/su2code/SU2/pull/745,1,['config'],['configure']
Modifiability,/pull/814/files#diff-4> (25); * A SU2_GEO/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-5> (9); * A SU2_MSH/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26>,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5701,Config,ConfigureMKL,5701,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureMKL']
Modifiability,"/pySU2'; swig -DHAVE_MPI -qopenmp -O3 -Wall -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/.local/lib/python2.7/site-packages/mpi4py/include -I/home/dic17007/miniconda3/lib/python3.6/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wrap.cxx -c++ -python /home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2/pySU2.i; swig error : Unrecognized option -qopenmp; swig error : Unrecognized option -O3; Use 'swig -help' for available options.; make[2]: *** [SU2_APIPYTHON_wrap.cxx] Error 1; make[2]: Leaving directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; make[1]: *** [all] Error 2; make[1]: Leaving directory `/home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2'; make: *** [all-recursive] Error 1; ```. my configure:; ```shell; CPPFLAGS=""-qopenmp -O3"" \; LDFLAGS=""-parallel"" \; PYTHON_CONFIG=`which python3-config` \; CC=`which mpiicc` \; CXX=`which mpiicpc` \; ./configure --prefix=$HOME/share/SU2/6.1 \; --enable-mpi \; --with-HDF5-lib=/apps2/hdf5/1.8.17-ics-impi/lib \; --with-HDF5-include=/apps2/hdf5/1.8.17-ics-impi/include \; --with-ZLIB-lib=/apps2/zlib/1.2.8-ics/lib \; --with-ZLIB-include=/apps2/zlib/1.2.8-ics/include \; --with-SZIP-lib=/home/dic17007/share/szip/2.1.1/lib \; --with-SZIP-include=/home/dic17007/share/szip/2.1.1/include \; --enable-PY_WRAPPER \; --enable-tecio \; --enable-parmetis \; --enable-metis \; --enable-cgns. make -j8; ```. I manually build the output object `SU2_APIPYTHON_wrap.cxx` and complete the build:; ```shell; [dic17007@cn01 SU2]$ cd /home/dic17007/downloads/SU2/SU2/SU2_PY/pySU2; [dic17007@cn01 pySU2]$ swig -DHAVE_MPI -Wall -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/miniconda3/include/python3.6m -I/home/dic17007/.local/lib/python2.7/site-packages/mpi4py/include -I/home/dic17007/miniconda3/lib/python3.6/site-packages/mpi4py/include -I/Library/Python/2.7/site-packages/mpi4py/include -outdir ./ -o SU2_APIPYTHON_wr",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/566:4194,config,configure,4194,https://su2code.github.io,https://github.com/su2code/SU2/issues/566,1,['config'],['configure']
Modifiability,"/sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified bound 33 equals destination size [-Wstringop-truncation]; strncpy(str_buf, SolTag[i], CGNS_STRING_SIZE);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(m",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:4228,variab,variable,4228,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,2,['variab'],['variable']
Modifiability,"/tree/master"",; 22 version= ""8.0.0""; 23 ); 24 ); 25 sim_results.to_file(""./simulation_out/cached.pkl""); 27 # sim_results = SimulationResult.from_file(""./simulation_out/cached.pkl""). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/simulation.py:21, in run_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 19 if isinstance(cfg, Su2SimulationConfig):; 20 from paraflow.simulation.su2 import run_su2_simulation; ---> 21 sim_results = run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 23 return sim_results. File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/paraflow/simulation/su2.py:161, in run_su2_simulation(passage, params, working_directory, id, auto_delete, verbose, num_procs, cfg); 158 vtu_filename = vtu_filename.replace(""."", f""_{i}.""); 160 grids += [read_vtu_data(vtu_filename)]; --> 161 eval_values = pd.read_csv(config[""CONV_FILENAME""]); 164 if auto_delete:; 165 delete_output_files(config, config_path, num_zones). File ~/miniforge3/envs/cadquery/lib/python3.11/site-packages/pandas/io/parsers/readers.py:1024, in read_csv(filepath_or_buffer, sep, delimiter, header, names, index_col, usecols, dtype, engine, converters, true_values, false_values, skipinitialspace, skiprows, skipfooter, nrows, na_values, keep_default_na, na_filter, verbose, skip_blank_lines, parse_dates, infer_datetime_format, keep_date_col, date_parser, date_format, dayfirst, cache_dates, iterator, chunksize, compression, thousands, decimal, lineterminator, quotechar, quoting, doublequote, escapechar, comment, encoding, encoding_errors, dialect, on_bad_lines, delim_whitespace, low_memory, memory_map, float_precision, storage_options, dtype_backend); 1011 kwds_defaults = _refine_defaults_read(; 1012 dialect,; 1013 delimiter,; (...); 1020 dtype_backend=dtype_backend,; 1021 ); 1022 kwds.update(kwds_defaults); -> 1024 return _read(filepath_or_buffer, kwds). File ~/miniforge3/envs/",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2204:3688,config,config,3688,https://su2code.github.io,https://github.com/su2code/SU2/issues/2204,2,['config'],['config']
Modifiability,/usr/lib64/mpich/bin/mpicxx... gcc3; checking whether we are using the GNU C compiler... yes; checking whether /usr/lib64/mpich/bin/mpicc accepts -g... yes; checking for /usr/lib64/mpich/bin/mpicc option to accept ISO C89... none needed; checking dependency style of /usr/lib64/mpich/bin/mpicc... gcc3; checking whether /usr/lib64/mpich/bin/mpicc and cc understand -c and -o together... yes; checking for ranlib... ranlib; checking whether we are using the GNU C++ compiler... (cached) yes; checking whether /usr/lib64/mpich/bin/mpicxx accepts -g... (cached) yes; checking dependency style of /usr/lib64/mpich/bin/mpicxx... (cached) gcc3; checking for python... /usr/bin/python; checking for python version... 2.7; checking for python platform... linux2; checking for python script directory... ${prefix}/lib/python2.7/site-packages; checking for python extension module directory... ${exec_prefix}/lib64/python2.7/site-packages; checking for python2.7-config... /usr/bin/python2.7-config; checking python include flags... -I/usr/include/python2.7 -I/usr/include/python2.7; checking how to run the C preprocessor... /usr/lib64/mpich/bin/mpicc -E; checking for grep that handles long lines and -e... /usr/bin/grep; checking for egrep... /usr/bin/grep -E; checking for ANSI C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis suppo,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:4646,config,config,4646,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,"0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 641, in generate_target; elem = self.generate_link(target, outname, obj_list, linker, pch_objects, stdlib_args=stdlib_args); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2571, in generate_link; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2453, in guess_external_link_dependencies; staticlibs = self.guess_library_absolute_path(linker, libname,; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2395, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 922, in _get_file_from_list; if f.is_file():; File ""C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\pathlib.py"", line 1439, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\pathlib.py"", line 1221, in stat; return self._accessor.stat(self); OSError: [WinError 123] Die Syntax für den Dateinamen, Verzeichnisnamen oder die Datenträgerbezeichnung ist fal",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:14152,extend,extend,14152,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['extend'],['extend']
Modifiability,"03: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNIST",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12071,config,configure,12071,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"04. ## Validation and Verification; - V&V of features that lack coverage (i.e. a particular fluid model, design variable, etc.), followed by regression test and ideally tutorial #581; - Put the V&V cases under regression to ensure they are up to date (similar to what is done with tutorials). ## Testing and test cases; - More unit tests #698; - Cleanup of TestCases to make them ""Minimum working examples"" (no redundant options, no duplication of descriptions from the config template, etc.).; - ""Obscure"" features (""things that SU2 does"" to some extent but are: incomplete, not validated / regression-tested, not documented) cleanup obsolete examples in TestCases, and identify features lacking test coverage, decide what to do with those features. ## Code maintenance; - Better support / documentation for building SU2 directly on Windows. #1468; - Replacing the legacy output #1316; - General C++ cleanup #1218; - Deprecate legacy build system. ## Robust convergence; - Multigrid issues on unstructured grids and less robust with MPI in general e.g. #1362 #1549; - Reduced stability of fluid-fluid interfaces #1414; - Reduced stability of periodic boundary conditions #1467; - Convergence in poor quality meshes, or anisotropically adapted. ## Customization; - More flexible outputs (user-defined #1478, consistent SCREEN and HISTORY #1493, file output frequency #1539); - Python wrapper: expose more inputs to allow e.g. time-dependent boundary conditions; tutorials. ## Optimization; - Add SU2_DOT to python wrapper, refactor to use CMeshSolver #1300; - Allowing more inputs as design variables.; - Overhaul the entire optimization framework #733; - Try to use FADO in more cases to assess the impact of removing the existing shape_optimization.py; - Improve mesh deformation method (maintain quality, prevent intersections, etc.). ## Completely new development areas; - Overset meshes.; - GPU.; - Polygonal meshes.; - Adaptive mesh refinement (some external possibilities possible, e.g. #948).",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1487:2978,adapt,adapted,2978,https://su2code.github.io,https://github.com/su2code/SU2/issues/1487,5,"['Adapt', 'adapt', 'flexible', 'refactor', 'variab']","['Adaptive', 'adapted', 'flexible', 'refactor', 'variables']"
Modifiability,"0507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195149921-6e85c1c7-2fc8-47e9-b935-246081ea17fd.png). SA+LM2015; ![Results](https://user-images.githubusercontent.com/43813346/195152304-e81c92f3-35da-4c50-9cd8-e5528c644cde.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. More comments to the code will be added in the following days. Especially to the declaration of some functions. I know that it is not the most good-looking code right now but I preferred uploading it now such that others can use it even if it is not really clean. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1788:3659,extend,extends,3659,https://su2code.github.io,https://github.com/su2code/SU2/pull/1788,1,['extend'],['extends']
Modifiability,"055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <stdio.h>; | #ifdef HAVE_SYS_TYPES_H; | # include <sys/types.h>; | #endif; | #ifdef HAVE_SYS_STAT_H; | # include <sys/stat.h>; | #end",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12488,config,configure,12488,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"06821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the incompressible CHT cases run into problems. . So I’ve also taken the chance to move some initialization and some calls to the specific physics-based transfer structures, making use of the polymorphism of the transfer code. This way the parent class remains opaque to the physics. At the same time, I cleaned up some long-time unused routines, made the Broadcast_Data the default for zone interfaces, and removed the MATCHING_MESH option as it is just a particular case of Nearest Neighbour. ## Related Work. - Complements the sliding interface feature by @LaSerpe in #389 by adding the corresponding functions to the incompressible flow solver. - Removes MATCHING_MESH option as discussed with @pcarruscag in #597. - Removes some compilation warnings due to unused variables. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [X] I have added a test case that demonstrates my contribution, if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:2763,variab,variables,2763,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['variab'],['variables']
Modifiability,"0:; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; CScalarSolver<VariableType>::CScalarSolver(bool conservative) : CSolver(), Conservative(conservative) {}; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:33:101: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl: In instantiation of ‘CScalarSolver<VariableType>::CScalarSolver(CGeometry*, CConfig*, bool) [with VariableType = CTurbVariable]’:; ../SU2_CFD/src/solvers/CTurbSolver.cpp:34:16: required from here; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::lowerlimit [2]’; : CSolver(), Conservative(conservative) {; ^; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::upperlimit [2]’; ../SU2_CFD/src/solvers/../../include/solvers/CScalarSolver.inl:37:43: error: invalid initializer for array member ‘su2double CScalarSolver<CTurbVariable>::Solution_Inf [2]’; [726/994] Compiling C++ object SU2_CFD/src/libSU2core_AD.a.p/solvers_CEulerSolver.cpp.o; ninja: build stopped: subcommand failed. **I suspect it got something to do with my GCC version. Since I can't update the system GCC, I tried to build the newer version of GCC locally and used it to build SU2. But ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1420:4224,Variab,VariableType,4224,https://su2code.github.io,https://github.com/su2code/SU2/issues/1420,2,['Variab'],['VariableType']
Modifiability,"0b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6967,config,config,6967,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"0e-06 ); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/slsqp.py"", line 236, in fmin_slsqp; mieq = len(f_ieqcons(x)); File ""/usr/lib/python2.7/dist-packages/scipy/optimize/optimize.py"", line 176, in function_wrapper; return function(x, _args); File ""/media/1tb/SU2/SU2_PY/SU2/opt/scipy_tools.py"", line 187, in con_cieq; cons = project.con_cieq(x); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 223, in con_cieq; return self._eval(konfig, func,dvs); File ""/media/1tb/SU2/SU2_PY/SU2/opt/project.py"", line 172, in _eval; vals = design._eval(func,_args); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 132, in _eval; vals = eval_func(_inputs); File ""/media/1tb/SU2/SU2_PY/SU2/eval/design.py"", line 422, in con_cieq; func = su2func(this_con,config,state); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 75, in function; aerodynamics( config, state ); File ""/media/1tb/SU2/SU2_PY/SU2/eval/functions.py"", line 200, in aerodynamics; info = su2run.direct(config); File ""/media/1tb/SU2/SU2_PY/SU2/run/direct.py"", line 75, in direct; SU2_CFD(konfig); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 93, in CFD; run_command( the_Command ); File ""/media/1tb/SU2/SU2_PY/SU2/run/interface.py"", line 279, in run_command; raise Exception , message; Exception: Path = /media/1tb/SU2/onera6/DESIGNS/DSN_001/DIRECT/,; Command = mpirun -np 4 /usr/local/bin/SU2_CFD config_CFD.cfg; SU2 process returned error '134'; CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0CSysVector::CSysVector(unsigned int,unsigned int,double): CSysVector::CSysVector(unsigned int,unsigned int,double): invalid input: numBlk, numVar = 0,5; ,5; invalid input: numBlk, numVar = 0terminate called after throwing an instance of 'terminate called after throwing an instance of 'int'; ,5; [ system:14029] *_\* Process received signal ***; int[ system:14029] Signal: Aborted (6); [ system:14029] Signal code: (-6); terminate called after throwing an instance of 'int'; '",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/23:1698,config,config,1698,https://su2code.github.io,https://github.com/su2code/SU2/issues/23,1,['config'],['config']
Modifiability,"0x00000000004b0dcf in CSysVector<double>::squaredNorm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:331; ---Type <return> to continue, or q <return> to quit---; #7 0x00000000004b0cf0 in CSysVector<double>::norm (this=0x23a20d0); at ../SU2_CFD/src/integration/../../include/integration/../solvers/../../../Common/include/linear_algebra/CSysVector.hpp:337; #8 0x0000000000da260b in CSysSolve<double>::BCGSTAB_LinSolver (; this=0x23a2240, b=..., x=..., mat_vec=..., precond=..., ; tol=1.0000000000000001e-15, m=20, residual=@0x7fffffff8fb8: 0, ; monitoring=false, config=0x209bc10); at ../Common/src/linear_algebra/CSysSolve.cpp:553; #9 0x0000000000da404a in CSysSolve<double>::Solve (this=0x23a2240, ; Jacobian=..., LinSysRes=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:6502,config,config,6502,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"1) after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type **set MSMPI_LIB64=\\%MSMPI_LIB64%** in cmd or **$env:MSMPI_LIB64=""\\""+$env:MSMPI_LIB64** in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;; 2)after Configuration, you should find the file named ""build.ninja"" in folder called ""build"", then open it as a text editor, you can look for string ""**-l\\\\**"" through the entire file, you wiil find several of strings like ""-l\\\\D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi"", it's the path of msmpi installation, it may be a little different in your pc, then you should replace all strings with ""D:\\\\mpi\\\\Microsoft_SDKs\\\\MPI\\\\Lib\\\\x64\\\\msmpi.lib"", it's path of **msmpi.lib**, please use your own path;; 3) Last ,type **ninja -C build install** to compile，this time it will be all right.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082:58,Variab,Variable,58,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-997986082,2,"['Config', 'Variab']","['Configuration', 'Variable']"
Modifiability,"1.	While running in parallel a Fluid Structure Interaction case in SU2 for square cylinder with beam using the following command: **/usr/local/bin/parallel_computation.py -f config.cfg -n 12**; I am getting the following error: ; //; ('Unexpected error: ', <type 'exceptions.KeyError'>); Traceback (most recent call last):; File ""/usr/local/bin/parallel_computation.py"", line 110, in <module>; main(); File ""/usr/local/bin/parallel_computation.py"", line 57, in main; options.compute ); File ""/usr/local/bin/parallel_computation.py"", line 71, in parallel_computation; config = SU2.io.Config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 93, in __init__; self.read(filename); File ""/usr/local/bin/SU2/io/config.py"", line 142, in read; konfig = read_config(filename); File ""/usr/local/bin/SU2/io/config.py"", line 784, in read_config; Mesh_Filename = data_dict['MESH_FILENAME']; KeyError: 'MESH_FILENAME'; //. 2.	It is running fine in serial using the command : *SU2_CFD config.cfg** . I have also tried with mpirun. ; 3.	Execution command: **mpirun -n 12 /usr/local/bin/SU2_CFD config.cfg** . the simulation is running but I guess parallel execution is not done properly because it is showing the following error: . [DESKTOP-8N08ELC:00100] 11 more processes have sent help message help-btl-vader.txt / cma-permission-denied; [DESKTOP-8N08ELC:00100] Set MCA parameter ""orte_base_help_aggregate"" to 0 to see all help / error messages. Kindly let me know how to resolve the issue. . OS : ubuntu 18.04 ; C++ version : GCC 7.3.0; MPI implementation and version : mpirun (Open MPI) 2.1.1; SU2 version: 7.6.0",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1094:174,config,config,174,https://su2code.github.io,https://github.com/su2code/SU2/issues/1094,8,"['Config', 'config']","['Config', 'config']"
Modifiability,"1.1\build\meson-private\sanitycheckcpp.exe; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++ (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Build machine cpu family: x86_64; Build machine cpu: x86_64; Host machine cpu family: x86_64; Host machine cpu: x86_64; Target machine cpu family: x86_64; Target machine cpu: x86_64; Program python3 found: YES (C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:5814,config,config-lite-,5814,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config-lite-']
Modifiability,"1.6/gnu/5.3.0/lib/openmpi/mca_coll_hcoll.so; #3 0x00002aaaaad2b34e in PMPI_Allgather (); from /share/hpc_apps/openmpi/3.1.6/gnu/5.3.0/lib/libmpi.so.40; #4 0x000000000062fc74 in CBaseMPIWrapper::Allgather (sendbuf=0x214f670, ; sendcnt=1, sendtype=0x2aaaaafb4de0 <ompi_mpi_double>, recvbuf=0x213a400, ; recvcnt=1, recvtype=0x2aaaaafb4de0 <ompi_mpi_double>, ; comm=0x2aaaaafbbc60 <ompi_mpi_comm_world>); at ../SU2_CFD/src/output/filewriter/../../../include/output/filewriter/../../../../Common/include/parallelization/mpi_structure.hpp:220; #5 0x0000000000860117 in CSolver::SetResidual_RMS (this=0x21381c0, ; geometry=0x21cb340, config=0x2073590); at ../SU2_CFD/src/solvers/CSolver.cpp:2183; #6 0x00000000007b6af8 in CHeatSolver::ImplicitEuler_Iteration (; this=0x21381c0, geometry=0x21cb340, solver_container=0x23a1c10, ; config=0x2073590) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1549; #7 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x2381f70, ; geometry=0x21cb340, solver_container=0x23a1c10, config=0x2073590, ; iRKStep=0, RunTime_EqSystem=21); ---Type <return> to continue, or q <return> to quit---; at ../SU2_CFD/src/integration/CIntegration.cpp:205; #8 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x2381f70, geometry=0x1fdc8b0, solver_container=0x1db9ad0, ; numerics_container=0x1fddb10, config=0x1a6cb50, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; #9 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_movement=0x1a6cc30, grid_movement=0x1a6cc50, FFDBox=0x1a6cc70, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #10 0x00000000004db2ba in CFluidIteration::Solve (this=0x218fdc0, ; output=0x20c8630, integration=0x1a59a90, geometry=0x1fdc8b0, ; solver=0x1db9ad0, numerics=0x1fddb10, config=0x1a6cb50, ; surface_mov",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:2688,config,config,2688,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~; ./sources/Python3.7/amgio_py.c:624:9: note: 'sprintf' output between 5 and 1028 bytes into a destination of size 1024; sprintf(OutSol, ""%s.dat"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; ./sources/Python3.7/amgio_py.c:614:26: warning: '.solb' directive writing 5 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~; ./sources/Python3.7/amgio_py.c:614:7: note: 'sprintf' output between 6 and 1029 bytes into a destination of size 1024; sprintf(OutSol, ""%s.solb"", BasNamSol);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:2662,variab,variable,2662,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end con",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:8152,config,configure,8152,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #define SIZEOF_LONG_INT 8; | #define SIZEOF_FLOAT 4; | #define SIZEOF_DOUBLE 8; | #define SIZEOF_VOID_P 8; | /* end confdefs.h. */; | #include <X11/Intrinsic.h>; configure:5409: result: no; configure:5409: checking for X11/Intrinsic.h; configure:5409: result: no; configure:5721: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/lib/libcgns.a; configure:5735: result: yes; configure:5755: checking for /gshare/soft/code_saturne/4.0.0/prod/cgnslib_3.2.1/include/cgnslib.h; configure:5769: result: yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:15241,config,configure,15241,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"1ST_ORDER, 2ND_ORDER, 2ND_ORDER_LIMITER); %; SPATIAL_ORDER_FLOW= 2ND_ORDER_LIMITER; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to r",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:2310,config,configuration,2310,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['config'],['configuration']
Modifiability,"2 for a Linux distribution like Mageia or Fedora or Debian. Just for information , here the patch I made : . ```; Index: SU2-2.0.8/configure; ===================================================================; --- SU2-2.0.8/configure; +++ SU2-2.0.8/configure 2013-12-08 13:56:04.120804942 +0100; @@ -1369,7 +1369,7 @@; --with-Tecio-lib=ARG Tecio library directory, ARG = path to libtecio.a; --with-Tecio-include=ARG; Tecio include directory, ARG = path to TECIO.h; - --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.a; + --with-Metis-lib=ARG Metis library directory, ARG = path to libmetis.so; --with-Metis-include=ARG; Metis include directory, ARG = path to metis.h; --with-Metis-version=ARG; @@ -2619,7 +2619,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/configure.ac; ===================================================================; --- SU2-2.0.8/configure.ac; +++ SU2-2.0.8/configure.ac 2013-12-08 13:56:33.410426071 +0100; @@ -32,7 +32,7 @@; AS_HELP_STRING([--with-Tecio-include[=ARG]], [Tecio include directory, ARG = path to TECIO.h]), ; [with_Tecio_include=$withval], [with_Tecio_include=""no""]); AC_ARG_WITH(Metis-lib,; - AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.a]), ; + AS_HELP_STRING([--with-Metis-lib[=ARG]], [Metis library directory, ARG = path to libmetis.so]), ; [with_Metis_lib=$withval], [with_Metis_lib=""no""]); AC_ARG_WITH(Metis-include,; AS_HELP_STRING([--with-Metis-include[=ARG]], [Metis include directory, ARG = path to metis.h]), ; @@ -121,7 +121,7 @@; ###########################. # check for lib; -METISlib=libmetis.a; +METISlib=libmetis.so; METISheader=metis.h; METISversion=; have_METIS=""no""; Index: SU2-2.0.8/Common/src/geometry_structure.cpp; ===================================================================; --- SU2-2.0.8/Common/src/geometry_structure.cpp; +++ SU2-2.0.8/C",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/19:1548,config,configure,1548,https://su2code.github.io,https://github.com/su2code/SU2/issues/19,1,['config'],['configure']
Modifiability,"2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@arch-linux-hp-probook-g3-450: SU2HOME$ ./ninja -C build install; ninja: Entering directory `build'; [756/772] Generating 'SU2_PY/pySU2/_pysu2.so.p/pySU2.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [760/772] Generating 'SU2_PY/pySU2/_pysu2ad.so.p/pySU2ad.cxx'.; ../SU2_PY/pySU2/../../Common/include/mpi_structure.hpp:348: Warning 325: Nested struct not currently supported (Status ignored); [771/772] Installing files.; .; .; ```; Here is the [entire output fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:1426,variab,variables,1426,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,2,['variab'],['variables']
Modifiability,"20200130-2) 9.2.1 20200130""); C linker for the host machine: cc ld.bfd 2.34; C++ compiler for the host machine: c++ (gcc 9.2.1 ""c++ (Arch Linux 9.2.1+20200130-2) 9.2.1 20200130""); C++ linker for the host machine: c++ ld.bfd 2.34; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Message: Boost sources found.; Found pkg-config: /usr/bin/pkg-config (1.6.3); Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_HOME; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0.git at /home/slimshady/UserPackages/SU2_HOME/ninja; ```; I think I should mention, I cloned the `develop` branch and used [this commit](https://github.com/su2code/SU2/commit/ad6311322b9952f92584d3e141237e7156cdc07c):; `git checkout ad6311322b9952f92584d3e141237e7156cdc07c`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776:1988,Config,Configuration,1988,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634298776,3,"['Config', 'config', 'variab']","['Configuration', 'configuration', 'variables']"
Modifiability,"2357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; ## WARNING: REMOVING DUPLICATED FACE 12357 12359 12358 ; 14368 Vertex ; 3 Boundary Vertices ; 58189 Tetrahedra ; 1 Triangles ; 0 Edges ; 1 Surface(s) ; % Output subdom.meshb Mesh ndimn=3, mpoin=14368, melem=58189, mface=1; Corners 0 Required 0 ; ## ERROR : TETRAHEDRON 2 BOUNDARY FACE 1 2; 9 IS MISSING ; ## ERROR : TETRAHEDRON 4 BOUNDARY FACE 3 7; 2324 IS MISSING ; ···; ## ERROR: FEFLO.A: 16740 BOUNDARY FACES ARE MISSING ; CHECK YOUR MESH . ## FATAL ERROR: FEFLOA: INITIAL OR CURRENT MESH HAS AN INCONSISTANT TOPOLOGY . Thank you for using feflo.a . ```; Which in turn creates an invalid `amg.su2` mesh in the `adap/ite0 folder`, which triggers the fault.; I'm a bit puzzled as the domain is very simple, and the `log.out` is going well (with no complains of SU2 about any negative volume or trias with wrong normals). The mesh is only made of TRIAS and TETRAS, it should work in principle.; Am I missing something in the setup / mesh? I know you have little control on the `amg.out`, but maybe there some special hint that I'm missing. . Btw the final error in the terminal is but I think the problem arises before reaching `flo.csv` file:; ```; Traceback (most recent call last):; File ""/usr/local/bin/mesh_adaptation_amg.py"", line 111, in <module>; main(); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 72, in main; options.save_all ); File ""/usr/local/bin/mesh_adaptation_amg.py"", line 101, in mesh_adaptation_amg; SU2.run.amg(config); File ""/usr/local/bin/SU2/run/amg.py"", line 464, in amg; os.rename(cur_solfil, cur_solfil_ini); FileNotFoundError: [Errno 2] No such file or directory: 'flo.csv' -> 'flo_ini.csv'. ```; Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-623572280:2939,config,config,2939,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-623572280,2,['config'],['config']
Modifiability,2\SU2_PY\set_ffd_design_var.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_polar.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\compute_multipoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\discrete_adjoint.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\direct_differentiation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\fsi_computation.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2_CFD.py to C:\bin\bin; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/__init__.py to C:\bin\bin/SU2; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/design.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/functions.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/gradients.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/eval/__init__.py to C:\bin\bin/SU2/eval; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/config_options.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/data.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/filelock.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/redirect.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/state.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/tools.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/historyMap.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/io/__init__.py to C:\bin\bin/SU2/io; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/project.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\SU2/opt/scipy_tools.py to C:\bin\bin/SU2/opt; Installing C:\Users\Danie\Documents\SU2\SU2_PY\,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1376:5572,config,config,5572,https://su2code.github.io,https://github.com/su2code/SU2/issues/1376,1,['config'],['config']
Modifiability,"3 found: YES (/home/tjim/anaconda3/envs/sound/bin/python); Run-time dependency MPI for c found: YES 4.0.3; Run-time dependency MPI for cpp found: YES 4.0.3; WARNING: Use the 'pic' kwarg instead of passing '-fpic' manually to 'meshb7'; Message: Boost sources found.; Run-time dependency mkl-static-lp64-seq found: YES 2020 Update 4; Program swig found: YES (/home/tjim/anaconda3/envs/sound/bin/swig); Message: Using mpi4py from /home/tjim/anaconda3/envs/sound/lib/python3.7/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.6; Program install.sh found: YES (/bin/sh /opt/su2/SU2_src/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.3 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/opt/su2/SU2v7_adap/bin; export SU2_HOME=/opt/su2/SU2_src; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 19; Found ninja-1.10.0.git at /opt/su2/SU2_src/ninja; ```; Where the `Run-time dependency python3` is reported as the system v3.6 whereas I'm running 3.7.8. Could it be that amg was installed into the system python? But before running meson, I had activated my python conda environment and mpi4py seems to be picked up from the right one. I'm just not sure why it also finds 3.6. Can you give me some tips for troubleshooting this?; Thanks very much!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751431778:2774,variab,variables,2774,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751431778,2,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"3-450:590584] [ 0] /usr/lib/libc.so.6(+0x3bd70)[0x7f6d73811d70]; [arch-linux-hp-probook-g3-450:590584] [ 1] /usr/lib/openmpi/libmpi.so.40(PMPI_Comm_rank+0x37)[0x7f6d75627837]; [arch-linux-hp-probook-g3-450:590584] [ 2] SU2_CFD(+0x1023dc)[0x563dd30cd3dc]; [arch-linux-hp-probook-g3-450:590584] [ 3] /usr/lib/libc.so.6(__libc_start_main+0xf3)[0x7f6d737fd023]; [arch-linux-hp-probook-g3-450:590584] [ 4] SU2_CFD(+0x118bbe)[0x563dd30e3bbe]; [arch-linux-hp-probook-g3-450:590584] *** End of error message ***; Segmentation fault (core dumped); ```. **Desktop (please complete the following information):**; - OS: Arch Linux x86_64; - C++ compiler and version: g++, gcc 9.2.1; - MPI implementation and version: OpenMPI v4.0.2; MPICH v3.3.2; - SU2 Version: v7.0.4; - Python Version: 3.8.1. This is my output of `mpirun --version`, if that is useful:; ```; HYDRA build details:; Version: 3.3.2; Release Date: Tue Nov 12 21:23:16 CST 2019; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=NONE' '--cache-file=/dev/null' '--srcdir=/home/slimshady/Downloads/mpich-3.3.2/src/pm/hydra' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=' 'CPPFLAGS= -I/home/slimshady/UserPackages/MPICH_HOME/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/mpl/include -I/home/slimshady/Downloads/mpich-3.3.2/src/openpa/src -I/home/slimshady/UserPackages/MPICH_HOME/src/openpa/src -D_REENTRANT -I/home/slimshady/UserPackages/MPICH_HOME/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. ```. The build runs on an ubuntu machine with the following details:; - OS: Ubuntu 18.04.4 LTS x86_64; - C++ compiler and version: g++, gcc 7.5.0; - MPI implementation and version: MPICH 3.3.1; - SU2 Version: v7.0.4; ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000:1715,Config,Configure,1715,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000,1,['Config'],['Configure']
Modifiability,"3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure:4423: cc -c conftest.c -o conftest2.o >&5; configure:4427: $? = 0; configure:4445: result: yes; configure:4513: checking for ranlib; configure:4529: found /usr/bin/ranlib; configure:4540: result: ranlib; configure:4574: checking how to run the C preprocessor; configure:4605: gcc -E conftest.c; configure:4605: $? = 0; configure:4619: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4619: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexiste",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:7555,config,configure,7555,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"3cdd717-28d1-453c-a867-77c99494f86f.png). ![image](https://user-images.githubusercontent.com/50565314/148771466-f1613617-0502-4809-9861-a64f4ce0dee7.png). Finally, the production term becomes :; ; ![image](https://user-images.githubusercontent.com/50565314/148732458-c5d7bbd7-bd68-4416-bac2-979aa006512e.png). This term( ![image](https://user-images.githubusercontent.com/50565314/148732925-d66edf19-484a-4c4e-b518-3cff8ef935f0.png) ) becomes zero in incompressible flow(from continuity equation ![image](https://user-images.githubusercontent.com/50565314/148760571-f54c54eb-a897-4786-a859-c40aee873792.png) ), but the compressible flow is not zero. . In the SU2 source code( line 849 in [SU2_CFD/src/numerics/turbulent/turb_sources.cpp](https://github.com/su2code/SU2/blob/master/SU2_CFD/src/numerics/turbulent/turb_sources.cpp)), the production term of SU2's SST model is ; ""pk = Eddy_Viscosity_i*StrainMag_i*StrainMag_i - 2.0/3.0*Density_i*ScalarVar_i[0]*diverg;"" . Rewrite above code to equation : ; ![image](https://user-images.githubusercontent.com/50565314/148732626-7160aca1-11be-4754-8e7d-cb3a8af7dfa5.png). The omit of ![image](https://user-images.githubusercontent.com/50565314/148760652-ba17b0d5-c6fe-4169-81e5-8797b1d67dc1.png) term is a bug, or has some special reason?. ![image](https://user-images.githubusercontent.com/50565314/148732925-d66edf19-484a-4c4e-b518-3cff8ef935f0.png) term is not an issue in incompressible flow like low Mach number simulation. But, in a high Mach number simulation, it may make a noticeable difference. Q.2). The stress tensor in RANS simulation is following : . ![image](https://user-images.githubusercontent.com/50565314/148759208-effb0643-a903-48d4-9ef2-3b46162ad5f8.png). From [Running cases with CFD of NASA TMR](https://turbmodels.larc.nasa.gov/noteonrunning.html) : ""In the equation above, the![image](https://user-images.githubusercontent.com/50565314/148731540-ace2cac5-4168-48d8-9125-c053806ba463.png) term is **sometimes ignored for non-supers",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1551:2980,Rewrite,Rewrite,2980,https://su2code.github.io,https://github.com/su2code/SU2/issues/1551,1,['Rewrite'],['Rewrite']
Modifiability,"4-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/mesh.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\mesh.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/GMFio.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\gmfio.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/SU2io.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\su2io.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/SU2io.c: In function 'LoadSU2Elements':; ./sources/Python3.7/SU2io.c:231:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'LoadSU2ConnData':; ./sources/Python3.7/SU2io.c:466:51: warning: variable 'idx' set but not used [-Wunused-but-set-variable]; int iElt, NbrElt=0, typ, is[8], swi[8], buf, s, idx, res;; ^~~; ./sources/Python3.7/SU2io.c: In function 'GetSU2SolSize':; ./sources/Python3.7/SU2io.c:787:3: warning: implicit declaration of function 'getline'; did you mean 'getenv'? [-Wimplicit-function-declaration]; getline(&lin, &len, FilHdl);; ^~~~~~~; getenv; ./sources/Python3.7/SU2io.c: In function 'WriteSU2SolutionBin':; ./sources/Python3.7/SU2io.c:1317:10: warning: variable 'ret' set but not used [-Wunused-but-set-variable]; size_t ret;; ^~~; ./sources/Python3.7/SU2io.c:1339:5: warning: 'strncpy' specified boun",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:3370,variab,variable,3370,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,4/files#diff-6> (8); * A SU2_PY/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-7> (24); * A SU2_PY/pySU2/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-8> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> ,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:5881,Config,ConfigureMetis,5881,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureMetis']
Modifiability,422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:14521,plugin,plugins,14521,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"42deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L3640) of `Common/src/grid_adaptation_structure.cpp` below:. 	/*--- Selection of the elements to be adapted ---*/; 	threshold = 0.999;; 	nElem_real = 0;; 	while (nElem_real <= max_elem) {; 		for (iElem = 0; iElem < geometry->GetnElem(); iElem ++); 			if ( Sensor[iElem] >= threshold && !geometry->elem[iElem]->GetDivide() ) {; 				if (geometry->elem[iElem]->GetVTK_Type() == TRIANGLE) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == QUADRILATERAL) nElem_real = nElem_real + 3;; 				if (geometry->elem[iElem]->GetVTK_Type() == TETRAHEDRON) nElem_real = nElem_real + 7;; 				geometry->elem[iElem]->SetDivide(true);; 				if (nElem_real >= max_elem) break;; 			}	; 		threshold = threshold - 0.001;; 	}. As you can see, if all of the elements are hexahedral, the threshold will keep decreasing but `nElem_real` will never increase, and the loop will never end. This is an easy fix, and I've already fixed it on a local branch. But I'm also wondering why grid adaptation doesn't work for hexahedra. It's not just this section of code that doesn't work. There's other sections too. One of the biggest ones is at [lines 2369-2386](https://github.com/su2code/SU2/blob/22fa337afd26a44234344483142deff0f9524ae0/Common/src/grid_adaptation_structure.cpp#L2369) of `Common/src/grid_adaptation_structure.cpp`. In that section, all hexahedra are explicitly _removed_ from the grid adaptivity process. This is rather confusing, because there is a **lot** of code in the CGridAdaptation class that is set up for adaptation of hexahedra. The [AIAA paper from 2013](https://arc.aiaa.org/doi/abs/10.2514/6.2013-287) even dedicates a whole paragraph to explaining the hexahedral grid adaptation. I understand that a pure hex grid can be a poor case for adaptive grid refinement, but I would like to try the grid adaptivity on a hybrid mesh (with hexes and tets). Is there some reason that grid adaptivity for hexahedra is ""turned off""?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487:1485,adapt,adaptation,1485,https://su2code.github.io,https://github.com/su2code/SU2/issues/487,7,['adapt'],"['adaptation', 'adaptive', 'adaptivity']"
Modifiability,5) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/unstructured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19545,plugin,plugins,19545,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,54: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; config,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10730,config,configure,10730,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,"6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\backend\ninjabackend.py"", line 321, in generate; self.generate_target(t); File """,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12817,config,configuration,12817,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['configuration']
Modifiability,"61.1; Source dir: F:\suflow\code\Su-FVMu-Solver; Build dir: F:\suflow\code\Su-FVMu-Solver\build; Build type: native build; Project name: SU2; Project version: 7.5.1 ""Blackbird""; C compiler for the host machine: gcc (gcc 8.1.0 ""gcc.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C linker for the host machine: gcc ld.bfd 2.30; C++ compiler for the host machine: c++ (gcc 8.1.0 ""c++.exe (x86_64-posix-seh-rev0, Built by MinGW-W64 project) 8.1.0""); C++ linker for the host machine: c++ ld.bfd 2.30; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (C:\Users\zeng\AppData\Local\Programs\Python\Python37\python.exe); WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.platlibdir"" option.; WARNING: Python files installed by Meson might not be found by python interpreter.; This warning can be avoided by setting ""python.purelibdir"" option.; Found pkg-config: C:\Program Files\mingw-w64\bin\pkg-config.EXE (0.26); mpicc found: NO; Run-time dependency MPI for c found: YES; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig, config-tool and system). meson.build:61:2: ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system. A full log can be found at F:\suflow\code\Su-FVMu-Solver\build\meson-logs\meson-log.txt; ```. meson-log.txt: ; [meson-log.txt](https://github.com/su2code/SU2/files/12427739/meson-log.txt). **Bug report checklist**. - [x] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Windows/).; - [x] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [x] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: Windows 11; - C++ compiler and version: gcc.exe (x86_64-posix-seh-rev0, Built by Mi",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:1234,config,config,1234,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,2,['config'],['config']
Modifiability,"6_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../x86_64-w64-mingw32/8.1.0/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../lib/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/x86_64-w64-mingw32/8.1.0/;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Progra",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12349,Config,Configuration,12349,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['Config'],['Configuration']
Modifiability,75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CA,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18819,plugin,plugins,18819,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"79-bdf5ef00-23a8-11e9-9466-d360fdc42733.png); ![temperature](https://user-images.githubusercontent.com/8706821/51894683-bfbfb280-23a8-11e9-8ffe-1901b33677bf.png). and also for unsteady problems. ![unsteady](https://user-images.githubusercontent.com/8706821/51894695-c4846680-23a8-11e9-87f5-35041d71fee4.gif). For the latter case I haven’t yet rotated the inner circle, because there are some missing features for dynamic meshes in the incompressible solver. The previous test case for steady-state flows has been added. One for unsteady flows will be enabled once the new output is in place, as the current output structure makes the regression scripts fail. The previous, however, opened a can of worms, as there were some physics based calls in the parent transfer structure (e.g. `GetnSlidingStates()`, `SetSlidingState()` and `SetnSlidingStates()`) that made the incompressible CHT cases run into problems. . So I’ve also taken the chance to move some initialization and some calls to the specific physics-based transfer structures, making use of the polymorphism of the transfer code. This way the parent class remains opaque to the physics. At the same time, I cleaned up some long-time unused routines, made the Broadcast_Data the default for zone interfaces, and removed the MATCHING_MESH option as it is just a particular case of Nearest Neighbour. ## Related Work. - Complements the sliding interface feature by @LaSerpe in #389 by adding the corresponding functions to the incompressible flow solver. - Removes MATCHING_MESH option as discussed with @pcarruscag in #597. - Removes some compilation warnings due to unused variables. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new ",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/638:2186,polymorphi,polymorphism,2186,https://su2code.github.io,https://github.com/su2code/SU2/pull/638,1,['polymorphi'],['polymorphism']
Modifiability,"8) : Error: Unable to find 'mpi4py\mpi4py.i'; [2/10] Linking static target externals/cgns/hdf5/libsu2hdf5.a; ninja: build stopped: subcommand failed.; ```. **To Reproduce**; Firstly, I install the `mpi4py` in a conda environment. And I am sure I have install `mpi4py`:. ```; (SU2) C:\Users\ZHQ>python; Python 3.7.11 (default, Jul 27 2021, 09:42:29) [MSC v.1916 64 bit (AMD64)] :: Anaconda, Inc. on win32; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> from mpi4py import MPI; >>> MPI; <module 'mpi4py.MPI' from 'D:\\Anaconda\\envs\\SU2\\lib\\site-packages\\mpi4py\\MPI.cp37-win_amd64.pyd'>; >>>; ```; But the `python ./meson.py build` find another python environment:; ```; Program python3 found: YES (C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe); ```; I have find a similar issure (https://github.com/su2code/SU2/issues/722). This issue suggestion that we need to modify the `Makefile`. However, since I build SU2 in Win10, I have no `Makefile`. Then, I find the `build/build.ninja` specified the location of `python.exe`. So I modify the `python.exe` location in `build.ninja` by:; 1. modify all `C:\Users\ZHQ\AppData\Local\Microsoft\WindowsApps\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\python.exe` to `D:\Anaconda\envs\SU2\python.exe`. ; 2. modify all `C$:/Users/ZHQ/AppData/Local/Microsoft/WindowsApps/PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0/python.exe` to `D$:/Anaconda/envs/SU2/python.exe`. Then, `.\ninja.exe -C build install` again, but the bug is still reported. . I even add the `mpi4py` to the computer environment variable:. But the bug is still reported. **Desktop (please complete the following information):**; - OS: Win 10; - C++ compiler and version: as the recommanded gcc version 8.1.0 (x86_64-posix-seh-rev0, Built by MinGW-W64 project); - MPI implementation and version: as the recommanded v10.1.2; - SU2 Version: 7.3.0 ""Blackbird"". Any suggestion is appreciated~~~",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575:2166,variab,variable,2166,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575,1,['variab'],['variable']
Modifiability,"810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/../lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../../x86_64-w64-mingw32/lib/;C:/Program Files/mingw-w64/x86_64-8.1.0-posix-seh-rt_v6-rev0/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/8.1.0/../../../;C:/mingw810/x86_64-810-posix-seh-rt_v6-rev0/mingw64/mingw/lib/; ; Compiler stderr:; . In Command Window i got this message:; Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.1.1 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: false; PaStiX: false; Mixed Float: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=D:\Programme\SU2-7.1.1\bin/bin; export SU2_HOME=D:\Programme\SU2-7.1.1; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C D:\Programme\SU2-7.1.1\build install' to compile and install SU2. Build targets in project: 20. Found ninja.exe-1.9.0 at D:\Programme\SU2-7.1.1\ninja.exe; Traceback (most recent call last):; File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\mesonmain.py"", line 131, in run; return options.run_func(options); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 245, in run; app.generate(); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 159, in generate; self._generate(env); File ""D:\Programme\SU2-7.1.1\externals\meson\mesonbuild\msetup.py"", line 215, in _generate; intr.backend.generate(); File ""D:\Programme\SU2-7.1.1\ex",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:12709,variab,variables,12709,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['variab'],['variables']
Modifiability,"88-5 for SST and https://doi.org/10.2514/6.1992-439 for SA. Validation test cases will be uploaded in the following days. . The most important results can be found in the pdf of my presentation at the SU2 Conference 2022. https://polimi365-my.sharepoint.com/:b:/g/personal/10507725_polimi_it/EUswl9Jw0XhIuozrOjXqX6sBdscM30lRZ7mwMZcr5anvyA?e=41db5P. One recent result is the application of the transition model to the Sickle wing test case for -2.67° of the angle of attack. SST+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034422-5a7fb987-208c-4da6-8282-5c912e671dbc.png). SA+LM2015; ![Cf](https://user-images.githubusercontent.com/43813346/203034460-7719f3ce-6674-4281-83fd-82ce064c452a.png). The lower surface is represented on the left, whereas the upper surface is on the right. At the moment the wind tunnel walls have not been taken into account. This can explain the spanwise shift of the transition with respect to the experimental results. More results are incoming. . Please, any suggestions on how to clean up the code or on how to make it more efficient are very well accepted. . ## Related Work; Work is related to the PR #1751. It extends it to SA turbulence model and includes cross-flow effects (LM2015) and turbulence index computations. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810:2529,extend,extends,2529,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810,1,['extend'],['extends']
Modifiability,"988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unrecognized option '-qversion'; gcc: no input files; configure:3999: $? = 1; configure:4003: checking whether we are using the GNU C compiler; configure:4022: gcc -c conftest.c >&5; configure:4022: $? = 0; configure:4031: result: yes; configure:4040: checking whether gcc accepts -g; configure:4060: gcc -c -g conftest.c >&5; configure:4060: $? = 0; configure:4101: result: yes; configure:4118: checking for gcc option to accept ISO C89; configure:4181: gcc -c -g -O2 conftest.c >&5; configure:4181: $? = 0; configure:4194: result: none needed; configure:4216: checking dependency style of gcc; configure:4327: result: gcc3; configure:4345: checking whether gcc and cc understand -c and -o together; configure:4376: gcc -c conftest.c -o conftest2.o >&5; configure:4380: $? = 0; configure:4386: gcc -c conftest.c -o conftest2.o >&5; configure:4390: $? = 0; configure:4401: cc -c conftest.c >&5; configure:4405: $? = 0; configure:4413: cc -c conftest.c -o conftest2.o >&5; configure:4417: $? = 0; configure",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:6569,config,configure,6569,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,14,['config'],['configure']
Modifiability,"9\python.exe); Pkg-config binary for MachineChoice.HOST is not cached.; None of 'PKG_CONFIG' are defined in the environment, not changing global flags.; Pkg-config binary missing from cross or native file, or env var undefined.; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\Kle",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6335,config,config,6335,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10868,config,configure,10868,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,": yes; configure:6815: checking that generated files are newer than configure; configure:6821: result: done; configure:6952: creating ./config.status. ## ---------------------- ##; ## Running config.status. ##; ## ---------------------- ##. This file was extended by SU2 config.status 4.1.0, which was; generated by GNU Autoconf 2.69. Invocation command line was. CONFIG_FILES = ; CONFIG_HEADERS = ; CONFIG_LINKS = ; CONFIG_COMMANDS = ; $ ./config.status . on master. config.status:875: creating externals/tecio/Makefile; config.status:875: creating externals/metis/Makefile; config.status:875: creating externals/parmetis/Makefile; config.status:875: creating Makefile; config.status:875: creating externals/Makefile; config.status:875: creating Common/lib/Makefile; config.status:875: creating SU2_CFD/obj/Makefile; config.status:875: creating SU2_DOT/obj/Makefile; config.status:875: creating SU2_MSH/obj/Makefile; config.status:875: creating SU2_DEF/obj/Makefile; config.status:875: creating SU2_SOL/obj/Makefile; config.status:875: creating SU2_GEO/obj/Makefile; config.status:875: creating SU2_PY/Makefile; config.status:1047: executing depfiles commands; configure:8181: result:. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 4.1.0 'Cardinal' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | SU2 Lead Dev.: Dr. Francisco Palacios, Francisco.D.Palacios@boeing.com|; | Dr. Thomas D. Economon, economon@stanford.edu |; -------------------------------------------------------------------------; | SU2 Developers: |; | - Prof. Juan J. Alonso's group at Stanford University. |; | - Prof. Piero Colonna's group at Delft University of Technology. |; | - Prof. Nicolas R. Gauger's group at Kaiserslautern U. of Technology. |; | - Prof. Alberto Guardone's group at Polytechnic University of Milan. |; | - Prof. Rafael Palacios' group at Imperial Col",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:16532,config,config,16532,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['config']
Modifiability,":. + There's an extra square root in the calculation of `Baux`, which leads `Baux` to have units of 1/time. That throws off the nondimensionalization of the blending constant.; + The square root in the calculation of `Lturb` is in the wrong place. Travin only takes the square root of the denominator.; + Travin _et al._ took the variables `Lturb` and `g` and used them to build a new variable, `A`, that was used to set the blending parameter. In the code, `LTurb` is simply multiplied by `Gaux`. This doesn't match the paper, and it's not going to scale correctly either. `Lturb` should have units of length, and multiplying a length by a nondimensional parameter does not give you a nondimensional parameter.; + The variable `Omega` isn't consistent with `StrainMag`. `StrainMag` has a factor of sqrt(2) built in, but `Omega` doesn't. The original paper actually doesn't specify if the factor of sqrt(2) should be included, but the code should at least be consistent.; + The value of the variable `ch3` is 2 in the code, but 0.5 in the paper. I've corrected these mistakes, but I wanted to get feedback on the results. This section of code was not covered by any existing regression tests, and the validation cases in the [SU2-DDES paper](http://dx.doi.org/10.2514/6.2017-4284) don't use the NTS blending. Meaningful verification and validation of hybrid RANS/LES is both tricky and computationally expensive (compared to RANS). So any input (especially from @EduardoMolina) on what tests to use would be appreciated. Otherwise, I'll come up with my own test. ## Related Work; This hybrid upwind/central blending was introduced by @EduardoMolina as part of PR #490. ## PR Checklist. - [x] I am submitting my contribution to the develop branch.; - [x] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [x] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demons",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/532:1694,variab,variable,1694,https://su2code.github.io,https://github.com/su2code/SU2/pull/532,1,['variab'],['variable']
Modifiability,":. ```; module load mkl/latest; module load mpi/openmpi-x86_64. CFLAGS=""-mtune=native -march=native -fPIC"" CXXFLAGS=""-mtune=native -march=native -fPIC"" LDFLAGS=""-fPIC"" CC=$(which mpiicc) CC=$(which mpicc) CXX=$(which mpicxx) ./meson.py --prefix=/home/panos/Applications/SU2 --optimization=3 -Denable-cgns=true -Denable-mkl=true -Denable-autodiff=true -Denable-directdiff=true -Denable-pywrapper=true -Dwith-mpi=enabled build. Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.3.0 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------. Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: true; OpenBlas: false; PaStiX: false; Mixed Float: false; libROM: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/panos/Applications/SU2/bin; export SU2_HOME=/home/panos/Development/SU2/SU2_SRC; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 25. SU2 7.3.0 ""Blackbird"". User defined options; optimization : 3; prefix : /home/panos/Applications/SU2; enable-autodiff : true; enable-cgns : true; enable-directdiff: true; enable-mkl : true; enable-pywrapper : true; with-mpi : enabled. Found ninja-1.10.0.git at /home/panos/Development/SU2/SU2_SRC/ninja; ```. When compiling the process fails when trying to link with the libz library:. ```; [1357/1358] Linking target SU2_PY/pySU2/_pysu2ad.so; FAILED: SU2_PY/pySU2/_pysu2ad.so; /usr/lib64/openmpi/bin/mpicxx -o SU2_PY/pySU2/_pysu2ad.so SU2_PY/pySU2/_pysu2ad.so.p/meson-generated_pySU2ad.c",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1568:1608,variab,variables,1608,https://su2code.github.io,https://github.com/su2code/SU2/issues/1568,1,['variab'],['variables']
Modifiability,":1134138] [ 6] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a94e76]; [super:1134138] [ 7] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x1a9590d]; [super:1134138] [ 8] /opt/su2/SU2v7_adap/bin/SU2_CFD[0xabb1bb]; [super:1134138] [ 9] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ddf6b]; [super:1134138] [10] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7ded07]; [super:1134138] [11] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7df356]; [super:1134138] [12] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x7e445f]; [super:1134138] [13] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x45ba61]; [super:1134138] [14] /lib64/libc.so.6(__libc_start_main+0xf3)[0x7fb93c13c7b3]; [super:1134138] [15] /opt/su2/SU2v7_adap/bin/SU2_CFD[0x47216e]; [super:1134138] *** End of error message ***; --------------------------------------------------------------------------; Primary job terminated normally, but 1 process returned; a non-zero exit code. Per user-direction, the job has been aborted.; --------------------------------------------------------------------------; --------------------------------------------------------------------------; mpirun noticed that process rank 38 with PID 0 on node super exited on signal 6 (Aborted).; --------------------------------------------------------------------------; ```. Sometimes it hangs to the `UCX ERROR` lines straight after `Building the graph adjacency structure.` in Geometry Preprocessing and other times, it seems to run fine for the first batch of iterations until it hits the first solution file writing iteration (as set by `OUTPUT_WRT_FREQ`) show in the above output snip. Do you have any hints on how to debug this or what might be causing this? Thanks. **To Reproduce**; I've attached the mesh and config file in [this link](https://drive.google.com/drive/folders/12J3u9NsowQoVz8Dl7eQaFia7BaBflenJ?usp=sharing). **Desktop (please complete the following information):**; - OS: Linux CentOS 8; - C++ compiler and version: GCC 8.22; - MPI implementation and version: Intel (Open MPI) 3.0.0; - SU2 Version: v7.0.3 (feature_adap branch)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1156:3658,config,config,3658,https://su2code.github.io,https://github.com/su2code/SU2/issues/1156,1,['config'],['config']
Modifiability,"; # solver iterations/ residual reduction param for each size level; adap_ext_iter = su2amg.get_ext_iter(config); adap_res = su2amg.get_residual_reduction(config). adap_sensor = config.ADAP_SENSOR; sensor_avail = ['MACH', 'PRES', 'MACH_PRES']; ; if adap_sensor not in sensor_avail:; raise RuntimeError , 'Unknown adaptation sensor (ADAP_SENSOR option)\n'; ; if len(mesh_sizes) != len(sub_iter):; raise RuntimeError , 'Inconsistent number of mesh sizes and sub-iterations'; ; #--- Use the python interface to amg, or the executable?; ; amg_python = su2amg.get_python_amg(config); ; #--- Change current directory; ; warn = False; adap_dir = './ADAP'; cwd = os.getcwd(); ; if os.path.exists(adap_dir):; sys.stdout.write('./ADAP exists. Removing old mesh adaptation in 10s.\n'); sys.stdout.flush(); if warn : time.sleep(10); shutil.rmtree(adap_dir); ; os.makedirs(adap_dir); os.chdir(adap_dir); sys.stdout.write('The %s folder was deleted\n' % adap_dir); ; os.symlink(os.path.join(cwd, config.MESH_FILENAME), config.MESH_FILENAME); os.symlink(os.path.join(cwd, config.SOLUTION_FLOW_FILENAME), config.SOLUTION_FLOW_FILENAME); ; #--- Compute initial solution if needed, else link current files; ; config_cfd = copy.deepcopy(config); for opt in adap_options:; config_cfd.pop(opt, None); config_cfd.LOW_MEMORY_OUTPUT = ""NO""; ; config_cfd.WRT_BINARY_RESTART = ""NO""; #config_cfd.READ_BINARY_RESTART = ""NO""; ; current_mesh = ""Initial_mesh""; current_solution = ""Initial_solution""; ; if config['RESTART_SOL'] == 'NO':; ; stdout_hdl = open('ini.stdout','w') # new targets; stderr_hdl = open('ini.stderr','w'); ; success = False; val_out = [False]; ; sys.stdout.write('Running initial CFD solution.\n'); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_mesh = config['MESH_FILENAME']; current_solution = ""ini_restart_flow.dat""; ; config_cfd.CONV_FILENAME = ""ini_history""; config_cfd.RESTART_FLOW_FILENAME = current_s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:4488,config,config,4488,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['config'],['config']
Modifiability,"; %; % Slope limiter (VENKATAKRISHNAN, MINMOD); SLOPE_LIMITER_FLOW= VENKATAKRISHNAN; %; % 1st, 2nd and 4th order artificial dissipation coefficients; AD_COEFF_FLOW= ( 0.15, 0.5, 0.02 ); %; % Time discretization (RUNGE-KUTTA_EXPLICIT, EULER_IMPLICIT, EULER_EXPLICIT); TIME_DISCRE_FLOW= EULER_IMPLICIT. ![cusp3levcfl4limiterven](https://user-images.githubusercontent.com/32992485/32143715-c2a2c30c-bce8-11e7-93c6-52a1b2a9a07f.png); When I modify CFL number to 1.0, SU2 doesn't diverged but oscillating at 10^-5 order; ![cusp3levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32143795-16abef90-bcea-11e7-94d5-e248812c385d.png). I forced it stopped and compare result with JST scheme:; >CUSP(3Level multigrid); Total CL: 0.336272 ; Total CD: 0.0220499 ; JST (3Level multigrid); Total CL: 0.326933 ; Total CD: 0.0213497 ; ; The result is acceptable.; But when I change the limiter to""BARTH_JESPERSEN""(The configuration file doesn't show it); (still CFL = 1.0; Same multigrid configuration); SU2 converged quickly.; ![cusp3levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32143902-c058ebdc-bceb-11e7-9b55-32ca093fd729.png); What's more, the result is also acceptable. Based on above results, I set no multigrid working.; SU2 still oscillating when CFL number is 4.0 (Both VENKATAKRISHNAN and BARTH_JESPERSEN limiter); BARTH_JESPERSEN ; ![cusp0levcfl1limiterbarth](https://user-images.githubusercontent.com/32992485/32144074-55ab5434-bcee-11e7-9492-2228fedce56d.png); VENKATAKRISHNAN; ![cusp0levcfl1limiterven](https://user-images.githubusercontent.com/32992485/32144104-a49af86a-bcee-11e7-8918-5328e404a4c6.png); Analogously, I set CFL to 1 again.; But VENKATAKRISHNAN converged but BARTH_JESPERSEN still oscillating. I don't why CUSP occur this situation. Is there any bug in multigrid, limiter and CUSP scheme?. ; I know my ability and knowledge are limited, but I still try to read the code. Some simple ""bugs"" I've found but I doubt it.; In numerics_direct_me",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/465:2380,config,configuration,2380,https://su2code.github.io,https://github.com/su2code/SU2/issues/465,1,['config'],['configuration']
Modifiability,; * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30> (108); * A externals/parmetis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#d,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:6165,Config,ConfigureTecio,6165,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureTecio']
Modifiability,; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/Upgra,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15002,plugin,plugins,15002,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.h (1030) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiUtils.h (174) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/pwpPlatform.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/site.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.props (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/structured.vsprops (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/CaeTemplate.vcproj (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/module.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/modulelocal-sample.mk (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepInstanceData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/rtCaepSupportData.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/CAEP/runtimeWrite.c (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpInitItems.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpPluginInfo.h (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/templates/PWP/rtPwpVersions.h (0) ; - D MeshTools/PointwiseSU2plugin/src/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:19475,plugin,plugins,19475,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,"; ../externals/cgns/hdf5/H5Dchunk.c:1832:41: warning: passing argument 1 of 'H5S_combine_hyperslab' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]; if (H5S_combine_hyperslab(fm->file_space, H5S_SELECT_AND, coords, NULL, fm->chunk_dim, NULL,; ~~^~~~~~~~~~~~; In file included from ../externals/cgns/hdf5/H5Zprivate.h:29,; from ../externals/cgns/hdf5/H5CXprivate.h:30,; from ../externals/cgns/hdf5/H5Dchunk.c:54:; ../externals/cgns/hdf5/H5Sprivate.h:278:45: note: expected 'H5S_t *' {aka 'struct H5S_t *'} but argument is of type 'const H5S_t *' {aka 'const struct H5S_t *'}; H5_DLL herr_t H5S_combine_hyperslab(H5S_t *old_space, H5S_seloper_t op, const hsize_t start[],; ~~~~~~~^~~~~~~~~; ../externals/cgns/hdf5/H5Dchunk.c: In function 'H5D__chunk_allocate':; ../externals/cgns/hdf5/H5Dchunk.c:4299:52: warning: initialization discards 'const' qualifier from pointer target type; -Wdiscarded-qualifiers]; H5O_storage_chunk_t *sc = &(layout->storage.u.chunk); /* Convenience variable */; ^; ../externals/cgns/hdf5/H5Dchunk.c: In function 'H5D__chunk_copy_cb':; ../externals/cgns/hdf5/H5Dchunk.c:6081:75: warning: passing argument 3 of 'H5O_copy_expand_ref' discards 'const' qualifier from pointer target type [-Wdiscarded-qualifiers]; if (H5O_copy_expand_ref(udata->file_src, udata->tid_src, udata->dt_src, buf, nbytes,; ~~~~~^~~~~~~~; In file included from ../externals/cgns/hdf5/H5Dprivate.h:25,; from ../externals/cgns/hdf5/H5Dpkg.h:30,; from ../externals/cgns/hdf5/H5Dchunk.c:55:; ../externals/cgns/hdf5/H5Oprivate.h:997:74: note: expected 'H5T_t *' {aka 'struct H5T_t *'} but argument is of type 'const H5T_t *' {aka 'const struct H5T_t *'}; H5_DLL herr_t H5O_copy_expand_ref(H5F_t *file_src, hid_t tid_src, H5T_t *dt_src, void *buf_src,; ~~~~~~~^~~~~~; [50/903] Compiling C object externals/cgns/hdf5/libsu2hdf5.a.p/H5C.c.obj; ninja: build stopped: subcommand failed.; PS C:\su2code-SU2-09ba9e3> python ninja.exe -C C:\su2code-SU2-09ba9e3\build install; SyntaxError:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1982:3836,variab,variable,3836,https://su2code.github.io,https://github.com/su2code/SU2/issues/1982,1,['variab'],['variable']
Modifiability,"; Reference viscosity = liquid viscosity or freestream; Reference velocity = liquid velocity or freestream; Reference pressure = Reference density * Reference velocity * Reference velocity; Reynolds number based on the liquid or reference viscosity ---*/. Pressure_FreeStream = 0.0; config->SetPressure_FreeStream(Pressure_FreeStream);; Density_FreeStream = config->GetDensity_FreeStream();; ModVel_FreeStream = 0.0;; for (iDim = 0; iDim < nDim; iDim++) ModVel_FreeStream += config->GetVelocity_FreeStream()[iDim]*config->GetVelocity_FreeStream()[iDim];; ModVel_FreeStream = sqrt(ModVel_FreeStream); config->SetModVel_FreeStream(ModVel_FreeStream);. /*--- Additional reference values defined by Pref, Tref, Rho_ref. By definition,; Lref is one because we have converted the grid to meters.---*/. Length_Ref = config->GetLength_Reynolds(); config->SetLength_Ref(Length_Ref);; Density_Ref = Density_FreeStream; config->SetDensity_Ref(Density_Ref);; Velocity_Ref = ModVel_FreeStream; config->SetVelocity_Ref(Velocity_Ref);; Pressure_Ref = Density_Ref*(Velocity_Ref*Velocity_Ref); config->SetPressure_Ref(Pressure_Ref);; ///#NOTE JC; Omega_Ref = Velocity_Ref/Length_Ref; config->SetOmega_Ref(Omega_Ref);; ```. Then I copied the corresponding codes to places for incompressible flow. Run it again, however, terminal prints the right pitching frequency, it still meet errors. The screen outputs are:. ``` shell; ------------------------------ Begin Solver -----------------------------. Updating surface positions.; Storing translating displacement for marker: airfoil.; Translational velocity: (0, 0, 0) m/s.; Deforming the volume grid.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 1/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; CSysSolve::FGMRES(): system solved by initial guess.; Non-linear iter.: 2/2. Linear iter.: 0. Min. area: 8.10228e-10. Error: 0.; Storing plunging displacement for marker: airfoil.; Plunging frequency: (0, 0, 0) rad/s.; Plunging amplitude:",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/193:4235,config,config,4235,https://su2code.github.io,https://github.com/su2code/SU2/issues/193,6,['config'],['config']
Modifiability,"; Run-time dependency MPI for c found: YES 4.0.2; Run-time dependency MPI for cpp found: YES 4.0.2; Message: Boost sources found.; Run-time dependency openblas found: YES 0.3.8; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Run-time dependency python3 found: YES 3.8; Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_NEW/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.4 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -------------------------------------------------------------------------; ; Option Value; ---------------------; TecIO: true; CGNS: true; AD (reverse): true; AD (forward): true; Python Wrapper: true; Intel-MKL: false; OpenBlas: true; PaStiX: false. Please be sure to add the $SU2_HOME and $SU2_RUN environment variables,; and update your $PATH (and $PYTHONPATH if applicable) with $SU2_RUN. Based on the input to this configuration, add these lines to your .bashrc file:. export SU2_RUN=/home/slimshady/UserPackages/SU2_INSTALL_NEW/bin; export SU2_HOME=/home/slimshady/UserPackages/SU2_NEW; export PATH=$PATH:$SU2_RUN; export PYTHONPATH=$PYTHONPATH:$SU2_RUN. Use './ninja -C build install' to compile and install SU2. Build targets in project: 21. Found ninja-1.10.0 at /usr/bin/ninja; ```. ```; slimshady@arch-linux-hp-probook-g3-450: SU2_NEW$ ninja -j4 -C build install; ninja: Entering directory `build'; [569/870] Linking target SU2_CFD/src/SU2_CFD.; FAILED: SU2_CFD/src/SU2_CFD ; c++ -o SU2_CFD/src/SU2_CFD 'SU2_CFD/src/37e1b17@@SU2_CFD@exe/SU2_CFD.cpp.o' -Wl,--as-needed -Wl,--no-undefined -Wl,-O1 -Wl,--start-group SU2_CFD/src/libSU2core.a externals/cgns/libcgns.a externals/metis/libmetis.a externals/parmetis/libparmetis.a externals/tecio/teciompisrc/libteciompi.a Common/src/libSU2Common.a -Wl,-rpath -Wl,/usr",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/991#issuecomment-631986633:2413,variab,variables,2413,https://su2code.github.io,https://github.com/su2code/SU2/issues/991#issuecomment-631986633,1,['variab'],['variables']
Modifiability,"; Trying a default Pkg-config fallback at pkg-config; Trying pkg-config binary pkg-config for machine MachineChoice.HOST at ['D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE']; Found pkg-config: D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE (0.28); Determining dependency 'ompi-c' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-c` -> 1; ; mpicc binary missing from cross or native file, or env var undefined.; Trying a default mpicc fallback at mpicc; mpicc found: NO; Run-time dependency MPI for c found: YES; Pkg-config binary for MachineChoice.HOST is cached.; Determining dependency 'ompi-cxx' with pkg-config executable 'D:\\Programme\\pkg-config-lite-0.28-1_bin-win32\\pkg-config-lite-0.28-1\\bin\\pkg-config.EXE'; PKG_CONFIG_PATH: ; Called `D:\Programme\pkg-config-lite-0.28-1_bin-win32\pkg-config-lite-0.28-1\bin\pkg-config.EXE --modversion ompi-cxx` -> 1; ; mpic++ binary missing from cross or native file, or env var undefined.; Trying a default mpic++ fallback at mpic++; Trying a default mpic++ fallback at mpicxx; Trying a default mpic++ fallback at mpiCC; mpic++ found: NO; Run-time dependency MPI for cpp found: NO (tried pkgconfig and config-tool); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe D:/Programme/SU2-7.1.1/meson_scripts/check_dir.py boost; --- stdout ---; ; --- stderr ---; ; ; Message: Boost sources found.; Program swig found: YES (D:\Programme\swigwin-4.0.2\swig.EXE); Running command: C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\python.exe -c import mpi4py; print(mpi4py.get_include()); --- stdout ---; C:\Users\KleineKampfzwergin\AppData\Local\Programs\Python\Python39\lib\site-packages\mpi4py\inclu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/888#issuecomment-821840286:6528,config,config,6528,https://su2code.github.io,https://github.com/su2code/SU2/issues/888#issuecomment-821840286,1,['config'],['config']
Modifiability,"; ```; -Denable-cuda=true; ```; And activate the functions using the following Config File Option; ```; ENABLE_CUDA=YES; ```. ## NOTE ON IMPLEMENTATION. I've decided to go with a single version of the code where the CPU and GPU implementations co-exist in the same linear solver and can be disabled or switched using a combination of Meson and Config File options. This is why I have defined three classes - one over-arching class that is named CExecutionPath that has two child classes - CCpuExecution and CGpuExecution. These child classes contain the correct member function for each path - CPU or GPU functioning. . All of this could also be easily achieved with an if statement that switches between the two - but that particular implementation will access and run the statement for each call. In our case once a Matrix Vector Product object is created, it will immediately know whether to use CPU or GPU mode of execution. . Recommendations are most welcome to improve or make this implementation better. ## PR Checklist. Warning Levels do come (only at level 3) but they are all of the following type. ```; style of line directive is a GCC extension; ```. The documentation for compiling with CUDA needs to be added by forking the SU2 site repo and adding the relevant changes to it? Or do I need to contact someone to change things on the site itself?. DOxygen Documentations and config template are all updated. - [X] I am submitting my contribution to the develop branch.; - [ ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [X] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [X] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [X] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2346:2081,config,config,2081,https://su2code.github.io,https://github.com/su2code/SU2/pull/2346,1,['config'],['config']
Modifiability,"; configure:2934: found /bin/gawk; configure:2945: result: gawk; configure:2956: checking whether make sets $(MAKE); configure:2978: result: yes; configure:3075: checking whether make supports nested variables; configure:3092: result: yes; configure:3117: checking for style of include used by make; configure:3145: result: GNU; configure:3196: result: >>> MPI support disabled by default <<<; configure:3269: checking for g++; configure:3285: found /usr/bin/g++; configure:3296: result: g++; configure:3323: checking for C++ compiler version; configure:3332: g++ --version >&5; g++ (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3343: $? = 0; configure:3332: g++ -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3343: $? = 0; configure:3332: g++ -V >&5; g++: '-V' option must have argument; configure:3343: $? = 1; configure:3332: g++ -qversion >&5; g++: unrecognized option '-qversion'; g++: no input files; configure:3343: $? = 1; configure:3363: checking whether the C++ compiler works; configure:3",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:3136,config,configure,3136,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,"; configure:3546: checking for suffix of object files; configure:3568: g++ -c conftest.cpp >&5; configure:3572: $? = 0; configure:3593: result: o; configure:3597: checking whether we are using the GNU C++ compiler; configure:3616: g++ -c conftest.cpp >&5; configure:3616: $? = 0; configure:3625: result: yes; configure:3634: checking whether g++ accepts -g; configure:3654: g++ -c -g conftest.cpp >&5; configure:3654: $? = 0; configure:3695: result: yes; configure:3720: checking dependency style of g++; configure:3831: result: gcc3; configure:3921: checking for gcc; configure:3937: found /usr/bin/gcc; configure:3948: result: gcc; configure:3979: checking for C compiler version; configure:3988: gcc --version >&5; gcc (GCC) 4.4.6 20120305 (Red Hat 4.4.6-4); Copyright (C) 2010 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. configure:3999: $? = 0; configure:3988: gcc -v >&5; Using built-in specs.; Target: x86_64-redhat-linux; Configured with: ../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux; Thread model: posix; gcc version 4.4.6 20120305 (Red Hat 4.4.6-4) (GCC) ; configure:3999: $? = 0; configure:3988: gcc -V >&5; gcc: '-V' option must have argument; configure:3999: $? = 1; configure:3988: gcc -qversion >&5; gcc: unreco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:5692,config,configure,5692,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long in,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:10546,config,configure,10546,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,2,['config'],['configure']
Modifiability,; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for unistd.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4970: checking size of short int; configure:4975: gcc -o conftest -g -O2 conftest.c >&5; configure:4975: $? = 0; configure:4975: ./conftest; configure:4975: $? = 0; configure:4989: result: 2; configure:5003: checking size of int; configure:5008: gcc -o conftest -g -O2 conftest.c >&5; configure:5008: $? = 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409:,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:11268,config,configure,11268,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,8,['config'],['configure']
Modifiability,"; dep_targets.extend(self.guess_external_link_dependencies(linker, target, commands, internal)); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2907, in guess_external_link_dependencies; search_dirs, static_patterns); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\backend\ninjabackend.py"", line 2848, in guess_library_absolute_path; trial = CCompiler._get_file_from_list(self.environment, trial); File ""F:\suflow\resources\softwares\SU2\externals\meson\mesonbuild\compilers\mixins\clike.py"", line 1036, in _get_file_from_list; if p.is_file():; File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1387, in is_file; return S_ISREG(self.stat().st_mode); File ""C:\Users\zeng\AppData\Local\Programs\Python\Python37\lib\pathlib.py"", line 1183, in stat; return self._accessor.stat(self); OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'C:\\ProgramData\\chocolatey\\lib\\mingw\\tools\\install\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\libC:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'. I noticed that other people on Github have also raised this issue, but they are on the second step `ninja -C build install` when I got this error on the first step `py meson.py build`. so the solve solutions are not work for me. For issue #1471 I found this silimar proplem between 7.3.1. thanks！. **To Reproduce**; Please provide a config file and mesh for a minimal example that recreates the problem.; [meson-log.txt](https://github.com/su2code/SU2/files/12335918/meson-log.txt); [meson-info.json.txt](https://github.com/su2code/SU2/files/12335924/meson-info.json.txt). **Desktop (please complete the following information):**; OS: [win11 ]; C++ compiler and version: [ g++ (GCC) 8.1.0]; MPI implementation and version: [Microsoft MPI v10.1.2]; SU2 Version: [v7.5.1]. **Other informations:**; the full console output : [console.txt](https://github.com/su2code/SU2/files/12335982/console.txt)",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2106:2599,config,config,2599,https://su2code.github.io,https://github.com/su2code/SU2/issues/2106,1,['config'],['config']
Modifiability,"; return SU2_TYPE::GetValue(val);; }`. Following the call stack of the error reveals that the problem variables in `val` are the jacobian components calculated in the Roe and JST scheme (these are the two options I have tested). It is possible to resolve this error by simply moving the stopping of the preaccumulation region from before the call to `updateLinearSystem` in the `ComputeFlux` method of both these schemes, to after, as show below. `/*--- Update the vector and system matrix. ---*/. updateLinearSystem(iEdge, iPoint, jPoint, implicit, updateType,; updateMask, flux, jac_i, jac_j, vector, matrix);. /*--- Stop preaccumulation. ---*/. stopPreacc(flux);`. However, whilst this resolve the error in this location, the next error appears in the Giles boundary condition. Here the two jacobian components within the residual object are not recorded correctly in the preaccumulation output region also. This in `CEulerSolver.cpp:6556`. `/*--- Compute the residual using an upwind scheme ---*/; auto residual = conv_numerics->ComputeResidual(config);. /*--- Update residual value ---*/; LinSysRes.AddBlock(iPoint, residual);`. I have tried simpy adding these components as preacc outputs however they are SIMD arrays and the datatype cannot be converted using the existing implementation. . I am not sure what is going on here, or the next steps to resolve this problem. Any further assistance would be greatly appreciated, thank you :). **Bug report checklist**; *Please make sure that you have followed the checklist below, many common problems can be solved by:*. - [X] Consulting the build instructions (https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/).; - [X] Looking for similar problems on GitHub or CFD-Online (https://www.cfd-online.com/Forums/su2/).; - [X] Updating to the newest version of SU2 (either develop, master, or the pre-built executables https://su2code.github.io/download.html). **Desktop (please complete the following information):**; - OS: [MacOS Sonoma 14.6.1",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2368:1613,config,config,1613,https://su2code.github.io,https://github.com/su2code/SU2/issues/2368,1,['config'],['config']
Modifiability,"; try :; su2amg.amg_call(config_amg); except:; raise RuntimeError , ""\n##ERROR : Call to AMG failed.\n""; ; if not os.path.exists(config_amg['mesh_out']):; raise RuntimeError , ""\n##ERROR : Mesh adaptation failed.\n""; ; if not os.path.exists(""current.itp.solb""):; raise RuntimeError , ""\n##ERROR AMG: Solution interpolation failed.\n"" ; ; #--- Convert output from Inria mesh format to su2; # Deal with markers; ; save_markers = mesh['markers']; del mesh; ; # Read Inria mesh; mesh = su2amg.read_mesh(config_amg['mesh_out'], ""current.itp.solb""); mesh['markers'] = save_markers; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter ; ; su2amg.write_mesh(current_mesh, current_solution, mesh); ; if not os.path.exists(current_mesh) or not os.path.exists(current_solution) :; raise RuntimeError , ""\n##ERROR : Conversion to SU2 failed.\n"". else : # Use pyAmg interface; ; ; #--- Load su2 mesh ; ; mesh = su2amg.read_mesh(current_mesh, current_solution); ; #--- Create sensor used to drive the adaptation; ; sensor_wrap = su2amg.create_sensor(mesh, adap_sensor); ; mesh['sensor'] = sensor_wrap['solution']; ; sys.stdout.write(' %s Generating adapted mesh using AMG\n' % pad_cpt); ; mesh_new = su2amg.amg_call_python(mesh, config_amg); ; #--- print mesh size; ; sys.stdout.write(' %s AMG done: %s\n' % (pad_nul, su2amg.return_mesh_size(mesh_new))); ; mesh_new['markers'] = mesh['markers']; mesh_new['dimension'] = mesh['dimension']; ; current_mesh = ""ite%d.su2"" % global_iter; current_solution = ""ite%d.dat"" % global_iter; ; su2amg.write_mesh(current_mesh, current_solution, mesh_new); ; #--- Run su2; ; log = 'ite%d.SU2'%global_iter; stdout_hdl = open('%sstdout'%log,'w') # new targets; stderr_hdl = open('%sstderr'%log,'w'); ; success = False; val_out = [False]; ; sys.stdout.write(' %s Running CFD\n' % pad_nul); ; try: # run with redirected outputs; ; sav_stdout, sys.stdout = sys.stdout, stdout_hdl ; sav_stderr, sys.stderr = sys.stderr, stderr_hdl; ; current_solutio",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:10214,adapt,adaptation,10214,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,1,['adapt'],['adaptation']
Modifiability,"</h1>; <h3>4.0.1</h3>; <ul>; <li>Updated <code>isGhes</code> check</li>; </ul>; <h3>4.0.0</h3>; <ul>; <li>Updated minimum runner version support from node 12 -&gt; node 20</li>; </ul>; <h3>3.3.3</h3>; <ul>; <li>Updates <code>@​actions/cache</code> to v3.2.3 to fix accidental mutated path arguments to <code>getCacheVersion</code> <a href=""https://redirect.github.com/actions/toolkit/pull/1378"">actions/toolkit#1378</a></li>; <li>Additional audit fixes of npm package(s)</li>; </ul>; <h3>3.3.2</h3>; <ul>; <li>Fixes bug with Azure SDK causing blob downloads to get stuck.</li>; </ul>; <h3>3.3.1</h3>; <ul>; <li>Reduced segment size to 128MB and segment timeout to 10 minutes to fail fast in case the cache download is stuck.</li>; </ul>; <h3>3.3.0</h3>; <ul>; <li>Added option to lookup cache without downloading it.</li>; </ul>; <h3>3.2.6</h3>; <ul>; <li>Fix zstd not being used after zstd version upgrade to 1.5.4 on hosted runners.</li>; </ul>; <h3>3.2.5</h3>; <ul>; <li>Added fix to prevent from setting MYSYS environment variable globally.</li>; </ul>; <h3>3.2.4</h3>; <ul>; <li>Added option to fail job on cache miss.</li>; </ul>; <h3>3.2.3</h3>; <ul>; <li>Support cross os caching on Windows as an opt-in feature.</li>; <li>Fix issue with symlink restoration on Windows for cross-os caches.</li>; </ul>; <h3>3.2.2</h3>; <ul>; <li>Reverted the changes made in 3.2.1 to use gnu tar and zstd by default on windows.</li>; </ul>; <h3>3.2.1</h3>; <!-- raw HTML omitted -->; </blockquote>; <p>... (truncated)</p>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/actions/cache/commit/ab5e6d0c87105b4c9c2047343972218f562e4319""><code>ab5e6d0</code></a> Merge pull request <a href=""https://redirect.github.com/actions/cache/issues/1341"">#1341</a> from bethanyj28/main</li>; <li><a href=""https://github.com/actions/cache/commit/89c7d86c71006451e399dfcc588eed8e392e0dcf""><code>89c7d86</code></a> licensed cache</li>; <li><a href=""https://github.com/actions/cache/co",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2232:7143,variab,variable,7143,https://su2code.github.io,https://github.com/su2code/SU2/pull/2232,1,['variab'],['variable']
Modifiability,"<nVar; ++iVar); {; FltVec phiL = 0.0;; FltVec phiR = 0.0;. for(size_t iDim=0; iDim<nDim; ++iDim); {; phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; phiR -= grad.getVec(jPoint,iVar,iDim)*d_ij[iDim];; }. phiL = phi.getVec(iPoint,iVar) + limiter.getVec(iPoint,iVar)*phiL;; phiR = phi.getVec(jPoint,iVar) + limiter.getVec(jPoint,iVar)*phiR;. FltVec flux = (phiL+phiR)*0.5;. for(size_t k=0; k<SIMDLEN; ++k) {; residual(iPoint[k],iVar) += flux[k];; residual(jPoint[k],iVar) -= flux[k];; }; }; ```; Note that at the end of the loop we need to de-swizzle the flux to update the multiple indexes references by iPoint and jPoint, which are now short arrays of integers (this operation can be moved to the container, akin to `getVec` but I show it here for clarity). **With SoA (aka column major storage) this code is 1.5 times slower than the scalar version.**. The reason for that is poor locality (of the spacial variety), as we loop through the number of variables and dimensions we are accessing the data in strides of nPoint, as the contiguous index is the first one so that we can perform vector read/writes when computing gradients and limiters.; With the scalar version the data for each point is contiguous which means on the first access we get whatever extra data is on the same cache line for free and subsequent accesses will be hardware prefetched since the stride is small (1 in this case). We lose all this with SoA storage. If we go back to arrays of structures (AoS, aka row major storage, basically what we have in #753) performance is only 9% worse (the code is identical). Those 9% are mostly due to increased integer arithmetic in the accesses to the data, on each call to `getVec` we resolve 4/8 row/column pairs into 1D indexes, while this calculation is vectorized, it seems to be less optimizable by compilers, for example this; ```c++; for(size_t iDim=0; iDim<nDim; ++iDim); phiL += grad.getVec(iPoint,iVar,iDim)*d_ij[iDim];; ```; gets compiled into this monstrosity; ```asm; .L13",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/789#issuecomment-535977206:8395,variab,variables,8395,https://su2code.github.io,https://github.com/su2code/SU2/issues/789#issuecomment-535977206,2,['variab'],['variables']
Modifiability,"= 0; configure:5008: ./conftest; configure:5008: $? = 0; configure:5022: result: 4; configure:5036: checking size of unsigned int; configure:5041: gcc -o conftest -g -O2 conftest.c >&5; configure:5041: $? = 0; configure:5041: ./conftest; configure:5041: $? = 0; configure:5055: result: 4; configure:5069: checking size of long int; configure:5074: gcc -o conftest -g -O2 conftest.c >&5; configure:5074: $? = 0; configure:5074: ./conftest; configure:5074: $? = 0; configure:5088: result: 8; configure:5102: checking size of float; configure:5107: gcc -o conftest -g -O2 conftest.c >&5; configure:5107: $? = 0; configure:5107: ./conftest; configure:5107: $? = 0; configure:5121: result: 4; configure:5135: checking size of double; configure:5140: gcc -o conftest -g -O2 conftest.c >&5; configure:5140: $? = 0; configure:5140: ./conftest; configure:5140: $? = 0; configure:5154: result: 8; configure:5168: checking size of void *; configure:5173: gcc -o conftest -g -O2 conftest.c >&5; configure:5173: $? = 0; configure:5173: ./conftest; configure:5173: $? = 0; configure:5187: result: 8; configure:5409: checking X11/Intrinsic.h usability; configure:5409: gcc -c -g -O2 conftest.c >&5; conftest.c:61:27: error: X11/Intrinsic.h: No such file or directory; configure:5409: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | #define STDC_HEADERS 1; | #define HAVE_SYS_TYPES_H 1; | #define HAVE_SYS_STAT_H 1; | #define HAVE_STDLIB_H 1; | #define HAVE_STRING_H 1; | #define HAVE_MEMORY_H 1; | #define HAVE_STRINGS_H 1; | #define HAVE_INTTYPES_H 1; | #define HAVE_STDINT_H 1; | #define HAVE_UNISTD_H 1; | #define SIZEOF_SHORT_INT 2; | #define SIZEOF_INT 4; | #define SIZEOF_UNSIGNED_INT 4; | #de",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:12218,config,configure,12218,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,"= 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdint.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: ch",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9759,config,configure,9759,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,6,['config'],['configure']
Modifiability,"=..., LinSysSol=..., geometry=0x2105400, ; config=0x209bc10) at ../Common/src/linear_algebra/CSysSolve.cpp:883; #10 0x00000000007b69da in CHeatSolver::ImplicitEuler_Iteration (; this=0x23a1de0, geometry=0x2105400, solver_container=0x23a1d70, ; config=0x209bc10) at ../SU2_CFD/src/solvers/CHeatSolver.cpp:1528; #11 0x0000000000b5a666 in CIntegration::Time_Integration (this=0x270d150, ; geometry=0x2105400, solver_container=0x23a1d70, config=0x209bc10, ; iRKStep=0, RunTime_EqSystem=21); at ../SU2_CFD/src/integration/CIntegration.cpp:205; #12 0x00000000004a2973 in CSingleGridIntegration::SingleGrid_Iteration (; this=0x270d150, geometry=0x2005130, solver_container=0x20058c0, ; numerics_container=0x20063b0, config=0x1de0e00, RunTime_EqSystem=21, ; iZone=1, iInst=0); at ../SU2_CFD/src/integration/CSingleGridIntegration.cpp:73; ---Type <return> to continue, or q <return> to quit---; #13 0x00000000004e33e4 in CHeatIteration::Iterate (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0) at ../SU2_CFD/src/iteration/CHeatIteration.cpp:40; #14 0x00000000004db2ba in CFluidIteration::Solve (this=0x270d170, ; output=0x20f0cc0, integration=0x1e3efe0, geometry=0x2005130, ; solver=0x20058c0, numerics=0x20063b0, config=0x1de0e00, ; surface_movement=0x1de0e20, grid_movement=0x1de0e40, FFDBox=0x1de0e60, ; val_iZone=1, val_iInst=0); at ../SU2_CFD/src/iteration/CFluidIteration.cpp:302; #15 0x000000000047adec in CMultizoneDriver::Run_GaussSeidel (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:329; #16 0x000000000047a415 in CMultizoneDriver::StartSolver (this=0x2009490); at ../SU2_CFD/src/drivers/CMultizoneDriver.cpp:193; #17 0x0000000000415413 in main (argc=2, argv=0x7fffffffbb18); at ../SU2_CFD/src/SU2_CFD.cpp:150; ```; </details>; Look at the backtraces if you like. The first is further in the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1241:7314,config,config,7314,https://su2code.github.io,https://github.com/su2code/SU2/issues/1241,1,['config'],['config']
Modifiability,"=1/3 gives a third-order approximation to the derivative at the node (the value used in the Piperno limiter to achieve 4th order dissipation). The reasons for these additions are; - The Piperno limiter is implemented in Inria's Wolf solver and seems to be used in a lot of their mesh adaptation work (see these references for [Euler](https://hal.inria.fr/hal-02378738v2/document) and [RANS](https://hal.inria.fr/tel-01962318/file/these_archivage_3570223.pdf)); - Some preliminary tests with the Piperno limiter have converged solutions on triangulated BL meshes that @jayantmukho and I couldn't get to converge with other limiters in SU2 (e.g. triangulated DSMA661 meshes from TMR); - The MUSCL parameter exists in other solvers (FUN3D, CFL3D, Wolf) and is used by the NASA codes for many of the TMR cases (e.g. CFL3D uses 1/3 and FUN3D uses 1/2 for the DSMA661 case). Further testing still needs to be done on the effect of the MUSCL parameter with other limiters, but leaving the value as default won't affect any of the test cases. ## Relevant config parameters; Piperno limiter:; ```; SLOPE_LIMITER_FLOW= PIPERNO; ```; MUSCL parameter:; ```; % Parameter to control upwinding in MUSCL extrapolation; % Kappa = 1/3 for Piperno limiter, Default = 0 otherwise; MUSCL_KAPPA= 0.0; ```. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [X] I am submitting my contribution to the develop branch.; - [X] My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags).; - [X] My contribution is commented and consistent with SU2 style.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1050:1767,config,config,1767,https://su2code.github.io,https://github.com/su2code/SU2/pull/1050,1,['config'],['config']
Modifiability,> (62); * A SU2_SOL/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-9> (12); * A cmake-format.yaml<https://github.com/su2code/SU2/pull/814/files#diff-10> (40); * A cmake/CheckLinkerFlag.cmake<https://github.com/su2code/SU2/pull/814/files#diff-11> (70); * A cmake/ConfigureCGNS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-12> (11); * A cmake/ConfigureCLI11.cmake<https://github.com/su2code/SU2/pull/814/files#diff-13> (2); * A cmake/ConfigureCodi.cmake<https://github.com/su2code/SU2/pull/814/files#diff-14> (87); * A cmake/ConfigureExternals.cmake<https://github.com/su2code/SU2/pull/814/files#diff-15> (26); * A cmake/ConfigureMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-16> (16); * A cmake/ConfigureMPI.cmake<https://github.com/su2code/SU2/pull/814/files#diff-17> (12); * A cmake/ConfigureMetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-18> (12); * A cmake/ConfigureMutationpp.cmake<https://github.com/su2code/SU2/pull/814/files#diff-19> (12); * A cmake/ConfigureParmetis.cmake<https://github.com/su2code/SU2/pull/814/files#diff-20> (15); * A cmake/ConfigureTecio.cmake<https://github.com/su2code/SU2/pull/814/files#diff-21> (18); * A cmake/ConfigureThreads.cmake<https://github.com/su2code/SU2/pull/814/files#diff-22> (12); * A cmake/FindMKL.cmake<https://github.com/su2code/SU2/pull/814/files#diff-23> (318); * A cmake/FindMPI4PY.cmake<https://github.com/su2code/SU2/pull/814/files#diff-24> (50); * A cmake/LibraryUtils.cmake<https://github.com/su2code/SU2/pull/814/files#diff-25> (239); * A cmake/TLS.cmake<https://github.com/su2code/SU2/pull/814/files#diff-26> (28); * A cmake/check_thread_storage.c<https://github.com/su2code/SU2/pull/814/files#diff-27> (5); * A cmake/functions.cmake<https://github.com/su2code/SU2/pull/814/files#diff-28> (416); * A externals/cgns/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-29> (26); * A externals/metis/CMakeLists.txt<https://github.com/su2code/SU2/pull/814/files#diff-30,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-552242380:6070,Config,ConfigureParmetis,6070,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-552242380,1,['Config'],['ConfigureParmetis']
Modifiability,"> * From the history output it seems that the maximum CFL value is not being reached, even for small CFL values the update seems to stop one step before max. There was a small factor applied to keep it above and below the CFL min and max (1.001, 0.999), respectively. But I have removed that, since it is not necessary. Btw, I have added the ability to print the min/max time step, and min/max/avg CFL to the screen by adding MIN_DELTA_TIME, MAX_DELTA_TIME, MIN_CFL, MAX_CFL, AVG_CFL to the SCREEN_OUTPUT. > * I still see some residual oscillations with high CFL values (100-1000), I think the issue is that despite the oscillations the linear solver still converges fine, and so the reduction never kicks in. There are reduction checks for both the linear and nonlinear residuals, but they likely still need some tuning (the factors were just empirical from my tests). I am also finding in my tests that if I am having trouble with a particular RANS case, sometimes it is most effective to turn off the adaption and go for a fixed CFL of 250, 500, or even 1000, if stable (don't forget you may need NUM_METHOD_GRAD_RECON= LEAST_SQUARES for that to be stable).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-541376224:1004,adapt,adaption,1004,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-541376224,1,['adapt'],['adaption']
Modifiability,"> 1.How does this relate to my new PR #921? Should I close that one, since the shape optimization is going to be overhauled anyways?. @clarkpede this is going to take a while to implement (on the order of months). In the mean time, it would still be good to fix the issue you bring up in #921, if it is an easy fix. If you think the fix is going to be on the same order of time, then might not be worth investing the effort if it is going to get overhauled anyway. . As for the post-processed objective functions, I am planning on fully incorporating #913 into this work so that any variables that can be defined using the expression language, can be used as an objective function. According to that PR, the post-processing has been auto-differentiated as well, so getting gradients should be automatic as well. . @talbring I agree with all of your points. I especially want to extract the FFD functionality and expose CGeometry and CConfig functions to python. I haven't used swig before so I need to do some homework. And yes, this PR is called Shape Optimization overhaul but I am hoping the changes made here are general enough that they can be used in a plethora of other situations. If I end up being myopic in any of the refactoring, please point it out :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607953901:583,variab,variables,583,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607953901,2,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"> ; > ; > @CatarinaGarbacz thanks for pushing your changes! I have left some comments and questions.; > ; > A bigger question I have is if there is a more general way to deal with SU2_INTERP, making it usable for all of develop. Just answering @WallyMaier comment, this should be possible by changing the file **fem_interpolation_structure.cpp** and change the function call:. output = COutputFactory::CreateOutput(**NEMO_NAVIER_STOKES**, input_config_container[ZONE_0],nDim);. So we have to replace **NEMO_NAVIER_STOKES** to something like **config[val_iZone]->GetKind_Solver()**.; ; I have not tested this change, but I tested changing it for NAVIER_STOKES, and it was able to interpolate the baseline SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555:543,config,config,543,https://su2code.github.io,https://github.com/su2code/SU2/pull/1160#issuecomment-760110555,2,['config'],['config']
Modifiability,"> ; > ; > @TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!. Hi @timjim333, I have to admit I am not fully (i.e. not 😉) aware of the mesh adaption capabilities of/with SU2. And there is quite a bit to read in this issue which i won't really have time to until the weekend but here's already my quicktake:; If you can run the intended feature (with multizone) manually (i.e. a c++ binary) and it works, then probably the python script 'just' sets up some folders and does clever choices for parameters that are put into new .cfg files which are run afterwards. So just orchestrating. There it is likely that it is not fixed with multizone by now but that is usually not too difficult to fix ... it is tedious though. . If you think that I understand what you want to do specifically with the posts in this thread then I will read through that and answer again, otherwise I would not mind a specification 👍",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-765021250:254,adapt,adaptation,254,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-765021250,2,['adapt'],"['adaptation', 'adaption']"
Modifiability,"> ; > ; > Dear Daumantas,; > ; > I appreciate your effort in adding support for cmake in SU2. We have recently introduced the Meson build system (https://mesonbuild.com/) (#685, #745) as a candidate to replace automake. A guide on how to use can be found [here](https://su2code.github.io/docs_v7/Build-SU2-From-Source/). The idea is that we will have this system along automake at least for the upcoming version 7 and that we get rid of automake afterwards. Considering that, I don't think that it makes sense to maintain 3 different build systems **at the moment**. I really hate turning contributions down, but this one is three months too late. However, we might reconsider adding support for another build system once we got rid of automake, or, if we feel that meson does not fit our needs.; > ; > I am all ears to hear other opinions. However, let's not start a discussion on the advantages/disadvantages of the build systems. Some benefits can be found in the Issue/PR linked above. Ok, I tried meson with MinGW but couldn't figure out how to link with MSMPI since it's not a part of MinGW. However, using CMake and with a few source code fixes, I managed to compile nearly every configuration with MSVC. Surprisingly, there were very few errors in SU2. The externals only had a few preprocessor issues. At the moment only MeDiPack fails to compile with MSVC but not with MinGW even though the MPI headers are the same so I suspect it's an issue with MSVC itself, I'm using the latest preview version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814#issuecomment-553571450:1187,config,configuration,1187,https://su2code.github.io,https://github.com/su2code/SU2/pull/814#issuecomment-553571450,2,['config'],['configuration']
Modifiability,"> ; > ; > I'll adapt one of the existing Testcases to use this feature. Well that was a lie. I thought it would be a good idea to adapt the 2D cht streamwise periodic case but I forgot that the used mesh is used for a streamwise periodic primal, FD and DA case as well as HeatTransfer BC Testcase (and that is a bit of work tbh). And for the periodic BC I had to change the mesh (adding new markers). As we do not have a single standalone (always run in a CHT setup) heat-equation Testcase, I went ahead and cut out the solid zone only and made that a Testcase. I already merged the gmsh geo and .su2 over at su2code/Testcases/pull/76 . If this is not liked I can of course do sth different. Note that the new Testcase takes ~2s to complete its 750 iterations until convergence.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843:15,adapt,adapt,15,https://su2code.github.io,https://github.com/su2code/SU2/pull/1382#issuecomment-927735843,2,['adapt'],['adapt']
Modifiability,"> ; > ; > This is how the scale factor is computed `su2double Scale = config->GetDV_Value(0)*config->GetOpt_RelaxFactor();`; > OPT_RELAX_FACTOR is 1000 in your config, and so it cancels the scale you want to apply. Please try this again and reopen the issue if the problem persists. Thanks a lot, your help has been much appreciated",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1023#issuecomment-645596675:70,config,config,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/1023#issuecomment-645596675,3,['config'],['config']
Modifiability,"> > > Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > > > Thank you in advance!; > > ; > > ; > > Hi @rois1995 Of course! However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.; > ; > If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!; > ; > I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it.; > ; > If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days.; > ; > I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?. The test case(T3A, T3A-, and NLF-0416) configuration files were uploaded to my git repository. Here is the [link](https://github.com/sun5k/SU2/tree/develop/TestCases/transition ). Suggestions for the prolate spheroid test-case is appreciated. However, my t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830:47,config,configuration,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1201919830,3,['config'],"['config', 'configuration']"
Modifiability,"> > Have you been able to converge the adjoint now that MPI problems are fixed, and verify the derivatives you obtain?; > ; > For convergence, yes. For verifying the derivatives, I'm looking for a way to do it now. It seems that I can use the following python scripts to get derivatives. - `discrete_adjoint.py`; - `finite_differences.py`; - `direct_differentiation.py` (not exactly sure what this is doing though). `discrete_adjoint.py` and `direct_differentiation.py` matched pretty well. `finite_differences.py` output values differ sometimes by 20% or so. Is such difference expected?. I will update the config file and the mesh file so that this verification can be done with the same files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1329#issuecomment-894761404:608,config,config,608,https://su2code.github.io,https://github.com/su2code/SU2/pull/1329#issuecomment-894761404,1,['config'],['config']
Modifiability,"> > Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > > Thank you in advance!; > ; > Hi @rois1995 Of course! However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed. Which configuration file would you want?; > ; > By any chance, are you implementing or developing a transition model? Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer. If you could send me the config files for the T3A, T3A- and NLF test cases it would be awesome!. I have implemented the same model as yours, the LM model, in parallel to you 'cause I needed it for some simulations. I also tried implementing the same version but related to the SA turbulence model, however it still is bothering me that I cannot seem to get good results on it. . If you want, I also tried the prolate spheroid test-case with good results. If you need I can give the configs and the meshes. The only thing about this test-case is that it is more related to the cross-flow transition, thus it needs to be implemented, which I think I'll do in these days. I think that the k-w-gamma model is the way to go right after the implementation of the LM model since it has lots of equations in common. Do you think that you need another class for it or you will write on the same classes that you have already built (like the CTransLMSolver)?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1198926920:45,config,configuration,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1198926920,4,['config'],"['config', 'configs', 'configuration']"
Modifiability,"> > I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp .; > ; > There is the geometry toolbox for dot product and normal: https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm. The problem is more related to the finding of the wall-normal for a point within the volume mesh, not to the computations that it will be involved in.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350:276,variab,variable,276,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1429614350,1,['variab'],['variable']
Modifiability,"> > I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?; > ; > That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements: https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development; > ; > The domain is just a rectangle so pretty simple to set up.; > ; > You could also use the V&V test that we have, but it is a variable density jet: https://su2code.github.io/vandv/SANDIA_jet/. I did some tests on a supersonic jet, since I already had the files, but it's a quite complex case so it's not that good to verify the implementation. I will look into the simpler cases you mentioned !",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092:836,variab,variable,836,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1891046092,2,['variab'],['variable']
Modifiability,"> > Thanks for your contribution! Be sure to run remove the unnecessary files and run clang_format to clean up new files.; > > I wonder with the new additions of the NEMO, Species and now CoolProp fluids, there would be a smart way to consolidate; > ; > Hi, I removed the unnecessary files. Also, could you please tell me how to run clang_format on new files? Google told me that > meson would run clang_format on all c++ files automatically. Thank you. in the root folder there is a clang-format configuration file: /SU2/.clang-format ; From the root folder, you can call `clang-format -i filename`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1272392451:497,config,configuration,497,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1272392451,1,['config'],['configuration']
Modifiability,"> @PENGYAN777 great thanks for the fixes. What more do you need to do on this PR? From the SU2 side we just need you to add a regression test. You will need to change /.github/workflows/regression.yaml to enable compilation with CoolProp for one of the config sets (BaseMPI) and then add a test to parallel_regression.py; > ; > **NOTE** If you need to add a new mesh file, do not commit the mesh in the code repo, instead open a PR to the TestCases repo with the mesh. I think there are **two more things** I can do, to improve this new feature. 1. Now this new feature can only work for inviscid flow since the viscosity and conductivity are still obtained from Sutherland model or other default models. My next step is to let SU2 get viscosity and conductivity from CoolProp then this new feature can also apply for viscous flow. 2. For subcritical flow, it is possible for flow to enter two-phase region while CoolProp need distribution of phases to compute speed of sound. Since SU2 does not have two-phase flow solver, I plan to let SU2 choose Peng-Robinson model for subcritical flow and CoolProp for supercritical mode. Do you have any suggestion?. Once I finish these two functions and get approved from you, then I will add the regression test as you advised. Thank you for your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1287649621:253,config,config,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1287649621,1,['config'],['config']
Modifiability,"> @aeroamit What does temperature do? Could you compute the heat flux from the temperature in e.g. paraview? Is the root cause the computation of the energy equation or the computation of heat flux?. Hi @bigfooted, Temperature boundary condition for wall corresponds to Isothermal wall BC (cold wall condition). This condition is applied to obtain heat flux unlike adiabatic wall (no heat transfer). ; The snapshot, I posted from ParaView shows heat flux variation with x. This is obtained directly from surface_flow.vtu. You can simply go to Filters -> Data Analysis -> Plot data and select Points_X for X Array and heat flux in variable. Regarding computing heat flux from temperature field, I am not sure, but ParaView is having calculator utility as well as option to compute gradient of unstructured grid (from there you can obtain temperature gradients in 3 directions). ; Coming to last question, root cause of the problem - @WallyMaier has run the case yesterday, we will be posting some details soon.; Best ; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377:630,variab,variable,630,https://su2code.github.io,https://github.com/su2code/SU2/pull/1106#issuecomment-741947377,2,['variab'],['variable']
Modifiability,"> @antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; > ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png); > ; > Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim. When I was referring to separated zones I mean in the mesh, so I'm not referring to SU2 multizone. This is an example I took online (it is apparently a structured hexa mesh, so not the best example for mesh adaptation, hexa not supported), but I hope it explains the different zones at mesher level.; By defining different zones for top and bottom of the wing (and wing tip), the edges, leading and trailing as well as the one on the tip will be maintained after mesh adaptation.; In your case I would also suggest to split the body in body top and body bottom so to prevent (or reduce) artifacts in the trailing cone. ![image](https://user-images.githubusercontent.com/41752169/105387785-2e414f00-5c16-11eb-9284-1d18c9a5981f.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764812340:61,adapt,adapted,61,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764812340,3,['adapt'],"['adaptation', 'adapted']"
Modifiability,"> @joshkellyjak @pcarruscag Should I make some first commits for a ""tag type / debug"" recording to this branch? (This problem is the main motivation but technically it's quite unrelated.); > ; > We need it here, but it might be better to merge it from a dedicated branch. Personally I would like this to selfishly enhance my understanding, but I don't think it should be merged when we complete the PR. Could be useful documentation for the website.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2317#issuecomment-2291240593:314,enhance,enhance,314,https://su2code.github.io,https://github.com/su2code/SU2/pull/2317#issuecomment-2291240593,1,['enhance'],['enhance']
Modifiability,"> @patelha57, I want to express my gratitude for your contribution. Your efforts are truly appreciated. However, I wanted to share some of my observations regarding the implementation, with all due respect.; > ; > In my humble opinion (IMHO), there seem to be a few flaws in the current implementation, particularly when it comes to setting the Mach number and Reynolds number. It appears that SU2 offers different fluid models, and in order to access the speed of sound for the far field, the following line of code may be more appropriate:; > ; > ```c++; > Mach2Vel_FreeStream = auxFluidModel->GetSoundSpeed();; > ```; > ; > rather than using:; > ; > ```c++; > su2double SoundSpeed = sqrt(Gamma * Gas_Constant * Temperature);; > ```; > ; > Perhaps these concerns can be addressed in the review of your PR. Similarly, I noticed that changing the Reynolds number doesn't seem to have any effect. It should modify certain variables, which are likely addressed in this section of the code: [link to the relevant code](https://github.com/su2code/SU2/blob/c435309e2a4ffd992b89c5b3bb252cb4af9fa990/SU2_CFD/src/solvers/CEulerSolver.cpp#L909-L928). Additionally, it would be helpful to include a check to warn the user if the initialization is based on thermodynamic quantities.; > ; > Once again, I want to express my deep appreciation for your contributions. Hey @kursatyurt, thanks for the input! I absolutely agree about the speed of sound change that you suggested, so I will address it in my PR. I will also double check about the Reynolds number update. Haven't used that function before so not sure what the issue is. . It would be great to get additional input on that PR so please review if you get the chance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045#issuecomment-1581591610:921,variab,variables,921,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045#issuecomment-1581591610,1,['variab'],['variables']
Modifiability,"> @talbring : since you are already working on the output here and if you agree, can you please add the sensitivities as a required output for adjoint runs even if the volume fields are customized (like we do for coords/conservatives for the primal)? I have gotten several reports that this is tripping up some folks, e.g., see #964 . In fact I already deactivated it in this branch. It makes no sense to allow customizable output for the adjoint anyway and it was giving troubles when you want to use the same config for primal and adjoint.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-626229423:511,config,config,511,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-626229423,1,['config'],['config']
Modifiability,"> Apart from the two comments below, I would add that it would be nice to put virtual (`override` or `final`) and `const` specifiers where appropriate, at some point, not necessarily now. I am in the process of doing this. There are a large number of `virtual` functions in the solvers. . I wanted to verify how I am thinking about using `final`, `override`, and `const`:. 1) Any virtual class that is overridden by a child class should have the `override` specifier; 2) If the function is not overriden further in another child class, should have the `final` specifier. ; 3) Any functions that don't change any variables should be declared `const` (mostly getter functions); 4) Any function arguments that are passed by reference and should not be changed during the execution of the function, should be declared `const`. Is there any case I am missing? Is there a reason why I don't see any functions with the `override final` specification?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849#issuecomment-575799066:612,variab,variables,612,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-575799066,1,['variab'],['variables']
Modifiability,"> Can you describe a bit more the stopping strategy you want? The new output structure is much more flexible than before, and you can even use Cauchy criteria based on time averages (of pretty much any coefficient), with different windowing methods and so on. Does Cauchy criteria based on time averages only work for time-independent flows? Because it seems that WINDOW_START_ITER needs to be set in the section of TIME-DEPENDENT SIMULATION in the input .cfg file. Thank you.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166:100,flexible,flexible,100,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-863322166,1,['flexible'],['flexible']
Modifiability,"> Can you describe how the functions and modes you are adding are used? Maybe a python example would help. It seems a lot of this exists in the disc adj multizone driver, for example the derivative of the objective function is stored by that driver. Yes, I will definitely add a Python example and supporting documentation. . Essentially we modified the recording, seeding, and extracting of the AD tape in `CDiscAdjResidualSolver` to provide partial derivatives of objective, residuals, and forces with respect to conservative variables, coordinates, displacements, and farfield variables. We need the partials to form and solve the adjoint system, which is handled by external MDO framework",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1750#issuecomment-1779475947:528,variab,variables,528,https://su2code.github.io,https://github.com/su2code/SU2/pull/1750#issuecomment-1779475947,2,['variab'],['variables']
Modifiability,"> Check if you need to update the config template or any doc on the website. It would also be good to modify an existing test case to exercise this feature. Thank you so much for your comment. Yes, I will update the website with this additional feature. I will modify one of the existing test cases in this pull request.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1953#issuecomment-1463418485:34,config,config,34,https://su2code.github.io,https://github.com/su2code/SU2/pull/1953#issuecomment-1463418485,1,['config'],['config']
Modifiability,"> Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; > ; > * I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; > ; > * BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; > ; > * Now, switching between my custom BC types and the standard ones only requires to edit the config file. For example, the inlet BC of the SA turbulence model is defined in CTurbSASolver::BC_Inlet(); We can place this definition in a separate file bcinit.cpp and dynamically link this file so you have a libbcinit.so file. SU2 knows about libbcinit.so and BC_Inlet() at compile time. ; In your testcases directory, you can put a copy of bcinit.cpp and redefine the boundary condition BC_Inlet. If you change the boundary condition, you only compile bcinit.cpp in your testcase directory and create a libbcinit.so in your testcase directory. You then make sure that when SU2 is looking for dynamically linked libraries, it searches your testcase directory before it searches the SU2 installation directory. . As you see, this can be used for redefining existing (at compile time) functions and modifying its content. I find it especially useful for creating custom initial conditions. If you want to create a completely new custom boundary condition BC_Custom(), it is probably easiest to predefine this structure and create a custom_bc option in the config file. In a CFD problem, there are only a limited number of possibilities (for types of boundary conditions, and systems of equations), so I'm not sure when a BC_Custom() is useful, or when the tipping point is where self-registering classes will become useful for its implementation. Recompiling the code completely takes maybe 2 minutes for me, so I never saw compiling times as a problem.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665:171,inherit,inheriting,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-680758665,3,"['config', 'inherit']","['config', 'inheriting']"
Modifiability,"> Delta_Time is only set for the flow, and already includes the flow CFL number, so this is just scaling the time step based on the flow and turbulent CFL. But yes, this ratio would always be one (even for adaptive CFL, @economon can correct me if I'm wrong?) because in `CSolver::AdaptCFLNumber()` we have; > ; > ```; > solverFlow->GetNodes()->SetLocalCFL(iPoint, CFL);; > if ((iMesh == MESH_0) && (config->GetKind_Turb_Model() != NONE)) {; > solverTurb->GetNodes()->SetLocalCFL(iPoint, CFL);; > }; > ```; > ; > Maybe Tom had something in mind when storing separate CFL numbers and scaling, but never got around to it so just left them equal? If you want a different turbulent CFL, the option `CFL_REDUCTION_TURB` still exists so you could probably add a `config->GetCFLRedCoeff_Turb()` and see if that helps. @bmunguia is correct.. I was experimenting with adapting the CFLs independently for the two systems to further improve convergence, but did not have time to find a stable solution. So, I left the framework as-is to accommodate this at some point.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/918#issuecomment-603980676:206,adapt,adaptive,206,https://su2code.github.io,https://github.com/su2code/SU2/issues/918#issuecomment-603980676,5,"['Adapt', 'adapt', 'config']","['AdaptCFLNumber', 'adapting', 'adaptive', 'config']"
Modifiability,"> Do that in a different order please, add the regression now, we merge the PR, and then you continue the work. We want short PRs. Hi, I meet a problem when I change /.github/workflows/regression.yaml to enable compilation with CoolProp for one of the config sets (BaseMPI). To compile CoolProp, I import cmake submodule of meson. However, when github workflow builds BaseMPI, the error message is **'can not find cmake.'** . I think this is because github does not have cmake. . Do you have any advice? Thank you. (the other subproject Mutationpp also import cmake submodule, do you know how that new feature is built on github?)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1782#issuecomment-1289289170:252,config,config,252,https://su2code.github.io,https://github.com/su2code/SU2/pull/1782#issuecomment-1289289170,1,['config'],['config']
Modifiability,> Don't modify the configs to add default options. Just the template is enough. In that case I think we're done?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362#issuecomment-2437194156:19,config,configs,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362#issuecomment-2437194156,1,['config'],['configs']
Modifiability,"> Ettore, Thanks for submitting this. I thought you gave an excellent presentation at the SU2 Conference and the much better actuator disk model you and your colleagues have put together will surely be useful to many people. Thanks for participating and being a member of the SU2 Community. Please stay healthy and well and I hope to meet you in person next time we have a meeting (fingers crossed….maybe next year?). Best wishes, Juan; > […](#); > On Jun 18, 2020, at 1:27 AM, SaettaE ***@***.***> wrote: Proposed Changes Addition of a new actuator disk model with a variable load and swirl distributions along disk radius. Contributors: Theoretical and Applied Aerodynamic Research Group (TAARG) of University of Naples Federico II. EttoreSaetta, lorenzorusso07, rtogna. Related Work Introduction of new options in the config. file. Introduction of an additional input file that contains the propeller data. Introduction of additional c++ functions. Addition of code lines to existing functions preserving the original actuator disk model. PR Checklist [X ] I am submitting my contribution to the develop branch. My contribution generates no new compiler warnings (try with the '-Wall -Wextra -Wno-unused-parameter -Wno-empty-body' compiler flags). [ X] My contribution is commented and consistent with SU2 style. I have added a test case that demonstrates my contribution, if necessary. I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp) , if necessary. You can view, comment on, or merge this pull request online at: #1027 <#1027> Commit Summary Update config_template.cfg File Changes M config_template.cfg <https://github.com/su2code/SU2/pull/1027/files#diff-2c2f226c0183e7633cf165c6d3862450> (5) Patch Links: https://github.com/su2code/SU2/pull/1027.patch <https://github.com/su2code/SU2/pull/1027.patch> https://github.com/su2code/SU2/pull/1027.diff <https://github.com/su2code/SU2/pull/1027.diff> — You are receiving this because you are subscribed to this t",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487:568,variab,variable,568,https://su2code.github.io,https://github.com/su2code/SU2/pull/1027#issuecomment-646601487,2,"['config', 'variab']","['config', 'variable']"
Modifiability,"> Every time we push commits or submit a pull request, the unit tests are run; > and checked.; > What is my vision for unit testing in SU2?; >; > I am *not* proposing that we start trying to get 100% code coverage with; > pre-existing code. That would not provide a good return on investment.; >; > Instead, I see people adding unit tests as they write new code and as they; > find bugs. For each new behavior added to SU2, tests are first added to; > document the related existing behavior. These tests serve to check that the; > existing behavior isn't damaged by the new code. Then new tests are added; > to prove that the new behavior is working correctly. For bug fixes, the; > process is simpler. A test is added to confirm that something is not; > behaving as expected. Then the code is fixed to make the test pass.; > What frameworks are available?; >; > For a unit testing framework, here are the most popular options, with the; > following pros and cons:; > Roll-your-own; >; > - Requires no external dependencies; > - The most flexible option; > - Involves the most work to setup; > - Will lack some of the more advances features of mature unit-testing; > frameworks.; >; > Boost Test; >; > - Can be header only, statically linked, or dynamically linked; > - If statically or dynamically linked, then Boost is not very; > lightweight; > - Easy to add if you're already using Boost; >; > Google Test; >; > - Most common unit-testing framework; > - Can be easily combined with Google's powerful GMock mocking library; > - Compiling and linking can be somewhat painful; >; > Catch2; >; > - Used by FEniCS; > - Makes unit tests easily readable with lots of syntactic sugar.; > - Has a very simple syntax; > - Is header-only; > - Requires C++11 compilation; > - Not as feature rich as Google Test or Boost Test; >; > Questions; >; > - How do developers feel about adding unit tests to SU2?; > - If a unit-testing framework were added to SU2, would you actually; > use it?; > - Do developers hav",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/698#issuecomment-499278427:5642,flexible,flexible,5642,https://su2code.github.io,https://github.com/su2code/SU2/issues/698#issuecomment-499278427,2,['flexible'],['flexible']
Modifiability,"> Hello. Can you add a test case about AUSMPLUSUP or AUSMPLUSUP2? I installed SU2 6.2.0 and used it to simulate two-dimensional lid-driven cavity flow. When I set 'CONV_NUM_METHOD_FOLW' to be 'AUSMPLUSUP' or 'AUSMPLUSUP2', it shows 'Error in ''void CSoLver::SetResidual_RMS(CGeometry*, CConfig*):' and 'MPI_ABORT was invoked on rank 0 in communicator MPI_COMM_WORLD'. But when I set it to be other schemes like AUSM, ROE or so, it runs. Maybe if there is a test case, I can find where is my mistake. Thank you. _Originally posted by @cjz667 in https://github.com/su2code/SU2/pull/628#issuecomment-522633022_. @cjz667, there are a couple of examples in PR #691, specifically here: https://github.com/su2code/SU2/pull/691#issuecomment-502193463; Which may not run with v6.2 but should work with the current develop version.; In any case can you please upload your config?",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/761:862,config,config,862,https://su2code.github.io,https://github.com/su2code/SU2/issues/761,1,['config'],['config']
Modifiability,"> Hi @sun5k, could you please add also the configuration files to reproduce these results? I would try to run these simulations too with my implementation of the transition model.; > ; > Thank you in advance!. Hi @rois1995 Of course! ; However, I'm still under testing, so I can't guarantee the result if the numerical scheme or the other options are changed.; Which configuration file would you want?. By any chance, are you implementing or developing a transition model? ; Can you tell me what model you are willing to use if it's a model implementation? My next goal is to implement the AFT model or the k-w-gamma model, but I'm trying to implement a k-w-gamma model because it seems like the AFT model is being implemented by the other developer.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1592#issuecomment-1198403061:43,config,configuration,43,https://su2code.github.io,https://github.com/su2code/SU2/pull/1592#issuecomment-1198403061,2,['config'],['configuration']
Modifiability,"> Hi Ale, can you add the mesh (from the workshop I presume) to the Testcases repo with a restart file and then use that to run a coupled iterations for regression testing? We may need to wait for the turbo outputs PR. Hi Pedro, I'm adding them now. ; Yes, configs and mesh are from the tutorial, although I slightly amended the config to make it work with develop (just one config input commented), so that we don't need to wait for that PR. In fact, I added the folder to develop. For the regresstion testing (sorry for the silly question, I'm a bit of a novice), is it enough to run the single test case or should I do the proper regression test with provided python script?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2158#issuecomment-1792594463:257,config,configs,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/2158#issuecomment-1792594463,3,['config'],"['config', 'configs']"
Modifiability,"> Hi and thank you for this PR, I think it will be really useful. I noticed that you removed several functions in the python wrapper, and also renamed others. This will break the compatibility with the fsi module. May I ask you why you had to remove it? We can maybe find a solution that keeps the possibility to use the fsi module as well. Hi Nicola! Are you asking about methods relating to number of vertices, global indices, coordinates, deformable marker tags, etc.? If so, we have not removed those and they are still available through the Python wrapper. These functions were relocated to [CDriverBase](https://github.com/su2code/SU2/blob/feature_pysu2_DEF/Common/include/drivers/CDriverBase.hpp) so they can be inherited by all other drivers. These changes should not break compatibility with the FSI module (aside from some function renaming).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925:719,inherit,inherited,719,https://su2code.github.io,https://github.com/su2code/SU2/pull/1300#issuecomment-1351900925,1,['inherit'],['inherited']
Modifiability,"> Hi,; > I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that.; > ; > For reference I attach my config.log file.; > ; > [config.log](https://github.com/su2code/SU2/files/3483335/config.log). According to the configure file(line 2726), try 'make install-strip' after 'make'. ; The exe will be smaller than before after adding the strip option.; The following link may help. Just have a look at faq 6.3.; https://www.cygwin.com/faq.html; Good luck.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519762878:228,config,config,228,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519762878,4,['config'],"['config', 'configure']"
Modifiability,"> Hi,; > I made the Cygwin build installation instruction example. I just checked my SU2_CFD.exe and it is 625MB as well. Nevertheless, I have no clue why this is the case and how to solve that.; > ; > For reference I attach my config.log file.; > ; > [config.log](https://github.com/su2code/SU2/files/3483335/config.log). The fllowing link may help us; https://stackoverflow.com/questions/1042773/gcc-c-hello-world-program-exe-is-500kb-big-when-compiled-on-windows-how",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/754#issuecomment-519737756:228,config,config,228,https://su2code.github.io,https://github.com/su2code/SU2/issues/754#issuecomment-519737756,3,['config'],['config']
Modifiability,"> I am not so familiar with turbomachinery but it looks like all spanwisesection initialization is done in CPhysicalGeometry.cpp. I think it initializes in the function ComputeNSpan. This function is called in CDriver like this:; > ; > ```; > geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, INFLOW, true);; > geometry[iZone][INST_0][MESH_0]->ComputeNSpan(config[iZone], iZone, OUTFLOW, true);; > ```; > ; > So you should get an initialized value for inflow and outflow. Maybe you can check what is going on there and see if this function does what is expected. Hi Nijso! Thanks for your suggestion. ; Indeed, CPhysicalGeometry.cpp is where the initialization is done. I'll also report this to the SU2 Turbo Group, to check whether we can find a solution. Currently I just hardcoded a section of that script as follows:. ```; .; .; if(marker_flag == OUTFLOW){; 	nSpanWiseSections[INFLOW - 1] = 57;; 	nSpanWiseSections[OUTFLOW - 1] = 57; ; if(nSpanWiseSections[INFLOW -1] != nSpanWiseSections[OUTFLOW - 1]){; char buf[100];; SPRINTF(buf, ""nSpan inflow %u, nSpan outflow %u"", nSpanWiseSections[INFLOW], nSpanWiseSections[OUTFLOW]);; SU2_MPI::Error(string("" At the moment only turbomachinery with the same amount of span-wise section can be simulated\n"") + buf, CURRENT_FUNCTION);; }; else{; config->SetnSpanWiseSections(nSpanWiseSections[OUTFLOW -1]);; }; }. }. }; void CPhysicalGeometry::SetTurboVertex(CConfig *config, unsigned short val_iZone, unsigned short marker_flag, bool allocate) {; .; .; .; ```. This modification was firstly suggested by @MKursatUzuner but I'm pasting it in here to have another source in case the topic opened in CFD Online gets deleted.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2203#issuecomment-1900339640:289,config,config,289,https://su2code.github.io,https://github.com/su2code/SU2/issues/2203#issuecomment-1900339640,4,['config'],['config']
Modifiability,"> I don't understand the question very well. The order of the points needs to be according to the VTK hexahedron http://www.princeton.edu/~efeibush/viscourse/vtk.pdf I can't visualize where you are getting that deformation, but when using an FFD box that does not include the entire design surface you need to be careful with the continuity of the deformation to prevent creating discontinuous steps. Mmmh I see. It looks like the blade elements are extending beyond the blade surface itself and, therefore, are cut by the FFD box even if the whole geometry appears to be included withing the FFD box domain. I solved the issue by defining an user-defined fixing plane (very cool option, btw). I experienced a similar situation with an internal flow over cylinder, too.; My question was whether this behavior was mesh-dependent or FFD box-dependent. I guess it is reasonable to say that mesh elements extension beyond the body which we're optimizing is causing this, however FFD continuity allows to keep this dummy shape deformation from happening. . Secondly, I had MAX DIFF = 0 because I couldn't understand your correction properly. I had to consider the righ-hand rule third component (_thumb_) pointing inside the FFD box for each of the surfaces we establish when attaching the FFD box (_each of those defined by the points listed in FFD_DEFINITION_). Then it worked perfectly.; Still, I don't understand why for some geometries we apply what discussed in the [tutorial](https://su2code.github.io/tutorials/Species_Transport/) and here it is the opposite. At least I know what to expect and how to fix it. If you could add an alert message in the next SU2 version, that would be much appreciated. > Well, it's the F-FFD week it seems :) https://www.cfd-online.com/Forums/su2/249879-when-use-su2_def-generate-ffd-box-i-can-not-get-ffd_surface_points.html. It's sunday: is the week ending or starting? ahah I guess we both stopped counting ;); As always, thank you very much for the time you're s",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169:450,extend,extending,450,https://su2code.github.io,https://github.com/su2code/SU2/issues/2025#issuecomment-1546805169,1,['extend'],['extending']
Modifiability,"> I have a question: for each point in the mesh I am trying to compute the dot product between the velocity vector and the normal to the wall of the nearest point on the wall. How do I access such information? I've found that in the CPoint class I have the ClosestWall_Elem variable which stores the index of the closest element on a wall. However, when I try to assess the information with a number of cores greater than 2, it crashes. Moreover, to recover the normal of the element I perform a mean of the normals on the nodes of that element. Is there a structure that has the normals saved for each element of the primal grid? The part that I am referring to is from line 208 in CTransLMSolver.cpp . There is the geometry toolbox for dot product and normal:; https://github.com/su2code/SU2/blob/master/Common/include/toolboxes/geometry_toolbox.hpp; just look in the code for examples, in vscode you can search for GeometryToolbox::DotProduct or GeometryToolbox::Norm",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269:274,variab,variable,274,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1426019269,1,['variab'],['variable']
Modifiability,"> I think generalizing the inlet option to read more values would be good. I worked on trying to create a new inlet and it got complicated pretty quickly. The main issue I run into is in COptionInlet in SetValues. To add mass fractions, we need to know the number of species which can vary, so this would need access to config. Just adding an ""INLET_GAS_COMPOSITION"" field lets us use the same supersonic inlet bc (no additional repeated code) but with just one extra get function to pull from config. It feels a little hacky... but seems to save a lot of additional repeated code.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1374304203:320,config,config,320,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1374304203,2,['config'],['config']
Modifiability,"> I think the person that most recently looked into those Jacobians was @bmunguia; > All I know is that an 100% accurate Jacobian is not necessary for correctness (only the flux matters) but it may make convergence better (sometimes it also makes it worse). > I also worked on refactoring (and checking) the stress tensors. So if there's any questions, feel free to ping me. Thank you for your reply, in fact there still exists some question.; Because in the code for calculating viscous Jacobians, I did not find any partial derivative of primitive variables.; In the stress tensor, partial derivatives such as ∂u/∂x_i, ∂ρ/∂x_i (GradPrimVar[iVar][iDim]) are part of the expression of tau[iDim][jDim], which affects the value of Proj_Flux_Tensor[iVar].; In the approximate process of the Jacobian matrix, it seems that the originally expected terms such as ∂(u/ρ)/∂x are replaced by values like val_Mean_PrimVar[jDim+1]/(Density*val_dist_ij), and then used as part of Jacobian_i and Jacobian_j's expression.; I thought there should be some differential terms, but I didn't find it.; So my question is to know more details about the approximation in calculating viscous Jacobians.; I mention this problem because I want to add some equations (such as concentration equations, moment distribution equations) based on SU2's NS solver, develop an implicit solver, and solve adjoint problems. So augmented Jacobian matrices are needed. I have gone through the SU2 code of TNE2Solver in version 4.0.1. But the solver seems to be imperfect, and have some differences from NSSolver in dealing with the viscous Jacobian matrix. Moreover, the TNE2Solver can be applied to only a few cases. It seems that its code requires further modification.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1028#issuecomment-648845465:277,refactor,refactoring,277,https://su2code.github.io,https://github.com/su2code/SU2/issues/1028#issuecomment-648845465,2,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"> I want to be done with this PR folks... This is really tiring to maintain so if you don't want it please just tell me...; > Can we agree on:; > Instead of CSolver having the `node` field it will have a pure virtual function `CVariable* GetNodes()`, derived solvers need to implement this method and have a `nodes` field of the most appropriate type (e.g. CEulerVariable for CEulerSolver).; > ; > I know some of you do not like the name `nodes` but there is something to be said about consistency (that has always been the name) and I do not think changing a generic name for another generic name justifies breaking the formatting everywhere and having needlessly long calls to get some data. In the interest of keeping the PRs moving, I am ok with this. It will also be natural for folks in the short term to learn the new system, since everyone is already accustomed to using the solver->node* construct. We can always go for a targeted refactoring later separate from the changes in this PR if we would like.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/753#issuecomment-538218606:940,refactor,refactoring,940,https://su2code.github.io,https://github.com/su2code/SU2/pull/753#issuecomment-538218606,2,['refactor'],['refactoring']
Modifiability,"> I'm fine with the consistency with the user input. Is the dry run mode working ok for these variables?. Yes. Both for direct and adjoint the RMS, BGS, and MAX of the controlling variables show up in dry run mode as they're listed in the configuration file.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2057#issuecomment-1645128810:94,variab,variables,94,https://su2code.github.io,https://github.com/su2code/SU2/pull/2057#issuecomment-1645128810,3,"['config', 'variab']","['configuration', 'variables']"
Modifiability,"> I'm thinking about reusing the SST test case ([axisymmetric_rans/air_nozzle](https://github.com/su2code/SU2/tree/master/TestCases/axisymmetric_rans/air_nozzle)) so that the same mesh can be used. Would that be fine ?. That's a quite specific testcase. How did you test the implementation? Do you have some simple results for the turbulent axisymmetric jet? We know that the results for round jets are not super good for standard SA, but at least we know what the result should look like, here on p.32 - 35 they test SA for the round jet and compare to the Wygnanski & Fiedler measurements:; https://www.researchgate.net/publication/24296213_Turbulence_Modeling_Validation_Testing_and_Development. The domain is just a rectangle so pretty simple to set up. You could also use the V&V test that we have, but it is a variable density jet:; https://su2code.github.io/vandv/SANDIA_jet/",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505:816,variab,variable,816,https://su2code.github.io,https://github.com/su2code/SU2/pull/2197#issuecomment-1889612505,2,['variab'],['variable']
Modifiability,"> If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I tried but heatflux equals to 0.000. What is wrong?. > If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I tried but heatflux equals to 0.000. What is wrong?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-545908540:187,config,config,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-545908540,2,['config'],['config']
Modifiability,"> If you are referring to surface heat flux it is one of the default surface outputs.; > Maybe there is a bug in v6.2 but in current develop it seems to work fine, you can try using this config: [v7.cfg.zip](https://github.com/su2code/SU2/files/3762621/v7.cfg.zip); > Some options changed name since v6.2, you can read about it here: https://su2code.github.io/docs/Guide-to-v7/; > I replaced the relevant time domain options but commented out all the output options.; > ; > On another note I think you should revise your settings, you had a time step of 0 on an unsteady simulation for example. If you have setup questions have a look at the user forum https://www.cfd-online.com/Forums/su2/ and start a topic if there is no related one already.; > ; > If you have issues with heatflux output with the develop version / v7 we can re-open this issue. I wonder that if I use TIME_STEPPING without dual time, is timestep a must?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-546276782:187,config,config,187,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-546276782,1,['config'],['config']
Modifiability,"> In Xcode, go to the menu item Product -> Scheme -> Edit Scheme... Once the dialogue pops up, there are tabs for ""Arguments"" where you can add the config file name to the command line call, and also ""Options"" where you can set a custom working directory where the config/mesh are located. Thank you very much @economon ; Your method works exactly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/994#issuecomment-631892301:148,config,config,148,https://su2code.github.io,https://github.com/su2code/SU2/issues/994#issuecomment-631892301,2,['config'],['config']
Modifiability,"> In the discrete adjoint we always to a dry run before the real recording, maybe that could be use to recompute the CFL at 0 overhead?. Isn't that what we were doing before? While I also generally wouldn't want to rely on file I/O, my issues with how we had it were ; 1) if the final CFL of the primal solver was large then even adapting in the dry run would have a much lower CFL, which resulted in super slow adjoint convergence making it a huge (or at least more than necessary) bottleneck in optimization/mesh adaptation; 2) sometimes I would get divergence when adapting in the dry run even with converged primal solutions. Storing the CFL would at least recreate the state at primal convergence, which should be stable if the CFL adaptation is reliable. But maybe this idea is better suited for the python wrapper where we could just keep everything in memory.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301:330,adapt,adapting,330,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739075301,4,['adapt'],"['adaptation', 'adapting']"
Modifiability,"> In the early days, we thought completely removing CVariable and CNumerics would be very intrusive to change and would hurt flexibility... Over the years, I don't think that folks have really modified the CNumerics classes all that often (once you have implemented the Roe method, it is more or less done). As someone who has worked with the CNumerics classes a lot, I can say that we really don't gain much by keeping them as separate classes. On the surface, it seems like a good use of the [strategy pattern](https://sourcemaking.com/design_patterns/strategy). But from a pragmatic approach, it's not as flexible as OO purists would like you to believe. First off, if you need a new variable in the CNumerics class, you need to change both the solver class and the numerics class, since the solver class calls Setters to set the numerics variables. If you don't call the right Setters, you get a silent failure (unless you're using valgrind). The passing of variables between solver and numerics also leads to a lot of code duplication. And for many solvers (e.g. the viscous NS numerics or the source terms in the SST model) you only end up with one numerics class anyways. I also imagine there's a strong performance hit from all the Setters and copying of variables. But I haven't taken the time to check for myself. In my opinion, you could keep 80% of the current flexibility by using different functions instead of different classes. But I also think we would have to work carefully, or else we'll make the code harder to maintain.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-514020687:608,flexible,flexible,608,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-514020687,5,"['flexible', 'variab']","['flexible', 'variable', 'variables']"
Modifiability,"> Is it possible for the fluid side to work index-based and the structural side as before?; > We are combining the cross terms manually and re-recording each step anyway... (Please rather say internal-based, or variable-based - both approaches are index-based, they differ in the way they are stored :-)). In principle, yes. One can have both at the same time. I'd have to think about it, sounds a bit messy to me right now to get it all consistent. One could also change `GetMultizone_Problem()` to `GetMultizone_Problem() && !GetFSI_Problem()` or similar at those places. Anyway, we know the reason for this problem, so I'll leave it up to you which way we go. > but it depends also a lot on what timing we are moving in. Yes.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542224837:211,variab,variable-based,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542224837,1,['variab'],['variable-based']
Modifiability,"> Just in case it is helpful, the Abseil library from Google is a nice way to use some C++14 and later features with only a C++11 requirement. We could consider integrating if it makes life much easier...; > ; > https://abseil.io. Thanks for pointing me to this library :) There was a project that was in dire need for such libraries. Well I'm still a newbie discovering the code. From what I can see, the whole code base is C-oriented (maybe even originating from Fortran??). But I would advise against integrating it (Maybe it's a bit of an overkill for the current state of SU2) because most devs won't actually use the features from c++17 (myself included) and we should be able to deal with the lack of make_unique and variable templates in c++11 :smile:. With that said, if you're planning on using more c++ features while rebuilding/extending the code base, it might be a very good idea to integrate it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781:724,variab,variable,724,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-670977781,2,"['extend', 'variab']","['extending', 'variable']"
Modifiability,"> Just put the default definition of the function in a dynamically linked library and when you want to use a different definition of this function, just point your library path to your custom library in e.g. your testcases directory. Could you elaborate more on this?? Let me explain a typical scenario I would go through (picking BCs as an example):; - I should be able to construct my custom BC inheriting from one of the existing ones. Put this new BC_TYPE boundary condition in my dynamically-linked library.; - BUT no recompiling of SU2_CFD; the program should provide facilities to dynamically load libs at RUNTIME (e.g. list of custom ibs in case config file).; - Now, switching between my custom BC types and the standard ones only requires to edit the config file. As I understand,; - Dynamically loading a library specified in the config file at runtime is easy. ""dlopen"" is there, and possibly more sophisticated libraries?; - The issue is that there is no way to ""select"" the new BC because it was not known at compile-time.; - Most of the code is built around the assumption of ""knowing things"" at compile time. So a series of if statements checking the setting in the config file was the way to go. If the setting in the config says EULER; The Euler BC gets picked up. But what if it says Custom_EULER?. I got distracted by some other stuff. But here is the thing:; - All BCs should inherit from a Base Class (Assuming BCs are classes to begin with); - The selection mechanism will rely on the custom BC class registering itself to a Factory automatically.; - Through the magic of templates and macro expansion, it's possible to easily add the custom BC to the map of known BCs (Yet to be implemented). If this interests you and if you think there is a decent chance of incorporating this design into the code, please let me know. I will give this a higher priority :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421:397,inherit,inheriting,397,https://su2code.github.io,https://github.com/su2code/SU2/issues/1058#issuecomment-679979421,7,"['config', 'inherit']","['config', 'inherit', 'inheriting']"
Modifiability,"> Looks good, can you document how it would be used?. Sure. Added an option so that you can compile the AD build using the tag type (`-Dcodi-tape=Tag`) for now. You will have to check out the current develop branch of CoDiPack.; I'm thinking about writing a ""`SetRecording_Debug`"" next. Together with config file options and so on... documentation will follow.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2343#issuecomment-2309023723:301,config,config,301,https://su2code.github.io,https://github.com/su2code/SU2/pull/2343#issuecomment-2309023723,1,['config'],['config']
Modifiability,"> Looks quite simple to me now, what do you think?. I fully agree. The CVariable footprint is much smaller and no more nasty address handling. (Adding another variable in another solver requires a bit more code though and a little understanding of what is going on than the ""Address""-version, but on the other hand this explicit handling of each primal-solver creates a good separation :+1: )",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065:159,variab,variable,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1050172065,2,['variab'],['variable']
Modifiability,"> Method described below.; > No config options needed.; > Takes about a minute to interpolate an 8M node mesh to a 70M mesh on 1000 cores.; > May or may not add OpenMP to this which would improve scalability.; > Restarts are read twice for RANS problems, which is not great for this type of feature... This is a great addition, I am now doing this outside of SU2 with some python code, but having this native in SU2 is really great! I haven't looked at the details yet, but I guess the assumption is that the geometry stay the same, we only have a finer mesh? Also, the 'restarts are read twice for RANS' is that a general issue when having additional solvers (like heat, scalar, nemo)?; Last thing (for now): Does it work when using an inlet.dat boundary file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1277#issuecomment-830808518:32,config,config,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-830808518,1,['config'],['config']
Modifiability,"> Nice work @jayantmukho, I hope that script helped with moving the inlines. Yes! It did. I was able to build off the script you gave me to enable moving multi-line inlines. Now it only fails when the function signatures don't match up (because of different variable names). I've attached it here:; [split_inlines.txt](https://github.com/su2code/SU2/files/4054552/split_inlines.txt); [merge_inlines.txt](https://github.com/su2code/SU2/files/4054551/merge_inlines.txt). > General question, did you update the `#include ""solver_structure.hpp""` automatically or manually (fixing the compilation errors one by one)? I ask because this kind of file restructuring gives us a good opportunity to make sure we are including files only where needed, which helps with build times. I replaced the solver_structure.hpp files with just CSolver.hpp first. Then quashed errors by specific solver includes when needed. But its a good point. I will go through it again to remove any unnecessary includes that might have crept in. . > Apart from the two comments below, I would add that it would be nice to put virtual (`override` or `final`) and `const` specifiers where appropriate, at some point, not necessarily now. Ah yes, this is a good time to do this. Will do.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/849#issuecomment-573749755:258,variab,variable,258,https://su2code.github.io,https://github.com/su2code/SU2/pull/849#issuecomment-573749755,1,['variab'],['variable']
Modifiability,"> Nice work already! If you click on 'Details' at the right of the failed Regression and Unit Testing cases you will see why they fail. I think one of the first things to do is go through these error messages ('variable may be used uninitialized', etc) and fix them so the regression tests will run. Thank you! I am in the middle of doing it. Hopefully, there are not that many issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788:211,variab,variable,211,https://su2code.github.io,https://github.com/su2code/SU2/pull/1810#issuecomment-1308632788,1,['variab'],['variable']
Modifiability,"> Nice! By the way, did you use some scripts for going through all the files and returning 'bad' naming conventions?. No, now I am just going through it by hand probably some linters are available to at least detect them. Actually, I am a bit confused as it is not so clear in the guide. It looks like the beginning of the project was just abbreviated from the Google style guide and was not enforced. Enforcing function names in UpperCamelCase and leaving variable names to the developer seems reasonable. > Can you explain the snake/camel terminology? :). Let's say we have a variable we want to name as `number of nodes per mesh` there are 2 common choices as . ```cpp; number_of_nodes_per_mesh = 42;; numberOfNodesPerMesh = 42;; ```; The first case is called the [snake case](https://en.wikipedia.org/wiki/Snake_case) and the second one is the [camel case ](https://en.wikipedia.org/wiki/Camel_case). Snake case is generally used in Python as [PEP8](https://peps.python.org/pep-0008/) suggests. . > Please revert the python accessor changes. I merged develop many of them vanished, should I revert the remaining ones?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542:457,variab,variable,457,https://su2code.github.io,https://github.com/su2code/SU2/pull/1981#issuecomment-1482062542,4,['variab'],['variable']
Modifiability,"> No, currently there is no way of doing that. The ""inlet option"" takes a fixed number of arguments. Ok, thanks @pcarruscag. So either I need to create a new supersonic inlet for NEMO, or an additional config option that allows the user to specify the mass fractions and T_ve. Which of these two approaches would be better?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1374042897:202,config,config,202,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1374042897,1,['config'],['config']
Modifiability,"> OK, I see that some refactoring happened e.g. to the python wrapper in the meantime. What's the best way to resolve the conflicts? --> If I hit the Resolve conflicts button, there is nothing I can do. Sorry, mistakenly I removed your functions from conflicted files github somewhat allow me to solve the conflict but not added any new commit or revert it. Feel free to add them as an additional commit or revert my commit. . Normally if you have a merge conflict easiest way is to solve the conflict from your IDE. Pull the latest develop and merge to your branch, while merging you need to resolve the merge conflict. This was an easy case you only have a few conflict, git write conflicts ass. ```; >>> code from your branch; void xyz(); /* your implementation */; === develop; void xyz(); /* their implementation */; <<< ; ````; your need to replace that part with whichever code you want to keep or delete both of them etc. Then mark from the top right corner as resolved. I am sorry, I am a bit tired and did not identify your part of the code from the previous implementation since it is in the middle. I removed all of them and GitHub automatically push it. The required code pieces are these if I am not wrong. I am really sorry about the mistake. from `SU2_CFD/src/python_wrapper_structure.cpp`; ```cpp; ////////////////////////////////////////////////////////////////////////////////; /* Functions related to dynamic mesh */; ////////////////////////////////////////////////////////////////////////////////. void CDriver::SetTranslationRate(passivedouble xDot, passivedouble yDot, passivedouble zDot) {; if (rank == MASTER_NODE) {; cout << endl << "" Setting new translational velocity in x, y, z direction."";; }; for (iZone = 0; iZone < nZone; iZone++) {; config_container[iZone]->SetTranslation_Rate(0, xDot);; config_container[iZone]->SetTranslation_Rate(1, yDot);; config_container[iZone]->SetTranslation_Rate(2, zDot);; }; }. void CDriver::SetRotationRate(passivedouble rot_x, passived",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2024#issuecomment-1536008994:22,refactor,refactoring,22,https://su2code.github.io,https://github.com/su2code/SU2/pull/2024#issuecomment-1536008994,1,['refactor'],['refactoring']
Modifiability,"> Personally I would like this to selfishly enhance my understanding, but I don't think it should be merged when we complete the PR. Could be useful documentation for the website. Well I think the functionality should be merged at some point. It might become too much for this PR(?). Let me just go ahead and create a dedicated branch for the tag tape. We could just use that branch as a helper then and prepare it for develop after this one is merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2317#issuecomment-2292306791:44,enhance,enhance,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/2317#issuecomment-2292306791,1,['enhance'],['enhance']
Modifiability,> Please describe what you tried. With this configure file and the same files above.; [BB_ISOTHERMAL_8.03_183500_AUSMPLUSUP_0.05.zip](https://github.com/su2code/SU2/files/3771219/BB_ISOTHERMAL_8.03_183500_AUSMPLUSUP_0.05.zip),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-546264432:44,config,configure,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-546264432,1,['config'],['configure']
Modifiability,"> Please modify the existing CoolProp test case to use the models, or add a new one. I add a new config file to include the CoolProp viscosity and conductivity model. I use the same mesh, so no new mesh is required.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1819#issuecomment-1326751620:97,config,config,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/1819#issuecomment-1326751620,1,['config'],['config']
Modifiability,> Please run `preconfigure.py --help` and see if it addresses what you need. You mean the script in the `legacy` folder ? . It does not provide any flag to tell the configure script to use existing external dependencies.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645514795:165,config,configure,165,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645514795,1,['config'],['configure']
Modifiability,> Question: What happens in moving mesh cases if the surface starts out flat and then gets deformed?. @pcarruscag I now explicitly stated that: `config->GetKind_GridMovement() != RIGID_MOTION` ->then recompute normals.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/740#issuecomment-518311244:145,config,config,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/740#issuecomment-518311244,1,['config'],['config']
Modifiability,"> SU2 is a fantastic library, but the build process is really painful to get static linking within another C++ program. CMake is a standard for building C++ projects and would be extremely helpful. Ideally Python wouldn't be necessary to build SU2 or link it with another project. I'm not sure I understand this... the fact that the build system uses python means that it is really painful to configure the build system to emit a static library? (This should absolutely not be the case! Meson has a core option `-Ddefault_library={static|shared|both}` to select what kind of library you want to build, for any library whose build description claims it can support either one. It's a bit like cmake's `-DBUILD_SHARED_LIBS` except much more powerful.). However, as far as I can tell, su2 doesn't mark any of its libraries as public at all (i.e., installable) so maybe that's a moot point. As far as making python be necessary to build the project, I think this mainly boils down to ""I myself use cmake, I have cmake installed, I don't want to install another program when I could use the program I already have"". Is it really that big of a deal, though? The software *does* use it, and it's not that difficult to install TBH (Linux operating systems in particular almost certainly have it installed already).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1711#issuecomment-1312985406:393,config,configure,393,https://su2code.github.io,https://github.com/su2code/SU2/issues/1711#issuecomment-1312985406,1,['config'],['configure']
Modifiability,"> Since you accuse me of randomly reporting issues (...). No, absolutely not. But it makes the impression if you point to a line of code and then giving no information or ideas.; Since no one of the core developers seemed to have a reply (and that might be the reason), I gave it a try ;). > Shouldn't numerical flux (at farfield) be evaluated based on boundary variables calculated from the Riemann Invariants?. It is.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-313628509:362,variab,variables,362,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-313628509,1,['variab'],['variables']
Modifiability,"> So I am closing this for now. It will be announced when this model becomes available. Hello, vdweide. Thank you for your attention and this contribution. Did you ever try some testcases? I am a beginner SU2 user. Can you maybe give us a configure file about S-K transition flat plate using LM model? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/502#issuecomment-446515213:239,config,configure,239,https://su2code.github.io,https://github.com/su2code/SU2/issues/502#issuecomment-446515213,1,['config'],['configure']
Modifiability,"> Thank you for updating the solution file @snow54 , there's quite a big difference in the adjoint residuals, do the final derivatives still make sense? Is the flow field noticeably different (for the better, e.g. smoother? or equivalent to not having the boundary at all?) now that nearfield is treated as an internal boundary?; > If so let's update the residuals and merge. I think we can update the residuals. Gradients between adjoint and finite difference match quite well as shown below. I haven't finished calculating for all design variables, but I think it is enough. ![Comparison_gradient](https://user-images.githubusercontent.com/18245846/129564585-d7812108-d315-4606-83d9-e39a8c9403b3.png). In terms of flow field, the capture below is from the current develop branch. The boundary between structured grid and unstructured gird is a nearfield boundary. An object is above this capture and pressure wave propagates from there. Since this grid is inclined by Mach angle, pressure distribution on the nearfield should be fairly similar to the region above but this capture shows some strange pressure disturbance. Limiter: VAN_ALBADA_EDGE; ![NF_before](https://user-images.githubusercontent.com/18245846/129564639-030fe1b7-7e50-4bb1-9951-21f5ea27bb52.png). Limiter: VENKATAKRISHNAN_WANG; ![NF_before_VEN](https://user-images.githubusercontent.com/18245846/129568934-137681db-04db-40f1-819f-7bcc8c7e0d88.png). The capture below is from the branch with this PR. The issue I mentioned above does not exist. Limiter: VAN_ALBADA_EDGE; ![NF_after](https://user-images.githubusercontent.com/18245846/129564659-cec5a848-1b0b-4051-8298-e3d383dacc6d.png). I think the residuals for direct solver will be different like the adjoint if you run it for some hundreds more iterations (currently, the test case has only 20 iterations). However, since the nearfield boundary is a bit far from an object, it takes some iterations for pressure waves to reach the nearfield boundary. This PR also solves an issu",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618:540,variab,variables,540,https://su2code.github.io,https://github.com/su2code/SU2/pull/1351#issuecomment-899498618,2,['variab'],['variables']
Modifiability,"> Thank you for your answer. If you could share the configs and meshes that you are using I can try following the approach suggested by @pcarruscag and use the TKE from the turbulence solver instead of the freestream one.; > ; > Plus, I have some doubts on the default value of the turbulent to laminar viscosity ratio which is equal to 10 in SU2, although on the NASA page suggests to be in the range of 10^-2 to 10^-5. However, I think that this is another issue. @rois1995 Hi ~ . Can you give me a link to the NASA TMR guide for setting the viscosity ratio? I'm not sure where to find it. Sorry, I found it!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-2251837355:52,config,configs,52,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-2251837355,2,['config'],['configs']
Modifiability,"> Thanks @fmpmorgado! NEMO definitely needs some speed up! This looks good!; > ; > Regarding the preprocessing, why is the ComputeSoundSpeed() function returning slightly different results?. @WallyMaier . Inside the CNEMOEulerVariable, you set the fluidmodel with the freestream conditions written in the config file and use the ComputeSoundSpeed(). However, in the CNEMOEulerSolver, in the deleted loop, you had GetSoundSpeed(), which retrieves the solution already estabilished in the Primitive Matrix. The Primitive Matrix was estabilished inside the SetPrimVar() function. However, inside the function, we set the fluidmodel with slightly different values than the ones used in the config file, because we first run the iterative process to find the translational and vibrational temperature with the given energies. This iterative process provides slightly different temperatures than the ones in the config file, thus computing slightly different sound speeds",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1340#issuecomment-890297817:305,config,config,305,https://su2code.github.io,https://github.com/su2code/SU2/pull/1340#issuecomment-890297817,3,['config'],['config']
Modifiability,"> Thanks for pointing that out. I dont think it is intentional. Maybe we can use this PR also to fix this ?. That depends on how atomic we want these PRs to be. This PR is largely a refactoring PR, and shouldn't change any underlying performance. But adding extra calculations on source terms and wall conditions might change the performance of the code. The two changes are completely compatible, so combining them wouldn't be hard. Nevertheless, I propose we keep these changes separate, so that the purpose of each PR is clear and easy to see. In my mind, two small PRs are easier to check and review than one large PR. @talbring @economon What do you think? One big PR or two small PRs?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/626#issuecomment-458177675:182,refactor,refactoring,182,https://su2code.github.io,https://github.com/su2code/SU2/pull/626#issuecomment-458177675,2,['refactor'],['refactoring']
Modifiability,"> Thanks for the PR! I just have a single question: Why Set_MPI_MaxLength needed to be called 2 times for periodic boundaries?; > ; > LGTM! If Travis pass, we are ready to merge.; > Eduardo. To be honest, I don't know. I just know that that:. + Without calling it twice, the max length is not initialized on some of the periodic halo nodes.; + When you do call it twice, the max length is initialized on all periodic halo nodes. Something similar happens when loading a solution from a restart file, where the solver needs to do something like this:. solver[MESH_0][FLOW_SOL]->Set_MPI_Solution(geometry[MESH_0], config);; solver[MESH_0][FLOW_SOL]->Set_MPI_Solution(geometry[MESH_0], config);. @economon Do you know why the MPI calls need to be made twice?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/649#issuecomment-463668790:612,config,config,612,https://su2code.github.io,https://github.com/su2code/SU2/pull/649#issuecomment-463668790,2,['config'],['config']
Modifiability,> Thanks for this +1 Please strip all the comments and non relevant options from the configs. Thank you Pedro for all your suggestions.; I have reverted the serial_regression.py file and updated the configuration files. This work is done in 84c9584d430e23ea62b4371cad3d0a96d9717cdb.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1418#issuecomment-958936613:85,config,configs,85,https://su2code.github.io,https://github.com/su2code/SU2/pull/1418#issuecomment-958936613,2,['config'],"['configs', 'configuration']"
Modifiability,"> Thanks. Is it possible to target only some paths for formatting? I'm concerned about making life too difficult for developers, and we cannot break lines in some files because we parse them to generate some python code. Having only some paths we would then include more files over time until we cover everything. @pcarruscag ; The hook options of pre-commit hooks are [here](https://pre-commit.com/index.html#pre-commit-configyaml---hooks) . As far as I understand yes it is possible with the `files` option (AFAIK it is a regex pattern) another option is excluding some directories now I only exclude the `external` directory. . I look at the regression test the values seem okay but the test fails is this due to wrappers? If you tell me which directories should be omitted, I would adjust it quickly. In general, we can also disable column limit/wrapping from `clang-format` but it is probably not the best option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335:421,config,configyaml---hooks,421,https://su2code.github.io,https://github.com/su2code/SU2/pull/1948#issuecomment-1455246335,1,['config'],['configyaml---hooks']
Modifiability,"> The documentation looks great! (Answered a couple of my questions); > Can you give an example of linking to external libraries? e.g. BLAS; > For example I currently need:; > ; > ```; > export CPPFLAGS=""-DHAVE_LAPACK""; > export LDFLAGS=""-L$OPENBLAS/haswell_omp/lib""; > export LIBS=""-lopenblas -lgfortran -fopenmp""; > ```. Well you have two options. First, if the libraries can be found with `pkg-config`, the easiest is to just use ; ```; openblas = dependency('openblas') ; su2_deps += openblas; ```; Otherwise you'll have to declare the dependency with; ```; openblas = declare_dependency(...); su2_deps += openblas; ```; where the arguments for that routine are explained [here](https://mesonbuild.com/Reference-manual.html#declare_dependency)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/745#issuecomment-517243186:397,config,config,397,https://su2code.github.io,https://github.com/su2code/SU2/pull/745#issuecomment-517243186,1,['config'],['config']
Modifiability,"> The fixed-Cl mode is not active during adjoints, the AOA is just taken from the metadata. I.e. you would propose to try to disable the delta-pressure udpdate during the adjoint for prescribed massflow? In my understanding that would result in an inconsistent gradient -> which might work good enough for optimizations but in a gradient validation I would expect significant deviations. > If something is determined iteratively, then I think it is a solution variable, [...]. So it is settled then -> I will try to give pressure-drop the same treatment as regular solution variables as mentioned in point 2. of the PR description.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530:460,variab,variable,460,https://su2code.github.io,https://github.com/su2code/SU2/pull/1536#issuecomment-1030096530,2,['variab'],"['variable', 'variables']"
Modifiability,"> The language is much more flexible and allows also for if-statements, loops, maps and so on. For the output it does not make that much sense, but for initial conditions it might be useful later. This could be useful even for general outputs. One example that comes to mind is if you wanted to calculate the momentum/pressure loss due to a shock. Excited for these new features!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-607959681:28,flexible,flexible,28,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-607959681,1,['flexible'],['flexible']
Modifiability,"> The logic when computing the Laplacians (used for 4th order dissipation) is that for points on a physical boundary, only other physical boundaries are considered when adding solution differences.; > I think this is to avoid adding very large differences for wall points. However when we have a point at a wall-symmetry intersection, the wall point will receive contributions from the symmetry points since that is also a ""physical boundary"".; > That is my hypothesis anyway, anyone care to run some tests? :). Thanks you for the hint, I am running some tests using different values of the 4th order dissipation coefficient for the OneraM6 test case.; Lowering this value, as expected, increase the oscillations of the JST scheme. Anyway the problem is still there.; What looks strange to me is that this difference is present only for the skin friction coefficient and not for the other variables.; Is it possible that the problem is due to the computation of the Cf?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637:889,variab,variables,889,https://su2code.github.io,https://github.com/su2code/SU2/issues/1125#issuecomment-742483637,1,['variab'],['variables']
Modifiability,"> The restarts are read once per solver, so, if you have Incomp RANS, with weakly coupled heat, a scalar, and mesh deformation... 5 times :); Well, it seems fast enough, so it does not pose an immediate problem. I guess the solution to this is to move the reading of the data 'higher up', first get all the solvers and variables, then read the file and populate the solver variables, something like that? ; Anyway, I think the way it is done now looks good.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1277#issuecomment-831214603:319,variab,variables,319,https://su2code.github.io,https://github.com/su2code/SU2/pull/1277#issuecomment-831214603,2,['variab'],['variables']
Modifiability,"> The solution I suggested didn’t work?. I still have to check if the implementation is correct but with more than two cores the code breaks. However, I found out that the wall-normal of a volume point can be computed as the normalized gradient of the wall-distance. Does this sound correct to you? . However, there is a problem: I am using the aux variables to compute these gradients, but to compute dot(n, U) I first need n, thus I cannot compute them simultaneously. Since these computations are performed in the Preprocessing of the solvers, I was thinking to compute the normal within the FLOW_SOL preprocessing and the dot(n, U) in the TRANS_SOL preprocessing since the flow solver comes before the trans solver. Is this right?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1901#issuecomment-1429962062:349,variab,variables,349,https://su2code.github.io,https://github.com/su2code/SU2/pull/1901#issuecomment-1429962062,1,['variab'],['variables']
Modifiability,"> The solution to (2) appears to be to change geometry->node[iPoint]->GetnNeighbor() to geometry->node[iPoint]->GetnPoint() at line 3759 of CEulerSolver.cpp, in the CEulerSolver::SetUpwind_Ducros_Sensor() method. @GomerOfDoom thanks for tracking that, I fixed the exit condition on that method, but only now that I'm refactoring CPoint in #966 have I realized the difference between nPoint and nNeighbor... Does your case have periodicity?; I will fix incorrect uses of nNeighbor in other areas of the code as part of #966, time domain with moving grids will have similar issues.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/949#issuecomment-622511555:317,refactor,refactoring,317,https://su2code.github.io,https://github.com/su2code/SU2/issues/949#issuecomment-622511555,1,['refactor'],['refactoring']
Modifiability,"> There are 2 cases in the testcases repository, both are using the Euler solver. Maybe also check if your case is running correctly with the settings from those testcases. Earlier, I was defining the mesh movement for the static zone as:. ` GRID_MOVEMENT= NONE `. since it was stationary. However, after checking the test cases, I found that the stator zones should also be defined as moving as. ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0 ; ```. even though the mesh stays stationary. In that case, the unphysical flow results I presented earlier vanished. Earlier, I tried the cylinder test case with the inner zone having . ```; GRID_MOVEMENT= RIGID_MOTION; MOTION_ORIGIN= 0.0 0.0 0.0; ROTATION_RATE = 0.0 0.0 0.0; ```. and the outer zone having; ` GRID_MOVEMENT= NONE `. where the simulation gave physically viable results. I guess the zone interface may not accurately work if the `GRID_MOVEMENT` options of the neighbouring zones do not match while one of the zones has a non-zero movement. However, I have not simulated any other test cases. Also, the sliding_interface/rotating_cylinders test case diverges with the given .cfg files. At around the 775th time step, I received the following error message:. `SU2 has diverged (Residual > 10^20 detected). `. However, it works just fine if the simulations are done in subsonic flow (e.g. `MACH_NUMBER= 0.1`) while keeping the rest of the configuration the same.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181:1440,config,configuration,1440,https://su2code.github.io,https://github.com/su2code/SU2/issues/2255#issuecomment-2051695181,1,['config'],['configuration']
Modifiability,"> There was a lot of talk about refactoring the shape optimization framework to be able to work completely in memory.; > I think the idea was not to have more drivers but simply to have more granularity such that you could manipulate the geometry from python (without writing it to files).; > We also wanted introspection, i.e. you could probe SU2 via python for what variables and functions are available.; > We also talked about having the projection step (DOT) included in CFD_AD so that you only need to worry about surface sensitivities, note that DEF is already part of CFD for forward mode AD.; > (talking does not go very far); > ; > If you want to lead this work, we can help you understand the inner workings. We meet every Wednesday at 4pm CET https://meet.jit.si/SU2_DevMeeting to discuss this type of issue. Thank you for the quick reply. The discussions you mention sound very promising, I would be glad to join tomorrow afternoon and learn more, so that I might contribute. One quick remark: I am aware that it is indeed possible to deform the mesh within `SU2_CFD`, I use this extensively for static aero-elastic analysis. However, I have not been able to have the deformed mesh be written to file at output (in SU2 or CGNS format). This is fine for aero-elastic updates (movement of the surface due to _structural displacements_), where it is sufficient to see the deformed mesh in the post-processing files. It becomes impractical though, for design updates (movement of the surface to due to _design displacements_, i.e. representing changes in the design variables) where the new mesh is a useful intermediate result. Even if this is just an issue in my configuration file, I think that a stand-alone driver or equivalent of `SU2_DEF` would remain useful. For each new set of updated design variables during shape optimisation, a single mesh deformation is sufficient to provide the new, updated jig geometry which all of the aerodynamic or aero-elastic analyses (one for each oper",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696:32,refactor,refactoring,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/1262#issuecomment-818839696,4,"['refactor', 'variab']","['refactoring', 'variables']"
Modifiability,"> This is a good point, as you know we've tried to move to the ""m"" versions of SST (#1483) (dropping k from viscous terms) but I don't think we have looked too deeply into the convective terms. However, the Roe speed of sound is only used by dissipation terms, the consistent part of the flux is based on primitive variables, and those account for tke, so I suspect there is some other inconsistency at play when defining farfield conditions or the farfield boundary itself. Also note that you are probably using very high values of free stream turbulence intensity and viscosity ratio, the defaults are (5% and 10x). I did not see this type of problem in https://su2code.github.io/vandv/swbli/. Thank you for reply. ; I just ran the V&V SWBLI case. Both k-w SST and SA model results were no problem. . In the k-w SST case, When I arbitrarily changed free stream turbulent intensity 5e-3 to 5e-2, the flow condition at the inlet was changed. You can see the below figure(The S-A and kw(5e-3) is on the same line).; ![image](https://user-images.githubusercontent.com/50565314/208935044-bba92715-1828-4ddb-929a-b77877416cbb.png). The problem seems to arise when you have a large TKE.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1851#issuecomment-1361444490:315,variab,variables,315,https://su2code.github.io,https://github.com/su2code/SU2/issues/1851#issuecomment-1361444490,1,['variab'],['variables']
Modifiability,"> Use the develop branch of the code and the config file I uploaded before. Heatflux is being outputted.; > Please understand that we do not have resources to fix bugs in previous versions of the code. Hello. . I read the code. In the file 'solver_direct_mean.cpp', there is a function, 'CNSSolver::Friction_Forces', in which a line of code is wrong. The last parameter of the code, 'HeatFlux[iMarker][iVertex] = -thermal_conductivity*GradTemperature*RefHeatFlux;' is for normalization, but we only declare it before. In another word, 'RefHeatFlux' is forgotten. If I delete 'RefHeatFlux' in this line of code, it works. Certainly, at this moment, heatflux I get is not normalized any more. My version is 6.2.0.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/805#issuecomment-554811138:45,config,config,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/805#issuecomment-554811138,1,['config'],['config']
Modifiability,"> We can already output all LUT and MLP variables using; > ; > ```; > LOOKUP_NAMES= Beta_ProgVar; > VOLUME_OUTPUT= LOOKUP; > ```. Ok, Thanks",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2303#issuecomment-2169382876:40,variab,variables,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/2303#issuecomment-2169382876,1,['variab'],['variables']
Modifiability,"> Yes but it would be kind of you to check if a feature of a future release is going in the direction of what you need. Compiled libraries would be easy to handle via pkg config. . Ah, I did not understand that this is something you were already working on and were asking me to test, I thought you were suggesting to use develop to install the software on our production cluster. I should not have assumed that, it's just something that is unfortunately quite frequent in the field of scientific software (just use the head of the git repo). I did not have any clone of the repo, so did not see that script (only the one in `legacy`) initially. . ```; $ ./preconfigure.py --help; usage: preconfigure.py [-h] [--with-own-meson] [--no-codi] [--no-medi]; [--no-opdi] [--no-mpp] [--no-coolprop] [--no-mel]; [--no-mlpcpp]. optional arguments:; -h, --help show this help message and exit; --with-own-meson download own copies of Meson and Ninja; --no-codi do not download own copy of CoDiPack; --no-medi do not download own copy of MeDiPack; --no-opdi do not download own copy of OpDiLib; --no-mpp do not download own copy of Mutationpp; --no-coolprop do not download own copy of CoolProp; --no-mel do not download own copy of MEL; --no-mlpcpp do not download copy of MLpCpp; ``` . It seems like to go in the right direction. Is there a plan to provide options to specify how to find installed copies of those ? Something like `--medi=/path/to/installed/medi` and such ? pkgconfig or other auto-detection mechanisms usually work, but sometimes it doesn't, and explicit workarounds sometimes help. . I also don't see other packages that end up in externals, such as `metis`, `parmetis`, `autotools`, `catch2`. I am not sure how those are used (or if they are used), but I noticed folders for them in the `externals` folder. Is there a plan to allow using external versions of those ?. > But your choices of words sound a bit unfriendly so I honestly don't care, we can also close the issue until the next re",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352:171,config,config,171,https://su2code.github.io,https://github.com/su2code/SU2/issues/2086#issuecomment-1645726352,1,['config'],['config']
Modifiability,"> You may want to remove the string based interface since it's known to be inneficient. When replacing the string-based with index-based look-up methods, the performance improves substantially. The figure below shows the average measured evaluation time (measured with chrono library) vs the number of output variables. It's clear that using index-based look-up methods results in reduced query time, as well as improved scaling. ![scaling_nVars](https://github.com/su2code/SU2/assets/38651601/31252439-ac6e-4f1b-82d4-e13a55d54c98)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226:309,variab,variables,309,https://su2code.github.io,https://github.com/su2code/SU2/pull/2214#issuecomment-1952521226,2,['variab'],['variables']
Modifiability,"> You should be able to use CConfig::SetFinestMesh in CDriver::Geometrical_Preprocessing_FVM to initialize this to the coarsest grid that was produced.; > ; > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want. Your suggestion is also valid, but in my opinion it would be more coherent, in terms of code structure, to reduce the finest mesh level whenever we modify the number of multigrid levels. So in CMultiGridGeometry::CMultiGridGeometry add this line of code; `config->SetFinestMesh(iMesh-1);`; after reducing the number of MGLevels. > The threshold to stop agglomeration should stay. But you can expose it as a config option if you want.; I can do that.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097:235,config,config,235,https://su2code.github.io,https://github.com/su2code/SU2/pull/1362#issuecomment-908181097,3,['config'],['config']
Modifiability,"> after you install msmpi, you should modify environment Variable of MSMPI_LIB64, you can type set MSMPI_LIB64=\%MSMPI_LIB64% in cmd or $env:MSMPI_LIB64=""\""+$env:MSMPI_LIB64 in powershell, then you can build code like ""python meson.py build -Denable-tecio=false -Denable-autodiff=true --prefix=D:\SU2\executable"", it will work this time;. @Zcaic Hi zcaic, . I tried this, but it still thow the same error. with message; ```; OSError: [WinError 123] 文件名、目录名或卷标语法不正确。: 'D:\\mingw-w64\\x86_64\\mingw64\\bin\\..\\lib\\gcc\\x86_64-w64-mingw32\\8.1.0\\lib\\C:\\Program Files (x86)\\Microsoft SDKs\\MPI\\Lib\\x64\\msmpi.a'; ```. ⬆️ just from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\libC:\\Program...`. Is that any solutions ?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582:57,Variab,Variable,57,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1190519582,1,['Variab'],['Variable']
Modifiability,"> the off-PR comments can be integrated in this PR to clear that up a bit. If not that is OK as well. It's more than OK, the CHT implementation suffers a bit from being a single person's project.. you're very welcome to have a look over it! :-). > Can you add that option to the config_template.cfg together with that description, the valid inputs and the default. Actually I'm hesitating a bit adding it to the config template right now. I'd prefer to have `DIRECT_TEMPERATURE_ROBIN_HEATFLUX` as the default and ""hide"" the rest as developer's options for the moment.; The reason simply is that those different methods need to checked and validated against each other before we make them public.; E.g. I figured that for the incompressible CHT test case from the repo, there is a severe gap between the heatfluxes obtained from the ""averaged"" approach and the direct one, see below. ![heatflux_convergence](https://user-images.githubusercontent.com/22639394/72885197-bb9e4a80-3d07-11ea-9fad-a4d709dc511e.png). That needs to be cleared up first...",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/839#issuecomment-577108935:412,config,config,412,https://su2code.github.io,https://github.com/su2code/SU2/pull/839#issuecomment-577108935,2,['config'],['config']
Modifiability,">; configure:4644: result: gcc -E; configure:4664: gcc -E conftest.c; configure:4664: $? = 0; configure:4678: gcc -E conftest.c; conftest.c:11:28: error: ac_nonexistent.h: No such file or directory; configure:4678: $? = 1; configure: failed program was:; | /* confdefs.h */; | #define PACKAGE_NAME ""SU2""; | #define PACKAGE_TARNAME ""SU2""; | #define PACKAGE_VERSION ""4.1.0""; | #define PACKAGE_STRING ""SU2 4.1.0""; | #define PACKAGE_BUGREPORT ""su2code-dev@lists.stanford.edu""; | #define PACKAGE_URL ""https://github.com/su2code""; | #define PACKAGE ""SU2""; | #define VERSION ""4.1.0""; | /* end confdefs.h. */; | #include <ac_nonexistent.h>; configure:4707: checking for grep that handles long lines and -e; configure:4765: result: /bin/grep; configure:4770: checking for egrep; configure:4832: result: /bin/grep -E; configure:4837: checking for ANSI C header files; configure:4857: gcc -c -g -O2 conftest.c >&5; configure:4857: $? = 0; configure:4930: gcc -o conftest -g -O2 conftest.c >&5; configure:4930: $? = 0; configure:4930: ./conftest; configure:4930: $? = 0; configure:4941: result: yes; configure:4954: checking for sys/types.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for sys/stat.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for stdlib.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for string.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for memory.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for strings.h; configure:4954: gcc -c -g -O2 conftest.c >&5; configure:4954: $? = 0; configure:4954: result: yes; configure:4954: checking for inttypes.h; configure:4954: gcc -c -g -O2 conftes",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/250#issuecomment-205167006:9566,config,configure,9566,https://su2code.github.io,https://github.com/su2code/SU2/issues/250#issuecomment-205167006,4,['config'],['configure']
Modifiability,">Do I understand correctly that the roughness height does not influence the wall distance calculation itself?... @pcarruscag , Yes. I can use the markerID to find the corresponding roughness as long as the field element and the nearest wall marker are on the same rank. I was not sure how to relate the markerID on rankID from a different rank to the global config list, hence the current implementation. I am open to fixing it with a different implementation if I can figure out how to actually do it. The few things I tried all ended up causing problems and this was one way to avoid them (also my inexperience with MPI did not help).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-596708744:358,config,config,358,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-596708744,1,['config'],['config']
Modifiability,">GetPrimary());. residual[p0] += r;; residual[p1] -= r;; }; ```; I hope that looks familiar.; `connectivity` is a `vector<pair<int,int> >` so nicely contiguous (in SU2 this information comes from an array of CEdge*). Note that we are never talking about sequential access here, this level of indirection will always be present.; To create a somewhat realistic access pattern we create 2 edges per node connecting it to nodes +- some distance away, this distance is small for end nodes and largest for the middle node (I assumed the maximum distance to be `sqrt(nNode)`). This should vaguely resemble an RCM ordered 2D connectivity.; We will measure the cost of this edge loop relative to using a row-major storage of our variables.; ```; double* solution = new double [nNode*nVar];; for(int i=0; i<nNode*nVar; ++i) solution[i] = 1.0;; ...; double r = numerics->ComputeResidual(&solution[p0*nVar], &solution[p1*nVar]);; ...; ```; OK, so we run this for 1000000 nodes with 4 variables per node and a overhead (or ""space between variables"") of 200 and we see that CVariable is **8.4** times slower.; But we can actually confuse the CPU further by accessing the variables through the virtual method, i.e.; ```; ...; double r = numerics->ComputeResidual(node[p0]->GetSecondary(), node[p1]->GetSecondary());; ...; ```; and now we measure our loop to be **10** times slower.; If we remove all overhead the loop is only **1.5** and **1.9** times slower respectively, it is really the enormous distance that kills performance. **Proposed solution**; Now, I would like to get better performance, but I do not want to re-write the entire code, and I recognize the usefulness of polymorphism and that encapsulating data keeps the code more manageable and readable.; To that end I propose that CVariable should allocate data for all nodes, so CSolver would have one CVariable and not one per node e.g.; ```; class DenseVariableBase; {; protected:; double* primary;; int n, i;; public:; DenseVariableBase(int nVar,",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716:4343,variab,variables,4343,https://su2code.github.io,https://github.com/su2code/SU2/issues/716,2,['variab'],['variables']
Modifiability,">I found out the other day that this: unordered_map<pair<int,int>, su2double> does not work without extra tricks,. Yes, I found some examples to do it. But I was not quite understanding what are the sizes of local maps or how to communicate them over MPI. . >so if you have it out of the config in some matrix format it is probably better. In that case, I can just move the current global arrays to physical geometry class and simplify some of the function calls.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/877#issuecomment-653479936:288,config,config,288,https://su2code.github.io,https://github.com/su2code/SU2/pull/877#issuecomment-653479936,2,['config'],['config']
Modifiability,">…, but it helps to keep the code more approachable and portable. How do you think about to improve any corresponding [system configuration checks](https://github.com/su2code/SU2/blob/ec551e427f20373511432e6cd87402304cc46baa/configure.ac#L53 ""build specification"") then?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/400#issuecomment-360106079:56,portab,portable,56,https://su2code.github.io,https://github.com/su2code/SU2/issues/400#issuecomment-360106079,3,"['config', 'portab']","['configuration', 'configure', 'portable']"
Modifiability,"@BeckettZhou I think that's a good idea. Just to make sure I understand the BANC model: for cases that have large mesh sizes, we provide configuration files, and visualization of the results (comparisons to higher fidelity data and/or to other solvers). If someone would like to run the case for themselves, they would contact the custodian and the custodian is obligated to provide the meshes. The next step would be to start the github repo. @economon Is it possible to start the repo under the su2code umbrella? Is that something you could start and people can start compiling validation test cases, and their results?. Cheers, ; Jayant",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-425961143:137,config,configuration,137,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-425961143,1,['config'],['configuration']
Modifiability,"@DominicMasters ; Hey. I have been trying to run a 3d euler case in SU2. My meshed file with boundary as wing, symmetry and farfield is not working, ; I would appreciate if you could share the config file and mesh file for me to view once.; Thank you. ; ![capture](https://user-images.githubusercontent.com/31462793/38780237-f802ec6e-4098-11e8-8994-903bf0ea5813.JPG)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/321#issuecomment-381415514:193,config,config,193,https://su2code.github.io,https://github.com/su2code/SU2/issues/321#issuecomment-381415514,1,['config'],['config']
Modifiability,@EduardoMolina most of the variables have either been deleted or removed. I expect most will make a return in a future PR for implicit functionality within the NEMO framework,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1139#issuecomment-752122739:27,variab,variables,27,https://su2code.github.io,https://github.com/su2code/SU2/pull/1139#issuecomment-752122739,1,['variab'],['variables']
Modifiability,"@EvertBunschoten @danielmayer @Cristopher-Morales I have now modified the flamelet approach such that it uses the diffusion coefficient D from the LUT file. In this way, the variable mass_diffusivity contains the same variable/same units for the flamelet approach as for the species transport approach. Note that this means you now need diffusion coefficient ""D"" in the LUT instead of ""rho*D"".; @EvertBunschoten I have removed the hard-coded computation of diffusivity from the unity Lewis approach.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1826#issuecomment-1346426110:174,variab,variable,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/1826#issuecomment-1346426110,2,['variab'],['variable']
Modifiability,"@JedrzejMosiezny . The reason why the mesh and config files are split into separate repos is the following: ideally we want to have the test cases being closely coupled to the current version of the code as config options change quite frequently. However, the mesh files are simply too big to have them in the main repo (it takes too much time to check them out etc.). So a compromise was to still leave the config files in the main repo in order for them to stay up-to-date. We thought that the information [here](https://github.com/su2code/SU2/wiki/Test-Cases) would be quite clear for the user on how to merge config and mesh files. Following this instructions should avoid having to search for the mesh files manually. Let us know if you think different. @economon could you add Jędrzej to the dev team here on github ? Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/485#issuecomment-355152833:47,config,config,47,https://su2code.github.io,https://github.com/su2code/SU2/pull/485#issuecomment-355152833,8,['config'],['config']
Modifiability,"@LaSerpe : thanks for the mesh!. @EduardoMolina : no huge rush on merging this one.. we should make sure everything is working ok. It would be very helpful if you can take a look at the Taylor-Green Vortex case again, like we looked at before, now that the parallelization is improved. The option to run is still there (TGV = YES), and I think you already have the meshes.. @pcarruscag : thanks for the comments (will address soon). Also, thanks for the reminder about the pre-accumulation. I disabled that since I had to rework the least squares routines for the periodic BC and I did not turn it back on. The variables may need to be adjusted now though",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/652#issuecomment-464599593:611,variab,variables,611,https://su2code.github.io,https://github.com/su2code/SU2/pull/652#issuecomment-464599593,1,['variab'],['variables']
Modifiability,"@MarcoFossati @monika1387 @economon I've been working with Adrien Loseille from INRIA to bring Vic's old fork (referenced above) up to date with develop. Check out [feature_adap](https://github.com/su2code/SU2/tree/feature_adap). It uses goal-oriented (adjoint-based) adaptation instead of feature-based (just based on Mach or pressure) that Vic's fork used. Some things to note:; 1. It's currently only tested on Euler (it uses a Hessian of the Euler fluxes so it might work for NS/RANS, but probably not) (@WallyMaier and I also extended it to TNE2 in [feature_amgtne2](https://github.com/su2code/SU2/tree/feature_amgtne2) but the source terms are giving us trouble on adapted meshes); 2. It requires AD support since it uses the discrete adjoint to weigh the Euler flux Hessians; 3. I did all my testing with the AMG executable since pyAMG doesn't have all the features I currently need, but I just updated the branch to use pyAMG. I just tested the new interface with an airfoil and it seems to be working, but there might still be some bugs. You'll want to run mesh_adaptation_amg.py with the following options:; **ADAP_SIZES:** list of mesh complexities for each adaptive level. This is correlated to mesh size, but picking good values requires some playing around; **ADAP_SUBITE:** number of adaptations performed at each adaptive level. If set to (2,3) for example, it will run 2 adaptive iterations to try to reach ADAP_SIZES[0], and 3 iterations to try to reach ADAP_SIZES[1]; **ADAP_EXT_ITER:** number of iterations used by SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_RESIDUAL_REDUCTION:** order of magnitude residual reduction for SU2_CFD and SU2_CFD_AD for each adaptive level; **ADAP_SENSOR:** currently only works for GOAL; **ADAP_HMAX:** maximum cell size (m); **ADAP_HMIN:** minimum cell size (m); **ADAP_HGRAD:** gradation coefficient (>1) used by AMG during mesh smoothing. A larger value corresponds to larger allowed gradient in mesh size. E.g. for the RAE2822 I used:;",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504675574:268,adapt,adaptation,268,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504675574,3,"['adapt', 'extend']","['adaptation', 'adapted', 'extended']"
Modifiability,@ScSteffen : you might try to revert the Jacobian fix factor to the previous value since you are using JST (and perhaps it is not converging with the new setting). Try adding this option to the config (the default is currently 4.0):. CENTRAL_JACOBIAN_FIX_FACTOR= 1.0,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/940#issuecomment-644868893:194,config,config,194,https://su2code.github.io,https://github.com/su2code/SU2/issues/940#issuecomment-644868893,1,['config'],['config']
Modifiability,"@TobiKattmann - I was just reading your slides on [multizone](https://su2foundation.org/wp-content/uploads/2020/06/Kattmann.pdf), when I noticed that you mention python scripts not working for multizone, and I guess that would include the mesh adaptation scripts... is this still the case? Thank you!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764800900:244,adapt,adaptation,244,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764800900,1,['adapt'],['adaptation']
Modifiability,@TobiKattmann Just test whether it works and gives the same results. The regression test should be added still with the old driver. I will adapt it accordingly.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/767#issuecomment-527185086:139,adapt,adapt,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/767#issuecomment-527185086,1,['adapt'],['adapt']
Modifiability,"@YairMO in the zip file you can find the .geo file to create the mesh via gmsh, the L3 mesh and the configs file used for simulations with SA.; [MeshAndConfig.zip](https://github.com/user-attachments/files/17174513/MeshAndConfig.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2329#issuecomment-2380638829:100,config,configs,100,https://su2code.github.io,https://github.com/su2code/SU2/pull/2329#issuecomment-2380638829,1,['config'],['configs']
Modifiability,"@Zcaic nope, I add '\\' before`'C:Program Files...` and the environment MSMPI_LIB64 finally like `\C:\Program Files (x86)\Microsoft SDKs\MPI\Lib\x64\`. I paste wrong error message before . the actual error message after I change the envirnment variable is ; from `xxx\\8.1.0\\libC:\\Program...` to `xxx\\8.1.0\\lib\\C:\\Program...` . just a more `\\`",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136:244,variab,variable,244,https://su2code.github.io,https://github.com/su2code/SU2/issues/1471#issuecomment-1191551136,1,['variab'],['variable']
Modifiability,"@aditya12398 It is exactly like @GomerOfDoom mentioned: if you use the `-Dcustom-mpi=true` flag, you must define the environment variables to point to the correct mpi implementation. For example if mpich is installed at `/mpich_x86-64-linux-gnu` the linker/cpp/c flags must be defined as follows (on ubuntu):; ```; export LD_FLAGS='-L/mpich-x86_64-linux-gnu/lib -lmpi -lxml2 -lbacktrace -lz -lpthread -lrt'; export CXX_FLAGS='-I/mpich-x86_64-linux-gnu/include'; export C_FLAGS='-I/mpich-x86_64-linux-gnu/include'; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-634851094:129,variab,variables,129,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-634851094,1,['variab'],['variables']
Modifiability,"@all, I agree that it might be a problem for bigger cases and that we have to think of some ways to reduce the memory requirements for the discrete adjoint. . One approach that I started already, is to template the linear solver in order to use double datatype also when running the differentiated version of the code. However, that was more involved than I thought, but still its on my agenda. The nice thing is that this also reduces the runtime a lot. . The next thing is, like @pcarruscag correctly pointed out, the use of preaccumulation. However, this also requires a more detailed analysis, since it can also lead to an increased memory footprint if not applied carefully. Currently, a lot of memory is used for the geometrical derivatives, i.e. the derivatives with respect to the mesh coordinates (this requires approx 1.5 times the memory needed for derivatives with respect to the conservative variables). But since these derivatives are only needed when writing the solution we could think of doing some recomputation as runtime is not that important. So you see we have some ideas and I am sure we can reduce the memory by approx 50% if we apply all of them. However, time is unfortunately limited at the moment, but I will definitely continue improving the adjoint solver. Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/594#issuecomment-427848887:905,variab,variables,905,https://su2code.github.io,https://github.com/su2code/SU2/issues/594#issuecomment-427848887,1,['variab'],['variables']
Modifiability,"@antares190 running some more tests, I'm not sure that the adapted grid is still on the surface any more, especially on the trailing edge. Or perhaps it is, but it has lost associativity with its neighbour? This also seems to be the case for the fuselage, where cells seem to be jumping to the opposite side of the aircraft. Did you experience this issue too?; ![interior_ite1](https://user-images.githubusercontent.com/16842258/105381127-053eaf80-5c52-11eb-8781-707c6438432c.png). Regarding separating zones, do you mean through SU2's multizone? In this case, did you apply the aircraft surface as a separate zone? Or a 'core' region around the aircraft? Thanks for your thoughts! Kind regards, Tim",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-764777223:59,adapt,adapted,59,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-764777223,1,['adapt'],['adapted']
Modifiability,"@bigfooted Has there ever been any discussion regarding implementation of a `START_TIME=` capability into the config file? After going through the code a bit, it looks like doing this would be a good starting point for implementing ability to adjust deltaT mid-runs, as in general the code presumes `TimeIter*deltaT` as being the current time. This would be problematic for unsteady restarts that have a varying timestep. Plus, this would allow one to, without using the Python wrapper, use a different timestep in the config file for an unsteady restart. It also may clear up some confusion to have an explicit option for this, as in #2071. It can maybe look something like:. % Start time for restarting unsteady simulations; % = -1 for default calculation (START_TIME=RESTART_ITER*TIME_STEP); START_TIME=-1. Then `CConfig::GetPhysicalTime` could be appropriately updated and used in-place of all locations in the code where a physical time is manually calculated.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956:110,config,config,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/2190#issuecomment-1870730956,4,['config'],['config']
Modifiability,@chamsolli ; I am trying to configure my own 3D Euler case for this mesh.; ![capture](https://user-images.githubusercontent.com/31462793/38834251-7f1740ca-418d-11e8-962c-8e778331955e.JPG),MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/523#issuecomment-381744025:28,config,configure,28,https://su2code.github.io,https://github.com/su2code/SU2/issues/523#issuecomment-381744025,1,['config'],['configure']
Modifiability,"@chesiv (and also @timjim333) I confirm that the output you described is the expected one. In the *.cfg file I also make sure to add CSV tabular output management, as well as ASCII outputs.; `TABULAR_FORMAT= CSV`; `OUTPUT_FILES= RESTART_ASCII`. The python script to run the case with mesh adaptation is :; `$ python3 SU2_RUN/mesh_adaptation_amg.py -f adap_ONERAM6.cfg -n 8`; The python script handles all the folder structure, initialization, mesh adaptation(s), sub iteration(s).; 1. At first it removes the contents of an `adap` folder.; 2. creates `adap\ini` and starts the initialization run (with the original mesh).; 3. creates `adap\ite0` and based on the solution of the initialization run adapts the mesh with the given goal. As @bmunguia explained, have a look at the end of `amg.out` if anything doesn't go as expected. . > The only actual information I get from amg.log is usually in the last line ; > `NbSensor 30518 msh->npobk 30518 NbrTyp 19 msh->npoin 52477`; > which just tells you how many points are in the old vs. new mesh, but you could just look at the .su2 files for that. 4. repeats the subite as specified by the user. ; 5. At the end of the run the final results will be copied to the parent directory, as well as an history_adap.csv file which will store the output of the final iteration of the initialization and each mesh adaptation. To answer @chesiv question, in the `adap\ite0` you will find an `adap.su2` file which is the adapted mesh. The configuration file is modified (so to get the new mesh and restart from the previous iterations solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-750490818:289,adapt,adaptation,289,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-750490818,6,"['adapt', 'config']","['adaptation', 'adapted', 'adapts', 'configuration']"
Modifiability,"@clarkpede @economon In my never ending shuffling-code-around I noticed that we do this:; ```; for (unsigned short iPeriodic = 1; iPeriodic <= config->GetnMarker_Periodic()/2; iPeriodic++) {; InitiatePeriodicComms(geometry, config, iPeriodic, PERIODIC_IMPLICIT);; CompletePeriodicComms(geometry, config, iPeriodic, PERIODIC_IMPLICIT);; }; ```; ... for implicit iterations but not for explicit ones, the purpose of that comm is to:. /*--- Communicate the solution from our master set of periodic; nodes (from the linear solver perspective) to the passive; periodic nodes on the matching face. This is done at the; end of the iteration to synchronize the solution after the; linear solve. ---*/. I imagine the residual is constructed in a way that is consistent for the 2 periodic points, but... The explicit iteration implementation is now in CFVMFlowSolverBase.hpp::Explicit_Iteration_impl",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/763#issuecomment-770241115:143,config,config,143,https://su2code.github.io,https://github.com/su2code/SU2/issues/763#issuecomment-770241115,3,['config'],['config']
Modifiability,"@clarkpede I have not used the mesh adaptation tools since my last post (I was simply learning to use them for an undergrad project). With that said, I do not have any other concerns. It worked well for my application. I appreciate your help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-500491744:36,adapt,adaptation,36,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-500491744,2,['adapt'],['adaptation']
Modifiability,@danielmayer @Cristopher-Morales @EvertBunschoten I will change to the custom objectives and custom outputs in the PR so config files might break if you use SURFACE_SCALAR_* as an output/objective,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1551309137:121,config,config,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1551309137,1,['config'],['config']
Modifiability,"@danielmayer @mheimgartner @bigfooted @EvertBunschoten please note that `CScalarSolver`, `CScalarVariable` and `scalar_sources/convection/diffusion` were renamed to (basically just extended by *Legacy) `CScalarLegacySolver`, `CScalarLegacyVariable` and `scalarLegacy_sources/convection/diffusion`. So all files that you are used to do now have the `Legacy` addition in their names as I introduced the same/similar files in #1330. The 'new' ones are really new in the sense that they form the general base for scalar transport and I will create a `CSpecies*` family of files to incorporate the species transport. So right now both concepts are present in the same branch but the Legacy will be subsequently removed/replaced by the new stuff. . In any case: merge with the upstream feature_flamelet on github regularly. Add Testcases so that these subsequent merges do not introduce any problems I am unable to see otherwise. And if you want to push a commit here please get in touch shortly with me first.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391:181,extend,extended,181,https://su2code.github.io,https://github.com/su2code/SU2/pull/1223#issuecomment-925781391,1,['extend'],['extended']
Modifiability,"@dean0927 : this is a very new feature, unfortunately, which is not quite released to the public yet and we do not yet have examples. However, you can take a look at the MMS cases at the following link and their configs to see how the options work. You will need to set KIND_VERIFICATION_SOLUTION= USER_DEFINED_SOLUTION, implement the solution/BC inside of the CUserDefinedSolution class, and then call BC_Custom() on the boundaries where you want it applied (MARKER_CUSTOM in the config)/. https://github.com/su2code/VandV/tree/master/mms/fvm_incomp_euler",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/690#issuecomment-505161925:212,config,configs,212,https://su2code.github.io,https://github.com/su2code/SU2/issues/690#issuecomment-505161925,2,['config'],"['config', 'configs']"
Modifiability,"@economon , when I compile this branch with all the debug flags I get the following warnings. ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::Set_MPI_Coord(CConfig*)’:; ../src/geometry_structure.cpp:15933:33: warning: variable ‘iPeriodic_Index’ set but not used [-Wunused-but-set-variable]; unsigned short iDim, iMarker, iPeriodic_Index, MarkerS, MarkerR;; ^~~~~~~~~~~~~~~; ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::Set_MPI_GridVel(CConfig*)’:; ../src/geometry_structure.cpp:16066:33: warning: variable ‘iPeriodic_Index’ set but not used [-Wunused-but-set-variable]; unsigned short iDim, iMarker, iPeriodic_Index, MarkerS, MarkerR;; ^~~~~~~~~~~~~~~; ../src/geometry_structure.cpp: In member function ‘virtual void CPhysicalGeometry::Set_MPI_OldCoord(CConfig*)’:; ../src/geometry_structure.cpp:16195:33: warning: variable ‘iPeriodic_Index’ set but not used [-Wunused-but-set-variable]; unsigned short iDim, iMarker, iPeriodic_Index, MarkerS, MarkerR;. Further inspection shows that iPeriodic_Index is used to retrieve the periodic transformations. However, these lines are commented. //angles = config->GetPeriodicRotation(iPeriodic_Index);; //translation = config->GetPeriodicTranslate(iPeriodic_Index);. Hence angles and translation get their default values of 0.0. Is this correct? These lines are not commented in develop. If it is correct, could you fix the compiler warning?. For the rest, I think this is a no-brainer and can be merged in quickly.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/699#issuecomment-498964784:253,variab,variable,253,https://su2code.github.io,https://github.com/su2code/SU2/pull/699#issuecomment-498964784,8,"['config', 'variab']","['config', 'variable']"
Modifiability,"@economon Dr. Alonso emailed me saying that ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."" That matches my experience with a few tests I ran.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492#issuecomment-355796132:59,adapt,adaptation,59,https://su2code.github.io,https://github.com/su2code/SU2/pull/492#issuecomment-355796132,2,['adapt'],['adaptation']
Modifiability,"@economon Hello Dr. Economon, thank you very much for the replying. 1. I tried using unix2dos to convert the file attached to the previous post, but the problem remains as picture shown (attached and highlighted) and these non-binary files cannot be read in SU2 when running restart simulation. Is it possible I did not configure it correctly during the installation? ; My configure command is: ""./configure --prefix=user-dir --enable-mpi --with-cc=mpicc --with-cxx=mpicxx"". 2. Thanks for the suggestion. And since I am using MATLAB to post-process the data and trying to import the binary restart data directly into MATLAB, could you please advise me the precision and other information of the binary restart file?. Again thank you very much for your helping with this issue.; Sincerely; ![picture1](https://user-images.githubusercontent.com/33880907/33277349-40eaa6d8-d366-11e7-970f-1ae712fb449b.jpg); ![picture2](https://user-images.githubusercontent.com/33880907/33277354-4374751e-d366-11e7-8f8e-4b6a81c5b78f.jpg)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-347244204:320,config,configure,320,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-347244204,3,['config'],['configure']
Modifiability,"@economon Hm ok, that is strange. The one that it builds is the newest on github (v1.9). On linux meson finds ninja if it is in the root directory of the source code (which should be there after bootstrapping), apparently that is not the case on mac. Can you check whether it works when you add the source dir in your path variable? Like @davetaflin also mentioned for windows, on mac you can also directly generated xcode files (by adding `--backend=xcode` to the meson call), then ninja is not required. But anyway, I will look for a solution to that problem. @davetaflin Thanks for your impressions. I would say the documentation is decent. The important things are there, which helped me setting it up. But I guess that we can also ask the developers if we have some problems when adding more complex dependencies (however, we then also should ask ourselves whether we really want to add them in this case). But is the conclusion that you'd also prefer meson over automake ? :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495117437:323,variab,variable,323,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495117437,1,['variab'],['variable']
Modifiability,"@economon I am able to compile the code with develop branch. However, it diverges no matter my cfl number or cfl config i tried. I changed rotational speed too. But even changing rotational speed to 1 rad/s does not lead to convergence. Thanks again for all recommendations posted",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-633149396:113,config,config,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633149396,1,['config'],['config']
Modifiability,"@economon I tested a couple of simpler problems at subsonic speeds, including the ONERA M6 case at M=0.8395. There's occasionally a difference of one iteration out of about 20. Usually the current develop branch is the one that requires more iterations, but not always. I included a snapshot from my tests on the ONERA M6 case at CFL=30. ![convergence_comparison](https://user-images.githubusercontent.com/13340225/48648855-6c97af80-e9b6-11e8-863a-56dfdf0903c8.png). I don't have a good supersonic, viscous test problem, but I suspect the differences in convergence won't be huge there either. This sign change affects a single term out of many and a single component of a 4x4 or 5x5 Jacobian. My take is that the differences are there, but they are very small. I wouldn't have noticed the problem myself if I hadn't been refactoring the code to enable some changes on our end.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439538677:822,refactor,refactoring,822,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439538677,2,['refactor'],['refactoring']
Modifiability,"@economon I was envisioning something similar to the TestCases folder. With v&v cases grouped according to what they are testing. Something along the lines of: . 1) Inviscid Simulations: ; a) 2D Inviscid bump; b) 2D oblique shocks interaction; c) ...; 2) RANS simulations: ; a) Flatplate; b) NACA0012; c) ...; 3) Unsteady simulations:; a) Square Cylinder; b) ...; 4) Turbomachinary: ; a) ... And so on. Each of the directories would have sub-directories for different mesh sizes, with configuration files for each mesh level that have optimized parameters for best results. So for example if we are talking about the NACA0012 case, we would have something along the lines of: . a) NACA0012; i) 113 x 33; ii) 225 x 65 ; iii) 449 x 129; iv) ... This way we have a family of meshes and configuration files that are specifically built for the purpose of validating the code and comparing with other solvers. I might be useful to compress meshes that are larger than a certain size (say 10MB). We should also put a limit on the size of a single mesh that the repository can handle (say 50MB?). . Within the home directory, the README file should list all the cases in the repository, who the custodian of the test case is (person with meshes in case the meshes are too large), and which version it was last run on. . I thought about splitting it up into Verification cases and Validation cases, but I thought it would be more informative and intuitive to split up according to the physics of the simulations. My thinking might be limited because that's how I have seen the TestCases folder organized, so any other suggestions are welcome. I think it is imperative that this is accompanied with a section on the SU2 website that showcases just the results of the validation test cases (grid convergence studies, residual reductions etc) and links to the v&v repo appropriately. This way, if people are just inquisitive about SU2's performance, they can get a quick snapshot of the results, without the need ",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-426026053:485,config,configuration,485,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-426026053,4,['config'],['configuration']
Modifiability,"@economon I'm documenting my thoughts on mocking here, partially in response to you but also for any collaborators. The biggest hurdle with mocking frameworks is that they usually require versatile abstract base classes and depedency inversion. SU2 is relatively good at that with solvers, variables, and numerics. But classes like CConfig are completely incompatible with mocking. CGeometry seems to be somewhere in the middle. Mocking can also be [overused](https://testing.googleblog.com/2013/05/testing-on-toilet-dont-overuse-mocks.html). I agree, mocking is a great tool, and has its legitimate uses. [Martin Fowler](https://www.martinfowler.com/articles/mocksArentStubs.html#TheDifferenceBetweenMocksAndStubs) recommends mocking in at least two use cases:; > One is if you're spending a lot of time debugging when tests fail because they aren't breaking cleanly and telling you where the problem is...The second area is if your objects don't contain enough behavior, mockist testing may encourage the development team to create more behavior rich objects. But I believe we can get pretty far just with what we have, and start including mocking as needed.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/850#issuecomment-621842313:290,variab,variables,290,https://su2code.github.io,https://github.com/su2code/SU2/pull/850#issuecomment-621842313,1,['variab'],['variables']
Modifiability,"@economon Is this multizone issue with .cgns files are resolved or still under progress? Because I am trying from last 1 week and having issues in running with. cgns file so just wondering is something wrong in code? ; Also as of now I am trying with FEM_LES (cgns) to FEM_LES (cgns) which didnt work, is it possible to run FEM_LES (cgns) with Unsteady RANS or NS (.su2) pair? It will work? My intent is to extend my LES simulation domain for far field analysis. Appreciate your advise!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/728#issuecomment-708041917:407,extend,extend,407,https://su2code.github.io,https://github.com/su2code/SU2/pull/728#issuecomment-708041917,1,['extend'],['extend']
Modifiability,"@economon The behavior without adaptive CFL is similar to its non-adaptive behavior. I cannot increase the CFL greater than a certain value and get convergence. For example, for the 2nd coarsest mesh (297 x 57 or 129) I cannot increase the CFL > 20. This is regardless of weather I use adaptive CFL or not. I cannot set the CFL higher than 20. . But this limit increases slightly for the finer meshes. For example, for the finest mesh I can push the CFL up to 30 (adaptive or otherwise). Basically cannot get high CFLs for the GG reconstruction. I should also mention that all these runs are without slope limiters to get the most accurate solutions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-554101997:31,adapt,adaptive,31,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-554101997,4,['adapt'],['adaptive']
Modifiability,"@economon for prototyping, the changes proposed in #753 allow a container to be added to CVariable as a public member and thus directly accessible everywhere (one can even allocate only in some derived constructors, with no risk of leaking memory). For release-quality code I think encapsulation is desirable, that being said I'm not above declaring the client solver a friend of the specific CVariable it uses (also with the changes introduced, there would be a way to access member variables directly without moving them to base CVariable).; I like encapsulation not because of OOP principles but because of `GetVelocity(iDim)` instead of `GetPrimitive(iDim+1)`. As for overhead I think it is 0 as long as methods are inline: [example](https://gcc.godbolt.org/z/QXoExF); But in all honesty I also chose to change the CVariable interface as little as possible to make my life easier.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-520226075:484,variab,variables,484,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-520226075,1,['variab'],['variables']
Modifiability,@economon should the options in config template be removed then?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/686#issuecomment-495058672:32,config,config,32,https://su2code.github.io,https://github.com/su2code/SU2/pull/686#issuecomment-495058672,1,['config'],['config']
Modifiability,"@economon, I expect to run into problems for grids containing around 250 million DOFs, depending a bit on how many variables you store in the restart file. We can definitely do this test with a dummy grid. As you added this to the RPSVV group, let's close this issue here.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/696#issuecomment-500965914:115,variab,variables,115,https://su2code.github.io,https://github.com/su2code/SU2/issues/696#issuecomment-500965914,1,['variab'],['variables']
Modifiability,"@economon, I think you forget one thing. The configure script requires aclocal. When a newer version of the autotools is used to create the configure script, it does not work (as far as I know) and you still need the bootstrap in order to get things to work. The solution to this would be to use a less recent version of autotools, but that is not what we want either, I guess.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-427430150:45,config,configure,45,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-427430150,2,['config'],['configure']
Modifiability,"@economon, from the config files in the V&V folder, it seems like you ran without adaptive CFL and without the unweighted LSQ. The main difference between the V&V runs and these ones is that I don't use any slope limiter. In the V&V cases the `SLOPE_LIMITER_TURB= VENKATAKRISHNAN` option was used. . There are some other differences: ; 1. I use adaptive CFL; 2. I use `REF_DIMENSIONALIZATION= FREESTREAM_PRESS_EQ_ONE`; 3. Linear solver settings are slightly different. For the V&V runs the following are used: ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-15; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 25; ```; For my runs, I used the settings you had suggested in #790 : ; ```; % Minimum error of the linear solver for implicit formulations; LINEAR_SOLVER_ERROR= 1E-10; %; % Max number of iterations of the linear solver for the implicit formulation; LINEAR_SOLVER_ITER= 10; ```; 4. For the SST runs, I did not specify these options that you used in the V&V case: ; ```; % Free-stream turbulence intensity for the SST model; < FREESTREAM_TURBULENCEINTENSITY = 0.00038729; < %; < % Free-strem turbulence to laminar viscosity ratio for the SST model; < FREESTREAM_TURB2LAMVISCRATIO = 0.009; ```; I have attached the config files I used. I am still working on confirming all the regression tests, everything seems to be reasonable thus far. . [flatplate_configs.zip](https://github.com/su2code/SU2/files/4336003/flatplate_configs.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/905#issuecomment-599337194:20,config,config,20,https://su2code.github.io,https://github.com/su2code/SU2/pull/905#issuecomment-599337194,4,"['adapt', 'config']","['adaptive', 'config']"
Modifiability,"@fertinaz the problem is that the pkg_config name for MPICH is not ""mpi"" which is what meson is configured to look for...; It is ""mpich"", please see my reply from 23 of May, it is very simple to edit the meson.build script to look for ""mpich"" instead of ""mpi"".; I have used this on numerous machines and the code works fine...; Whatever you do, please do not follow the advice to use 6.2.0, we have all worked extremely hard to make v7.x much faster, fix bugs, and add nice features... Unfortunately we cannot test every combination of compiler, operating system, and libraries.; I'm sure that somewhere, someone has fixed similar problems, sadly not all fixes make it back into the code. Other alternatives, some of which folks have suggested on this thread.; - Use ""custom-mpi"" mode, you will need to set some environment variables (CC=mpicc CXX=mpicxx etc. see above); - Use the legacy build system (i.e. follow the instructions for 6.2.0 but with the 7.0.7 code) be sure to add ""-DNDEBUG"" to the CXXFLAGS environment variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008:96,config,configured,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721322008,6,"['config', 'variab']","['configured', 'variable', 'variables']"
Modifiability,"@fpalacios : there were two main issues with the regressions. Both are time out problems if Travis waits for over 10 minutes without any console output. The first was that we need to flush the output for Python 3 for each regression test, otherwise there is too long between cases and sometimes it fails. The second is that sometimes it takes too long to download the test cases, so I have added the keywords 'travis_wait 90' in the call to the entire python script in .travis.yml in order to extend the 10 minute restriction to 90 min. We still need to reduce the time for the tests overall, but it seems to be stable for the time being.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/519#issuecomment-381217217:493,extend,extend,493,https://su2code.github.io,https://github.com/su2code/SU2/pull/519#issuecomment-381217217,1,['extend'],['extend']
Modifiability,"@fpalacios FYI this is included in https://github.com/su2code/SU2/pull/385. (I know you said you were going to add it, but I ended up needing to use that while checking over my code, and it turned out to be just a couple of lines). ; There was an option FIN_DIFF_STEP actually already in the configuration options, but just wasn't being used yet in the python code - I'm not sure who added that in, but thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-287273357:292,config,configuration,292,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-287273357,1,['config'],['configuration']
Modifiability,"@fpalacios, @economon - There's a comment in the config files that says that 'OBJECTIVE_FUNCTION' sets the objective function for the optimizer - however it seems that this option is only used with controlling the adjoint solver and output, and whatever the user specifies there will be overwritten by the optimizer. I put an alternative comment in the config_templates here; I can either revert that back or change the comment in all the config files (I have a script).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/385#issuecomment-296410309:49,config,config,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/385#issuecomment-296410309,2,['config'],['config']
Modifiability,"@hlkline . Thanks! That's what I was looking for -- I'd tried Google and was disheartened when this was the first response:; ![image](https://cloud.githubusercontent.com/assets/868479/8146370/07259a96-11fa-11e5-8611-06d02d487c73.png) . Which was a link to the official SU2 page stating: . > Instead of writing a detailed user manual, the approach has been taken to teach the various aspects of the SU2 code through a range of tutorials. I'd propose adding something to the effect of what you've said there. @ThomasHermann . Now I know where to start ;) I think we can both agree that reading someone else's code and trying to make a user manual from scratch is a bit unrealistic -- I'll see what I can do with the config file though!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183#issuecomment-111760318:714,config,config,714,https://su2code.github.io,https://github.com/su2code/SU2/issues/183#issuecomment-111760318,1,['config'],['config']
Modifiability,"@hlkline : it is true that we have been experimenting a lot to find the best formula, and no doubt we will continue to tweak things as we constantly evolve. But, one constant you can always trust is that the repo will be the home for important decisions on issues and PRs, so there is no need to worry about missing critical updates. . With slack and now rocket chat, we are looking to improve communication efficiency as people collaborate on particular developments in the code (say in pairs or small groups), or perhaps in the future, it can be opened to the public as a sort of support channel. This is to be seen as we gather some experience and feedback.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/645#issuecomment-464602965:149,evolve,evolve,149,https://su2code.github.io,https://github.com/su2code/SU2/issues/645#issuecomment-464602965,2,['evolve'],['evolve']
Modifiability,"@hlkline Thank you for your reply. We have been using SU2 for over 2 years and only recently we started looking at the code to understand some of the issues we were facing. To clarify I did not report it as a bug. I do understand that the flow variables obtained by Riemann invariants (line 10433) are set as the primitive variables for the boundary point. But when it came to the flux calculation I saw Jacobian_j and that triggered my question. I know that each scheme has a ComputeResidual routine but for this specific case what routine is being used? Is it the one in numerics_template.cpp? And I still do not understand why Jacobian_j should play a role in the flux calculation! I will be glad if you can kindly comment on it. Finally, can I now treat that this is a non-issue?. @fpalacios @oleburghardt @hlkline By the way don't you think Nu_c in line no 729 in numerics_direct_mean.cpp should be Nu_c = (1.0-Beta)*LamdaNeg? This was the other *probable* bug I was referring to within SU2 found in CUSP implementation. Regards; Suman",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314971522:244,variab,variables,244,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314971522,2,['variab'],['variables']
Modifiability,"@hlkline Thanks for the tip about CGNS and HDF5, I couldn't see anywhere that the CGNS library needed HDF5 with ZLIB support. Perhaps that is something the configure script should catch?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/219#issuecomment-164822706:156,config,configure,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/219#issuecomment-164822706,1,['config'],['configure']
Modifiability,"@jaspe55 : I have just cleaned up a couple of things and can confirm that your mesh file is there. However, we are missing the converged solution file (solution_flow.dat) and the target Cp file for inverse design. Similar to the process for the mesh, can you please upload the solution file to the TestCases repo and the target Cp file to the SU2 code repo (alongside the config file)? Once the files are present, we can update the regression values in the serial_regression_AD.py and parallel_regression_AD.py files, and this PR will be ready to merge.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-456240798:372,config,config,372,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-456240798,1,['config'],['config']
Modifiability,"@jaspe55 : I see that you have added the residual check for the python regression script, but I do not see the config file, target file, or mesh. The config file and target file should be placed in SU2/TestCases/disc_adj_euler/arina2k/ (according to your path in the regression script), and the mesh placed in the TestCases/disc_adj_euler/arina2k/ directory in the TestCases repository here (develop): https://github.com/su2code/TestCases/tree/develop. Don't forget to 'git add' the files to make sure they are included on push. We can help diagnose any segfaults with the files.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/600#issuecomment-447209397:111,config,config,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/600#issuecomment-447209397,2,['config'],['config']
Modifiability,@javsu : can you try the change in the develop branch directly? It was working for me there with the config in the test cases repo (other than changing EXT_ITER -> ITER). You can also be more aggressive with the CFL in that config.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-633126402:101,config,config,101,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633126402,2,['config'],['config']
Modifiability,@javsu : please try the branch fix_gridvel where I have aded the change and updated the config file for that case. Shouldn't require any modifications (it converges ~10 orders in a little over 1k iters for me).,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-633305481:88,config,config,88,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-633305481,1,['config'],['config']
Modifiability,"@jayantmukho :; I think this is a very important addition. A typical optimization case (at least in the industry) deals with very different setups (say aircraft at cruise, take-off, and landing: different flight regimes and different configurations). That way it makes sense to allow also for different mesh files, each for every point.; Nimrod Cohen who works with me has been working on that line. I don't know how far he has gone.; I shall have him posted to this PR, he might be able to contribute.; Best,; Eran",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-525685943:234,config,configurations,234,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-525685943,1,['config'],['configurations']
Modifiability,"@jayantmukho If the upload size limit on Github is an issue, and I suspect it likely will be for these large 3D meshes, we can follow the BANC model -- the researchers who conducted the corresponding V&V cases are named custodians of these test case with explicit understanding that data will be shared upon request. This way, the data resides with a particular SU2 dev group or groups and need not be uploaded. However, I think the config files and all other info necessary for other users to replicate the test cases must be uploaded. Best,; Beckett",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423295060:433,config,config,433,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423295060,1,['config'],['config']
Modifiability,@jayantmukho Thanks for dealing with the python calls ... I think as soon as you deal with the two unused variables everything should be fine and we can merge that in!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/781#issuecomment-533469803:106,variab,variables,106,https://su2code.github.io,https://github.com/su2code/SU2/pull/781#issuecomment-533469803,1,['variab'],['variables']
Modifiability,"@jayantmukho Thanks for taking the lead on that. This is long overdue ... I already talked to some people about that and the conclusion was often that we should get rid of the current python framework and rely solely on the in-memory python wrapper functionalities. From what I can tell this is also what you would suggest. I have some additional things to add here:. - We should keep in mind other things than ""just"" shape optimization problems.; - The surface parameterization should be more or less independent of all the other things, so that we can easily integrate other tools/methods. In a first step it might be a good idea to just put all the FFD stuff into a separate (c++) library with a python interface.; - As you already mentioned, I am currently working on a more general way of defining output fields and in particular also objective functions in #913. I will add more information to this PR soon. The new python implementation should, in theory, not need to know about the specific objective function, but rather just asks for the value and the (surface) gradient. ; - We have to expose more c++ classes/functions to python. Especially the config and the geometry. . Maybe I will add more stuff/ideas, but thats it for now. @clarkpede : We will probably keep most of the postprocessing stuff in c++, so don't worry about that at the moment.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607708376:462,parameteriz,parameterization,462,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607708376,2,"['config', 'parameteriz']","['config', 'parameterization']"
Modifiability,"@jayantmukho The fix in PR in #921 is done. Whereas the shape optimization restart did not work before, it does work now, at least on the two test cases I checked. The only thing missing is a regression test, to make sure bugs like that don't happen again. So I agree that it should be merged soon while the long-term refactoring occurs. As for post-processing, the objective function calculation can be quite complex in the use-cases Beckett and I have encountered. That's why it's run as a post-processing step, rather than updated continuously during runtime. But I agree that those types of changes can be limited to the C++ side of the code, with minimal changes to the python wrappers. So it may not be relevant to the current refactoring.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/923#issuecomment-607975492:318,refactor,refactoring,318,https://su2code.github.io,https://github.com/su2code/SU2/pull/923#issuecomment-607975492,2,['refactor'],['refactoring']
Modifiability,@jayantmukho Uh no I didn't have pkg-config before. Problem solved after I install it. Thank you so much!,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/903#issuecomment-595963233:37,config,config,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/903#issuecomment-595963233,1,['config'],['config']
Modifiability,"@lucaabergo Currently I only see the config options in the PR, I guess the source code of implementation is coming later? Or are you planning to interact with an external code?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1959#issuecomment-1480865617:37,config,config,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1959#issuecomment-1480865617,1,['config'],['config']
Modifiability,"@marcovanderbijl : thanks for the question. The original limit there is simply to impose an upper bound for memory considerations, since the first instantiation of the array of FFD boxes (before the number of FFD boxes embedded in the mesh is detected) needs a default value. We can of course change this to automatically detect the number to avoid the requirement or make it an input option in the config, but we have not run into this issue yet. For now, you should be able to increase that to a reasonable number without any issue. Please give it a try.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/684#issuecomment-495078497:399,config,config,399,https://su2code.github.io,https://github.com/su2code/SU2/issues/684#issuecomment-495078497,2,['config'],['config']
Modifiability,"@mheimgartner first of all congrats to this openend PR. For the builds in the tests, compiler warnings are treated like errors. I.e. the code compiles and works on your side but the test-builds won't if certain warnings are present (like unused variables). ; For more information where to look, see the `Details` button next to the individual builds. Click and wait a moment ... that will automatically scroll down for you. ; The failing builds will be for the same code bits probably, so looking at BaseNoMPI for the start should suffice. To look in the `Details` and change code from there might be tedious so you can see the warnings locally by setting `./meson.py <your build folder> ... --warnlevel=3 ...`. Work through the warnings until there are none left -> commit the changes and push. That will probably calm the compiler-warnings-are-errors gods and grant you access to the regression test",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022:245,variab,variables,245,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-885546022,1,['variab'],['variables']
Modifiability,"@mheimgartner it would be helpful to compare the full residual history of the two regression Testcases before and after this last commit. (you prob already have the ""old"" histories and just have to do 2 new ones, you know best how the case beahaves etc). The commit I added will fail the regression test but I strongly believe the Pseudo-time update, convective and viscous Jacobians were wrong. . A reason this went unnoticed might be because the densities were O(1), so disregarding them in the solution update after the Linear Solver acts some kind of Relaxation Factor (which can be larger 1 depending whether density < or > 1). And I guess that could be fixed via CFL or this CFLReductionFactor anyway.; The Jacobians were taking with respect to Y alone, which is not correct. They have to be taken with respect with rho*Y, the transported variable imo. The conv Jacobian is arguably the most important one (and tested alone showed the biggest lift in residual improvement). ; I briefly checked the BC's and DualTimeRes for this Jacobian problem. For the BC's I found no hand-derived Jacobians and DualTimeRes seems ok (but is not used afaik).; Note that if one got a case to convergence(=> Res ~=0) the Jacobians and pseudo time derivative do not matter of course at that point. So comparing fully converged solution should show only marginal/no differences. A little test showed mild benefits after 10 iter with the C6_vel_inl (but only 5 LinSolIter ... aint nobody got time for 50). old; Iter| rms p ....... | rms u ....... | rms v ......... | rms scalar; 10| -5.707858| -4.397627| -4.445825| -5.408779|; new; 10| -5.701236| -4.405045| -4.460350| -5.473466|",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447:845,variab,variable,845,https://su2code.github.io,https://github.com/su2code/SU2/pull/1332#issuecomment-906774447,1,['variab'],['variable']
Modifiability,"@monika1387 I suggest you to switch to the INRIA pyAMG to do your mesh adaptation (https://pyamg.saclay.inria.fr). There are a couple of elements you need to keep in mind to use it: 1) at present, it seems to work with a specific branch of SU2 (see the link in the pyAMG website), 2) while working on it with INRIA people we found an issue with a file named ""amg.py"" which resides in the SU2_PY/SU2/run folder. I suggest you to replace that with the one attached here.; Please let me know if this works out for you. #!/usr/bin/env python. ## \file adjoint.py; # \brief python package for running mesh adaptation using the AMG Inria library; # \author Victorien Menier; # \version 6.0.0 ""Falcon""; #; # The current SU2 release has been coordinated by the; # SU2 International Developers Society <www.su2devsociety.org>; # with selected contributions from the open-source community.; #; # The main research teams contributing to the current release are:; # - Prof. Juan J. Alonso's group at Stanford University.; # - Prof. Piero Colonna's group at Delft University of Technology.; # - Prof. Nicolas R. Gauger's group at Kaiserslautern University of Technology.; # - Prof. Alberto Guardone's group at Polytechnic University of Milan.; # - Prof. Rafael Palacios' group at Imperial College London.; # - Prof. Vincent Terrapon's group at the University of Liege.; # - Prof. Edwin van der Weide's group at the University of Twente.; # - Lab. of New Concepts in Aeronautics at Tech. Institute of Aeronautics.; #; # Copyright 2012-2018, Francisco D. Palacios, Thomas D. Economon,; # Tim Albring, and the SU2 contributors.; #; # SU2 is free software; you can redistribute it and/or; # modify it under the terms of the GNU Lesser General Public; # License as published by the Free Software Foundation; either; # version 2.1 of the License, or (at your option) any later version.; #; # SU2 is distributed in the hope that it will be useful,; # but WITHOUT ANY WARRANTY; without even the implied warranty of; # MERC",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-504636643:71,adapt,adaptation,71,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-504636643,2,['adapt'],['adaptation']
Modifiability,"@monika1387 There are numerous bugs and difficulties with SU2's in-house mesh adaptivity. Without knowing more specifics about your problem (e.g. seeing your *.cfg file), it's hard to know what the problem is. For example, you should probably *not* be using the `SUPERSONIC_SHOCK` mesh adaptivity option. It seems to be ad-hoc and not generalized to arbitrary shock positions. If you want help with SU2's in-house mesh adaptation, could you post your *.cfg file?. Based on comments by @bmunguia and @MarcoFossati, it seems like you've got a bit of an [X/Y problem](https://meta.stackexchange.com/questions/66377/what-is-the-xy-problem). You could try to fix the problems with SU2's in-house mesh adaptivity. But the bigger question is ""What's the best way to do mesh adaptation in SU2?"" For that, INRIA's AMG library may be the best solution.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-505438349:78,adapt,adaptivity,78,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-505438349,5,['adapt'],"['adaptation', 'adaptivity']"
Modifiability,"@oleburghardt I figured why `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution)` was being executed, but as the FSI problem is multi-zone adjoint, it is required that `config->GetMultizone_Problem() = true` even when we are not using the driver `CDiscAdjMultizoneDriver`. . There is, of course, the possibility to set a specific boolean for these test cases in particular, but I think that would over-complicate the code. Else, it should be possible to extend the index based to the rest of the features required (geometry and structural solvers), which would be my preferred option.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542204060:194,config,config,194,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542204060,2,"['config', 'extend']","['config', 'extend']"
Modifiability,"@patelha57, I want to express my gratitude for your contribution. Your efforts are truly appreciated. However, I wanted to share some of my observations regarding the implementation, with all due respect. In my humble opinion (IMHO), there seem to be a few flaws in the current implementation, particularly when it comes to setting the Mach number and Reynolds number. It appears that SU2 offers different fluid models, and in order to access the speed of sound for the far field, the following line of code may be more appropriate:. ```cpp; Mach2Vel_FreeStream = auxFluidModel->GetSoundSpeed();; ```. rather than using:. ```cpp; su2double SoundSpeed = sqrt(Gamma * Gas_Constant * Temperature);; ```. Perhaps these concerns can be addressed in the review of your PR. Similarly, I noticed that changing the Reynolds number doesn't seem to have any effect. It should modify certain variables, which are likely addressed in this section of the code: [link to the relevant code](https://github.com/su2code/SU2/blob/c435309e2a4ffd992b89c5b3bb252cb4af9fa990/SU2_CFD/src/solvers/CEulerSolver.cpp#L909-L928). Additionally, it would be helpful to include a check to warn the user if the initialization is based on thermodynamic quantities. Once again, I want to express my deep appreciation for your contributions.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2045#issuecomment-1579449075:880,variab,variables,880,https://su2code.github.io,https://github.com/su2code/SU2/pull/2045#issuecomment-1579449075,1,['variab'],['variables']
Modifiability,@pcarruscag . Fell free to check and merge. I will refactor screen outputs later in the logging implementation,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1988#issuecomment-1491542559:51,refactor,refactor,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/1988#issuecomment-1491542559,1,['refactor'],['refactor']
Modifiability,"@pcarruscag . a) I have done that. I get the same error.; b) Linux is the OS; c) The output of mpirun --version is; HYDRA build details:; Version: 3.2.1; Release Date: Fri Nov 10 20:21:01 CST 2017; CC: gcc ; CXX: g++ ; F77: gfortran ; F90: gfortran ; Configure options: '--disable-option-checking' '--prefix=/app/mpich-3.2.1' '--cache-file=/dev/null' '--srcdir=.' 'CC=gcc' 'CFLAGS= -O2' 'LDFLAGS=' 'LIBS=-lpthread ' 'CPPFLAGS= -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/mpl/include -I/app/setups/mpich-3.2.1/src/openpa/src -I/app/setups/mpich-3.2.1/src/openpa/src -D_REENTRANT -I/app/setups/mpich-3.2.1/src/mpi/romio/include' 'MPLLIBNAME=mpl'; Process Manager: pmi; Launchers available: ssh rsh fork slurm ll lsf sge manual persist; Topology libraries available: hwloc; Resource management kernels available: user slurm ll lsf sge pbs cobalt; Checkpointing libraries available: ; Demux engines available: poll select. The output of mpicxx --version is. g++ (GCC) 5.5.0; Copyright (C) 2015 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. d) The configuration of meson:. ./meson.py build -Denable-autodiff=true -Denable-directdiff=true -Denable-tecio=false -Dwith-mpi=disabled -Denable-cgns=false --prefix=/home/vksuman/SU2_7_0_3_gcc5_5_0_mpich3_2_1; ninja executable not found. Building ...; bootstrapping ninja...; warning: A compatible version of re2c (>= 0.11.3) was not found; changes to src/*.in.cc will not affect your build.; wrote build.ninja.; bootstrap complete. rebuilding...; [29/29] LINK ninja; The Meson build system; Version: 0.52.999; Source dir: /home/vksuman/SU2-7.0.3; Build dir: /home/vksuman/SU2-7.0.3/build; Build type: native build; Project name: SU2; Project version: 7.0.3 ""Blackbird""; C compiler for the host machine: gcc (gcc 5.5.0 ""gcc (GCC) 5.5.0""); C linker for the host machine: GNU ld.bfd 2.20.51.0.2-5; C+",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-620552610:251,Config,Configure,251,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-620552610,1,['Config'],['Configure']
Modifiability,"@pcarruscag ; Hello, I solved the question with adding some code to ```CSurfaceMovement.cpp```.; The following is my specific added code:; ```; ...; 557: else if ((config->GetDesign_Variable(0) == ROTATION) || (config->GetDesign_Variable(0) == TRANSLATION) ||; 558: (config->GetDesign_Variable(0) == SCALE) || (config->GetDesign_Variable(0) == HICKS_HENNE) ||; 559: (config->GetDesign_Variable(0) == SURFACE_BUMP) || (config->GetDesign_Variable(0) == ANGLE_OF_ATTACK) ||; 560: (config->GetDesign_Variable(0) == CST)) {; 561: /*--- Apply rotation, displacement and stretching design variables (this; 562: should be done before the bump function design variables) ---*/; 563: ; 564: for (iDV = 0; iDV < config->GetnDV(); iDV++) {; 565: switch (config->GetDesign_Variable(iDV)) {; 566: case SCALE:; 567: SetScale(geometry, config, iDV, false);; 568: break;; 569: case TRANSLATION:; 570: SetTranslation(geometry, config, iDV, false);; 571: break;; 572: case ROTATION:; 573: SetRotation(geometry, config, iDV, false);; 574: break;; 575: }; 576: }; 577: ; 578: /*--- Apply the design variables to the control point position ---*/; 579: ; 580: for (iDV = 0; iDV < config->GetnDV(); iDV++) {; 581: switch (config->GetDesign_Variable(iDV)) {; 582: case HICKS_HENNE:; 583: SetHicksHenne(geometry, config, iDV, false);; 584: break;; 585: }; 586: }; 587: ; 588: /*--- Apply the design variables to the control point position ---*/; 589: ; 590: for (iDV = 0; iDV < config->GetnDV(); iDV++) {; 591: switch (config->GetDesign_Variable(iDV)) {; 592: case CST:; 593: SetCST(geometry, config, iDV, false);; 594: break;; 595: }; 596: }; ...; ```. I add ; ```; (config->GetDesign_Variable(0) == CST)) ; ``` ; in line 560 and add ; ```; for (iDV = 0; iDV < config->GetnDV(); iDV++) {; switch (config->GetDesign_Variable(iDV)) {; case CST:; SetCST(geometry, config, iDV, false);; break;; }; }; ```; in line 590~596. Then I recompiled it and run ```SU2_DEF naca0012.cfg``` , it worked as expected. But I'm not sure if the ad",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2123#issuecomment-1703314305:164,config,config,164,https://su2code.github.io,https://github.com/su2code/SU2/issues/2123#issuecomment-1703314305,22,"['config', 'variab']","['config', 'variables']"
Modifiability,"@pcarruscag ; [config-and-makefile-for-scotch-and-pastix.zip](https://github.com/su2code/SU2/files/6959270/config-and-makefile-for-scotch-and-pastix.zip). So very good news, I compiled successfully on Fedora 34 using GCC-11.2 and OpenMPI-4.1.1 using Scotch-6.0.6 and Pastix-5.2.3. I have attached the relevant config and make-file with my relevant edits for reference. Newer openmpi works if you are willing to edit the CCFLAGS pointing to their bin, lib and include file. Currently had no issues running test cases such as fea and aeroelastic. However I don't know which one specifically uses pastix so i can test that but if you do know, let me know. I disabled forward mode ad during meson config so I didn't run into the error. I also enabled shared libraries for both scotch and pastix. . Looking forward to your response =)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919:15,config,config-and-makefile-for-scotch-and-pastix,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1349#issuecomment-895748919,4,['config'],"['config', 'config-and-makefile-for-scotch-and-pastix']"
Modifiability,"@pcarruscag @WallyMaier ; I think I've adressed most of what you spotted in the latest commits. Thanks for taking so much care - you already helped me a lot getting everything ready to enter the main version, especially concerning the just-for-development adaptions that I had forgotten about. @TobiKattmann ; I sneaked in another commit for primal CHT that _might_ help with your issue. I'm still running tests that might confirm my guesswork. (Though you can already try it by setting `CHT_ROBIN= NO` which will then just directly apply heat fluxes.) I'm coming back to this once I'm sure about it.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/774#issuecomment-538411667:256,adapt,adaptions,256,https://su2code.github.io,https://github.com/su2code/SU2/pull/774#issuecomment-538411667,1,['adapt'],['adaptions']
Modifiability,@pcarruscag For me its fine if you do it in a separate PR. @economon I also assume that is has something to do with how the interfaces are handled. We definitely have to check it. For now in PR #715 I enabled grid movement (in the config) also in fixed zones.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/700#issuecomment-505477458:231,config,config,231,https://su2code.github.io,https://github.com/su2code/SU2/pull/700#issuecomment-505477458,1,['config'],['config']
Modifiability,"@pcarruscag For the 2D flamelet approach, the first 2 transported scalars are always ""progress variable"" and ""total enthalpy"". If I want to use ""ProgressVariable"" and TotalEnthalpy"" as names in custom outputs/objectives, I have to add these to CPrimitiveIndices.hpp?. In the config file, a user can optionally define additional transported species, and we also give them names like ""Y_CO"",""X_NOx"". Can we use these names from the config file in the same way?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1917#issuecomment-1514329442:95,variab,variable,95,https://su2code.github.io,https://github.com/su2code/SU2/pull/1917#issuecomment-1514329442,3,"['config', 'variab']","['config', 'variable']"
Modifiability,"@pcarruscag Hi Pedro, sorry to bother you again, I read the ""develop"" branch and noticed that you made some changes a month ago, such as redefined InletPtotal instead of the previous Inlet_Ptotal, I guess is to disambiguate some definition? And the error I got probably related with it. In this case, I think I should better also use the ""develop"" version. Is the building process same as here? https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2327#issuecomment-2241513266:452,config,configuration-and-compilation,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/2327#issuecomment-2241513266,1,['config'],['configuration-and-compilation']
Modifiability,"@pcarruscag I tried to restart the solution with zero mach number for config. However, for some reason, convergence takes so much longer than simply solving mach=0.1 config. Indeed, i started my simulation when you post your suggestion and it still haven't converged yet. Residual getting smaller but it is so slow. Therefore it might not be an efficient solution. Thanks for advice anyway.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632892959:70,config,config,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632892959,4,['config'],['config']
Modifiability,"@pcarruscag It crashes when it get to writing the output files. Where can I try VOLUME_OUTPUT, in config file?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2103#issuecomment-1679163134:98,config,config,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/2103#issuecomment-1679163134,1,['config'],['config']
Modifiability,"@pcarruscag PTAL what would be the best way to handle variable declarations with the switch statement? Either they all need to be pre-declared at the top of the function, or I can declare them inline and restrict the scope, but then the residual computation needs to take place in each case. Which of these ways would be preferred?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1882#issuecomment-1399842680:54,variab,variable,54,https://su2code.github.io,https://github.com/su2code/SU2/pull/1882#issuecomment-1399842680,1,['variab'],['variable']
Modifiability,@pcarruscag Thanks for approving the pull request. Your advice has been immensely important for me to complete this. I hope this is merged timely to avoid any further changes with the develop branch. I will update the config template and add a test case to the repo soon.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815#issuecomment-589673332:218,config,config,218,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-589673332,1,['config'],['config']
Modifiability,"@pcarruscag Thanks. I already incorporated your comments!. I extended the expressions to the volume output fields. Similar to the `SCREEN_OUTPUT` you can now define custom volume field variables directly in the `VOLUME_OUTPUT` option, e.g,. `VOLUME_OUTPUT= COORDINATES, SOLUTION, {MOMENTUM_X/DENSITY}`. This required to remove all `-` in the field names for obvious reasons. Note that at the moment it is required that all fields used in the expression are also added manually to the output. I will probably make that automatic soon.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-602785986:61,extend,extended,61,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-602785986,2,"['extend', 'variab']","['extended', 'variables']"
Modifiability,"@pcarruscag This works for me. Do you think this is OK or we need to do it different/more, maybe a config keyword to activate/deactivate, or other options?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2110#issuecomment-1704811794:99,config,config,99,https://su2code.github.io,https://github.com/su2code/SU2/pull/2110#issuecomment-1704811794,1,['config'],['config']
Modifiability,"@pcarruscag Unfortunately, i tried to use ITER=99999 and it still gives zero result for every variable.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/997#issuecomment-632647020:94,variab,variable,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/997#issuecomment-632647020,1,['variab'],['variable']
Modifiability,"@pcarruscag When you say that you rescaled all the variables, what do you mean? Using the built-in tuning parameters? Or in the python scripts? And for the deformations (which must have physical values when applied by SU2_DEF), how did you rescale those?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/733#issuecomment-616833563:51,variab,variables,51,https://su2code.github.io,https://github.com/su2code/SU2/issues/733#issuecomment-616833563,1,['variab'],['variables']
Modifiability,"@pcarruscag Yes, completely forgot about this. I can probably bring the functionality back in without using or waiting for #774 to make the regression test pass. I'll talk to @rsanfer next week to split the config files into the new multi-zone format.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/724#issuecomment-538361577:207,config,config,207,https://su2code.github.io,https://github.com/su2code/SU2/pull/724#issuecomment-538361577,1,['config'],['config']
Modifiability,"@pcarruscag Yes, we would have a group (or matrix, I guess) of CConfigs. We don't have to follow a rigorous ""one-config-per-class"" definition; we could make a lot of headway just by splitting things up very roughly. If I understand, you're thinking we would have to have a base class with lots of virtual functions, and then derived classes with specific implementations. I don't think that would be necessary. First off, that wouldn't solve any problems, since the base class would have to have virtual placeholders for all the config classes. Second, the respective solver classes know what calls they need to make. So they can just have a specific derived class as a parameter (e.g. `CIncSolverConfig`). They don't need an abstract base class because we expect the incompressible settings to incompressible settings, and we won't ever switch it out for any other type of settings. The derived classes (e.g. `CIncSolverConfig`) could implement their own config getters/setters, without having any matching virtual functions in the base Config class. That should allow us to keep our inlines and avoid dynamic dispatches. There may be other flaws with my thinking that i'm not seeing. I just wanted to put my idea out there so we can make more informed decisions. I can also move this discussion to a separate issue, if we want to flesh out this discussion more.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/583#issuecomment-501240303:113,config,config-per-class,113,https://su2code.github.io,https://github.com/su2code/SU2/issues/583#issuecomment-501240303,4,"['Config', 'config']","['Config', 'config', 'config-per-class']"
Modifiability,"@pcarruscag sorry for being picky :D but I would like to have the double changed to passivedouble. In case someone needs a float we can name it passivefloat. Sometimes I use automated scripts to check for occurences of double variables, so we should use passivedouble whenever we can to avoid future confusions on whether the use of double is intentionally or not.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/555#issuecomment-426698341:226,variab,variables,226,https://su2code.github.io,https://github.com/su2code/SU2/pull/555#issuecomment-426698341,1,['variab'],['variables']
Modifiability,"@pcarruscag thank you for your answer.; We have tried running the 3D case using periodic boundary conditions.; The results are here reported:. ![roe_jst_addenda](https://user-images.githubusercontent.com/53580993/117795264-4df49580-b24e-11eb-9aa0-d0f525bc9075.png). Using the ROE scheme there is no problem.; Using the JST scheme the result is better now, but there is still a difference of ~2 counts for the drag coefficient. The configuration files and the grids are attached here:; [Addenda_ROEvsJST.zip](https://github.com/su2code/SU2/files/6458287/Addenda_ROEvsJST.zip)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1280#issuecomment-838761364:431,config,configuration,431,https://su2code.github.io,https://github.com/su2code/SU2/issues/1280#issuecomment-838761364,1,['config'],['configuration']
Modifiability,"@pcarruscag yes all the modification are in external. It is just that the LGTM C++ if failing because it is too old and can't cope with cmake syntax. Since I mainly copy pasted the source of hdf5 without modification, I don't really want to modify them for maintainability.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1500#issuecomment-1016692673:257,maintainab,maintainability,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/1500#issuecomment-1016692673,1,['maintainab'],['maintainability']
Modifiability,"@pcarruscag, @clarkpede , actually, I have used a anaconda environment. But `python ./meson.py build` do not find my anaconda environment. . As the [recommanded](https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/):. ![image](https://user-images.githubusercontent.com/29271051/159851833-8d3127ea-12f1-4ad5-ac07-60795b2bf62e.png). I have also set the environment variable:. ![image](https://user-images.githubusercontent.com/29271051/159852345-c0f93a83-70be-4934-a11a-42a0788ba22b.png). But it still do not work. Can I provide the location of python.exe?. Or how can I setup a anaconda environment to build su2?. After `conda activete SU2`, it still find another python environment:. ![image](https://user-images.githubusercontent.com/29271051/159874390-3d55a29f-c0d9-4016-8526-7a3bd4142763.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1575#issuecomment-1077026166:367,variab,variable,367,https://su2code.github.io,https://github.com/su2code/SU2/issues/1575#issuecomment-1077026166,1,['variab'],['variable']
Modifiability,"@pcarruscag, I have not built the MKL executable with meson yet. What I typically did when using configure is to use environment variables for the compiler and linker flags.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-526036812:97,config,configure,97,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-526036812,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"@pcarruscag, Nice.....; I saw the results and cross checked with reference results, they seems to be matching. I also observed that you have changed the mesh (adapted+boundary layer continuation for top wall). ; Seems like mesh was the culprit earlier?? (though inlet still seems to have minor issue but doesn't matter); Also see the attached experiment data file (in case you want to use)...; [Schulein_2004_expt.dat.gz](https://github.com/su2code/SU2/files/8799043/Schulein_2004_expt.dat.gz). Regards; Amit",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1651#issuecomment-1141217827:159,adapt,adapted,159,https://su2code.github.io,https://github.com/su2code/SU2/pull/1651#issuecomment-1141217827,1,['adapt'],['adapted']
Modifiability,"@pcarruscag, my icpc version is 19.0.0.117 20180804....; The speed up is most likely also processor dependent. I ran this case on a Xeon(R) Gold 6140 CPU @ 2.30GHz with 24 Mb cache. Anyway, this is probably as fast as you can get the code to run with the current data structures. Maybe you can squeeze another 10 percent out of it, but that's most likely it. If we really want to speed things up, we need to change the data structures significantly (structure of arrays, a single array per variable, aligned memory allocation, padding arrays to a multiple of 8, no small loops over the number of dimensions, etc.) . As said before, I think we can get at least a factor of 4 in speed compared to the current version if we can use a significant number of SIMD loops, i.e. vectorization. However, I don't know how much support there is for a pretty much complete rewrite of the computational kernel. My two cents,. Edwin",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/716#issuecomment-524038333:490,variab,variable,490,https://su2code.github.io,https://github.com/su2code/SU2/issues/716#issuecomment-524038333,2,"['rewrite', 'variab']","['rewrite', 'variable']"
Modifiability,"@petebachant: the paper that I linked earlier on this thread had some fairly simple examples similar to the one you propose.. different flat plates and so on with varying y^+. You can likely reuse the grid(s) in the TestCases repo. @vdweide: it was very simple in this first implementation. It checks for a single boolean for whether or not to apply wall functions (WALL_FUNCTIONS= YES or NO, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L15339), and then assumes they should be applied to all no-slip walls (heat flux or isothermal, https://github.com/su2code/SU2/blob/43b8a4015c4b09b01d78e4243d32011c663c2b70/SU2_CFD/src/solver_direct_mean.cpp#L16653). This could of course be made more specific for individual markers using a config structure like MARKER_MONITORING to list them, or by making a dedicated BC type for it potentially.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/399#issuecomment-327308587:796,config,config,796,https://su2code.github.io,https://github.com/su2code/SU2/issues/399#issuecomment-327308587,2,['config'],['config']
Modifiability,"@rsanfer I've only done it through the environment variables like Edwin suggests, and that is how I documented it. That way the libraries can be anywhere which is handy when you can't ""install"" them in the machine you want to run on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423933257:51,variab,variables,51,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423933257,1,['variab'],['variables']
Modifiability,"@rsanfer You shouldn't get in touch with the new AD routines at all unless you're using `CDiscAdjMultizoneDriver`.; So in case `direct_solver->GetNodes()->GetAdjointSolution_intIndexBased(iPoint,Solution)` gets executed, that likely means that the if-statement above, `config->GetMultizone_Problem()`, evaluates to true.; Some weeks ago I added another boolean (`CConfig::GetMultiphysicsDiscrete_Adjoint()`) but I was asked to revert that to the line above.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/803#issuecomment-542170904:269,config,config,269,https://su2code.github.io,https://github.com/su2code/SU2/pull/803#issuecomment-542170904,1,['config'],['config']
Modifiability,"@rsanfer, you can always specify the lapack libraries by setting the environment variables LDFLAGS and LIBS. This is what I do and it gives you more control than specifying it in configure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423923605:81,variab,variables,81,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423923605,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"@talbring : great progress! As previously discussed, I think this goes in the correct direction.. I would love to see completely customizable obj/constraints/parameters in a flexible way, for any problem a user can dream up. Like @clarkpede says, sometimes the objectives can require some heavy lifting (and require many local solution variables), and this thing is quite difficult to implement currently (it would be great if things like #889 were made easier). Do you think the language parser can eventually be used for this, or do you think we should just stick to writing those implementations in the COutput classes for each problem type (flow, elasticity, heat, etc).?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/913#issuecomment-609965745:174,flexible,flexible,174,https://su2code.github.io,https://github.com/su2code/SU2/pull/913#issuecomment-609965745,2,"['flexible', 'variab']","['flexible', 'variables']"
Modifiability,"@talbring ; when I run . `parallel_computation.py -f turb_ONERAM6.cfg -n 8; `; I get errors due to three other configuration parameters, which I had to comment out to be able to run this example. These are:. ```; SOLUTION_LIN_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; RESTART_LIN_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; SURFACE_LIN_FILENAME: invalid option name. Check current SU2 options in config_template.cfg.; ```; Are this lines supposed to be there? I'm not sure, reason why I'm letting you know.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300506190:111,config,configuration,111,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300506190,1,['config'],['configuration']
Modifiability,@talbring How do I clean and rebuild the configuration?. Regards; Suman,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619956807:41,config,configuration,41,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619956807,1,['config'],['configuration']
Modifiability,"@talbring I am successful with configuring SU2 using meson.py. However, while installing using ninja I get the following error. [100/846] Compiling C++ object 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o'.; FAILED: externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o ; icpc -Iexternals/tecio/teciompisrc/c3ca80e@@teciompi@sta -Iexternals/tecio/teciompisrc -I../externals/tecio/teciompisrc -Iexternals/tecio/teciompisrc/../ -I../externals/tecio/teciompisrc/../ -Iexternals/tecio/teciompisrc/./ -I../externals/tecio/teciompisrc/./ -I/app/intel/intel2018/impi/2018.3.222/intel64/include -pipe -D_FILE_OFFSET_BITS=64 -std=c++11 -O3 -fPIC -Wno-unused-parameter -Wno-empty-body -Wno-format-security -Wno-deprecated-declarations -Wno-non-virtual-dtor -fpermissive -DUSEENUM -DTECIOMPI -DTHREED -DMAKEARCHIVE -DNO_ASSERTS -DNO_THIRD_PARTY_LIBS -DTP_PROJECT_USES_BOOST -DBOOST_ALL_NO_LIB -DLINUX -DLINUX64 -MD -MQ 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -MF 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o.d' -o 'externals/tecio/teciompisrc/c3ca80e@@teciompi@sta/ClassicZoneWriterAbstract.cpp.o' -c ../externals/tecio/teciompisrc/ClassicZoneWriterAbstract.cpp; icpc: command line warning #10006: ignoring unknown option '-Wno-empty-body'; In file included from /usr/local/include/boost/type_traits/is_complete.hpp(15),; from /usr/local/include/boost/type_traits/is_convertible.hpp(17),; from ../externals/tecio/teciompisrc/../boost/iterator/interoperable.hpp(13),; from ../externals/tecio/teciompisrc/../boost/iterator/iterator_facade.hpp(11),; from /usr/local/include/boost/range/iterator_range_core.hpp(27),; from /usr/local/include/boost/range/iterator_range.hpp(13),; from ../externals/tecio/teciompisrc/../boost/assign/list_of.hpp(20),; from ../externals/tecio/teciompisrc/../boost/assign.hpp(20),; from ../externals/tecio/teciompisrc/fileStuff.h(7),; from .",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/955#issuecomment-619968113:31,config,configuring,31,https://su2code.github.io,https://github.com/su2code/SU2/issues/955#issuecomment-619968113,1,['config'],['configuring']
Modifiability,"@talbring Sorry for not being more specific. The config file is actually into; `TestCases/optimization_rans/pitching_oneram6/turb_ONERAM6.cfg`. If this configs are actually not supposed to be there, I could make a pull request removing them.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300515238:49,config,config,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300515238,2,['config'],"['config', 'configs']"
Modifiability,"@talbring Thanks for the quick and helpful answer! I'm looking at creating an ebuild/package for gentoo, compilation is a lot simpler than OpenFoam :P which is a big plus :). Anyway, I was looking at the old docs (the main docs still point to 6.0, I missed the red text that mentioned that somehow :P), not sure why, but you're right it's indeed mentioned in the 7.0 docs here https://su2code.github.io/docs_v7/Build-SU2-Linux-MacOS/#configuration-and-compilation. The ""Automatically installed dependencies"" section left me a bit confused because it sounded like the things listed there, which includes meson and ninja, would always get installed.; Maybe merging that section into the configuration and compilation section might help to make it more clear?. If you don't mind I have some additional questions:; - I didn't initialize the git submodule at all and configuration, compilation and running worked fine. Does this mean the CoDiPack and MeDiPack dependencies are optional? Or does this mean I could have a crash at runtime somewhere?; - Would it be possible to add a source package to the GitHub releases (in addition to the binary ones) that includes the (CoDiPack and MeDiPack) submodules? Unfortunately the GitHub provided source downloads don't include submodules.; - Are MKL and OpenBLAS build-time and exclusive options or can they both be compiled in and chosen at runtime?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/911#issuecomment-598751341:434,config,configuration-and-compilation,434,https://su2code.github.io,https://github.com/su2code/SU2/issues/911#issuecomment-598751341,6,['config'],"['configuration', 'configuration-and-compilation']"
Modifiability,"@talbring Thanks. That second link is very informative. I think that SU2 could really use a more advanced build process, and meson seems like a good candidate. As an example of why I think SU2 needs a better build process: Right now for AD builds, the build process listed in the tutorial asks you to use the `preconfigure.py` script to download and update the codi and medi git submodules. But there's a couple problems with the preconfigure script. It doesn't support out-of-source builds, and it expects all configure arguments to come in ""option=value"" pairs. A good build process (using CMake or meson) should allow adding submodules or external packages easily, without problems like these.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-500395507:511,config,configure,511,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-500395507,1,['config'],['configure']
Modifiability,"@talbring Yes, I do. I can't uninstall it since it breaks other packages. @pcarruscag Yeah same for me. You can see it here:; ```; slimshady@arch-linux-hp-probook-g3-450: ~$ mpicc -v; mpicc for MPICH version 3.3.2; Using built-in specs.; COLLECT_GCC=gcc; COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-pc-linux-gnu/9.2.1/lto-wrapper; Target: x86_64-pc-linux-gnu; Configured with: /build/gcc/src/gcc/configure --prefix=/usr --libdir=/usr/lib --libexecdir=/usr/lib --mandir=/usr/share/man --infodir=/usr/share/info --with-pkgversion='Arch Linux 9.2.1+20200130-2' --with-bugurl=https://bugs.archlinux.org/ --enable-languages=c,c++,ada,fortran,go,lto,objc,obj-c++,d --enable-shared --enable-threads=posix --with-system-zlib --with-isl --enable-__cxa_atexit --disable-libunwind-exceptions --enable-clocale=gnu --disable-libstdcxx-pch --disable-libssp --enable-gnu-unique-object --enable-linker-build-id --enable-lto --enable-plugin --enable-install-libiberty --with-linker-hash-style=gnu --enable-gnu-indirect-function --enable-multilib --disable-werror --enable-checking=release --enable-default-pie --enable-default-ssp --enable-cet=auto gdc_include_dir=/usr/include/dlang/gdc; Thread model: posix; gcc version 9.2.1 20200130 (Arch Linux 9.2.1+20200130-2) ; ```; I did what you suggested and here is how my meson.build file looks.; ```; # If custom mpi mode is enabled, include and library pathes for MPI have to be set manually to env variables; if get_option('custom-mpi'); mpi_dep = []; mpi = true; # Otherwise they are automatically determined; else; mpi_dep = [dependency('mpich', required : get_option('with-mpi'))]; # mpi_dep = [dependency('mpi', language:'c', required : get_option('with-mpi')),; # dependency('mpi', language:'cpp', required : get_option('with-mpi'))]; #if mpi_dep[0].found() or mpi_dep[1].found(); # mpi = true; #endif; endif; ```; My SU2 build was successful but there were a couple of warnings.; Also, instead of 870 there were only 772 files in total. Is that okay?; ```; slimshady@",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474:356,Config,Configured,356,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-633139474,5,"['Config', 'config', 'plugin']","['Configured', 'configure', 'plugin']"
Modifiability,"@talbring how do you want the ""interface"" to work for the user?; Do they modify meson.build?; Do they define environment variables for the root folder of each dependency? (I guess not); Do we force the installation directory? (not a good idea since some components can be installed with apt-get); Do we force them to link only statically / dynamically?; Also are you aware that linker flags for BLAS can be compiler dependent, especially for MKL?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525688282:121,variab,variables,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525688282,1,['variab'],['variables']
Modifiability,"@talbring, if you are concerned with implementing BC_Sym_Plane in CSolver and every derived class inheriting a default implementation, it can be named BC_Sym_Plane_Flow and then the compressible and incompressible solvers can call it from their implementation of BC_Sym_Plane. Anything is better than copy pasting code, as that will only make a future refactoring more difficult. By the way, I too think the implementation is very good and I really appreciate @TobiKattmann 's effort to document it from the theoretical and implementation point of view.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/657#issuecomment-471325872:98,inherit,inheriting,98,https://su2code.github.io,https://github.com/su2code/SU2/pull/657#issuecomment-471325872,2,"['inherit', 'refactor']","['inheriting', 'refactoring']"
Modifiability,"@talbring, is it easy to add such a test to configure? I have no idea how to do this to be honest?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/574#issuecomment-419802820:44,config,configure,44,https://su2code.github.io,https://github.com/su2code/SU2/pull/574#issuecomment-419802820,1,['config'],['configure']
Modifiability,"@timjim333 it could be an issue with shared libraries, which ultimately is a path issue, as you suspected.; To verify it try opening a python shell, checking the version displayed (should be your 3.7.8) and try `import pyamg` in the shell. If the ""No such file or directory"" error shows up, it means pyamg was not correctly installed; otherwise it is in fact installed. In the latter case, you can check if your python is configured to enable shared libraries. To do it, according to [this](https://stackoverflow.com/questions/23201498/how-to-check-if-python3-was-built-with-enable-shared), in the python shell you can type ; `import sysconfig`; `sysconfig.get_config_vars('Py_ENABLE_SHARED')`; If the result is `[0]`, ie ""False"", you have to build python with the option `--enable-shared`. ; Now, I don't know how to do accomplish that with conda, but with [pyenv](https://github.com/pyenv/pyenv) it involves installing the desired python version with `CONFIGURE_OPTS=--enable-shared pyenv install <version>`. To recap, a ""workflow for newbies"" which appears to be working for me is. 1. install pyenv either from [source](https://github.com/pyenv/pyenv#installation) or from your distibution repositories, if available. IMPORTANT: make sure the environment variables are correctly set and `pyenv init` is added to your shell, as per the installation instructions.; 2. install the desired python version (for example 3.7.8), enabling shared libraries: ; `CONFIGURE_OPTS=--enable-shared pyenv install 3.7.8`; 3. clone/download the [feature_adap](https://github.com/su2code/SU2/tree/feature_adap) branch of SU2;; 4. in the SU2 folder, configure meson ; `./meson.py build` ; and make sure to update the environment variables in your `.bashrc` as indicated by meson's output.; 5. use ninja to build and install SU2 ; `./ninja -C build install`;; if you run into a permission error, specify an installation directory passing the `--prefix` option to meson, as explained [here](https://www.cfd-online.com/Fo",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/948#issuecomment-751823130:422,config,configured,422,https://su2code.github.io,https://github.com/su2code/SU2/issues/948#issuecomment-751823130,1,['config'],['configured']
Modifiability,"@vdweide @pcarruscag ah ok, I wasn't sure how it was working on the RBF but seeing that there is no need for it to be in configure, it's better to clean it up as well.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/586#issuecomment-423941082:121,config,configure,121,https://su2code.github.io,https://github.com/su2code/SU2/pull/586#issuecomment-423941082,1,['config'],['configure']
Modifiability,"@vdweide @talbring Ok, thanks you for all your thoughts and help troubleshooting this so far - I guess it might be the SU2 export plugin introducing this as I can't seem to identify the mesh issue within Pointwise itself. I'll contact support and leave a message here if any workarounds are found.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/683#issuecomment-495885490:130,plugin,plugin,130,https://su2code.github.io,https://github.com/su2code/SU2/issues/683#issuecomment-495885490,1,['plugin'],['plugin']
Modifiability,"@vdweide agreed, but for the sake of not giving SU2 a bad rep, the MPI standard specifies those variables to be const (https://www.mpi-forum.org/docs/mpi-3.0/mpi30-report.pdf page 572 or 602 of the pdf) so this is a (small-ish) mpich 3.0 implementation issue.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587#issuecomment-424283842:96,variab,variables,96,https://su2code.github.io,https://github.com/su2code/SU2/issues/587#issuecomment-424283842,1,['variab'],['variables']
Modifiability,"@vdweide, I hacked the configuration scripts to clone Eigen into externals and added the required search paths and flags in configure.ac. I also put an include in blas_structure just to test and looks ok.; I suggest we both work on this branch (feature_test_eigen) and create a PR once we have a ""demo"" working.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460055024:23,config,configuration,23,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460055024,2,['config'],"['configuration', 'configure']"
Modifiability,"@vdweide, and what MKL flags do you use? The same you mentioned before?. On Thu, 29 Aug 2019, 07:00 Edwin van der Weide, <notifications@github.com>; wrote:. > @pcarruscag <https://github.com/pcarruscag>, I have not built the MKL; > executable with meson yet. What I typically did when using configure is to; > use environment variables for the compiler and linker flags.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/su2code/SU2/pull/771?email_source=notifications&email_token=AJCOXN5M6NECJGMGJEGDHGTQG5QXLA5CNFSM4IPIUEI2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD5NK6TA#issuecomment-526036812>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AJCOXN23NPS4JJDU2VGK3NTQG5QXLANCNFSM4IPIUEIQ>; > .; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-526052883:291,config,configure,291,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-526052883,2,"['config', 'variab']","['configure', 'variables']"
Modifiability,"@vdweide: I cannot give you the geometry or the mesh because they are the property of an aircraft manufacturer, a colleague is going to check if he can provide a dummy geometry, similar to the one we are working onto. What I can give you is the config file (I still had to change some values related to the geometry). @hlkline: What I meant was that the meshes were generated using a multi block strategy. Before writing into SU2 or CGNS, they were converted in a proper unstructured format. I had indeed checked the surface solution, but not the volume one. And it seems that there are some weird cells (see attached screenshot). I will investigate. Thanks for your inputs!. [EBW2v2.txt](https://github.com/su2code/SU2/files/1999732/EBW2v2.txt). ![volume](https://user-images.githubusercontent.com/39187559/39983910-a25a9172-5759-11e8-9d5e-d7066ae95d00.png)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/533#issuecomment-388723451:245,config,config,245,https://su2code.github.io,https://github.com/su2code/SU2/issues/533#issuecomment-388723451,1,['config'],['config']
Modifiability,"@yukaiweng: no problem on the repost. A couple comments... 1. I am not able to reproduce the problem on my mac, but I have a suspicion that the line endings in the text files could be causing an issue. Are you working on Windows? There may be a problem with the line endings that can resolved by using the ""dos2unix"" or ""unix2dos"" utility on linux that can format the file in the correct direction. Check this out any time you move files between Linux/Mac <-> Windows. 2. You can always convert between the two file types using the config options and restarting for one iteration, e.g. if you have a binary restart file and you restart with. WRT_BINARY_RESTART= NO; READ_BINARY_RESTART= YES; EXT_ITER= 1. you will get an ASCII restart upon completion. You can do also do this in the other direction to get a binary restart from ASCII. Hope this helps,; Tom",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/477#issuecomment-347066655:532,config,config,532,https://su2code.github.io,https://github.com/su2code/SU2/issues/477#issuecomment-347066655,1,['config'],['config']
Modifiability,"A section of the Build From Source tab of the WIKI mentions the following: . ""For example, to configure SU2 for parallel calculations (i.e., with ParMETIS and MPI) along with CGNS and TecIO support and a high level of compiler optimization, the configure command might look like this (replace with specific paths on your system):. ""$ ./configure --prefix=/path/to/install/SU2 --enable-mpi --with-cc=/path/to/mpicc ; --with-cxx=/path/to/mpicxx CXXFLAGS=""-O3"" --with-CGNS-lib=/path/to/CGNS/lib ; --with-CGNS-include=/path/to/CGNS/header"". Note that the actual configure call does not actually use TECIO as discribed in the paragraph leading up to the call.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/245:94,config,configure,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/245,4,['config'],['configure']
Modifiability,A segfault occurs when running Roe convective flux explicitly if jump variables are too high.; Line 3278 of numerics_direct_mean.cpp. Occurred when running high mach number (M=24) flow.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/651:70,variab,variables,70,https://su2code.github.io,https://github.com/su2code/SU2/issues/651,1,['variab'],['variables']
Modifiability,"A short summary of the things I did in the additional commits:. - I added a consistent error handling that can be used throughout the code. For example if a marker is not specified the error looks like that: ; ```; -------------------------------- Error ---------------------------------; In ""short unsigned int CConfig::GetMarker_CfgFile_TagBound(std::__cxx11::string)"": ; ------------------------------------------------------------------------; The configuration file doesn't have any definition for marker airfoil; ------------------------------------------------------------------------; Exiting now ...; ```; or if a solution cannot be found:. ```; -------------------------------- Error ---------------------------------; In ""void CSolver::Read_SU2_Restart_Metadata(CGeometry*, CConfig*, bool, std::__cxx11::string)"": ; ------------------------------------------------------------------------; Unable to open SU2 restart file solution_flow.dat; ------------------------------------------------------------------------; Exiting now ...; ```; In case you want to throw an error, you can simply call the function `SU2_MPI::Error(""Error Message"", CURRENT_FUNCTION)` where `CURRENT_FUNCTION` is a predefined macro which expands to the name of the routine at compile time. I already replaced almost all error messages in the code. - More MPI functions are included in the MPI Wrapper. - The rank/size is now stored in most of the bigger classes and initialized in the constructor. That means there are no calls to MPI_Comm_rank / MPI_Comm_size anymore in every routine ... For convenience there is also a SU2_MPI::GetRank() / SU2_MPI::GetSize(), in case you need it outside of the main classes. Let me know what you think. Not everything I did has to stay the way I implemented it :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/473#issuecomment-347663941:452,config,configuration,452,https://su2code.github.io,https://github.com/su2code/SU2/pull/473#issuecomment-347663941,2,['config'],['configuration']
Modifiability,"A spark initialization was not possible with CFL adaptation, as the CFL number would increase too far before the spark initiates the combustion. This led to immediate flashback or blow-off. An additional parameter in the CFL adaptation defines the iteration, at which the CFL adaption should start. This allows the combustion to stabilize before the CFL number increases. Before the initial iterations has not started, the CFL number does not get adapted in either direction.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2362:49,adapt,adaptation,49,https://su2code.github.io,https://github.com/su2code/SU2/pull/2362,4,['adapt'],"['adaptation', 'adapted', 'adaption']"
Modifiability,A way to parameterize an airfoil shape is with the use of Kulfan parameters as part of the CST method (http://brendakulfan.com/docs/CST3.pdf). I added the feature to use the CST method for 2D airfoils in SU2 for mesh deformation and obtaining gradients with Kulfan parameters. I have used this method with SU2 in my research on wind turbine blade optimization and wanted to make it available for those that want to use a built-in CST method for airfoil shape parameterization and optimization with SU2.,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/297:9,parameteriz,parameterize,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/297,2,['parameteriz'],"['parameterization', 'parameterize']"
Modifiability,AD build configure error: `bad value --enable-parmetis for --enable-tecio`,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567:9,config,configure,9,https://su2code.github.io,https://github.com/su2code/SU2/issues/567,1,['config'],['configure']
Modifiability,"ALL; The Meson build system; Version: 0.54.999; Source dir: /home/slimshady/UserPackages/SU2_HOME; Build dir: /home/slimshady/UserPackages/SU2_HOME/build; Build type: native build; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Project name: SU2; Project version: 7.0.6 ""Blackbird""; Using 'CC' from environment with value: '/usr/bin/gcc'; Using 'CXX' from environment with value: '/usr/bin/g++'; Using 'CC' from environment with value: '/usr/bin/gcc'; C compiler for the host machine: /usr/bin/gcc (gcc 10.2.0 ""gcc (GCC) 10.2.0""); C linker for the host machine: /usr/bin/gcc ld.bfd 2.35.1; Using 'CXX' from environment with value: '/usr/bin/g++'; C++ compiler for the host machine: /usr/bin/g++ (gcc 10.2.0 ""g++ (GCC) 10.2.0""); C++ linker for the host machine: /usr/bin/g++ ld.bfd 2.35.1; Host machine cpu family: x86_64; Host machine cpu: x86_64; Program python3 found: YES (/usr/bin/python3); Found pkg-config: /usr/bin/pkg-config (1.7.3); Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency mpich found: YES 3.3.2; Dependency mpich found: YES 3.3.2 (cached); Message: Extracting boost ...; Using 'PKG_CONFIG_PATH' from environment with value: '/usr/local/mpich-3.3.2/lib/pkgconfig'; Run-time dependency openblas found: YES 0.3.10; Program swig found: YES (/usr/bin/swig); Message: Using mpi4py from /home/slimshady/.local/lib/python3.8/site-packages/mpi4py/include; Dependency python found: YES (pkgconfig); Program install.sh found: YES (/bin/sh /home/slimshady/UserPackages/SU2_HOME/SU2_PY/pySU2/install.sh); Message: -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 7.0.6 ""Blackbird"" |; | \__ \ |_| |/ / |; | |___/\___//___| Meson Configuration Summary |; | |; -----------------------------------------------------------------",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137:2095,config,config,2095,https://su2code.github.io,https://github.com/su2code/SU2/issues/1000#issuecomment-721366137,2,['config'],['config']
Modifiability,"APPER`: `ON|OFF`, disabled when building with Codi forward; * `SU2_BUILD_SOL`: `ON|OFF`, disabled when building with Codi; * Enable modules:; * `SU2_ENABLE_CGNS`: ; * `SU2_CGNS_CPPFLAGS`: flags to pass when compiling CGNS; * `SU2_ENABLE_CODI`: `no|forward|reverse`; * `SU2_CODI_CPPFLAGS`: flags to pass to SU2 modules when compiling with Codi; * `SU2_ENABLE_METIS`: `ON|OFF`; * `SU2_METIS_CPPFLAGS`: flags to pass when compiling Metis; * `SU2_ENABLE_MKL`: `ON|OFF`; * `SU2_ENABLE_MPI`: `ON|OFF`; * `SU2_ENABLE_MUTATIONPP`: `ON|OFF`; * `SU2_ENABLE_PARMETIS`: `ON|OFF`, only available when `SU2_ENABLE_MPI` is `ON`; * `SU2_PARMETIS_CPPFLAGS`: flags to pass when compiling Parmetis; * `SU2_ENABLE_TECIO`: `ON|OFF`; * `SU2_TECIO_CPPFLAGS`: flags to pass when compiling Tecio and TecioMPI; * `SU2_TECIOMPI_CPPFLAGS`: flags to pass when compiling TecioMPI, requires `SU2_ENABLE_MPI`. There is an additional variable that is recognized by CMake scripts - `DEBUG`, turning it `ON` enables additional `STATUS` messages, mainly to check that correct include directories, compile definitions and linked libraries were set up correctly. The remaining options like install location and compilers are handled by CMake. Tested this on Ubuntu with CMake 3.15.5 and everything except `pySU2ad` wrapper compiles. Haven't tested on earlier CMake versions so there might be bugs with them but they should be easy to resolve if any. I have based the CMake scripts on autotools scripts so there's no Pastix/Blas options yet. [FindBLAS](https://cmake.org/cmake/help/latest/module/FindBLAS.html), [FindPastix](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindPastix.cmake), [FindScotch](https://github.com/eigenteam/eigen-git-mirror/blob/master/cmake/FindScotch.cmake). ## Related Work; *Resolve any issues (bug fix or feature request), note any related PRs, or mention interactions with the work of others, if any.*. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/814:2702,variab,variable,2702,https://su2code.github.io,https://github.com/su2code/SU2/pull/814,1,['variab'],['variable']
Modifiability,About the new CodeFactor issues: I aligned the x86_64 and aarch64 testVals so it is easier (for the naked eye) to compare the differences. But now CodeFactor complains about the extra spaces before the `=`. Should I remove the extra spaces or this could be configured to silent it somewhere ?,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1619#issuecomment-1138426539:257,config,configured,257,https://su2code.github.io,https://github.com/su2code/SU2/pull/1619#issuecomment-1138426539,1,['config'],['configured']
Modifiability,Actually I had a look at your branch and the way it is right now is not correct I believe because I had taken the other variables v and 1/y out of the derivative using the chain rule and combined them with the other derivatives to end up with the terms as they are now so only d(mu)/dy was missing. The AxiAuxVarGrad you are using is apparently d(v*mu/y)/dy so the other terms have to be different. I will change them. Why not just simply compute the viscosity gradient? Is there any reason not to pull the other variables out?. Is there not already an AuxVar being just v*mu or something? . Anyway I guess it will work the same either way,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107:120,variab,variables,120,https://su2code.github.io,https://github.com/su2code/SU2/pull/1095#issuecomment-727969107,4,['variab'],['variables']
Modifiability,"Adam: I noticed you updated this PR with some changes. Are you happy with this change to the TecIO library now?. Also, it looks like you updated some of the configure to v1.15. Was this required for your changes? We typically use v1.12, which we ship with the source code in externals/autotools. This will be built for you automatically and autoreconf will be called if you use the SU2/bootstrap script.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/339#issuecomment-316291071:157,config,configure,157,https://su2code.github.io,https://github.com/su2code/SU2/pull/339#issuecomment-316291071,1,['config'],['configure']
Modifiability,Adapt new periodic bc for turbo-vertex,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/666:0,Adapt,Adapt,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/666,1,['Adapt'],['Adapt']
Modifiability,"Adaption of the interpolation method NearestNeighbor to turbomachinery applications when rotating frame is used. ## Proposed Changes; *If the flow is solved in a rotating frame, the grid is not actutally rotating. But the interpolation for a sliding interface should be done with an actually rotated boundary. The proposed changes add the function of rotating grid points on the boundary of a zone solved in rotating frame before the interpolation is executed. Currently, this is only implemented in CNearestneighbor class, other interpolation method should be changed as well in the near future.*. ## Related Work. ## PR Checklist; *Put an X by all that apply. You can fill this out after submitting the PR. If you have any questions, don't hesitate to ask! We want to help. These are a guide for you to know what the reviewers will be looking for in your contribution.*. - [ yes ] I am submitting my contribution to the develop branch.; - [ yes ] My contribution generates no new compiler warnings (try with --warnlevel=3 when using meson).; - [ yes ] My contribution is commented and consistent with SU2 style (https://su2code.github.io/docs_v7/Style-Guide/).; - [x] I used the pre-commit hook to prevent dirty commits and used `pre-commit run --all` to format old commits.; - [ ] I have added a test case that demonstrates my contribution, if necessary.; - [ ] I have updated appropriate documentation (Tutorials, Docs Page, config_template.cpp), if necessary.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2173:0,Adapt,Adaption,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2173,1,['Adapt'],['Adaption']
Modifiability,Adaptive CFL condition (apart from currently available fixed/ramp),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/94:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/94,1,['Adapt'],['Adaptive']
Modifiability,Adaptive Edge Color Group Size,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2167:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/2167,1,['Adapt'],['Adaptive']
Modifiability,Adaptive Mesh Refinement,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/743:0,Adapt,Adaptive,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/743,1,['Adapt'],['Adaptive']
Modifiability,Add Python 3.7 to Travis config,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/622:25,config,config,25,https://su2code.github.io,https://github.com/su2code/SU2/pull/622,1,['config'],['config']
Modifiability,Add angle of attack as a design variable (or design in fixed-lift mode),MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/109:32,variab,variable,32,https://su2code.github.io,https://github.com/su2code/SU2/issues/109,1,['variab'],['variable']
Modifiability,Added Dry Run mode to quickly check sanity of a config file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/734:48,config,config,48,https://su2code.github.io,https://github.com/su2code/SU2/pull/734,1,['config'],['config']
Modifiability,"Added a node_inlet variable to hold the inlet flow properties and allow us to get dPdU, etc., for implicit solver with nemo convective schemes. We could get away with a single allocation if we put this with the node_infty allocation, but for now will leave in the BC function.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1372670747:19,variab,variable,19,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1372670747,1,['variab'],['variable']
Modifiability,Added a small comment to the config file to clarify the selection of time step Vs the CFL for unsteady simulations.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/218#issuecomment-164605469:29,config,config,29,https://su2code.github.io,https://github.com/su2code/SU2/pull/218#issuecomment-164605469,1,['config'],['config']
Modifiability,"After a lot of configuring and reconfiguring, it turns out the above issue occurs when the system's meson is used instead of the meson.py that ships with SU2. However, I'm not sure this is correct behavior. Shouldn't the choice of the meson executable script be irrelevant? In other words, shouldn't the configuration be dependent on meson.build and not on meson.py? Using system's installed meson should produce the same result as using the meson.py that ships with SU2.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747:15,config,configuring,15,https://su2code.github.io,https://github.com/su2code/SU2/issues/1528#issuecomment-1022884747,2,['config'],"['configuration', 'configuring']"
Modifiability,"After hibernating on this over the winter, I finally had some time to put some work into this. I am in the process of running a number of cases. So far I have results for 2 RANS cases with mesh convergence studies. These can be seen at https://github.com/su2code/VandV . The repo contains the relevant meshes and configuration files for each mesh level. It might not be necessary to have the different config files since the only changes between them are CFL numbers and mesh filenames. We can discuss this. . The folder for each case also has a README.md file that presents the test case and some of the relevant results. This displays the information nicely in the repository page, and is a decent mock up of how it would look, if we decide to put it on the website. . I just wanted to share this to get initial reactions to how I have set the repo up. I haven't included any discussion about the actual results either, but that is something that can be added.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-470729235:313,config,configuration,313,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-470729235,2,['config'],"['config', 'configuration']"
Modifiability,After some testing I can report the following:. - With Jacobian contributions disabled convergence is greatly increased and on-par with the isothermal/heat flux configurations; - After around 12800 timesteps the solution diverges and SU2 crashes.; - For some reason the global flowfield is drastically different between convective and isothermal/adiabatic cases. As the convective case is somewhere between adiabatic and isothermal conditions this should not be the case. Here you can see a comparison of pressure between convective case (top) and isothermal case (bottom). The only difference is the type of boundary of the conical walls.; ![Comparison](https://github.com/su2code/SU2/assets/42602495/068a78c8-f469-4c6f-b80a-b594a5b79190). The same comparison by temperature:; ![Temperature](https://github.com/su2code/SU2/assets/42602495/022682f8-89a7-4a41-a004-1cfff96e6f70). I'm a bit lost as to what's happaning here...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1872#issuecomment-1648290476:161,config,configurations,161,https://su2code.github.io,https://github.com/su2code/SU2/issues/1872#issuecomment-1648290476,1,['config'],['configurations']
Modifiability,"Agree with Francisco: the best solution is to have an input parameter that can be used to scale the FD step size. I would suggest FD_REFERENCE_LENGTH to be created (and possibly specified in the config file). If FD_REFERENCE_LENGTH is not specified, then it could default to REF_LENGTH_MOMENT. Best,. Juan. On Mar 5, 2017, at 6:35 PM, Francisco Palacios <notifications@github.com<mailto:notifications@github.com>> wrote:. Hi,. Yep, I changed that. I know that from the math point of view it doesn’t make a lot of sense but, from the practical point of view, it is useful. There are some cases, in which computing gradients using finite differences is the only choice. And with the shape_optimization script it was not possible to control the step size for the finite differences. The option for step size was only in finite_differences.py. The step size is scaled with the reference length because from the practical point of view, I have found that the size of the aircraft, wing, airfoil, is important to determine a meaningful step size. e.g. should we use the same step for an aircraft with a MAC of ~150in than for an airfoil with a chord of 1in. Remember that most of the times we are using FD when the adjoint is not converging… so we have bad convergence of the direct problem (including some level of unsteadiness that we want to filter with the selection of the step size). In other words, with the right choice of the FD step size you can obtain, at least, an useful gradient… and that number is somehow linked to the size of the aircraft, wing, or airfoil. The best solution would be to add the step size to the finite_differences.py and also to the shape_optimization.py (creating a new option in the config file)… not a top priority, but I’ll do it soon. Best,; Francisco. > On Mar 1, 2017, at 3:25 PM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:; >; > Bumping this issue. This has come up several times now for different people/projects. Is the",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/367#issuecomment-284300083:195,config,config,195,https://su2code.github.io,https://github.com/su2code/SU2/issues/367#issuecomment-284300083,1,['config'],['config']
Modifiability,"Agreed that libraries are great as long as they are optional - sometimes we need them for highly specialized tasks. Btw, is it possible to use your wrapper for other external solvers? For example, it might be worth testing with PETSc again soon for performance reasons. I would encourage making a single base interface for external solvers that talks to the existing structure in SU2, which never needs to change, and then creating the implementations for each solver that adapts the particular solver data structures to the fixed interface (similar with the grid readers and output routines). Is this easy to do now?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-524932838:473,adapt,adapts,473,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-524932838,1,['adapt'],['adapts']
Modifiability,"Agreed, but unfortunately, I think we need to modify how we currently have the test cases set up, because we have a chicken & egg problem. Both of these pull requests require changes to the configs that live in the other repo. Those need to be modified first for the tests to pass, but it seems unsustainable to require commits to separate repos to test the pull requests (this makes this very valuable feature tough to use). We might want to move the configs back into the SU2 repo so that folks can update their tests with their code commits. This way, we will see the green light and accept. On Jul 29, 2015, at 3:31 PM, Brendan Tracey <notifications@github.com<mailto:notifications@github.com>> wrote:. In general, you can wait for Travis to give the green light before merging into develop. This way develop stays working. In addition, when done merging usually I delete the branch to keep things clean. —; Reply to this email directly or view it on GitHubhttps://github.com/su2code/SU2/pull/185#issuecomment-126116253.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126116991:190,config,configs,190,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126116991,2,['config'],['configs']
Modifiability,Ah I just mean adding it to the meson.build file as an option and to provide the paths to headers/libraries. I am not in favor of doing it via environment variables ...,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/771#issuecomment-525356822:155,variab,variables,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/771#issuecomment-525356822,1,['variab'],['variables']
Modifiability,"Ah sorry,; SU2_DOT mostly only uses OpenMP in the passive linear system, I'm not sure if @thomasdick Sobolev smoother has some recorded part that involves OpenMP.; For the python wrapper I usually set the number of threads with env var OMP_NUM_THREADS It may be a bit confusing for most users having to specify the number of threads when instantiating the driver :thinking: ; I think disc_adj_flow would be the easiest to adapt. Those tests print a sensitivity at a particular vertex of a marker to be checked by the regression script, so you would have to make sure that's only printed on one rank (for parallel AD).; disc_adj_fea should also be fine for hybrid AD.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877:422,adapt,adapt,422,https://su2code.github.io,https://github.com/su2code/SU2/pull/1966#issuecomment-1470288877,1,['adapt'],['adapt']
Modifiability,"Ah, nice catch, Devon. You're right, we don't actually need to include the --enable-tecio flag, since the configure process will try to include it by default. In your builds, did it find, compile, and link TECIO automatically for you?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/245#issuecomment-195547082:106,config,configure,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/245#issuecomment-195547082,1,['config'],['configure']
Modifiability,"Ah, that tutorial page is very important.. I don't think it was ever linked in the main wiki menu, but it is critical for making the options clear to the user (especially the surface handling). We need to make the design features as easy to use as possible - it is already hard enough for experts to use adjoints :). This is a good opportunity to move it over to the new repo where we are placing the tutorials here: https://su2code.github.io/Tutorials/docs/home/. The files, including the markdown, mesh, config, and images, can be moved to that repo. The markdown portion goes into the _docs directory, and we should make sure it's linked under the shape design tutorials. Do you have some time for this? Let me know if you need some help.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/494#issuecomment-357458143:506,config,config,506,https://su2code.github.io,https://github.com/su2code/SU2/pull/494#issuecomment-357458143,2,['config'],['config']
Modifiability,"Ah, yes, I see the problem. You're probably right. Have the configs (and test results) in the SU2 repository, and keep the meshes in the test repository. . Thanks for the explanation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/185#issuecomment-126117513:60,config,configs,60,https://su2code.github.io,https://github.com/su2code/SU2/pull/185#issuecomment-126117513,1,['config'],['configs']
Modifiability,"Akshay, regarding the convergence problems with SST_SUST, what free-stream values did you use? This model is more sensitive to free-stream values than SST, because for latter the turbulent variables dissipate. For SST_SUST I typically use. % Ratio of the turbulent and laminar viscosity in the free-stream (10.0); FREESTREAM_TURB2LAMVISCRATIO= 0.882; %; % Free stream turbulence intensitity, sqrt(2 k_inf/3)/U_inf (0.0005); FREESTREAM_TURBULENCEINTENSITY= 0.0007. Especially FREESTREAM_TURB2LAMVISCRATIO is much lower than the default version.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/797#issuecomment-540140961:189,variab,variables,189,https://su2code.github.io,https://github.com/su2code/SU2/issues/797#issuecomment-540140961,1,['variab'],['variables']
Modifiability,"All for improving the abstractions if possible. We did something similar for the scalar upwinding and the viscous schemes already. . My only comments, which you can probably guess already, are to make sure we don't take a large performance hit by adding more layers (for example, one can make an argument to remove the entire set of CNumerics classes and implement the methods more efficiently directly in the solver class with vectorization, etc) and that we maintain the flexibility for folks to quickly add new convective schemes which was the original motivation for the existing structure (and more layers could complicate this). Sounds like you're already considering these things, but it is important to find the right balance.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/691#issuecomment-500942445:259,layers,layers,259,https://su2code.github.io,https://github.com/su2code/SU2/pull/691#issuecomment-500942445,2,['layers'],['layers']
Modifiability,"All, . Regarding the steady test cases, Embraer folks published a paper of their efforts to validate SU2 using the DPW and HLPW geometries (https://doi.org/10.2514/6.2018-2845 <https://doi.org/10.2514/6.2018-2845>) in the last AVIATION. I think that they will be happy to contribute with the meshes and config files. . Also, I can contribute with some unsteady cases. I think that the Backward Facing Step and the Tandem Cylinder test cases are a good start. Best,. Eduardo; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub <https://github.com/su2code/SU2/issues/581#issuecomment-423207120>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AJVmCdByjE1ogiSKp7fIos58GcRe-Rdlks5uc6e0gaJpZM4Ww0V4>.; >",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423260699:303,config,config,303,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423260699,1,['config'],['config']
Modifiability,"All,. Following this discussion, why not use something more descriptive for OBJECTIVE_FUNCTION? At the end of the day, it is meant as the functional, derived from the solution of the PDE, that we are solving the adjoint equations for. Then we use that adjoint field to compute gradients. How about ADJOINT_FUNCTIONAL? Or ADJ_FUNCTIONAL?. Best,. Juan. On Feb 22, 2016, at 8:34 AM, Francisco Palacios <notifications@github.com<mailto:notifications@github.com>> wrote:. Sorry for my late reply and thanks Heather for opening this important discussion.; I fully agree with you and OBJECTIVE_FUNCTION and OPT_OBJECTIVE cause confusion. As far I see the problem, if we focus on a typical users point of view, I think that OPT_OBJECTIVE and OPT_CONSTRAINT must be in the config file and as close as possible. They are the key to define an optimization problem (one of the key features of SU2). On the other hand, as you suggested we need to add some flexibility. It would be interesting to to able to define a multi-objective like; OPT_OBJECTIVE= DRAG \* DRAG_WEIGHT; LIFT^2 \* LIFT^2_WEIGHT;. As Tim pointed out OBJECTIVE_FUNCTION is important because is what we use to play and develop the adjoint capability but, from the users point of view it is not as interesting as the OPT_OBJECTIVE. If everything works ok, OPT_OBJECTIVE should be enough for most of the SU2 users. How many typical users are interested in solving and adjoint problem for the sake of solving of an adjoint problem?. However OBJECTIVE_FUNCTION is not a good name, from the point of view of the continuous adjoint, I would feel comfortable if we change it to ADJ_BND_CONDITION. That probably doesn't work for the discrete adjoint, isn't it? Tim, What key word would work for the Discrete Adjoint? We need something that reflect the effect, in mathematical terms, of the objective function in the AD adjoint problem. Finally, before adding any capability we should ask ourself how general is going to be and if it going to be useful for",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/241#issuecomment-187268164:764,config,config,764,https://su2code.github.io,https://github.com/su2code/SU2/pull/241#issuecomment-187268164,1,['config'],['config']
Modifiability,"All,. I would agree that we need to look at an existing library and not re-develop one. The standard for dense linear algebra is LAPACK. It has been around forever, relies on BLAS routines, is currently being used in the SU2 higher-order DG-FEM solver. Various computer vendors (including GPU manufacturers) have spent many years optimizing BLAS and LAPACK calls on their own computer architectures. This means that your code is (a) portable and, by linking to the appropriate vendor-provided version of the library (say like Intel’s MKL), (b) you get highest performance. I am not familiar with Eigen (just looked at the web page), but there is an interesting comparison between Eigen and LAPACK (written by the developers of Eigen…take it with a grain of salt) here<http://eigen.tuxfamily.org/index.php?title=FAQ#How_does_Eigen_compare_to_BLAS.2FLAPACK.3F>. If all they say is true, then Eigen would be a very good choice. If it is a bit exaggerated, then maybe LAPACK is better. Does anyone have experience with Eigen? Are there any reasons why LAPACK is better? Can the folks involved in FV and DG-FEM solvers talk to each other before making a decision?. While PETSc is a wonderful library (and parallel), I would hesitate to use it as the solution for the problem that we are trying to solve: it is not the easiest thing to compile and it is most definitely not lightweight. If one also wanted to replace Krylov-space solvers and preconditioners in SU2 the PETSc might make more sense….but it still forces the developer to conform to their view of the world (including matrix setup and decomposition). Best,. Juan. On Jan 31, 2019, at 4:43 PM, Brian Munguía <notifications@github.com<mailto:notifications@github.com>> wrote:. @EduardoMolina<https://github.com/EduardoMolina> and I have discussed this over the past few weeks and are also in favor of using an external library. I don't have a strong opinion on the library we choose, but he seems to be in favor of PETSc<https://www.mcs.anl.gov/p",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-459566859:433,portab,portable,433,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-459566859,1,['portab'],['portable']
Modifiability,"All,. Of course, another approach to verifying which sign is correct is to do an analytic differentiation (using CoDi?) or simply using complex-step on the residual calculation routine to get exact Jacobians (for a particular state) and confirm the correct sign. This does require some code extraction / refactoring to perform the test, but it has the benefit that you would know exactly what the correct answer is for the specific residual implementation. Best,. Juan. On Nov 16, 2018, at 11:03 AM, Thomas D. Economon <notifications@github.com<mailto:notifications@github.com>> wrote:. As Jacobians affect convergence rate and not accuracy, you could do a quick test of the same problem with the current version and the sign flipped to see if there is measurable difference in the convergence rate. If yes, then it should give you a hint about which direction. If no, then we should still correct it, but prob don't need to put in too much effort. @clarkpede<https://github.com/clarkpede> : I'm interested in your unit testing set up... —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://github.com/su2code/SU2/issues/609#issuecomment-439493827>, or mute the thread<https://github.com/notifications/unsubscribe-auth/ADpSxInSS3cmLF8iFkD22AoYAp0G3G2yks5uvwvxgaJpZM4YeD9V>.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/609#issuecomment-439500791:304,refactor,refactoring,304,https://su2code.github.io,https://github.com/su2code/SU2/issues/609#issuecomment-439500791,2,['refactor'],['refactoring']
Modifiability,"All,. Thanks for getting this going. My two cents:. 1. Indeed, while these V&V cases and the TestCases directory / repo are not identical, there is some overlap…some of the TestCases are definitely validation cases too. We can continue to add test cases to the TestCases repo, knowing that only a subset of those cases belong in the V&V list. 2. An important aspect of the V&V is the convergence of the solution as the mesh is refined. As Jayant knows well, this can help us catch bugs. This means that a well-constructed V&V suite needs to include a series of meshes (of increasing density), the corresponding configuration files, and the actual experimental data (or other numerical data from runs on different solvers). I strongly agree with the suggestions made that (a) the entire V&V suite needs to be run before every major release (with configuration files updated), (b) that this should be linked form the main SU2 page, (c) that the 2014 AIAA paper (and Tom’s AVIATION 2018 paper) should serve as a starting point, (d) that the NASA TMR website can give us ideas of additional access, and (e) that the SU2 V&V page should be managed within GitHub.com<http://GitHub.com> so the entire community can edit / add to this / these page/s to continue to grow the number of cases and their relevance. Best,. Juan. On Sep 20, 2018, at 3:02 AM, Ruben Sanchez <notifications@github.com<mailto:notifications@github.com>> wrote:. Thanks, Pedro, I think that's a great idea. As you mention, we would have to work out the logistics as this would require quite a bit of implication from the community, but the extra burden on the release would be compensated by avoiding big ""updating"" operations every now and then. Also as most users only work with the released versions, so it's a way to ensure they always know what updates have happened / which new features are available. —; You are receiving this because you are subscribed to this thread.; Reply to this email directly, view it on GitHub<https://git",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/581#issuecomment-423207120:611,config,configuration,611,https://su2code.github.io,https://github.com/su2code/SU2/issues/581#issuecomment-423207120,2,['config'],['configuration']
Modifiability,"All,; If you have a look at ""feature_test_eigen"", I ""ported"" the JST ComputeResidual method.; I only changed the local variables of the method, so some temporaries are required to make things compatible with the outside world and with base class variables. Nevertheless, the performance is not worse (direct and discrete adjoint) and I think it reads better, but that is subjective.; Pedro",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/643#issuecomment-460671586:119,variab,variables,119,https://su2code.github.io,https://github.com/su2code/SU2/issues/643#issuecomment-460671586,2,['variab'],['variables']
Modifiability,"All: we will need all the help we can get to make a big documentation push for v7. Please do take some time and contribute to the new structure that @talbring is setting up. Even if you only have some time to work through the new documentation and find/correct typos or issues you find. I will be adding some governing equations to the solver sections very soon. As for documenting the config options, the best policy is that it is automatic. As has been done with the output and the dry run mode (-d), we can also do the same for all config options. They can be made self-describing by adding their description/comment directly into the code that creates the option in the C++, which can then be printed on request with a -h flag (or something similar). This is no doubt the way to go in my mind. But, that will likely be for after v7, so for now, let's invest in the docs, since they are critically important.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/775#issuecomment-543255462:386,config,config,386,https://su2code.github.io,https://github.com/su2code/SU2/issues/775#issuecomment-543255462,2,['config'],['config']
Modifiability,"Allows weighted sum of objectives to be evaluated with the discrete adjoint. (Previously available only with continuous adjoint); A test case is added for this functionality in serial_regression_AD.py. Also includes:; related clean-up and standardization, such as making sure that a redundancy check inside python functions does the appropriate thing when multiple objectives are used (previously would duplicate some analyses during optimization). ; treating surface heatflux per-surface (making this more similar to how surface forces are treated) so that if multiple surfaces are included only the one specified as being monitored will be used in the objective function. ; removal of some unused variables that turned up during compiler checks.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/312:699,variab,variables,699,https://su2code.github.io,https://github.com/su2code/SU2/pull/312,1,['variab'],['variables']
Modifiability,"Alright, so my above hunch was correct: that there was an assumption of dictionary key order. I switched that variable over to an ordered bunch and I believe all the tests are passing, despite one of them timing out. After addressing that, the entire repo (including the wrapper) should now be compatible with both Python 2 and Python 3, and is setup to be tested with both.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/424#issuecomment-340193114:110,variab,variable,110,https://su2code.github.io,https://github.com/su2code/SU2/pull/424#issuecomment-340193114,1,['variab'],['variable']
Modifiability,"Alright. I did some digging, and the problem has nothing to do with the warning message. It goes much deeper. In a recent release, SU2 switched to reading and writing binary restart files instead of ASCII. The grid adaptation code is still written only for ASCII. If I'm right, then trying to read a binary restart file with the flow solution breaks the program. I'll submit an issue detailing the bug. For now, try adding the following lines to your cfg file when you run `SU2_CFD`:. %; % Write binary restart files (YES, NO); WRT_BINARY_RESTART= NO; %; % Read binary restart files (YES, NO); READ_BINARY_RESTART= NO. Then run `SU2_MSH`, just like you have been. Does that clear things up?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-436131167:215,adapt,adaptation,215,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-436131167,2,['adapt'],['adaptation']
Modifiability,"Also since this issue is getting resolved, is there anyway or option I can; reduced number of variables in exported results? I tried using; VOLUME_OUTPUT= (COORDINATES, PRIMITIVE) deleted SOLUTIONS so that I can; able to reduce the size of file from redundant parameters which i don't; need as of now. But seems like that does not work either and exported .vtk; with same size. It supposed to work like that if I understand correctly. On Mon, Mar 16, 2020 at 6:53 PM Monika Chauhan <monika1387@vt.edu> wrote:. > @clarkepede Sure, I will try to make an example to show .; > So my problem is CD nozzle and I am running FEM-LES solver and exported; > data in .csv and PARAVIEW type. Everything seems good its just I was unable; > to visualize exported .vtk files (open but does not show me the final; > result- stuck in just opening it - I am not sure if its paraview issue or; > its 4 GB file which causing this error). So I tried to export my file using; > Tecplot type option but unable to do so and getting this Bus error which I; > never encountered earlier in SU2 ever (what is that error - YOUR; > APPLICATION TERMINATED WITH THE EXIT STRING: Bus error (signal 7)). So; > trying to dump my files in anyway to visualize them, since its FEM-LES; > solver with DG scheme so files are pretty huge. Still let me know if I need; > to send you an example. Attached .cfg file for reference.; >; >; >; > On Mon, Mar 16, 2020 at 6:13 PM Clark Pederson <notifications@github.com>; > wrote:; >; >> @monika1387 <https://github.com/monika1387> I'm sorry, I still don't; >> understand. Do you have a minimal working example, where you can reproduce; >> the problem you're having?; >>; >> Where does the error occur? In SU2_CFD? In SU2_SOL? In Paraview? In; >> Tecplot? What's the specific error message? What's the context?; >>; >> —; >> You are receiving this because you were mentioned.; >> Reply to this email directly, view it on GitHub; >> <https://github.com/su2code/SU2/issues/787#issuecomment-599781328>,",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/787#issuecomment-599795725:94,variab,variables,94,https://su2code.github.io,https://github.com/su2code/SU2/issues/787#issuecomment-599795725,1,['variab'],['variables']
Modifiability,"Although my own participation with SU2 is now reduced due to pursuing other endeavors, I want to say that I hope that your future experiences with SU2 and the open-source community will be more positive, that I hope neither of you have been dissuaded from contributing here or on other open-source projects, and that this has been a good reminder that it is easy for things to get heated quickly, especially on the internet where tone of voice cannot be easily conveyed. . @SumanVajjala: ; conv_numerics→ComputeResidual is setting the fluxes inside of that function, and it uses the normal and flow variable information set at previous lines, ; conv_numerics→SetNormal(Normal); (line 10290 in your example) ; conv_numerics→SetPrimitive(V_domain, V_infty); (line 10433 in your example). ComputeResidual can be found in numerics_direct_mean.cpp, where you will see that SetResidual is handled differently depending on the numerical scheme chosen, and that calls to GetInviscidProjFlux are included. ; A similar pattern is followed in the other boundary conditions, although there may be more going on here which someone else may be able to comment on. . If you have any questions that are not bugs/code issues, SU2 also has a forum at: https://www.cfd-online.com/Forums/su2/. I also recommend using an IDE (xcode, eclipse, etc) to assist with navigating the code. Best,; Heather",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/405#issuecomment-314942908:599,variab,variable,599,https://su2code.github.io,https://github.com/su2code/SU2/issues/405#issuecomment-314942908,1,['variab'],['variable']
Modifiability,"An algebraic transition model that relies on local information, herein named as BC model, is added. The model uses Spalart-Allmaras model as the baseline model. BC model does not solve for any transport equations as in LM model, but instead, it uses the already transported S-A variable, nu_t. The model achieves its purpose by modifying the production term of the S-A. IMPORTANT: A research paper is written about our model, and submitted to ASME Journal of Fluids Engineering, and currently it is under review. If you need detailed information regarding to the model, please contact me from sametcakmakcioglu@gmail.com. Under the TestCases folder, I have added three test cases. Feel free to test the transition model for your own test cases. I also have T106 turbine cascade test case with successful results, and I can share it with you if requested. Please do not hesitate to contact me if you have more test cases (especially 3-D transition cases) that you would like me to solve. I would be more than happy to hear back your comments/suggestions. . Sincerely, ; Samet C. Cakmakcioglu",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/326:278,variab,variable,278,https://su2code.github.io,https://github.com/su2code/SU2/pull/326,1,['variab'],['variable']
Modifiability,"Anaconda3\envs\vsptools\include -c ./sources/Python3.7/option.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\option.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/option.c: In function 'CheckOptions':; ./sources/Python3.7/option.c:46:32: warning: '.o' directive writing 2 bytes into a region of size between 1 and 1024 [-Wformat-overflow=]; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~; ./sources/Python3.7/option.c:46:5: note: 'sprintf' output between 3 and 1026 bytes into a destination of size 1024; sprintf(mshopt->OutNam, ""%s.o"", mshopt->BasNam);; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/libmesh6.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\libmesh6.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/amgio_py_wrap.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\amgio_py_wrap.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; C:\Program Files\mingw-w64\x86_64-8.1.0-posix-seh-rt_v6-rev0\mingw64\bin\gcc.exe -mdll -O -Wall -DMS_WIN64 -IC:\Users\Danie\Anaconda3\envs\vsptools\include -IC:\Users\Danie\Anaconda3\envs\vsptools\include -c ./sources/Python3.7/convert.c -o build\temp.win-amd64-3.8\Release\.\sources\python3.7\convert.o -std=c99 -Wno-unused-variable -Wno-unused-result -O3; ./sources/Python3.7/convert.c: In function 'SplitSolution':; ./sources/Python3.7/convert.c:191:7: warning: variable 'iTemp' set but not used [-Wunused-but-set-variable]; int iTemp = -1;; ^~~~~; ./sources/Python3.7/convert.c: In function 'ConvertGMFtoSU2Sol':; ./",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1379:5675,variab,variable,5675,https://su2code.github.io,https://github.com/su2code/SU2/issues/1379,1,['variab'],['variable']
Modifiability,"And here is a simple test case demonstrating potential use. A major benefit of the supersonic inlet is being able to model supersonic propulsion systems, such as a scramjet, where the propulsion system exit boundary is modeled as a supersonic inlet, with distinct properties from the farfield flow conditions. Here we have a two dimensional test case demonstrating the interaction of exhaust flow with free-stream flow at the exit plane of a 2D scramjet system. Flow conditions adapted from [A Design Method for Three-Dimensional Scramjet Nozzles with Shape Transition](https://arc-aiaa-org.stanford.idm.oclc.org/doi/abs/10.2514/1.B38293); Jens Kunze, Michael K. Smart, and Rowan Gollan; Journal of Propulsion and Power 2022 38:1, 3-17. <img width=""1262"" alt=""image"" src=""https://user-images.githubusercontent.com/44848904/211415971-b6122204-0d95-43ca-903b-d60fd6326c39.png"">",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856:478,adapt,adapted,478,https://su2code.github.io,https://github.com/su2code/SU2/pull/1862#issuecomment-1375043856,2,['adapt'],['adapted']
Modifiability,"And why is your Test repo so large?; Perhaps some data files would be happier living elsewhere?. I'm thinking that if your Tests load large mesh files, for example, these mesh files could be placed in a data repository (like Figshare, Data Dryad, Zenodo), and your configuration files for each test could fetch the data it needs. I would imagine that the input data does not change often (or perhaps ever?) and one permalink and DOI is better suited for data than a version-controlled repo.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/152#issuecomment-72739420:265,config,configuration,265,https://su2code.github.io,https://github.com/su2code/SU2/issues/152#issuecomment-72739420,1,['config'],['configuration']
Modifiability,Another possibility would be to compress the boost files and uncompress it during configure/preconfigure. With tar.gz this reduces the size down to 15 MB.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/558#issuecomment-427287810:82,config,configure,82,https://su2code.github.io,https://github.com/su2code/SU2/pull/558#issuecomment-427287810,1,['config'],['configure']
Modifiability,AoA keyword in the config file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/323:19,config,config,19,https://su2code.github.io,https://github.com/su2code/SU2/issues/323,1,['config'],['config']
Modifiability,"Aok. For now, let's close this one, and please just raise another issue in the future if we need to clean configure.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567#issuecomment-417519404:106,config,configure,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/567#issuecomment-417519404,1,['config'],['configure']
Modifiability,"Aok. Thanks for checking that. Let's see if we can figure out a workaround on this pull request to get everything sorted. Having the autotools versioning all lined up is very important for portability, and distclean is very handy when you're working with the AD build.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/235#issuecomment-182577919:189,portab,portability,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/235#issuecomment-182577919,1,['portab'],['portability']
Modifiability,Apparently meson looks for ninja by just trying to execute the command `ninja` with the python call `Popen`. And I guess it depends on the python version (on our cluster we have 3.6) whether the current working dir is included in the search path or not ... Then it is unfortunately not possible skip the step in between to tell meson where to find ninja ... Then for now you'll have to do the following steps (as mentions by @TobiKattmann):. Build ninja in externals/ninja using `configure.py --bootstrap`; Add `externals/ninja` to the `PATH` variable; Run meson with `externals/meson/meson.py build`,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/685#issuecomment-495564089:480,config,configure,480,https://su2code.github.io,https://github.com/su2code/SU2/issues/685#issuecomment-495564089,2,"['config', 'variab']","['configure', 'variable']"
Modifiability,"Are the compiler wrappers, mpicc and mpicxx, also installed? When I look in your log file it mentions ; ./configure: line 3362: /usr/bin/mpicxx: No such file or directory",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/738#issuecomment-513849210:106,config,configure,106,https://su2code.github.io,https://github.com/su2code/SU2/issues/738#issuecomment-513849210,1,['config'],['configure']
Modifiability,Are you sure you're using the config file that corresponds to the current develop or master ? Because I don't see these options in TestCases/rans/oneram6/turb_oneram6.cfg,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/391#issuecomment-300510899:30,config,config,30,https://su2code.github.io,https://github.com/su2code/SU2/pull/391#issuecomment-300510899,1,['config'],['config']
Modifiability,"As discussed I will follow your suggestions and implement the new procedure of specifying the turbulence models guaranteeing backwards compatibility of the config file. ; ; Besides, the baseline or standalone Spalart-Allmaras turbulence model currently implemented in SU2 is actually its ft2=0 variation, a.k.a noft2. To keep compatibility with previous SU2 versions results it is preferable to keep the current nomenclature, i.e., SA will refer to the SA-noft2 variant. In that sense, to introduce the actual baseline version an additional variant should be implemented, yesft2 :), corresponding to the standard model found in the literature. I will make sure to properly document this matter in the SU2 website.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1364#issuecomment-916890178:156,config,config,156,https://su2code.github.io,https://github.com/su2code/SU2/issues/1364#issuecomment-916890178,1,['config'],['config']
Modifiability,"As discussed in the last dev meeting, this deprecates the centered scheme for weakly coupled heat transfer, because it had a bug in the speed of sound, and because this made it much easier to adapt the rest of the heat solver to the scalar framework. Bonus:; - Add SLOPE_LIMITER_HEAT option.; - OpenMP of the heat solver.; - Correct issues with Inlet and Outlet boundaries and gain farfield (not implemented before) for free.; - Regression for weakly coupled heat equation (primal was not covered before).; - PyCustom markers for heat solver. ToDo:; - Bounded scalar mode.; - Docs.; - Fix sensitivity wrt inlet velocity.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1892:192,adapt,adapt,192,https://su2code.github.io,https://github.com/su2code/SU2/pull/1892,1,['adapt'],['adapt']
Modifiability,"As for the question I raised, Dr. Alonso mentioned the problem in an email he sent me. He said, ""We used [grid adaptation] successfully in tetrahedral meshes, but I do not believe the hexahedral adaptation was ever fully functional."". That matches my experience with a few tests I ran. After playing around a little, it seems like adaptivity for hexahedra was only partially finished. Many sections of the are implemented, but there seem to be both bugs and unfinished implementation.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/487#issuecomment-355796302:111,adapt,adaptation,111,https://su2code.github.io,https://github.com/su2code/SU2/issues/487#issuecomment-355796302,3,['adapt'],"['adaptation', 'adaptivity']"
Modifiability,"As much as bug reports and enhancements are also appreciated, we are not following the strict *see something, say something* policy :) we need more application of the *see something, do something* policy :D",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/796#issuecomment-537097526:27,enhance,enhancements,27,https://su2code.github.io,https://github.com/su2code/SU2/issues/796#issuecomment-537097526,1,['enhance'],['enhancements']
Modifiability,"As noted in issue #487, the mesh adaptation routine can fall into an infinite loop if there aren't enough cells to adapt. For example, if you run the mesh adaptation on a grid with pure hexahedra, the program will look for a certain number of cells to adapt but find none. I added an additional break where the adaptivity loop will break if all suitable cells have been marked for adaptation. I also added an additional warning that will pop up if mesh adaptation is run without specifying a NEW_ELEMS percentage. Edit: This fixes #487.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/492:33,adapt,adaptation,33,https://su2code.github.io,https://github.com/su2code/SU2/pull/492,7,['adapt'],"['adapt', 'adaptation', 'adaptivity']"
Modifiability,"As the error message says, it cannot find ""Python.h"". This is again related to the Python wrapper compilation. If you really don't need it, I suggest you to just disable it when configuring your build (remove --enable-PY_WRAPPER). If you need the Python wrapper and if your Python is not located in a standard location on your supercomputer, you will have to manually modify the SU2_PY/pySU2/Makefile.am and put the right paths for the Python include and Python libs (I think similarly to what you did for mpi4py, see above)... Again, everything should be improved after #424 is merged.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/447#issuecomment-349590138:178,config,configuring,178,https://su2code.github.io,https://github.com/su2code/SU2/issues/447#issuecomment-349590138,1,['config'],['configuring']
Modifiability,"As we mentioned in the dev meeting where you exposed the problem, the implementation is not good for strongly coupled flows, and I would guess that it is worse for diffusion than convection (because diffusion is elliptic).; I suspect the main problem is that the linear system does not contain information from the other side of the interface, meaning the solution of the two domains is effectively decoupled.; You could try running the case at much lower CFL (below 1) even with an explicit method.; It is also possible that the current treatment could be improved, since it is an example of multiplicative Schwartz decomposition, maybe there is an ""optimal"" way of implementing that from a physics point of view. Just speculating here, but maybe it would help treating the interface as an outlet if flow is going out, and as an inlet if flow is coming in.; On the numerics side, you can also try hacking the MZ driver to use something more stable than block-Gauss-Seidel (e.g. some quasi-Newton thing for the interface). But those are all band-aids IMO, if you want a robust fluid-fluid interface you need the coupling to be present in the linear system. The simplest way to do that is to have an internal boundary and treat the problem as single zone.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509:1112,coupling,coupling,1112,https://su2code.github.io,https://github.com/su2code/SU2/issues/1414#issuecomment-951848509,2,['coupling'],['coupling']
Modifiability,"At some point we might have to clean up the configure script anyway, I guess :)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/567#issuecomment-416889527:44,config,configure,44,https://su2code.github.io,https://github.com/su2code/SU2/issues/567#issuecomment-416889527,1,['config'],['configure']
Modifiability,"Attached below is also my configuration file, if it is at all helpful. [laminar_config_unsteady.txt](https://github.com/su2code/SU2/files/10670340/laminar_config_unsteady.txt)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1914#issuecomment-1419993517:26,config,configuration,26,https://su2code.github.io,https://github.com/su2code/SU2/issues/1914#issuecomment-1419993517,1,['config'],['configuration']
Modifiability,"BTW, can I add any parameter (or environment variable) to the `meson.py` line (or to the `ninja` invocation) in order to force linking with `-lopen-pal -lopen-rte -lz`, as a temporary workaround to this problem? Note that I cannot use LDFLAGS because its contents would be put **before** libmpi.a so the link would fail anyway... Is there any other environment variable I can set for adding libraries **at the end** of the link line?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/867#issuecomment-583904096:45,variab,variable,45,https://su2code.github.io,https://github.com/su2code/SU2/issues/867#issuecomment-583904096,2,['variab'],['variable']
Modifiability,"Based on the feature_pyWrapper branch :. -new SU2_API folder with :; *include for header files (.h/.hpp); *src for source files (.cpp); *obj for lib and Makefile; *_SU2_API for the Pyhon wrapper and the SWIG conf file. -new FSI folder in the SU2_PY folder + new LaunchFSIComputation.py file. -The compilation should run fine (./configure + options --> make --> make install) but only if the Tec IO support is disabled, otherwise there are some missing references that I have not fixed yet. -You have to compile manually the _SU2_API folder with the Makefile + change the SU2_DIR variable in the Makefile before this compilation.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/217:328,config,configure,328,https://su2code.github.io,https://github.com/su2code/SU2/pull/217,2,"['config', 'variab']","['configure', 'variable']"
Modifiability,"Both ‘**rapidjson**’ and ‘**CoolProp**’ are licensed under the shortest and simplest permissive **MIT** license. I am not an expert but whether indicating the text of the licenses and copyright marks at the beginning of each of my files is reasonable?. Honestly, I don’t like the idea to treat **rapidjson** as a git submodule because some **rapidjson** internals are Windows specific (e.g., _/include/rapidjson/msinttypes_ subfolder content) and I don’t really confident with Meson build setup procedure. . Actually, I generated the **all_cubics_extended_JSON_binary** variable in the following way.; **CoolProp** library contains dozens of json files from which I assembled the single file for my own needs. Then, I made some modifications to the _generate_headers.py_ file (under _/dev_ subfolder of the **CoolProp** root) and run it in order to translate my large json file into the C++ header file. The generated file is not as large (~1.3 MB) as it seems but verbose a little bit. Could you clarify what **tecplot** sources do you mean?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879:570,variab,variable,570,https://su2code.github.io,https://github.com/su2code/SU2/pull/1402#issuecomment-942054879,2,['variab'],['variable']
Modifiability,Bug in config.py prevents asserts from providing correct error message,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/141:7,config,config,7,https://su2code.github.io,https://github.com/su2code/SU2/issues/141,1,['config'],['config']
Modifiability,Bugfix: temporary config filename,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1576:18,config,config,18,https://su2code.github.io,https://github.com/su2code/SU2/pull/1576,1,['config'],['config']
Modifiability,"By ""Sliding State layer"", do you mean a virtual `CVariable::GetSlidingMeshDonorVariable` that returns 0 by default, but forwards to `GetSolution` on the flow and `GetPrimitive` on the turb variables?",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1344#issuecomment-892577112:189,variab,variables,189,https://su2code.github.io,https://github.com/su2code/SU2/pull/1344#issuecomment-892577112,1,['variab'],['variables']
Modifiability,"By running exactly the same mesh and config flle on Linux Centos 8 with two version of SU2, it leads to two different values for the wetted area which is calculated during the initialization. with SU2 v7.0.3:. > Finding max control volume width.; > Semi-span length = 13.5934 m.; > **Wetted area = 466.385 m^2.**; > Area projection in the x-plane = 19.4802 m^2, y-plane = 109.691 m^2, z-plane = 165.851 m^2.; > Max. coordinate in the x-direction = 34.8253 m, y-direction = 13.5934 m, z-direction = 5.44607 m.; > Min. coordinate in the x-direction = -0.00557099 m, y-direction = -13.5934 m, z-direction = -1.75235 m. with SU2 v7.1.0:. > Finding max control volume width.; > Semi-span length = 13.5934 m.; > **Wetted area = 1.85378e-06 m^2.**; > Area projection in the x-plane = 19.4802 m^2, y-plane = 109.691 m^2, z-plane = 165.851 m^2.; > Max. coordinate in the x-direction = 34.8253 m, y-direction = 13.5934 m, z-direction = 5.44607 m.; > Min. coordinate in the x-direction = -0.00557099 m, y-direction = -13.5934 m, z-direction = -1.75235 m. Regarding my geometry and the other values given, the second one (v7.1.0) seems to be the wrong one.",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1190:37,config,config,37,https://su2code.github.io,https://github.com/su2code/SU2/issues/1190,1,['config'],['config']
Modifiability,"By the way, I have another set up updates for you guys to consider that are; beyond the scope of this pull request. Let me know if you are waiting on me; to close the pull request or if you can do that. I put the recommended changes for the structure of config.py file in a gist; https://gist.github.com/spendres/7bbe6eb60fac1f2f148a that separates the; low level config errors validation. I also created a few unit test cases to; allow a controlled build up of regex checks without risk of breaking; previous bug fixes. Let me know. Steve. On Sat, Jan 10, 2015 at 11:34 PM, Steven Endres spendres@gmail.com wrote:. > thanks for the commands; > ; > On Sat, Jan 10, 2015 at 11:54 AM, Trent Lukaczyk <notifications@github.com; > ; > > wrote:; > > ; > > so now the file is being committed as deleted... please roll back to this; > > commit; > > spendres@6cbddbe; > > https://github.com/spendres/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ; > > here are the commands you can use --; > > Reset the index to the desired tree; > > ; > > git reset 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > Move the branch pointer back to the previous HEAD; > > ; > > git reset --soft HEAD@{1}; > > ; > > git commit -m ""Revert to 6cbddbe; > > https://github.com/su2code/SU2/commit/6cbddbe59cf5da89e89321b72ae20ab289a66520; > > ""; > > Update working copy to reflect the new commit; > > ; > > git reset --hard; > > ; > > —; > > Reply to this email directly or view it on GitHub; > > https://github.com/su2code/SU2/pull/144#issuecomment-69462490.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144#issuecomment-69498342:254,config,config,254,https://su2code.github.io,https://github.com/su2code/SU2/pull/144#issuecomment-69498342,2,['config'],['config']
Modifiability,C header files... yes; checking for sys/types.h... yes; checking for sys/stat.h... yes; checking for stdlib.h... yes; checking for string.h... yes; checking for memory.h... yes; checking for strings.h... yes; checking for inttypes.h... yes; checking for stdint.h... yes; checking for unistd.h... yes; checking size of short int... 2; checking size of int... 4; checking size of unsigned int... 4; checking size of long int... 8; checking size of float... 4; checking size of double... 8; checking size of void *... 8; checking X11/Intrinsic.h usability... no; checking X11/Intrinsic.h presence... no; checking for X11/Intrinsic.h... no; <<< Configuring library with Metis support >>>; <<< Configuring library with Parmetis support >>>; <<< Configuring library with CGNS support >>>; checking for ../externals/codi/include/codi.hpp... yes; checking for ../externals/medi/include/medi/medi.hpp... yes; checking that generated files are newer than configure... done; configure: creating ./config.status; config.status: creating externals/tecio/Makefile; config.status: creating externals/metis/Makefile; config.status: creating externals/parmetis/Makefile; config.status: creating externals/cgns/Makefile; config.status: creating Makefile; config.status: creating externals/Makefile; config.status: creating Common/lib/Makefile; config.status: creating SU2_CFD/obj/Makefile; config.status: creating SU2_DOT/obj/Makefile; config.status: creating SU2_MSH/obj/Makefile; config.status: creating SU2_DEF/obj/Makefile; config.status: creating SU2_SOL/obj/Makefile; config.status: creating SU2_GEO/obj/Makefile; config.status: creating SU2_PY/Makefile; config.status: creating SU2_PY/pySU2/Makefile; config.status: executing depfiles commands. -------------------------------------------------------------------------; | ___ _ _ ___ |; | / __| | | |_ ) Release 6.1.0 'Falcon' |; | \__ \ |_| |/ / |; | |___/\___//___| Suite |; | |; -------------------------------------------------------------------------; | The,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/587:5937,config,config,5937,https://su2code.github.io,https://github.com/su2code/SU2/issues/587,1,['config'],['config']
Modifiability,CaeStrXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/runtimeWrite.c (443) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sdf (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.sln (26) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.suo (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/CaeUnsSU2.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/UpgradeLog.XML (47) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.css (207) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport.xslt (232) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Minus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/_UpgradeReport_Files/UpgradeReport_Plus.gif (0) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/module.mk (240) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsSU2/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:15228,plugin,plugins,15228,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,CaeUnsXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/CaeUnsXML.vcxproj.user (3) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/module.mk (239) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/modulelocal-sample.mk (84) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInitItems.h (98) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepInstanceData.h (135) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtCaepSupportData.h (89) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpInitItems.h (68) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpPluginInfo.h (75) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/rtPwpVersions.h (62) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeUnsXML/runtimeWrite.c (347) ; - D MeshTools/PointwiseSU2plugin/src/plugins/README.txt (272) ; - D MeshTools/PointwiseSU2plugin/src/plugins/module.mk (309) ; - D MeshTools/PointwiseSU2plugin/src/plugins/modulelocal.mk (8) ; - D MeshTools/PointwiseSU2plugin/src/plugins/pluginRegistry.h (29) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.c (228) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEP.h (550) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.c (290) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/apiCAEPUtils.h (725) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/CAEP/runtimeWrite.h (57) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.c (492) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWGM/apiGridModel.h (1808) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.c (132) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWP.h (707) ; - D MeshTools/PointwiseSU2plugin/src/plugins/shared/PWP/apiPWPUtils.c (789) ; - D MeshTools/PointwiseSU2plugin/src/plugins/sha,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:18071,plugin,plugins,18071,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,2,['plugin'],['plugins']
Modifiability,Can we set Velocity_Ref to 1.0 and Alpha and Beta to 0.0 in case ModVel_Freestream is zero in SetNondinemsionalisation routine? There might some cases of pure rotation with zero free stream velocity which makes many variables in Pressure_Forces/Momentum_Forces/Friction_Forces undefined because Velocity_Ref goes to zero.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/472#issuecomment-346165153:216,variab,variables,216,https://su2code.github.io,https://github.com/su2code/SU2/pull/472#issuecomment-346165153,1,['variab'],['variables']
Modifiability,"Can you confirm what results you're actually getting with the `SUPERSONIC_SHOCK` option? I'm having trouble producing something like what you see in the figure above. When I run the `SUPERSONIC_SHOCK` option, I get no elements adapted (3626 elements for both cases). This has to due with how the supersonic shock refinement is set up, which seems ad-hoc. I don't think the `SUPERSONIC_SHOCK` option can be used for general cases. Other developers know more about this than me--that section of the code goes all the way back to v1.0 of SU2. Maybe @fpalacios or @economon can tell you more about the mesh adaptation?. You might also be interested in the recent collaboration between the SU2 developers and the developers of the INRIA-AMG library. It seems like SU2 development is moving away from in-house mesh adaptation codes and more towards leveraging the AMG library. There was a presentation about it back in 2016 [that you can find here](https://su2code.github.io/documents/su2_dev_alonso.pdf). There was also a talk about it at the recent SU2 conference that [you can watch here on YouTube](https://youtu.be/jkZaPsKDvvQ?t=16318).",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/606#issuecomment-438766705:227,adapt,adapted,227,https://su2code.github.io,https://github.com/su2code/SU2/issues/606#issuecomment-438766705,3,['adapt'],"['adaptation', 'adapted']"
Modifiability,"Can you describe a bit more the stopping strategy you want? The new output structure is much more flexible than before, and you can even use Cauchy criteria based on time averages (of pretty much any coefficient), with different windowing methods and so on.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1304#issuecomment-862396862:98,flexible,flexible,98,https://su2code.github.io,https://github.com/su2code/SU2/issues/1304#issuecomment-862396862,1,['flexible'],['flexible']
Modifiability,Change lower limit of SST variables,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2323:26,variab,variables,26,https://su2code.github.io,https://github.com/su2code/SU2/pull/2323,1,['variab'],['variables']
Modifiability,Changed the registration of AD input variables in CDiscAdjFluidIteration,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1492:37,variab,variables,37,https://su2code.github.io,https://github.com/su2code/SU2/pull/1492,1,['variab'],['variables']
Modifiability,"Charanya,. thanks for the detailed answer. Let me ask you some more info. Apparently, you where able to reproduce the results I had comparing the two code versions simply using different boundary conditions on the latest code version. Can you specify me how?. Tobi,. In the meanwhile, to narrow down the problem, I ran also a couple tests in 2D to seek confirmation. For the (Euler) **pitching_NACA64A010.cfg** test case in the repository I rerun the same test at AoA of 1 deg and removing the pitching (no mesh deforming). I attach config files and summaries relative to the test cases. [config_CFD_6_2_0.txt](https://github.com/su2code/SU2/files/3938858/config_CFD_6_2_0.txt); [Summary_6_2_0.txt](https://github.com/su2code/SU2/files/3938859/Summary_6_2_0.txt); [config_CFD_6_0_1.txt](https://github.com/su2code/SU2/files/3938863/config_CFD_6_0_1.txt); [Summary_6_0_1.txt](https://github.com/su2code/SU2/files/3938865/Summary_6_0_1.txt). In this case the situation is definitely better as the two solvers give the same results. It looks like it is an issue related to the 3D case. <img width=""1220"" alt=""Screenshot 2019-12-09 at 11 27 27"" src=""https://user-images.githubusercontent.com/23583209/70424365-f316a780-1a77-11ea-8f68-4fc83e188ed7.png"">. I also quote Charanya in saying that it is definitely good that convergence to same values is reached but the transient response is fundamental and holds physical/mathematical values (I think of Wagner et similia) :). I would also suggest to add a regression test in this sense. Best, ; Rocco",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/828#issuecomment-563150217:533,config,config,533,https://su2code.github.io,https://github.com/su2code/SU2/issues/828#issuecomment-563150217,2,['config'],['config']
Modifiability,Check the value of the Equivalent Area (US units) and add ScaleFactor to the config file,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/112:77,config,config,77,https://su2code.github.io,https://github.com/su2code/SU2/issues/112,1,['config'],['config']
Modifiability,"Checkout the small_fixes branch please, I hope the problem is ""that"" simple as I will not debug that function any further because it has the world record for nested loops. If it does not work you will have to hope for help from the turbo folks.; ```c++; for (iMarker = 0; iMarker < nMarker; iMarker++){; for (iMarkerTP=1; iMarkerTP < config->GetnMarker_Turbomachinery()+1; iMarkerTP++){; if (config->GetMarker_All_Turbomachinery(iMarker) == iMarkerTP){; if (config->GetMarker_All_TurbomachineryFlag(iMarker) == marker_flag){; for (iVertex = 0; iVertex < nVertex[iMarker]; iVertex++) {; iPoint = vertex[iMarker][iVertex]->GetNode();; for (jMarker = 0; jMarker < nMarker; jMarker++){; if (config->GetMarker_All_KindBC(jMarker) == PERIODIC_BOUNDARY) {; PeriodicBoundary = config->GetMarker_All_PerBound(jMarker);; jVertex = nodes->GetVertex(iPoint, jMarker);; if ((jVertex != -1) && (PeriodicBoundary == (val_iZone + 1))){; coord = nodes->GetCoord(iPoint);; switch (config->GetKind_TurboMachinery(val_iZone)){; case CENTRIFUGAL; ```",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117:334,config,config,334,https://su2code.github.io,https://github.com/su2code/SU2/issues/1219#issuecomment-790064117,12,['config'],['config']
Modifiability,Clarify and extend AD tape choices,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2107:12,extend,extend,12,https://su2code.github.io,https://github.com/su2code/SU2/pull/2107,1,['extend'],['extend']
Modifiability,"Classic stale bot. There are only 2 fixes since the UR fix was merged into develop in #1057, the Inner vs TimeIter fix and turning off CFL adaptation for the discrete adjoint (which I just added). If we're holding off on any algorithmic changes, I guess the only thing to discuss is which CFL should be used for the discrete adjoint. As is, it'll use whatever's specified in CFL_NUMBER in the config file, but I'm personally in favor of storing the local CFL to reduce the bottleneck of the adjoint. This could also be part of a separate PR if you need the bug fixes yesterday.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644:139,adapt,adaptation,139,https://su2code.github.io,https://github.com/su2code/SU2/pull/1036#issuecomment-739058644,2,"['adapt', 'config']","['adaptation', 'config']"
Modifiability,Cleanup adaptation,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1153:8,adapt,adaptation,8,https://su2code.github.io,https://github.com/su2code/SU2/pull/1153,1,['adapt'],['adaptation']
Modifiability,Closer. It was just a versioning problem with the autotools. Looks like all we need to do now is clean up some old options left in the test case config files causing them to fail.,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/208#issuecomment-152448207:145,config,config,145,https://su2code.github.io,https://github.com/su2code/SU2/pull/208#issuecomment-152448207,1,['config'],['config']
Modifiability,"Collection of small improvements:; - Discrete Adjoint as default.; - New options in the config file: FROZEN_LIMITER_DISC, FROZEN_VISC_DISC, INCONSISTENT_DISC; - Fixing some issues with the multi objective design.; - Updating Xcode project",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/497:88,config,config,88,https://su2code.github.io,https://github.com/su2code/SU2/pull/497,1,['config'],['config']
Modifiability,Common/src/su2mpi.cpp (41) ; - M Common/src/vector_structure.cpp (46) ; - D Doxygen/Doxyfile (2368) ; - M INSTALL (2) ; - D Logo/logo_su2.jpg (0) ; - D Logo/su2_eagle.png (0) ; - M Makefile.am (32) ; - M Makefile.in (53) ; - D MeshTools/Matlab/MergeSU2.m (77) ; - D MeshTools/Matlab/ReadSU2.m (160) ; - D MeshTools/Matlab/WriteSU2.m (91) ; - D MeshTools/Matlab/angle2dcm.m (28) ; - D MeshTools/Matlab/example_MergeMeshes.m (38) ; - D MeshTools/Matlab/getElemTypeInfo.m (52) ; - D MeshTools/Matlab/mesh_bipara_1.su2 (38465) ; - D MeshTools/Matlab/mesh_bipara_2.su2 (3248) ; - D MeshTools/Matlab/plotElem.m (45) ; - D MeshTools/Matlab/plotFace.m (60) ; - D MeshTools/Matlab/plotMarkers.m (64) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.linux_x86_64 (33) ; - D MeshTools/PointwiseSU2plugin/FLAGS.macosx (112) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win (14) ; - D MeshTools/PointwiseSU2plugin/FLAGS.win32 (33) ; - D MeshTools/PointwiseSU2plugin/Makefile (304) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.sln (64) ; - D MeshTools/PointwiseSU2plugin/PluginSDK.suo (0) ; - D MeshTools/PointwiseSU2plugin/depend.sh (28) ; - D MeshTools/PointwiseSU2plugin/mkplugin (10) ; - D MeshTools/PointwiseSU2plugin/mkplugin.bat (82) ; - D MeshTools/PointwiseSU2plugin/mkplugin.tcl (422) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win32Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.props (28) ; - D MeshTools/PointwiseSU2plugin/src/Pointwise/Win64Target.vsprops (24) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj (511) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcproj.PWI.dgarlisch.user (121) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj (307) ; - D MeshTools/PointwiseSU2plugin/src/plugins/CaeStrXML/CaeStrXML.vcxproj.filters (78) ; - D MeshTools/PointwiseSU2plugin/src/,MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/174#issuecomment-101443812:13243,Plugin,PluginSDK,13243,https://su2code.github.io,https://github.com/su2code/SU2/pull/174#issuecomment-101443812,1,['Plugin'],['PluginSDK']
Modifiability,Compilation issues with spack and meson and a configure-make workaround,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/1037:46,config,configure-make,46,https://su2code.github.io,https://github.com/su2code/SU2/issues/1037,1,['config'],['configure-make']
Modifiability,"Compile ERROR: Dependency ""mpi"" not found, tried pkgconfig, config-tool and system",MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/2114:60,config,config-tool,60,https://su2code.github.io,https://github.com/su2code/SU2/issues/2114,1,['config'],['config-tool']
Modifiability,Composition-dependent density model for variable density incompressible flow,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/1620:40,variab,variable,40,https://su2code.github.io,https://github.com/su2code/SU2/pull/1620,1,['variab'],['variable']
Modifiability,Config bug fix,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/144:0,Config,Config,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/144,1,['Config'],['Config']
Modifiability,"Config options and their options can be found in:; https://github.com/su2code/SU2/blob/master/config_template.cfg; As a part of the code repository, this document will remain up to date with whatever version of the code you have. I believe that this is the single document to which you refer. I apologize that its location or purpose may not have been clear - I will shortly go edit the wiki to see if I can make it clearer that this file exists. . Additionally, the file config_template_basic.cfg in the same directory is a shorter version with only the options most commonly used. . Further documentation of the config options is also available in the comments of:; https://github.com/su2code/SU2/blob/master/Common/src/config_structure.cpp. And although it has not been up to date as we moved towards the wiki and config file template rather than keeping doxygen up to date, additional documentation can be produced using the files in su2code/Documentation/Doxygen.",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/183#issuecomment-111755617:0,Config,Config,0,https://su2code.github.io,https://github.com/su2code/SU2/issues/183#issuecomment-111755617,5,"['Config', 'config']","['Config', 'config']"
Modifiability,"Config, mesh and inlet file for anyone who wants to run the code:; https://mailuc-my.sharepoint.com/:f:/g/personal/baigan_mail_uc_edu/Ep03wpFrJW1Hvwa73U_Sp6QBaZ_dNyyynRcwWZFCIMF0lQ?e=t5UZb4. @pcarruscag I re-wrote the entire code doing changes as you suggested. The code was working fine standalone as far as creating the CInletInterpolation pointer and interpolation functions are concerned. However, I get a segmentation error and the interpolation fails. I have tried to see if there are any memory issues but couldn't find any (as far as I know). I will appreciate any help. Thanks!",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/815#issuecomment-581192013:0,Config,Config,0,https://su2code.github.io,https://github.com/su2code/SU2/pull/815#issuecomment-581192013,1,['Config'],['Config']
Modifiability,"Cool results @jayantmukho, few questions (which maybe you have answered somewhere already); - If someone wants to play around with the same case, are your configs available somewhere? (asking for a friend); - The grid levels in the plots correspond to the meshes available through that link right?; - Did you run the other solvers yourself? If so how does the runtime compare?; - The non monotonic variation with LSQ+GG is a bit weird, did the case converge to the same level? (I had some cases that at very high CFL would stagnate and not converge properly)",MatchSource.ISSUE_COMMENT,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/790#issuecomment-553517069:155,config,configs,155,https://su2code.github.io,https://github.com/su2code/SU2/pull/790#issuecomment-553517069,1,['config'],['configs']
Modifiability,CoolProp enhancement,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/pull/2021:9,enhance,enhancement,9,https://su2code.github.io,https://github.com/su2code/SU2/pull/2021,1,['enhance'],['enhancement']
Modifiability,Correct commenting of variables within CFluidModel class,MatchSource.ISSUE,su2code,SU2,v8.1.0,https://github.com/su2code/SU2/issues/414:22,variab,variables,22,https://su2code.github.io,https://github.com/su2code/SU2/issues/414,1,['variab'],['variables']
