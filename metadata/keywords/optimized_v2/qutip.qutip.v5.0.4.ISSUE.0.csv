quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Availability," (to allow us to keep track of empty spaces), but a `Qobj` whose dimensions would be a `Compound` made entirely of `Field` will instead become a Python complex number. The dimensions types should be available for advanced users (to allow them to access the full parsing speed-ups), but should not be presented as the standard choice. I propose we place the types inside a nested namespace, such as `qutip.dims` (logically - physically it would be `qutip/core/dims.py`), to allow the form `from qutip.dims import *` where appropriate without forcing the user to do the modern bad practice left over from our MATLAB past `from qutip import *`. ## User impact. In principle, nothing will change for the normal QuTiP user compared to the 4.x branch. You will still be able to supply the `dims` argument to the `Qobj` constructor as lists in the exact same format, and they will be parsed in the same way. Users _do not_ need to type out the new computer-friendly dimensions objects, but they will be available for advanced users who frequently make `Qobj` using the raw constructor with funny dimensions. We will publicly provide `qutip.dims.parse` to turn a list into the new form, so even advanced users do not need to type out all the nonsense. `Qobj` factory functions that take a `dims` parameter should now also accept the new form. Since almost all of them just pass this directly to the `dims` argument in the `Qobj` constructor, this likely won't involve any developer effort. `Qobj` construction overhead should be reduced to near-zero when passed a new dimensions object, which we will always do within the library. Compared to the 4.x branch, the overhead of `Qobj` will shrink from ~100µs to ~1µs in library code, even for functions where the `Qobj` type cannot be cleanly inferred from the input types. ## Particular points worth commenting on. 1. Are there currently valid `Qobj` that cannot be represented with this system?; 2. Should we push to implement basis-safety for QuTiP 5.x?; 3. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1421:10157,avail,available,10157,https://qutip.org,https://github.com/qutip/qutip/issues/1421,1,['avail'],['available']
Availability," - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); /nix/store/7v2yn16c9sr8ysdpan9yd2a60a1sizv7-python3.11-qutip-4.7.5/lib/python3.11/site-packages/qutip/tests/test_countstat.py:58: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ; args = (<function assert_allclose.<locals>.compare at 0xfffeb718f880>, array([0.0007729 , 0.00087857, 0.00099616, 0.00112145,...9, 0.00142197, 0.00144314, 0.00142247, 0.00135199,; 0.0012452 , 0.00112145, 0.00099616, 0.00087857, 0.0007729 ])); kwds = {'equal_nan': True, 'err_msg': '', 'header': 'Not equal to tolerance rtol=1e-07, atol=0.0001', 'verbose': True}; @wraps(func); def inner(*args, **kwds):; with self._recreate_cm():; > return func(*args, **kwds); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.00035163; E Max relative difference: 0.26008554; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001704, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); E y: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001352, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); /nix/store/dz8lm4h0ivibad5kfc0ya3p3zqyd2fyf-python3-3.11.7/lib/python3.11/contextlib.py:81: AssertionError; =========================== short test summary info ============================; FAILED ../tests/test_countstat.py::test_dqd_current - AssertionError:; ```. ### Expected Behaviour. unit test succeeds. ### Your Environment. ```shell; QuTiP Version: 4.7.5; Numpy Versi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:2637,toler,tolerance,2637,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['toler'],['tolerance']
Availability," 2 spaces:. ket: Dimensions(Field, Space); bra: Dimensions(Space, Field); oper: Dimensions(Space, Space); ... This Dimension is the `Map` proposed by Jake, but ket are map from `Field` to `Space` and not `Space` themselves. Spaces come into multiple sub classes as proposed : `Space`, `SuperSpace`, `Field`, `Compound`, and `EnrSpace`. Splitting maps and spaces simplify spaces by not needing to have a dummy 2nd dims. Dimensions can be initiated from a list and converted back to one. Field are automatically contracted: `Compound(Field, Field)` is a `Field`, same for maps. With the exceptions that `Qobj` with a shape of `(1,1)` with be a `Dimensions(Field, Field)` and not a `Field`. . Some previously valid and used list format are no longer accepted. Playing with of tensor of super operators, `permute` and `reshuffle`, you could make object with dims as `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]` which can be interpreted as the tensor of 3 super operators. But then `[[[2, 2], [3, 3]], [[2, 2],[3, 3]]]` can both be interpreted as tensor of super operator or super operator of tensor spaces, so : ; - `[[[2, 2], [3, 3], [4, 4]], [[2, 2], [3, 3], [4, 4]]]`: Error; - `[[[2, 2], [4, 4]], [[2, 2], [4, 4]]]`: list representation of dimensions of `to_super(tensor(oper, oper))`; - `[[[2], [2], [3], [3]], [[2], [2], [3], [3]]]`: list representation of dimensions of `tensor(to_super(oper), to_super(oper))`. Dimensions object have a `type` and `shape` set a initialization. There is a check when creating/ modifying a `Qobj` with between the data's shape and dims's shape and an error is raise when they are not matching. . Since operator-ket have a `superrep`, I added the `superrep` parameter to the Superspace instead of the dimensions, for now. But a better look at super operator representation is needed. `Qobj.dims` take and return a list, keeping the dimension object internally. From there, minimal adjustment were made so test pass. **Related issues or PRs**; Replace #1826",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1996:1556,Error,Error,1556,https://qutip.org,https://github.com/qutip/qutip/pull/1996,2,"['Error', 'error']","['Error', 'error']"
Availability," 50-branch `if/elif` (in the bad cases) based on the name. `QubitCircuit` shouldn't need the million `_gate_resolved` functions - if there's a `Gate` class, instances of that (whether done by subclass or composition) should be supplying it (though the lookup table is a good choice under the circumstances). Given how `circuit.py` currently organises its data, it feels like you have to introduce some seemingly arbitrary splits to keep CodeClimate happy, but I'd argue the problem is the data structure, and CodeClimate is right to complain about the complexity. In stuff like compilers, there's a reason code compilers do parsing->verification->optimisation, with several passes in the last one, and transform things internally into a very strict intermediate representation at every step. `Qobj._repr_latex_` was like this - the `master` version is claimed to be like ""78"" complexity, but I'd be prepared to bet CodeClimate would have the `dev.major` version less than 10 and I think the output is near byte-for-byte identical. The change is that the `master` version basically reimplements the same algorithm 4 times with complex, split up for loops (not to mention that for some reason the alignment and new-line characters are considered part of formatting a number?). The `dev.major` version first decides if it's going to truncate the rows and/or columns, then it just calls a formatter on each row it decided it wants rendering with a special value to say when it should output a truncation character, and then joins the rows together. Obviously it's not _always_ the data structure - e.g. in `propagator` the branching to choose an evaluation method is fine, but once it's chosen, it should delegate to specialised methods. That way, the maintainer can verify the branching paths with a nice top-down overview without 50 lines of specialised logic inbetween each one, then you can verify each specialised path independently. If you did that, I'm sure the ""complexity"" would drop to like 10.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1447#issuecomment-782249555:3256,down,down,3256,https://qutip.org,https://github.com/qutip/qutip/pull/1447#issuecomment-782249555,1,['down'],['down']
Availability," ; ```. and I get this error repeatedly when using the `steadystate` function. . ```; OSError Traceback (most recent call last); <ipython-input-3-4ef4797a881f> in <module>; 30 g2_v = []; 31 for p, x in enumerate(Gamma_vec):; ---> 32 j, z = calculate_avg_photons(N, x); 33 print(p); 34 n_avg.append(j). <ipython-input-3-4ef4797a881f> in calculate_avg_photons(N, Gamma); 18 c_ops.append(np.sqrt(rate)*sm.dag()); 19 ; ---> 20 rho = steadystate(H,c_ops); 21 n_cav = expect(a.dag()*a,rho); 22 g2_cav = expect(a.dag()*a.dag()*a*a,rho)/(n_cav**2). ~\Anaconda\lib\site-packages\qutip\steadystate.py in steadystate(A, c_op_list, method, solver, **kwargs); 288 if (ss_args['solver'] == 'scipy' and ss_args['sparse']) \; 289 or ss_args['solver'] == 'mkl':; --> 290 return _steadystate_direct_sparse(A, ss_args); 291 else:; 292 return _steadystate_direct_dense(A, ss_args). ~\Anaconda\lib\site-packages\qutip\steadystate.py in _steadystate_direct_sparse(L, ss_args); 458 max_iter_refine=ss_args['max_iter_refine'],; 459 scaling_vectors=ss_args['scaling_vectors'],; --> 460 weighted_matching=ss_args['weighted_matching']); 461 _direct_end = time.time(); 462 ss_args['info']['solution_time'] = _direct_end-_direct_start. ~\Anaconda\lib\site-packages\qutip\_mkl\spsolve.py in mkl_spsolve(A, b, perm, verbose, **kwargs); 391 # Do dense RHS solving; 392 if not b_is_sparse:; --> 393 x = lu.solve(b, verbose=verbose); 394 # Solve each RHS vec individually and convert to sparse; 395 else:. ~\Anaconda\lib\site-packages\qutip\_mkl\spsolve.py in solve(self, b, verbose); 168 byref(c_int(33)), byref(c_int(self._dim)), self._data, self._indptr, self._indices,; 169 self._np_perm, byref(c_int(nrhs)), self._np_iparm, byref(c_int(0)), np_b,; --> 170 np_x, np_error); 171 self._solve_time = time.time() -_solve_start; 172 if error[0] != 0:. OSError: exception: access violation reading 0x0000000000000008; ``` . The does not raise every time I use the function and it has a different number at the end everytime it is shown.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077:2849,error,error,2849,https://qutip.org,https://github.com/qutip/qutip/issues/1077,1,['error'],['error']
Availability," > 'open', open)(__file__);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, __file__, 'exec'))"" install; > --record /tmp/pip-lnsaamvm-record/install-record.txt; > --single-version-externally-managed --compile"" failed with error code; > 1 in /tmp/pip-build-n7ekqm4y/qutip/|; >; > Then I tried easy_install, which gave me:; >; > |Processing qutip Writing /home/jakeargent/qutip/setup.cfg Running; > setup.py -q bdist_egg --dist-dir; > /home/jakeargent/qutip/egg-dist-tmp-9_egnp34 Installing without the; > fortran mcsolver. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. error: Setup script exited with error: Command ""gcc; > -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes; > -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC; > -Wformat -Wformat-security -fno-omit-frame-pointer; > -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions; > -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error; > -Wp,-D_REENTRANT -fPIC; > -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:1510,down,down,1510,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,1,['down'],['down']
Availability," > > > wigner: compare wigner methods for random density matrices ... ok; > > > wigner: compare wigner methods for random state vectors ... ok; # ; ## ERROR: Failure: ValueError (invalid literal for int() with base 10: '1post0'). Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/loader.py"", line 411, in loadTestsFromName; addr.filename, addr.module); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 47, in importFromPath; return self.importFromDir(dir_path, fqname); File ""/usr/lib/python2.7/dist-packages/nose/importer.py"", line 94, in importFromDir; mod = load_module(part_fqname, fh, filename, desc); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mcsolve.py"", line 232, in <module>; @unittest.skipIf(version2int(Cython.**version**) < version2int('0.14') or; File ""/usr/local/lib/python2.7/dist-packages/qutip/**init**.py"", line 35, in version2int; return sum([int(d) \* (100 *\* (3 - n)) for n, d in enumerate(str_list[:3])]); ValueError: invalid literal for int() with base 10: '1post0'; # ; ## ERROR: mesolve: simple time-dependence as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_mesolve.py"", line 398, in testMESimpleTDDecayAsStrList; medata = mesolve(H, psi0, tlist, c_op_list, [a.dag() \* a], args=args); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 209, in mesolve; expt_ops, args, options); File ""/usr/local/lib/python2.7/dist-packages/qutip/mesolve.py"", line 525, in _mesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; ImportError: No module named rhs0; # ; ## ERROR: mesolve: constant decay as string list. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_me",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:15179,ERROR,ERROR,15179,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['ERROR'],['ERROR']
Availability," Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+564c987b; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/tarun/riken-work/qutip/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. ```; @nathanshammah ran this on his Mac, and had the following results. The file runs fine on his Mac with . - (1) conda release 4.4.1; - (2) development version 4.5.0.dev0+f77f7e4a (previous to Eric's PR merge); - (3) updating the current development version 4.5.0.dev0+564c987b (with python setup.py develop). The file throws an error when:; - (4) updating the current development version 4.5.0.dev0+564c987b (with python setup.py install). Error message (then the code runs anyway):; ```; (qutipdev45) nathans-mbp:Downloads nathanshammah$ python fidel.py; /Users/nathanshammah/.pyxbld/temp.macosx-10.9-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error:; 'src/zspmv_openmp.hpp' file not found; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. His qutip.about(): . ```; QuTiP Version: 4.5.0.dev0+f77f7e4a (or others); Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```. Notice that in his case OPEN MP seems installed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:1934,error,error,1934,https://qutip.org,https://github.com/qutip/qutip/issues/1109,5,"['Down', 'Error', 'error']","['Downloads', 'Error', 'error']"
Availability," AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_brtools.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_control_pulseoptim.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_correlation.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:2554,ERROR,ERROR,2554,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_dimensions.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_eigenstates.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_enr_state_operator.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_entropy.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:5865,ERROR,ERROR,5865,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_operators.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_parallel.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/test_partial_transpose.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_piqs.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:13907,ERROR,ERROR,13907,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_control_pulseoptim.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_correlation.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_countstat.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_cqed.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:3505,ERROR,ERROR,3505,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/test_partial_transpose.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_piqs.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_propagator.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_ptrace.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:14856,ERROR,ERROR,14856,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_me.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_se.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_subsys_apply.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_superop_reps.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:25261,ERROR,ERROR,25261,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_se.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_subsys_apply.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_superop_reps.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_superoper.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:25734,ERROR,ERROR,25734,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_subsys_apply.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_superop_reps.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_superoper.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_td_formats.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:26209,ERROR,ERROR,26209,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_superop_reps.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_superoper.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_td_formats.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_tensor.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:26681,ERROR,ERROR,26681,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_cy_structs.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_dimensions.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_eigenstates.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_enr_state_operator.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:5396,ERROR,ERROR,5396,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_td_formats.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_tensor.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_three_level.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_utilities.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:27627,ERROR,ERROR,27627,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_countstat.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_cqed.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_cy_structs.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_dimensions.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:4450,ERROR,ERROR,4450,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_brtools.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_control_pulseoptim.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_correlation.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_countstat.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:3031,ERROR,ERROR,3031,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_entropy.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_expect.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_fastsparse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_fileio.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:7288,ERROR,ERROR,7288,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_random.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_rhs_reuse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_scattering.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:20532,ERROR,ERROR,20532,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sp_eigs.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sparse.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_spinchain.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_spmath.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:22425,ERROR,ERROR,22425,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_spmath.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_states.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_steadystate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_me.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:23843,ERROR,ERROR,23843,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_tensor.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_three_level.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_utilities.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_wigner.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; !!!!!!!!!!!!!!!!!!! Interrupted: 60 errors du",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:28101,ERROR,ERROR,28101,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_cqed.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_cy_structs.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_dimensions.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_eigenstates.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:4923,ERROR,ERROR,4923,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_gates.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_graph.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_heom_solver.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_interpolate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:9653,ERROR,ERROR,9653,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_graph.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_heom_solver.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_interpolate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mcsolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:10126,ERROR,ERROR,10126,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_rand.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_random.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_rhs_reuse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_scattering.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:20060,ERROR,ERROR,20060,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_mkl.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_openmp.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_operators.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_parallel.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:12965,ERROR,ERROR,12965,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qpt.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/test_qubit_evolution.py _____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_qubitcircuit.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qubits.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:18166,ERROR,ERROR,18166,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability," I do `import qutip as qt`, a different error occurs:; ```; AttributeError Traceback (most recent call last); <ipython-input-8-ea74e5ab1d35> in <module>; 1 # Evolve the system, request the solver to call process_rho at each time step.; 2 ; ----> 3 qt.mesolve(h_t, psi0, taulist, [], process_rho, args). ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 216 if not use_mesolve:; 217 return sesolve(H, rho0, tlist, e_ops=e_ops, args=args, options=options,; --> 218 progress_bar=progress_bar, _safe_mode=_safe_mode); 219 ; 220 if isket(rho0):. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 135 ; 136 res = _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, options,; --> 137 progress_bar, dims=psi0.dims); 138 if e_ops_dict:; 139 res.expect = {e: res.expect[n]. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 360 if expt_callback:; 361 # use callback method; --> 362 output.expect.append(e_ops(t, Qobj(cdata, dims=dims))); ...; ---> 16 evals_mat[idx[0],:] = qt.real(evals); 17 ; 18 # find the overlap between the eigenstates and psi. AttributeError: module 'qutip' has no attribute 'real'; ```. ### Code to Reproduce the Bug. [This notebook](https://nbviewer.ipython.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb). ### Code Output. _No response_. ### Expected Behaviour. Evolve the system without incurring any error. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.20.1; Scipy Version: 1.6.2; Cython Version: 0.29.30; Matplotlib Version: 3.3.4; Python Version: 3.7.7; Number of CPUs: 72; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930:3307,error,error,3307,https://qutip.org,https://github.com/qutip/qutip/issues/1930,1,['error'],['error']
Availability," I suggest we consider dropping most of them, and consequently their surrounding `Cython` code to ease maintainability and reduce code bloat of the repository. First, a couple of arguments against doing so:; - the versions in `scipy` and `qutip` did subsequently diverge in some form, because they no longer universally give the same results, possibly as a result of #654.; - the `qutip` version of `reverse_cuthill_mckee` is about 10% faster than the `scipy` version; - people may be using them. I think the main argument in favour of removal is that they're now also in `scipy` as `scipy.sparse.csgraph`. For the speed argument, for 1000 by 1000 matrices we're talking 780us vs 850us per matrix difference, so it's unlikely to be a limiting factor, and I think the ability to remove a large chunk of Cython code and maintainability cost outweighs this. I began investigating this because I was looking at `qutip.graph.reverse_cuthill_mckee`, since some of its tests are incorrect. The error is here:; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/tests/test_graph.py#L91-L108; Line 105 is broken: it should read; ```python; assert np.all(ans_perm == perm); ```; to test if _all_ the elements match. As it stands, it currently tests that _not all are different_, or in other words, it would only fail if not a single element in the two arrays matched. On fixing this line, we then learn that the test is actually a failing test, because the expected and actual results do not match (though they do however have equal bandwidths). I also note that `qutip` and `matlab` are in disagreement for the test case there: for the matrix; ```python; np.array([[0, 0, 0, 1, 0, 1, 0, 0, 0, 0],; [0, 0, 1, 0, 1, 0, 1, 0, 0, 1],; [0, 1, 0, 1, 1, 0, 0, 0, 0, 0],; [1, 0, 1, 0, 0, 1, 0, 0, 1, 0],; [0, 1, 1, 0, 0, 0, 1, 0, 0, 0],; [1, 0, 0, 1, 0, 0, 1, 1, 0, 0],; [0, 1, 0, 0, 1, 1, 0, 1, 0, 0],; [0, 0, 0, 0, 0, 1, 1, 0, 0, 0],; [0, 0, 0, 1, 0, 0, 0, 0, 0, 0],; [0, 1, 0, 0, 0,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:1223,error,error,1223,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['error'],['error']
Availability," This is the case if one has data describing the time-dependent object which is not easy to write analytically. In `brmesolve` the only option is to provide time-dependent functions as strings (or Cubic_Spline). This works fine for the Hamiltonian, but the `a_ops` fail a check in cy/brcodegen.py when using a Cubic_Spline type. **To Reproduce**; ```python; import qutip as qt; import numpy as np. x = np.arange(0, 10, 0.1); decay = np.exp(-x); decay_spline = qt.Cubic_Spline(x[0], x[-1], decay). sol1 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol2 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol3 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; sol4 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; ```. On the cases it gives an error (sol3, sol4), it is `Exception: Invalid a_td_term.` from br_codegen.py (`aop_td_funcs()`).; Note that the Cubic_Spline representation works perfectly fine for the Hamiltonian part (e.g. sol2). It also appears to work fine if specifying `c_ops`. **Expected behavior**; My understanding from the documentation regarding time-dependent objects is that the Cubic_Spline representation should work for brmesolve at all argument positions, where appropriate (not just the Hamiltonian and c_ops). For example, at the above URL, we have: <br/>; ""When combining interpolating functions with other Python functions or strings, the interpolating class will automatically pick the appropriate method for calling the class. That is to say that, if for example, you have other time-dependent terms that are given in the string-format, then the cubic spline representation will also be passed in a string-compatible format. In the string-format, the interpolation function is compiled into c-code, and thus is quite fast. Th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624:1225,error,error,1225,https://qutip.org,https://github.com/qutip/qutip/issues/1624,1,['error'],['error']
Availability," Using cached scipy-1.9.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Using cached scipy-1.9.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.9.0-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.2 kB); Using cached setuptools-70.0.0-py3-none-any.whl (863 kB); Using cached packaging-24.0-py3-none-any.whl (53 kB); Using cached wheel-0.43.0-py3-none-any.whl (65 kB); Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.6 MB); Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl (4.9 kB); Using cached numpy-1.17.3-cp38-cp38-manylinux1_x86_64.whl (20.5 MB); Using cached scipy-1.8.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (41.6 MB); Installing collected packages: wheel, setuptools, packaging, numpy, cython, scipy, oldest-supported-numpy; ERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.; launchpadlib 1.10.13 requires testresources, which is not installed.; awkward-cpp 26 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; awkward 2.5.0 requires numpy>=1.18.0, but you have numpy 1.17.3 which is incompatible.; matplotlib 3.7.4 requires numpy<2,>=1.20, but you have numpy 1.17.3 which is incompatible.; pandas 2.0.3 requires numpy>=1.20.3; python_version < ""3.10"", but you have numpy 1.17.3 which is incompatible.; Successfully installed cython-3.0.2 numpy-1.17.3 oldest-supported-numpy-2023.12.21 packaging-24.0 scipy-1.8.1 setuptools-70.0.0 wheel-0.43.0; Installing build dependencies ... done; Running command Getting requirements to build wheel; Compiling qutip/core/_brtensor.pyx because it depends on /tmp/pip-build-env-t_hh31dy/overlay/lib/python3.8/site-packages/Cython/Includ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:3451,ERROR,ERROR,3451,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['ERROR'],['ERROR']
Availability," [ 75%]; qutip/tests/test_qobjevo.py::test_QobjEvo_with_state FAILED [ 77%]; qutip/tests/test_qobjevo.py::test_QobjEvo_pickle FAILED [ 80%]; qutip/tests/test_qobjevo.py::test_QobjEvo_safepickle FAILED [ 83%]; qutip/tests/test_qobjevo.py::test_QobjEvo_superoperator PASSED [ 86%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1] PASSED [ 88%]; qutip/tests/test_qobjevo.py::test_QobjEvo_tidyup_default[1e-15] PASSED [ 91%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_1_state_with_list_str_H FAILED [ 94%]; qutip/tests/test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H FAILED [ 97%]; qutip/tests/test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str FAILED [100%]. ======================================================================================================================================== FAILURES ========================================================================================================================================; __________________________________________________________________________________________________________________________ test_time_dependent_spline_in_c_ops ___________________________________________________________________________________________________________________________. def test_time_dependent_spline_in_c_ops():; N = 10; a = qutip.destroy(N); H = a.dag()*a; psi0 = qutip.basis(N, 9); times = np.linspace(0, 10, 100); kappa = 0.2; exact = 9 * np.exp(-2 * kappa * (1 - np.exp(-times))); a_ops = [[a + a.dag(), _string_w_interpolating_t(kappa, times)]]; collapse_points = np.sqrt(kappa) * np.exp(-0.5*times); c_ops = [[a, qutip.Cubic_Spline(times[0], times[-1], collapse_points)]]; > brme = qutip.brmesolve(H, psi0, times,; a_ops, e_ops=[a.dag()*a], c_ops=c_ops). /usr/lib/python3/dist-packages/qutip/tests/test_brmesolve_td.py:163: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293:8178,FAILURE,FAILURES,8178,https://qutip.org,https://github.com/qutip/qutip/issues/2293,1,['FAILURE'],['FAILURES']
Availability," `/qutip/tests` (I originally didn't like it, but I now see more and more benefits of the `/src` (or `/lib`) convention in Python projects).; - the current `qutip/tests` should entirely become `/test/qutip`; - a new `/src/qutip/test` becomes a fully-supported _public_ module, including base classes (such as the data-layer mixins) and things like that. We'd need to be careful, because reducing your possibilities for flexibility in testing generally sounds like a bad idea to me, but if we take care to be very limited, it could work. I suspect you won't be able to import the test suite from inside `qutip.core.data` because of cyclical dependencies, which is probably a good thing - it'll force us to put the structure the right way round immediately. For an idea pretty far out of left field:; - the data layer tests should really _discover_ the specialisations rather than us needing to specify them (this is true regardless of this PR); - if so, in the new form, we _could_ directly export this part of the test suite from `qutip.test` (our test suite would import this as well), and add a little bit of logic to allow filtering of which tests need to be run (class decorators, probably); - downstream packages could then test just by importing our classes and disabling any specialisations that are only on internal data-layer objects. I'm not 100% sure how I feel about this, but it's plausible - we'd still be able to add extra methods in our own test suite if we wanted them, because we could just derive from the classes, rather than defining the names into the test suite in those cases. ---. About us breaking downstream CI: having been a maintainer of QuTiP and now Qiskit, I have a deep-rooted hatred for any upstream package that forces CI failures on its dependents, because it _requires_ the lower packages to move ""fix CI"" way up to the top of their priority list; you can't merge _anything_ until CI is running again, which is very frustrating. It messes with all your workflows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075:1458,down,downstream,1458,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-979917075,3,"['down', 'failure']","['downstream', 'failures']"
Availability," `adams`, `bdf`, `dop853`, `lsoda`, `vern7`, `vern9`, `diag`. The 4 first are from `scipy.integrate.ode`, the 3 last are ours. `vern7` and `vern9` are runge-kutta methods of 7th and 9th order using [verner's most efficient coefficient](http://people.math.sfu.ca/~jverner/) with dense output. `diag` diagonalize a constant system and solve the ODE in that basis.; The minimum that must be given for a new evolver are the `prepare`, `set_state`, `get_state` and `step` methods. `evolver_collection` work as a dispatcher over evolvers. Solvers obtain their evolver instance using `evolver_collection[method, rhs]` with both `method` and `rhs` taken from the options. `evolver_collection` keep a list of description, used options and capacities for each member. It can list the available method matching desired condition. The `rhs` options is not used yet in this PR, it is for future Adaptative Hilbert Space and other modification to the ODE that affect the matrix-state product. #### Other utilities and code added in this PR:. ##### `SolverQEvo`, `Feedback`:; Wrapper around `QobjEvo` that handle feedback arguments and provide `ndarray` interface. ##### qutip/solver/ode/...; Code qutip's evolver, mostly for Verner's method. . ##### progress_bar:; Added a progress bar passed on `tqdm`. `update` no longer need the iteration number. ##### parallel map:; - Added a `loky` based parallel map, hopefully will help windows users.; - Added a `reduce_func` input. Presently the map function is saving all results and the average, std, etc. are only computed at the end. There was no real advantage in saving only average values since all trajectories were in memory at the end of the map. But users expected lower memory usage when asking for only the results average.; - Added `timeout` options to the map, when passed, no error is raised but obtained results are returned. This allow to ask for 30s worth of trajectories instead of fixing a number. **Related issues or PRs**; Build on top of the #1407",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1409:3047,error,error,3047,https://qutip.org,https://github.com/qutip/qutip/pull/1409,1,['error'],['error']
Availability," `dev.major` as well, so merging this up will be easy - the new automated systems in `setup.py` also mean that the distribution can handle both the current `master` and the `dev.major` package layouts with no changes. The rest of this text is very similar to the original message in #1429. ---. This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged, there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, with separated components; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:1207,avail,available,1207,https://qutip.org,https://github.com/qutip/qutip/pull/1465,2,"['avail', 'down']","['available', 'download']"
Availability," a while. Again, this certainly isn't an unsolvable problem: having versioning in the interface API is one solution to some of these problems. ---. For greater discussion, here's an alternate approach: instead of objects defining `__qutip_qobj__`, instead we expose an entry-point `qutip.Qobj.register_conversion_function(converter, type, priority, version=None)`, and downstream libraries register functions rather than defining methods on their classes. The logic inside the `Qobj` constructor remains approximately the same as what you suggest. I think TensorFlow does something a little more similar to this? (I'm not very familiar with it at all.). Advantages of this over a `__qutip_qobj__` magic method:; - Users aren't limited to what libraries define for them, but can add their own conversions or override library ones if they don't like them. I actually see this as being closer to Julia's dispatch, or Rust's `impl for`.; - It doesn't involve weird namespacing, or anything like that, and doesn't require downstream classes to carry around additional slots. It's less an issue for classes that define `__slots__` since those are frozen methods, but extra methods adds a minor amount vtable weight for most libraries, and makes their class definitions more complex.; - Control between different versions is perhaps a little easier (though a minor point): this _feels_ easier to separate out different versions, and detect what to register as the conversion function with QuTiP. This is a particular advantage for Python classes compiled as C-extensions (like from C or Cython), which typically don't allow assigning methods dynamically.; - A library could even register multiple versions of the conversion function with us, and let QuTiP handle API versioning centrally, rather than requiring downstream libraries to roll their own checks.; - We're basically already set up to do this in `dev.major` already. We'd have to modify our procedures a little bit (we're mostly concerned with cons",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691:5890,down,downstream,5890,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830003691,2,['down'],['downstream']
Availability," altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_buil",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:66890,error,error,66890,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability, attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53190,ERROR,ERROR,53190,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability, attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53272,ERROR,ERROR,53272,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability, attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:53928,ERROR,ERROR,53928,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability, attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54748,ERROR,ERROR,54748,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability," branch (using `pip install --pre qutip`). ### Code to Reproduce the Bug. ```shell; from qutip import * ; import numpy as np. s_00 = tensor(basis(2,0), basis(2,0)); P_00 = s_00 * s_00.dag(); e_ops = [ ; lambda t, state: (state.ptrace([0,1]) * P_00).tr() ; ]. tlist = np.linspace(0, 2*np.pi, 50); res = mesolve(tensor(identity(2), identity(2), identity(3)),; tensor(P_00, thermal_dm(3,0.1)), ; tlist, ; [],; e_ops); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-1-49ed87444849> in <module>; 9 ; 10 tlist = np.linspace(0, 2*np.pi, 50); ---> 11 res = mesolve(tensor(identity(2), identity(2), identity(3)),; 12 tensor(P_00, thermal_dm(3,0.1)),; 13 tlist,. 1 frames; /usr/local/lib/python3.9/dist-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 242 func(0., v, *ode_args) + v; 243 ; --> 244 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 245 progress_bar, dims=rho0.dims); 246 res.num_collapse = len(c_ops). /usr/local/lib/python3.9/dist-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 517 for m in range(n_expt_op):; 518 if not isinstance(e_ops[m], Qobj) and callable(e_ops[m]):; --> 519 output.expect[m][t_idx] = e_ops[m](t, rho_t); 520 continue; 521 output.expect[m][t_idx] = expect_rho_vec(e_ops_data[m], r.y,. UnboundLocalError: local variable 'rho_t' referenced before assignment; ```. ### Expected Behaviour. no error. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.22.4; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.5.3; Python Version: 3.9.16; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.9/dist-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2118:1779,error,error,1779,https://qutip.org,https://github.com/qutip/qutip/issues/2118,1,['error'],['error']
Availability," build/src.linux-x86_64-3.5/qutip/__config__.py -> build/lib.linux-x86_64-3.5/qutip; running build_ext; customize UnixCCompiler; customize UnixCCompiler using build_ext; building 'qutip.cy.spmatfuncs' extension; compiling C sources; C compiler: gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC. compile options: '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c'; extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; gcc: qutip/cy/src/zspmv.c; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/src/zspmv.c -o build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1`. Well",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:4773,error,error,4773,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['error'],['error']
Availability," conference may help you get an overview (; > > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > > Github Project page for a collection of related issues and ongoing Pull; > > Requests.; > > Expected outcomes; > >; > > - More devices defined in the qutip.qip.device module. At the moment,; > > we have two models: spin chain and cavity QED. We would like to include; > > some other commonly used planform such as Superconducting system, Ion; > trap; > > system or silicon system. Each model will need a new set of control; > > hamiltonian and a compiler that find the control pulse of a quantum gate.; > > This part is gonna involve some physics and study of commonly used; > hardware; > > platforms. The related code can be found in qutip.qip.device and; > > qutip.qip.compiler; > > - Refactoring the circuit compiler to allow simple pulse scheduling,; > > e.g. Restriction one pulses that can be turned on at the same time.; > > - Features to perform error mitigation techniques in QuTiP, such as; > > zero-error extrapolation.; > > - APIs to allow import quantum circuits from other software packages; > > or commonly used language e.g. through quantum assembly language (qasm); > >; > > ------------------------------; > >; > > Also, the last outcomes have some overlap with the last project. Although; > > I also find this circuit importation very important, I guess two projects; > > should not have overlap if they are both selected.; > >; > > —; > > You are receiving this because you are subscribed to this thread.; > > Reply to this email directly, view it on GitHub; > > <; > https://github.com/qutip/qutip/issues/1184?email_source=notifications&email_token=ADPF67A5MSYZVSDKCZD73LTREGE2LA5CNFSM4KZUPCQ2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4IPQGYLA; > >,; > > or unsubscribe; > > <; > https://github.com/notifications/unsubscribe-auth/ADPF67EWECDUIOQMTKK2N2DREGE2LANCNFSM4KZUPCQQ; > >; > > .; > >; >; >; > —; > You are receiving this because you authored t",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:6433,error,error,6433,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,4,['error'],['error']
Availability," current test of superoperator representations uses `choi_to_kraus` which also calls `scipy.linalg.eig`. Here is a file `kraus.py` that can reproduce these segfaults semi-reliably (may need to run it a few times to get it to trigger):. ```python; import qutip. s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invali",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:4695,error,error,4695,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,2,['error'],['error']
Availability," customize UnixCCompiler using build_ext; building 'qutip.cy.spmatfuncs' extension; compiling C sources; C compiler: gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC. compile options: '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c'; extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; gcc: qutip/cy/src/zspmv.c; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c qutip/cy/src/zspmv.c -o build/temp.linux-x86_64-3.5/qutip/cy/src/zspmv.o -w -ffast-math -O3 -march=native -funroll-loops"" failed with exit status 1`. Well, all of them seem to fail with a similar issue. Whatever is exit status 1. ([This](http://stackoverflow.com/questions/35991403/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:4901,error,error,4901,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['error'],['error']
Availability," ecosystem and creative community. As of October 2020, QuTiP’s large community comprises over 80 code contributors and thousands of users that have downloaded the software over 300’000 times. QuTiP enables an infrastructure of other scientific libraries for the investigation of specific quantum physics or quantum information processing features. . There are several ways through which members of the wider QuTiP community can receive information on QuTiP. This is through any of its official channels: the Google forum; the qutip.org/news webpage tracking the releases on Github, and opening [Issues](https://github.com/qutip/qutip/issues) on Github to file bug reports or discuss and proposed enhancements. Users are encouraged to contribute bug fixes or enhancements to the project with [Pull Requests](https://github.com/qutip/qutip/pulls). **<span style=""text-decoration:underline;"">Governance</span>**. This governance document outlines the governance of the QuTiP project, in order to better serve the community and provide robust liveliness and sustained maintenance for the project. Changes to this document need to be approved by ¾ of the Admin Team. The contents of this QuTiP Governance are shown on QuTiP’s website (qutip.org/goverance) and in its documentation. The changes are tracked at github.com/qutip/governance. We view this governance model as the formalization of what we are already doing, rather than a change in direction. This document is composed of information regarding the following:. **1. Code of Conduct**. **2. Admin Team: Tasks, Composition, Decisions, Communications.**. **3. Board: Tasks, Composition, Decisions, Communications.**. **4. Non-profit Support.**. ### 1. Code of Conduct. The Contributor Covenant [Code of Conduct](https://github.com/qutip/qutip/blob/master/CODE_OF_CONDUCT.md) applies to all of QuTiP activities. QuTiP project members and contributors agree to abide by it and to build an inclusive community where criticism is provided and taken cons",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:5858,robust,robust,5858,https://qutip.org,https://github.com/qutip/qutip/issues/1373,2,"['mainten', 'robust']","['maintenance', 'robust']"
Availability," factor 2 and 30 in speedup from last time I ran them, which was consistent with times obtained by @Ericgig and saved in the folder. . I am on Python 3.7.3, I recently updated OS from High Sierra to Mojave, plus some other updates in scipy and numpy, and reinstalled conda, so I am curious to see if these speedups are machine independent, which would be great. My specs; ```; Software	Version; QuTiP	4.4.0.dev0+e1639f73; Numpy	1.16.4; SciPy	1.2.1; matplotlib	3.1.0; Cython	0.29.8; Number of CPUs	2; BLAS Info	INTEL MKL; IPython	7.5.0; Python	3.7.3 (default, Mar 27 2019, 16:54:48) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	posix [darwin]; Mon Jun 10 21:16:02 2019 JST; ```; Some details:; In cell 6 of development-ssesolver-new-methods, the running time went from over 160 seconds to 6 seconds (x25 speedup). Total run time in cell 21 is now down to 14.22s from 79.46s, cell 24/25 of is now 1.4 seconds down from 14.22s in `smesolve`. `ssesolve` in cell 4 is down from 164.50s to 11.06s. Cell 6 is down to 11.48s from 250s. The next cell checking all solver methods in `ssesolve` is down from 80s to 24s. In the notebook with new smesolve methods, cell 11 with multiple time dependence in sc_ops now runs in 69s instead of 171s. . Also, the benchmarking of the different methods now reads; ```; {'solver': 'euler-maruyama'}; Total run time: 0.21s; Total run time: 0.25s; Total run time: 0.30s; Total run time: 0.38s; Total run time: 0.45s; Total run time: 0.55s; Total run time: 0.67s; Total run time: 0.81s; {'solver': 'platen'}; Total run time: 0.70s; Total run time: 0.90s; Total run time: 1.13s; Total run time: 1.15s; Total run time: 1.41s; Total run time: 1.66s; Total run time: 2.03s; Total run time: 2.47s; {'solver': 'pc-euler'}; Total run time: 0.38s; Total run time: 0.46s; Total run time: 0.58s; Total run time: 0.70s; Total run time: 0.84s; Total run time: 1.00s; Total run time: 1.26s; Total run time: 1.49s; {'solver': 'milstein'}; Total run time: 0.31s; Total run time: 0.39s; Total",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:1441,down,down,1441,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,2,['down'],['down']
Availability," fill the instance with the defaults and update the doc string. Passing an options not supported by the solver will raise an error. When not used, any options items will be accepted. ```; >>> SolverOptions(atol=1e-5, store_ados=True); SolverOptions(solver='', atol=1e-05, store_ados=True). >>> SolverOptions('sesolve', atol=1e-5, store_ados=True); KeyError: ""'store_ados' is not a supported options."". >>> SolverOptions('heomsolver', atol=1e-5, store_ados=True); SolverOptions(solver=heomsolver, atol=1e-05, store_ados=True); ```. `SolverOptions` can be used as `dict`, but most methods only use provided keys:; ```; >>> {**SolverOptions('sesolve', atol=1, rtol=2)}; {'atol': 1, 'rtol': 2}; ```; `store_states` etc. are not in `opt.keys()`.; The exceptions are `in` and `__getitem__` which knows of the default values:; ```; >>> opt = SolverOptions('sesolve', atol=1, rtol=2); >>> ""store_states"" in opt; True; >>> print(opt[""store_states""]); None; ```. `print` create a human readable list of options, including default:; ```; >>> print(SovlerOptions(""sesolve"", atol=1e-5, store_states=True)). Options for sesolve:; progress_bar : 'text' (default); progress_kwargs : {'chunk_size': 10} (default); store_final_state : False (default); store_states : True ; normalize_output : True (default); method : 'adams' (default); Options for adams integrator:; atol : 1e-05 ; rtol : 1e-06 (default); nsteps : 2500 (default); order : 12 (default); first_step : 0 (default); max_step : 0 (default); min_step : 0 (default); ```. Some integrators options will change depending on the method:; ```; >>> ""order"" in SovlerOptions(""sesolve"", method=""adams""); True; >>> ""order"" in SovlerOptions(""sesolve"", method=""dop853""); False; ```; passing options not supported by the options will raise an error. Solver accept options as `dict` or `SolverOptions`. They do not refuse options for other solver.; Solver can support options changes: `my_solver.options['atol'] = 1e-10`, will reset the integrator to use the new value.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947:2122,error,error,2122,https://qutip.org,https://github.com/qutip/qutip/pull/1947,1,['error'],['error']
Availability," has it's option class (SeOptions, MeOptions, etc.) with only needed keys.This somewhat feel overkill since they are all the some for now, until mcsolve is merged. Each integrator also has an associated options and the solver options contain an integrator options. Conversion between options type will raise an error. When creating a solver options, it read the `method` key and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.py`, but we can just write the `repr` of the `dict`.). While it's working fine as is, there are few point to discuss:; - Freezing options associated to solver work fine, but I see 2 alternatives:; - Options know they a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:2512,Error,Error,2512,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['Error'],['Error']
Availability, has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51960,ERROR,ERROR,51960,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability," has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_utilities.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_wigner.py - AttributeError: module 'qutip' has no attribu...; !!!!!!!!!!!!!!!!!!! Interrupted: 65 errors during collection !!!!!!!!!!!!!!!!!!!; ======================== 2 warnings, 65 errors in 2.53s ========================; The command ""pytest",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:55240,ERROR,ERROR,55240,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability," href=""https://github.com/pallets/jinja/releases"">jinja2's releases</a>.</em></p>; <blockquote>; <h2>3.1.3</h2>; <p>This is a fix release for the 3.1.x feature branch.</p>; <ul>; <li>Fix for <a href=""https://github.com/pallets/jinja/security/advisories/GHSA-h5c8-rqwp-cp95"">GHSA-h5c8-rqwp-cp95</a>. You are affected if you are using <code>xmlattr</code> and passing user input as attribute keys.</li>; <li>Changes: <a href=""https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3"">https://jinja.palletsprojects.com/en/3.1.x/changes/#version-3-1-3</a></li>; <li>Milestone: <a href=""https://github.com/pallets/jinja/milestone/15?closed=1"">https://github.com/pallets/jinja/milestone/15?closed=1</a></li>; </ul>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/main/CHANGES.rst"">jinja2's changelog</a>.</em></p>; <blockquote>; <h2>Version 3.1.3</h2>; <p>Released 2024-01-10</p>; <ul>; <li>Fix compiler error when checking if required blocks in parent templates are; empty. :pr:<code>1858</code></li>; <li><code>xmlattr</code> filter does not allow keys with spaces. GHSA-h5c8-rqwp-cp95</li>; <li>Make error messages stemming from invalid nesting of <code>{% trans %}</code> blocks; more helpful. :pr:<code>1918</code></li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/pallets/jinja/commit/d9de4bb215fd1cc8092a410fb834c7c4060b1fc1""><code>d9de4bb</code></a> release version 3.1.3</li>; <li><a href=""https://github.com/pallets/jinja/commit/50124e16561f17f6c1ec85a692f6551418971cdc""><code>50124e1</code></a> skip test pypi</li>; <li><a href=""https://github.com/pallets/jinja/commit/9ea7222ef3f184480be0d0884e30ccfb4172b17b""><code>9ea7222</code></a> use trusted publishing</li>; <li><a href=""https://github.com/pallets/jinja/commit/da703f7aae36b1e88baaa20de334d7ff6378fdde""><code>da703f7</code></a> use trusted publishing</li>; <li><a href=""https",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2291:1133,error,error,1133,https://qutip.org,https://github.com/qutip/qutip/pull/2291,1,['error'],['error']
Availability," in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:6392,down,down,6392,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,2,['down'],['down']
Availability," install qutip from pip with the latest python 3.9 fails. When we run the installations from a fresh conda env (conda 4.8.5) using pip as. ```; pip install qutip; ```; or with conda (using both). ```; conda install -c conda-forge qutip; conda install qutip; ```. we get different errors. The errors do not occur if we use python3.8 while creating the conda environment as. ```; conda create -n py38 python==3.8; ```. Looking at the error it seems there is specification that prohibits python 3.9. @jakelishman @Ericgig any idea about this?. # Steps to reproduce (with conda 4.8.5). ```; conda create -n qutip-test python=3.9; conda activate qutip-test; conda install -c conda-forge qutip; ```. ### Error; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: \; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found; to be incompatible with the existing python installation in your environment:. Specifications:. - qutip -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.5,<3.6.0a0|3.4.*']. Your python: python=3.9. If python is on the left-most side of the chain, that's the version you've asked for.; When python appears to the right, that indicates that the thing on the left is somehow; not available for the python version you are constrained to. Note that conda will not; change your python version to a different minor version unless you explicitly specify; that. Note that strict channel priority may have removed packages required for satisfiability.; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371:1766,avail,available,1766,https://qutip.org,https://github.com/qutip/qutip/issues/1371,1,['avail'],['available']
Availability," it changed.; Compiling qutip/cy/stochastic.pyx because it changed.; Compiling qutip/cy/sparse_utils.pyx because it changed.; Compiling qutip/cy/graph_utils.pyx because it changed.; Compiling qutip/cy/interpolate.pyx because it changed.; Compiling qutip/cy/spmath.pyx because it changed.; Compiling qutip/cy/heom.pyx because it changed.; Compiling qutip/cy/math.pyx because it changed.; Compiling qutip/cy/spconvert.pyx because it changed.; Compiling qutip/cy/ptrace.pyx because it changed.; Compiling qutip/cy/testing.pyx because it changed.; Compiling qutip/cy/brtools.pyx because it changed.; Compiling qutip/cy/brtools_testing.pyx because it changed.; [ 1/13] Cythonizing qutip/cy/brtools.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.complex128_t CTYPE_t. CTYPE = np.int64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:11:10: cimported module has no attribute 'int64'; Traceback (most recent call last):; File ""./setup.py"", line 23",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:1194,Error,Error,1194,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,1,['Error'],['Error']
Availability," it is in the scope of qutip to try and make that easier, or guide users to do that. The philosophy here is, if the user can get the `mpi4py.futures.MPIPoolExecutor` to work, then they can also use `mpi_pmap` in qutip. However, I did show in the tutorial notebook explicitly as an example how it works on the RIKEN cluster, and I refer to the mpi4py users guide. That being said, we do want to set up an automated test for this, and we do want to understand what went wrong in our initial attempts to set up those tests. The two main problems we encountered were (a) if mpi4py is installed with pip, all mpi_pmap calls hang; (b) if it is installed with conda, test_map_pass_error hangs sometimes.; The difference between pip and conda comes from the fact that mpi4py requires an MPI implementation. If we use mpi4py's GH workflow to install it with pip, it installs MPICH, and with conda, it installs OpenMPI by default. I noticed that in both cases where mpi_pmap hangs, there *are* error messages, but they are captured by pytest and then never printed because the program hangs... Regarding problem (a), in short, it looks like an MPICH bug to me. I thus decided to use OpenMPI instead, and added `conda install ""openmpi<5"" mpi4py` to just one of our test runs (the python 3.12 one). Regarding problem (b), the problem was that we requested more processes than the default number of slots available. With OpenMPI, the default number of slots available is the number of physical cpu cores (which seems to be 2 on the machine running our tests, leaving only one slot for a worker process). In the `parallel` module, if num_cpus is not provided, it defaults to `available_cpu_count()` (which is 4 on this machine, since there are 4 logical cpus). We could try to find a better default value for num_cpus for mpi_pmap, but I feel like writing that well would require deeper MPI knowledge than I have. What I did instead is, I tried to make it clear in the documentation that the default value might be ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432:1177,error,error,1177,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1923102432,2,['error'],['error']
Availability," me that `hasattr` in qutip's BLAS support tests is returning false positives and false negatives. It indicates if the attribute was defined, even though it might be empty. Would it be better to replace; ```; hasattr(config,'openblas_info'); ```; in qutip/utilities.py with; ```; hasattr(config,'openblas_info') and config.openblas_info; ```; likewise for blas_mkl_info (not mkl_info) ?. This would be similar to numpy's own usage in `np.show_config()` (i.e. `np.__config__.py.show()`), which [uses](https://github.com/numpy/numpy/blob/3b7672ebd16982b661b8fbcabac80158662a8784/numpy/__config__.py.in#L116) `if not info_dict` to print ""NOT AVAILABLE"". ### Code to Reproduce the Bug. ```shell; import numpy; numpy.show_config(). import qutip; qutip.about(); ```. ### Code Output. ```shell; $ python3; Python 3.10.9 (main, Dec 7 2022, 13:47:07) [GCC 12.2.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import numpy; >>> numpy.show_config(); ...; blas_mkl_info:; NOT AVAILABLE; ...; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; ...; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; >>> ; >>> import qutip; >>> qutip.about(); ...; BLAS Info: OPENBLAS; ```. ### Expected Behaviour. The qutip declaration of BLAS support should match the numpy declaration. If numpy says OpenBLAS is not available, then qutip should probably not say that it is available (even if it is installed). ### Your Environment. ```shell; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:4501,AVAIL,AVAILABLE,4501,https://qutip.org,https://github.com/qutip/qutip/issues/2053,1,['AVAIL'],['AVAILABLE']
Availability," means that if the global option `auto_tidyup` is set to `True` (its default), then small values (< 1e-15) are truncated from the output matrices. This generally ends up with ""neater"" looking matrices when output; there are far fewer numbers like `1 + 4.516584e-17j` reported, when that's basically just `1`. There are, however, a couple of problems because of this. The first is speed; after every (very simple)_ operation, such as `matmul` or `add`, the tidier runs on the matrix. This typically has `O(nnz)` complexity for sparse matrices, and `O(n * n)` complexity for a dense square matrix with `n` rows. This adds very significant overhead on to simple operations. Second is numerical precision. By dropping small terms, we are effectively turning numerical imprecision into a ""feature"" as opposed to a bug. Because QuTiP 5 uses the new data-layer to do most of its operations, rather than constructing intermediary `Qobj` instances, many mathematical operations will not give the same result if the data layer is used directly compared to if `Qobj` is used at every step. For example, let's say we have three random `Qobj`:; ```python; a, b, c = [qutip.rand_herm(5) for _ in [None]*3]; ```; Now, in general,; ```python; a + b + c != qutip.Qobj(a.data + b.data + c.data); ```; because `a + b + c` will invoke the `tidyup` code twice, whereas the right-hand side will not invoke it at all. This means that despite the fact that `Qobj.__add__` uses the data-layer addition underneath, there will be numerical differences using the QuTiP default settings. I suspect these sort of problems are behind the recent test instabilities on `dev.major` with regards to tolerances. ----. My vote is for a removal of `auto_tidyup`, or at the very least, changing the default value of the option to `False`. We still want nice values for display, so perhaps we could consider having an option to produce a tidied up copy when calling `__repr__`, instead?. Interested to hear what others think about this too.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349:1741,toler,tolerances,1741,https://qutip.org,https://github.com/qutip/qutip/issues/1349,1,['toler'],['tolerances']
Availability, no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54256,ERROR,ERROR,54256,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability," not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altive",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:66175,error,error,66175,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability," of Hamiltonians and Jump Operators which includes 69 timesteps each, and I want to evolve a initial state to each of this timesteps. However, Qutip is returning ""Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". I tryied to change nsteps parameter but it just doesnt work for any value of it, no matter how big the number is. H= Hamiltonian, shape: 69,2,2; list_Jump-op= Jump operators, shape:69,2,2; time= timesteps, shape (69,); estados_val= the different states that I want to evolve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/pytho",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:1094,Toler,Tolerances,1094,https://qutip.org,https://github.com/qutip/qutip/issues/1605,1,['Toler'],['Tolerances']
Availability," pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 424 in _process_regex; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 495 in _process_state; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/site-packages/pygments/lexer.py"", line 479 in _proce",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:1297,error,error,1297,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502,2,"['error', 'fault']","['error', 'fault']"
Availability," qtip.Qobj(np.identity(dim),dims=[[dim],[dim]]); rho0 = np.random.random([dim**2]); rho0 = qtip.Qobj(rho0.flatten(),dims=[[dim],[dim]]) # This fails; # rho0 = qtip.Qobj(rho0.reshape([dim,dim]),dims=[[dim],[dim]]) # This works; qtip.mesolve(rho0=rho0,H=H,tlist=np.linspace(0,10,1),progress_bar=qtip.ui.EnhancedTextProgressBar()); ```. ### Code Output. ```shell; [ 0% ] Elapsed 0.00s / Remaining 00:00:00:00[1] 3281154 segmentation fault (core dumped); ```. ### Expected Behaviour. The code should exit without failure or throw a python error elaborating on the issue. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.4; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/lala5th/.local/lib/python3.9/site-packages/qutip; ```. ### Additional Context. I ran the code through `gdb` to somewhat narrow down the cause of the issue. It seems that `dense2D_to_fastcsr_fmode` causes the segmentation fault, but the parameters passed to it seem fine at first glance, since I expect `ncols = 10000`. While I don't know how useful it is I will put the top of the stack trace (after this the only the call to `mesolve` is relevant in the stack trace). ```; #0 __pyx_pf_5qutip_2cy_9spconvert_6dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_v_ncols=10000, __pyx_v_nrows=<optimised out>, __pyx_v_mat=...) at qutip/cy/spconvert.cpp:9472; #1 __pyx_pw_5qutip_2cy_9spconvert_7dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_args=<optimised out>, __pyx_kwds=<optimised out>) at qutip/cy/spconvert.cpp:9237; #2 0x000000000053a8eb in cfunction_call (func=<built-in function dense2D_to_fastcsr_fmode>, args=<optimised out>, kwargs=<optimised out>) at ../Objects/methodobject.c:543; #3 0x000000000051c24b in _PyObject_MakeTpCall (tstate=0x9561b0, callable=<built-in function dense2D_to_f",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:1779,down,down,1779,https://qutip.org,https://github.com/qutip/qutip/issues/1782,1,['down'],['down']
Availability," qutip/core/data/base.pyx; [ 7/31] Cythonizing qutip/core/data/csr.pyx; [ 8/31] Cythonizing qutip/core/data/dense.pyx; [ 9/31] Cythonizing qutip/core/data/dia.pyx; [10/31] Cythonizing qutip/core/data/dispatch.pyx; [11/31] Cythonizing qutip/core/data/matmul.pyx; [12/31] Cythonizing qutip/core/data/mul.pyx; [13/31] Cythonizing qutip/core/data/norm.pyx; [14/31] Cythonizing qutip/core/data/reshape.pyx; [15/31] Cythonizing qutip/core/data/tidyup.pyx; [16/31] Cythonizing qutip/piqs/_piqs.pyx; [17/31] Cythonizing qutip/core/cy/_element.pyx; [18/31] Cythonizing qutip/core/cy/qobjevo.pyx; [19/31] Cythonizing qutip/core/data/adjoint.pyx; [20/31] Cythonizing qutip/core/data/expect.pyx; [21/31] Cythonizing qutip/core/data/inner.pyx; [22/31] Cythonizing qutip/core/data/kron.pyx; [23/31] Cythonizing qutip/core/data/permute.pyx; [24/31] Cythonizing qutip/core/data/pow.pyx; [25/31] Cythonizing qutip/core/data/project.pyx; [26/31] Cythonizing qutip/core/data/properties.pyx; [27/31] Cythonizing qutip/core/data/ptrace.pyx; [28/31] Cythonizing qutip/core/data/trace.pyx; [29/31] Cythonizing qutip/solver/integrator/explicit_rk.pyx; [30/31] Cythonizing qutip/solver/sode/_sode.pyx; [31/31] Cythonizing qutip/solver/sode/ssystem.pyx; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Expected Behaviour. qutip installs successfully. ### Your Environment. ```shell; QuTiP Version: 4.7.3 (currently installed, trying to upgrade); Numpy Version: 1.24.4; Scipy Version: 1.10.1; Cython Version: 3.0.10; Matplotlib Version: 3.7.4; Python Version: 3.8.10; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); OS version: Ubuntu 20.04 LTS; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:10614,ERROR,ERROR,10614,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['ERROR'],['ERROR']
Availability," the 1.5 release. This is related to the `linalg.eigh() API` which performs eigenvalue calculation, it causes error of this form `Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB`, which mostly the get silenced, and instead of terminating it just outputs an array of zeros except for the last entry. This issue occurs exclusively when using the API with high dimensional tensors, which are probably not being handled in the tests, but will inevitably cause miscalculations for the users as eigenvalue finding of hermitics is pervasive. **To Reproduce**; Just as an illustration you cun run . `pytest qutip/tests/test_superop_reps.py -s -k SuperChoiChi`. from the codes in #1491 in an environment like the generated for `coverage` tests in the CI. The terminal out put is; ```; qutip/tests/test_superop_reps.py ..; Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoperator); chi_matrix = to_chi(choi_matrix); test_supe = to_super(chi_matrix); ; # Assert both that the result is close to expected, and has the right; # type.; #print(test_supe.dims); #print(superoperator.dims); > assert (test_supe - superoperator).norm(maxiter=1e6) < 1e-5; E assert 313.53468707624677 < 1e-05; E + where 313.53468707624677 = <bound method Qobj.norm of Quantum object: d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:1347,FAILURE,FAILURES,1347,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['FAILURE'],['FAILURES']
Availability," the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:1161,error,error,1161,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,2,['error'],['error']
Availability," this as my initial state in `mesolve`. This would obtain density matrices for `sln.states` at each time step, however this seems not to be the case. Code:; ```; from bacon import bacon; import qutip as qt; import numpy as np. #inputs into bacon; spin_coeff = [; 4.8,; 9.5,; 4.82,; ]. coupling_coeff = [; 6.4,; 0,; 6.4; ]. H_input = bacon(; 3,; spin_coeff,; coupling_coeff; ). Hd = H_input.driver(); Hp = H_input.problem(). def init_superpsn(n):; '''; n - number of qubits; '''; state = np.ones((2**n), dtype = int)/np.sqrt(2**n); state = qt.Qobj(state); return state. #forming density matrix; initial_state = init_superpsn(3) * init_superpsn(3).dag(); #commenting out this line gives a different error; #initial_state = qt.Qobj(initial_state, dims = [[[2, 2, 2], [2, 2, 2]], [[2, 2, 2], [2, 2, 2]]]). grain = 100; anneal_time = 100. # initial coefficients; def d_coeff(t,params): ; return (1-t/params[""T""]); def p_coeff(t,params):; return (t/params[""T""]). Hs = [[Hd, d_coeff], [Hp, p_coeff]]; # ""writes down"" hamiltonian at time t ; H_dyn = qt.QobjEvo(Hs,args={""T"":anneal_time}) ; # solves SE for a particular hamiltonian that we ""wrote down""; s = np.linspace(0, anneal_time, grain); sln = qt.mesolve(H_dyn, initial_state, s) ; states0 = sln.states; ```. Bacon is a class I wrote that forms $H_d$ and $H_d$ Hamiltonians using tensor products. `Hp` is ; ```; Qobj data =; [[ 31.92 0. 0. 0. 0. 0. 0. 0. ]; [ 0. 9.48 0. 0. 0. 0. 0. 0. ]; [ 0. 0. -12.68 0. 0. 0. 0. 0. ]; [ 0. 0. 0. -9.52 0. 0. 0. 0. ]; [ 0. 0. 0. 0. 9.52 0. 0. 0. ]; [ 0. 0. 0. 0. 0. -12.92 0. 0. ]; [ 0. 0. 0. 0. 0. 0. -9.48 0. ]; [ 0. 0. 0. 0. 0. 0. 0. -6.32]]; ```. `Hd` is ; ```; Quantum object: dims = [[2, 2, 2], [2, 2, 2]], shape = (8, 8), type = oper, isherm = True; Qobj data =; [[ 0. -1. -1. 0. -1. 0. 0. 0.]; [-1. 0. 0. -1. 0. -1. 0. 0.]; [-1. 0. 0. -1. 0. 0. -1. 0.]; [ 0. -1. -1. 0. 0. 0. 0. -1.]; [-1. 0. 0. 0. 0. -1. -1. 0.]; [ 0. -1. 0. 0. -1. 0. 0. -1.]; [ 0. 0. -1. 0. -1. 0. 0. -1.]; [ 0. 0. 0. -1. 0. -1. -1. 0.]]; `",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1989:1528,down,down,1528,https://qutip.org,https://github.com/qutip/qutip/issues/1989,1,['down'],['down']
Availability," to Guido Vranken for reporting the issue.</p>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1403,error,error,1403,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['error'],['error']
Availability," to install the latest release of QuTip on Ubuntu system. Since; > our workstation hasn't been connected to internet, I; > downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; > to install from source code.; >; > Firstly I successfully installed Anaconda with the command:; > bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh; >; > Then in the conda environment I typed the command:; > python setup.py install; >; > I get the following error message:; >; > gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; > -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; > build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; > -funroll-loops; > gcc: error trying to exec 'cc1plus': execvp: No such file or directory; > error: command 'gcc' failed with exit status 1; >; > It seems the gcc compiler isn't correctly located? Or what else problem.; >; > I checked the gcc version on the workstation:; > gcc --version; > gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; > Copyright (C) 2018 Free Software Foundation, Inc.; > This is free software; see the source for copying conditions. There is NO; > warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; >; > whereis gcc; > gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz; >; > How can I direct the installer to find the gcc compiler?; >; > Thanks!; > Best regards, Pu Zhang; > --; > Faculty at School of Physics, Huazhong University of Science and Technology; > Room 819 (N.), Yifu Science and Technology Building; > 1037 Luoyu Road, Wuhan, China; > E-mail: puzhang0702@hust.edu.cn <puzha@fotonik.dtu.dk>; > Homepage: www.researchgate.net/profile/Pu_Zhang4; > Phone: +86 18871860394; >; > —; > You are receiving this because you were mentioned.; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501609220:1325,error,error,1325,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501609220,2,['error'],['error']
Availability," to work:; ```python; import numpy as np; import qutip. random_matrix = np.random.random((2, 2)) + 1j * np.random.random((2, 2)); complex_number = np.random.random((1, 1)) + 1j * np.random.random((1, 1)). qobj = qutip.Qobj(random_matrix); qobj*complex_number; ``` ; I used numpy `ndarray` instead of a `tf.Tensor` or `tf.Variable` for simplicity and so that the example is reproducible. . Currently this example raises: ; ""TypeError: incompatible dimensions [[2], [2]] and [[1], [1]]""; as `__mul__(self, other)` defaults to `__matmul__(self, other)` when `other` is not an instance of `numbers.Number`. . If instead we do:; ```python; complex_number*qobj; ```; The error raised is:; ""TypeError: unsupported operand type(s) for *: 'numpy.ndarray' and 'Qobj'""; This error is different because `__rmul__` checks first for `other` being an instance of `numbers.Number` and if not, it raises `NotImplementedError`. It does not check whether `Qobj(other)` works. I would say this is undesired and that `__rmul__` should try first converting `other` into `Qobj` and not assume that other is already `Qobj`. . **Describe the solution you'd like**; I would like to suggest either:; 1) changing the behaviour of `matmul` dispatcher so that (1,1) shaped data is multiplied element wise by default. However this, although not terrible, it breaks conceptually what matmul is, as a (1,1) x (2,2) matrix multiplication can not happen. 2) Allow `mul` dispatcher to have as input a `Data` object. In this way we would raise an error when the `Data` for `mul` dispatcher is not of shape (1,1) and perform an elementwise multiplication when it is. I am not sure how difficult it is to code this. 3) Create `mul_elementwise` dispatcher to have as input two `Data` objects and perform elementwise multiplication. Another change that I would like to suggest is to add a check in `__rmul__` to see if `other` can be represented as a Qobj. . These two changes should probably go in a different PR. _Edit: added third option_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607:1637,error,error,1637,https://qutip.org,https://github.com/qutip/qutip/issues/1607,1,['error'],['error']
Availability," trying to work towards a PR. Indeed. I was just trying to play around with this. . > If we're going to do this (and we haven't decided if we will yet), we're going to need to get a lot of wide-ranging input from many different libraries. I completely agree with your approach. I’m simply trying to push for this to be something that will come out in a reasonable timeframe and not be something forgotten. > We've got to be concerned with backwards and forwards compatibility; what if a user wants to install and use QuTiP and a different library in the same environment without using them together, but can't even have them coexist because of version incompatibilities in optional conversion features?. I do understand your point, and I see how you want to be backward and forward compatible, however I don’t think that my proposal would break different tools in the same environment. What I propose would simply prevent `qutip.Qobj(otherlibraryobject)` from working (with an explicative error message) if `otherlibrary` does not support the same qobj interface version. Everything else would work the same. You can still import and use the two libraries independently without issues. It’s indeed possible to design around this and supporting at the same time different versions of the interface, however, and there’s value in doing so. > To me, this is absolutely one of the mistakes that Numpy made in their implementation, and we shouldn't be copying it. I don't know enough of the history behind numpy current api, but I see your point. however I'd like to reiterate that this is not what I am proposing. ; I think there is considerable difference between supporting arbitrary operations `new_obj = Qobj + netket_operator*5` (though if you are going to export dispatch hooks in `5.0`, this would be possible in a consistent way, I think) and `qutip.mesolve(netket_operator, ...)`. ; In the first, I do agree with your point that the nature python's `__add__/__radd__` is not commutative, leading",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742:1963,error,error,1963,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742,2,['error'],['error']
Availability," we missed your last comment, but Nathan just notified us. We will get it all sorted out by wednesday at most. I leave a todolist to keep track of everything that @Ericgig mentioned. To-do. * [x] Include some tests like test_sesolve.py --> **Included tests with random Hamiltonian, ising transverse field and SHO. Both for states and expectation values. Lacking a testing example for callable e_ops**. * [x] Why <code>krylov_dim=30?</code> ? --> **There was a subtle physical reason, but we conclude its better to leave it as a free input without a predefined variable.**. * [x] <code>tolerance</code>, <code>store_states</code> and <code>store_final_state</code> --> **Changed as an Options qutip class, now tolerance is <code>Options.atol</code> property**. * [x] <code>e_ops</code> should also take a callable or list of mixed function and <code>Qobj</code> --> **Added support**. * [x] Remove support for <code>np.ndarray</code> --> **Removed for qutip cleanliness**. * [x] Assertion errors to specififc errors --> **Modified.**. * [x] Check that psi0 is a ket --> **Added**. * [x] If both <code>store_states</code> and <code>store_final_state</code> are True there is a small bug --> **Fixed the store twice problem**. * [x] Infinite loop at stagnant =0 --> **Added a raise ValueError if its <0.**. * [x] __all__ should be defined to filter functions seen by the user --> **set to =<code>krylovsolve</code> and <code>lanczos_algorithm</code>**. * [x] Why not call <code>_make_partitions</code> directly instead of having this method --> **Removed when deprecating <code>KSolve</code> class**. * [x] tlist is already stored, are those needed? (lines 152-155) --> **Removed when deprecating <code>KSolve</code> class**; * [x] The Result has a tag to the solver that created it --> **Added**; * [x] If tlist is empty, you can just return the empty results. --> **Now it returns an empty <code>Results()</code> instance.**; * [x] Can you use the <code>eigh</code> in <code>qutip.sparse</code> . There",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1039192650:1005,error,errors,1005,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1039192650,4,['error'],['errors']
Availability," we'd like to keep doing what we're doing, with the support, since 2018, of @NumFOCUS, which supports scientific open source projects, and, from now on, the additional support of @unitaryfund, a non-profit that supports open-source projects in quantum technologies. . Below we reproduce a governance document that we will add to a new repository at [github.com/qutip/governance](https://github.com/qutip/governance). We are looking forward to help the growth of the user community, engage it with code contributions and bug reports, and make this awesome scientific open-source project even more sustainable. We will update all related information at [github.com/qutip/governance](https://github.com/qutip/governance), on QuTiP website's news section (http://qutip.org/news.html) and on the QuTiP google group (https://groups.google.com/forum/#!forum/qutip). . Below it is reported how we got there and the text we're adding to the governance. Before making any more official announcements, we thought it nice to ping the community watching this repository. . **Timeline regarding governance talks**:; * April 2018: QuTiP Joins NumFOCUS as an Affiliated Project (and since then participates in Google Summer of Code).; * September 2018: a slide presentation is shared among lead developers with ideas on QuTiP development and governance. ([Link](https://docs.google.com/presentation/d/1lBfS7v4WxduvWy-rf1Vd-hSEeNOK4at91ALuaH58AnQ/edit?usp=sharing)); * February 2019: The first QuTiP developers workshop is held in RIKEN, Wako, Japan, to discuss development and roadmap ([Link](https://docs.google.com/presentation/d/1lBfS7v4WxduvWy-rf1Vd-hSEeNOK4at91ALuaH58AnQ/edit?usp=sharing)); * 2019-2020: Seminars given in USA, Asia, and Europe about QuTiP and how the users community can get more engaged, collecting feedback on the package and project. ; * April-May 2020: Discussions for governance creation are revamped; * May-August 2020: First draft document created and circulated among core developers a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:2317,ping,ping,2317,https://qutip.org,https://github.com/qutip/qutip/issues/1373,1,['ping'],['ping']
Availability," x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use `qutip`. You can run `PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py`, and it will occasionally trigger a segfault (it happens to me about 1 in 5 times). It's not always the same message as above, e.g.:; ```; jake@tauros$ PYTHONMALLOC=pymalloc_debug python -Xfaulthandler,tracemalloc eig.py; python(54517,0x10a5505c0) malloc: Incorrect checksum for freed object 0x7fe6cb4150e0: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(54517,0x10a5505c0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```. However if I run it within valgrind:; ```; jake@tauros$ valgrind --suppressions=valgrind-python.supp python -Xfaulthandler eig.py; ==54530== Memcheck, a memory error detector; ==54530== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.; ==54530== Using Valgrind-3.17.0.GIT-lbmacos and LibVEX; rerun with -h for copyright info; ==54530== Command: python -Xfaulthandler eig.py; ==54530==; ==54530== Invalid write of size 8; ==54530== at 0x10ABF7A8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54530== by 0xFFFFFFFF: ???; ==54530== by 0x103124AFF: ???; ==54530== by 0x10312376F: ???; ==54530== by 0x10550F0BF: ???; ==54530== by 0x3FEFFFFFFFFFFFFF: ???; ```; the exact same. ## Further steps. I'm now reasonably convinced that this isn't directly an issue with QuTiP. I suspect it isn't an issue with `scipy` either, but I'm not sure - it looks like a slight overwrite in MKL on macOS, though it's also possible that `scipy` passes some invalid pointers when dropping down to BLAS/LAPACK. I get the impression that the next steps involve dropping down a level of abstraction, down to Cython to directly call scipy's wrappers, or even fully down to C and link directly against MKL. I _may_ have a look in the future, but I've had enough of it today for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:8183,down,down,8183,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,8,['down'],['down']
Availability,"""""""; .................................................................................................................................../Users/nathanshammah/github/qutip/qutip/control/optimizer.py:1070: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working; elif not isinstance(self.pulse_generator, collections.Iterable):; ..............................................................................................................................................................SSSSSS.......................................................................................................................Segmentation fault: 11. kills nosetests, which do not even start doing QuTiP's tests.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496380658:714,fault,fault,714,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496380658,1,['fault'],['fault']
Availability,"""Sparse eigs Hermitian"" test failing, in NOMKL build only - Segmentation fault",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/871:73,fault,fault,73,https://qutip.org,https://github.com/qutip/qutip/issues/871,1,['fault'],['fault']
Availability,"""malloc: Incorrect checksum"" error in qutip.testing qt.run()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1120:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/issues/1120,1,['error'],['error']
Availability,"# Projects. Another option is to use the Projects section on GitHub, which I am testing for a couple of ongoing projects. The downside of this option is that only organization members / owners can add or edit projects. https://github.com/qutip/qutip/projects",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132#issuecomment-563696592:126,down,downside,126,https://qutip.org,https://github.com/qutip/qutip/issues/1132#issuecomment-563696592,1,['down'],['downside']
Availability,"## Changelog; The changelog file is present in `qutip/qutip-doc`. This means that for each new release, the maintainers need to go through the merged PRs and update the file accordingly. . I propose introducing a copy of the changelog file, which would simplify maintenance: each contributor could update their own contribution without opening a PR in the separate repository, which often does not happen. A message of a basic template with checklist could be prompted in the PR for itself. . ## PR template; To prompt these actions, just like for the changelog, [a template](https://help.github.com/en/github/committing-changes-to-your-project/creating-a-commit-with-multiple-authors) with suggested checklist could be made in the PRs. . ## Repositories refactoring ; Actually, this is all part of a wider problem for which the `qutip-doc` does not get well updated in general. In Qutip 4.5.0 I added a lot of missing elements to `functions.rst` and `classes.rst` in the api-doc. Moreover, the User guide is seldom updated. Maybe, moving the `qutip-doc` repository in the main `qutip/qutip` repository could help in this regard.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1172:262,mainten,maintenance,262,https://qutip.org,https://github.com/qutip/qutip/issues/1172,1,['mainten'],['maintenance']
Availability,"### Bug Description. 4 tests produce errors (qutip installed with pip in a virtual environment on a Apple M2 pro chip). ### Code to Reproduce the Bug. ```shell; import qutip.testing; qutip.testing.run(); ```. ### Code Output. ```shell; ================================================================= ERRORS =================================================================; ____________________________________________ ERROR collecting qutip/tests/core/test_gates.py _____________________________________________; qutip/tests/core/test_gates.py:109: in <module>; class TestCliffordGroup:; qutip/tests/core/test_gates.py:115: in TestCliffordGroup; clifford = gates.qubit_clifford_group(); qutip/core/gates.py:815: in qubit_clifford_group; X = sigmax(); qutip/core/operators.py:387: in sigmax; return _SIGMAX.to(dtype, True); qutip/core/qobj.py:395: in to; _data.to(data_type, self._data),; qutip/core/data/convert.pyx:395: in qutip.core.data.convert._to.__call__; return self._convert[to_type, from_type](data); qutip/core/data/convert.pyx:101: in qutip.core.data.convert._converter.__call__; arg = self.functions[i](arg); qutip/core/data/dia.pyx:341: in qutip.core.data.dia.from_csr; cpdef Dia from_csr(CSR matrix):; qutip/core/data/dia.pyx:353: in qutip.core.data.dia.from_csr; return Dia((data, diags), shape=matrix.shape, copy=False); qutip/core/data/dia.pyx:134: in qutip.core.data.dia.Dia.__init__; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ___________________________________________ ERROR collecting qutip/tests/core/test_qobjevo.py ____________________________________________; qutip/tests/core/test_qobjevo.py:72: in <module>; rand_stochastic(N).to(_data.CSR),; qutip/random_objects.py:871: in rand_stochastic; return Qobj(M, dims=dims).to(dtype); qutip/core/qobj.py:307: in __init__; self._initi",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:37,error,errors,37,https://qutip.org,https://github.com/qutip/qutip/issues/2472,3,"['ERROR', 'error']","['ERROR', 'ERRORS', 'errors']"
Availability,"### Bug Description. Adding (or subtracting) a number from a ket modifies the data of the ket even without an assignment. In the code below, I would expect that `a` is not modified when the expression `a+1` is run, but it is. That is to say, `a+1` has the same effect as `a+=1`. In contrast, the data of the QObj does not change when adding a number to an operator or when multiplying a ket by a number. ### Code to Reproduce the Bug. ```shell; from qutip import basis; a = basis(2); print(a); print(); print(a+1); print(); print(a); ```. ### Code Output. ```shell; Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[2.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[2.]; [0.]]; ```. ### Expected Behaviour. First of all, adding a number to a ket is not a well-defined operation, so perhaps it should throw an error. However, I think that the value of `a+1` is not entirely unexpected, so it could be kept. The real issue is that the data of `a` is modified without the code ever explicitly reassigning `a`. This is definitely unexpected. I would expect the output to be:. `Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[2.]; [0.]]. Quantum object: dims = [[2], [1]], shape = (2, 1), type = ket; Qobj data =; [[1.]; [0.]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.23.5; Scipy Version: 1.10.0; Cython Version: 0.29.33; Matplotlib Version: 3.6.2; Python Version: 3.10.9; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2208:967,error,error,967,https://qutip.org,https://github.com/qutip/qutip/issues/2208,1,['error'],['error']
Availability,"### Bug Description. Call to `b.render()` errors after performing `b.add_vectors(vec)` where `b` is an instance of `qutip.Bloch()`. ### Code to Reproduce the Bug. ```shell; import qutip; b = qutip.Bloch(); b.make_sphere(); b.add_vectors([0,0,1]); b.render(); ```. ### Code Output. ```shell; /tmp/ipykernel_377526/3029128797.py in <module>; 2 b.make_sphere(); 3 b.add_vectors([0,0,1]); ----> 4 b.render(). ~/.conda/envs/myenv/lib/python3.8/site-packages/qutip/bloch.py in render(self); 503 self.plot_annotations(); 504 # Trigger an update of the Bloch sphere if it is already shown:; --> 505 self.fig.canvas.draw(); 506 ; 507 def plot_back(self):. ~/.local/lib/python3.8/site-packages/matplotlib/backends/backend_agg.py in draw(self); 434 (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 435 else nullcontext()):; --> 436 self.figure.draw(self.renderer); 437 # A GUI class may be need to update a window using this draw, so; 438 # don't forget to call the superclass. ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer, *args, **kwargs); 71 @wraps(draw); 72 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 73 result = draw(artist, renderer, *args, **kwargs); 74 if renderer._rasterizing:; 75 renderer.stop_rasterizing(). ~/.local/lib/python3.8/site-packages/matplotlib/artist.py in draw_wrapper(artist, renderer); 48 renderer.start_filter(); 49 ; ---> 50 return draw(artist, renderer); 51 finally:; 52 if artist.get_agg_filter() is not None:. ~/.local/lib/python3.8/site-packages/matplotlib/figure.py in draw(self, renderer); 2808 ; 2809 self.patch.draw(renderer); -> 2810 mimage._draw_list_compositing_images(; 2811 renderer, self, artists, self.suppressComposite); 2812 . ~/.local/lib/python3.8/site-packages/matplotlib/image.py in _draw_list_compositing_images(renderer, parent, artists, suppress_composite); 130 if not_composite or not has_images:; 131 for a in artists:; --> 132 a.draw(renderer); 133 else:; 134 # Composite any adjacent ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817:42,error,errors,42,https://qutip.org,https://github.com/qutip/qutip/issues/1817,1,['error'],['errors']
Availability,"### Bug Description. Construct a density matrix, via some array creation method (in this case numpy - haven't checked with others). Create a `rho0` for mesolve to use with the flat array while explicitly specifying the matrix dimensions in the `dims` parameter. Upon passing the density matrix to `mesolve` a segmentation fault occurs. A simple proof of concept is included below. `np.random.random` was used to fill the matrix in this case, but the issue was encountered using valid density matricies, and the issue seems to be unrelated to whether the matrix is valid or not as a density matrix. ### Code to Reproduce the Bug. ```shell; import qutip as qtip; import numpy as np. dim = 100 # Small dims don't work. I assume python has some buffer after the array; H = qtip.Qobj(np.identity(dim),dims=[[dim],[dim]]); rho0 = np.random.random([dim**2]); rho0 = qtip.Qobj(rho0.flatten(),dims=[[dim],[dim]]) # This fails; # rho0 = qtip.Qobj(rho0.reshape([dim,dim]),dims=[[dim],[dim]]) # This works; qtip.mesolve(rho0=rho0,H=H,tlist=np.linspace(0,10,1),progress_bar=qtip.ui.EnhancedTextProgressBar()); ```. ### Code Output. ```shell; [ 0% ] Elapsed 0.00s / Remaining 00:00:00:00[1] 3281154 segmentation fault (core dumped); ```. ### Expected Behaviour. The code should exit without failure or throw a python error elaborating on the issue. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.4; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/lala5th/.local/lib/python3.9/site-packages/qutip; ```. ### Additional Context. I ran the code through `gdb` to somewhat narrow down the cause of the issue. It seems that `dense2D_to_fastcsr_fmode` causes the segmentation fault, but the parameters passed to it seem fine at first glance, since I expect `ncols = 10000`. While I don't know how useful ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:322,fault,fault,322,https://qutip.org,https://github.com/qutip/qutip/issues/1782,1,['fault'],['fault']
Availability,"### Bug Description. ENR states and operators produce an error when used with v5 solvers (mesolve and mcsolve at least, sesolve seems ok). Key feature of ENR states is that dims and shape do not match, which can cause issues if dims and not shape are used in various operations. Chatted with @hodgestar and in this case we think we pinned it down to iadd in QobjEvo creating an identity matrix based on the dims and not the shape. https://github.com/qutip/qutip/blob/afd160bce00df522b9bcb0f856bc06d63296998d/qutip/core/cy/qobjevo.pyx#L459. though perhaps other issues could arise. ### Code to Reproduce the Bug. ```shell; from qutip import *; import numpy as np; N = 4 # number of cavities; M = 2 # number of cavity states; dims = [M] * N; #The number of excitations in the chain; excitations = 1 # total number of excitations; initial_excitiations = 1 # initial number of excitations; #Construct ENR operators and states. d = enr_destroy(dims, excitations); psi0 = enr_fock(dims, excitations, [initial_excitiations if m == 1 else 0 for m in range(N)]). H = sum([dd.dag() * dd for dd in d]). # coupling between cavities; e_ops = [dd.dag() * dd for dd in d]; c_ops = [0.01 * dd for dd in d]; times = np.linspace(0, 250, 1000); result = mesolve(H, psi0, times, c_ops, e_ops). #More minimal failure can be found with running this instead of mesolve:; H=QobjEvo(H); QobjEvo(H+0); ```. ### Code Output. ```shell; line 24, in <module>; QobjEvo(H); File ""qutip/core/cy/qobjevo.pyx"", line 196, in qutip.core.cy.qobjevo.QobjEvo.__init__; File ""qutip/core/cy/qobjevo.pyx"", line 757, in genexpr; File ""/home/neill/anaconda3/envs/qutip5dev/lib/python3.11/site-packages/qutip-5.0.0.dev0+nogit-py3.11-linux-x86_64.egg/qutip/core/qobj.py"", line 134, in out; return method(self, other); ^^^^^^^^^^^^^^^^^^^; File ""/home/neill/anaconda3/envs/qutip5dev/lib/python3.11/site-packages/qutip-5.0.0.dev0+nogit-py3.11-linux-x86_64.egg/qutip/core/qobj.py"", line 408, in __add__; return Qobj(_data.add(self._data, other._data),",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2122:57,error,error,57,https://qutip.org,https://github.com/qutip/qutip/issues/2122,2,"['down', 'error']","['down', 'error']"
Availability,"### Bug Description. Following the advice from [this SE post](https://stackoverflow.com/questions/70240506/why-is-numpy-native-on-m1-max-greatly-slower-than-on-old-intel-i5), I have been trying to install QuTiP in a fresh environment along with the BLAS `accelerate` libraries specific to the Apple M1/M2 chips, in order to get a speedup by using a BLAS library designed for my laptop. In a blank environment, I first ran `conda install numpy ""libblas=*=*accelerate""`, followed by `conda install qutip` and got the following error message: . ```; The following specifications were found to be incompatible with your system:. - feature:/osx-arm64::__osx==13.4=0; - feature:|@/osx-arm64::__osx==13.4=0; - qutip -> numpy[version='>=1.22.4,<2.0a0'] -> __osx[version='>=10.9']. Your installed version is: 13.4; ```; This is odd given that I am using `numpy 1.26.2` and `Mac OS 13.4`, which appear to satisfy the requirements. Instead, I tried using `pip install qutip` which circumvented this error, but results in incorrect behavior as described below. ### Code to Reproduce the Bug. ```shell; import numpy as np; import qutip as qt. X = qt.sigmax(); print(np.linalg.eigh(X)[1]); ```. ### Code Output. ```shell; `; [[-0.70710678-0.70710678j 0.70710678+1.20710678j]; [ 0.70710678+0.70710678j 0.70710678+0.5j ]]; `; ```. ### Expected Behaviour. `; [[-0.70710678+0.j 0.70710678+0.j]; [ 0.70710678+0.j 0.70710678+0.j]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.2; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.0; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am just comparing the behavior between two environments. The first one correctly diagonalizes the Pauli X operator with a Hadamard, and the second does not. The ""correct"" environment uses a standard numpy 1.26.2 install, with qutip installed with conda. The ""incor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2273:525,error,error,525,https://qutip.org,https://github.com/qutip/qutip/issues/2273,2,['error'],['error']
Availability,"### Bug Description. Hello, I just submitted this report but the system seems to have crashed. I am re-submitting it with a shorter title. If there is a duplicate, please disregard the first one. Thanks!. I have python scripts running qutip a couple of years ago. I never touched my qutip installation. Today I tried to run it again and got an error. It happened with the simple line ""_from qutip import *_"" (See error output in the output field below). So what changed? This happens even when I simply run the script from the command line, or run this command in the web-based Jupyter environment. I tried several solutions suggested on the web and by ChatGPT to uninstall/reinstall and roll back versions etc. Nothing worked. I got the exact same error each time.; The error happens as early as Import qutip. ### Code to Reproduce the Bug. ```shell; from qutip import *; ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); ~\AppData\Local\Temp/ipykernel_5760/2092932745.py in <module>; ----> 1 from qutip import *. ~\Anaconda3\lib\site-packages\qutip\__init__.py in <module>; 31 #; 32 ; ---> 33 from .core import *; 34 from .solver import *; 35 from .solver import nonmarkov. ~\Anaconda3\lib\site-packages\qutip\core\__init__.py in <module>; 1 from .options import *; 2 from .coefficient import *; ----> 3 from .qobj import *; 4 from .cy.qobjevo import *; 5 from .expect import *. ~\Anaconda3\lib\site-packages\qutip\core\qobj.py in <module>; 1806 from qutip.core.superoperator import vector_to_operator, operator_to_vector; 1807 from qutip.core.tensor import tensor_swap, tensor; -> 1808 from qutip.core import metrics as mts. ~\Anaconda3\lib\site-packages\qutip\core\metrics.py in <module>; 17 from .operators import qeye, qeye_like; 18 from .states import ket2dm; ---> 19 from .semidefinite import dnorm_problem, dnorm_sparse_problem; 20 from . import data as _data; 21 . ~\Anaconda3\lib\s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2500:344,error,error,344,https://qutip.org,https://github.com/qutip/qutip/issues/2500,4,['error'],['error']
Availability,"### Bug Description. Hi,; I've been trying to find the propagator for a time-dependent hamiltonian (with time-dependent collapse operators as well), and have been getting an error saying that the t_list lengths do not match in Qutip 5.0. I also tried to run it without using the collapse operators, but I get the same issue. The same code runs in Qutip 4.7. My goal is to actually find two-time correlation functions of a time-dependent operator (following this paper:https://journals.aps.org/pra/abstract/10.1103/PhysRevA.102.023717). What I did do (and what has worked) is decompose the operator into time-independent parts and then use Qutip's correlation_2op_2t. This takes a really long time, since I need to do this for 8 different pairs of operators. I thought of instead finding the propagator and manually finding the correlation using it instead. . From the code below, you can see that mesolve works, but the propagator doesn't. . ### Code to Reproduce the Bug. ```shell; gamma_1d_1 = Gamma; gamma_1d_2 = Gamma; ## Input pulse; u = input_pulse; mod_u_2 = np.abs(u)**2; integral_u_2 = np.cumsum(mod_u_2) * t[1]; g_u = np.conjugate(u)/np.sqrt(1 - integral_u_2). ## Hamiltonian; emitter_dims = 3; mode_dims = 7; a = 1.1; psi_coherent = coherent(mode_dims, a); ## Mode dims is defined above; w0_1 = 2 * np.pi * 0; alpha_1 = 2 * np.pi * 0.3; w0_2 = 2 * np.pi * 0; alpha_2 = 2 * np.pi * 0.3; gamma_intrinsic = 2 * np.pi * 0.0. sig_1 = tensor(destroy(emitter_dims), qeye(emitter_dims), qeye(mode_dims)); sig_2 = tensor(qeye(emitter_dims), destroy(emitter_dims), qeye(mode_dims)); a_u = tensor(qeye(emitter_dims), qeye(emitter_dims), destroy(mode_dims)). H0 = (w0_1 * sig_1.dag() * sig_1 - alpha_1/2 * sig_1.dag() * sig_1.dag() * sig_1 * sig_1) + \; (w0_2 * sig_2.dag() * sig_2 - alpha_2/2 * sig_2.dag() * sig_2.dag() * sig_2 * sig_2) + \; 0.5j * np.sqrt(gamma_1d_1 * gamma_1d_2) * (sig_1.dag() * sig_2 - sig_2.dag() * sig_1). H_int1 = [0.5j * (a_u.dag() * (np.sqrt(gamma_1d_1) * sig_1 + np.sqrt(ga",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2532:174,error,error,174,https://qutip.org,https://github.com/qutip/qutip/issues/2532,1,['error'],['error']
Availability,"### Bug Description. I am encountering a TypeError whenever I run any code for the second time. The behaviour is as expected when I run the code for the first time. I am encountering this error only on Linux. It is working fine on my Windows laptop. ### Code to Reproduce the Bug. ```shell; from qutip import *. import numpy as np. import matplotlib.pyplot as plt. qutip.about(); ```. ### Code Output. ```shell; File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/operators.py"", line 80, in jmat; A = 0.5 * (_jplus(j) + _jplus(j).getH()). TypeError: unsupported operand type(s) for +: 'fast_csr_matrix' and 'fast_csr_matrix'; ```. ### Expected Behaviour. QuTiP Version: 4.7.1; Numpy Version: 1.21.6; Scipy Version: 1.7.3; Cython Version: 0.29.33; Matplotlib Version: 3.0.2; Python Version: 3.7.3; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/premkr/.local/lib/python3.7/site-packages/qutip. ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.21.6; Scipy Version: 1.7.3; Cython Version: 0.29.33; Matplotlib Version: 3.0.2; Python Version: 3.7.3; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/premkr/.local/lib/python3.7/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121:188,error,error,188,https://qutip.org,https://github.com/qutip/qutip/issues/2121,1,['error'],['error']
Availability,"### Bug Description. I have a stabilizer circuit with five qubits. A measurement is happening in one of them so we can end up with two channels for the rest of the qubits for each measurement outcome 0 and 1. For each channel I can directly extract the corresponding Kraus operators and the total set of them (including both channels) satisfies the resolution to the identity (which is expected). However, if I first extract the choi matrices for both channels and from them I then extract the Kraus operators through the function choi_to_kraus(), the resolution to the identity is not satisfied. I attach below two txt files, that contain the choi matrices in Qobj form; [choi_even.txt](https://github.com/qutip/qutip/files/13360165/choi_even.txt); [choi_odd.txt](https://github.com/qutip/qutip/files/13360166/choi_odd.txt). ### Code to Reproduce the Bug. ```shell; kraus_list_even = choi_to_kraus(choi_even); kraus_list_odd = choi_to_kraus(choi_odd); print(sum(dag(op) * op for op in kraus_list_even) + sum(dag(op) * op for op in kraus_list_odd)); ```. ### Code Output. ```shell; Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[1.00505236 0. 0. 0. ]; [0. 1.00466051 0. 0. ]; [0. 0. 0.99533949 0. ]; [0. 0. 0. 0.99494764]]; ```. ### Expected Behaviour. Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[1. 0. 0. 0.]; [0. 1. 0. 0.]; [0. 0. 1. 0.]; [0. 0. 0. 1.]]. ### Your Environment. ```shell; QuTip Version: 4.7.3; Numpy Version: 1.24.4 ; Python Version: 3.9.13; ```. ### Additional Context. I've tried changing the tolerance in the function but the normalization is still wrong.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2263:1621,toler,tolerance,1621,https://qutip.org,https://github.com/qutip/qutip/issues/2263,1,['toler'],['tolerance']
Availability,"### Bug Description. I have been running into an issue similar to #806, #1605, and #1623 wherein usage of `mesolve` produces the attached error. It seems as if the majority of the users that reported that error had some suspect input parameters leading to slow convergence in integration; to confirm that this wasn't the case I tried running the [qubit dynamics QuTiP tutorial](https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/qubit-dynamics.ipynb), which _still_ produced the same error. My system specs are as follows: `21.2.0 Darwin Kernel Version 21.2.0: Sun Nov 28 20:29:10 PST 2021; root:xnu-8019.61.5~1/RELEASE_ARM64_T8101 arm64`. My package installations can be found here: [requirements.txt](https://github.com/qutip/qutip/files/8725390/requirements.txt). These are also listed in the below categories. Any help would be appreciated. ### Code to Reproduce the Bug. ```shell; import matplotlib.pyplot as plt; import numpy as np; from qutip import *; def qubit_integrate(epsilon, delta, g1, g2, solver):. H = epsilon / 2.0 * sigmaz() + delta / 2.0 * sigmax(); ; # collapse operators; c_ops = []. if g1 > 0.0:; c_ops.append(np.sqrt(g1) * sigmam()). if g2 > 0.0:; c_ops.append(np.sqrt(g2) * sigmaz()). e_ops = [sigmax(), sigmay(), sigmaz()]; ; if solver == ""me"":; output = mesolve(H, psi0, tlist, c_ops, e_ops) ; elif solver == ""es"":; output = essolve(H, psi0, tlist, c_ops, e_ops) ; elif solver == ""mc"":; ntraj = 250; output = mcsolve(H, psi0, tlist, ntraj, c_ops, [sigmax(), sigmay(), sigmaz()]) ; else:; raise ValueError(""unknown solver""); ; return output.expect[0], output.expect[1], output.expect[2]; epsilon = 0.0 * 2 * np.pi # cavity frequency; delta = 1.0 * 2 * np.pi # atom frequency; g2 = 0.15; g1 = 0.0. # intial state; psi0 = basis(2,0). tlist = np.linspace(0,5,200). # analytics; sx_analytic = np.zeros(shape(tlist)); sy_analytic = -np.sin(2*np.pi*tlist) * np.exp(-tlist * g2); sz_analytic = np.cos(2*np.pi*tlist) * np.exp(-tlist * g2); sx1, sy1, sz1 = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:138,error,error,138,https://qutip.org,https://github.com/qutip/qutip/issues/1896,3,['error'],['error']
Availability,"### Bug Description. I recently needed to reinstall packages on my conda environment. I needed to run some code written for QuTiP 4. This code worked without issue before. However, there is now an error when I try to multiply two operators. It seems that this has to do with the typing in fastsparse. Regardless, the code below is trivial, and it really should not cause an error. I'm a little bit at a loss as to how to fix it. Is this a version related problem?. ### Code to Reproduce the Bug. ```shell; import qutip as qt; a = qt.create(10); a_dag = a.dag(); n = a_dag * a; ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[2], line 4; 2 a = qt.create(10); 3 a_dag = a.dag(); ----> 4 n = a_dag * a. File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/qutip/qobj.py:497, in Qobj.__mul__(self, other); 495 if self.dims[1] == other.dims[0]:; 496 out = Qobj(); --> 497 out.data = self.data * other.data; 498 dims = [self.dims[0], other.dims[1]]; 499 out.dims = dims. File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/scipy/sparse/_matrix.py:44, in spmatrix.__mul__(self, other); 43 def __mul__(self, other):; ---> 44 return self._matmul_dispatch(other). File ~/anaconda3/envs/danjou/lib/python3.12/site-packages/scipy/sparse/_base.py:606, in _spbase._matmul_dispatch(self, other); 604 if other.ndim == 1:; 605 raise ValueError('Cannot yet multiply a 1d sparse array'); --> 606 return self._matmul_sparse(other); 608 # If it's a list or whatever, treat it like an array; 609 other_a = np.asanyarray(other); ...; ---> 43 raise TypeError('fast_csr_matrix allows only int32 indices.'); 44 if args[2].shape[0] and args[1].dtype != np.int32:; 45 raise TypeError('fast_csr_matrix allows only int32 indptr.'). TypeError: fast_csr_matrix allows only int32 indices.; ```. ### Expected Behaviour. The code should run without error. ### Your Environment. ```shell; QuTiP Version: 4.7.6; N",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2468:197,error,error,197,https://qutip.org,https://github.com/qutip/qutip/issues/2468,2,['error'],['error']
Availability,"### Bug Description. I took a qutip script created 3 years ago (named ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb"") and ran it now (exact copied named ""Test.ipynb"") and got different results.; There is a caveat, whether relevant or not. When I ran the duplicated script (Test.ipynb) this time, I got errors keeping me from importing qutip. I submitted a ticket yesterday (#2500), which was kindly addressed, recommending that I uninstall cvxpy to remove conflict. I did that and was able to import qutip.; I then ran the duplicate script, but got a different result from 3 years ago. If you compare the output at block 23, you'll see it deviates significantly from the corresponding block in the old script. I have changed nothing in hte duplicated script, other than uninstalling cvxpy to make it run.; I then reinstalled cvxpy with upgrade and then qutip again. This time I can still import qutip, but with a warning. I ran the script with no problem, but still got the same deviated behavior from 3 years ago. [codes.zip](https://github.com/user-attachments/files/16367713/codes.zip). The 3-year-old script is included only to show the previous results. It is not meant to be run. I suspect if you run it with your likely different setup, you might get the same deviation as I did, or even yet another different deviation. I cannot recall the state of installation I had from 3 years ago. I believe I did it through conda. I just realized that I cannot include qutip scripts with this report. I included a zipped folder containing these two files. Please let me know if it didn'tgo through. Thank you! . ### Code to Reproduce the Bug. ```shell; Old code in ""Ikonen First Shot New Unitary Trans States 2 level Full H Gated Test 2 - Copy.ipynb""; New code in ""Test.ipynb""; Both attached.; These two codes are exactly identical. Only difference is in the qutip installation, one from 3 years ago and one just completed.; ```. ### Code Output. ```shell; Output i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501:341,error,errors,341,https://qutip.org,https://github.com/qutip/qutip/issues/2501,1,['error'],['errors']
Availability,"### Bug Description. I try to install Qutip on my macOS (m1 pro, Ventura 13.0.1). I typed `pip3 install qutip` in the terminal, and get the following error message:. ``` .... copying qutip/cy/openmp/src/zspmv_openmp.hpp -> build/lib.macosx-10.9-universal2-cpython-39/qutip/cy/openmp/src; running build_ext; building 'qutip.cy.cqobjevo' extension; creating build/temp.macosx-10.9-universal2-cpython-39; creating build/temp.macosx-10.9-universal2-cpython-39/qutip; creating build/temp.macosx-10.9-universal2-cpython-39/qutip/cy; clang -Wno-unused-result -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -iwithsysroot/System/Library/Frameworks/System.framework/PrivateHeaders -iwithsysroot/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -arch arm64 -arch x86_64 -Werror=implicit-function-declaration -I/private/var/folders/8s/46j41bsj6rq3xkzplbcmjm2h0000gn/T/pip-build-env-do4siooe/overlay/lib/python3.9/site-packages/numpy/core/include -I/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/Headers -c qutip/cy/cqobjevo.cpp -o build/temp.macosx-10.9-universal2-cpython-39/qutip/cy/cqobjevo.o -w -O3 -funroll-loops -mmacosx-version-min=10.9; qutip/cy/cqobjevo.cpp:38:10: fatal error: 'Python.h' file not found; #include ""Python.h""; ^~~~~~~~~~; 1 error generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; ERROR: Failed building wheel for qutip; Failed to build qutip; ERROR: Could not build wheels for qutip, which is required to install pyproject.toml-based projects; ```. ### Code to Reproduce the Bug. ```shell; pip3 install qutip; ```. ### Code Output. _No response_. ### Expected Behaviour. It should be installed successfully. ### Your Environment. ```shell; pip version: 22.3.1; ```. ### Additional Context. I tried `pip3 install pyproject` but it",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2027:150,error,error,150,https://qutip.org,https://github.com/qutip/qutip/issues/2027,1,['error'],['error']
Availability,"### Bug Description. I try to use `mesolve` to do a system dynamics with a system static Hamiltonian `H_0` under a driving term governed by a cosine shape waveform `cos_waveform`. . We try to method to construct the dynamical hamiltonain `H_d` in two ways: one is `H_d = [H_0, [a_dag + a, cos_waveform]]` and `H_d = [H_0, [a_dag + a, cos_waveform_array]]`, corresponding to `[ops, func]` and `[ops, ndarray]` cases, respectively. You can see from the code I provided, the cos_waveform_array is given by `drive_pulse_y = np.array([cos_waveform(t, None) for t in tlist], dtype=np.complex128)`. We expect the simulation result of the system should be the same under these two cases. We plot the diagonal matrix elements of the density matrix to see the dynamics of the system. But the result are different. I try to find the issue probably happens due to function `mesolve._qobjevo_set` or the different treatments in `QobjEvo.ops` as it contains a string `""func""` and `""ndarray""` in our cases, and the `""ndarray""` case has some code errors. ### Code to Reproduce the Bug. ```shell; from qutip import *; import numpy as np; import matplotlib.pyplot as plt. # Define the pulse. t_rising = 15 # ns; t_g = t_rising + 150; phase = 0; freq = 6.3; ampli = -0.2 * 2*np.pi; t_delay = 0. def cos_waveform(t, args):; t_relative = t - t_delay; if t_relative < 0: ; return 0; if 0 <= t_relative <= t_rising:; return ampli/2 * np.cos(freq * np.pi * 2 * t_relative + phase)* (1 - np.cos(np.pi * t_relative / t_rising)) ; if t_rising < t_relative < t_g - t_rising:; return ampli * np.cos(freq * np.pi * 2 * t_relative); if t_g - t_rising <= t_relative <= t_g:; return ampli/2 * np.cos(freq * np.pi * 2 * t_relative + phase)* (1 - np.cos(np.pi * ( t_relative - t_g + 2 * t_rising)/t_rising)); if t_g < t_relative: ; return 0. # Setup a single transmon; N = 4; w = 6.3; alpha = -0.3. a = destroy(N); a_dag = a.dag(). H_0 = w* a_dag * a + alpha/2 * a_dag * a_dag * a * a; H_0 *= 2 * np.pi; state_0 = H_0.eigenstates()[1][0",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2253:1031,error,errors,1031,https://qutip.org,https://github.com/qutip/qutip/issues/2253,1,['error'],['errors']
Availability,"### Bug Description. I updated some old code from v4.7 to v5 this week and found some examples of brmesolve which were substantially slower... going from 30 seconds to 15+ minutes. Fiddling around a little I narrowed it down to at least one issue (though there may be others). This is particularly tricky because I also have examples which are substantially faster in v5. The one issue I found was that bloch_redfield_tensor() always returns a dense bloch-redfield tensor, even if you set br_type to sparse. It does return a sparse one if fock_basis=false, which points at the issue being; https://github.com/qutip/qutip/blob/0b4260e821cf4d095df6fa02ea5a71bc0655516c/qutip/core/_brtensor.pyx#L281; so this call to from_eigbasis() in _brtools always returning a dense object; https://github.com/qutip/qutip/blob/0b4260e821cf4d095df6fa02ea5a71bc0655516c/qutip/core/_brtools.pyx#L290. if i manually convert the tensor back to sparse again, and use it, it speeds up these hard cases by a factor of 5 or 6. Not sure if it resolves my original 30seconds -> 15 minutes problem completely, will check a bit more. In some sense this relates to the old issue of how broadly default_dtype should be applied, but here it seems more specific in that one requests a sparse tensor and gets a dense one. ### Code to Reproduce the Bug. ```shell; R = bloch_redfield_tensor(H, [[Q, Lor]], fock_basis=True, sparse_eigensolver=True, br_dtype='sparse'); print(R.dtype); ```. ### Code Output. ```shell; <class 'qutip.core.data.dense.Dense'>; ```. ### Expected Behaviour. Sparse tensor and fast brmesolve!. ### Your Environment. ```shell; QuTiP Version: 5.1.0.dev0+8efc188; Numpy Version: 2.0.1; Scipy Version: 1.14.0; Cython Version: 3.0.11; Matplotlib Version: 3.9.1.post1; Python Version: 3.10.12; Number of CPUs: 28; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2530:220,down,down,220,https://qutip.org,https://github.com/qutip/qutip/issues/2530,1,['down'],['down']
Availability,"### Bug Description. I wanted to use the new `step` method for the stochastic solver class `SMESolver`, but it always breaks down. I also tried it for `SSESolver`, but the same error message occurs. I use qutip 5.0.3. I took the example from the documentation as a minimal working example. I also tried `step` for the `MESolver` class and there it works. I think it should also not only output the state but also the measurement output if possible. As a side note, I also wanted to know if there is a particular reason why the argument for the initial state in the `start` method is called `state0` for `MESolver`, and `state` for `SMESolver`. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import destroy, coherent, SMESolver, expect. # parameters; DIM = 20 # Hilbert space dimension; DELTA = 5 * 2 * np.pi # cavity detuning; KAPPA = 2 # cavity decay rate; INTENSITY = 4 # intensity of initial state; NUMBER_OF_TRAJECTORIES = 500. # operators; a = destroy(DIM); x = a + a.dag(); H = DELTA * a.dag() * a. rho_0 = coherent(DIM, np.sqrt(INTENSITY)); times = np.arange(0, 1, 0.0025). stoc_solver = SMESolver(; H,; c_ops=[],; sc_ops=[np.sqrt(KAPPA) * a],; heterodyne=False,; options={""dt"": 0.00125, ""store_measurement"": True,}; ); data = [4.]; stoc_solver.start(state=rho_0, t0=times[0]); for t in times[1:]:; psi_t = stoc_solver.step(t); data.append(expect(x, psi_t)); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[4], line 29; 27 stoc_solver.start(state=rho_0, t0=times[0]); 28 for t in times[1:]:; ---> 29 psi_t = stoc_solver.step(t); 30 data.append(expect(x, psi_t)). File /user/anaconda/envs/myenv/lib/python3.9/site-packages/qutip/solver/multitraj.py:129, in MultiTrajSolver.step(self, t, args, copy); 127 raise RuntimeError(""The `start` method must called first.""); 128 self._argument(args); --> 129 _, state = self._integrator.integrate(t, copy=False); 13",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2491:125,down,down,125,https://qutip.org,https://github.com/qutip/qutip/issues/2491,2,"['down', 'error']","['down', 'error']"
Availability,"### Bug Description. I'm trying to follow [this tutorial](https://nbviewer.ipython.org/github/jrjohansson/qutip-lectures/blob/master/Lecture-8-Adiabatic-quantum-computing.ipynb) with the current version of qutip, but ran into a bug in `mesolve`. If I do `from qutip import *` at the start of the notebook, the following error occurs:; ```; NameError Traceback (most recent call last); <ipython-input-9-d038ca745718> in <module>; 1 # Evolve the system, request the solver to call process_rho at each time step.; 2 ; ----> 3 mesolve(h_t, psi0, taulist, [], process_rho, args). ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 216 if not use_mesolve:; 217 return sesolve(H, rho0, tlist, e_ops=e_ops, args=args, options=options,; --> 218 progress_bar=progress_bar, _safe_mode=_safe_mode); 219 ; 220 if isket(rho0):. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 135 ; 136 res = _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, options,; --> 137 progress_bar, dims=psi0.dims); 138 if e_ops_dict:; 139 res.expect = {e: res.expect[n]. ~/anaconda3/envs/fda/lib/python3.7/site-packages/qutip/sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 360 if expt_callback:; 361 # use callback method; --> 362 output.expect.append(e_ops(t, Qobj(cdata, dims=dims))); ...; ---> 11 H = qt.qobj_list_evaluate(h_t, tau, args); 12 ; 13 # find the M lowest eigenvalues of the system. NameError: name 'qt' is not defined; ```. If I do `import qutip as qt`, a different error occurs:; ```; AttributeError Traceback (most recent call last); <ipython-input-8-ea74e5ab1d35> in <module>; 1 # Evolve the system, request the solver to call process_rho at each time step.; 2 ; ----> 3 qt.mesolve(h_t, psi0, taulist, [], process_rho, args). ~/anaconda3/envs/fda/lib/python3.7/site-packages/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930:320,error,error,320,https://qutip.org,https://github.com/qutip/qutip/issues/1930,1,['error'],['error']
Availability,"### Bug Description. I'm unable to run a time-dependent Hamiltonian, or even compile one with a string coefficient. . I tried to copy the example code on the website ; [](https://qutip.org/docs/latest/guide/dynamics/dynamics-time.html); as well as write a simple script (below), but both fail. The output is a traceback which ends with the following errors and exceptions:; ```; **ImportError: Building module cqobjevo_compiled_coeff_8478972439442 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']; Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_8478972439442.pyx**; ```. I'd appreciate some help, as my code requires the string input to run faster, with the speed-up offered by Cython. It is quite slow with the function-based input. . ### Code to Reproduce the Bug. ```shell; import qutip as qp; import numpy as np; import matplotlib.pyplot as plt. excited = qp.basis(2, 1); ground = qp.basis(2, 0). H0 = qp.sigmaz(); H1 = qp.sigmax() # time-dependent term. H = [H0,[H1, 'A * exp(-(t / sigma) ** 2)']]. t = np.linspace(-1, 1, 200) # Define time vector; args = {'A': 6, 'sigma': 0.145}; output = qp.mesolve(H, ground, t, e_ops = [qp.sigmaz()], args=args); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; DistutilsPlatformError Traceback (most recent call last); ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(name, pyxfilename, pyxbuild_dir, is_package, build_inplace, language_level, so_path); 214 so_path = build_module(module_name, pyxfilename, pyxbuild_dir,; --> 215 inplace=build_inplace, language_level=language_level); 216 mod = imp.load_dynamic(name, so_path). ~\Anaconda3\lib\site-packages\pyximport\pyximport.py in build_module(name, pyxfilename, pyxbuild_dir, inplace, language_level); 190 inplace=inplace,; --> 191 reload_support=pyxargs.reload_support); 192 assert os.path.exists(so_path), ""Cannot find: %s"" % so_path. ~\Anaco",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:350,error,errors,350,https://qutip.org,https://github.com/qutip/qutip/issues/1914,2,['error'],['errors']
Availability,"### Bug Description. In a fresh conda environment with python 3.10, qutip installation from pip fails. It seems that this was due to people jumping to Python 3.10 too early https://github.com/numpy/numpy/issues/20039. Since October this issue is resolved and we can install Numpy from pip with Python 3.10. However, trying to install qutip with Python 3.10 still leads to this error. Even if I had Numpy (numpy==1.21.4) already installed, qutip tries to build Numpy again. I cannot install numpy 1.20.0 with Python 3.10 and so downgrading my Python to 3.9 is the only solution for now. @hodgestar @jakelishman We should try to find a fix for this ASAP . Any thoughts on this?. ### Code to Reproduce the Bug. ```shell; conda create -n py310 python=3.10; conda activate py310; pip install qutip; ```. ### Code Output. ```shell; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ```; ```. ### Expected Behaviour. Qutip should have got installed after installing the dependencies. ### Your Environment. ```shell; N/A.; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1732:377,error,error,377,https://qutip.org,https://github.com/qutip/qutip/issues/1732,4,"['ERROR', 'down', 'error']","['ERROR', 'downgrading', 'error']"
Availability,"### Bug Description. In a fresh virtual environment, doing `pip install qutip` will cause the error. ```; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. I know this is quite an old OS and Python version, but that's what I have available. Numpy 1.24 should be supported in Python 3.8.10. ### Code to Reproduce the Bug. ```shell; $ python3 -m venv /tmp/test-venv. $ source /tmp/test-venv/bin/activate. $ pip install --upgrade pip; Collecting pip; Using cached pip-24.0-py3-none-any.whl (2.1 MB); Installing collected packages: pip; Attempting uninstall: pip; Found existing installation: pip 20.0.2; Uninstalling pip-20.0.2:; Successfully uninstalled pip-20.0.2; Successfully installed pip-24.0. $ pip list; Package Version; ------------- -------; pip 24.0; pkg_resources 0.0.0; setuptools 44.0.0. $ pip install qutip; Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Installing build dependencies ... done; Getting requirements to build wheel ... done; ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19.; ```. ### Code Output. _No response_. ### Expected Behaviour. Qutip should install normally. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: (1.17.3) (apparently this is the version it's trying to install); Scipy Version: (1.10.1); Cython Version: (3.0.2); Matplotlib Version: -; Python Version: 3.8.10; Number of CPUs: 16; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64) (Ubuntu 20.04.6 LTS); ```. ### Additional Context. Here's the output of `pip install --verbose qutip`, not sure if i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412:94,error,error,94,https://qutip.org,https://github.com/qutip/qutip/issues/2412,3,"['ERROR', 'avail', 'error']","['ERROR', 'available', 'error']"
Availability,"### Bug Description. In the current documentation I cannot find anywhere how the underdamped spectral density for the HEOM module (i.e. `UnderDampedBath`) is defined. While for the `gamma` and `w0` parameters this is quite straightforward, different authors use very different conventions in the prefactors multiplying the spectral density (factors of two, pi, gamma, w0, etc.). This makes it very hard to understand how the `lam` parameter is exactly defined. Having a proper understanding of the `lam` parameter is quite essential to properly compare with the results obtained via other methods. I think it would be quite useful to explicitly write down the mathematical formula of the spectral density being used in the documentation. In the mean time, I would also appreciate if anyone with knowledge of the proper definition would be kind enough to share it here. ### Code to Reproduce the Bug. _No response_. ### Code Output. _No response_. ### Expected Behaviour. I would expect the documentation to make it clear what each parameter controls in the spectral density definition. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.23.1; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.10.5; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/fc/bin/venvs/qutip/lib/python3.10/site-packages/q",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1959:651,down,down,651,https://qutip.org,https://github.com/qutip/qutip/issues/1959,1,['down'],['down']
Availability,"### Bug Description. Installing `qutip` with `pip` on Python 3.11 fails at the ""Getting the requirements to build the wheel"" stage. Potentially related to [these changes](https://github.com/pypa/packaging/pull/407) in `packaging`, introduced in the latest update to `22.0`. ### Code to Reproduce the Bug. ```shell; pip install qutip --no-cache-dir; ```. ### Code Output. ```shell; Collecting qutip; Downloading qutip-4.7.0.tar.gz (3.6 MB); ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 3.6/3.6 MB 18.2 MB/s eta 0:00:00; Installing build dependencies ... done; Getting requirements to build wheel ... error; error: subprocess-exited-with-error; ; × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> [20 lines of output]; Traceback (most recent call last):; File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 351, in <module>; main(); File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 333, in main; json_out['return_val'] = hook(**hook_input['kwargs']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/Users/hsilver/opt/miniconda3/envs/py311/lib/python3.11/site-packages/pip/_vendor/pep517/in_process/_in_process.py"", line 118, in get_requires_for_build_wheel; return hook(config_settings); ^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdm",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:399,Down,Downloading,399,https://qutip.org,https://github.com/qutip/qutip/issues/2036,4,"['Down', 'error']","['Downloading', 'error']"
Availability,"### Bug Description. Installing qutip with `pip install qutip` fails on a MacBook Pro with M1 Pro running macOS 12.0.1, due to the build dependency `numpy<1.20` failing to build. This happens both with miniconda python 3.9.6 and miniforge python 3.9.7. Same happens if I clone the master branch and build. If I edit `pyproject.toml` and `setup.cfg` to remove the `<1.20` in Numpy, then qutip builds correctly (then I get same problem as Issue #1606 when importing, but that's another story). ### Code to Reproduce the Bug. ```shell; conda create -n qutip_test; pip install qutip; ```. ### Code Output. ```shell; Collecting qutip; Using cached qutip-4.6.2.tar.gz (3.4 MB); Installing build dependencies ... error; ERROR: Command errored out with exit status 1:; command: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; cwd: None; Complete output (912 lines):; Collecting setuptools; Using cached setuptools-59.5.0-py3-none-any.whl (952 kB); Collecting packaging; Using cached packaging-21.3-py3-none-any.whl (40 kB); Collecting wheel; Using cached wheel-0.37.0-py2.py3-none-any.whl (35 kB); Collecting cython>=0.29.20; Using cached Cython-0.29.25-py2.py3-none-any.whl (983 kB); Collecting numpy<1.20,>=1.16.6; Using cached numpy-1.19.5.zip (7.3 MB); Installing build dependencies: started; Installing build dependencies: finished with status 'done'; Getting requirements to build wheel: started; Getting requirements to build wheel: finished with status 'done'; Preparing metadata (pyproject.toml): started; Preparing metadata (pyproject.toml): finished with status ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:706,error,error,706,https://qutip.org,https://github.com/qutip/qutip/issues/1740,3,"['ERROR', 'error']","['ERROR', 'error', 'errored']"
Availability,"### Bug Description. It seems that in new matplotlib version they separated classes `Axes` and `Axes3d`, so some plotting functions that have 3d aspects don't work as expected anymore. See example in the code below. ### Code to Reproduce the Bug. ```shell; from qutip import qpt_plot_combined; qpt_plot_combined(np.eye(4), [[""I"", ""X"", ""Y"", ""Z""]]); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); Cell In[8], line 2; 1 from qutip import qpt_plot_combined; ----> 2 qpt_plot_combined(np.eye(4), [[""I"", ""X"", ""Y"", ""Z""]]). File ~\AppData\Local\pypoetry\Cache\virtualenvs\photonic-component-simulator-biULA8HA-py3.9\lib\site-packages\qutip\tomography.py:143, in qpt_plot_combined(chi, lbls_list, title, fig, ax, figsize, threshold); 140 if not title:; 141 title = r""$\chi$""; --> 143 matrix_histogram_complex(chi, xlabels, xlabels, title=title, ax=ax,; 144 threshold=threshold); 146 return fig, ax. File ~\AppData\Local\pypoetry\Cache\virtualenvs\photonic-component-simulator-biULA8HA-py3.9\lib\site-packages\qutip\visualization.py:820, in matrix_histogram_complex(M, xlabels, ylabels, title, limits, phase_limits, colorbar, fig, ax, threshold); 818 # x axis; 819 xtics = -0.5 + np.arange(M.shape[0]); --> 820 ax.axes.w_xaxis.set_major_locator(plt.FixedLocator(xtics)); 821 if xlabels:; 822 nxlabels = len(xlabels). AttributeError: 'Axes3D' object has no attribute 'w_xaxis'; ```. ### Expected Behaviour. There should be a plot and not an error. ### Your Environment. ```shell; QuTiP vesion: '4.7.3'; matplotlib version: '3.8.0'; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2233:1542,error,error,1542,https://qutip.org,https://github.com/qutip/qutip/issues/2233,1,['error'],['error']
Availability,"### Bug Description. Might just be me mis-using the new 5.X branch of Qutip. I get a memory error when upgrading to the new branch. It appears to fail when performing self._to_dm(state) for each state. My states are vectors of length 800 - so it runs out of memory. Is it possible to request the solver only stores the wavefunction at each timestep? I want the wavefunction for each trajectory for each timestep. Alternatively one could introduce a new ""proj"" data storage to make this more efficient. ### Code to Reproduce the Bug. ```shell; result = qutip.ssesolve(; hamiltonian_qobj,; initial_state_qobj,; times.times,; sc_ops=sc_ops,; e_ops=[],; options={; ""method"": ""euler"",; ""progress_bar"": ""enhanced"",; ""store_states"": True,; ""keep_runs_results"": True,; ""improved_sampling"": False,; ""dt"": times.delta_t / times.fundamental_n,; },; ntraj=n_trajectories, # cspell:disable-line; ); ```. ### Code Output. ```shell; File ""..."", line 270, in solve_stochastic_schrodinger_equation; result = qutip.ssesolve(; ^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\stochastic.py"", line 461, in ssesolve; return sol.run(; ^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\multitraj.py"", line 198, in run; map_func(; File ""...\.venv\Lib\site-packages\qutip\solver\parallel.py"", line 122, in serial_map; remaining_ntraj = reduce_func(result); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 645, in add ; op(trajectory); File ""...\.venv\Lib\site-packages\qutip\solver\result.py"", line 519, in _reduce_states; accu + self._to_dm(state); ~~~~~^~~~~~~~~~~~~~~~~~~~; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 134, in out; return method(self, other); ^^^^^^^^^^^^^^^^^^^; File ""...\.venv\Lib\site-packages\qutip\core\qobj.py"", line 408, in __add__ ; return Qobj(_data.add(self._data, other._data),; ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""qutip\\core\\data\\dispatch.pyx"", line 392, in qutip.core.data.dispatch.Dispatcher.__call__; File """,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/2299,1,['error'],['error']
Availability,### Bug Description. My CI builds are suddenly erroring out:. ```python; ../../../virtualenv/python3.8.13/lib/python3.8/site-packages/my_code.py:14: in <module>; import qutip; ../../../virtualenv/python3.8.13/lib/python3.8/site-packages/qutip/__init__.py:64: in <module>; import qutip.cy.pyxbuilder as _pyxbuilder; ../../../virtualenv/python3.8.13/lib/python3.8/site-packages/qutip/cy/pyxbuilder.py:17: in <module>; old_get_distutils_extension = pyximport.pyximport.get_distutils_extension; E AttributeError: module 'pyximport.pyximport' has no attribute 'get_distutils_extension'; ```. ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. _No response_. ### Expected Behaviour. no exception. ### Your Environment. ```shell; I'm using `qutip-4.7.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl`.; ```. ### Additional Context. This exact same environment was working in yesterday's CI build. We speculate that `Cython`'s major release [yesterday](https://pypi.org/project/Cython/#history) is related.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2198:47,error,erroring,47,https://qutip.org,https://github.com/qutip/qutip/issues/2198,1,['error'],['erroring']
Availability,"### Bug Description. Qutip is not being imported well. Something with pyximport is not working. . ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. ```shell; >>> import qutip as qt ; Traceback (most recent call last): ; File ""<stdin>"", line 1, in <module> ; File ""/home/chensel/miniconda3/envs/roccqet-cqed-models/lib/python3.10/site-packages/qutip/__init__.py"", line 64, in <module> ; import qutip.cy.pyxbuilder as _pyxbuilder ; File ""/home/chensel/miniconda3/envs/roccqet-cqed-models/lib/python3.10/site-packages/qutip/cy/pyxbuilder.py"", line 17, in <module>; old_get_distutils_extension = pyximport.pyximport.get_distutils_extension; AttributeError: module 'pyximport.pyximport' has no attribute 'get_distutils_extension'; ```. ### Expected Behaviour. A clean import . ### Your Environment. ```shell; Can't check (importing not successful); ```. ### Additional Context. Sometimes there is another import error with an atribute called 'format'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2206:934,error,error,934,https://qutip.org,https://github.com/qutip/qutip/issues/2206,1,['error'],['error']
Availability,"### Bug Description. Qutip's HTMLProgressBar seems not to function any more in jupyter notebooks. Perhaps since ""jupyterlab"" was introduced. ### Code to Reproduce the Bug. ```shell; import qutip as qt; import numpy as np; qt.mcsolve(qt.sigmax(), state=qt.basis(2, 0), tlist=np.linspace(0, 5, 100), c_ops=[qt.sigmam()], ntraj=100, options={'progress_bar': 'html'}); ```. ### Code Output. ```shell; [[ empty progress bar ]]; Javascript Error: $ is not defined; Javascript Error: $ is not defined; Javascript Error: $ is not defined; Javascript Error: $ is not defined; ...; ```. ### Expected Behaviour. There should be no error and the progress bar should display the progress. ### Your Environment. ```shell; ""About Jupyter Notebook"" shows version 7.2.1. QuTiP Version: 5.1.0.dev0+487e4ec; Numpy Version: 2.0.0; Scipy Version: 1.13.1; Cython Version: 3.0.10; Matplotlib Version: 3.8.4; Python Version: 3.12.4; Number of CPUs: 20; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. The weird thing is that `$()` actually is available, as one can see in the developer console. Relevant stackoverflow discussions:; * https://stackoverflow.com/questions/72316844/jupyter-notebook-jupyternotify-javascript-error-is-not-defined; * https://stackoverflow.com/questions/22004386/notify-when-execution-command-is-completed (in comments to top answer). Thanks to Hussein Shiri for pointing this bug out on the mailing list.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2475:434,Error,Error,434,https://qutip.org,https://github.com/qutip/qutip/issues/2475,7,"['Error', 'avail', 'error']","['Error', 'available', 'error', 'error-is-not-defined']"
Availability,"### Bug Description. Running `import qutip` eagerly imports `scipy.fft` via `qutip.correlation`, causing all native dependencies of `scipy.fft`'s fftpack-based implementation to load. In particular when using SciPy 1.8.1 on Linux, fftpack requires `GLIBCXX_3.4.30` but contains a private copy of `GLIBCXX_3.4.29` such that the import fails unless another Python package provides its own implementation of `GLIBCXX_3.4.30` (typically, PyZMQ via `jupyter-client`). This in turn can cause `import qutip` to fail even when not using features backed by fftpack (e.g.: as happened in the case of https://github.com/microsoft/iqsharp/pull/676). ### Code to Reproduce the Bug. ```shell; import qutip; ```. ### Code Output. ```shell; # Example from build logs for https://dev.azure.com/ms-quantum-public/Microsoft%20Quantum%20(public)/_build/results?buildId=42116&view=logs&j=1c33f9fa-7159-5ed6-d128-ab2ed6cefd14&t=74d456a9-739b-5d92-ed57-026d8fef9427, ; $PREFIX/lib/python3.8/site-packages/zmq/backend/cython/../../../../.././libstdc++.so.6: version `GLIBCXX_3.4.30' not found (required by $PREFIX/lib/python3.8/site-packages/scipy/fft/_pocketfft/pypocketfft.cpython-38-x86_64-linux-gnu.so); ```. ### Expected Behaviour. `import qutip` should not cause native dependencies of `scipy.fft` to be imported eagerly. ### Your Environment. ```shell; (omitted --- `qutip.about()` failed to execute due to error running `import qutip`); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1915:1390,error,error,1390,https://qutip.org,https://github.com/qutip/qutip/issues/1915,1,['error'],['error']
Availability,"### Bug Description. SciPy 1.11 raises the following two deprecation warnings during qutip-4.7.X test runs:; ````; FAILED qutip/tests/test_sp_eigs.py::test_DenseHermValsVecs - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; FAILED qutip/tests/test_sp_eigs.py::test_DenseValsOnly - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; =========== 2 failed, 3250 passed, 12 skipped in 1792.40s (0:29:52) ============; ```. ### Code to Reproduce the Bug. ```shell; pytest -W error qutip/tests/test_sp_eigs.py; ```. ### Code Output. ```shell; FAILED qutip/tests/test_sp_eigs.py::test_DenseHermValsVecs - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; FAILED qutip/tests/test_sp_eigs.py::test_DenseValsOnly - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; ```. ### Expected Behaviour. Tests do not fail. ### Your Environment. ```shell; QuTiP Version: 4.7.1; SciPy Version: 1.11; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2093:663,error,error,663,https://qutip.org,https://github.com/qutip/qutip/issues/2093,1,['error'],['error']
Availability,### Bug Description. Some files are missing `__all__` and leaking variables. ### Code to Reproduce the Bug. ```shell; import qutip.measurement; qt.measurement.np; ```. ### Code Output. ```shell; <module 'numpy' from 'miniconda3/lib/python3.10/site-packages/numpy/__init__.py'>; ```. ### Expected Behaviour. Only user facing qutip functions should be available. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0; ```. ### Additional Context. `__all__` is missing in: ; - `qutip/measurements.py`; - `qutip/solve/piqs.py`; - `qutip/core/semidefinite.py`; which contain users facing functions.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2101:350,avail,available,350,https://qutip.org,https://github.com/qutip/qutip/issues/2101,1,['avail'],['available']
Availability,"### Bug Description. Some tests of qutip.testing.run() fail on master on a MacBook Pro (2021) with M1. Qutip was installed on a miniforge python 3.9.9 distribution. ### Code to Reproduce the Bug. ```shell; import qutip.testing; qutip.testing.run(); ```. ### Code Output. ```shell; ============================================================================================= FAILURES ==============================================================================================; _________________________________________________________________________________________ test_dqd_current __________________________________________________________________________________________. def test_dqd_current():; ""Counting statistics: current and current noise in a DQD model""; ; G = 0; L = 1; R = 2; ; sz = qutip.projection(3, L, L) - qutip.projection(3, R, R); sx = qutip.projection(3, L, R) + qutip.projection(3, R, L); sR = qutip.projection(3, G, R); sL = qutip.projection(3, G, L); ; w0 = 1; tc = 0.6 * w0; GammaR = 0.0075 * w0; GammaL = 0.0075 * w0; nth = 0.00; eps_vec = np.linspace(-1.5*w0, 1.5*w0, 20); ; J_ops = [GammaR * qutip.sprepost(sR, sR.dag())]; ; c_ops = [np.sqrt(GammaR * (1 + nth)) * sR,; np.sqrt(GammaR * (nth)) * sR.dag(),; np.sqrt(GammaL * (nth)) * sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); current[n], noise[n] = qutip.countstat_current_noise(L, [],; rhoss=rhoss,; J_ops=J_ops); ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:375,FAILURE,FAILURES,375,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['FAILURE'],['FAILURES']
Availability,"### Bug Description. String form QobjEvos cannot be created.; The error is due to a missing file: `intdtype.h` is missing from `/home/xavier/anaconda3/envs/qutip5-bench/lib/python3.10/site-packages/qutip/core/data/src/`. ### Code to Reproduce the Bug. ```shell; import qutip ; n = qutip.num(5); string_form= qutip.QobjEvo([n, 'cos(t)']); ```. ### Code Output. ```shell; [1/1] Cythonizing /home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.pyx; running build_ext; building 'qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab' extension; gcc -pthread -B /home/xavier/anaconda3/envs/qutip5-bench/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/xavier/anaconda3/envs/qutip5-bench/include -fPIC -O2 -isystem /home/xavier/anaconda3/envs/qutip5-bench/include -fPIC -I/home/xavier/anaconda3/envs/qutip5-bench/lib/python3.10/site-packages/numpy/core/include -I/home/xavier/anaconda3/envs/qutip5-bench/include/python3.10 -c /home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.cpp -o build/temp.linux-x86_64-cpython-310/home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.o -w -O3 -funroll-loops; /home/xavier/.qutip/qutip_coeffs_1.1/qtcoeff_d9971e1c0d4b7f53f4bf8a5dbd7cab.cpp:749:10: fatal error: src/intdtype.h: No such file or directory; 749 | #include ""src/intdtype.h""; | ^~~~~~~~~~~~~~~~; compilation terminated.; error: command '/usr/bin/gcc' failed with exit code 1; ```. ### Expected Behaviour. I was expecting a string form QobjEvo object to be created. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+0a19bf9; Numpy Version: 1.22.4; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.10.5; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. Qutip was installed using `pip install git+https://github.com/qutip/qutip@dev.major` in a conda environment.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1960:66,error,error,66,https://qutip.org,https://github.com/qutip/qutip/issues/1960,3,['error'],['error']
Availability,"### Bug Description. The ReadTheDocs build fails with:; ```; gcc -pthread -B /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -I/home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include/python3.10 -c _configtest.c -o _configtest.o; _configtest.c:2:10: fatal error: mpi.h: No such file or directory; 2 | #include <mpi.h>; | ^~~~~~~; ```; See https://readthedocs.org/projects/qutip/builds/23361676/ for the full build log (not sure if this is publicly visible -- if not, I can add QuTiP admins as maintainers on readthedocs.org if they give me their username). The QuTiP ReadTheDocs configuration is at: https://github.com/qutip/qutip/blob/master/.readthedocs.yaml. Probably this can be fixed by adding an appropriate dependency to https://github.com/qutip/qutip/blob/master/doc/rtd-environment.yml. ### Code to Reproduce the Bug. ```shell; Attempt to build the documentation on ReadTheDocs.; ```. ### Code Output. ```shell; gcc -pthread -B /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/compiler_compat -Wno-unused-result -Wsign-compare -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -O2 -isystem /home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include -fPIC -I/home/docs/checkouts/readthedocs.org/user_builds/qutip/conda/master/include/python3.10 -c _configtest.c -o _configtest.o; _configtest.c:2:10: fatal error: mpi.h: No such file or directory; 2 | #include <mpi.h>; | ^~~~~~~; ```. ### Expected Behaviour. ReadTheDocs builds successfully. ### Your Environment. ```shell; QuTiP version: master branch; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2317:568,error,error,568,https://qutip.org,https://github.com/qutip/qutip/issues/2317,2,['error'],['error']
Availability,"### Bug Description. The `groundstate()` function seems to have a bug in the current version of `dev.major`. ; When calling `groundstate()` on any Qobj, an error occurs. . ### Code to Reproduce the Bug. ```shell; from qutip import destroy; H = destroy(2).dag() * destroy(2); H.groundstate(); ```. ### Code Output. ```shell; File ""/home/chris/git/qutip-dev-major/qutip/core/qobj.py"", line 1632, in groundstate; grndvec = Qobj(evecs[0], dims=new_dims); TypeError: 'qutip.core.data.dense.Dense' object is not subscriptable; ```. ### Expected Behaviour. The groundstate of H should be returned. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+98a8e7d; Numpy Version: 1.22.4; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.8.10; Number of CPUs: 4; BLAS Info: OPENBLAS; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1937:156,error,error,156,https://qutip.org,https://github.com/qutip/qutip/issues/1937,1,['error'],['error']
Availability,"### Bug Description. The `plot_spin_distribution_2d` function allows to project a spin distribution function from the surface of a unit sphere to the unit disk. QuTiP uses `matplotlib.pyplot.pcolor` to perform this task and calculates a meshgrid `X, Y` to plot the function to. Due to some changes in `matplotlib` the current implementation is deprecated and will return errors in a few minor releases. We could quickly fix this by passing `shading='auto'` to the call of `ax.pcolor()` in the [visualization.py](https://github.com/qutip/qutip/blob/82c6704c6fea8a2801492865ad1ef7c1d73c8840/qutip/visualization.py#L1313). However, this raises another UserWarning that the center points are not monotonically sorted. The cleanest way to fix this bug would be to pass the edges of the quadrilaterals to `pcolor()`. But we can not calculate them exactly from the given points in `theta, phi`. Hence, we would need to redesign the interface to this function and to related functions like `plot_spin_distribution_3d` and `spin_q_function`. ### Code to Reproduce the Bug. ```shell; import qutip as qt; import numpy as np; import matplotlib.pyplot as plt. j = 5; psi = qt.spin_coherent(j, np.random.rand() * np.pi, np.random.rand() * 2 * np.pi); rho = qt.ket2dm(psi). theta = np.linspace(0, np.pi, 50); phi = np.linspace(0, 2 * np.pi, 50). Q, THETA, PHI = qt.spin_q_function(psi, theta, phi); fig, ax = qt.plot_spin_distribution_2d(Q, THETA, PHI); plt.show(); ```. ### Code Output. ```shell; MatplotlibDeprecationWarning: shading='flat' when X and Y have the same dimensions as C is deprecated since 3.3. Either specify the corners of the quadrilaterals with X and Y, or pass shading='auto', 'nearest' or 'gouraud', or set rcParams['pcolor.shading']. This will become an error two minor releases later.; ax.pcolor(X, Y, P.real, cmap=cmap); ```. ### Expected Behaviour. I expect the same plot, but without the warning which becomes an error in the future. ### Your Environment. ```shell; QuTiP Version: 5.0.0.de",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1973:371,error,errors,371,https://qutip.org,https://github.com/qutip/qutip/issues/1973,1,['error'],['errors']
Availability,"### Bug Description. The `propagator()` function SHOULD support the array-coefficient format:. `propagator(H=[[sigmax(), np.cos(tlist)]], tlist=tlist)`. However, this code generates an error complaining `ValueError: tlist must be the same len as the array to interpolate`. This is due to a line of wrong code inside `propagator()` function:. ```python; def propagator(H, t, c_ops=(), args=None, options=None, **kwargs):; if isinstance(t, numbers.Real):; tlist = [0, t]; list_output = False; else:; tlist = t; list_output = True. if not isinstance(H, (Qobj, QobjEvo)):; H = QobjEvo(H, args=args, **kwargs); ...; ```. In the last line above, the code forgot to pass `tlist=tlist` to `QobjEvo`. This is an optional argument only required when no coefficients are supplied as numpy arrays. Therefore, when we feed a numpy array to `propagator` and then to `QobjEvo`, it is reported `ValueError: tlist must be the same len as the array to interpolate`, while the real error here is because no tlist is provided. You can compare it to the correct code in `mesolve`:. ```python; def mesolve(H, rho0, tlist, c_ops=None, e_ops=None, args=None, options=None, **kwargs):; options = _solver_deprecation(kwargs, options); H = QobjEvo(H, args=args, tlist=tlist); ...; ```. ### Code to Reproduce the Bug. ```shell; tlist = np.linspace(0, 50, 500); q.propagator([[q.sigmax(), np.cos(tlist)]], tlist); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[26], line 2; 1 tlist = np.linspace(0, 50, 500); ----> 2 q.propagator([[q.sigmax(), np.cos(tlist)]], tlist).states[-1]. File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\solver\propagator.py:62, in propagator(H, t, c_ops, args, options, **kwargs); 59 list_output = True; 61 if not isinstance(H, (Qobj, QobjEvo)):; ---> 62 H = QobjEvo(H, args=args, **kwargs); 64 if c_ops:; 65 H = liouvillian(H, c_ops). File c:\Users\neohu\.conda\envs\de\Lib\sit",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2432:185,error,error,185,https://qutip.org,https://github.com/qutip/qutip/issues/2432,2,['error'],['error']
Availability,"### Bug Description. The concurrence measure does not work with density matrix objects. ### Code to Reproduce the Bug. ```shell; import qutip. dm = qutip.maximally_mixed_dm(4); print(dm); print(qutip.entropy.concurrence(dm)); ```. ### Code Output. ```shell; Quantum object: dims = [[4], [4]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[0.25 0. 0. 0. ]; [0. 0.25 0. 0. ]; [0. 0. 0.25 0. ]; [0. 0. 0. 0.25]]. raise Exception(""Density matrix must be tensor product of two qubits.""); Exception: Density matrix must be tensor product of two qubits.; ```. ### Expected Behaviour. One of two things is happening:; 1. The concurrence method is not compatible with the density matrix Qobj objects. I am not certain why this concurrence method requires [[2, 2], [2, 2]] dimensions instead of [4,4] if the concurrence method is acting on 2 qubit systems.; 2. The density matrix generators are not producing matrices which are consistent with the qutip required format. I tried this on other matrices by just casting numpy arrays to Qobj objects and I got the same error. . ### Your Environment. ```shell; QuTiP Version: 4.7.1; Numpy Version: 1.21.5; Scipy Version: 1.9.1; Cython Version: 0.29.32; Matplotlib Version: 3.5.2; Python Version: 3.9.13; Number of CPUs: 10; BLAS Info: OPENBLAS; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2058:1069,error,error,1069,https://qutip.org,https://github.com/qutip/qutip/issues/2058,1,['error'],['error']
Availability,"### Bug Description. The function `negativity() ` is currently broken because of a broken import of `partial_transpose()`. This is probably an easy fix and good first issue, but more importantly we need a test for this function, and anything else that currently is not tested in `entropy.py`. Also, might be useful to either properly support kets in negativity (i think it just assumes at the moment the input state is a density operator, and incorrectly acts on kets), or give a warning if a state is provided, and not a density operator. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import *. test = (tensor(basis(2,0),basis(2,1)) + tensor(basis(2,1),basis(2,0)))/np.sqrt(2); negativity(test * test.dag(),0); ```. ### Code Output. ```shell; 123 """"""; 124 Compute the negativity for a multipartite quantum system described; 125 by the density matrix rho. The subsys argument is an index that; (...); 130 Experimental.; 131 """"""; 132 mask = [idx == subsys for idx, n in enumerate(rho.dims[0])]; --> 133 rho_pt = partial_transpose(rho, mask); 135 if method == 'tracenorm':; 136 N = ((rho_pt.dag() * rho_pt).sqrtm().tr().real - 1)/2.0. TypeError: 'module' object is not callable; ```. ### Expected Behaviour. should be = 0.5. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+c745ace; Numpy Version: 1.26.3; Scipy Version: 1.11.4; Cython Version: 3.0.8; Matplotlib Version: 3.8.0; Python Version: 3.12.1; Number of CPUs: 28; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2345:959,mask,mask,959,https://qutip.org,https://github.com/qutip/qutip/issues/2345,2,['mask'],['mask']
Availability,"### Bug Description. The rendering of the process matrix looks weird in qutip-v5, The bottom of the bars behind is on top of the lower bars in front of it. (This is a CNOT gate with some errors); ![image](https://github.com/qutip/qutip/assets/12125783/970923af-e361-4cdf-a573-32b477ede6e5). Maybe the order of the bar rendering is reversed during the last refactoring of the plotting library?. ### Code to Reproduce the Bug. ```python; import numpy as np; import qutip. # Create a noisy CNOT gate; IZ = qutip.tensor([qutip.qeye(2), qutip.sigmaz()]); gate = qutip.gates.cnot(); noisy_gate = (-2.j * np.pi*(IZ/8/20)).expm() @ gate; fid = qutip.average_gate_fidelity(noisy_gate, qutip.gates.cnot()); print(f""noisy CNOT fidelity {fid}""). # Plot process matrix; op_basis = [[qutip.qeye(2), qutip.sigmax(), qutip.sigmay(), qutip.sigmaz()]] * 2; chi = qutip.qpt(qutip.to_super(noisy_gate), op_basis); qutip.qpt_plot_combined(; chi, lbls_list=[[""i"", ""x"", ""y"", ""z""]] * 2, title=""Process Matrix""; ); ```. ### Code Output. ```; noisy CNOT fidelity 0.9987669334932512; ```; ![image](https://github.com/qutip/qutip/assets/12125783/bc6ce1b4-e3ad-4c6c-988f-a3701e238ebe). ### Expected Behaviour. The bars should be rendered correctly. ### Your Environment. ```shell; QuTiP Version: 5.0.1; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.8.3; Python Version: 3.11.8; Number of CPUs: 40; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400:187,error,errors,187,https://qutip.org,https://github.com/qutip/qutip/issues/2400,1,['error'],['errors']
Availability,"### Bug Description. This issue originates from a [problem in the Help Group](https://groups.google.com/g/qutip/c/F7tOoZzMjto). Calculating the entropy of a density matrix in the Dicke basis leads to -Inf, while the standard calculation with ""entropy_vn"" returns a finite (more logical) result. ; I already tracked down the problem to the calculation of eigenvalues in `dicke_trace_function`. Due to numerical behaviour some eigenvalues have very small negative values, which lead to -Inf entropy. If these values are rounded to zero, the problem disappears. However, I am not sure, which way is the best way to perform this rounding. ; @nathanshammah @quantshah . ### Code to Reproduce the Bug. ```shell; from qutip import *; from qutip.piqs import *; import numpy as np; import numpy.random; from scipy.linalg import eig; from scipy.sparse import block_diag. N = 10; system = Dicke(N); [jx, jy, jz] = jspin(N,basis=""dicke""); jx=jx*2; jy=jy*2; jz=jz*2. V=3; g=1; system.emission = 1; system.hamiltonian = V/(2*(N-1)) * jz*jz + g/2 * jx; D_tls = system.liouvillian(); rho_ss = steadystate(D_tls,method='eigen',); vn_dicke=entropy_vn_dicke(rho_ss); vn_dicke_over=entropy_vn(Qobj(block_diag(dicke_blocks_full(rho_ss)))). print(vn_dicke,vn_dicke_over); ```. ### Code Output. ```shell; -inf 0.006061297461844266; ```. ### Expected Behaviour. The value for the entropy should not depend on the way it is calculated. I.e., we should have `vn_dicke == vn_dicke_over` up to numerical uncertainty. ### Your Environment. ```shell; uTiP Version: 5.0.0.dev0+ee51e50; Numpy Version: 1.21.0; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.10; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1919:315,down,down,315,https://qutip.org,https://github.com/qutip/qutip/issues/1919,1,['down'],['down']
Availability,"### Bug Description. Using `Python 3.12.2` and `Poetry 1.7.1`, when adding `qutip` as a dependency, the installation fails. ### Code to Reproduce the Bug. ```shell; poetry add qutip; ```. ### Code Output. ```shell; Updating dependencies; Resolving dependencies... (0.2s). Package operations: 4 installs, 0 updates, 0 removals. • Installing numpy (1.26.4); • Installing packaging (23.2); • Installing scipy (1.12.0); • Installing qutip (4.7.5): Failed. ChefBuildError. Backend subprocess exited when trying to invoke build_wheel. [...]. building 'qutip.cy.cqobjevo_factor' extension; error: Microsoft Visual C++ 14.0 or greater is required. Get it with ""Microsoft C++ Build Tools"": https://visualstudio.microsoft.com/visual-cpp-build-tools/. at ~\AppData\Roaming\pypoetry\venv\Lib\site-packages\poetry\installation\chef.py:164 in _prepare; 160│; 161│ error = ChefBuildError(""\n\n"".join(message_parts)); 162│; 163│ if error is not None:; → 164│ raise error from None; 165│; 166│ return path; 167│; 168│ def _prepare_sdist(self, archive: Path, destination: Path | None = None) -> Path:. Note: This error originates from the build backend, and is likely not a problem with poetry but with qutip (4.7.5) not supporting PEP 517 builds. You can verify this by running 'pip wheel --no-cache-dir --use-pep517 ""qutip (==4.7.5)""'.; ```. ### Expected Behaviour. Installing qutip successfully. ### Your Environment. ```shell; QuTiP version: 4.7.5; Python version: 3.12.2; Poetry version: 1.7.1; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322:583,error,error,583,https://qutip.org,https://github.com/qutip/qutip/issues/2322,5,['error'],['error']
Availability,"### Bug Description. Using a Hamiltonian that is constructed using operators returned from the `enr_destroy` function, does not work with the steady state solver in Quito 5.0.0. It does however work with Qutip 4.7 (have not checked any other versions). . The error given is a dimension mismatch essentially, which seems to stem from an ""expected dimension"" of the Hamiltonian based on the number of modes. In the example below, the dimension mismatch is between 65536 (which is 2^16, the entire Hilbert space of my problem) vs 17, which is the excitation number restricted subspace. . ### Code to Reproduce the Bug. ```shell; N = 16 ## number of resonators including tapers; max_excitation = 1 ## maximum excitation; num_levels = 2; dims = [num_levels] * N. ann_operators = enr_destroy(dims, excitations = max_excitation); w_r = 2 * np.pi * 5; w = np.array([w_r] * N). J_r = 2 * np.pi * 0.4; J_t2 = 1.353 * J_r; J_t1 = 1.035 * J_r. J = np.array([J_t2, J_t1] + [J_r] * (N-5) + [J_t1, J_t2]). kappa = 2.92 * J_r; drive_amp = 2 * np.pi * 0.0001; t = []. detuning_list = 2 * np.pi * np.linspace(-1, 1, 100). for detuning in detuning_list:; drive_w = (w_r - detuning). H_r = 0; for i, a in enumerate(ann_operators):; H_r += (w[i] - drive_w) * a.dag() * a. H_int = 0; for i in range(len(ann_operators)-1):; H_int += J[i] * (ann_operators[i].dag() * ann_operators[i+1] + ann_operators[i+1].dag() * ann_operators[i]). H_d = -1j * drive_amp * (ann_operators[0] - ann_operators[0].dag()). H = H_r + H_int + H_d. c_ops = [np.sqrt(kappa)*ann_operators[0], np.sqrt(kappa)*ann_operators[-1]]. rho_ss = steadystate(H, c_ops). a_out = np.sqrt(kappa) * expect(ann_operators[-1], rho_ss); t.append(np.sqrt(kappa) * a_out/drive_amp). print(""J = "", np.array(J)/(2 * np.pi)); print(""w = "", np.array(w)/(2 * np.pi)); print(""kappa = "", kappa/2/np.pi); t = np.array(t); plt.plot(detuning_list/2/np.pi, 20 * np.log10(np.abs(t))); plt.xlabel(""Detuning (GHz)""); plt.ylabel(""|S21|(dB)""); plt.ylim(-10,0.01); # plt.xlim(-2, 2); pl",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386:259,error,error,259,https://qutip.org,https://github.com/qutip/qutip/issues/2386,1,['error'],['error']
Availability,"### Bug Description. When combining `parfor` with `brmesolve` and a time-dependent Hamiltonian, the compilation of the Hamiltonian seems to interfer with the correct functioning of `parfor`. The call results in an error, that the coefficient file is too short. . I guess this could also happen when using `parfor` with other solvers. ### Code to Reproduce the Bug. ```shell; from qutip import brmesolve, sigmaz, sigmax, basis, parfor; import numpy as np. psi0 = basis(2, 0); H_S = np.pi * sigmaz(); H_I = sigmax(); tlist = np.linspace(0, 100, 101); pulse_shape = ""exp(- t**2)"". def brme(A):; H_tmp = [A * H_S, [H_I, pulse_shape]]. return brmesolve(; H_tmp, psi0, tlist, e_ops=[sigmaz()]; ).expect[0][-1]. results = parfor(brme, np.linspace(0, np.pi, 10)); ```. ### Code Output. ```shell; ImportError: /home/chris/.qutip/qutip_coeffs_1.1/qtcoeff_4c859672674b8b603bd243ba3f4a8d.cpython-38-x86_64-linux-gnu.so: file too short; ```. ### Expected Behaviour. `parfor` should wait for the compilation to finish and then start the parallel processes. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+c64f38e; Numpy Version: 1.23.0; Scipy Version: 1.8.1; Cython Version: 0.29.30; Matplotlib Version: 3.5.2; Python Version: 3.8.10; Number of CPUs: 4; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1963:214,error,error,214,https://qutip.org,https://github.com/qutip/qutip/issues/1963,1,['error'],['error']
Availability,"### Bug Description. When installing on ubuntu 20.04, the build fails with `ERROR: Some build dependencies for qutip from https://files.pythonhosted.org/packages/43/41/cae32aa94bfe0b22d2aec9392b2676210e5473ce097b10c689297b254a80/qutip-5.0.1.tar.gz conflict with the backend dependencies: numpy==1.17.3 is incompatible with numpy>=1.19` this is due to the fact that on this platform `oldest-supported-numpy` (from `pyproject.toml`) defaults to 1.17.3, but `setup.cfg` requires `numpy>=1.19`. ### Code to Reproduce the Bug. ```shell; python -m pip install -v --upgrade qutip; ```. ### Code Output. ```shell; Using pip 24.0 from /home/defreule/.local/lib/python3.8/site-packages/pip (python 3.8); Defaulting to user installation because normal site-packages is not writeable; Requirement already satisfied: qutip in /usr/local/lib/python3.8/dist-packages (4.7.3); Link requires a different Python (3.8.10 not in: '>=3.9'): https://files.pythonhosted.org/packages/73/73/abcc185174ac6dbc7965e5aeb9418c163eafda704008ee795ee9cdc75e4a/qutip-5.0.2.tar.gz (from https://pypi.org/simple/qutip/) (requires-python:>=3.9); Collecting qutip; Using cached qutip-5.0.1.tar.gz (6.4 MB); Running command pip subprocess to install build dependencies; Ignoring cython: markers 'python_version >= ""3.10""' don't match your environment; Collecting setuptools; Using cached setuptools-70.0.0-py3-none-any.whl.metadata (5.9 kB); Collecting packaging; Using cached packaging-24.0-py3-none-any.whl.metadata (3.2 kB); Collecting wheel; Using cached wheel-0.43.0-py3-none-any.whl.metadata (2.2 kB); Collecting cython<3.0.3,>=0.29.20; Using cached Cython-3.0.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (3.1 kB); Collecting oldest-supported-numpy; Using cached oldest_supported_numpy-2023.12.21-py3-none-any.whl.metadata (9.8 kB); Collecting scipy>=1.8; Using cached scipy-1.10.1-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (58 kB); Collecting numpy==1.17.3 (from oldest-supported-numpy",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2440:76,ERROR,ERROR,76,https://qutip.org,https://github.com/qutip/qutip/issues/2440,1,['ERROR'],['ERROR']
Availability,"### Bug Description. When printing a Qobj in Jupyter Notebooks of the VSCode IDE, the output is rendered as raw text rather than as Latex equation. ### Code to Reproduce the Bug. ```shell; import qutip as qt; qt.fock(2,0); ```. ### Code Output. ```shell; Quantum object: dims=[[2], [1]], shape=(2, 1), type='ket'\begin{equation*}\left(\begin{array}{{11}c}1\0\end{array}\right)\end{equation}; ```. ### Expected Behaviour. The output should instead look like:. `Quantum object: dims=[[2], [1]], shape=(2, 1), type='ket'`. ![image](https://github.com/qutip/qutip/assets/57567043/74f251bc-54b3-463f-b7b8-86091a939d48). ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+nogit; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.33; Matplotlib Version: 3.7.1; Python Version: 3.8.16; Number of CPUs: 8; BLAS Info: OPENBLAS; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); ```. ### Additional Context. I see already there are some errors in the latex code output. ; - `\end{equation}` -> `\end{equation*}`; - `{{11}c}`: is this format correct?. I would rather do: `{cc}`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2172:954,error,errors,954,https://qutip.org,https://github.com/qutip/qutip/issues/2172,1,['error'],['errors']
Availability,"### Bug Description. When you try to access the nnz attribute of a Qobj in CSR format it gives you an error that the qutip.core.csr.CSR class does not have an nnz attribute. . ### Code to Reproduce the Bug. ```shell; qutip.qeye(3).to(""CSR"").data.nnz; ```. ### Code Output. ```shell; AttributeError Traceback (most recent call last); Cell In[46], line 1; ----> 1 qutip.qeye(3).to(""CSR"").data.nnz. AttributeError: 'qutip.core.data.csr.CSR' object has no attribute 'nnz'; ```. ### Expected Behaviour. 3. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.24.2; Scipy Version: 1.10.0; Cython Version: 0.29.37; Matplotlib Version: 3.7.0; Python Version: 3.10.12; Number of CPUs: 4; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2481:102,error,error,102,https://qutip.org,https://github.com/qutip/qutip/issues/2481,1,['error'],['error']
Availability,"### Bug Description. `Bloch` raises an error when used in jupyter notebook. This seems to be due to the output of `print_figure` in `_repr_svg_` not being bytecode (maybe it was in the past?) it then defaults to `_repr_png_` and renders correctly the bloch sphere. ### Code to Reproduce the Bug. ```shell; import qutip; qutip.Bloch(); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); ~/.virtualenvs/qutip4/lib/python3.10/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. ~/git_repo/qutip/qutip4/qutip/bloch.py in _repr_svg_(self); 293 from IPython.core.pylabtools import print_figure; 294 self.render(); --> 295 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 296 plt.close(self.fig); 297 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```. ### Expected Behaviour. The Bloch sphere should be plotted correctly without any Error. ### Your Environment. ```shell; QuTiP Version: 5.0.0.dev0+ee51e50; Numpy Version: 1.22.3; Scipy Version: 1.8.1; Cython Version: None; Matplotlib Version: 3.5.2; Python Version: 3.10.4; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1912:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/issues/1912,2,"['Error', 'error']","['Error', 'error']"
Availability,"### Bug Description. qutip has functions to detect the available of BLAS libraries. For instance on my system (debian unstable), `python3 -c ""import qutip; qutip.about()""` reports; ```; BLAS Info: OPENBLAS; ```. However, I think the logic behind BLAS Info is not robust. For context, debian builds packages against generic libblas.so (libblas-dev package). The various optimised BLAS implementations are supposed to be binary compatible, such that the system administrator can install the preferred implementation for use at runtime (the identity of libblas.so is controlled using debian's alternatives mechanism). On my system, OpenBLAS is indeed installed. But taking a closer look, I'm not sure it was detected for the right reason.; The blas configuration is identified by the `_blas_info()` function in qutip/utilities.py. It uses the local numpy configuration (`np.__config`), testing the availability of various attributes in the numpy config, in the form of ; ```; if hasattr(config,'mkl_info') ...; elif hasattr(config,'openblas_info'); ```. MKL was not used to build debian's numpy package, and I don't have it installed. So mkl_info is not detected. OpenBLAS was not used to to build numpy either, but it is installed, so I want look closer at the logic. config (i.e. `np.__config__`) does indeed have an openblas_info. But it is empty (`{}`). Nevertheless `hasattr(config,'openblas_info')`returns True, since the empty dict is there. As far as MKL goes, mkl_info is indeed not there, so qutip does not detect MKL BLAS. But there is a `blas_mkl_info` attribute, and `hasattr(config,'blas_mkl_info')` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:55,avail,available,55,https://qutip.org,https://github.com/qutip/qutip/issues/2053,3,"['avail', 'robust']","['availability', 'available', 'robust']"
Availability,"### Bug Description. setup.py manages a `--with-openmp` build option to provide openmp support. pyproject.toml was introduced in QuTiP 4.6.0 to allow PEP517 build without (directly) using setup.py. But the `--with-openmp` option that previously worked with a setup.py build does not seem to be compatible with a PEP517 build. The problem shows up in the Debian build of the qutip package. Debian provides its own tool (pybuild from the dh-python package) to manage the build of python packages. PEP517 is relatively new, so by default pybuild uses setup.py if it is available. pybuild will use PEP517 instead, if the pybuild-plugin-pyproject package is installed and pyproject.toml is available. Without pybuild-plugin-pyproject installed, the Debian build was invoking; ```; /usr/bin/python3.10 setup.py build --with-openmp; ```; using setup.py and specifying `--with-openmp`. A successful build log for this method can be found at https://buildd.debian.org/status/fetch.php?pkg=qutip&arch=amd64&ver=4.6.2-3&stamp=1641397514&raw=0. With pybuild-plugin-pyproject installed, the Debian build invokes a wheel build (command line given below). But `--with-openmp` causes the build to fail. ### Code to Reproduce the Bug. ```shell; python3.10 -m build --skip-dependency-check --no-isolation --wheel --outdir /build/qutip/.pybuild/cpython3_3.10_qutip --with-openmp; ```. ### Code Output. ```shell; usage: python -m build [-h] [--version] [--sdist] [--wheel] [--outdir OUTDIR] [--skip-dependency-check] [--no-isolation] [--config-setting CONFIG_SETTING] [srcdir]; python -m build: error: unrecognized arguments: --with-openmp; ```. ### Expected Behaviour. The PEP517 build should be able to be configured to support openmp. ### Your Environment. ```shell; QuTiP Version: 4.6.2 (trying to build 4.7.0); Numpy Version: 1.21.5; Scipy Version: 1.8.0; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.10.4; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True (from setup.py build,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875:566,avail,available,566,https://qutip.org,https://github.com/qutip/qutip/issues/1875,2,['avail'],['available']
Availability,"### Bug Description. unit test test_dqd_current fails on aarch64 linux. ### Code to Reproduce the Bug. ```shell; the unit test; ```. ### Code Output. ```shell; =================================== FAILURES ===================================; _______________________________ test_dqd_current _______________________________; def test_dqd_current():; ""Counting statistics: current and current noise in a DQD model""; ; G = 0; L = 1; R = 2; ; sz = qutip.projection(3, L, L) - qutip.projection(3, R, R); sx = qutip.projection(3, L, R) + qutip.projection(3, R, L); sR = qutip.projection(3, G, R); sL = qutip.projection(3, G, L); ; w0 = 1; tc = 0.6 * w0; GammaR = 0.0075 * w0; GammaL = 0.0075 * w0; nth = 0.00; eps_vec = np.linspace(-1.5*w0, 1.5*w0, 20); ; J_ops = [GammaR * qutip.sprepost(sR, sR.dag())]; ; c_ops = [np.sqrt(GammaR * (1 + nth)) * sR,; np.sqrt(GammaR * (nth)) * sR.dag(),; np.sqrt(GammaL * (nth)) * sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); c_, n_ = qutip.countstat_current_noise(L, [], rhoss=rhoss, J_ops=J_ops); current[n] = c_[0]; noise[n] = n_[0, 0, 0]; ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); /nix/store/7v2yn16c9sr8ysdpan9yd2a60a1sizv7-python3.11-qutip-4.7.5/lib/pyt",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2316:196,FAILURE,FAILURES,196,https://qutip.org,https://github.com/qutip/qutip/issues/2316,1,['FAILURE'],['FAILURES']
Availability,"### Describe the Issue!. For a seemingly harmless operation , which I have used several times, I seem to suddenly encounter this error with every qutip operation. I am unable to see the reason as I am using inbuilt functions of qutip. Any help is appreciated. One of the examples to reproduce the error is below. . ```; XXX= tensor(sigmax(),sigmax(),sigmax()); YYZ=tensor(sigmay(),sigmay(),sigmaz()); A = commutator(XXX,YYZ); ```. ```; TypeError Traceback (most recent call last); Cell In[11], line 3; 1 XXX= tensor(sigmax(),sigmax(),sigmax()); 2 YYZ=tensor(sigmay(),sigmay(),sigmaz()); ----> 3 A = commutator(XXX,YYZ). File ~\anaconda3\Lib\site-packages\qutip\operators.py:709, in commutator(A, B, kind); 704 """"""; 705 Return the commutator of kind `kind` (normal, anti) of the; 706 two operators A and B.; 707 """"""; 708 if kind == 'normal':; --> 709 return A * B - B * A; 711 elif kind == 'anti':; 712 return A * B + B * A. File ~\anaconda3\Lib\site-packages\qutip\qobj.py:497, in Qobj.__mul__(self, other); 495 if self.dims[1] == other.dims[0]:; 496 out = Qobj(); --> 497 out.data = self.data * other.data; 498 dims = [self.dims[0], other.dims[1]]; 499 out.dims = dims. File ~\anaconda3\Lib\site-packages\scipy\sparse\_matrix.py:44, in spmatrix.__mul__(self, other); 43 def __mul__(self, other):; ---> 44 return self._matmul_dispatch(other). File ~\anaconda3\Lib\site-packages\scipy\sparse\_base.py:580, in _spbase._matmul_dispatch(self, other); 578 if self.shape[-1] != other.shape[0]:; 579 raise ValueError('dimension mismatch'); --> 580 return self._matmul_sparse(other); 582 # If it's a list or whatever, treat it like an array; 583 other_a = np.asanyarray(other). File ~\anaconda3\Lib\site-packages\scipy\sparse\_compressed.py:529, in _cs_matrix._matmul_sparse(self, other); 526 new_shape += (N,); 528 major_dim = self._swap((M, N))[0]; --> 529 other = self.__class__(other) # convert to this format; 531 idx_dtype = self._get_index_dtype((self.indptr, self.indices,; 532 other.indptr, other.ind",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536:129,error,error,129,https://qutip.org,https://github.com/qutip/qutip/issues/2536,2,['error'],['error']
Availability,"### Describe the Issue!. I have a big matrix which is a [QuTiP](https://qutip.org/) object. I am trying to run this line of code:. ops_numpy = [op.full() for op in m_ops] # convert the QuTiP Qobj to numpy arrays. But I am getting the following error:. MemoryError: Unable to allocate 16.0 TiB for an array with shape (1048576, 1048576) and; data type complex128. Here, `m_ops` is a list with `len(m_ops) = 27` and every `m_ops[i]` is a quantum object of shape. In [91]: m_ops[1].shape; Out[91]: (1048576, 1048576). Ok, I can see that I am trying to convert a QuTiP object into a numpy array but this object is so big that I have a memory issue. My question is simple: is there any way to overcome this issue? can I 'cut' the object in smaller pieces to convert it and then put the ""pieces back together""?. I really have no idea. Maybe I am not doing in the optimal way but I was working with really smaller matrix until this one and I didn't foresaw this problem. Any help or reference will be highly appreciated. This is really important for me. ----------------------------------------------------------------. EDIT with the full code:. """""".""""""; import numpy as np; import tensorflow as tf; from qutip import tensor; from qutip import sigmax, sigmaz, sigmay; from qutip import coherent, coherent_dm, expect, Qobj, fidelity, hinton; from tqdm.auto import tqdm. #%load_ext autoreload; tf.keras.backend.set_floatx('float64') # Set float64 as the default. # Local paths:; local_path = ""0_qst_master/cgan_tf_20qb/%s""; data_path = ""0_qst_master/cgan_tf_20qb/data/%s"". # Reading projectors; projs_settings = np.loadtxt(data_path % 'measurement_settings.txt', dtype=str). X = sigmax(); Y = sigmay(); Z = sigmaz(). m_ops = [] # measurement operators. def string_to_operator(basis): ; mat_real = []; ; for j in range(len(basis)):; if basis[j] == 'X':; mat_real.append(X) ; if basis[j] =='Y':; mat_real.append(Y) ; if basis[j] =='-Y':; mat_real.append(-Y) ; if basis[j] == 'Z':; mat_real.append(Z) ; return mat",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2176:244,error,error,244,https://qutip.org,https://github.com/qutip/qutip/issues/2176,1,['error'],['error']
Availability,"### Describe the Issue!. I have installed Qutip version 5.0.2, and I've been trying to use the parfor method (see https://qutip.org/docs/4.0.2/guide/guide-parfor.html). When calling it, I get the error: ""NameError: name 'parfor' is not defined"".; I'm not trying to do anything exotic yet, I was just testing the rudimentary example from the webpage:. from qutip import *; def func1(x): ; return x, x**2, x**3; a, b, c = parfor(func1, range(10)); print(a)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2551:196,error,error,196,https://qutip.org,https://github.com/qutip/qutip/issues/2551,1,['error'],['error']
Availability,"### Describe the Issue!. I'm having issues with running a quantum circuit that consists of 4-level qudits. I want to define my custom 2-qudit gate. I have written a gate function that returns the following object:. `return Qobj(mat, dims=[[4,4],[4,4]], shape = [16, 16], type='oper')`. Since this is a gate acting on two 4-level qudits, I think that these dims are correct. I then create an initial ket state for my circuit, let's say with three qudits, and create the circuit object:. ```; zero_state=tensor(basis(4, 0),basis(4, 0),basis(4, 0)); qc = QubitCircuit(N=3, dims=zero_state.dims); ```. the dims are: [[4, 4, 4], [1, 1, 1]]. when I try to add a gate between qudits 0 and 1:. `qc.add_gate(""Ucomm"", targets=[0,1])`. I get the following error:. `ValueError: The operator dims [4, 4] do not match the target dims [[4, 4, 4], [1, 1, 1]].`. If I instead try to add a gate between qudits 1 and 2:; `qc.add_gate(""Ucomm"", targets=[1,2])`. I get:. ```; targ_dims = [dims[t] for t in targets]; IndexError: list index out of range; ```. Do I understand correctly how dims work in Qutip? Or is this an error? The above example works perfectly fine for qubits, replacing 4->2 in the above.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803:745,error,error,745,https://qutip.org,https://github.com/qutip/qutip/issues/1803,2,['error'],['error']
Availability,"### Describe the Issue!. I'm not sure if this is a bug, or I don't understand something. I'm using mcsolve and keeping trajectories. I've got a single type of collapse/jump operator, which moves a single electron of my system from one site to another. ; ```; for jump_rate in [0.01, 0.1, 0.5, 1.0, 1.5, 2, 4, 8, 16, 32]:; result = mcsolve(H, initial_state, tlist, [np.sqrt(jump_rate)*jump_op], number_operators, ntraj = ntraject,; options={""keep_runs_results"": True, ""store_states"": True, ""improved_sampling"": True}); ```; I'm increasing the jump_rate, and looking at when the jumps occur using result.collapse (which keeps track of which trajectory contributed a jump). I'm using ntraject = 10 or 100. I've tried with and without improved sampling. . When I use a jump rate less than 2, the number of jumps I see in each trajectory goes up with the jump rate. However for a jump rate of 4 or higher, the number of jumps I see in each trajectory goes down with jump rate. (I realize that for the Lindblad equation to be a good approximation, the interaction hamiltonian (and thus jump rate) should be small compared to the system Hamiltonian, but I still want to understand this behavior.). Can anybody explain why a higher jump rate doesn't give more jumps in a trajectory? . Also, I'd like to understand result.photocurrent, which seems to combine the jumps for all trajectories, but also seems to divide by the number of trajectories, and maybe the number of timesteps?. Thanks,; Emily; Here are a couple of plots showing all the jumps in 10 trajectories, for a jump rate of 4 (more jumps) and of 0.5 (fewer jumps) and 32 (fewer jumps); ![Colmcsolve6sites0 5C0 5N0 2ex4JR10NTEvery_other_site_state](https://github.com/user-attachments/assets/21b08700-3cae-4584-a26e-31821362e285); ![Colmcsolve6sites0 5C0 5N0 2ex0 5JR10NTEvery_other_site_state](https://github.com/user-attachments/assets/a61c1a5d-823f-4718-baf1-c679f5a25165); ![Colmcsolve6sites0 5C0 5N0 2ex32JR10NTEvery_other_site_state](https://",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2539:951,down,down,951,https://qutip.org,https://github.com/qutip/qutip/issues/2539,1,['down'],['down']
Availability,"### Describe the Issue!. I'm trying to simulate a simple two-level system with a sinusoidally varying external magnetic field. The code is given below:. ```python3; import matplotlib.pyplot as plt; import numpy as np; from qutip import basis, sigmax, sigmay, sigmaz, Options, mesolve, expect; from scipy.constants import physical_constants. g = 2; muB = (physical_constants[""Bohr magneton in eV/T""])[0] ## Bohr-Magneton in eV/Tesla; gamma = 0.5*muB*g #in eV/Tesla. h_inv = (physical_constants[""reduced Planck constant in eV s""][0])**-1. gamma = gamma*h_inv #in sec-1/Tesla; del physical_constants; ## Defining time of evolution; times = np.linspace(0, 6*10**-7, 1000); noe = len(times); B = 1; Bx = -(1*10**-3); ## Create a Quantum 2 state basis; up = basis(2,0) ; down = basis(2,1) ; upd = up * up.dag() ; downd = down * down.dag(); sy = sigmay(); sz = sigmaz(); sx = sigmax(); Hx = gamma*Bx*sx; options = Options(nsteps=10000); H0 = -gamma*B*sz ; resonant_frequency = H0.eigenenergies() ; def Hx_coeff(t, args):; return 1 * np.cos(-2*resonant_frequency[0]*t );. H = [H0,[Hx,Hx_coeff]]; ; result = mesolve(H, downd, times, [], options=options); rh = result.states; upexpect, downexpect = [], []; for r in rh: ; up_e = expect(up*up.dag(), r); down_e = expect(down*down.dag(), r); upexpect.append(up_e); downexpect.append(down_e); plt.plot(times, upexpect, label = ""Upstate"", color='g', linestyle='-.'); plt.plot(times, downexpect, label = ""Downstate"", color='r', linestyle='-.'); plt.title(""Prob v/s Time for B = {}"".format(B)); plt.legend(loc=""best""); plt.xlabel(""Time""); plt.ylabel(""Probability of State""); plt.grid(); plt.show(); ```. The Hamiltonian of the system is hermitian, and theoretically, we don't expect such decay in the amplitude. So, what is happening in the above program that is leading to such a strange evolution? . ![Figure_2](https://user-images.githubusercontent.com/49644300/209442963-3e2a047f-1714-4d5c-b484-fa78e91a8062.png); . As soon as I increase the value of `B` the deca",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2051:765,down,down,765,https://qutip.org,https://github.com/qutip/qutip/issues/2051,4,['down'],"['down', 'downd']"
Availability,"### Describe the Issue!. Most of our progress bars are in `qutip/ui/progressbar.py`, with the exception of `HTMLProgressBar` which is in `qutip/ipynbtools.py`. It is not available by the solvers. It should be moved with the other and added it to the `progess_bars` dictionary so it's usable with `mesolve`, etc.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2108:170,avail,available,170,https://qutip.org,https://github.com/qutip/qutip/issues/2108,1,['avail'],['available']
Availability,"### Describe the Issue!. Most of the functions in `random_objects.py` take an `N` input and an optional `dims`. Those input are redundant as the size (`N`) can be obtained from the `dims`. However the way they handle this inconsistent:; - Many functions, such as `rand_super`, `rand_dm`, check that the dims matches the size and raise an error if it doesn't.; - `rand_dm_ginibre`, `rand_super_bcsz` just pass the `dims` to `Qobj` without any checks.; - `rand_ket` has a default `N=0` and obtain the size from `dims` when `N` is `0`, but it raise a division per zero error when neither `N` nor `dims` is passed.; - `rand_ket_haar` also tries to obtain the size from `dims` when `N` is `0`, but the default value of `N` is `2`, thus one need to pass `N=0` to use it. `N=0` would fail almost everywhere else. Also some function have a default size, other not: `rand_unitary(N, ...)`, `rand_unitary_haar(N=2, ...)`. The interface of these functions need to be unified. Some options:; - `N` is always needed and `dims` are checked to match.; - A default of `None` is used for `N` and either `N` or `dims` is needed. If both are given, we check that they are compatible. If none are passed, we raise an appropriate error.; - (For `dev.major`) Remove the `dims` parameter and replace `N` with `dimensions`, which act as `N` if an integer is given and `dims` is a list is. This is already the behavior of `qeye` and `qzero`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1838:128,redundant,redundant,128,https://qutip.org,https://github.com/qutip/qutip/issues/1838,4,"['error', 'redundant']","['error', 'redundant']"
Availability,"### Describe the Issue!. The Monte Carlo solver works with kets instead of density matrices. It doesn't allow superoperators as c_ops (error message: c_ops are not consistant with psi0). Since my master equation has lindblad dissipators (which are superoperators), I have trouble using mcsolve. The only way I can think of is converting the initial state to a superket. But that has type operator-ket and QuTip doesn't seem to want me do type casting. How can I circumvent this problem?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2060:135,error,error,135,https://qutip.org,https://github.com/qutip/qutip/issues/2060,1,['error'],['error']
Availability,"### Describe the Issue!. The function `orbital` is not tested and there seems to have an error in the spherical harmonics computation.; Adding a test and fixing any error, possibly using `scipy.special.sph_harm`, would be helpful.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1839:89,error,error,89,https://qutip.org,https://github.com/qutip/qutip/issues/1839,2,['error'],['error']
Availability,"### Describe the Issue!. The new version of cython does not seems to be compatible with other cython. The error is not in our code but when cimporting from scipy.; ```; /miniconda3/lib/python3.9/site-packages/scipy/linalg.pxd:1:0: 'scipy/linalg/linalg.pxd' not found; ```. For version 4.X, we already don't support cython 3.X.; For qutip 5.X, we have a few options, but I propose to drop support for python <=3.9. It can now be officially dropped according to [scientific python](https://scientific-python.org/specs/spec-0000/). Other projects may start to drop support also and we may have to do more and more work around if we continue supporting if.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2240:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/issues/2240,1,['error'],['error']
Availability,### Describe the Issue!. There are minor grammatical errors and a small amount verbiage in the users' guide.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1759:53,error,errors,53,https://qutip.org,https://github.com/qutip/qutip/issues/1759,1,['error'],['errors']
Availability,"### Describe the Issue!. With the PR for adding `hypothesis` #1957, we have the issue of how we should handle the `NaN` and `inf`. I see 3 main ways:; - Up to now, we mostly ignored them. They rarely caused any issues. We could continue like this. Maybe adding a `isfinite` function and fixing `iszero`; - Do as @hodgestar did in #1957, propagate the `NaN` as blas does. We could still add `isfinite`.; - Raise an error when a `Data` is not finite as soon as possible. I prefer raising an error as soon as a bad value is obtained. Otherwise computation can continue for a while, hiding the source of the issue and wasting time. Even when the `NaNs` are properly propagated, it's often not that helpful when debugging.; Failing as soon as the bad value is obtained will make debugging the easiest. I looked at all the places that would need to check for bad values:; Creation: `dense.pyx`'s, `csr.pyx`'s, `one_element`, `diag`.; Modification: `project`, `ptrace`, `kron`.; Operation: `add`, `mul`, `matmul`.; The other functions either don't create a `Data` object or use one of the previous function (`pow` use `matmul`, `eigen` uses `Dense.__init__`, etc.). I believe that we should check at creation, even if we otherwise mostly ignore bad values.; Adding check in `project`, `ptrace`, `kron` shouldn't be too costly. The issue is we want the operations `add`, `mul`, `matmul` to be fast, so checking after each call would not be great. But if we keep track of the largest element, it could only cost one extra addition or multiplication, which could be fast enough to make refusing `inf` and `NaN` in `Qobj` doable.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1977:414,error,error,414,https://qutip.org,https://github.com/qutip/qutip/issues/1977,2,['error'],['error']
Availability,"### Discussed in https://github.com/qutip/qutip/discussions/2362. <div type='discussions-op-text'>. <sup>Originally posted by **adithi16** March 26, 2024</sup>; Hello, . I would like to write an operation that looks like `n^(a^{\dagger}a)`; where n is the average number of photons and a is the annihilation operator. However exponentiation gives error since I cannot use ** or pow() for Qobj. . In particular, I would like to create a density matrix for a squeezed state with a thermal ensemble. ; Since the already available option of using thermal_dm only creates the state close to the vacuum, I would like to know if there is a way to do this for any state (say a squeezed state or a coherent state). I would be happy to know! . </div>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2370:347,error,error,347,https://qutip.org,https://github.com/qutip/qutip/issues/2370,2,"['avail', 'error']","['available', 'error']"
Availability,"### Problem Description. Now that qutip-qip has moved to another package, gates are not available in the main repo. This is inconvenient for examples such as the control optimization ones, where one would need to install the qutip-qip package just to access say the Hadamard or CNOT for instance. ### Proposed Solution. The easiest solution would be just to copy the `gates.py` file from the QIP package into the main repo. Perhaps might confuse imports in qip? Also, I think that file has func defs that refer to 'controls' that might not make sense in this repo. ### Alternate Solutions. Have a file called `operations.py`. Just have a subset of the gates (operations), the most typical named unitaries - sounds less QIP like and would avoid import confusion. I think also `hadamard_transform` could be shortened to `hadamard`, but also include the original name. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2389:88,avail,available,88,https://qutip.org,https://github.com/qutip/qutip/issues/2389,1,['avail'],['available']
Availability,"### Problem Description. Right now, if you pass a [pathlib.Path](https://docs.python.org/3/library/pathlib.html) to any of two functions above, an error will raise because it is not possible to add the suffix `.qu` to a Path object. Moreover, if you already have the fullpath of the file (including the extension), QuTip will also raise because it appends the extension internally, no matter if it is already there or not. ### Proposed Solution. The solution would be similar to [numpy.save](https://github.com/numpy/numpy/blob/v1.22.0/numpy/lib/npyio.py#L449) method. ```; if file is string:; if not file.endswith('.qu'):; file = file + '.qu'; file = Path(file). -> open path object; ```. ### Alternate Solutions. _No response_. ### Additional Context. Pd: I'll be happy to make my first contribution and create a pull request for this.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1811:147,error,error,147,https://qutip.org,https://github.com/qutip/qutip/issues/1811,1,['error'],['error']
Availability,"### Problem Description. The documentation of the branch `dev.major` raise over 50 warnings when building.; These are mostly formatting error in functions and classes doc-strings, but some of the code example also raise errors.; These warnings need to be fixed and the `-W` option to turn warnings into errors, restored. ### Proposed Solution. A recent documentation build can be found [here](https://github.com/qutip/qutip/runs/6596735860?check_suite_focus=true). The problematic doc-string need to be reworded and/or reformatted. ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1903:136,error,error,136,https://qutip.org,https://github.com/qutip/qutip/issues/1903,3,['error'],"['error', 'errors']"
Availability,"### Problem Description. There are a few issues with graphic capacities in Qutip. 1. Most are not tested. Only Bloch.py has some tests associated. While testing graphs is not evident, matplotlib has testing functions to compare graphs etc. and just running it to ensure that no errors are raised would be a nice start. Here are some files and their coverage:; - tomography.py 50%; - visualization.py 8%; - distribution.py 23%; - bloch.py 55%; - bloch3d.py 8%. 2. The interface is not uniform. Most functions take 'fig' and 'ax', but `hilton` only takes 'ax' but no 'fig'. Maybe one third of the function in visualization accepts 'title' and half a 'figsize'. The order of these options is also inconsistent, 'fig', 'ax' can be the first parameters or the last... As seen in #1573, some want more control so `matrix_histogram` accepts `options`. I am all for more control, but being available for only one function feels wrong. On the bloch side, there is a mismatch between `add_vectors`, `add_points`, which takes `color` and `alpha` as input, and `add_arc`, `add_line` which takes `**kwargs`. 3. The colorblind mode should works everywhere, but presently only `hilton` support it. ### Proposed Solution. So for v5 release, the interface of all these should be clean and uniform, with proper tests. . ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1910:278,error,errors,278,https://qutip.org,https://github.com/qutip/qutip/issues/1910,2,"['avail', 'error']","['available', 'errors']"
Availability,"### Problem Description. `master` has qutip/qutip/cy/openmp/src/[zspmv_openmp.hpp](https://github.com/qutip/qutip/blob/master/qutip/cy/openmp/src/zspmv_openmp.hpp), for csr @ dense product with openmp, but we did not have the time to add when making the data layer for `dev.major`. In v4, to use openmp, the user needs to compile from source locally with `python setup.py install --with-openmp` and then an option has to be passed to the solver at run time to use it. For v5, it would be great if openMP was part of the Data layer and used without much thought by the user. (No need to pass `Options(use_openmp=True)` to `mesolve`). We would probably keep a flag and threshold as an option in core or settings so we can run tests with and without. We should add support for cython's `prange`. Presently, using it breaks mac's tests. If made available, there are quite a few functions for the data layer that could gain from it. While openmp is available in v4, it was not used much since it can only be used when compiling locally and the options isn't well known. Ideally, it would be packaged in the wheels (for all but Mac?) instead of needing a local installation. However it does not seems easy, [scipy decided against it](https://github.com/scipy/scipy/blob/38261c1141b8aa80bceeef419911fb4f31df5372/doc/source/dev/toolchain.rst#openmp-support), because it does not mix well with [other parallel environments](https://github.com/scipy/scipy/issues/10239#issuecomment-795030817). It may be possible with conda since it has a openmp package. . ### Proposed Solution. Tasks:; - Restore the compilation option for openmp and have `matmul_csr_dense_dense` use `zspmvpy_openmp`.; - Add options in core to control openmp. In `parallel_map`, turn it of when using multiprocessing.; - Add `prange` in a function (`mul_dense`) and ensure that tests passes and wheels build.; - Add `prange` elsewhere where useful. ### Alternate Solutions. _No response_. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1904:841,avail,available,841,https://qutip.org,https://github.com/qutip/qutip/issues/1904,2,['avail'],['available']
Availability,"#1874, which was an alternative implementation to #1727 has been merged in dev.major. If someone here could try out the new feature (available in the dev.major branch) that would be greatly appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-1134879355:133,avail,available,133,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-1134879355,1,['avail'],['available']
Availability,#This pull request will deal with a new module for solving quantum systems exploiting permutational symmetries. A somewhat complete code for this is available at https://github.com/nathanshammah/piqs which is built on several papers @nathanshammah can link to. The code is almost complete and tested but here we will upload it in parts to make the review process easy. @ajgpitch @nonhermitian @nwlambert,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753:149,avail,available,149,https://qutip.org,https://github.com/qutip/qutip/pull/753,1,['avail'],['available']
Availability,"'; ```; and a lot of functionality will break - anything that requires `Qobj.eigenstates()` for example. This is because `Qobj` defines `__array__`, one of numpy's ""array interface"" functions, intended for classes that can be safely converted _implicitly_ into an `ndarray`. This isn't really the case for `Qobj` - it loses all sorts of information when you do that, which is why we've maintained the separate `Qobj.full()` for explicitly getting the dense matrix representation of a `Qobj`. This is not to mention that numpy ufuncs probably should not be able to implicitly convert `Qobj` - I'd strongly argue that `np.sin(qutip.basis(2, 1))` should be `TypeError`, _not_ `array([[0. +0.j], [0.84147098+0.j]])` (like it is right now). We actually already removed this ""functionality"" in `dev.major`. The most pressing incompatibility is that a few points in QuTiP put a few `Qobj` into a `np.array(dtype=object)`. In numpy 1.20, this no longer produces a 1D array of `Qobj`, but a 3D array of complex. This breaks `Qobj.eigenstates`, and prevents test collection due to it being present in `states.py::qutrit_basis()`, which is called during parametrisation. There are a two possible ways to solve this, and we ought to release a fix with one of them in a patch ASAP:; 1. remove `Qobj.__array__`; 2. remove all use of `Qobj` in `np.array`. I'm personally in favour of ""explicit is better than implicit"" in this case, i.e. removing `Qobj.__array__` and relying on `Qobj.full()`. As another example along this vein, note `scipy.sparse` matrices don't implement this either, and they're arguably closer to being safely coerced to `ndarray` than we are. ### Related issues. #938: feature request for implementing `__array__`. This only asks for `np.array(qobj)` as a convenience, acknowledging the availability of `Qobj.full()`.; #1017: includes a comment on buggy behaviour caused by `__array__`. Note that the solution given there (`np.asarray(..., dtype=object)`) will no longer work with numpy 1.20.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433:1964,avail,availability,1964,https://qutip.org,https://github.com/qutip/qutip/issues/1433,1,['avail'],['availability']
Availability,'Error calculating H' when trying to use mcsolve() for time-dependent Hamiltonians,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1368:1,Error,Error,1,https://qutip.org,https://github.com/qutip/qutip/issues/1368,1,['Error'],['Error']
Availability,"([(basis(2,0) + (1j)**i *basis(2,1)).unit() for i in range(0,N)]); rho0 = psi0*psi0.dag(). ### compute time evolution with different solvers; t_list = np.linspace(0, 50, 500); output0 = mesolve(H0, rho0, t_list, c_ops, e_ops); output1 = essolve(H0, rho0, t_list, c_ops, e_ops); output2 = sesolve(H0, psi0, t_list, e_ops). ### plot result; plt.plot(t_list, output0.expect[0], label='mesolve'); plt.plot(t_list, output1.expect[0], label='essolve'); plt.plot(t_list, output2.expect[0], label='sesolve'); plt.legend(). ### time evolution with essolve, use state vector --> Exception raised; output3 = essolve(H0, psi0, t_list, c_ops, e_ops); plt.plot(t_list, output0.expect[0], label='essolve, state vector'); plt.legend(); ```; The Hamiltonian commutes with the operator for which the expectation value is computed as is easily checked. Therefore the expectation value should be time-independent. Using sesolve one obtains a wrong result. There seems to be an error when using state vectors instead of density matrices, as is seen by using the mesolve function instead. . I was not able to pinpoint the error in the code, but I checked the result with essolve and using an initial state vector. This raises an exception: ; > Exception: Operator and state do not have same tensor structure: [2, 2, 2] and [2]. essolve works as intended by using a density matrix instead, which should again indicate that there is some bug when using state vectors. Note however that the essolve bug might not be directly related to the sesolve bug, since essolve seems to work correctly when using a different initial state:; `psi0 = tensor([(basis(2,0) + 0.5*(-1j)**i *basis(2,1)).unit() for i in range(0,N)])`. I am using the newest versions of the necessary libraries: . > QuTiP Version: 4.2.0; > Numpy Version: 1.11.3; > Scipy Version: 1.0.0; > Cython Version: 0.27.3; > Matplotlib Version: 2.0.2; > Python Version: 3.6.4; > Number of CPUs: 4; > BLAS Info: OPENBLAS; > OPENMP Installed: False; > INTEL MKL Ext: False; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841:2124,error,error,2124,https://qutip.org,https://github.com/qutip/qutip/issues/841,1,['error'],['error']
Availability,"* sL,; np.sqrt(GammaL * (1 + nth)) * sL.dag()]; ; current = np.zeros(len(eps_vec)); noise = np.zeros(len(eps_vec)); ; for n, eps in enumerate(eps_vec):; H = (eps/2 * sz + tc * sx); L = qutip.liouvillian(H, c_ops); rhoss = qutip.steadystate(L); current[n], noise[n] = qutip.countstat_current_noise(L, [],; rhoss=rhoss,; J_ops=J_ops); ; current2 = qutip.countstat_current(L, rhoss=rhoss, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current2 = qutip.countstat_current(L, c_ops, J_ops=J_ops); assert abs(current[n] - current2) < 1e-8; ; current_target = (tc**2 * GammaR; / (tc**2 * (2+GammaR/GammaL) + GammaR**2/4 + eps_vec**2)); noise_target = current_target * (; 1 - (8*GammaL*tc**2*(4 * eps_vec**2 * (GammaR - GammaL); + GammaR*(3*GammaL*GammaR + GammaR**2 + 8*tc**2)); / (4*tc**2*(2*GammaL + GammaR) + GammaL*GammaR**2; + 4*eps_vec**2*GammaL)**2); ); ; np.testing.assert_allclose(current, current_target, atol=1e-4); > np.testing.assert_allclose(noise, noise_target, atol=1e-4); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=0.0001; E ; E Mismatched elements: 1 / 20 (5%); E Max absolute difference: 0.01597663; E Max relative difference: 11.81715334; E x: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.017329, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]); E y: array([0.000773, 0.000879, 0.000996, 0.001121, 0.001245, 0.001352,; E 0.001422, 0.001443, 0.001422, 0.001393, 0.001393, 0.001422,; E 0.001443, 0.001422, 0.001352, 0.001245, 0.001121, 0.000996,; E 0.000879, 0.000773]). /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/lib/python3.9/site-packages/qutip/tests/test_countstat.py:58: AssertionError; _________________________________________________________________________ test_scheduling_gates3[circuit2 ALAP no shuffle] __________________________________________________________________________. circuit = <qutip.qip.circuit.QubitCircuit ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755:2289,toler,tolerance,2289,https://qutip.org,https://github.com/qutip/qutip/issues/1755,1,['toler'],['tolerance']
Availability,"**Background**. Since I am planning to add an mpi_parallel_map to the parallel module, I had a detailed look at the current implementations of parallel_map and loky_pmap. In the case of timeouts, errors or interrupts, I found surprising behavior. I will first summarize the current behavior in these situations, and then the behavior if my changes are included. It seems difficult to write better unit tests for such timing-sensitive behavior, but I have tested in detail on both Linux (WSL) and Windows. **Current behavior**. &nbsp; | `parallel_map` | `loky_pmap`; ---|---|---; Timeout | Finishes currently running tasks, <br> then returns results of all finished tasks. | If `fail_fast`, behaves similarly to `parallel_map`. <br> Otherwise, completes all tasks but only returns <br> results of those that were started before the timeout.; CTRL+C | First CTRL+C interrupts all tasks, but program <br> enters deadlock requiring second CTRL+C | Interrupts currently running tasks, but then still <br> executes the rest before raising `KeyboardInterrupt`.; Task raises <br> exception | `fail_fast`: finishes running tasks, <br> then raises exception. <br> `!fail_fast`: raises `MapExceptions` at the end. | `fail_fast`: finishes all tasks, then raises exception. <br> `!fail_fast`: raises `MapExceptions` at the end.; Job timeout | Ignored | Always completes all tasks anyway, see below. **New behavior**. &nbsp; | `parallel_map` | `loky_pmap`; ---|---|---; Timeout | Finishes currently running tasks, <br> then returns results of all finished tasks. | Aborts currently running tasks, <br> then returns results of all finished tasks.; CTRL+C | First CTRL+C raises `KeyboardInterrupt` | First CTRL+C raises `KeyboardInterrupt`; Task raises <br> exception | `fail_fast`: finishes running tasks, <br> then raises exception. <br> `!fail_fast`: raises `MapExceptions` at the end. | `fail_fast`: finishes tasks earlier in the list, then <br> aborts remaining ones and raises exception. <br> `!fail_fast`: rais",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2280:196,error,errors,196,https://qutip.org,https://github.com/qutip/qutip/pull/2280,1,['error'],['errors']
Availability,"**Checklist**; - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/). **Description**; Added ptrace specialisation tests. While adding these tests a bug came out with `ptrace_dense` which is now fixed. The problem was it did not work for `sel=[]`, that is, no selection and hence the full trace was required. The bug comes from how `numpy` works as the output of np.prod([]) is float instead of integer. . I wonder though what should be the behaviour for `qobj.ptrace([])`. Shouldit not be the same as `qobj.trace()`? `qobj.ptrace([])` currently returns a `Qobj` of dimensions 1x1 whereas `qobj.trace()` returns a complex number. **Changelog**; Fixed error with ptrace when the input and output are dense and `sel=[]`.; Added specialisations tests for ptrace.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1744:700,error,error,700,https://qutip.org,https://github.com/qutip/qutip/pull/1744,2,['error'],['error']
Availability,"**Checklist**; - [x] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/). **Description**; Added ptrace specialisation tests. While adding these tests a bug came out with `ptrace_dense` which is now fixed. The problem was it did not work for `sel=[]`, that is, no selection and hence the full trace was required. The bug comes from how `numpy` works as the output of np.prod([]) is float instead of integer. . I wonder though what should be the behaviour for `qobj.ptrace([])`. Should it not be the same as `qobj.trace()`? `qobj.ptrace([])` currently returns a `Qobj` of shape 1x1 whereas `qobj.trace()` returns a complex number. **Changelog**; Fixed error with ptrace when the input and output are dense and `sel=[]`.; Added specialisations tests for ptrace.; Improved `ptrace` tests to test for edge cases (trace all and trace none).; Added a few more checks to catch invalid dims and raise ValueError.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1746:696,error,error,696,https://qutip.org,https://github.com/qutip/qutip/pull/1746,1,['error'],['error']
Availability,"**Checklist**; - [x] PEP8. **Description**; The behaviour of the `liouvillian` seemed to be wrong. For a `TfTensor` as input it returned a `Dense` as oupu. This is mainly because the identity matrix created within the function was not a `TfTensor`. . _Testing The tests that I included where would pass without the fix!_ . Reproducing this behaviour within QuTiP seems to be challenging. This is because of how things are automatically converted from one data type to another. In particular, `liouvillian` worked as expected for both `Dense` and `CSR` but not for `TfTensor`. However, since `TfTensor` is not part of qutip I am not sure how to make it to reproduce this error. . The issue seems in fact to be related to an inconsistency in how data is automatically transformed. The following code summarises the problem:; ```; H = qt.rand_herm(5); csr = H.to('csr').data; dense = H.to('dense').data; tftensor = H.to('tftensor').data. qutip.data.kron(csr, dense) # output: dense; qutip.data.kron(csr, csr) # output: csr; qutip.data.kron(csr, tftensor) # output: dense?? this is what causes problems!; qutip.data.kron(tftensor, tftensor) # output: tftensor; ```. **Changelog**; Fixed liouvillian to not generate dense output when used with TfTensor.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1805:670,error,error,670,https://qutip.org,https://github.com/qutip/qutip/pull/1805,1,['error'],['error']
Availability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1438:1453,error,error,1453,https://qutip.org,https://github.com/qutip/qutip/pull/1438,1,['error'],['error']
Availability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/qutip_dev_contrib.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1270:1458,error,error,1458,https://qutip.org,https://github.com/qutip/qutip/pull/1270,1,['error'],['error']
Availability,"**Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ x] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [] Please add tests to cover your changes if applicable.; - [ x] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. **Description**; Updating tests in the metrics,superop_reps and tensor modules to pytests. **Changelog**; - Updating unittests to pytests; - Rechecking environment dependent expected failure cases",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487:962,failure,failure,962,https://qutip.org,https://github.com/qutip/qutip/pull/1487,1,['failure'],['failure']
Availability,"**Checklist**; This rewrite the stochastic solver to use the class interface. - `smesolve`, `ssesolve` have been rewritten to match other solver with matching class interface `SMESolver`, `SSESolver`. The main change is that the options used to be passed as keywords (`**kwargs`) and are now passed as an options dict.; - `m_ops` and `dW_factors` are properties of the classes, but not available to overwrite through the function interface. ; - The multiples end condition (`target_tol`, `timeout`) are added.; - The `solver` keyword is now `method` options, as it is in other solver.; - The method that was referring the homodyne or heterodyne detection is now the `heterodyne` keyword. ie before `method=""heterodyne""` now `heterodyne=True`.; - The default integration method is now `rouchon`, instead of `taylor1.5`. ie the method coming from a physic paper and not a mathematics textbook. . - The stochastic integration methods have been spitted in smaller chunk instead of the huge classes in _stochastic.pyx. I kept most methods, only skipping the taylor order 2.0 method. The python interface is kept very similar to the `Integrator` as `SIntegrator`, the main difference being that `set_state` and `get_state` use an extra random number generator with the time and state. The integration methods are usually 5%~10% slower than they where for medium size problems (shape ~100). Most method are computed the same way as before, but the rouchon method no longer use super operator, but keep the density matrix as a matrix and not an oper-ket. - The derivative computation for used by the integration method has also been split into multiple functions and made only available for `smesolve`. For there methods to be valid, the each diffusion contribution must commute. For `smesolve`, this means that each `sc_ops` must commute, as documented. For `ssesolve`, each `sc_ops` must not only commute, but also commute with other `sc_ops`'s adjoint, this last part being missing from v4's documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2131:386,avail,available,386,https://qutip.org,https://github.com/qutip/qutip/pull/2131,1,['avail'],['available']
Availability,"**Describe the bug**. Running tests for qutip 4.6.2, on linux (Debian unstable), all tests pass successfully, but overall tests return error code 1, which would be treated as test failure. For instance, running tests via `python3 -c ""import qutip.testing; qutip.testing.run()""`; ```; ============================= test session starts ==============================; platform linux -- Python 3.9.2, pytest-6.0.2, py-1.10.0, pluggy-0.13.0 -- /usr/bin/python3.9; cachedir: .pytest_cache; hypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/home/drew/projects/misc/build/qutip/.pybuild/cpython3_3.9_qutip/build-test/.hypothesis/examples'); rootdir: /home/drew/projects/misc/build/qutip; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collecting ... collected 1996 items / 67 deselected / 1 skipped / 1928 selected. qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-real_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:135,error,error,135,https://qutip.org,https://github.com/qutip/qutip/issues/1639,2,"['error', 'failure']","['error', 'failure']"
Availability,"**Describe the bug**. When I try to make a tensor profuct of a large number of qubits, I get a segmentation fault. **To Reproduce**. ```python; from qutip import *; tensor([basis(2,0) for i in range(31)]); ```. The terminal out put is; ```; Fatal Python error: Segmentation fault. Current thread 0x000000011b71be00 (most recent call first):; File ""/Users/evanphilip/opt/miniforge3/lib/python3.8/site-packages/qutip/tensor.py"", line 116 in tensor; File ""<stdin>"", line 1 in <module>; zsh: segmentation fault python3 -q -X faulthandler; ```. **Your Environment**. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.19.2; Scipy Version: 1.5.2; Cython Version: None; Matplotlib Version: 3.3.2; Python Version: 3.8.6; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/evanphilip/opt/miniforge3/lib/python3.8/site-packages/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1406:108,fault,fault,108,https://qutip.org,https://github.com/qutip/qutip/issues/1406,5,"['error', 'fault']","['error', 'fault', 'faulthandler']"
Availability,"**Describe the bug**; As described in the title, ``file_`` in ``_file_list().add(file_)`` already has the extension ``'.pyx'`` (this is done by _import_str() in qobjevo_codegen.py), it is unnecessary to add yet another suffix. **To Reproduce**; This can be verified by add a line printing out ``file_`` in ``_file_list().clean()`` ; then run any test that can trigger it (for example ``test_QobjEvo_with_state()``) and observe the output. **Expected behavior**; Should only have a single ``'.pyx'`` in ``file_``. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.0.dev0+8e181cc4; Numpy Version: 1.19.1; Scipy Version: 1.5.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.1; Python Version: 3.8.5; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\berry\PycharmProjects\qutip\qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; ```. **Additional context**; I discovered this when dealing with some test failures in windows, it seems that there are multiple problems in ``qobjevo.py`` (actually, what I really wanted to figure out in the first place was that some compiled modules would be deleted before being imported). Anyway, I will update this issue whenever I make any progress.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1354:1711,failure,failures,1711,https://qutip.org,https://github.com/qutip/qutip/issues/1354,1,['failure'],['failures']
Availability,"**Describe the bug**; AttributeError: module 'scipy.sparse._sparsetools' has no attribute 'csr_matmat_pass1' . **To Reproduce**; Install the latest version of scipy 1.5.0, install qutip, and run the tests. The following fail due to the AttributeError specified above:; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[True-2-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[True-10-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-2-rand_bra]; - test_basis_transformation.py::test_transformations_from_qobj_and_direct_eigenbases_match[False-10-rand_bra]; - test_brtools.py::test_zheevr; I stopped running the tests after these errors appear, and I don't know if it causes other tests to fail as well.; The test_zheevr shows another error, but it fixes when using a previous version of scipy (e.g. 1.3). . The terminal out put is; ```; > fn = getattr(_sparsetools, self.format + '_matmat_pass1'); E AttributeError: module 'scipy.sparse._sparsetools' has no attribute 'csr_matmat_pass1'. /usr/local/lib/python3.6/dist-packages/qutip-4.5.0-py3.6-linux-x86_64.egg/qutip/fastsparse.py:197: AttributeError; ```. **Your Environment**; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.19.0; Scipy Version: 1.3.0 (error fixed); Scipy Version: 1.5.0 (error present); Cython Version: 0.29.20; Matplotlib Version: 3.2.2; Python Version: 3.6.9; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: Fal",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1304:781,error,errors,781,https://qutip.org,https://github.com/qutip/qutip/issues/1304,2,['error'],"['error', 'errors']"
Availability,"**Describe the bug**; Currently qutip is requiring scipy > 1.12 and in the CI checks scipy <1.5 is being checked. There was a bug in scipy 1.4 See [.Stackoverflow error](https://stackoverflow.com/questions/54314529/mkl-error-parameter-12-for-large-matrices-with-scipy-linalg-eigvalsh-in-an) , [bug report ](scipy/scipy#8205) that has been fixed by this [solution](scipy/scipy#11304) in the 1.5 release. This is related to the `linalg.eigh() API` which performs eigenvalue calculation, it causes error of this form `Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB`, which mostly the get silenced, and instead of terminating it just outputs an array of zeros except for the last entry. This issue occurs exclusively when using the API with high dimensional tensors, which are probably not being handled in the tests, but will inevitably cause miscalculations for the users as eigenvalue finding of hermitics is pervasive. **To Reproduce**; Just as an illustration you cun run . `pytest qutip/tests/test_superop_reps.py -s -k SuperChoiChi`. from the codes in #1491 in an environment like the generated for `coverage` tests in the CI. The terminal out put is; ```; qutip/tests/test_superop_reps.py ..; Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoper",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:163,error,error,163,https://qutip.org,https://github.com/qutip/qutip/issues/1495,4,"['ERROR', 'error']","['ERROR', 'error', 'error-parameter-']"
Availability,"**Describe the bug**; Hi world, I can't install qutip on my computer with this features:; System information; Python	3.7.6 (default, Jan 8 2020, 13:42:34) [Clang 4.0.1 (tags/RELEASE_401/final)]; OS	Darwin Version 10.15.7; CPUs	8; Memory (Gb)	16.0; Wed Dec 09 15:00:15 2020 EST. Any help?. Building wheels for collected packages: qutip; Building wheel for qutip (PEP 517) ... error; ERROR: Command errored out with exit status 1:; command: /Library/Frameworks/Python.framework/Versions/3.7/bin/python3.7 /Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/pip/_vendor/pep517/_in_process.py build_wheel /var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/tmpxkq1pgdg; cwd: /private/var/folders/xk/b7_mprf9407c0l8kvdj_f8_80000gs/T/pip-install-ehditow9/qutip; Complete output (299 lines):; running bdist_wheel; running build; running build_py; creating build; creating build/lib.macosx-10.9-x86_64-3.7; creating build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/countstat.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/scattering.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/metrics.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/mesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/wigner.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/expect.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/cite.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/permute.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/three_level_atom.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/steadystate.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/sesolve.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/version.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/bloch.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/solver.py -> build/lib.macosx-10.9-x86_64-3.7/qutip; copying qutip/rhs_generate.py -> build/lib.macosx-10.9-x86_64-3.7/qu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1404:375,error,error,375,https://qutip.org,https://github.com/qutip/qutip/issues/1404,3,"['ERROR', 'error']","['ERROR', 'error', 'errored']"
Availability,"**Describe the bug**; I am simply trying to run the code published on the qutip documentation website for the [https://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html](url). I copied the code under the section: Pre-computing the Floquet modes for one period,; and that worked fine, but then at the end of the section they point towards the function 'fsesolve' which would be the 'all-in-one' version of the code given previously, however it doesnt work and i get the error:. ```; ~\anaconda3\lib\site-packages\qutip\sesolve.py in _generic_ode_solve(func, ode_args, psi0, tlist, e_ops, opt, progress_bar, dims); 297 if ode_args:; 298 r.set_f_params(*ode_args); --> 299 r.set_initial_value(initial_vector, tlist[0]); 300 ; 301 e_ops_data = []. KeyError: 0; ```. The code:. ```; import numpy as np; from matplotlib import pyplot; import qutip. delta = 0.0 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 0.25 * 2*np.pi; omega = 1.0 * 2*np.pi; T = 2*np.pi / omega; tlist = np.linspace(0.0, 10 * T, 101); psi0 = qutip.thermal_dm(2,0). H0 = - delta/2.0 * qutip.sigmax() - eps0/2.0 * qutip.sigmaz(); H1 = A/2.0 * qutip.sigmax(); args = {'w': omega}; H = [H0, [H1, lambda t, args: np.sin(args['w'] * t)]]. output = qutip.fsesolve(H, psi0, tlist, [], args); p_ex = output.expect[0]; ```. **Your Environment**; QuTiP Version: 4.5.3; Numpy Version: 1.18.5; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.2.2; Python Version: 3.8.3; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64). **Additional context**; Add any other context about the problem here.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1663:478,error,error,478,https://qutip.org,https://github.com/qutip/qutip/issues/1663,1,['error'],['error']
Availability,"**Describe the bug**; I need at some point to modify the internal representation of a state, so I use `myobject.full()`, then I modify the matrix, and recreate a state using `Qobj` (let me know if it's not the usual way to proceed). However, it turns out that the output state does not behave like the initial state: for example I can't apply ptrace on it. Here is a minimal working example:; ``` python; from qutip import *; init_state = tensor(basis(2,0), basis(2,0)); copy_state = Qobj(init_state.full()); init_state.ptrace(0) # No error; copy_state.ptrace(0) # Error !; ```. Demo in the terminal:; ```; In [39]: from qutip import * . In [40]: init_state = tensor(basis(2,0), basis(2,0)) . In [41]: init_state ; Out[41]: ; Quantum object: dims = [[2, 2], [1, 1]], shape = (4, 1), type = ket; Qobj data =; [[1.]; [0.]; [0.]; [0.]]. In [42]: copy_state = Qobj(init_state.full()) . In [43]: copy_state ; Out[43]: ; Quantum object: dims = [[4], [1]], shape = (4, 1), type = ket; Qobj data =; [[1.]; [0.]; [0.]; [0.]]. In [44]: init_state.ptrace(0) ; Out[44]: ; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[1. 0.]; [0. 0.]]. In [45]: copy_state.ptrace(0) ; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-45-5b91e5c389a5> in <module>; ----> 1 copy_state.ptrace(0). /nix/store/63j2vgz5klgnr814blqrqhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip/qobj.py in ptrace(self, sel, sparse); 1353 return q.tidyup() if settings.auto_tidyup else q; 1354 else:; -> 1355 return _ptrace_dense(self, sel); 1356 ; 1357 def permute(self, order):. /nix/store/63j2vgz5klgnr814blqrqhj0mzvb2nyj-qutip-4.5.2/lib/python3.8/site-packages/qutip/qobj.py in _ptrace_dense(Q, sel); 2197 rd = list(rd); 2198 if isket(Q):; -> 2199 vmat = (Q.full(); 2200 .reshape(rd); 2201 .transpose(sel + qtrace). TypeError: 'numpy.float64' object cannot be interpreted as an integer. ```. **Expected",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1358:535,error,error,535,https://qutip.org,https://github.com/qutip/qutip/issues/1358,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Describe the bug**; I'm trying to get the spectrum of a qubit inside a cavity. For certain values of coupling it works, but for others not. I think this is a problem of tolerance for small numbers, i have set `qutip.settings.auto_tidyup = False` and `qutip.settings.atol = 1e-100`. **To Reproduce**; When it doesn't work it returns:; ```; <ipython-input-3-eaf63cc10951> in do_spectrum(eta, T, w_l, lowfilter); 88 #####################; 89 ; ---> 90 spec_cavity = spectrum(H_d, w_l, c_ops, Am_O, Ap_O); 91 spec_qubit = spectrum(H_d, w_l, c_ops, Sm_O, Sp_O); 92 . ~/.local/lib/python3.8/site-packages/qutip/correlation.py in spectrum(H, wlist, c_ops, a_op, b_op, solver, use_pinv); 541 ; 542 if solver == ""es"":; --> 543 return _spectrum_es(H, wlist, c_ops, a_op, b_op); 544 elif solver == ""pi"":; 545 return _spectrum_pi(H, wlist, c_ops, a_op, b_op, use_pinv). ~/.local/lib/python3.8/site-packages/qutip/correlation.py in _spectrum_es(H, wlist, c_ops, a_op, b_op); 1185 ; 1186 # correlation; -> 1187 corr_es = expect(a_op, es); 1188 ; 1189 # covariance. ~/.local/lib/python3.8/site-packages/qutip/expect.py in expect(oper, state); 75 ; 76 elif isinstance(oper, Qobj) and isinstance(state, eseries):; ---> 77 return _single_eseries_expect(oper, state); 78 ; 79 elif isinstance(oper, (list, np.ndarray)):. ~/.local/lib/python3.8/site-packages/qutip/expect.py in _single_eseries_expect(oper, state); 130 out = eseries(); 131 ; --> 132 if isoper(state.ampl[0]):; 133 out.rates = state.rates; 134 out.ampl = np.array([expect(oper, a) for a in state.ampl]). IndexError: index 0 is out of bounds for axis 0 with size 0; ```. **Expected behavior**; The expecter behavior is the normal returns of the spectrum, as it happens with other values of coupling. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current a",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1388:171,toler,tolerance,171,https://qutip.org,https://github.com/qutip/qutip/issues/1388,1,['toler'],['tolerance']
Availability,"**Describe the bug**; I'm trying to run some example projects but consistently run into an issue with numpy. I'm quite new to numpy so I couldn't figure out a suitable fix. The following is taken from J. R. Johansson's tutorial 1 (Jaynes Cumming Model), which ran on numpy 1.81. I am currently running numpy 1.16.5. I also tested lower versions of numpy down to 1.14.0; **To Reproduce**; Here is the code to reproduce it:. ```python; output = mesolve(H, psi0, tlist, c_ops, []). # find the indices of the density matrices for the times we are interested in; t_idx = where([tlist == t for t in [0.0, 5.0, 15.0, 25.0]])[1]; tlist[t_idx]. rho_list = array(output.states)[t_idx]; ```; The terminal out put is; ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-44-f8edfb054c33> in <module>; 1 # get a list density matrices; ----> 2 rho_list = array(output.states)[t_idx]. TypeError: must be real number, not Qobj; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1272:354,down,down,354,https://qutip.org,https://github.com/qutip/qutip/issues/1272,1,['down'],['down']
Availability,"**Describe the bug**; It looks like the pypi package doesn't have cython as a dependency?. **To Reproduce**; Do a ""pip3 install cython"" on a fresh ubuntu 20.04 install (i had already installed numpy and scipy). ** This is what happens when I try it**; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Downloading qutip-4.5.0.tar.gz (3.5 MB); |████████████████████████████████| 3.5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:303,Down,Downloading,303,https://qutip.org,https://github.com/qutip/qutip/issues/1246,3,"['Down', 'ERROR', 'error']","['Downloading', 'ERROR', 'errored']"
Availability,"**Describe the bug**; Running Qutip on an **M1** MacBook Pro on import I can get the following error:. File ""/Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip/__init__.py"", line 144, in <module>; info = qutip.hardware_info.hardware_info(); File ""/Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip/hardware_info.py"", line 123, in hardware_info; out = _mac_hardware_info(); File ""/Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip/hardware_info.py"", line 48, in _mac_hardware_info; results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); IndexError: list index out of range. **Your Environment**; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0; Numpy Version: 1.19.4; Scipy Version: 1.5.3; Cython Version: 0.29.21; Matplotlib Version: 3.3.3; Python Version: 3.9.0; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/otanan/miniforge3/envs/main/lib/python3.9/site-packages/qutip-4.5.0-py3.9-macosx-11.0-arm64.egg/qutip. **Additional context**; I was able to ""fix"" the issue by simply commenting out lines 48 and 49 in Qutip's hardware_info.py.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1395:95,error,error,95,https://qutip.org,https://github.com/qutip/qutip/issues/1395,1,['error'],['error']
Availability,"**Describe the bug**; When applying `resolve_gates()` method to `QubitCircuit` containing the FREDKIN gate, the following error is produced: . ValueError: Gate RY requires one target. **To Reproduce**. ```python; from qutip.qip.circuit import QubitCircuit; A = QubitCircuit(3); A.add_gate(""FREDKIN"", targets=[0, 1], controls=[2]); A.resolve_gates(); ```. It might be a good idea to check this for other gates as well as look into the internal of `resolve_gates` to clean/modify it a bit. . Note: As requested by @BoxiLi, first mentioned by me in #1318",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330:122,error,error,122,https://qutip.org,https://github.com/qutip/qutip/issues/1330,1,['error'],['error']
Availability,"**Describe the bug**; When plotting the Bloch sphere with qutip and matplotlib >=3.3.0 the sphere appears deformed in z-direction.; This is a result of a change in matplotlib Axes3D: https://matplotlib.org/3.3.0/users/whats_new.html#d-axes-improvements. **To Reproduce**. ```python; import qutip; b = qutip.Bloch(); b.show(); ```. **Work around**; 1) downgrade to matplotlib 3.2.2; or; 2) set aspect ratio manually; ```python; import qutip; b = qutip.Bloch(); b.show(); if hasattr(b.axes, 'set_box_aspect'):; b.axes.set_box_aspect([1,1,1]); ```. **Environment**; QuTiP Version: 4.5.2; Numpy Version: 1.19.2; Scipy Version: 1.5.2; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.9; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1385:351,down,downgrade,351,https://qutip.org,https://github.com/qutip/qutip/issues/1385,1,['down'],['downgrade']
Availability,**Describe the bug**; `test_fileio` is failing on Windows because this use of `tempfile.NamedTemporaryFile` doesn't work on windows. The temporary files cannot be opened twice on Windows according to https://docs.python.org/3.8/library/tempfile.html#tempfile.NamedTemporaryFile.; https://github.com/qutip/qutip/blob/9e82f5b81955952833e25bb3eeff3fa24d36556b/qutip/tests/conftest.py#L194-L197; followed by; https://github.com/qutip/qutip/blob/9e82f5b81955952833e25bb3eeff3fa24d36556b/qutip/fileio.py#L70; results in a permission error. **To Reproduce**; Run `test_fileio.py` on windows. **Your Environment**; QuTiP Version: 4.6.0.dev0+6ad7f2b8; Numpy Version: 1.18.2; Scipy Version: 1.4.1; Cython Version: 0.29.20; Matplotlib Version: 3.2.1; Python Version: 3.7.2; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64). Do you have any idea on a replacement @jakelishman ?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1311:527,error,error,527,https://qutip.org,https://github.com/qutip/qutip/issues/1311,1,['error'],['error']
Availability,**Describe the bug**; calling ptrace(0) should simply return the object. Instead it fails with an error. **To Reproduce**; import qutip as qp; qp.sigmax().ptrace(0). **Expected behavior**; expect it to return the existing object. **Your Environment**; QuTiP Version: 4.5.0; Numpy Version: 1.18.1; Scipy Version: 1.4.1; Cython Version: 0.29.16; Matplotlib Version: 3.2.1; Python Version: 3.7.6; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\Lior Ella\scoop\apps\miniconda3\4.5.12\envs\tfenv\lib\site-packages\qutip,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1239:98,error,error,98,https://qutip.org,https://github.com/qutip/qutip/issues/1239,1,['error'],['error']
Availability,"**Describe the bug**; qutip fails to import with the following error:; ```; Python 3.9.6 (default, Jun 28 2021, 19:24:41) ; [Clang 12.0.5 (clang-1205.0.22.9)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/opt/homebrew/lib/python3.9/site-packages/qutip/__init__.py"", line 115, in <module>; info = qutip.hardware_info.hardware_info(); File ""/opt/homebrew/lib/python3.9/site-packages/qutip/hardware_info.py"", line 133, in hardware_info; out = _mac_hardware_info(); File ""/opt/homebrew/lib/python3.9/site-packages/qutip/hardware_info.py"", line 50, in _mac_hardware_info; results.update({'cpu_freq': int(float(os.popen('sysctl hw.cpufrequency'); IndexError: list index out of range; ```. This appears to be caused by Apple having removed hw.cpufrequency from the list of sysctl's (see below). **To Reproduce**; Installed qutip using homebrew/pip3 (after using the workaround of specifying OPENBLAS properly before building scipy etc... so that part is all sorted). Then python3 and import qutip. ```python; from qutip import identity; print(identity(2)); ```; The terminal output (aftrer I hacked up a workaround for this issue):; ```; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[1. 0.]; [0. 1.]]; ```. **Expected behavior**; qutip successfully initializes :-). **Your Environment**; Please use `qutip.about()` to get the information about your environment and paste it here.; ```; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead deve",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606:63,error,error,63,https://qutip.org,https://github.com/qutip/qutip/issues/1606,1,['error'],['error']
Availability,"**Describe the issue**; Hello,; I'm studying the classical case of a driven qubit, and i want to know the steady state of the system. **To Reproduce**; I declared the following Hamiltonian; ```python; H_0 = 0.5 * h * w_eg * sigmaz(); H_1 = A * sigmax(); def H_1_t(t, args):; return cos(w * t). H = [H_0, [H_1, H_1_t]]; ```; but using `rho_ss = steadystate(H, c_ops)` returns the error; ```; TypeError: Solving for steady states requires Liouvillian (super) operators; ```; This implies that i can't see the spectrum through `spectrum(H, w, c_ops, sigmap(), sigmam())` because it calculates the steady state first, and so returns the same error.; A way to do that is by calculating the propagator and then the FFT of the correlation function; ```python; U = propagator(H, 2 * pi / w, c_ops); rho_ss = propagator_steadystate(U); rho_ss; corr = correlation_2op_1t(H, rho_ss, t, c_ops, sigmap(), sigmam()); wlist1, spec1 = spectrum_correlation_fft(t, corr); ```. Of course using `steadystate(H, c_ops)` function is much simpler and straightforward, and my question is if is it normal that `steadystate(H, c_ops)` returns error.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1377:379,error,error,379,https://qutip.org,https://github.com/qutip/qutip/issues/1377,3,['error'],['error']
Availability,"**Describe the issue**; I tried to Execute the code ""Time-dependent master equation: Landau-Zener transitions"" in QuTiP HP's Example notebooks(http://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/landau-zener.ipynb) ,and I get the following error message. ; Could someone help please?. Error message:; ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-7-f9c1fc837f05> in <module>; 1 start_time = time.time(); ----> 2 p_ex = qubit_integrate(delta, eps0, A, omega, gamma1, gamma2, psi0, tlist, ""dynamics""); 3 print('dynamics: time elapsed = ' + str(time.time() - start_time)). <ipython-input-5-8172adafcb2d> in qubit_integrate(delta, eps0, A, omega, gamma1, gamma2, psi0, tlist, option); 33 if option == ""dynamics"":; 34 # evolve and calculate expectation values; ---> 35 output = mesolve(H, psi0, tlist, c_op_list, [sm.dag() * sm], H_args); 36 ; 37 return output.expect[0]. ~\Anaconda3\lib\site-packages\qutip\mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 252 ss = H; 253 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 254 ss = _mesolve_QobjEvo(H, c_ops, tlist, args, options); 255 elif callable(H):; 256 ss = _mesolve_func_td(H, c_ops, rho0, tlist, args, options). ~\Anaconda3\lib\site-packages\qutip\mesolve.py in _mesolve_QobjEvo(H, c_ops, tlist, args, opt); 298 ; 299 nthread = opt.openmp_threads if opt.use_openmp else 0; --> 300 L_td.compile(omp=nthread); 301 ; 302 ss = SolverSystem(). ~\Anaconda3\lib\site-packages\qutip\qobjevo.py in compile(self, code, matched, dense, omp); 1557 self.args,; 1558 self.dynamics_args,; -> 1559 self.tlist); 1560 coeff_files.add(file_); 1561 self.coeff_files.append(file_). ~\Anaconda3\lib\site-packages\qutip\qobjevo_codegen.py in _compiled_coeffs(ops, args, dyn_args, tlist); 122 code = _make_code_4_cimport(ops, args, dyn_args, tlist); 123 coeff_obj, filename = _import_str(code, ""cqobjevo_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1244:266,error,error,266,https://qutip.org,https://github.com/qutip/qutip/issues/1244,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Describe the issue**; We use subprocess for the LaTeX plotting procedure. But the current error message for a failed subprocess is very ambiguous, which makes it very hard to debug. For illustration purpose, I deliberately change the following line so that the input pdf file has a wrong name.; https://github.com/qutip/qutip/blob/403e466becbc5d36947ca15b9211d884df83f91a/qutip/qip/circuit_latex.py#L172; I changed it to e.g. `in_file = ""pdf-that-does-not-exist.pdf""`. Running the code, the output error message is; ```; CalledProcessError: Command '('magick', '-density', '100', 'aqcirc.pdf', 'qcirc.png')' returned non-zero exit status 1.; ```; This is not very useful since the exit status 1 can have many reasons. It can also be that an additional dependency is missing (which is the reason I started to debug at the first place).; What I would like to see is the real system error message:; ```; magick: unable to open image 'pdf-that-does-not-exist.pdf': No such file or directory; ```. **Possible solution**; I didn't find a nice solution for this. Simply changing the parameter of `subprocess.run` to `stderr=subprocess.PIPE` doesn't work for me. I have to catch the exception and print the stderr message:; ```; def _run_command(*args, **kwargs):; try:; functools.partial(subprocess.run, check=True, stdout=subprocess.DEVNULL, stderr=subprocess.PIPE)(*args, **kwargs); except subprocess.CalledProcessError as err:; raise RuntimeError(err.stderr); ```; which gives me the output; ```; RuntimeError: b""magick: unable to open image 'aqcirc.pdf': No such file or directory @ error/blob.c/OpenBlob/3496.\r\n""; ```; It's ok but still weird. I guess I overlooked some feature of `subprocess`. @jakelishman I'm wondering if you have a better solution?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1426:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/1426,4,['error'],['error']
Availability,"**Description**. - Add the `reset` function to `qutip.settings` that is described in the documentation but was never implemented. ; - Add `save`, `load` to `qutip.settings`, allowing to save in alternate files.; - The list of configuration that can be saved in qutiprc is generated when loading the module.; - Ungraded the `configrc` functionalities to allow other filenames and support more than a few hard coded `qutip.settings`'s keys.; - Reading `qutiprc` will raise warning instead of errors when unknown keys. So if we remove keys in v5, old file will not cause crashes when importing qutip for the few that use qutiprc. . **Changelog**; Add `reset` to `qutip.settings`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1289:490,error,errors,490,https://qutip.org,https://github.com/qutip/qutip/pull/1289,1,['error'],['errors']
Availability,"**Description**. - Fixed some errors in the transcription of the husimi Q and Wigner W functions for spins into code.; - Ensure Q and W functions are normalized over (theta, phi).; - Add tests for correctness and normalization of spin Q function.; - Add tests for normalization and real-ness of spin W function. Correctness is established by comparing the overlap of two states and the overlap of their Wigner functions.; - Spin Q function tests take ~11s to complete, spin Wigner tests take ~10s to complete on my laptop. **To do**; - [x] Decide if the `spin_wigner` function should return only real values be default (as is currently done for the `spin_q_function`).; - [x] Find a simple test for correctness of the spin W function.; - [x] Decide whether to integrate the W function normalization in `_rho_kq` rather than at the top level. We divide all terms by `(2*j + 1)` only to end up multiplying it back out at the end which is a waste of time (`_rho_kq` is called `d**2` times, `d=2*j+1`) . The benefit of leaving it as-is is that it reads like most definitions in literature.; - [x] Update docstring for spin Q function.; - [x] Decide if normalization factor for Wigner and spin Q function should be included (Davis et al. suggest the normalization factor is only introduced during integration: Eq 14 https://arxiv.org/abs/2008.10167). **Related issues or PRs**; This issue was raised in another PR #1195 which didn't resolve this issue as intended. The original issue this fixes was #1128. **Changelog**; Fixed error for calculation of Husimi `spin_q_function` and `spin_wigner`.; Added tests to `tests/test_wigner.py` for these functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1632:30,error,errors,30,https://qutip.org,https://github.com/qutip/qutip/pull/1632,2,['error'],"['error', 'errors']"
Availability,**Description**. Add a short note about the availability of v5.0.0a1 on PyPI with link to the changelog in both the README and the installation instruction from the documentation.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2080:44,avail,availability,44,https://qutip.org,https://github.com/qutip/qutip/pull/2080,1,['avail'],['availability']
Availability,"**Description**. Add capacity to merge stochastic solver results. While adding it found a few bugs/ issues with the merge and weight that I fixed:. - When one result had trajectories and the other did not, but both stored the states, the merged result had no states.; - When merging 2 results with default ratio, that ratio would depend on whether the `improved_sampling` options was used.; - When the no-jump probability was 1, the total weight as measured by `sum(res.runs_weight)` would not be one.; - A no-jump probability over 1 by numerical error would break the evolution.; - Error in the weight application in the `_target_tolerance_end`. The last 3 are easy fix. For the default weight when merging, using the `num_trajectories` instead of `_num_rel_trajectories` is enough.; But I tried the approach of not counting the no-jumb evolution as a trajectory. This has many small advantages:; - All `result.trajectories` are the same, the first few are not special. ; - All seeds are used.; - No confusing on the merging ratio.; - Keeping the absolute and relative weight apart simply part of the merging.; - The progress bar run up to the expected number. I also tired to simplify the weight management by accumulating per data then split by abs, rel. This makes it easier to add averaged data (nmmc's trace). Seeing the change in lines number in `multitrajresults.py` it seems to be about the same. I am also thinking of removing the weight from trajectories and making it only a multitraj property:; `multitraj.add((seed, traj, rel_weight))`; `multitraj.add_deterministic(traj, abs_weight)`. The marginal / trace would stay in the trajectory, but not merging those with weight feel simpler to me. @pmenczel ; This PR larger than I expected, do you want me to break it into smaller ones for review or are you fine like this.; What do you think about splitting the no-jump / abs traj from the normal ones?; What about having the weights in the `add` instead of the trajectories?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2455:547,error,error,547,https://qutip.org,https://github.com/qutip/qutip/pull/2455,2,"['Error', 'error']","['Error', 'error']"
Availability,"**Description**. Adding ket to scalar work by adding the scalar to all non-zero entries.; This operation is not well defined and modify the original object, (see #2208).; This fix by having the operation raising an error instead. **Related issues or PRs**; Fix #2208",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2209:215,error,error,215,https://qutip.org,https://github.com/qutip/qutip/pull/2209,1,['error'],['error']
Availability,"**Description**. Fix an error in 1 time correlations function's equations.; Make clearer that 2 times correlation functions always return 2D array even when `tlist` is `None`.; Add the `:class:` descriptor to `Qobj`, `QobjEvo` in docstrings.; Remove `HEOMSolver` from the list of supported input of `correlation_3op`. **Related issues or PRs**; Fix #2018",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2021:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/2021,1,['error'],['error']
Availability,"**Description**. Functions in `random_objects.py` deal with the parameters `N` and `dims` in different ways. Here I unify their interface implementing the following changes:. 1) Both `N` and `dims` parameters are now optional, with default value `None` for all functions.; 2) If both are given, we check if they match. An error is raised if they don't.; 3) If only one of them is given, the other one receives an appropriate value.; 4) If none of them are given, an error is raised requesting one of them. Functions `rand_super` and `rand_super_bcsz` were left unchanged. I believe it's better to leave their changes for v5.0, when the parameters `N` and `dims` will be substituted by `dimensions`. **Related issues or PRs**; Fix #1838. **Changelog**; Unify interface from random_objects.py module.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1846:322,error,error,322,https://qutip.org,https://github.com/qutip/qutip/pull/1846,2,['error'],['error']
Availability,"**Description**. Hi, I would like to contribute to the issue https://github.com/qutip/qutip/issues/2389 as part of the UnitaryHack2024. I have incorporated a basic use of gates module to guide-basics.rst and a table of the available gates, with and example of how to use a Hadamard gate. Let me know if there is anything else that have to be done. **Related issues or PRs**; https://github.com/qutip/qutip/issues/2389",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441:223,avail,available,223,https://qutip.org,https://github.com/qutip/qutip/pull/2441,1,['avail'],['available']
Availability,"**Description**. In the recently released numpy 1.22.0 the `__config__` attribute for the; published wheels (at least on the linux platforms I'm using) have; removed the `blas_opt_info` attribute and are instead publishing; identical information in the `blas_ilp64_opt_info` attribute. Running; qutip with the latest numpy release on these platforms was causing an; attribute error when `_blas_info()` is called as; `numpy.__config__.blas_opt_info` doesn't exist in the installed numpy.; This commit fixes this by first checking if the new name exists and; using that to get the blas opt info, and then trying the name available; in previous releases. This should maintain compatibility with older; numpy releases but fix the issue when running with 1.22.0. **Changelog**. Fix compatibility with numpy configuration in numpy's 1.22.0 release",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1752:376,error,error,376,https://qutip.org,https://github.com/qutip/qutip/pull/1752,2,"['avail', 'error']","['available', 'error']"
Availability,"**Description**. Merge master at after #1847 into `dev.major`. **Notes**. - qip's changes are not kept, this part is still the same state as it was before the merge. Any improvement that were added to master should instead be pushed to qutip/qutip-qip.; - The tests now consider warning as error, this cause other tests to fail, but they run fine without this. ; - Documentation is still at master's state.; - When needed, change from fastsparse to data layer where made as minimally as possible: steadystate, steadystate_floquet, floquet, krylovsolve, etc. use rough shims. **Todo**. - [x] Add back .coveragerc; - [x] Turn off warnings-are-errors flag in tests; - [x] Fix steadystate tests (@AGaliciaMartinez); - [x] Merge in #1837 from master (adding transparency options to points and vectors on the Bloch sphere).; - [x] Fix [qutip/core/cy/openmp/src/zspmv_openmp.cpp](https://github.com/qutip/qutip/pull/1850/files#diff-df17c9d6ec3977033ce197f9a782cd99c0573131ab691cc8fbeeb4b3f0a5c943). **Todo (post PR merge)**. - [x] HEOM: Files where pulled, but any issue was dealt by commenting the code. All related tests are skipped. (@hodgestar); - [x] HEOM: Documentation plots were commented out -- check all docs thoroughly. (@hodgestar); - [x] Steadystate: Test fails, there seems to be ~3 bugs that I could not fix in time.; - [x] Update documentation to build on QuTiP 5 (@hodgestar); - [ ] Thoroughly check Bloch and Bloch3d. (@hodgestar); - [x] Remove _pyxbuilder.py (@ericgig); - [x] Remove legacy bloch_redfield solver (@ericgig); - [x] Fix test warnings and turn warnings-are-errors back on; - [x] Fix doc warnings and turn warnings-are-errors back on; - [x] QIP: Remove qip and qip docs. (@BoxiLi); - [x] Get to the bottom of the Windows PermissionErrors when compiling string coefficients",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1850:290,error,error,290,https://qutip.org,https://github.com/qutip/qutip/pull/1850,4,['error'],"['error', 'errors']"
Availability,**Description**. Prepare the 4.6.1 release. **Related issues or PRs**. * PR #1498 (fixed a bug in old Scipy/MKL eigh combinations) - https://github.com/qutip/qutip/pull/1498; * PR #1501 (fixed some errors in QIP gate definitions) - https://github.com/qutip/qutip/pull/1501; * PR #1505 (fixed some documentation build errors) - https://github.com/qutip/qutip/pull/1505; * PR #1506 (fixed some test warnings) - https://github.com/qutip/qutip/pull/1506; * PR #1510 (added the [full] pip install target) - https://github.com/qutip/qutip/pull/1510; * PR #1511 (updated the README) - https://github.com/qutip/qutip/pull/1511; * PR #1513 (graft qutip-doc into qutip) - https://github.com/qutip/qutip/pull/1513; * PR #1541 (fix sdist release) https://github.com/qutip/qutip/pull/1541; * PR #1542 (add Simon as author) https://github.com/qutip/qutip/pull/1542. **Changelog**. Version 4.6.1.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1543:198,error,errors,198,https://qutip.org,https://github.com/qutip/qutip/pull/1543,2,['error'],['errors']
Availability,"**Description**. The aim of this project is to enhance the capabilities of qutip's HEOM implementation by introducing a set of tools that offer the option to simulate arbitrary spectral densities or correlation functions. . To achieve this the main idea is to fit our wanted spectral density by a set of underdamped Drude-Lorentz spectral densities or correlation functions. The idea is that the user will supply his desired spectral density or correlation function and the tools will automatically do the fit and construct the corresponding HEOM bath. Guesses ffor the fit and the number of terms will be decided automatically if the user does not specify them. To decided on the number of terms, we will used the normalized root mean square error as a measure of the goodness of the fit. . I also added functions to bosonic bath to quickly obtain the correlation function, power spectrum and spectral density for the existing bosonic baths . **Note**. Those tests fail because mpmath is not in the requirements, it is needed because the scipy version of the Rienmann zeta function doesn't take complex arguments (https://github.com/scipy/scipy/issues/9182). **Related issues or PRs**. The Qutip tutorial notebooks are updated to show this new functionality in (https://github.com/qutip/qutip-tutorials/pull/72)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2260:743,error,error,743,https://qutip.org,https://github.com/qutip/qutip/pull/2260,1,['error'],['error']
Availability,"**Description**. We have steadystate tests that fail almost always in CI on Python 3.9 with OpenMP and MKL, and sometimes with just Python 3.9 and MKL. Issue is currently hard to reproduce locally. **Related issues or PRs**; * Test failures seen in #1689 and elsewhere. **Progress so far**; * Fixed a small issue in steadystate tests so that I can use pytest-repeat to run `--count=100` on the steadystate tests in the hopes of reproducing the bug locally.; * Removed mutable default c_ops arguments for steadystate and liouvillian.; * Fix reference to method in _pseudo_inverse_sparse.; * ~~Only set method in pseudo_inverse if one is explicitly defined.~~ (revert). **Changelog**; TODO: Write the changelog once we understand properly what is going on.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694:232,failure,failures,232,https://qutip.org,https://github.com/qutip/qutip/pull/1694,1,['failure'],['failures']
Availability,"**Description**; - The plotting method is made more robust.; - Add `pulse_mode` as a wrapper for spline_kind, for discrete and continuous pulses. They are more friendly names for experimentalists.; - Add `num_qubits` as a replacement for `N`. In QuTiP capital letter are used for operators, like `H` for Hamiltonian. Due to historical reason, `N` is used in `qip` for the number of qubits. We would like to replace it with `num_qubits` in `qutip_qip`. Start from this wrapper and promoting the usage of this in notebooks guide. **Changelog**; Minor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1446:52,robust,robust,52,https://qutip.org,https://github.com/qutip/qutip/pull/1446,1,['robust'],['robust']
Availability,**Description**; 1) Changes in floquet_master_equation_rates to make it faster.; 2) Correction transposition errors in floquet_master_equation_tensor and changes to make it faster. NB: This version works only for 1 rate matrix but could be generalized easily.; 3) Correction in floquet_markov_mesolve. The basis change that returns the results in the computational had errors. NB: Results are still given in the interaction picture. **Related issues or PRs**. **Changelog**; Fixed transposition error in floquet_master_equation_tensor; Fixed basis change error in floquet_markov_mesolve; Made floquet_master_equation_rates faster; Made floquet_master_equation_tensor faster,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1248:109,error,errors,109,https://qutip.org,https://github.com/qutip/qutip/pull/1248,4,['error'],"['error', 'errors']"
Availability,"**Description**; A test was failing since the numpy 2.1 release on windows. ; It seems to be related the the way low level libraries are linked, a lower precision was used on windows... Loosening the ODE tolerance fix the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2516:204,toler,tolerance,204,https://qutip.org,https://github.com/qutip/qutip/pull/2516,1,['toler'],['tolerance']
Availability,"**Description**; Add `krylov` method as an `Integrator` for `SeSolver` porting `krylovsolve` to v5 format. The state evolution code was rewritten to use the qutip's data object instead of numpy arrays, but is otherwise the same. Since an integrator can be used without knowing the length of the evolution, some changes where as to when the krylov matrices are recomputed. Instead of choosing the step length so the error of the whole evolution is under `atol`, it is chosen so each steps stays under it and an options is available to compute it only once or at each step. A default `krylov_dim` was needed for the integrator, so I set it the scale as the square root of the size of the system. This is not ideal, but seems to work fine. When using it through `krylovsolve`, `krylov_dim`is a required parameter.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1986:415,error,error,415,https://qutip.org,https://github.com/qutip/qutip/pull/1986,2,"['avail', 'error']","['available', 'error']"
Availability,"**Description**; Add a `Solver` class for better task distribution in `sesolve` and `mesolve`. `sesolve`, `mesolve`, etc. are presently mostly independent: each create their time dependant system, the function to integrator with scipy's ode solver, loop over the `tlist` and store results. With this PR, the `[se/me]solve` functions will reuse most of the code and be more modular.; We already have a `Result` class to manage e_ops and store result, `Integrator` to solve the ode system. `QobjEvo` can support any time-dependant format we support. This PR introduce a new class `Solver` to join all these. Basis usage looks like:; ```; rhs = QobjEvo(...); solver = Solver(rhs, options=opt); result = solver.run(psi, tlist, e_ops=e_ops); result.expect; ```. It can also do step evolution:; ```; rhs = QobjEvo(...); solver = Solver(rhs, options=opt); solver.start(psi, t0); psi_t1 = solver.step(t1); psi_t2 = solver.step(t2, args=new_args) # Can be inefficient depending on integrator.; psi_t3 = solver.step(t3, options=new_opt) # Inefficient but supported.; ```; When stepping, the output is always the state as `Qobj`. The solver class promote ket state to density matrices when the rhs is a super-operator. `rhs` support `Qobj` and `QobjEvo`, but not list or function. This PR also add `MeSolver` and `SeSolver` classes, but they are very light:; `MeSolver(H, c_ops)` is equivalent to `Solver(liouvillian(H, c_ops))`. `Solver` store a list of available `Integrator` as a class property. `Solver.avail_integrator` has all integrators available to all solvers. `SeSolver.avail_integrator` has all these with those registered directly to `SeSolver`. This is to allow Integrator for specific system. We could think for the floquet sesolve method to be made into an integrator specific to `SeSolver`. . The interface for `sesolve` and `mesolve` is mostly unchanged, but `progress_bar` keyword is moved to an options and the `_safe_mode` keyword is removed. **Changelog**; Added `Solver` class.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1700:1444,avail,available,1444,https://qutip.org,https://github.com/qutip/qutip/pull/1700,2,['avail'],['available']
Availability,"**Description**; Add a lock for creating string coefficient. This allow to use the coefficient inside a parallel loop without issues.; The lock use `filelock` which works across processes, so it's safe to use with parallel coming from outside python.; The lock is per file, so different coefficient can compile in parallel. If there is a conflict, the first process will create and compile the coefficient and the other will use it (raising a hash collision error if not actually the same string.). `filelock` is a new requirement for runtime compilation. **Related issues or PRs**; #1963",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1968:458,error,error,458,https://qutip.org,https://github.com/qutip/qutip/pull/1968,1,['error'],['error']
Availability,"**Description**; Add a variant to `matmul` specialised for case where the right matrix is a column stacked hermitian matrix, and the output is the same. Such as for `mesolve` using super operators. Open solvers `mesolve`, `brmesolve`, `smesolve` and `fmesolve` all have a new options `use_herm_matmul` to use this operation. The default is `False` since we cannot easily check for exception (we can't test that a time dependant Hamiltonian is Hermitian, ...). With large enough systems, this result in a visible speed up:; ```; >>> N = 100; >>> H = qt.rand_herm(N, density=3/N); >>> c_ops = [qt.destroy(N)]. >>> qt.mesolve(H, qt.basis(N, N-2), [0, 10], c_ops=c_ops, options={""use_herm_matmul"": True}).stats[""run time""]; 0.8431086540222168; >>> qt.mesolve(H, qt.basis(N, N-2), [0, 10], c_ops=c_ops, options={""use_herm_matmul"": False}).stats[""run time""]; 1.0559077262878418. qt.smesolve(H, qt.basis(N, N-2), [0, 2], sc_ops=c_ops, ntraj=1, options={""use_herm_matmul"": True}).stats[""run time""]; 0.9043550491333008; qt.smesolve(H, qt.basis(N, N-2), [0, 2], sc_ops=c_ops, ntraj=1, options={""use_herm_matmul"": False}).stats[""run time""]; 2.111673355102539; ```. This is a use case for the capacity to dispatch on `Data` added in #2157. When `herm_matmul` is not available, it can be better to fallback on `matmul` using the same type than to do conversions between data types. For cupy, moving the data to the cpu to halves the work is probably not worth it. ; **Related issues or PRs**; This is build on top of #2157, it should be merged first.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2173:1254,avail,available,1254,https://qutip.org,https://github.com/qutip/qutip/pull/2173,1,['avail'],['available']
Availability,"**Description**; Add data layer functions needed to update `steadystate` to use qutip's data layer. Most of `steadystate`'s methods solve the system `L(rho_ss) = 0` using different solver from numpy, scipy, mkl.; This add the `solve` dispatched function to wraps this operation at the data layer level.; For the `CSR` version, it gives access to all methods available in `scipy.sparse.linalg` and our mkl version.; For the `Dense` version, `solve` and `lstsq` from `numpy.linalg` are made available.; Options supported by numpy / scipy for each function are pass through:; `qutip.data.solve(A, B, method, options)` call `scipy.sparse.linalg.method(A, B, **options)`. Other methods of `steadystate` decompose the Liouvillian with either `eigen` or `svd`.; `svd` was added as a dispatched function, but only with specialization for `Dense`. ; I made a sparse version, but `svds` can't readily compute all singular values and does not respond well to splitting the problem into 2 like it was done for sparse eigensolver. . This PR only include the new dispatched functions, not updated `steadystate` using them or `Qobj` interface.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2002:358,avail,available,358,https://qutip.org,https://github.com/qutip/qutip/pull/2002,2,['avail'],['available']
Availability,"**Description**; Add hypothesis strategies for data objects and some simple property-based tests for data operations. We aim for compatibility with numpy, but there are caveats in few different cases:. | Operations | Non-finites Equivalent | Notes |; | -- | -- | -- |; | Creation & negation | | No caveats |; | Equality checks | | The same tolerances must be specified |; | Addition & subtraction | Yes | |; | Scalar multiplication & division | Yes | CSR may raise an exception if the scalar is non-finite |; | Matrix multiplication | Not tests | Magnitude range is restrict to ensure precision |; | Trace, adjoint, transpose, conj & copy | | No caveats |. In some cases we also need to ignore warnings raised by numpy about operations with `nan` and `inf` when calculating the expected result. **Related issues or PRs**; - None",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957:340,toler,tolerances,340,https://qutip.org,https://github.com/qutip/qutip/pull/1957,1,['toler'],['tolerances']
Availability,"**Description**; Add some `skipif` to bypass tests that were failing (segmentation faults) during the local testing of `qutip.testing.run()` that was failing in the zip version of #1241. I am on Mac with generic BLAS and no MKL. ; I have been installing it on a fresh conda environment with; ```; pip install -e .[development]; ```; which I think is better than ; ```; python setup.py develop; ```; and by the way maybe this is something that can be updated in the readme and docs.; ; My qutip.about reads:; ```; QuTiP Version: 4.5.1; Numpy Version: 1.15.4; Scipy Version: 1.4.1; Cython Version: 0.29.8; Matplotlib Version: 3.1.2; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/github/qutip-4.5.1/qutip; ```; This PR could be included in the 4.5.1 version @Ericgig. . **Related issues or PRs**; This PR is related to #1241. **Changelog**; Add `skipif`in `pytest` on Mac with generic BLAS, avoiding segmentation fault during `qutip.testing.run()`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1255:83,fault,faults,83,https://qutip.org,https://github.com/qutip/qutip/pull/1255,4,['fault'],"['fault', 'faults']"
Availability,"**Description**; Add support for setting the numpy version in test runs. **Related issues or PRs**; * See #1694 for the strange steadystate test failures on Python 3.9, numpy 1.21.2 and on certain Azure VMs.; * See #1689 for earlier discussion of the above failures in an unrelated PR. **Changelog**; * Add support for specifying the numpy version in the CI test matrix and pin numpy to the latest 1.20.X by default.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1696:145,failure,failures,145,https://qutip.org,https://github.com/qutip/qutip/pull/1696,2,['failure'],['failures']
Availability,"**Description**; Add support for the up comming numpy v2:. - Allows qutip to be compiled with numpy 2, and pass tests.; - Test that binaries compiled with numpy 2 are compatible with numpy 1 at runtime. I did not update the requirement yet, it must be installed in `--no-build-isolation`.; When it's officially released, we will need to update `pyproject.toml` and `setup.cfg`, and possibly add test for np2 on windows and mac. Here are the changes that affect us:; - `np.array(.., copy=False)` no longer mean copy only if needed. `copy=None` was added for that.; - `np.trapz` was replaced by `np.trapezoid`. Since there are no overlaps, I opted to use `scipy.integrate.trapezoid` instead.; - `np.array(1, np.int32) * 2**33` will enforce the integer type and overflow.; - `Py_intptr_t` from `python.h` is no longer available through numpy cython interface.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2421:815,avail,available,815,https://qutip.org,https://github.com/qutip/qutip/pull/2421,1,['avail'],['available']
Availability,"**Description**; Add test jobs for the familly packages (`qutip-qip`, `qutip-qoc`, `qutip-jax`) for PR in `qutip/qutip`.; Tests the development version or could be ran manually to test any version (tags / branch). This will cause a lot of PR to look bad with error outside their scope, but if we keep the other modules working, then this could be a useful tool.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2504:259,error,error,259,https://qutip.org,https://github.com/qutip/qutip/pull/2504,1,['error'],['error']
Availability,"**Description**; Add the capacity of stochastic solver to run from know noise or measurements.; In the lab, the measurement can be obtained, but that measurements is a mix of and expectation values and noise. The stochastic solver can be used to split these components to study the system. The new method for this is `SMESolver.run_from_experiment`. It works similarly to `run` of deterministic solver: it compute a single trajectory. It can take either `dW` or `measurement` as the noise input. (`dW` is the default). `dW` input is available with every integration method, but measurement input is limited to `euler`, `milstein`, `pred_corr`, `platen`. The measurement is `expect(m_ops, state_t) + dW / dt`. For `run_from_experiment` it has no choice but to take `state_t` at the start of the interval, but for the result for `smesovle`, it was taken at the end of the interval. I updated the `store_measurement` options to allow the user the choose where it is taken between `start`, `end` and `middle`. When `start` is used, the `run`'s result's measurement can be feed back to `run_from_experiment` to recompute the same trajectory. (The theory is the integral of the expectation value over the interval.). Another change in this PR is to keep the dW in the wiener and result class. We used to sum them into `W`, but the `dW` are what we use so it just end up being extra calls to `np.cumsum` and `np.diff`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2318:533,avail,available,533,https://qutip.org,https://github.com/qutip/qutip/pull/2318,1,['avail'],['available']
Availability,"**Description**; Add type hints to function that create `Qobj` (`states.py`, `operators.py`, `gates.py` and `random_object.py`).; I also ran `mypy` on these files and fixed easy issues (`Qobj * Qobj` -> `Qobj @ Qobj`). Some points to look at more closely: ; - We have a lot of `int, list of int, list of list of int, Space` etc. But what is actually accepted can change:; - `basis` can take super operators dimension to create an `operator-ket`, but not if `offset` is used.; Should we raise an error and officially not support these case or arrange it so offset is `supported`?; - Is `SpaceLike` an alias useful for these case or just confusing?; - Array of Qobj output have been changed to list of Qobj.; - I did not update most docstring. `qdiags` dims are `DimensionLike` in type hints, but `list` in the docstring.; - `jmat` return a single `Qobj` or a list of `Qobj`... For typing, it would be nicer if it always returned a single operator. There is also no advantage to computing the operators together.; - `numbers.Number` is not a valid type according to mypy etc. (`Qobj.__mul__` is always raising errors...)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2473:495,error,error,495,https://qutip.org,https://github.com/qutip/qutip/pull/2473,2,['error'],"['error', 'errors']"
Availability,"**Description**; Add warning messages went passing input to solver that moved / were renamed in v5.; Hopefully this should help with the transition. When the parameter affect the physical result, an error is raised instead of a warning.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2248:199,error,error,199,https://qutip.org,https://github.com/qutip/qutip/pull/2248,1,['error'],['error']
Availability,**Description**; Added tests for expect specialisations. The tests follow the structure in `test_mathematics` which helps developing new data . **Notes**; I changed the logic in `expect.pyx` to also raise `ValuError` when op is not a square matrix. `expect_csr` was crashing with a segment fault when passing a nonsquare matrix as `op`. I am not sure why this error was not being caught by the tests for `qutip.expect`. I guess this function does some check to the Qobj given as argument.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1626:290,fault,fault,290,https://qutip.org,https://github.com/qutip/qutip/pull/1626,2,"['error', 'fault']","['error', 'fault']"
Availability,"**Description**; Added tests for pow specialisation. I also changed the raised error to `ValueError` to be consistent with the rest of the specialisations (and in particular with trace that also raises `ValueError` if input matrix is not square). . The tests do not contemplate the cases where:; - n is not an integer (float): Float is cast to integer so: `pow_csr(matrix, 0.1) == pow_csr(matrix, 0)`. We may want to raise `TypeError` instead.; - n is not positive: `OverflowError` is raised instead of `TypeError`. This is due to how Cython works but we may want to raise TypeError for consistency with the rest of the code. For instance, raising `TypeError` in these cases is what NumPy does. What should we do?. **Related issues or PRs**; None. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Tests for pow specisalisation.; Pow now raises ValueError instead of TypeError if matrix is not square.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1622:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/pull/1622,1,['error'],['error']
Availability,"**Description**; Adds a --with-idxint-64 compilation option for building with 64-bit integer indices in the data layer. (Alternative to #1727); Instead of using a compile time environment variable, it contains files for both 32 and 64 int and choose at setup which to use. This way has the advantage that cython can keep track of the version used and recompile all file depending on it when changed.; With compile time environment variable, you can have file compiled with different type of int and only get error when trying to use them. Also 'cimporting' data is simpler since you don't need to define the variable. However, changing all the import location made diff a lot bigger than #1727. `qutip.settings.install['intsize']` will return 32 or 64 depending on the size of int used. **Changelog**; Added a compilation option for compiling with 64-bit integer.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1874:508,error,error,508,https://qutip.org,https://github.com/qutip/qutip/pull/1874,1,['error'],['error']
Availability,"**Description**; Adds hyperlinks for functions, classes, attributes etc. wherever possible. . - Deleted methods table. See [this comment](https://github.com/qutip/qutip/pull/1499#issuecomment-822679427). ; - Every function, class etc is linked by default method of ``:obj:`.some_func` ``; - Functions not in API doc are referenced as 'func_not_in_API'. ; - Added `TypeError` and `ValueError` etc. in docstrings when an error of either type is raised by a function. Most of these might not be needed as [this link](https://numpydoc.readthedocs.io/en/latest/format.html#raises) advises to provide information about only the obvious errors. I read the link after making the changes. If needed, the new additions can be removed from the docstrings. . **Related issues or PRs**; [One of the fixes for issue 71 in documentation](https://github.com/qutip/qutip-doc/issues/71). . **Changelog**; Add hyperlinks in documentation and errors in docstrings of functions in qobj and qobevo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1499:419,error,error,419,https://qutip.org,https://github.com/qutip/qutip/pull/1499,3,['error'],"['error', 'errors']"
Availability,**Description**; Allow `qobj +/- 0` for `Qobj` of any shape and type to allow the use of `sum(kets)` as discussed in #1841.; Addition and subtraction of any other number will still raise an error if the object is not square as before. **Related issues or PRs**; Issue raised in #1841. **Changelog**; Allow `ket + 0`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1934:190,error,error,190,https://qutip.org,https://github.com/qutip/qutip/pull/1934,1,['error'],['error']
Availability,"**Description**; Another cython release, another fix needed... The missing type definition in `dia.diags_` was causing an error during the cythonize step. The other changes are related to the new ""performance hint"".; `nogil` and `except *` do not work well together.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2247:122,error,error,122,https://qutip.org,https://github.com/qutip/qutip/pull/2247,1,['error'],['error']
Availability,"**Description**; Apply the changes to solver/result.py that were made previously for mcsolve in #1710. ; Also add other improvement to `Result`. Major changes:; - `Result.__init__` signature changed from `(e_ops, options, _super, oper_state)` to `(e_ops, options, tlist, state0)`.; To know if we can normalize the state, we use the first state's dims instead of asking for information about it.; The first `add` is done in the `__init__` call.; - `MultiTrajResult` and `MultiTrajResultAveraged` are merged into `MultiTrajResult`: both classes were be interchangeable but did not share code, so any modification needed to be done twice.; - Add capacity to compute trajectories until a tolerance is reached. A new feature in #1710 was to allow to compute trajectories until the error bars on the expectation values are under a certain tolerance. The `add` method compute the error bars using jackknife re-sampling and return an estimation of the number of trajectories still needed to reach the desired tolerance. The mapping function can then stop computing trajectories when this reach `0`.; - `McResult` was created: `collapse` and `photocurrent` are an output of `mcsolve` only. So these were removed from `MultiTrajResult` and move into `McResult`. Other changes:; - `MultiTrajResult.steady_state` is a function instead of a property. `steady_state` was the average of the states for all times. With long enough `tlist`, it should converge to the steady state, but the first times are usually far from it. As a function, it offer the possibility to average the last `N` states.; - When `e_ops` is a `Qobj`, `QobjEvo` or `callable`, the expect will not be a list but the array of expect:; `Result(e_ops=[num], ...).expect[0] == Result(e_ops=num, ...).expect`.; I am not too sure about that one, it feel logic but could break some codes. . **Related issues or PRs**; #1710",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1889:684,toler,tolerance,684,https://qutip.org,https://github.com/qutip/qutip/pull/1889,5,"['error', 'toler']","['error', 'tolerance']"
Availability,"**Description**; As observed by @amitjansc, tidyup did not properly reacted to change to the default tolerance in settings.; Fix this and add tests. **Related issues or PRs**; Close #1829 . **Changelog**; Ensure `tidyup`'s default tolerance is read from settings at each call.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1830:101,toler,tolerance,101,https://qutip.org,https://github.com/qutip/qutip/pull/1830,2,['toler'],['tolerance']
Availability,"**Description**; Before this fix the following two situations were incosinsten:; ```python; matrix = np.random.random((2, 2)); qobj = qutip.Qobj(array). qobj * matrix # This would perform a matrix multiplication as `__mul__` tries to convert matrix into `Qobj`.; matrix * qobj # This would raise an error as `__rmul__` assumed that matrix was a `Qobj`.; ```. I assumed that `qobj * matrix` behaviour is the correct one as it is explicitly programmed to work like that. With this fix `matrix * qobj` will first try to convert matrix to `Qobj` and perform a matmul between matrix and `Qobj`. **Related issues or PRs**; Issue #1607 is related to this although this PR does not close that issue. **Changelog**; __rmul__ now accepts as `other` an array_like that is understood by `Qobj`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611:299,error,error,299,https://qutip.org,https://github.com/qutip/qutip/pull/1611,1,['error'],['error']
Availability,**Description**; Clean-up of the point method in the `Bloch` class. This PR does not add any new feature but it does:; - Improve readability and logic in the point methods for the Bloch class. ; - Extended test coverage of the point methods.; - Now add_points raises error if the arguments `points` or `meth` are wrong. **Changelog**; Clean-up of the point methods in the `Bloch` class.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1909:267,error,error,267,https://qutip.org,https://github.com/qutip/qutip/pull/1909,1,['error'],['error']
Availability,"**Description**; Completed the guide page of the settings to include missing entries as well as options included in `settings.core` and `settings.compile`. Added `CoreOptions` and `CompileOptions` to the apidoc and completed the docstrings. I also removed settings that are no longer used anywhere. Lastly I changed the default for `accept_float` compile option. Presently, if an args is a float it cannot be updated to a complex:; ```; >>> a = qutip.coefficient(""A"", args={""A"": 1.}); >>> a(0, A=1j); TypeError: must be real number, not complex; ```; Creating a new coefficient work would be needed. This will certainly cause an issue eventually, but updating it to complex automatically would cause some error with brmesolve spectra: (`w > w0`) as complex cannot be compared. Without types, string are not any better than functions so removing them altogether is not ideal. So I changed it to use complex when no comparison are done and float otherwise. **Related issues or PRs**; fix #1524",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2403:705,error,error,705,https://qutip.org,https://github.com/qutip/qutip/pull/2403,1,['error'],['error']
Availability,"**Description**; Dicke density state matrix should only have positive eigenvalues, but rounding errors causes eigenvalues of 0 to instead be represented as a very small negative number.; This causes `dicke_trace_function` to return -Inf, since `scipy.special.entr` returns -Inf for any values < 0.; This issue was fixed by simply taking the absolute value of the eigenvalues in dicke_trace_function, which we are allowed to do since the density state matrix should only have positive eigenvalues. **Related issues or PRs**; fix #1919",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2466:96,error,errors,96,https://qutip.org,https://github.com/qutip/qutip/pull/2466,1,['error'],['errors']
Availability,"**Description**; Extra check in `Qobj` constructor to make sure that the underlying data behaves as expected. **Related issues or PRs**; The PR is a fix to #1782, where the `Qobj` would be constructed in a way subsequent code (i.e. `mesolve`) did not expect causing a segmentation fault. **Changelog**; Added a check in `Qobj` constructor that the respective members of `data.shape` cannot be larger than what the corresponding `dims` could contain.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1783:281,fault,fault,281,https://qutip.org,https://github.com/qutip/qutip/pull/1783,1,['fault'],['fault']
Availability,"**Description**; Fix #1912. The issue was that previously the print_figure function returned byte code, but since ipython/ipython#5452 it returns a Unicode string. **Related issues or PRs**; Fix #1912. **Changelog**; Fixed an error with svg representation of Bloch.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1918:226,error,error,226,https://qutip.org,https://github.com/qutip/qutip/pull/1918,1,['error'],['error']
Availability,**Description**; Fix a few remaining issues with import for v5.; - Import `krylovsolve` in the qutip namespace.; - I forgot to remove the second version of `parallel.py`. the old version is moved into the `solve` and only used by stochastic solver. Remove the `parfor` function.; - `piqs` is imported as a namespace. This create distance with functions such as `qutip.ghz_state` and `qutip.piqs.ghz`.; - Remove `qutip.cy` from the namespace. All classes and functions it contain are not user facing or available elsewhere.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2061:502,avail,available,502,https://qutip.org,https://github.com/qutip/qutip/pull/2061,1,['avail'],['available']
Availability,"**Description**; Fix bug in `correlation 2op_2t ` when using time-dependent hamiltonians and collapse operators. Also, a test was added in `test_correlation`. **Related issues or PRs**; This PR addresses [#1808](uhttps://github.com/qutip/qutip/issues/1808). It solves the issue. **Changelog**; Fixed error for time-dependent hamiltonians and collapse operators in correlation 2op_2t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1929:300,error,error,300,https://qutip.org,https://github.com/qutip/qutip/pull/1929,1,['error'],['error']
Availability,**Description**; Fix errors in gate definitions. **Changelog**; Correct expansion of berkeley and swapalpha gates; Correct definition of CZ gate; Add CPHASE gate to list of control gates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1501:21,error,errors,21,https://qutip.org,https://github.com/qutip/qutip/pull/1501,1,['error'],['errors']
Availability,"**Description**; Fix issues with multi- trajectory results:; - When one result had trajectories and the other did not, but both stored the states, the merged result had no states.; - When merging 2 results with default ratio, that ratio would depend on whether the `improved_sampling` options was used. ; - When the no-jump probability was 1, the total weight as measured by sum(res.runs_weight) would not be one.; - A no-jump probability over 1 by numerical error would break the evolution.; - Fix weight application in the `_target_tolerance_end`. (At `abs_weight == 1`, the error should be 0).; - `average_final_state` not being computed properly when runs were stored. This PR is a part of #2455. (1/4?); The absolute weighted trajectories are still mixed with the other. (#2455 fixed the issues by not counting the no-jump evolution are a trajectory.). Tests need #2457 to pass.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2459:459,error,error,459,https://qutip.org,https://github.com/qutip/qutip/pull/2459,2,['error'],['error']
Availability,"**Description**; Fix warning / error for numpy 1.25; - `np.product` is deprecated, changed to `np.prod`.; - Single elements array can no longer be implicitly converted to scalar.; - Remove `run_module_suite`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2178:31,error,error,31,https://qutip.org,https://github.com/qutip/qutip/pull/2178,1,['error'],['error']
Availability,"**Description**; Fix warnings and errors coming from matplotlip 3.8 release.; - Close figure in errors tests. Lot of empty figures were created and never closed.; - `plt.contourf` can be used as an artist instead of extracting the artists list from it.; - `color` cannot be a numpy array anymore, convert the arrays to list.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2238:34,error,errors,34,https://qutip.org,https://github.com/qutip/qutip/pull/2238,2,['error'],['errors']
Availability,**Description**; Fixes issue #2199. Now extract states passes down the _isherm attribute. I also changed `rand_herm` to return an object that has already set the `_isherm` attribute. **Related issues or PRs**; fix #2199,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2214:62,down,down,62,https://qutip.org,https://github.com/qutip/qutip/pull/2214,1,['down'],['down']
Availability,**Description**; I added the option to specify `rtol` in the tests. The default value is the same as for `numpy.testing.all_close` which was being used 'silently' (tests for the exponential pretty much ignored the absolute tolerance specified by us). I also made the tests more consistent. Now the assertion for scalar outputs also use `rtol` in the same way `numpy.testing.all_close` does. . **Related issues or PRs**; This is useful for qutip/qutip-tensorflow#34 where I plan to add support for complex64. **Changelog**; Aded rtol for specialisation tests.; Changed comparison of scalars to be consistent with `numpy.testing.all_close`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1709:223,toler,tolerance,223,https://qutip.org,https://github.com/qutip/qutip/pull/1709,1,['toler'],['tolerance']
Availability,"**Description**; I have added support for list input for the unit conversion functions. . **Related issues or PRs**; I was passing a python list of values to convert from one unit to another but got the following error:; `TypeError: can't multiply sequence by non-int of type 'float'`; As the documentation says it accepts an array, I think a list should be supported. **Changelog**; If the input is a python list, it will be converted to a numpy array. Because numpy array supports multiplying by a float, Python list doesn't.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1845:213,error,error,213,https://qutip.org,https://github.com/qutip/qutip/pull/1845,1,['error'],['error']
Availability,**Description**; Improved efficiency of the hadamard gate creation time as it was using python for loops which are terribly slow. For N=10 it goes down from 522ms to roughly 7ms. **Changelog**; Improved hadamard_transform efficiency (70x faster for N=10).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1688:147,down,down,147,https://qutip.org,https://github.com/qutip/qutip/pull/1688,1,['down'],['down']
Availability,"**Description**; In #2120, `countstat` was updated to use `data.solve`.; `countstat` would sometime try to solve a system with singular matrix and has a fallback for it using `try: ... except:`; However, while numpy raises an error when the matrix is singular, `scipy.sparse` raises a warnings, thus the tests only pass because we use the warnings as error flags... Without it, the singular matrix would not be caught and the solution from `countstat` would contain a `NaN` and the tests would fail... - Redirect the warning from scipy sparse and numpy's `LinAlgError` to a `ValueError`to allow easy catching of these case.; - Add the small `1e-15` in `countstat` with `auto_tidyup` turned off.; - Add support for the method `lstsq` and `solve` for `data.solve_csr`. These methods are supported by numpy, jax, tensorflow, scipy.sparse is the exception which use `spsolve` and `lsqr` instead, probably to avoid name collision the the dense version they also have.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2144:226,error,error,226,https://qutip.org,https://github.com/qutip/qutip/pull/2144,2,['error'],['error']
Availability,"**Description**; In cython code, signals (Keyboard Interrupt) are not automatically checked.; And when checked, if error are not properly passed (`expect *`) the signal can be last. This happened in the Runge Kutta integrator, which did not properly passed errors and only when back to python space at time in `tlist` which can be far apart. The stochastic solver stop on (Keyboard Interrupt), the `except` are not needed since the output is a class. I made it explicit for clarity. Doing a few tests, I saw that the error was often caught in the `Qobj.data` property called by `QobjEvo.matmul`. This means more back and forth between python and cython was done than needed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2169:115,error,error,115,https://qutip.org,https://github.com/qutip/qutip/pull/2169,3,['error'],"['error', 'errors']"
Availability,"**Description**; Increase the tolerance of tests that could randomly fail. `testFloquetBasis` would fail 1/2000 of the time. The error has a std of 1.2e-5 , but does not follow a gaussian distribution. Fat tails made 4 std not enough. `test_rand_super` failed once recently in #2919 ( I reran the test). I can't reproduce the failure locally, but it is ran a few hundred of times in each actions, so even a small probability of failure will eventually happen.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2337:30,toler,tolerance,30,https://qutip.org,https://github.com/qutip/qutip/pull/2337,4,"['error', 'failure', 'toler']","['error', 'failure', 'tolerance']"
Availability,**Description**; Installing `dev.major` is raising warnings because of errors in MANIFEST.in:; ```; ...; reading manifest file 'qutip.egg-info/SOURCES.txt'; reading manifest template 'MANIFEST.in'; warning: no files found matching 'qutip.bib' <=====; warning: no files found matching '*.qasm' under directory 'qutip/tests/qasm_files' <=====; adding license file 'LICENSE.txt'; writing manifest file 'qutip.egg-info/SOURCES.txt'; running build_ext; ...; ```; qutip.bib was renamed to CITATION.bib in #1662 ; qasm files were removed in #1890 and are now only included with qutip-qip. **Changelog**; Update MANIFEST.in to reflect changes in #1662 and #1890,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1926:71,error,errors,71,https://qutip.org,https://github.com/qutip/qutip/pull/1926,1,['error'],['errors']
Availability,"**Description**; Looking at the [historical benchmarks](https://qutip.org/qutip-benchmark/ops/matmul.html), Qobj operations got slower last November, which correspond to when we merged the dimensions PR. This PR is to improve those graph. Usually, when a lot of matrix operations are done, we use the data layer object directly. So the overhead of the Qobj should not be that critical. Adding QobjEvo support to `isbra`, `isket`, etc, slowed them down quite a lot. The import of QobjEvo in the function can easily be slower than the matrix operation. (0.7us for the import which is the same as a 32x32 CSR@ket product.) This is the biggest culprit in the jump in the matmul benchmark graph. I added properties for each `is_type_` to Qobj and QobjEvo. The `Qobj` and `QobjEvo`'s `issuper` where not the same. `QobjEvo` would return `True` for oper-ket, not just super operator, while `Qobj.issuper` would be `True` only for super operator. `QobjEvo` now match `Qobj`. I also changed the check to tell if `Qobj.__matmul__` return a number or Qobj. It is now done looking at the output dimensions. Now that type cannot be overwritten, it is the same check. (Before a `[[1], [1]]` could be a bra, ket, oper, etc., now it's a scalar which return True to isbra, isket and isoper.). For `Qobj.__add__` I could speed it up by doing the Qobj check first. But the extra overhead of `Qobj.__init__` is still there. That said, the graph don't look as bad as the matmul ones and it's probably enough.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2295:447,down,down,447,https://qutip.org,https://github.com/qutip/qutip/pull/2295,1,['down'],['down']
Availability,"**Description**; Measurement functions did not take into account degenerate states of the operator. (#1800, #2054); Also the returned probabilities could be negative. (#2265). I added a tolerance to these function for the minimal probability. Smaller / negative probabilities are rounded to `0`.; I also changed `measurement_statistics_observable` to support degenerate operators: It always return the projectors, with projectors and probabilities of degenerate sub-systems summed. It also only return the (eigenvalues, projector, probability) set for cases where the probability is greater than `tol`. **Related issues or PRs**; fix #1800, #2054, #2029, #2265",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2342:186,toler,tolerance,186,https://qutip.org,https://github.com/qutip/qutip/pull/2342,1,['toler'],['tolerance']
Availability,"**Description**; Modified the function `_gate_FREDKIN` in `qutip/qutip/qip/circuit.py`. As reported in [issue #1330](https://github.com/qutip/qutip/issues/1330), there was a bug when unrolling Fredkin gate into basis gates. This bug derives from the use of a list with length >1 when making a new single-qubit gate in the function `_gate_FREDKIN`.; In this PR, I fixed this problem by manually unrolling this part.; For the details and the correctness verification, please refer to the attached pdf: [issue_1330.pdf](https://github.com/qutip/qutip/files/6272589/issue_1330.pdf). Thank you very much!. **Related issues or PRs**; Fixed the bug reported at [issue #1330](https://github.com/qutip/qutip/issues/1330). **Changelog**; Fixed errors in _gate_FREDKIN function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1489:734,error,errors,734,https://qutip.org,https://github.com/qutip/qutip/pull/1489,1,['error'],['errors']
Availability,"**Description**; On mac, with OpenBlas, `eigh` can cause segmentation fault, see #1197. For 4.5.1, we simply skipped the tests causing problems ( #1257). This replace the calls of `numpy.linalg.eigh` to `numpy.linalg.eig`, and lapack calls of `ZHEEVR` to `ZGEEV` when at risk of segfault. This will result in slower `Qobj.eigenstates` and `brmesolve`. . Tests where adapted, the issues were the phase of the eigenvectors and the lower numerical precision of `eig`. While the flag to use `eig` instead of `eigh` is `qutip.settings.eigh_unsafe`, it must be set before importing `qutip.sparse` to have any effect. Thus it is not a true settings, (like `has_openmp`). **Changelog**; Replace calls of `eigh` to `eig` when at risk of segfault.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1288:70,fault,fault,70,https://qutip.org,https://github.com/qutip/qutip/pull/1288,1,['fault'],['fault']
Availability,"**Description**; Previously, if you specified a target tolerance when using `mcsolve`, the result's `end_condition` would show ""target tolerance reached"" regardless of whether this was true. I added a line to check this and set `end_condition` to ""ntraj reached"" when appropriate.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2382:55,toler,tolerance,55,https://qutip.org,https://github.com/qutip/qutip/pull/2382,2,['toler'],['tolerance']
Availability,**Description**; Raise an error instead of silently ignoring the offset when attempting to generate coherent states or density matrices with method 'operator' and non-zero offset. **Related issues or PRs**; * Small fix post #1469. **Changelog**; Fix silent ignoring of offset in coherent and coherent_dm when offset is non-zero. A ValueError is now raised instead.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1741:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/pull/1741,1,['error'],['error']
Availability,**Description**; Re-enable test errors on ImportWarnings. These were disabled in QuTiP 4 because it used pyximport. QuTiP 5 no longer uses pyximport. **Related issues or PRs**; - None,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2083:32,error,errors,32,https://qutip.org,https://github.com/qutip/qutip/pull/2083,1,['error'],['errors']
Availability,**Description**; Refactor Qutip.Qip.Circuit.solve_gates as a dispatch-like method for assigning different functions and make the QubitCircuit module more commutable.; These changes make it easier for maintenance and provide a clearer workflow. **Changelog**; Refactor Qutip.Qip.Circuit.solve_gates,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1226:200,mainten,maintenance,200,https://qutip.org,https://github.com/qutip/qutip/pull/1226,1,['mainten'],['maintenance']
Availability,"**Description**; Remove Bloch 3D, it's redundant to Bloch but without new features added in recent years.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2306:39,redundant,redundant,39,https://qutip.org,https://github.com/qutip/qutip/pull/2306,1,['redundant'],['redundant']
Availability,"**Description**; Remove the QIP submodule that has been migrated to `qutip/qutip-qip`. Most files were simply deleted, but there are a few non trivial parts:; - The gates used in tests were added to operators.py, all others were removed. The signature was changed: the `target` parameter was removed and `dtype` keywords added to match other operators. This means that there will be two version of `cnot` etc. available. . - `qutip.enntropy.entangling_power` was also removed. While it was not strictly in the qip module, it is meant to be used for 2 qubits gates, so it felt more natural to be included there. - The target qubits options for measurement was removed. qip has it's own more specialized `Measurement` class, which I guess is the reference for such case. But we could make it stronger so that it can target various kind of subsystems, such as one site on a lattice or one of harmonic oscillator coupled to others, etc. Bonus: The `-Werror` for pytest was restored. **Related issues or PRs**; Checklist item in #1850. **Changelog**; Remove the qip submodule.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890:410,avail,available,410,https://qutip.org,https://github.com/qutip/qutip/pull/1890,1,['avail'],['available']
Availability,"**Description**; Remove the function `MCResult.expect_traj_avg`. It was added to replace list input to mcsolve `ntraj` argument, but as discussed in qutip/qutip-tutorials#58, it was not a useful implementation of the feature. Also improved the warning message in floquet's backward compatibility functions to include the new way and changed warning to error for any functions that would not work as a drop-in replacement.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2068:352,error,error,352,https://qutip.org,https://github.com/qutip/qutip/pull/2068,1,['error'],['error']
Availability,**Description**; Removed excess verbiage and unrecognizable figure. Corrected a grammatical error. **Related issues or PRs**; No related issues. **Changelog**; Wordsmithing and cleanup.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1757:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/pull/1757,1,['error'],['error']
Availability,"**Description**; Restore the feedback capacities of the solver.; In v4, this was done by using special names for the `args`, but this was confusing. . For v5, I propose to do it using a `add_feedback` method of the solver:; ```; H = QobjEvo([op, lambda t, ket: bra @ ket]); solver = SESolver(H); solver.add_feedback(""ket"", ""qobj""); solver.run(...); ```; With this, `args[""ket""]` will be updated with the state during the evolution. Most solver support it, the exception are floquet, nm_mcsolve. ; HEOM support it, but the state will be seen as a single ket.; @hodgestar , is that fine?. Available form are as `Qobj`, as `Data`, `expect(oper, data)`.; `mcsolve` also has the collapse and `stochastic` the wiener process.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210:587,Avail,Available,587,https://qutip.org,https://github.com/qutip/qutip/pull/2210,1,['Avail'],['Available']
Availability,"**Description**; Rewrite `mcsolve` as a class for dev.major. Main addition:; - `MultitrajSolver` class as a base class for solver computing trajectory from a seed: it uses custom ; - It uses custom integrator using a generator which `MultitrajSolver` provide. ; - Stepping run one trajectory at a time.; - Use numpy.random new interface with `SeedSequence` and `Generator`.; - `run` can end on number of trajectories reached, timeout reached, or error bars on expectation values under a certain tolerance.; - `McSolver` class for mcsolve class interface.; - Support closed and open system. For open systems. `H` must be a Liouvillian. The `c_ops` are computed stochasticly and are used for collapse. Dissipation terms to be used in a deterministic way can be added as Lindblad dissipators to the liouvillian.; - McSolver's results include the photocurrent.; - McSolver need a layer between the solver interface and the integrator. In #1710, this was a trajectory solver, but here I use a pseudo integrator. This makes `MultitrajSolver` easier to use with stochastic which need custom integrator and thus a trajectory solver did very little. Other fixes:; - `MultiTrajResult` keep the `dtype` of expect.; - `MultiTrajResult` can merge instance with no states stored. **Related issues or PRs**; Replace #1710",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1972:446,error,error,446,https://qutip.org,https://github.com/qutip/qutip/pull/1972,2,"['error', 'toler']","['error', 'tolerance']"
Availability,"**Description**; Rewrite `mcsolve` using class as was done for `sesolve` and `mesolve` in #1700. This add new capacities to `mcsolve`:; - `measurement` and `photocurrent` are added to result making the `photocurrent_..solve` function redundant.; - The `H` input can be a super operator, allowing to do evolution with some collapse operator being treated democratically and some with discrete jumps (as was done in `photocurrent_mesolve`.; - Result are compiled at the end of each trajectories. Previously the result of each trajectories would be stored until the end of the map function, even if only the average are desired, making it quite memory inefficient, see #1667.; - New end condition are added. `mcsolve` can run for a desired number of trajectories, a desired time or the expectation values have converged within a desired tolerance (computed using jackknife re-sampling). ; - Stepping capacities have been added. However, collapse are not available this way, so it's still open to improvement. Other changes include reworking `MultitrajResults`, it was added in a previous PR but was not used. Also the 2 versions: trajectories stored or averaged are merged. **Related issues or PRs**; Follow up to #1700 . **Changelog**; Rewrite mcsolve with a class approach.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1710:234,redundant,redundant,234,https://qutip.org,https://github.com/qutip/qutip/pull/1710,3,"['avail', 'redundant', 'toler']","['available', 'redundant', 'tolerance']"
Availability,"**Description**; Set `operator-ket`'s `superrep` to `'super'`.; `operator-ket` are the states of super operators, ie. `super @ operator-ket` make sense but `oper @ operator-ket` does not. So it is natural that they have an attached `superrep`. This will make `choi_super @ operator-ket` error unless care is taken in making the `superrep` match. TODO? Have `to_choi`, etc. work for operator-kets?; closes #1586",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1590:287,error,error,287,https://qutip.org,https://github.com/qutip/qutip/pull/1590,1,['error'],['error']
Availability,"**Description**; Since merging #2497, mkl tests on windows fails from segfault.; I am not sure of the source of the error:; Since the library was not found before the PR, the bug can have been there for a long time, but the tests passed in #2497.; Just settings mkl to verbose is enough for the tests to passes... I don't think relying on the verbose options is a good idea so I made it unable to find mkl on windows for this PR. We will need to find a more reliable way to use it, `ctypes` does not look at the header file so it guess the types from our call. Maybe some version of mkl are 32 bit and other 64 bit and we are not adapting. [pydiso](https://github.com/simpeg/pydiso) looks promising.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2529:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/pull/2529,2,"['error', 'reliab']","['error', 'reliable']"
Availability,"**Description**; Since yesterday, our tests hangs for both `master` and `dev.major` and never finish. It seen only a few tests are affected.; I am adding a timeout so the tests that hangs result in a localized error.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1787:210,error,error,210,https://qutip.org,https://github.com/qutip/qutip/pull/1787,1,['error'],['error']
Availability,"**Description**; Speed up and simplify `state_number_enumerate`, `state_number_index`, `state_index_number`, `state_number_qobj`, and `enr_state_dictionaries`. I've changed quite a few functions in states.py, but all the changes are small. It seemed easier to combine this into a single pull request instead of splitting it up into many smaller ones (but this could be done). The changes in more detail:; - `state_number_enumerate` and `state_index_number` now always return tuples. Before, `state_number_enumerate` returned arrays for `excitations is None` and tuples otherwise, and `state_index_number` returned a list. For `excitations is None`, I realized that a simple call to `itertools.product` is enough, and is about 20x faster for a (relatively big) test case. It would be trivial to keep returning arrays instead of tuples here as before, but this slows the code down (quite significantly, in fact) and, in any case, returning arrays or tuples depending on whether `excitations` is set seems like an inconsistent interface, so I decided to make it consistent (and faster). I checked that the uses in the code base should not be affected. The algorithm used when the number of excitations is restricted is a slightly more elegant version of the one from my previous pull request (#1594), and is faster by another factor of 5 or more for the ""big"" test cases I looked at. ~~It is still recursive, but quite fast, and I did not find an elegant non-recursive algorithm.~~ I came up with an even faster non-recursive algorithm after all. It's arguably a bit less elegant, but I think still readable, and another 50% or so faster than the previous one (see the second commit below).; - `enr_state_dictionaries` now returns a dictionary and a list instead of two dictionaries. Before, `idx2state` was a dictionary with integer keys from 0 to nstates-1, which behaves essentially like a list. However, before Python 3.7, iteration order was not guaranteed to be insertion order (i.e., iterating ove",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1604:874,down,down,874,https://qutip.org,https://github.com/qutip/qutip/pull/1604,1,['down'],['down']
Availability,"**Description**; Tests are using numpy's svd but the dispatched function is using scipy's svd.; They use different algorithms and can give different result causing error in the tests. With this PR, scipy is used in test also.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2239:164,error,error,164,https://qutip.org,https://github.com/qutip/qutip/pull/2239,1,['error'],['error']
Availability,**Description**; Tests in `simdiag` sometime fail with one or two values over the tolerance. This cause automated tests to fail for reason unrelated to the PR. This add the flaky mark to rerun these and increase some tolerances.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2067:82,toler,tolerance,82,https://qutip.org,https://github.com/qutip/qutip/pull/2067,2,['toler'],"['tolerance', 'tolerances']"
Availability,"**Description**; The OpenQASM 2.0 standard is described [here](https://github.com/Qiskit/openqasm/blob/master/spec/qasm2.rst). ; The purpose of this PR is to create a full implementation of a OpenQASM parser that reads ; a .qasm circuit into a QubitCircuit. This function lives in qutip/qip/qasm.py. There are a number of ; internal functions that enable this conversion but the only api-exposed function is supposed to be ; `read_qasm` which takes in a .qasm file and returns a fully-formed QubitCircuit object. Currently, the heft of the work is done with processing user-defined gates and adding them to the circuit (as well as measurements, but they need to have #1274 on measurements merged before I can enable that functionality). I still need to add features pertaining to initialization of qubits as well as classical control. . **Related issues or PRs**; There was a related PR #1140 which purportedly worked with OpenQASM 1.0 but this one deviates from it largely while adding additional features as well as the ability to process user-defined gates and a comparatively robust parser. ; **Changelog**; Added read_qasm function to read .qasm files into QubitCircuit",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291:1080,robust,robust,1080,https://qutip.org,https://github.com/qutip/qutip/pull/1291,1,['robust'],['robust']
Availability,"**Description**; The `auto-tidyup` step is moved from `Qobj` to `CSR` operations as discussed in #1610.; Most methods which supported `auto-tidyup` still do, with the exceptions of does based on scalar product.; `__matmul__` and `__add__` already had a `if value != 0` check which was changed to support a tolerance.; This new conditions affect both the real and imaginary part together:; Previously : `[1+1e-15j, 1e-15+1e-15j]` -> `[1+0j, 0]`; Now : `[1+1e-15j, 1e-15+1e-15j]` -> `[1+1e-15j, 0]`; This can be changed if desired. `expm_csr` was the only function that is not covered by these changes. ; I added a `tidyup` keyword to `CSR.__init__` for it instead of using a decorator.; It could be dropped if we judge `tidyup` is not needed for `expm`. **Related issues or PRs**; #1610 . **Changelog**; Move auto-tidyup from Qobj to CSR function",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1615:306,toler,tolerance,306,https://qutip.org,https://github.com/qutip/qutip/pull/1615,1,['toler'],['tolerance']
Availability,"**Description**; The `purity` method in `qobj` is supposed to give purity no more than 1. However, at the moment, it can give values greater than 1 as well because it does not verify if `Qobj` is a valid quantum state. Minimal code to reproduce the error would be: . ```; not_dm = Qobj(np.random.rand(5,5)); not_dm.purity(); ```; To solve this, I have modified `purity()` primarily by adding `check_isdensity()` (with accompanying test method in `tests`) . **Changelog** ; Added density matrix check for purity calculation",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232:249,error,error,249,https://qutip.org,https://github.com/qutip/qutip/pull/1232,1,['error'],['error']
Availability,"**Description**; The check that the initial state was already normalised for normalising output would branch over values, which breaks `jax.jit` support... Moved the option check first. Also changed the `isoper` check to filter out rectangular operator.; Rectangular state in solver are tolerated, but we don't have tests for it. I did not add any here, but we should . **Related issues or PRs**; qutip/qutip-jax#49 qutip/qutip-tutorials#100",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2448:287,toler,tolerated,287,https://qutip.org,https://github.com/qutip/qutip/pull/2448,1,['toler'],['tolerated']
Availability,"**Description**; The error for too large minimum step was not raised.; The error therefore came later in scipy code and was hard to understand. ; Found from https://groups.google.com/g/qutip/c/NUcKnAwpx30/m/7IKDqbNOAgA; Fix the error and add a test for it. Also added some sanity check on `min_step` and `max_step`, which could create infinite loop if `min_step = 0` or `min_step > max_step`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2402:21,error,error,21,https://qutip.org,https://github.com/qutip/qutip/pull/2402,3,['error'],['error']
Availability,**Description**; The function mesolve was not including the complex part of the expectation value when the initial state was a not Hermitian. This led to an error in `correlation_2op_1t()` which uses an initial state that is not Hermitian to compute the correlation.; I also fixed an error in the documentation where `tlist` was referenced instead of `taulist` (`tlist` is not an argument in `correlation_2op_1t()`) and included a test for `correlation_2op_1t()`. **Related issues or PRs**; Fix #1460. **Changelog**; Fixed error where complex expectation value for non Hermitian initial state was not being included in results when using mesolve.; Fix doxumentation error in `correlation_2op_1t()`.; Added test for `correlation_2op_1t()`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478:157,error,error,157,https://qutip.org,https://github.com/qutip/qutip/pull/1478,4,['error'],['error']
Availability,**Description**; The import statement was added to import the partial_transpose function directly from the qutip module. This was done to fix the TypeError: 'module' object is not callable error. Added a condition that check if the input rho is a ket (a type of quantum state) and it also ensures that the negativity function can handle both kets and density operators as input. Fix #2345,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2371:189,error,error,189,https://qutip.org,https://github.com/qutip/qutip/pull/2371,1,['error'],['error']
Availability,"**Description**; The mkl finding was sometime missing the library even when available.; Sometime the library can has a version number in the file name:; `libmkl_rt.so.2`, `mkl_rt.2.dll`, with or without a symbolic link to the version less name.; Also it ouly look for it if it's found in numpy's config, but the module mkl is available an could be installed even if numpy does not link to it. Our use using ctypes does not require numpy to be using it to work. So I changed the lookup function to look for the library without checking is numpy uses it. I also added a new setting, `settings.mkl_lib_location`, which is not read only and allow users to enter the path to their mkl implementation. We only look inside the python library path, this would allow to use libraries installed at the OS level. Also fixed a bug in mkl spsolve with scipy 1.14 that was missed since mkl tests were skipped. **Related issues or PRs**; fix #2496",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2497:76,avail,available,76,https://qutip.org,https://github.com/qutip/qutip/pull/2497,2,['avail'],['available']
Availability,"**Description**; The nonmarkov transfer tensor method (TTM) fails in an example notebook (see below). I tracked down the error to the *ttmsolve* method, where None is used to fill an array. I replaced None with an empty Qobj to fix the bug occuring from adding a Qobj and None. **Related issues or PRs**; The related issue is in the qutip-notebooks repo: https://github.com/qutip/qutip-notebooks/issues/122. **Changelog**; Replace placeholder in ttmsolve with empty Qobj",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1843:112,down,down,112,https://qutip.org,https://github.com/qutip/qutip/pull/1843,2,"['down', 'error']","['down', 'error']"
Availability,"**Description**; The orbital function had some errors in it. Here, I replaced the manual calculation of the spherical harmonics, with the implementation provided by SciPy. Additionally, I provide some tests to the function. **Related issues or PRs**; fixes #1839 . **Changelog**; Fixed errors in orbital functions",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1844:47,error,errors,47,https://qutip.org,https://github.com/qutip/qutip/pull/1844,2,['error'],['errors']
Availability,"**Description**; The test `test_random_iscptp` would sometime randomly fail.; This increase the tolerance of the test, lowering the fail rate from 0.35% to less than 1 in 10000 tries.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2147:96,toler,tolerance,96,https://qutip.org,https://github.com/qutip/qutip/pull/2147,1,['toler'],['tolerance']
Availability,**Description**; The test for the new method `run_from_experiment` has a time step too long for the euler method. This would cause fail once a few hundreds time as in https://github.com/qutip/qutip/actions/runs/8979789558/job/24662362047.; Reducing the system size with smaller steps makes the test more consistent (no failure in 20000 tries.). Also reduced `test_feedback` step size to improve that test consistency.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2419:319,failure,failure,319,https://qutip.org,https://github.com/qutip/qutip/pull/2419,1,['failure'],['failure']
Availability,**Description**; The towncrier check was failing when installing the module since we used the OS python and which is not managed by pip:; ```; python -m pip install towncrier; error: externally-managed-environment; ```,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2542:176,error,error,176,https://qutip.org,https://github.com/qutip/qutip/pull/2542,1,['error'],['error']
Availability,"**Description**; There are presently 8 variations of `CQobjEvo`. There are `Cte` and `Td` variants, Dense and csr sparse and serial vs openmp versions. Adding a feature, (ex. AHS support) result in the need to modify all of them and QobjEvoFunc and AHS PRs will add new one. So as a first step, I am merging them the ones presently available.; Cte (no coefficient) are now limit case of Td (time-dependant). omp ones have been removed in favor of a `spmvpy` variant that switch between the serial and omp version at compilation. . Also reworked the compilation of `QobjEvo`:; - Simpler with only 3 variants instead of 8.; - Compilation of the coefficient and object are separated. (`H *= -1j` does not force recompiling the coefficients.); - But have the side effect of making temp file cleanup harder. File are erased at python close instead of object deletion.; - Moved the location of temp file to ~/.qutip/temp for now, but does this work on windows?; - Auto-cleanup on importing qutip, for files older than 7 days for now. But should be set by user, the temp file location also. Other to-do:; Dense versions of CQobjEvo could be more optimized and is not parallel. One option would be to use blas and hope the user's blas is parallel. (probably other PR). ps. Running tests for now. Do not merge.; **Changelog**; Cleaned CObjEvo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1231:332,avail,available,332,https://qutip.org,https://github.com/qutip/qutip/pull/1231,1,['avail'],['available']
Availability,**Description**; There was a logic error in the matmul's `out` shape check making the check too lenient.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2349:35,error,error,35,https://qutip.org,https://github.com/qutip/qutip/pull/2349,1,['error'],['error']
Availability,**Description**; There was an error in line 613 of qutip/stochastic.py as the measurement operators for heterodyne detection in the implemented stochastic master equation should be `c + c.dag()` and `1j (c - c.dag())` as explicitely presented in equation (5.64) and the following 2 paragraphs in https://arxiv.org/abs/1710.09523. The same measurement operators can also be drawn from equation (4.108) of Milburn & Wiseman _Quantum Measurement and Control_. **Changelog**; Fixed error in m_ops definition for heterodyne detection in smesolve.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1237:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/pull/1237,2,['error'],['error']
Availability,"**Description**; This PR attempts to solve the error in the `ffmpeg` command from the user guide. Specifically, the bitrate parameter (-b) is applied to the output file `bloch.mp4`. Additionally, a one line change to use `Bloch` from `qutip` has been made which otherwise returns an error. Thanks!. **Related issues or PRs**; Fix #799 . **Changelog**; Fixed error in the `ffmpeg` command from the user guide.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1557:47,error,error,47,https://qutip.org,https://github.com/qutip/qutip/pull/1557,3,['error'],['error']
Availability,"**Description**; This add documentation of the new BoFiN-based HEOM solver added in #1601. **Todo**; - [x] Rework the documentation structure.; - [x] Update the introduction; - [x] Update the bosonic example; - [x] Update the fermionic example; - [x] Add a short history of the HEOM implementation; - [x] Mention that the old HEOM implementation is available as `dl_heom`; - [x] Add a link to the HEOM notebooks.; - [x] Update `.run(..., ado_init=True)` to accept an instance of `HierarchyADOsState` since this is what `.run(..., ado_return=True)` returns. Add tests for `ado_init=True`. **Related PRs**; - #1601; - #1726. **Changelog**; Add and rework the HEOM documentation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1724:349,avail,available,349,https://qutip.org,https://github.com/qutip/qutip/pull/1724,1,['avail'],['available']
Availability,"**Description**; This adds a few more tests to the specialisations. I also found a Bug in expm and changed `TypeError` to `ValueError`. - Expm: ; - Added tests for its specialisations.; - There was a _bug_ in expm where if the matrix was csr and diagonal, zero values where not being exponentiated as they did not appear in scipy's data attribute. This case is now handled properly with the same scaling in resources (O(N) where N is the non-cero diagonal elements in the matrix).; - Incorrect shape now raises ValueError.; ; - UnaryOpMixin: ; - It did not check for bad shapes. It now does have a function that checks for them (this avoids code duplication in `trace`, `expm` and some others). ; - As a result of this change a hidden bug emerged: even though `TestProject` had a non-empty `bad_shapes` attribute, it was not doing anything as `UnaryOpMixin` did not generate tests for bad shapes. It now does. - Project:; - Changed `TypeError` to `ValueError`.; - Removed redundant `TestProject`. - Pow:; - Added the case where `n=0` as it is a special case. **Changelog**; `project` specialisations now return `ValueError` when matrix has not valid shapes.; Removed redundant `TestProject`.; Added special test case for Pow (n=0).; `UnaryOpMixin` now has test_incorrect_shapes (by default it does not have any bad shapes); Added tests for `expm` specialisations.; Fixed bug where diagonal `CSR` matrix was not exponentiating zero values in the diagonal.; `expm` specialisations now raises `ValueError` when matrix is not square. _Edit: Added ""Removed redundant `TestProject`""_; _Edit2: Added changelog_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1630:972,redundant,redundant,972,https://qutip.org,https://github.com/qutip/qutip/pull/1630,3,['redundant'],['redundant']
Availability,"**Description**; This change solver's options to be per solver. Thus mcsolve specific options are not included in options passed to sesolve etc.; It also simplify the options class which is now closer to a `dict` than to a `dataclass`. `SovlerOptions` take a new optional parameter `solver` to know which options to support. By passing it, it will fill the instance with the defaults and update the doc string. Passing an options not supported by the solver will raise an error. When not used, any options items will be accepted. ```; >>> SolverOptions(atol=1e-5, store_ados=True); SolverOptions(solver='', atol=1e-05, store_ados=True). >>> SolverOptions('sesolve', atol=1e-5, store_ados=True); KeyError: ""'store_ados' is not a supported options."". >>> SolverOptions('heomsolver', atol=1e-5, store_ados=True); SolverOptions(solver=heomsolver, atol=1e-05, store_ados=True); ```. `SolverOptions` can be used as `dict`, but most methods only use provided keys:; ```; >>> {**SolverOptions('sesolve', atol=1, rtol=2)}; {'atol': 1, 'rtol': 2}; ```; `store_states` etc. are not in `opt.keys()`.; The exceptions are `in` and `__getitem__` which knows of the default values:; ```; >>> opt = SolverOptions('sesolve', atol=1, rtol=2); >>> ""store_states"" in opt; True; >>> print(opt[""store_states""]); None; ```. `print` create a human readable list of options, including default:; ```; >>> print(SovlerOptions(""sesolve"", atol=1e-5, store_states=True)). Options for sesolve:; progress_bar : 'text' (default); progress_kwargs : {'chunk_size': 10} (default); store_final_state : False (default); store_states : True ; normalize_output : True (default); method : 'adams' (default); Options for adams integrator:; atol : 1e-05 ; rtol : 1e-06 (default); nsteps : 2500 (default); order : 12 (default); first_step : 0 (default); max_step : 0 (default); min_step : 0 (default); ```. Some integrators options will change depending on the method:; ```; >>> ""order"" in SovlerOptions(""sesolve"", method=""adams""); True; >>> ""ord",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1947:472,error,error,472,https://qutip.org,https://github.com/qutip/qutip/pull/1947,1,['error'],['error']
Availability,"**Description**; Update HEOM for v5. Other changes:; - This resulted in a bit of a refactor of the Result class (#1907); - I found a few places where QobjEvo did not correctly set `.type` and fixed those (they were breaking the HEOM tests). Todos and questions:; - [X] Should HierarchyADOsState store ado_state as a Data object rather than a numpy array? (it can't be stored as a Data object because the ADOs have shape `n_ado, n, n` and the Data layer only supports 2-d arrays).; - [X] How should the ado_state be stored on a results object? In particular, how should the change in e_ops signature be handled (for the HEOM solver the e_ops callables also take the full ADO state). (implemented); - [X] What should be done with the steady_state method? I guess it can just stay. Should other solvers also have this? (it should just stay, I think); - [x] Recheck the time-dependent case. (I also simplified the time-dependent case so that the Liouvillian is never added and so doesn't have to be subtracted off).; - [X] The HEOM can't really take new QObjEvo arguments each time `run` is called because calculating the RHS again is quite expensive. Maybe something can be done? (implemented -- passing new args to .run is now supported); - [X] In the base solver the new options seem to be set after retrieving the integrator -- is this right? (fixed); - [X] Compare performance to the HEOM in 4.7. (looks faster, yay!); - [X] We could also implement `.start()` and `.step()` for the HEOMSolver. Not quite sure of the use case yet though. (implemented and tested -- the implementation came for free after sorting out having .run inherit from the base solver).; - [x] Add some direct tests for the QobjEvo type errors that have been fixed.; - [x] Moved solver into `qutip.solver.heom`. . **Related issues or PRs**; - One of the todos from #1850; - In #1907 the Result class was changed largely to support extension by the HEOMSolver. **Changelog**; Update HEOM for v5.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869:1709,error,errors,1709,https://qutip.org,https://github.com/qutip/qutip/pull/1869,1,['error'],['errors']
Availability,"**Description**; Update tests in `test_steadystate` to use pytest.; Improve coverage by adding tests for previously untested method and options and tests for raised errors. It will not reach full coverage: no tests use `debug=True`, `pinv2` is deprecated on `scipy` side, some checks are redundant, etc. Some work on `steadystate.py` will be needed, but this is for another time, possibly for dev.major. **Changelog**; Update steadystates tests to pytest for better coverage.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1679:165,error,errors,165,https://qutip.org,https://github.com/qutip/qutip/pull/1679,2,"['error', 'redundant']","['errors', 'redundant']"
Availability,**Description**; Update the guide for setting to list options still available in v5 and add an example with the using newly added context.; Removed the `auto_herm` options which was removed with `Qobj.isherm` being a property.; `auto_tidyup_dims` is not used anywhere but I left if since it could be useful with the dimensions class.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2025:68,avail,available,68,https://qutip.org,https://github.com/qutip/qutip/pull/2025,1,['avail'],['available']
Availability,"**Description**; Upgrade from 4.5.1 to 4.5.2.; Include cherry picked commit from the following PR:. #1307 Fix zcsr_proj for bras with unsorted indices; #1306 Fix quadratic complexity in zcsr_inner; #1302 Enforce a CI test with scipy<1.5; #1301 Fix brtools zheevr test; #1298 Support scipy >= 1.5 in fast_csr_matrix matmul and legacy.ptrace; #1283 Milstein's heterodyne index fix; #1271 Remove duplicate line in setup.py; #1264 Remove incorrect use of 'is' in comparisons. Code from #1288 was added manually to evade conflict and related test were reinstalled. (removed in 4.5.1, not in master). #1269 and #1242 are not included since they depend on #1209 which is more that a bugfix and is not in 4.5.0. **Changelog**; Bug Fixes; -------; - `zcsr_proj` does not fail with unsorted indices (by **Jake Lishman**); - Fixed Milstein's heterodyne errors (by **Eric Giguère**); - Removed risky code (by **Jake Lishman**); <!-- - Fix `add_circuit` and `remove_gate` (by **Canoming**) -->. Improvements; -------; - Faster `zcsr_inner` (by **Jake Lishman**); - Support for Scipy 1.5 (by **Jake Lishman**)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1310:842,error,errors,842,https://qutip.org,https://github.com/qutip/qutip/pull/1310,1,['error'],['errors']
Availability,"**Description**; We have warnings for actions using deprecated node.js version, such as:; ```; Node.js 16 actions are deprecated. Please update the following actions to use Node.js 20: actions/download-artifact@v3, actions/setup-python@v4. For more information see: https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/.; ```; Updating the tools from v3 to v4 should fix the issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2430:193,down,download-artifact,193,https://qutip.org,https://github.com/qutip/qutip/pull/2430,1,['down'],['download-artifact']
Availability,"**Description**; We use `imatmul_data_dense` for cython only, in-place `matmul` operation since the dispatcher can't handle in-place operation but they can't have nice impact on performance.; `imatmul_data_dense` had a bug that when data is not `Dense` or `CSR` it would use a wrong specialization of `matmul` and raise an error. . It work fine with all data layer in qutip/qutip so we can test it here, but some tests fails in qutip-jax (qutip/qutip-jax#14) because of it. **Related issues or PRs**; Blocking qutip/qutip-jax#14",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2137:323,error,error,323,https://qutip.org,https://github.com/qutip/qutip/pull/2137,1,['error'],['error']
Availability,"**Description**; When building the documentation for the action (on locally on my side), we install with `pip`, however with readthedocs, we use manba. Some packages versions are not available on conda-forge, just pypi, causing the rtd build to fall with #2526...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2527:183,avail,available,183,https://qutip.org,https://github.com/qutip/qutip/pull/2527,1,['avail'],['available']
Availability,"**Description**; When we can't allocate enough memory for a matrix, there was no error message.; For sparse array, were the users expect the it not to take that much space, this can be confusing.; I added error message which tell the shape of the matrix and number of elements. It won't help much, but may show that the matrix is not as sparse as expected. **Related issues or PRs**; #2299",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304:81,error,error,81,https://qutip.org,https://github.com/qutip/qutip/pull/2304,2,['error'],['error']
Availability,**Description**; While trying to reproduce #1229. I found that the progress bar would raise an error (`OverflowError: date value out of range`) if `update` was called too often.; Now when the bar goes over 100% it says 0 sec remaining.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2374:95,error,error,95,https://qutip.org,https://github.com/qutip/qutip/pull/2374,1,['error'],['error']
Availability,"**Description**; While working on the [heom-tls notebook] I discovered two wrong behaviors of the `HEOMSolver`. ; 1. Running `hsolver.run()` does not return the states if `e_ops=None`, but the documentation says that it should do so. I added the missing if condition to `HEOMSolver`. ; 2. If passing a progress bar like `qutip.ui.progressbar.TextProgressBar()` to `HEOMSolver` it results in an error, because internally it only checks for `None` or `True`. The documentation says it should also work if I pass an instance of `BaseProgressBar` (or a subclass). I added the checks and a test in the testfile for this. **Related issues or PRs**; None. **Changelog**; Fix HEOMSolver state return and progress bar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1908:394,error,error,394,https://qutip.org,https://github.com/qutip/qutip/pull/1908,1,['error'],['error']
Availability,"**Description**; With Coefficient, supporting func(t, **kwargs) in parallel to f(t, args) for function coefficient is mostly free. ; This signature is more 'pythonic' and would probably by appreciated if available. ; With this new scheme, `t` is positional and the `**kwargs` is needed even if unused.; For backward compatibility, we should not remove the old format. Example:; ```; def f(t, args):; return t*args['w']. def g(t, w, **kwargs):; return t*w. qevo_old = QobjEvo([qeye(3), f], args={'w':1}). qevo_new = QobjEvo([qeye(3), g], args={'w':1}). for t in any_ts:; qevo_old(t) == qevo_new(t); ```. **Changelog**; For time-depedent function, f(t, **args) is available with",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1609:204,avail,available,204,https://qutip.org,https://github.com/qutip/qutip/pull/1609,2,['avail'],['available']
Availability,"**Description**; `Options` and `SolverOptions` are objects that list all available options and pass them a solver. However in v5, with the choice of integrators, the supported options are not fixed. Most integration methods support `""atol""`, but `order` or `beta`, etc. are specific to some methods. SInce new integrators could be added by project such as qutip-cupy, `Options` can no longer be the place to list all supported options. It become little more that a dict. So I propose deprecating it. The documentation of `sesolve`, `mesolve`, etc. now list the options used by the solver and most common ode options and link the the integrator documentation. The class interface has the options property which document the options used by the solver and the integrators have the same. In the online documentation, the integrator api entries only contain the description of the method and the supported options. Since users don't need to call them directly, other methods are hidden and will be included in the dev documentation only. Usage will look like this, for functions:; ```; sesolve(H, psi, tlist, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); ```; and for the class interface:; ```; solver = SeSolver(H, options={""store_states"": True, ""method"": ""lsoda"", ""atol"": 1e-5}); solver.run(...); solver.options[""atol""] = 1e-9; solver.run(...) # run with the new tol.; solver.options = {""atol"": 1e-2} # only change the affected items. ; solver.run(...) # Also run with the new tol.; solver.options[""method""] = ""adams"" # reset all ode options, including ""atol"" supported by both.; solver.options = {""method"": ""bdf"", ""atol"": 1e-2} # reset all ode options then apply the new atol ; ```. Inside solvers, options are stored in a `_SolverOptions` which is a dict with frozen keys and feedback (chaging atol will reset the integrator).; ; Some `Intergrator` are slip so one method correspond to one integrator. Otherwise, `method` was an options used by both the solver to know which integr",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1955:73,avail,available,73,https://qutip.org,https://github.com/qutip/qutip/pull/1955,1,['avail'],['available']
Availability,"**Description**; `QobjEvo` do not use settings value when using tidyup, thus solver do not respond to changes in settings as seen in #1831.; With this, `QobjEvo` will use `settings.auto_tidyup_atol` as the default tolerance. However it will not respond to `settings.auto_tidyup` since cython support for CSR is v4 is flacky and matrix with `0` stored can cause errors. ; Jake's implementation of CSR in v5 solves this. **Related issues or PRs**; Close #1831. **Changelog**; QobjEvo.tidyup use settings.auto_tidyup_atol",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1832:214,toler,tolerance,214,https://qutip.org,https://github.com/qutip/qutip/pull/1832,2,"['error', 'toler']","['errors', 'tolerance']"
Availability,"**Description**; `actions/upload-artifact@v4` and `actions/download-artifact@v4` have breaking change cause the 5.0.3 release to miss wheels on pypi. Different jobs in one workflow can't create artifacts with the same name. (but not on retry).; Download artifact only download artifact from one job without the proper options.; (https://github.com/actions/upload-artifact/issues/478). - Upload to different artifacts per OS.; - Merge artifacts when downloading.; - Add test that all wheels and source are available before pypi release.; - For test build, built artifacts are listed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2476:59,down,download-artifact,59,https://qutip.org,https://github.com/qutip/qutip/pull/2476,5,"['Down', 'avail', 'down']","['Download', 'available', 'download', 'download-artifact', 'downloading']"
Availability,"**Description**; `actions/upload-artifact@v4` and `actions/download-artifact@v4` have breaking change cause the 5.0.3 release to miss wheels on pypi. Different jobs in one workflow can't create artifacts with the same name. ; Download artifact only download artifact from one job without the proper options.; (https://github.com/actions/upload-artifact/issues/478). I also updated cibuildwheel version, we did it in qutip-5.0.X to build wheels for py3.12, but did not push it yet to master. I also merged the jobs to publish or pypi and testpypi, only some environment variables changed and they could get out of synchronization. Lastly I added a check that all wheels are available before uploading to pypi. With 5.0.3's first try, only linux's wheel were published,",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2477:59,down,download-artifact,59,https://qutip.org,https://github.com/qutip/qutip/pull/2477,4,"['Down', 'avail', 'down']","['Download', 'available', 'download', 'download-artifact']"
Availability,"**Description**; `f16` does not exist on Windows. Use `np.longdouble` instead, which is `f16` on Mac/Linux and `f8` on Windows. On windows one gets; ```python; >>> np.dtype([('f', np.longdouble)]) ; dtype([('f', '<f8')]); ```; On Ubuntu; ```python; >>> np.dtype([('f', np.longdouble)]); dtype([('f', '<f16')]); ```. **Changelog**; fix the dtype error in the lattice module",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1313:345,error,error,345,https://qutip.org,https://github.com/qutip/qutip/pull/1313,1,['error'],['error']
Availability,"**Description**; `parallel_map` did not propagate error of sub-procceses:; ```; def f(i):; raise Exception; return i. out = qutip.solver.parallel.parallel_map(f, range(5)); ```; would print: ; ```; ERROR:concurrent.futures:exception calling callback for <Future at 0x7fcdfb9b8e50 state=finished raised Exception>; concurrent.futures.process._RemoteTraceback: ; ...; raise Exception; ```; but it would return normally with `out = [None, None, None, None, None]`. This mean we can't use a `try` block to catch error coming from sub-process and only when the output is used, an error is risen. This change `parallel_map` so it raise the first error it encounter.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969:50,error,error,50,https://qutip.org,https://github.com/qutip/qutip/pull/1969,5,"['ERROR', 'error']","['ERROR', 'error']"
Availability,**Description**; `pyximport` raises a deprecation warning due to importing `imp` instead of `importlib`. I silenced it. It was causing some problem in qutip-tensorflow testing as all warnings are treated as errors. Let me know if I should have proceeded in a different way. . **Changelog**; Silenced deprecation warning from `pyximport`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582:207,error,errors,207,https://qutip.org,https://github.com/qutip/qutip/pull/1582,1,['error'],['errors']
Availability,**Description**; `test_nm_mcsolve.test_super_H` [failed in master's test](https://github.com/qutip/qutip/actions/runs/8807804559/job/24175678290). . Same issue as #2344. The tolerance is too tight and the test can fail randomly with a low probability.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2407:174,toler,tolerance,174,https://qutip.org,https://github.com/qutip/qutip/pull/2407,1,['toler'],['tolerance']
Availability,"**Description**; `test_super_H` can randomly fail, as seen in https://github.com/qutip/qutip/actions/runs/8112849659/job/22174928821. Trying it locally, it fail with a probability of `~1/500`.; Which is very close to what is expected with the tolerance used in the test.; I loosen the test `atol` for an expected rate of failure of about ~1/100000.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2344:243,toler,tolerance,243,https://qutip.org,https://github.com/qutip/qutip/pull/2344,2,"['failure', 'toler']","['failure', 'tolerance']"
Availability,"**Help needed in the following**; - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/). >I did the `pycodestyle` on my code, but it is highlighting errors that were there in the original code. It returned lines that have >linespace errors and more, should I edit them too?; >Output:. > ```; > D:\qutip\qutip\core\cy>pycodestyle --first qobjevo.pyx; > qobjevo.pyx:1:1: E265 block comment should start with '# '; > qobjevo.pyx:2:80: E501 line too long (83 > 79 characters); > qobjevo.pyx:20:37: E211 whitespace before '('; > qobjevo.pyx:46:56: W605 invalid escape sequence '\s'; > qobjevo.pyx:190:30: E225 missing whitespace around operator; > qobjevo.pyx:423:5: E303 too many blank lines (2); > qobjevo.pyx:426:5: E301 expected 1 blank line, found 0; > qobjevo.pyx:451:34: E127 continuation line over-indented for visual indent; > qobjevo.pyx:572:21: E128 continuation line under-indented for visual indent; > qobjevo.pyx:987:39: E231 missing whitespace after ','; > qobjevo.pyx:989:20: E124 closing bracket does not match visual indentation; > ```. - [ ] Please add tests to cover your changes if applicable. > The issue was to add `__repr__` function to `QobjEvo` class. Do I need to add a test? If so, can someone help me with it?. - [ ] If the behavior of the code has changed or new feature has been added, please also update the documentation in the `doc` folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure. > I am not sure in what bracket this issue falls. The issue was labeled as `ENH`. - [ ] Include the changelog in a file named: `doc/changes/<PR number>.<type>` 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). > Related to the previous point. **Description**; Added `__repr__` to `QobjEvo`. It is showing the following attribute",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2111:198,error,errors,198,https://qutip.org,https://github.com/qutip/qutip/pull/2111,2,['error'],['errors']
Availability,"**Is your feature request related to a problem? Please describe.**; A lot of issues in test fail seem to arise from random objects (as well as low-level math in MKL and/or cython issues). . **Describe the solution you'd like**; There are several options at hand. . ### stick to pytest and be creative; A possible fix in testing may be to add randomly generated data that then is pointed at or fix seeds.; **Pros**: fast (?); **Cons**: technical debt. ### pytest-randomly plugin; [pytest-randomly](https://github.com/pytest-dev/pytest-randomly) is a pytest plugin that addresses this kind of issues. It allows to control `random.seed`, rather than `numpy.random.seed`. ; **Pros**: pytest plugin, supports doctest. ; **Cons**: not super popular, not designed for numpy; ; ### property-based testing with Hypothesis; Hypothesis is a library that aims at changing the way tests are designed, allegedly: it should go from testing an instance to designing a test that applies to a domain of instances ([property-based testing](https://hypothesis.works/)). It is not super clear to me right now. ; It contains various randomness-related features, including a [seed function](https://hypothesis.readthedocs.io/en/latest/reproducing.html#hypothesis.seed). **Pros**: sounds powerful and clever, popular and growing, well documented, more robust even beyond this randomness problems.; **Cons**: radical change of testing framework (?), steep learning curve (?), overkill (?). I also admit I used nose until recently / used with pytest tests thought for nose, without taking advantage of pytest full power.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268:1328,robust,robust,1328,https://qutip.org,https://github.com/qutip/qutip/issues/1268,1,['robust'],['robust']
Availability,"**Is your feature request related to a problem? Please describe.**; In the device simulator of QuTiP (`qutip.qip.device`), a quantum computing device is characterized by the class `Processor` and its subclasses. It contains information about the available control pulses. In addition, a compiler is used to compile a set of universal quantum gates (e.g. RX, RY and ISWAP) into the corresponding control pulses. Together, they can automatically compiler an arbitrary quantum circuit into control pulses, create the time-dependent Hamiltonian representation and run the simulation using QuTiP solvers. However, in the current version, this compilation is done for each gate sequentially. At each time step, there is only one control pulse active. In practice, it is inefficient because usually several gates can be performed parallelly (e.g. X gate on qubit 0 and qubit 1). To make the compilation more practical, it is necessary to introduce a scheduler that schedules the control pulses. A similar example is https://qiskit.org/documentation/apidoc/pulse.html#schedules. **Describe the solution you'd like**; There is existing research (https://arxiv.org/pdf/1708.00023.pdf) on gate-level scheduling. It studies which gates can be performed at the same time. In the most general case, however, gate-level scheduling is not enough, since different gates often have different runtime (.e.g. CNOT usually takes longer time than X gate). Despite the difference, pulse-level scheduling can be done in a similar way as gate-level scheduling by generating a graph (see the reference above). The difference is that each pulse will have its own duration. The possible implementation in `qutip.qip` could be in two steps:; - Modernize the current compiler and create an `Instruction` class representing each compiled control instruction (pulse, qubit index, amplitude, duration).; - Implement the scheduling algorithm similar as in the above reference.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1243:246,avail,available,246,https://qutip.org,https://github.com/qutip/qutip/issues/1243,1,['avail'],['available']
Availability,"**Summary of what was done:**. - Changes in floquet_master_equation_rates to make it faster.; - Corrected transposition errors in _floquet_master_equation_tensor_ and changes to make it faster. I also removed a line so that the ME is solved in the interaction picture, this implies a different basis change in the _floquet_markov_mesolve_ function.; - Correction in _floquet_markov_mesolve_. As explained in the point above, the Floquet-Markov ME was not being solved in the interaction picture, therefore I modified _floquet_master_equation_tensor_ and modified the basis change in _floquet_markov_mesolve_. This modification requires an additional variable in the entry of _floquet_markov_mesolve_ which can not be chosen by default. For the moment, if this variable is not given and _floquet_basis=False_, then the density matrix or expectation values are returned in the interaction picture, in the computational basis, and a warning message is sent. ; - Added integration options in: _floquet_modes, floquet_modes_t, floquet_modes_table, floquet_states_t, floquet_modes_t, floquet_wavefunction_t, fsesolve, floquet_master_equation_rates, fmmesolve_; - Added test functions to verify the dissipative dynamics:; a) Compare _fmmesolve_ and _mesolve_ for the cases: (NO drive but dissipation) and (Drive but NO dissipation); b) Compare numerical and analytical matrix elements for a driven-dissipative TLS with RWA. There are some places where the code could be modified to optimize the running time, especially in the basis change in _floquet_markov_mesolve_.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1248#issuecomment-740126949:120,error,errors,120,https://qutip.org,https://github.com/qutip/qutip/pull/1248#issuecomment-740126949,1,['error'],['errors']
Availability,"**Testing fails on several platforms**; In QuTiP 4.5.1, several `skipif`have been introduced to avoid build fail on Mac. Similarly, there are other issues related to robust random objects testing. . **Describe the solution you'd like**; An option could be using [`xdist`](https://docs.pytest.org/en/3.0.1/xdist.html) to allow specifics of certain tests, as it seems to have, beyond parallelization, some potentially interesting multi-platform coverage.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1267:166,robust,robust,166,https://qutip.org,https://github.com/qutip/qutip/issues/1267,1,['robust'],['robust']
Availability,"**Update - Ignore this. This problem was because I called the file ""pyqtgraph"" which conflicted with the library name.**. > As I understand it, the new Mac M1 chips have an ARM-based architecture so there shouldn't be any compatible binary releases on conda yet for macos - I'm surprised conda even claimed to have solved the system. Maybe they've not updated to take the new chips into account either.; > ; > If you can, you might want to try building from source - you'll also need the Python package Cython, but this way should build all the binary components for your architecture. We know (#1395) that there's a minor problem with some hardware detection on the M1 macs at the moment, but you can comment out lines 48 and 49 of `qutip/hardware_info.py` to work around it.; > ; > None of us have one of the new macs, and I think we'll need a new release to get conda-forge updated. It might be a little while before we get that done, sorry. I have the same error on an Intel Mac (11.2.1) having installed pyqtgraph within PyCharm. ```; Connected to pydev debugger (build 203.7148.72); Traceback (most recent call last):; File ""<frozen importlib._bootstrap>"", line 991, in _find_and_load; File ""<frozen importlib._bootstrap>"", line 975, in _find_and_load_unlocked; File ""<frozen importlib._bootstrap>"", line 671, in _load_unlocked; File ""<frozen importlib._bootstrap_external>"", line 783, in exec_module; File ""<frozen importlib._bootstrap>"", line 219, in _call_with_frames_removed; File ""/Users/ben/Library/Application Support/JetBrains/PyCharm2020.3/scratches/pyqtgraph.py"", line 3, in <module>; pg.mkQApp(); AttributeError: partially initialized module 'pyqtgraph' has no attribute 'mkQApp' (most likely due to a circular import). ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-776702708:961,error,error,961,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-776702708,1,['error'],['error']
Availability,"**While using Qutip Latest version on Spyder with these imports:** ; from qutip import *; from scipy import *; import os.path; import numpy as np; import matplotlib.pylab as plt; import os. **I got the following error while calculating f_modes and f_energies""**. `Traceback (most recent call last):. File ""/media/rahul/DATA/IISER-PUNE-2019/MBL_copy_30-10-2020/MBL/new_codes/CDT.py"", line 121, in <module>; f_modes_0, f_energies = floquet_modes(H, T, args, True). File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/floquet.py"", line 102, in floquet_modes; U = propagator(H, T, [], args). File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/propagator.py"", line 184, in propagator; output = sesolve(H2, psi0, tlist, [],. File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/sesolve.py"", line 157, in sesolve; ss = _sesolve_QobjEvo(H, tlist, args, options). File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/sesolve.py"", line 185, in _sesolve_QobjEvo; H_td = -1.0j * QobjEvo(H, args, tlist=tlist). File ""/home/rahul/anaconda3/lib/python3.8/site-packages/qutip/qobjevo.py"", line 467, in __init__; self.args = args.copy(). **AttributeError: 'float' object has no attribute 'copy'`**. Earlier in my previous system with older version of qutip and python this used to work fine",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1386:212,error,error,212,https://qutip.org,https://github.com/qutip/qutip/issues/1386,1,['error'],['error']
Availability,"+1 for removing ineffective compiler flags. Neutral about implied/express ARM support (fine if there is no additional maintenance burden, probably not worth it otherwise).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/311#issuecomment-72574232:118,mainten,maintenance,118,https://qutip.org,https://github.com/qutip/qutip/pull/311#issuecomment-72574232,1,['mainten'],['maintenance']
Availability,", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Bandwidth; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 144, in test_sparse_bandwidth; > out2=sparse_bandwidth(B); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 603, in sparse_bandwidth; > return /sparse/bandwidth(A.indices, A.indptr, nrows); > File ""sparse_utils.pyx"", line 42, in ; > qutip.cy.sparse_utils./sparse/bandwidth (qutip/cy/sparse_utils.c:1458); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > —; > Reply to this email directly or view it on GitHub ; > https://github.com/qutip/qutip/issues/73.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73#issuecomment-35583331:2106,ERROR,ERROR,2106,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331,1,['ERROR'],['ERROR']
Availability,", qeye(2)) + tensor(qeye(2), sigmaz()); 5 H = H0; ----> 6 prop = propagator(H, 1.0, c_ops). /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/propagator.py in propagator(H, t, c_op_list, args, options, unitary_mode, parallel, progress_bar, _safe_mode, **kwargs); 240 shape=(N, N), dtype=complex)); 241 output = mesolve(H, rho0, tlist, c_op_list, [], args, options,; --> 242 _safe_mode=False); 243 for k, t in enumerate(tlist):; 244 u[:, n, k] = mat2vec(output.states[k].full()).T. /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 263 raise Exception(""Invalid H type""); 264 ; --> 265 func, ode_args = ss.makefunc(ss, rho0, args, e_ops, options); 266 ; 267 if _safe_mode:. /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/mesolve.py in _qobjevo_set(HS, rho0, args, e_ops, opt); 349 # Should be caught earlier in mesolve.; 350 raise ValueError(""rho0 must be a ket, density matrix or superoperator""); --> 351 _test_liouvillian_dimensions(H_td.cte.dims, rho0.dims); 352 return func, (); 353 . /opt/anaconda3/envs/scqubits_v2/lib/python3.7/site-packages/qutip/mesolve.py in _test_liouvillian_dimensions(L_dims, rho_dims); 332 raise ValueError("""".join([; 333 ""incompatible Liouvillian and state dimensions: "",; --> 334 str(L_dims), "" and "", str(rho_dims),; 335 ])); 336 . ValueError: incompatible Liouvillian and state dimensions: [[[2, 2], [2, 2]], [[2, 2], [2, 2]]] and [[4], [4]]; ```. ### Expected Behaviour. In my given input, vectorization of `rho` is not taken into account. However the documentation could use clarification how input must be provided to avoid this error. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.3; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.7.11; Number of CPUs: 6; BLAS Info: INTEL MKL; OPENMP Installed: False; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1899:2467,error,error,2467,https://qutip.org,https://github.com/qutip/qutip/issues/1899,1,['error'],['error']
Availability,", rho0, tlist,. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _sesolve_func_td(H_func, psi0, tlist, e_ops, args, opt, progress_bar); 565 #; 566 return _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, norm,; --> 567 dims=psi0.dims); 568 ; 569 . /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/sesolve.py in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, state_norm_func, dims); 656 ; 657 if t_idx < n_tsteps - 1:; --> 658 r.integrate(r.t + dt[t_idx]); 659 ; 660 progress_bar.finished(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in integrate(self, t, step, relax); 406 self._y, self.t = mth(self.f, self.jac or (lambda: None),; 407 self._y, self.t, t,; --> 408 self.f_params, self.jac_params); 409 except SystemError:; 410 # f2py issue with tuple returns, see ticket 1187. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/scipy/integrate/_ode.py in run(self, f, jac, y0, t0, t1, f_params, jac_params); 863 args = ((f, jac, y0, t0, t1) + tuple(self.call_args) +; 864 (f_params, jac_params)); --> 865 y1, t, istate = self.runner(*args); 866 if istate < 0:; 867 warnings.warn(self.__class__.__name__ + ': ' +. /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4445)(). /home/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip/cy/spmatfuncs.pyx in qutip.cy.spmatfuncs.cy_ode_psi_func_td (qutip/cy/spmatfuncs.c:4289)(). TypeError: Cannot convert csr_matrix to numpy.ndarray; ```. Is it expected? (in this case the doc may be misleading). I tried to trace it down, but could not get any luck for the moment. EDIT: Actually, it seems that in such a case, one has to pass a density matrix and not a state as initial state, and that the liouvillian callback should return a `.data` item.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/505:2904,down,down,2904,https://qutip.org,https://github.com/qutip/qutip/issues/505,1,['down'],['down']
Availability,",1)).unit() for i in range(0,N)]); rho0 = psi0*psi0.dag(). ### compute time evolution with different solvers; t_list = np.linspace(0, 50, 500); output0 = mesolve(H0, rho0, t_list, c_ops, e_ops); output1 = essolve(H0, rho0, t_list, c_ops, e_ops); output2 = sesolve(H0, psi0, t_list, e_ops). ### plot result; plt.plot(t_list, output0.expect[0], label='mesolve'); plt.plot(t_list, output1.expect[0], label='essolve'); plt.plot(t_list, output2.expect[0], label='sesolve'); plt.legend(). ### time evolution with essolve, use state vector --> Exception raised; output3 = essolve(H0, psi0, t_list, c_ops, e_ops); plt.plot(t_list, output0.expect[0], label='essolve, state vector'); plt.legend(); ```; The Hamiltonian commutes with the operator for which the expectation value is computed as is easily checked. Therefore the expectation value should be time-independent. Using sesolve one obtains a wrong result. There seems to be an error when using state vectors instead of density matrices, as is seen by using the mesolve function instead. . I was not able to pinpoint the error in the code, but I checked the result with essolve and using an initial state vector. This raises an exception: ; > Exception: Operator and state do not have same tensor structure: [2, 2, 2] and [2]. essolve works as intended by using a density matrix instead, which should again indicate that there is some bug when using state vectors. Note however that the essolve bug might not be directly related to the sesolve bug, since essolve seems to work correctly when using a different initial state:; `psi0 = tensor([(basis(2,0) + 0.5*(-1j)**i *basis(2,1)).unit() for i in range(0,N)])`. I am using the newest versions of the necessary libraries: . > QuTiP Version: 4.2.0; > Numpy Version: 1.11.3; > Scipy Version: 1.0.0; > Cython Version: 0.27.3; > Matplotlib Version: 2.0.2; > Python Version: 3.6.4; > Number of CPUs: 4; > BLAS Info: OPENBLAS; > OPENMP Installed: False; > INTEL MKL Ext: False; > Platform Info: Linux (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841:2267,error,error,2267,https://qutip.org,https://github.com/qutip/qutip/issues/841,1,['error'],['error']
Availability,"- 1, 2: Solvers expect list, not tuple. In a few places, we do not explicitly test for list but only extract the elements, so tuple should behave the same, but it's untested. In my tries with `mesolve` they seems to behave the same or raise error. - 3: `c_ops=[C_0, C_1, [(\hat{a}, f(t)), (\hat{b}, c(t))]]` should work in `mesolve` with `[(\hat{a}, f(t)), (\hat{b}, c(t))]` as the third collapse operator.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2065#issuecomment-1408604158:241,error,error,241,https://qutip.org,https://github.com/qutip/qutip/issues/2065#issuecomment-1408604158,1,['error'],['error']
Availability,- All builds fail a test regarding optimal control in `` fails with `AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'`.; - The MacOs build still exits with an error once it encounters `ptrace`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/972#issuecomment-484364190:178,error,error,178,https://qutip.org,https://github.com/qutip/qutip/pull/972#issuecomment-484364190,1,['error'],['error']
Availability,"- Fixed the dims on the final_state output in mesolve and sesolve.; - Also explicitly set the isherm on ouput from mesolve to be True, since the output should be viewed as aa DM regardless if small numerical errors may the isherm check fail.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/486:208,error,errors,208,https://qutip.org,https://github.com/qutip/qutip/pull/486,1,['error'],['errors']
Availability,"- I agree that renaming the _inner_point_color variable is a good idea. - The case you mention of black point_color with style 'l' also occurs in V4 and is solved by defining the variable as a list, e.g., ['black'] (which also works with the changes I proposed). So basically I assumed it was an expected use case. - I asked this question about style 's' plotting two colors in issue #1974, since we are given the same colors for style 's' and 'm', and Neil suggested leaving it as is. The docstring in the add_points function already tells you to give a single color for style 's' and a list of colors for style 'm'. - The error you get using style 'm' with two colors is that you need to specify a color for each point (you have to pass to the function a list of colors of the same length as the length of the points). In view of this, I don't know which approach you prefer to apply, as it depends on the expected use case. Given that the code works, perhaps the priority would be to specify the expected use while defining as part of issue #1913 the modifications you consider appropriate (although maybe someone will catch it earlier if you define it as a new issue).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2308#issuecomment-1916739672:624,error,error,624,https://qutip.org,https://github.com/qutip/qutip/pull/2308#issuecomment-1916739672,1,['error'],['error']
Availability,- Made qutip.entropy.concurrence work for pure states in addition to density matrices.; - Improved error checks.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/143:99,error,error,99,https://qutip.org,https://github.com/qutip/qutip/pull/143,1,['error'],['error']
Availability,- QuTiP already has some interpolation functions that can be compiled down into Cython. Is there some reason we need new ones? Does the new solver support the current interp functions?. - I don't see any changes / additions to unit tests. Are these still coming?. - The new `td_qobj` objects should be able to be passed to all the solvers. This is most easily done by just looking for a `td_qobj` instance and then grabbing the `Q_object` from it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/774#issuecomment-344648478:70,down,down,70,https://qutip.org,https://github.com/qutip/qutip/pull/774#issuecomment-344648478,1,['down'],['down']
Availability,- occasional unit tests error due to tight tolerance; - warning when calling `choi_to_chi`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/129:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/129,2,"['error', 'toler']","['error', 'tolerance']"
Availability,- use the serial_map function that is now available in qutip.parallel,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/288:42,avail,available,42,https://qutip.org,https://github.com/qutip/qutip/pull/288,1,['avail'],['available']
Availability,----------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51550,ERROR,ERROR,51550,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51632,ERROR,ERROR,51632,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/cy/pyxbuilder.py 18 11 39%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/tes,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50812,ERROR,ERROR,50812,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"-I/System/Library/Frameworks/vecLib.framework/Headers'; clang: numpy/core/src/multiarray/array_assign_scalar.c; clang: numpy/core/src/multiarray/alloc.c; clang: numpy/core/src/multiarray/buffer.c; clang: numpy/core/src/multiarray/common.c; clang: numpy/core/src/multiarray/conversion_utils.c; clang: numpy/core/src/multiarray/datetime_strings.c; clang: numpy/core/src/multiarray/descriptor.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/einsum.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec',",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:65676,error,error,65676,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 335, in run_setup; exec(code, locals()); File ""<string>"", line 247, in <module>; File ""<string>"", line 46, in process_options; File ""<string>"", line 130, in _determine_version; AttributeError: module 'packaging.version' has no attribute 'LegacyVersion'; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> See above for output. note: This error originates from a subprocess, and is likely not a problem with pip.; ```. ### Expected Behaviour. Should install `qutip` without errors. ### Your Environment. ```shell; QuTip Version: 4.7.0; Python version: 3.11.0; `packaging` version: 22.0; `pip` version: 22.3.1; ```. ### Additional Context. I explicitly mention Python 3.11 because I failed to replicate the issue on a fresh Python 3.10 environment. . EDIT: Looking deeper into the [qutip built distributions](https://pypi.org/project/qutip/#files), the reason why this is failing only for Python 3.11 is because earlier versions of Python have built distributions, unlike Python 3.11. . This indicates that building the wheel from source is generally broken, which I confirmed by forcing an installation from source on Python 3.10 with; ```bash; pip install qutip --no-cache-dir --no-binary :all:; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:2589,error,error,2589,https://qutip.org,https://github.com/qutip/qutip/issues/2036,2,['error'],"['error', 'errors']"
Availability,-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 30 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ==========================================,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30879,ERROR,ERROR,30879,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.30s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.23s. Est. time left: 00:00:00:16; 32.0%. Run time: 4.61s. Est. time left: 00:00:00:09; 40.0%. Run time: 4.61s. Est. time left: 00:00:00:06; 52.0%. Run time: 4.99s. Est. time left: 00:00:00:04; 60.0%. Run time: 5.01s. Est. time left: 00:00:00:03; 72.0%. Run time: 5.37s. Est. time left: 00:00:00:02; 80.0%. Run time: 5.74s. Est. time left: 00:00:00:01; Total run time: 5.89s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_homodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 89, in test_ssesolve_homodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:7534,ERROR,ERROR,7534,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.31s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.25s. Est. time left: 00:00:00:16; 32.0%. Run time: 4.65s. Est. time left: 00:00:00:09; 40.0%. Run time: 4.65s. Est. time left: 00:00:00:06; 52.0%. Run time: 5.06s. Est. time left: 00:00:00:04; 60.0%. Run time: 5.07s. Est. time left: 00:00:00:03; 72.0%. Run time: 5.50s. Est. time left: 00:00:00:02; 80.0%. Run time: 5.88s. Est. time left: 00:00:00:01; Total run time: 5.99s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_heterodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 119, in test_ssesolve_heterodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin cap",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:9129,ERROR,ERROR,9129,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.40s. Est. time left: 00:00:00:24; 20.0%. Run time: 4.32s. Est. time left: 00:00:00:17; 32.0%. Run time: 4.88s. Est. time left: 00:00:00:10; 40.0%. Run time: 4.89s. Est. time left: 00:00:00:07; 52.0%. Run time: 5.45s. Est. time left: 00:00:00:05; 60.0%. Run time: 5.49s. Est. time left: 00:00:00:03; 72.0%. Run time: 6.02s. Est. time left: 00:00:00:02; 80.0%. Run time: 6.57s. Est. time left: 00:00:00:01; Total run time: 6.62s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_heterodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 120, in test_ssesolve_heterodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin cap",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:4331,ERROR,ERROR,4331,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 3.46s. Est. time left: 00:00:00:25; 20.0%. Run time: 4.37s. Est. time left: 00:00:00:17; 32.0%. Run time: 5.00s. Est. time left: 00:00:00:10; 40.0%. Run time: 5.01s. Est. time left: 00:00:00:07; 52.0%. Run time: 5.65s. Est. time left: 00:00:00:05; 60.0%. Run time: 5.69s. Est. time left: 00:00:00:03; 72.0%. Run time: 6.31s. Est. time left: 00:00:00:02; 80.0%. Run time: 6.89s. Est. time left: 00:00:00:01; Total run time: 7.03s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_homodyne; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 90, in test_ssesolve_homodyne; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:2736,ERROR,ERROR,2736,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,"-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin captured stdout << ---------------------; 12.0%. Run time: 4.13s. Est. time left: 00:00:00:30; 20.0%. Run time: 5.12s. Est. time left: 00:00:00:20; 32.0%. Run time: 6.16s. Est. time left: 00:00:00:13; 40.0%. Run time: 6.21s. Est. time left: 00:00:00:09; 52.0%. Run time: 7.26s. Est. time left: 00:00:00:06; 60.0%. Run time: 7.37s. Est. time left: 00:00:00:04; 72.0%. Run time: 8.34s. Est. time left: 00:00:00:03; 80.0%. Run time: 9.25s. Est. time left: 00:00:00:02; Total run time: 9.33s. --------------------- >> end captured stdout << ----------------------. ======================================================================; ERROR: qutip.tests.test_stochastic_se.test_ssesolve_photocurrent; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_se.py"", line 59, in test_ssesolve_photocurrent; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 365, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 692, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; raise self._value; ValueError: object of too small depth for desired array; -------------------- >> begin ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:5931,ERROR,ERROR,5931,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['ERROR'],['ERROR']
Availability,-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51140,ERROR,ERROR,51140,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,". I post it here so if anyone finding it nice could copy it to the Wiki page. I add some details based on the original description:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found in `qutip.qip.device` and `qutip.qip.compiler`; - Refactoring the circuit compiler to allow simple pulse scheduling, e.g. Restriction one pulses that can",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:1164,error,error,1164,https://qutip.org,https://github.com/qutip/qutip/issues/1184,1,['error'],['error']
Availability,". There were several issues with this function, which I have attempted to rectify as described below. Also its my first pull request (instead of asking anubhav or alex to help), so if I messed it up let me know. 1) The default method, a direct solution using sparse matrices, would fail with an ""exactly singular"" error on small examples (like the well studied single-resonant level or double quantum dot examples). The other sparse methods also suffered from the same issue, as did the 'direct' method for dense solutions. The latter, the dense matrices solver, I have fixed by capturing the error using lstsq() if np.linalg.solve() fails. For the sparse cases there seems to no equivalent fix. One can solve the issue by adding a small finite frequency to the definition of the shot noise. However, this seems like a bit of a bodge, and could cause issues if this small frequency is of the order of some system frequencies. So I have changed the default behavior to use the dense solvers, and added a description of the sparse matrix issues in the function description and in an example notebook I will upload to the example notebooks github. . Maybe someone can suggest a better fix?. 2) There was, in addition, an error in the definition of the shot noise formula in the default sparse matrix direct solution. In addition, the dense methods which used pinv() were also incorrectly defined (they were missing pre and post- multiplication by the 'Q' operator), and would thus give different results from the direct solutions. These issues have been fixed, and everything now fits expected analytical results (see example notebook). 3) I have added a frequency dependence via a list of possible frequencies at which to evaluate the shot noise. 4) I removed the option of passing a pseudo-inverse to the function directly, and changed various other interface things. I am not sure if everything conforms to PEP8 etc. Edit: the example notebook is here https://github.com/qutip/qutip-notebooks/pull/35",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/528:1352,error,error,1352,https://qutip.org,https://github.com/qutip/qutip/pull/528,1,['error'],['error']
Availability,". s = qutip.rand_super(); c = qutip.to_choi(s); k = qutip.to_kraus(c); ```. For example, here's a similar command on this file:. ```; Debug memory block at address p=0x7f98cc467db0: API 'r'; 61503 bytes originally requested; The 7 pad bytes at p-7 are FORBIDDENBYTE, as expected.; The 8 pad bytes at tail=0x7f98cc476def are not all FORBIDDENBYTE (0xfd):; at tail+0: 0x00 *** OUCH; at tail+1: 0x00 *** OUCH; at tail+2: 0x00 *** OUCH; at tail+3: 0x00 *** OUCH; at tail+4: 0x00 *** OUCH; at tail+5: 0x00 *** OUCH; at tail+6: 0x00 *** OUCH; at tail+7: 0x00 *** OUCH; Data at p: dd dd dd dd dd dd dd dd ... 00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FE",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:4989,down,down,4989,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,2,['down'],['down']
Availability,". ~\Anaconda3\lib\site-packages\qutip\__init__.py in <module>; 31 #; 32 ; ---> 33 from .core import *; 34 from .solver import *; 35 from .solver import nonmarkov. ~\Anaconda3\lib\site-packages\qutip\core\__init__.py in <module>; 1 from .options import *; 2 from .coefficient import *; ----> 3 from .qobj import *; 4 from .cy.qobjevo import *; 5 from .expect import *. ~\Anaconda3\lib\site-packages\qutip\core\qobj.py in <module>; 1806 from qutip.core.superoperator import vector_to_operator, operator_to_vector; 1807 from qutip.core.tensor import tensor_swap, tensor; -> 1808 from qutip.core import metrics as mts. ~\Anaconda3\lib\site-packages\qutip\core\metrics.py in <module>; 17 from .operators import qeye, qeye_like; 18 from .states import ket2dm; ---> 19 from .semidefinite import dnorm_problem, dnorm_sparse_problem; 20 from . import data as _data; 21 . ~\Anaconda3\lib\site-packages\qutip\core\semidefinite.py in <module>; 12 # Conditionally import CVXPY; 13 try:; ---> 14 import cvxpy; 15 ; 16 __all__ = [""dnorm_problem"", ""dnorm_sparse_problem""]. ~\Anaconda3\lib\site-packages\cvxpy\__init__.py in <module>; 16 ; 17 __version__ = ""1.1.17""; ---> 18 import cvxpy.interface.scipy_wrapper; 19 from cvxpy.atoms import *; 20 from cvxpy.constraints import PSD, SOC, NonPos, Zero. ~\Anaconda3\lib\site-packages\cvxpy\interface\scipy_wrapper.py in <module>; 35 ; 36 for method_name in BIN_OPS:; ---> 37 method = getattr(spmatrix, method_name); 38 new_method = wrap_bin_op(method); 39 setattr(spmatrix, method_name, new_method). AttributeError: type object 'spmatrix' has no attribute '__div__'; ```. ### Expected Behaviour. Expected no error when imprting qutip. ### Your Environment. ```shell; numpy 2.0.1; scipy 1.13.1; qutip 5.0.3.post1; Cython 0.29.24; matplotlib 3.9.1; py 1.10.0; python-dateutil 2.8.2; python-lsp-black 1.0.0; python-lsp-jsonrpc 1.0.0; python-lsp-server 1.2.4; python-slugify 5.0.2; 8 CPUs; Windows 10 Version	10.0.19045 Build 19045; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2500:2759,error,error,2759,https://qutip.org,https://github.com/qutip/qutip/issues/2500,1,['error'],['error']
Availability,".36s; Total run time: 5.51s; Total run time: 6.58s; Total run time: 9.64s; Total run time: 10.74s; Total run time: 12.29s; {'solver': 'pc-euler-2'}; Total run time: 1.54s; Total run time: 1.86s; Total run time: 2.50s; Total run time: 2.79s; Total run time: 3.36s; Total run time: 4.03s; Total run time: 4.98s; Total run time: 6.56s; {'solver': 'explicit1.5'}; Total run time: 5.28s; Total run time: 6.35s; Total run time: 7.74s; Total run time: 8.99s; Total run time: 10.34s; Total run time: 12.41s; Total run time: 15.40s; Total run time: 21.40s; {'solver': 'taylor1.5'}; Total run time: 3.30s; Total run time: 3.85s; Total run time: 4.52s; Total run time: 5.63s; Total run time: 7.22s; Total run time: 8.72s; Total run time: 9.51s; Total run time: 11.84s; {'solver': 'taylor1.5-imp'}; Total run time: 5.43s; Total run time: 6.81s; Total run time: 7.60s; Total run time: 10.05s; Total run time: 11.88s; Total run time: 12.88s; Total run time: 15.63s; Total run time: 22.31s. ```; ; **Minor issue: plots breaking notebook rendering**; Jupyter Notebooks have a broken rendering when cells with plots are run; refreshing the notebook sometimes works fine. This is sometimes fixed in the first place by adding; ```; plt.show(); plt.close(); ```; but not always. Maybe we can have a look at this minor issue in the development notebooks. . **Documentation**; It would really increase the adoption rate if the API doc and User Guide could be updated to highlight the stochastic solvers and new methods. The development notebooks are so well written that drawing from their examples should be simple. . Congratulations @Ericgig for this refurbishment, improvement, optimization and thorough benchmarking investigations of the stochastic solvers, which I hope will be widely tested by @nwlambert @ajgpitch @quantshah (and @fminga) for robustness once merged in the development master branch. I am merging this and the montecarlo split PR, hoping there are no incompatibility issues (#990 --> #991 --> #969).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/990#issuecomment-500396003:6410,robust,robustness,6410,https://qutip.org,https://github.com/qutip/qutip/pull/990#issuecomment-500396003,2,['robust'],['robustness']
Availability,".4,<2.0a0'] -> __osx[version='>=10.9']. Your installed version is: 13.4; ```; This is odd given that I am using `numpy 1.26.2` and `Mac OS 13.4`, which appear to satisfy the requirements. Instead, I tried using `pip install qutip` which circumvented this error, but results in incorrect behavior as described below. ### Code to Reproduce the Bug. ```shell; import numpy as np; import qutip as qt. X = qt.sigmax(); print(np.linalg.eigh(X)[1]); ```. ### Code Output. ```shell; `; [[-0.70710678-0.70710678j 0.70710678+1.20710678j]; [ 0.70710678+0.70710678j 0.70710678+0.5j ]]; `; ```. ### Expected Behaviour. `; [[-0.70710678+0.j 0.70710678+0.j]; [ 0.70710678+0.j 0.70710678+0.j]]; `. ### Your Environment. ```shell; QuTiP Version: 4.7.3; Numpy Version: 1.26.2; Scipy Version: 1.11.4; Cython Version: None; Matplotlib Version: 3.8.2; Python Version: 3.12.0; Number of CPUs: 10; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. I am just comparing the behavior between two environments. The first one correctly diagonalizes the Pauli X operator with a Hadamard, and the second does not. The ""correct"" environment uses a standard numpy 1.26.2 install, with qutip installed with conda. The ""incorrect"" environment uses the `accelerate` numpy install, and qutip installed with pip. Each environment has the same `qutip.about()` return string. In reality, my use case is more complex than this, but I managed to boil down the error to faulty matrix diagonlization. I also want to add that I do indeed get a factor of ~4 speedup in pure numpy examples (like those linked in the SE post), so it's only when integrating with QuTiP that something goes awry. It might be the case that there really is some compatibility issue, and using `pip` doesn't really fix anything. I'm mainly wondering whether this behavior is expected, or if there is a correct way of getting QuTiP and the `accelerate` BLAS to work together that I am missing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2273:2220,down,down,2220,https://qutip.org,https://github.com/qutip/qutip/issues/2273,3,"['down', 'error', 'fault']","['down', 'error', 'faulty']"
Availability,".cy.stochastic"" sources; building extension ""qutip.cy.sparse_utils"" sources; building extension ""qutip.cy.graph_utils"" sources; building extension ""qutip.cy.interpolate"" sources; building extension ""qutip.cy.spmath"" sources; building extension ""qutip.cy.heom"" sources; building extension ""qutip.cy.math"" sources; building extension ""qutip.cy.spconvert"" sources; building extension ""qutip.cy.ptrace"" sources; building extension ""qutip.control.cy_grape"" sources; building data_files sources; build_src: building npy-pkg config files; running build_py; copying qutip/version.py -> build/lib.linux-x86_64-3.5/qutip; copying build/src.linux-x86_64-3.5/qutip/__config__.py -> build/lib.linux-x86_64-3.5/qutip; running build_ext; customize UnixCCompiler; customize UnixCCompiler using build_ext; building 'qutip.cy.spmatfuncs' extension; compiling C sources; C compiler: gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security -fno-omit-frame-pointer -fstack-protector-strong --param ssp-buffer-size=4 -fexceptions -D_FORTIFY_SOURCE=2 -feliminate-unused-debug-types -Wno-error -Wp,-D_REENTRANT -fPIC. compile options: '-I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/lib/python3.5/site-packages/numpy/core/include -I/home/jakeargent/anaconda3/include/python3.5m -c'; extra options: '-w -ffast-math -O3 -march=native -funroll-loops'; gcc: qutip/cy/src/zspmv.c; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; qutip/cy/src/zspmv.c:2:21: fatal error: complex.h: No such file or directory; #include <complex.h>; ^; compilation terminated.; error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wfor",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:4318,error,error,4318,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['error'],['error']
Availability,".matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ======================================================== short test summary info =========================================================; ERROR qutip/tests/core/test_gates.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/core/test_qobjevo.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_integrator.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_mesolve.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 4 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ============================================= 17 deselected, 40 warnings, 4 errors in 5.47s ==============================================; ```. ### Expected Behaviour. No errors. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.14.0; Cython Version: 3.0.10; Matplotlib Version: 3.9.0; Python Version: 3.12.4; Number of CPUs: 10; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Us",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:5440,ERROR,ERROR,5440,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['ERROR'],['ERROR']
Availability,".py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.7.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.9.2; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/lib/python3/dist-packages/qutip; ```. **Additional context**. The first thing to check for is whether plots are being closed. But TestPlot already uses `plt.clf()`. Evidently it is not enough.; Replacing `plt.clf()` with `plt.close('all')` seems to work, allowing tests to be registered as successful without error.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:7196,error,error,7196,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,".run(self); 186 ; 187 def build_extensions(self):. /home/caidish1234/anaconda3/lib/python3.6/distutils/command/build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. /home/caidish1234/anaconda3/lib/python3.6/site-packages/Cython/Distutils/old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. /home/caidish1234/anaconda3/lib/python3.6/distutils/command/build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. /home/caidish1234/anaconda3/lib/python3.6/distutils/ccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 572 except KeyError:; 573 continue; --> 574 self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); 575 ; 576 # Return *all* object filenames, not just the ones we just built. /home/caidish1234/anaconda3/lib/python3.6/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 118 extra_postargs); 119 except DistutilsExecError as msg:; --> 120 raise CompileError(msg); 121 ; 122 def create_static_lib(self, objects, output_libname,. ImportError: Building module rhs82342421 failed: [""distutils.errors.CompileError: command 'gcc' failed with exit status 1\n""]; ```. So, I opened my server's log,it showed lots of:; `cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++ [enabled by default]`. And an error:; `gcc: error trying to exec '/usr/lib/gcc/x86_64-linux-gnu/4.8/cc1plus': execv: Argument list too long`. After killing the kernel, open the notebook again...Everything is ok...I'm puzzled now...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/697:5517,error,errors,5517,https://qutip.org,https://github.com/qutip/qutip/issues/697,3,['error'],"['error', 'errors']"
Availability,".set_title(r""$\sigma_y$ coefficient""); ```. <div align=""center"">; <img width=""314"" alt=""image"" src=""https://github.com/user-attachments/assets/b07b3a64-a2d4-458b-a04e-4c83c0c4c093"">; </div>; Despite these small differences, the simulation results show significant and unexpected variations. ; Below is simulation code and results. ```; import qutip; import numpy as np; import matplotlib.pyplot as plt. sx = qutip.sigmax(); sy = qutip.sigmay(); sz = qutip.sigmaz(); psi0 = qutip.fock(2,0); psi1 = qutip.fock(2,1). def Hrot(coef,tlist): ; return qutip.QobjEvo([[sx,coef.real/2],[sy,coef.imag/2]],tlist=tlist). Omega0 = 10e6 * 2 * np.pi; for wavedata_name in [""index92"",""index93"",""index94""]:; coef = np.loadtxt(f""{wavedata_name}_coef.txt"",dtype=np.complex128); tlist = np.loadtxt(f""{wavedata_name}_tlist.txt"",dtype=np.float64); H = Hrot(coef=coef*Omega0,tlist=tlist); result = qutip.mesolve(H,psi0,tlist=tlist); print(f""{wavedata_name}"",np.abs(psi0.dag()@result.final_state)**2); ```. ```; index92 1.9513183436107076e-10; index93 0.49999366030208936; index94 1.0264492246902099e-13; ```. I would appreciate any insights into the potential causes of these errors and guidance on how to prevent such issues in future simulations. Additional Information:; scipy version: 1.13.0; python version: 3.12.2; qutip version: 5.0.1; numpy version: 1.26.4; Operating system: macOS 15.1. The files with the preselected coefficients and tlist are provided for reproducibility.; [index92_coef.txt](https://github.com/user-attachments/files/17613505/index92_coef.txt); [index92_tlist.txt](https://github.com/user-attachments/files/17613506/index92_tlist.txt); [index93_coef.txt](https://github.com/user-attachments/files/17613507/index93_coef.txt); [index93_tlist.txt](https://github.com/user-attachments/files/17613509/index93_tlist.txt); [index94_coef.txt](https://github.com/user-attachments/files/17613510/index94_coef.txt); [index94_tlist.txt](https://github.com/user-attachments/files/17613511/index94_tlist.txt)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2552:2725,error,errors,2725,https://qutip.org,https://github.com/qutip/qutip/issues/2552,1,['error'],['errors']
Availability,"//github.com/python-pillow/Pillow) from 9.4.0 to 10.0.1.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>; <blockquote>; <h2>10.0.1</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.1.html</a></p>; <h2>Changes</h2>; <ul>; <li>Updated libwebp to 1.3.2 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7395"">#7395</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Updated zlib to 1.3 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7344"">#7344</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; </ul>; <h2>10.0.0</h2>; <p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/10.0.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Fixed deallocating mask images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7246"">#7246</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added ImageFont.MAX_STRING_LENGTH <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7244"">#7244</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fix Windows build with pyproject.toml <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7230"">#7230</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>; <li>Do not close provided file handles with libtiff <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7199"">#7199</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Convert to HSV if mode is HSV in getcolor() <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7226"">#7226</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Added alpha_on",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2237:1033,mask,mask,1033,https://qutip.org,https://github.com/qutip/qutip/pull/2237,1,['mask'],['mask']
Availability,"/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py ____________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:15638,ERROR,ERROR,15638,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > > > cmd_obj.run(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > > > _build_ext.build_ext.run(self); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > > > self.build_extensions(); > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > > > self.build_extension(ext); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > > > depends=ext.depends); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > > > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > > > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > > > raise CompileError, msg; > > > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > > > import numpy as np; > > > ; > > > from qutip import *; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 62, in <module>; > > > qutip.settings.ipython = False; > > > AttributeError: 'module' object has no attribute 'settings'; ###### . This seems similar to the build error in Installation on OS X with Homebrew script error #348. Is this a bug in qutip ? Is there a way to fix this?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:5201,error,error,5201,https://qutip.org,https://github.com/qutip/qutip/issues/382,2,['error'],['error']
Availability,"/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py:1: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py:3: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py _____",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:26437,ERROR,ERROR,26437,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py:3: in <module>; from numpy.testing import assert_equal, run_module_suite, assert_; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:20125,ERROR,ERROR,20125,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py:2: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py:1: in <module>; from numpy.testing import assert_, assert_equal, assert_string_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobj",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:12021,ERROR,ERROR,12021,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"/misc/build/qutip; plugins: cov-2.10.1, mpi-0+unknown, doctestplus-0.9.0, remotedata-0.3.2, asyncio-0.14.0, filter-subpackage-0.1.1, arraydiff-0.3, astropy-header-0.1.2, hypothesis-5.43.3, openfiles-0.5.0, xvfb-1.2.0; collecting ... collected 1996 items / 67 deselected / 1 skipped / 1928 selected. qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-real_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-imaginary_hermitian] PASSED [ 0%]; qutip/tests/test_basis_transformation.py::test_transformation_to_eigenbasis_is_reversible[2-complex_hermitian] PASSED [ 0%]. ...; qutip/tests/test_wigner.py::test_wigner_fft_comparse_ket PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_fft_comparse_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_iter_dm PASSED [ 99%]; qutip/tests/test_wigner.py::test_wigner_clenshaw_sp_iter_dm PASSED [100%]XIO: fatal IO error 0 (Success) on X server "":1029""; after 201 requests (201 known processed) with 4 events remaining.; ```. As far as I can tell this XIO error is related to the xvfb module (pytest-xvfb) used to manage graphical tests without display. Some relevant discussion is found at https://github.com/The-Compiler/pytest-xvfb/issues/11 . They indicate there that this error can be triggered if windows managed by Xvfb are not properly closed before completing tests. So it's likely it's related to tests using matplotlib. The only test using matplot lib is testPlot in test_processor.py. Sure enough, if testPlot is skipped then test_processor.py passes successfully without triggering the XIO error. **To Reproduce**. Run test_processor.py directly:; ```; python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ```. The terminal output is; ```; $ python3 -m pytest /usr/lib/python3/dist-packages/qutip/tests/test_processor.py -v; ====================================================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:1665,error,error,1665,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,"/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c'; extra options: '-faltivec -I/System/Library/Frameworks/vecLib.framework/Headers'; clang: numpy/core/src/multiarray/array_assign_scalar.c; clang: numpy/core/src/multiarray/alloc.c; clang: numpy/core/src/multiarray/buffer.c; clang: numpy/core/src/multiarray/common.c; clang: numpy/core/src/multiarray/conversion_utils.c; clang: numpy/core/src/multiarray/datetime_strings.c; clang: numpy/core/src/multiarray/descriptor.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/einsum.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', plea",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:65559,error,error,65559,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"/qutip.org/docs/latest/guide/dynamics/dynamics-time.html#time-interp) it is possible to replace string time-dependent functions (e.g. for a Hamiltonian) using Cubic_Spline. This is the case if one has data describing the time-dependent object which is not easy to write analytically. In `brmesolve` the only option is to provide time-dependent functions as strings (or Cubic_Spline). This works fine for the Hamiltonian, but the `a_ops` fail a check in cy/brcodegen.py when using a Cubic_Spline type. **To Reproduce**; ```python; import qutip as qt; import numpy as np. x = np.arange(0, 10, 0.1); decay = np.exp(-x); decay_spline = qt.Cubic_Spline(x[0], x[-1], decay). sol1 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol2 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), ""exp(-w)""]]) # works fine; sol3 = qt.brmesolve([[qt.qeye(2), ""exp(-t)""]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; sol4 = qt.brmesolve([[qt.qeye(2), decay_spline]], qt.qeye(2), [0, 1], a_ops=[[qt.qeye(2), decay_spline]]) # error; ```. On the cases it gives an error (sol3, sol4), it is `Exception: Invalid a_td_term.` from br_codegen.py (`aop_td_funcs()`).; Note that the Cubic_Spline representation works perfectly fine for the Hamiltonian part (e.g. sol2). It also appears to work fine if specifying `c_ops`. **Expected behavior**; My understanding from the documentation regarding time-dependent objects is that the Cubic_Spline representation should work for brmesolve at all argument positions, where appropriate (not just the Hamiltonian and c_ops). For example, at the above URL, we have: <br/>; ""When combining interpolating functions with other Python functions or strings, the interpolating class will automatically pick the appropriate method for calling the class. That is to say that, if for example, you have other time-dependent terms that are given in the string-format, then the cubic s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624:1073,error,error,1073,https://qutip.org,https://github.com/qutip/qutip/issues/1624,1,['error'],['error']
Availability,/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/si,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30558,ERROR,ERROR,30558,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"0 with size 0; collected 0 items / 1 errors; ==================================== ERRORS ====================================; ______________________ ERROR collecting test_smesolve2.py ______________________; multiprocessing.pool.RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/Users/haiwen/anaconda3/lib/python3.6/multiprocessing/pool.py"", line 119, in worker; result = (True, func(*args, **kwds)); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1040, in _smesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1789, in _rhs_rho_euler_maruyama; dW_len = len(dW[0, :]); IndexError: index 0 is out of bounds for axis 0 with size 0; """""". The above exception was the direct cause of the following exception:; test_smesolve2.py:53: in <module>; store_measurement=True, map_func=parallel_map); ../../anaconda3/lib/python3.6/site-packages/qutip/stochastic.py:593: in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); ../../anaconda3/lib/python3.6/site-packages/qutip/stochastic.py:936: in _smesolve_generic; task_args, task_kwargs, **map_kwargs); ../../anaconda3/lib/python3.6/site-packages/qutip/parallel.py:260: in parallel_map; return [ar.get() for ar in async_res]; ../../anaconda3/lib/python3.6/site-packages/qutip/parallel.py:260: in <listcomp>; return [ar.get() for ar in async_res]; ../../anaconda3/lib/python3.6/multiprocessing/pool.py:644: in get; raise self._value; E IndexError: index 0 is out of bounds for axis 0 with size 0; ------------------------------- Captured stdout --------------------------------; Total run time: 0.13s; !!!!!!!!!!!!!!!!!!! Interrupted: 1 errors during collection !!!!!!!!!!!!!!!!!!!!; =========================== 1 error in 1.92 seconds ============================; Process finished with exit code 0; ```. Does anyone have suggestions on what is going wrong here? Thanks a lot!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029:5338,error,errors,5338,https://qutip.org,https://github.com/qutip/qutip/issues/1029,2,['error'],"['error', 'errors']"
Availability,"0, 500); q.propagator([[q.sigmax(), np.cos(tlist)]], tlist); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); Cell In[26], line 2; 1 tlist = np.linspace(0, 50, 500); ----> 2 q.propagator([[q.sigmax(), np.cos(tlist)]], tlist).states[-1]. File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\solver\propagator.py:62, in propagator(H, t, c_ops, args, options, **kwargs); 59 list_output = True; 61 if not isinstance(H, (Qobj, QobjEvo)):; ---> 62 H = QobjEvo(H, args=args, **kwargs); 64 if c_ops:; 65 H = liouvillian(H, c_ops). File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\core\cy\qobjevo.pyx:223, in qutip.core.cy.qobjevo.QobjEvo.__init__(). File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\core\cy\qobjevo.pyx:272, in qutip.core.cy.qobjevo.QobjEvo._read_element(). File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\core\coefficient.py:175, in coefficient(base, tlist, args, args_ctypes, order, compile_opt, function_style, boundary_conditions, **kwargs); 173 for type_ in coefficient_builders:; 174 if isinstance(base, type_):; --> 175 return coefficient_builders[type_](base, **kwargs); 177 if callable(base):; 178 op = FunctionCoefficient(base, args.copy(), style=function_style). File c:\Users\neohu\.conda\envs\de\Lib\site-packages\qutip\core\cy\coefficient.pyx:418, in qutip.core.cy.coefficient.InterCoefficient.__init__(). ValueError: tlist must be the same len as the array to interpolate; ```. ### Expected Behaviour. Code should run without error. ### Your Environment. ```shell; Note that this problem is persistent in the latest 5.0.2, because I checked the source code. QuTiP Version: 5.0.1; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: None; Python Version: 3.11.5; Number of CPUs: 12; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Windows (AMD64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2432:2916,error,error,2916,https://qutip.org,https://github.com/qutip/qutip/issues/2432,1,['error'],['error']
Availability,"00 00 00 00 00 00 00 00. Enable tracemalloc to get the memory block allocation traceback. Fatal Python error: bad trailing pad byte; Python runtime state: finalizing (tstate=0x7f98c9d018e0). Current thread 0x0000000109fe85c0 (most recent call first):; <no Python frame>; Abort trap: 6; ```. So these both use `scipy.linalg.eig`, which is suspicious. ## Valgrind checks. To see if I could track it down, I had a go with valgrind. This isn't guaranteed to find everything, because I'm not using a debug build of Python, and Python also typically optimises small allocations by using a custom allocator into some pre-allocated space it manages itself - invalid writes that still fall within this may not get detected by valgrind. Here is the output of `valgrind` running on the `kraus.py` file I wrote in the previous section: [kraus_valgrind.txt](https://github.com/qutip/qutip/files/6370180/kraus_valgrind.txt) (note I filtered out like 30,000 errors that stem from Python's internal memory management - they're nothing to worry about, they're just what happens when you have your own allocator). The important part is. ```; ==54133== Invalid write of size 8; ==54133== at 0x10AFAFA8A: ??? (in /Users/jake/.anaconda3/envs/py38/lib/libmkl_intel_thread.dylib); ==54133== by 0xFFFFFFFF: ???; ==54133== by 0x1162E4DEF: ???; ==54133== by 0x1162E3A5F: ???; ==54133== by 0x10550EB3F: ???; ==54133== by 0x3FEFFFFFFFFFFFFF: ???; ```. Obviously I don't have the debugging symbols for MKL, so it's pretty hard to say where exactly it's coming from, but it is at least clearly inside that library. I ran `valgrind` on the `Malloc.py` file above, and get the exact same invalid write, which is promising. So the most likely public Python call is `scipy.linalg.eig`. ## Minimal reproducer. Ok, so now let me cut it down to a minimum `eig.py`:. ```python; import numpy as np; import scipy.linalg. x = np.random.rand(25, 25) + 1j*np.random.rand(25, 25); scipy.linalg.eig(x); ```. Note that this file does not even use",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:5535,error,errors,5535,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,2,['error'],['errors']
Availability,1+0ffec37-py3.6-linux-x86_64.egg/qutip/hardware_info.py 72 32 56%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/settings.py 24 2 92%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:50976,ERROR,ERROR,50976,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"1- (#1196 ) The error caused another one and the original message was lost, should work properly.; 2- (#1081 ) Added some check to catch keyboard interrupt in some cython functions: `mcsolve`, `stochastic` and `qobjevo`'s cython functions.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1199:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/1199,1,['error'],['error']
Availability,"1. You would not get the correct jump statistics.; 2. If you dont jump at the correct time, then you introduce another source of error. Then the next jump time will be affected and so on.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/503#issuecomment-232399813:129,error,error,129,https://qutip.org,https://github.com/qutip/qutip/issues/503#issuecomment-232399813,1,['error'],['error']
Availability,1. `self.N` in `QubitCircuit` is not the number of gates but the number of qubits.; 2. The error of index excesses number of gates was not captured.; 3. `self.gates.remove(self.gates[self.N - i])` removes the first match but not the last.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1242:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/1242,1,['error'],['error']
Availability,"1. inside the ""Actions"" tab at the top of the GitHub page, you will only see workflows that are present in the code in the default git branch. `dev.major` isn't QuTiP's default branch, so the workflows won't appear immediately after this is merged, only when the `.github/workflows/build.yml` file also exists in `master`. 2. nothing prevents you from running the workflow on a fork, and there's no way and no reason to prevent this - it's also how I tested it. If you did run it on a fork, you'd be using your own GitHub Actions credits (it doesn't cost us anything because we're an open-source project). Only qutip/qutip knows the secret to publish to PyPI, so no fork can succeed on that. The branch check here serves two purposes: the first is that I needed some ""tickbox"" to let the admin decide at runtime whether they needed to publish the package or just build the wheels for personal download; the second is that we release off release branches, not master, so there needed to be an input to say _which_ branch should be built. 3. it's not 100% necessary, but it's the right thing to do. It decouples the project data from the setup code, which makes it much easier to modify both, and allows other tools to access the data. There are other PEPs in the works as well that will move all this data into `pyproject.toml`, rather than just `setup.cfg`. 4. oh, that's useful. I didn't really know or look into it, because it was only a temporary thing anyway. I might actually retire this PR and make it against `master` instead. It's functionally the same as this one, and most of the diff is the same, except that its `setup.py` is better organised, like Simon suggested.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-801289045:893,down,download,893,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-801289045,1,['down'],['download']
Availability,"1. version 3.2.0 can not run testing in my mac system OS X EI Capitan. When I try:; `$ python3 -c ""import qutip.testing as qt; qt.run()""`; I get the follow message:; ; > ---; > ; > Ran 0 tests in 0.000s; 2. However, the testing.py and the folder 'tests' exist. I can run the test in the 'tests' folder one-by-one. For example, when I run:; `$ sudo python3 test_mesolve.py`; I get; ; > .....................; > Ran 21 tests in 48.167s; > ; > OK; 3. `sudo` is needed here for permission. For example, when I run: ; `$ python3 test_mesolve.py`; I get a set of the following error message. > # .....E...E.E...E..E..; > ## ERROR: mesolve: time-dependence as array with super as init cond; > ; > Traceback (most recent call last):; > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; > self.test(*self.arg); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/tests/test_mesolve.py"", line 638, in testMETDDecayAsArray; > out1 = mesolve(H, psi0, tlist, c_op_list, []); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/mesolve.py"", line 277, in mesolve; > progress_bar); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/mesolve.py"", line 661, in _mesolve_list_str_td; > cgen.generate(config.tdname + "".pyx""); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/cy/codegen.py"", line 116, in generate; > self.file(filename); > File ""/Library/Frameworks/Python.framework/Versions/3.5/lib/python3.5/site-packages/qutip-3.2.0.dev0-py3.5-macosx-10.6-intel.egg/qutip/cy/codegen.py"", line 78, in file; > self.file = open(filename, ""w""); > PermissionError: [Errno 13] Permission denied: 'rhs165050.pyx",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/445:571,error,error,571,https://qutip.org,https://github.com/qutip/qutip/issues/445,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"14573436/57989417-45d94380-7ad5-11e9-9694-623fec86865b.png"">. ## PyPI downloads; ![pip-install-qutip-png](https://user-images.githubusercontent.com/14573436/57979590-df174400-7a5a-11e9-807e-c2f46bbb830e.png). With `pypinfo` we can also easily extract other information on users' machines details, such as python usage, which can provide guidance on aspects: . ### Python version; #### 2018; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 47.33% | 4,079 |; | 2.7 | 24.25% | 2,090 |; | 3.7 | 13.97% | 1,204 |; | 3.5 | 12.43% | 1,071 |; | 3.4 | 1.94% | 167 |; | 2.6 | 0.09% | 8 |; | Total | | 8,619 |. #### 2017; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 2.7 | 51.55% | 4,333 |; | 3.6 | 22.13% | 1,860 |; | 3.5 | 19.73% | 1,658 |; | 3.4 | 6.00% | 504 |; | 3.3 | 0.35% | 29 |; | 2.6 | 0.18% | 15 |; | 3.7 | 0.05% | 4 |; | 3.2 | 0.02% | 2 |; | Total | | 8,405 |. This information is relevant also regarding #882. About OS:; ### Operating System; #### 2018; | system_name | percent | download_count |; | -------------- | ------: | -------------: |; | Linux | 57.25% | 4,934 |; | Windows | 26.15% | 2,254 |; | Darwin | 16.38% | 1,412 |; | CYGWIN_NT-10.0 | 0.08% | 7 |; | FreeBSD | 0.07% | 6 |; | CYGWIN_NT-6.1 | 0.03% | 3 |; | DragonFly | 0.02% | 2 |; | MSYS_NT-10.0 | 0.01% | 1 |; | Total | | 8,619 |. This information is relevant for choices such as #959. . ### Country ; #### 2018; | country | percent | download_count |; | ------- | ------: | -------------: |; | US | 38.07% | 2,355 |; | None | 15.97% | 988 |; | DE | 10.01% | 619 |; | CN | 7.36% | 455 |; | NL | 6.16% | 381 |; | IN | 5.63% | 348 |; | GB | 5.42% | 335 |; | JP | 4.57% | 283 |; | CH | 3.46% | 214 |; | CA | 3.36% | 208 |; | Total | | 6,186 |. This data allows to better understand the user base of QuTiP. . * With google analytics it would be possible to keep track of QuTiP's zipped folder downloads from the qutip.org website.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:3179,down,downloads,3179,https://qutip.org,https://github.com/qutip/qutip/issues/997,1,['down'],['downloads']
Availability,"14798043-0.36381018j, 0.19057482+0.j ]],. [[ 0.74030166+0.j , -0.42252924+0.11715014j],; [-0.42252924-0.11715014j, 0.25969834+0.j ]],; [[ 0.76627252+0.j , 0.14479804+0.39765874j],; [ 0.14479804-0.39765874j, 0.23372748+0.j ]],; [[ 0.69965345+0.j , 0.4260361 -0.16920917j],; [ 0.4260361 +0.16920917j, 0.30034655+0.j ]],; [[ 0.80355468+0.j , 0.36706718-0.15204028j],; [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) . predictions=[mesolve(H,; Qobj(estados_val[i]),; time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]`. ```; `---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-26-ef5799d8412d> in <module>; 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. <ipython-input-26-ef5799d8412d> in <listcomp>(.0); 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); 515 ; 516 if not r.successful():; --> 517 raise Exception(""ODE integration error: Try to increase ""; 518 ""the allowed number of substeps by increasing ""; 519 ""the nsteps parameter in the Options class.""). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553:2129,error,error,2129,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553,2,['error'],['error']
Availability,"245](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=244) progress_bar, dims=rho0.dims); [246](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=245) res.num_collapse = len(c_ops); [248](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=247) if e_ops_dict:. File ~/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py:496, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); [493](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=492) progress_bar.update(t_idx); [495](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=494) if not r.successful():; --> [496](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=495) raise Exception(""ODE integration error: Try to increase ""; [497](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=496) ""the allowed number of substeps by increasing ""; [498](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=497) ""the nsteps parameter in the Options class.""); [500](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=499) if opt.store_states or expt_callback:; [501](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=500) cdata = get_curr_state_data(r). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.; ```. ### Expected Behaviour. The evolution should have reproduced the result given in the tutorial notebook. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.1; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: 3.5.0; Py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:4890,error,error,4890,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['error'],['error']
Availability,"2dd4680 and b6dcc28 fix the occasional segfaults I was getting, I believe. The error in `reshape_csr` was probably the randomly appearing one - I assume that for it to cause a segfault, either the output CSR needed to have been allocated on the edge of allocated memory (and then I probably would have seen it in the stack trace with `faulthandler`), or it needed to be called on a sufficiently small matrix that `mem.PyMem_Malloc` allocated into Python stack memory such that the next byte after `out.row_index` pointed into freed Python memory, causing a checksum error on the next `PyMem_Malloc` that hit it, or `PyMem_Free` on a previously created object. I was able to track down where these were coming from by judicious use of `gcc -fsanitize`, although had we been using Cython's `typedmemoryview`, setting `boundscheck=True` would also have caught it. Likewise, the error in `permute.dimensions_csr` would have been caught by setting `cdivision=False`, but I just didn't think to try that. It's probably not worth swapping to memory views just because of this, though - I was able to find it easily enough with `AddressSanitizer`, and memory views have a very non-trivial overhead on initialisation for our use case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332#issuecomment-668847474:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/pull/1332#issuecomment-668847474,5,"['down', 'error', 'fault']","['down', 'error', 'faulthandler']"
Availability,"3, 8]; matlab: [0, 8, 5, 7, 3, 6, 4, 2, 1, 9]; ```; (where I converted the `matlab` indexing into 0-based), however they both have the same ""bandwidth"" of 5, so I assume they are all equivalent. I don't really know anything about the theory here, and just went with what the `matlab` documentation said: https://uk.mathworks.com/help/matlab/ref/symrcm.html. In commit 0ce36d00 it is clear that the functions in `qutip.graph` were meant to be distinct from `Qobj`, so ideally they would be beyond our purview in this package. This actually has already lead to problems with the documentation, since the docstrings in; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/graph.py#L50-L53; and; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/graph.py#L71-L74; are out-of-date. I find that the only uses of `qutip.graph` are in `qutip.steadystate`, which uses `reverse_cuthill_mckee` and `weighted_bipartite_matching`. The former can be replaced directly with the `scipy` version, at the cost of ~10% speed. The latter is not yet in `scipy`, so we ought to perhaps keep it, since it is used and documented for `qutip.steadystate.steadystate`. All other functions in `qutip.graph` are not used, and not documented (and in `scipy` anyway). While obviously I don't want to trample on anybody's code, I think it might be worth considering how we can reduce the package complexity of `qutip`, especially while significant new complexity is frequently being added in the interests of speed. We only have a finite amount of resources to maintain the codebase, and it's already quite difficult to get a handle on bug reports, documentation, testing (what I'm working on in #1181), and keeping old features up-to-date with the new. In the tracking down of these points, I can also strongly advocate for a stricter policy on `git` commit messages and keeping the commit history tidy and descriptive, but I'll live to fight another day on that one!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1203:4107,down,down,4107,https://qutip.org,https://github.com/qutip/qutip/issues/1203,1,['down'],['down']
Availability,"3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =====================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:28251,ERROR,ERROR,28251,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"3/issues/2901&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/c9016bf464751a02b7e46f8b86504f47d4238784""><code>c9016bf</code></a> Release 1.26.17</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/01220354d389cd05474713f8c982d05c9b17aafb""><code>0122035</code></a> Backport GHSA-v845-jxx5-vc9f (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3139"">#3139</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/e63989f97d206e839ab9170c8a76e3e097cc60e8""><code>e63989f</code></a> Fix installing <code>brotli</code> extra on Python 2.7</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/2e7a24d08713a0131f0b3c7197889466d645cc49""><code>2e7a24d</code></a> [1.26] Configure OS for RTD to fix building docs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/57181d6ea910ac7cb2ff83345d9e5e0eb816a0d0""><code>57181d6</code></a> [1.26] Improve error message when calling urllib3.request() (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3058"">#3058</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/3c0148048a523325819377b23fc67f8d46afc3aa""><code>3c01480</code></a> [1.26] Run coverage even with failed jobs</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d94029b7e2193ff47b627906a70e06377a09aae8""><code>d94029b</code></a> Release 1.26.16</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/18e92145e9cddbabdf51c98f54202aa37fd5d4c8""><code>18e9214</code></a> Use trusted publishing for PyPI</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/d25cf83bbae850a290fe34ed1610ae55c0558b36""><code>d25cf83</code></a> [1.26] Fix invalid test_ssl_failure_midway_through_conn</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/25cca389496b86ee809c21e5b641aeaa74809263""><code>25cca38</code></a> [1.26] Fix test_ssl_object_attributes</li>; <li>Additional commits viewable in <a href=""https://github.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2236:3859,error,error,3859,https://qutip.org,https://github.com/qutip/qutip/pull/2236,1,['error'],['error']
Availability,"4.0.2 is now the latest release on PyPI. ; I can't see why anyone would be installing 4.0.1 now, except from some old package they had downloaded.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616#issuecomment-270816096:135,down,downloaded,135,https://qutip.org,https://github.com/qutip/qutip/issues/616#issuecomment-270816096,1,['down'],['downloaded']
Availability,"449 . ~\Anaconda3\lib\distutils\command\build_ext.py in _build_extensions_serial(self); 472 with self._filter_build_errors(ext):; --> 473 self.build_extension(ext); 474 . ~\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 . ~\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 344 if not self.initialized:; --> 345 self.initialize(); 346 compile_info = self._setup_compile(output_dir, macros, include_dirs,. ~\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 237 ; --> 238 vc_env = _get_vc_env(plat_spec); 239 if not vc_env:. ~\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 133 if not vcvarsall:; --> 134 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 135 . ImportError: Building module cqobjevo_compiled_coeff_8478972438562 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. The above exception was the direct cause of the following exception:. Exception Traceback (most recent call last); <ipython-input-79-356f01653dc9> in <module>; 4 ; 5 args = {'A': 6, 'sigma': 0.145}; ----> 6 output = qp.mesolve(H, ground, t, e_ops = [qp.sigmaz()], args=args); 7 ; 8 plt.plot(t, output.expect[0]). ~\Anaconda3\lib\site-packages\qutip\mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 216 if not use_mesolve:; 217 return sesolve(H, rho0, tlist, e_ops=e_ops, args=args, options=options,; --> 218 progress_bar=progress_bar, _safe_mode=_safe_mode); 219 ; 220 if isket(rho0):. ~\Anaconda3\lib\site-packages\qutip\sesolve.py in sesolve(H, psi0, tlist, e_ops, args, options, progress_bar, _safe_mode); 122 ss = H; 123 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 124 ss = _sesolve_QobjEvo(H, tlist, args, options); 125 elif callable(H):; 126 ss = _sesolve_func_td(H, args, options). ~",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914:7689,error,errors,7689,https://qutip.org,https://github.com/qutip/qutip/issues/1914,1,['error'],['errors']
Availability,"5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (1.4.1); Building wheels for collected packages: qutip; Building wheel for qutip (setup.py) ... done; Created wheel for qutip: filename=qutip-4.5.0-cp38-cp38-linux_x86_64.whl size=17905114 sha256=3f461cbc07b40c0de96b709ea20bca495c7ffe1b6060a533a1ab733107c161ab; Stored in directory: /home/jevon/.cache/pip/wheels/3a/4d/bf/1c8e9f7874f26a6510d78790d3ba518c98e674e5771110fe1e; Successf",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:1398,Down,Downloading,1398,https://qutip.org,https://github.com/qutip/qutip/issues/1246,1,['Down'],['Downloading']
Availability,"5 _build_ext.build_ext.run(self); 186 ; 187 def build_extensions(self):. F:\Anaconda3\lib\distutils\command\build_ext.py in run(self); 337 ; 338 # Now actually compile and link everything.; --> 339 self.build_extensions(); 340 ; 341 def check_extensions_list(self, extensions):. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in build_extensions(self); 191 for ext in self.extensions:; 192 ext.sources = self.cython_sources(ext.sources, ext); --> 193 self.build_extension(ext); 194 ; 195 def cython_sources(self, sources, extension):. F:\Anaconda3\lib\distutils\command\build_ext.py in build_extension(self, ext); 531 debug=self.debug,; 532 extra_postargs=extra_args,; --> 533 depends=ext.depends); 534 ; 535 # XXX outdated variable, kept here in case third-part code. F:\Anaconda3\lib\distutils\_msvccompiler.py in compile(self, sources, output_dir, macros, include_dirs, debug, extra_preargs, extra_postargs, depends); 302 ; 303 if not self.initialized:; --> 304 self.initialize(); 305 compile_info = self._setup_compile(output_dir, macros, include_dirs,; 306 sources, depends, extra_postargs). F:\Anaconda3\lib\distutils\_msvccompiler.py in initialize(self, plat_name); 195 plat_spec = PLAT_TO_VCVARS[plat_name]; 196 ; --> 197 vc_env = _get_vc_env(plat_spec); 198 if not vc_env:; 199 raise DistutilsPlatformError(""Unable to find a compatible "". F:\Anaconda3\lib\distutils\_msvccompiler.py in _get_vc_env(plat_spec); 83 vcvarsall, vcruntime = _find_vcvarsall(plat_spec); 84 if not vcvarsall:; ---> 85 raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); 86 ; 87 try:. ImportError: Building module rhs75680 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']; ```; I have tried it many times. Any other functions in Floquet Formalism will still have this problem.; Here is my version information:; ![image](https://user-images.githubusercontent.com/30772228/38968512-6240026a-43be-11e8-9ca7-4179b5f4bac5.png). I would appreciate your reply!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:8870,error,errors,8870,https://qutip.org,https://github.com/qutip/qutip/issues/854,1,['error'],['errors']
Availability,"5 seems also fine for me. We default to the dense solver when all the eigenvalues are required, even if `sparse=True` and we then raise a Warning explaining why we do this and how to stop the warning. IIf I understood it correctly, 3 would be raising an Error instead of a warning, which may be a little bit more annoying for someone that just wants the code to work (?). I am fine with both though and I think they could be suitable issues for a ""medium"" level ""good_first_issue"" (if that makes sense 😅 ). 1 and 4 seem indeed too much work right now (but perhaps they can be tackled in the future). 2 may actually be separate an enhacement, that could be useful for some specific scenarios (?). But maybe it is best to wait for when this scenario is present to actually motivate the enhancement (?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1472647858:254,Error,Error,254,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1472647858,1,['Error'],['Error']
Availability,"5, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278052 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: Steady state: Driven cavity - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_steadystate.py"", line 490, in test_driven_cavity_power_gmres; use_precond=1); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 306, in steadystate; return _steadystate_power(A, ss_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 938, in _steadystate_power; check)); Exception: power-gmres failed to find solution in 1000 iterations. ----------------------------------------------------------------------; Ran 564 tests in 898.617s. FAILED (SKIP=9, errors=57)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:29634,ERROR,ERROR,29634,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,2,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c'; extra options: '-faltivec -I/System/Library/Frameworks/vecLib.framework/Headers'; clang: numpy/core/src/multiarray/array_assign_scalar.c; clang: numpy/core/src/multiarray/alloc.c; clang: numpy/core/src/multiarray/buffer.c; clang: numpy/core/src/multiarray/common.c; clang: numpy/core/src/multiarray/conversion_utils.c; clang: numpy/core/src/multiarray/datetime_strings.c; clang: numpy/core/src/multiarray/descriptor.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/einsum.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/lowlevel_strided_loops.c; clang: numpy/core/src/multiarray/hashdescr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/multiarraymodule.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/nditer_constr.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/refcount.c; clang: error: the clang compiler does not support 'faltivec', p",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:65188,error,error,65188,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,6_64.egg/qutip/utilities.py 117 83 29%; /home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/version.py 3 0 100%; --------------------------------------------------------------------------------------------------------------------------------------------------------------------------; TOTAL 427 241 44%; =========================== short test summary info ============================; ERROR ../tests/test_basis_transformation.py; ERROR ../tests/test_brmesolve.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_brmesolve_td.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_brtools.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_cavityqed.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_control_pulseoptim.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_correlation.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_countstat.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_cy_structs.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:51304,ERROR,ERROR,51304,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68637,error,error,68637,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -fPIC -O2 -isystem /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include -arch arm64 -DNPY_INTERNAL_BUILD=1 -DHAVE_NPY_CONFIG_H=1 -D_FILE_OFFSET_BITS=64 -D_LARGEFILE_SOURCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68871,error,error,68871,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal, assert_almost_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py:2: in <module>; from numpy.testing import (run_module_suite, assert_,; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py ________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:21039,ERROR,ERROR,21039,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278046 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: rhs_reuse : pyx filenames match for rhs_reus= True; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_bu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:2390,error,errors,2390,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278047 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:6819,error,errors,6819,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278048 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td list str H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ex",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:11321,error,errors,11321,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278049 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: state with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 1",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:15868,error,errors,15868,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278050 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: unitary operator with td interp H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:20366,error,errors,20366,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278051 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: sesolve: compare state and unitary operator evo - list str td; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:24908,error,errors,24908,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 345, in compile; self.initialize(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 238, in initialize; vc_env = _get_vc_env(plat_spec); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccompiler.py"", line 134, in _get_vc_env; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module rhs278052 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']. ======================================================================; ERROR: Steady state: Driven cavity - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\tests\test_steadystate.py"", line 490, in test_driven_cavity_power_gmres; use_precond=1); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 306, in steadystate; return _steadystate_power(A, ss_args); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\steadystate.py"", line 938, in _steadystate_power; check)); Exception: power-gmres failed to find solution in 1000 iterations. ----------------------------------------------------------------------; Ran 564 tests in 898.617s. FAILED (SKIP=9, errors=57",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:29497,error,errors,29497,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,": <a href=""https://github.com/kjd/idna/compare/v3.6...v3.7"">https://github.com/kjd/idna/compare/v3.6...v3.7</a></p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/kjd/idna/blob/master/HISTORY.rst"">idna's changelog</a>.</em></p>; <blockquote>; <p>3.7 (2024-04-11); ++++++++++++++++</p>; <ul>; <li>Fix issue where specially crafted inputs to encode() could; take exceptionally long amount of time to process. [CVE-2024-3651]</li>; </ul>; <p>Thanks to Guido Vranken for reporting the issue.</p>; <p>3.6 (2023-11-25); ++++++++++++++++</p>; <ul>; <li>Fix regression to include tests in source distribution.</li>; </ul>; <p>3.5 (2023-11-24); ++++++++++++++++</p>; <ul>; <li>Update to Unicode 15.1.0</li>; <li>String codec name is now &quot;idna2008&quot; as overriding the system codec; &quot;idna&quot; was not working.</li>; <li>Fix typing error for codec encoding</li>; <li>&quot;setup.cfg&quot; has been added for this release due to some downstream; lack of adherence to PEP 517. Should be removed in a future release; so please prepare accordingly.</li>; <li>Removed reliance on a symlink for the &quot;idna-data&quot; tool to comport; with PEP 517 and the Python Packaging User Guide for sdist archives.</li>; <li>Added security reporting protocol for project</li>; </ul>; <p>Thanks Jon Ribbens, Diogo Teles Sant'Anna, Wu Tingfeng for contributions; to this release.</p>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/kjd/idna/commit/1d365e17e10d72d0b7876316fc7b9ca0eebdd38d""><code>1d365e1</code></a> Release v3.7</li>; <li><a href=""https://github.com/kjd/idna/commit/c1b3154939907fab67c5754346afaebe165ce8e6""><code>c1b3154</code></a> Merge pull request <a href=""https://redirect.github.com/kjd/idna/issues/172"">#172</a> from kjd/optimize-contextj</li>; <li><a href=""https://github.com/kjd/idna/commit/0394ec76ff022813e770ba1fd89658790ea35623""><code>0394ec7</code></a> Mer",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2392:1504,down,downstream,1504,https://qutip.org,https://github.com/qutip/qutip/pull/2392,1,['down'],['downstream']
Availability,": error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang comp",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:67498,error,error,67498,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,": list; Dimensions of object used for tensor products.; shape: list; Shape of underlying data structure (matrix shape).; copy: bool; Flag specifying whether Qobj should get a copy of the; input data, or use the original.; ```. but the actual `init` function has the form; ```; def __init__(self, arg=None, dims=None,; copy=True, superrep=None, isherm=None, isunitary=None):. ```; so the arguments `inpt` and `shape` aren't recognized. ### Code to Reproduce the Bug. ```shell; qt.Qobj(inpt=np.random.randn(4,4),dims=[[2,2],[2,2]]); ```. ### Code Output. ```shell; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); Cell In[10], line 1; ----> 1 qt.Qobj(inpt=np.random.randn(4,4),dims=[[2,2],[2,2]]). TypeError: Qobj.__init__() got an unexpected keyword argument 'inpt'; ```. ### Expected Behaviour. If I hover on `qt.Qobj` in VS Code, the signature actually shows `inpt` and not `arg`. It seems like there is some inconsistency in the name of this keyword? No error is expected. ### Your Environment. ```shell; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross and Asier Galicia.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.13.0; Cython Version: None; Matplotlib Version: 3.8.4; Python Version: 3.12.3; Number of CPUs: 10; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/joey/miniconda3/envs/qutip5/lib/python3.12/site-packages/qutip; ===================================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2480:1667,error,error,1667,https://qutip.org,https://github.com/qutip/qutip/issues/2480,1,['error'],['error']
Availability,":; qutip/tests/solver/test_mesolve.py:33: in TestMESolveDecay; ada = a.dag() * a; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ======================================================== short test summary info =========================================================; ERROR qutip/tests/core/test_gates.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/core/test_qobjevo.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_integrator.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ERROR qutip/tests/solver/test_mesolve.py - TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 4 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ============================================= 17 deselected, 40 warnings, 4 errors in 5.47s ==============================================; ```. ### Expected Behaviour. No errors. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.14.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:5318,ERROR,ERROR,5318,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['ERROR'],['ERROR']
Availability,":\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 163, in run; _build_ext.build_ext.run(self); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 337, in run; self.build_extensions(); File ""C:\Users\daniel\Anaconda\lib\site-packages\Cython\Distutils\build_ext.py"", line 171, in build_extensions; self.build_extension(ext); File ""C:\Users\daniel\Anaconda\lib\distutils\command\build_ext.py"", line 496, in build_extension; depends=ext.depends); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 473, in compile; self.initialize(); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 383, in initialize; vc_env = query_vcvarsall(VERSION, plat_spec); File ""C:\Users\daniel\Anaconda\lib\distutils\msvc9compiler.py"", line 271, in query_vcvarsall; raise DistutilsPlatformError(""Unable to find vcvarsall.bat""); ImportError: Building module qutip.cy.spmatfuncs failed: ['DistutilsPlatformError: Unable to find vcvarsall.bat\n']. I tried testing to see if it was installed correctly by typing import qutip.testing as qt and I get. Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-3-ae6395ba7937>"", line 1, in <module>; import qutip.testing as qt; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip__init__.py"", line 62, in <module>; qutip.settings.ipython = False; AttributeError: 'module' object has no attribute 'settings'. I have also tried downloading the file, putting it in the folder Anaconda\pkgs, opening a command window, setting the path and installing it there. I don't get any error messages but I still cannot seem to import QuTiP. What am I doing wrong?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:5007,down,downloading,5007,https://qutip.org,https://github.com/qutip/qutip/issues/343,2,"['down', 'error']","['downloading', 'error']"
Availability,":digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:60: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:18: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:50: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:661:16: error: no template named 'numeric_limits'; using _Lim = numeric_limits<_IntT>;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:664:12: error: use of undeclared identif",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:1411,error,error,1411,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,1,['error'],['error']
Availability,"; <li>winbuild: Refactor dependency versions into constants <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7843"">#7843</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Build macOS arm64 wheels natively <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7852"">#7852</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed typo <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7855"">#7855</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Open 16-bit grayscale PNGs as I;16 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7849"">#7849</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle truncated chunks at the end of PNG images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7709"">#7709</a> [<a href=""https://github.com/lajiyuan""><code>@​lajiyuan</code></a>]</li>; <li>Match mask size to pasted image size in GifImagePlugin <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7779"">#7779</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Changed SupportsGetMesh protocol to be public <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7841"">#7841</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Release GIL while calling <code>WebPAnimDecoderGetNext</code> <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7782"">#7782</a> [<a href=""https://github.com/evanmiller""><code>@​evanmiller</code></a>]</li>; <li>Fixed reading FLI/FLC images with a prefix chunk <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7804"">#7804</a> [<a href=""https://github.com/twolife""><code>@​twolife</code></a>]</li>; <li>Updated package name for Tidelift <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7810"">#7810</a> [<a href=""https://github.com/radarhere""><code",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2381:8626,mask,mask,8626,https://qutip.org,https://github.com/qutip/qutip/pull/2381,1,['mask'],['mask']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_enr_state_operator.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_entropy.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_expect.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_fastsparse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:6817,ERROR,ERROR,6817,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/test_qubit_evolution.py _____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_qubitcircuit.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qubits.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_rand.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:18642,ERROR,ERROR,18642,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_eigenstates.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________ ERROR collecting qutip/tests/test_enr_state_operator.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_entropy.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_expect.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:6344,ERROR,ERROR,6344,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_fastsparse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_fileio.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_floquet.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_gates.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:8236,ERROR,ERROR,8236,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_heom_solver.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_interpolate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mcsolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:10601,ERROR,ERROR,10601,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_interpolate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mcsolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_metrics.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:11074,ERROR,ERROR,11074,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_scattering.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sp_eigs.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sparse.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:21480,ERROR,ERROR,21480,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_three_level.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_utilities.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_wigner.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; !!!!!!!!!!!!!!!!!!! Interrupted: 60 errors during collection !!!!!!!!!!!!!!!!!!!; =========================== 60 error in 1.85 seconds ===========================; (base) cln-232-18:qutip nathanshammah$; ```; this on the 4.4.0 release version. ; On the dev version, ; ```; (qdev) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-5.0.1, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip;",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:28575,ERROR,ERROR,28575,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_rhs_reuse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_scattering.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sp_eigs.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:21007,ERROR,ERROR,21007,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_spinchain.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_spmath.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_states.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_steadystate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:23372,ERROR,ERROR,23372,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_superoper.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_td_formats.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_tensor.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_three_level.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:27156,ERROR,ERROR,27156,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_expect.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_fastsparse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_fileio.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_floquet.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:7763,ERROR,ERROR,7763,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_fileio.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_floquet.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_gates.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_graph.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:8710,ERROR,ERROR,8710,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_floquet.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_gates.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_graph.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_heom_solver.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:9183,ERROR,ERROR,9183,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mcsolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_mesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_metrics.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_mkl.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:11547,ERROR,ERROR,11547,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_metrics.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_mkl.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_openmp.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_operators.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/test",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:12493,ERROR,ERROR,12493,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_openmp.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_operators.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_parallel.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ____________ ERROR collecting qutip/tests/test_partial_transpose.py ____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:13438,ERROR,ERROR,13438,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qubits.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_rand.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_random.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_rhs_reuse.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:19588,ERROR,ERROR,19588,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sesolve.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sp_eigs.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sparse.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_spinchain.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:21953,ERROR,ERROR,21953,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_sparse.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ________________ ERROR collecting qutip/tests/test_spinchain.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_spmath.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_states.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:22899,ERROR,ERROR,22899,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_piqs.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_propagator.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_ptrace.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qft.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:15331,ERROR,ERROR,15331,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qft.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; __________________ ERROR collecting qutip/tests/test_qobj.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qobjevo.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qpt.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:16750,ERROR,ERROR,16750,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"; [248](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=247) if e_ops_dict:. File ~/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py:496, in _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, opt, progress_bar, dims); [493](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=492) progress_bar.update(t_idx); [495](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=494) if not r.successful():; --> [496](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=495) raise Exception(""ODE integration error: Try to increase ""; [497](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=496) ""the allowed number of substeps by increasing ""; [498](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=497) ""the nsteps parameter in the Options class.""); [500](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=499) if opt.store_states or expt_callback:; [501](file:///Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip/mesolve.py?line=500) cdata = get_curr_state_data(r). Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.; ```. ### Expected Behaviour. The evolution should have reproduced the result given in the tutorial notebook. ### Your Environment. ```shell; QuTiP Version: 4.7.0; Numpy Version: 1.21.1; Scipy Version: 1.7.3; Cython Version: None; Matplotlib Version: 3.5.0; Python Version: 3.9.0; Number of CPUs: 8; BLAS Info: Generic; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /Users/lzawbrito/miniforge3/envs/pulsee/lib/python3.9/site-packages/qutip; ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:5542,error,error,5542,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['error'],['error']
Availability,"; ^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 338, in get_requires_for_build_wheel; return self._get_build_requires(config_settings, requirements=['wheel']); ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^; File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 320, in _get_build_requires; self.run_setup(); File ""/private/var/folders/h9/04p7x4ds0hvfmd80jt8gx3kc0000gn/T/pip-build-env-dzdmg7x6/overlay/lib/python3.11/site-packages/setuptools/build_meta.py"", line 335, in run_setup; exec(code, locals()); File ""<string>"", line 247, in <module>; File ""<string>"", line 46, in process_options; File ""<string>"", line 130, in _determine_version; AttributeError: module 'packaging.version' has no attribute 'LegacyVersion'; [end of output]; ; note: This error originates from a subprocess, and is likely not a problem with pip.; error: subprocess-exited-with-error. × Getting requirements to build wheel did not run successfully.; │ exit code: 1; ╰─> See above for output. note: This error originates from a subprocess, and is likely not a problem with pip.; ```. ### Expected Behaviour. Should install `qutip` without errors. ### Your Environment. ```shell; QuTip Version: 4.7.0; Python version: 3.11.0; `packaging` version: 22.0; `pip` version: 22.3.1; ```. ### Additional Context. I explicitly mention Python 3.11 because I failed to replicate the issue on a fresh Python 3.10 environment. . EDIT: Looking deeper into the [qutip built distributions](https://pypi.org/project/qutip/#files), the reason why this is failing only for Python 3.11 is because earlier versions of Python have built distributions, unlike Python 3.11. . This indicates that building the wheel from source is generally broken, which I confirmed by forcing an installation from s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036:2359,error,error,2359,https://qutip.org,https://github.com/qutip/qutip/issues/2036,1,['error'],['error']
Availability,"<!--; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description.; -->. **Description**; Index error in stochastic `smesolve` made `milstein` solver with `heterodyne` method converge only O(0.5) instead of the O(1) expected. This fix it. **Changelog**; Fixed typo in stochastic code affecting `heterodyne` detection efficiency.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1283:1105,error,error,1105,https://qutip.org,https://github.com/qutip/qutip/pull/1283,1,['error'],['error']
Availability,"</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#5901</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure that BMP pixel data offset does not ignore palette <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5899"">#5899</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Limit quantized palette to number of colors <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5879"">#5879</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use latin1 encoding to decode bytes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5870"">#5870</a> [<a href",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:1996,error,error,1996,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['error'],['error']
Availability,"<blockquote>; <h2>v1.22.0</h2>; <h1>NumPy 1.22.0 Release Notes</h1>; <p>NumPy 1.22.0 is a big release featuring the work of 153 contributors; spread over 609 pull requests. There have been many improvements,; highlights are:</p>; <ul>; <li>Annotations of the main namespace are essentially complete. Upstream; is a moving target, so there will likely be further improvements,; but the major work is done. This is probably the most user visible; enhancement in this release.</li>; <li>A preliminary version of the proposed Array-API is provided. This is; a step in creating a standard collection of functions that can be; used across application such as CuPy and JAX.</li>; <li>NumPy now has a DLPack backend. DLPack provides a common interchange; format for array (tensor) data.</li>; <li>New methods for <code>quantile</code>, <code>percentile</code>, and related functions. The; new methods provide a complete set of the methods commonly found in; the literature.</li>; <li>A new configurable allocator for use by downstream projects.</li>; </ul>; <p>These are in addition to the ongoing work to provide SIMD support for; commonly used functions, improvements to F2PY, and better documentation.</p>; <p>The Python versions supported in this release are 3.8-3.10, Python 3.7; has been dropped. Note that 32 bit wheels are only provided for Python; 3.8 and 3.9 on Windows, all other wheels are 64 bits on account of; Ubuntu, Fedora, and other Linux distributions dropping 32 bit support.; All 64 bit wheels are also linked with 64 bit integer OpenBLAS, which should fix; the occasional problems encountered by folks using truly huge arrays.</p>; <h2>Expired deprecations</h2>; <h3>Deprecated numeric style dtype strings have been removed</h3>; <p>Using the strings <code>&quot;Bytes0&quot;</code>, <code>&quot;Datetime64&quot;</code>, <code>&quot;Str0&quot;</code>, <code>&quot;Uint32&quot;</code>,; and <code>&quot;Uint64&quot;</code> as a dtype will now raise a <code>TypeError</code>.</p>; <p>(<a h",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1940:1233,down,downstream,1233,https://qutip.org,https://github.com/qutip/qutip/pull/1940,1,['down'],['downstream']
Availability,"= gates.qubit_clifford_group(); qutip/core/gates.py:815: in qubit_clifford_group; X = sigmax(); qutip/core/operators.py:387: in sigmax; return _SIGMAX.to(dtype, True); qutip/core/qobj.py:395: in to; _data.to(data_type, self._data),; qutip/core/data/convert.pyx:395: in qutip.core.data.convert._to.__call__; return self._convert[to_type, from_type](data); qutip/core/data/convert.pyx:101: in qutip.core.data.convert._converter.__call__; arg = self.functions[i](arg); qutip/core/data/dia.pyx:341: in qutip.core.data.dia.from_csr; cpdef Dia from_csr(CSR matrix):; qutip/core/data/dia.pyx:353: in qutip.core.data.dia.from_csr; return Dia((data, diags), shape=matrix.shape, copy=False); qutip/core/data/dia.pyx:134: in qutip.core.data.dia.Dia.__init__; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; ___________________________________________ ERROR collecting qutip/tests/core/test_qobjevo.py ____________________________________________; qutip/tests/core/test_qobjevo.py:72: in <module>; rand_stochastic(N).to(_data.CSR),; qutip/random_objects.py:871: in rand_stochastic; return Qobj(M, dims=dims).to(dtype); qutip/core/qobj.py:307: in __init__; self._initialize_data(arg, dims, copy); qutip/core/qobj.py:295: in _initialize_data; self._data = _data.create(arg, copy=copy); qutip/core/data/convert.pyx:477: in qutip.core.data.convert._create.__call__; return create(arg, shape, copy=copy); qutip/core/data/csr.pyx:139: in qutip.core.data.csr.CSR.__init__; self._scipy = _csr_matrix(data, col_index, row_index, self.shape); qutip/core/data/csr.pyx:56: in qutip.core.data.csr._csr_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; _________________________________________ ERROR collecting qutip/tests/solver/test_integrator.py ____________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:1686,ERROR,ERROR,1686,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['ERROR'],['ERROR']
Availability,"=""https://redirect.github.com/python-pillow/Pillow/issues/7497"">#7497</a> [<a href=""https://github.com/ZachNagengast""><code>@​ZachNagengast</code></a>]</li>; <li>Add .git-blame-ignore-revs file <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7528"">#7528</a> [<a href=""https://github.com/akx""><code>@​akx</code></a>]</li>; <li>Attempt memory mapping when tile args is a string <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7565"">#7565</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fill identical pixels with transparency in subsequent frames when saving GIF <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7568"">#7568</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed unnecessary string length check <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7560"">#7560</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Determine mask mode in Python instead of C <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7548"">#7548</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Corrected duration when combining multiple GIF frames into single frame <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7521"">#7521</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Handle disposing GIF background from outside palette <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7515"">#7515</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Seek past the data when skipping a PSD layer <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7483"">#7483</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>ImageMath: Inline <code>isinstance</code> check <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7623"">#7623</a> [<a href=""https://git",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:5093,mask,mask,5093,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['mask'],['mask']
Availability,"==========; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.7.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.9.2; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:5852,echo,echo,5852,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['echo'],['echo']
Availability,"===========; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; nose.plugins.cover: ERROR: Coverage not available: unable to import coverage module; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+d377c997-py3.7-macos; x-10.9-x86_64.egg/qutip/__init__.py:161: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... Segmentation fault: 11; ~~~",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093:3909,fault,fault,3909,https://qutip.org,https://github.com/qutip/qutip/issues/1093,1,['fault'],['fault']
Availability,"============= warnings summary =================================================================================================; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122; /usr/lib/python3/dist-packages/_pytest/stepwise.py:122: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/stepwise; self.config.cache.set(""cache/stepwise"", []). /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396; /usr/lib/python3/dist-packages/_pytest/cacheprovider.py:396: PytestCacheWarning: could not create cache path /usr/lib/python3/dist-packages/qutip/tests/.pytest_cache/v/cache/nodeids; config.cache.set(""cache/nodeids"", sorted(self.cached_nodeids)). -- Docs: https://docs.pytest.org/en/stable/warnings.html; ========================================================================================= 11 passed, 2 warnings in 0.84s ==========================================================================================; XIO: fatal IO error 0 (Success) on X server "":1029""; after 366 requests (352 known processed) with 19 events remaining.; $ echo $?; 1; ```. **Expected behavior**. The XIO error should not be triggered. Exit value should be 0 not 1. **Your Environment**. Linux (Debian unstable). ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.6.2; Numpy Version: 1.19.5; Scipy Version: 1.7.0; Cython Version: 0.29.21; Matplotlib Version: 3.3.4; Python Version: 3.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639:5743,error,error,5743,https://qutip.org,https://github.com/qutip/qutip/issues/1639,1,['error'],['error']
Availability,============== short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/quti,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30164,ERROR,ERROR,30164,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"===============""); print(""\nValue of the average_states option: {}."".format(options.average_states)); print(""\nAvailable solver attributes:""); print(solution.__dict__.keys()); print(""\nCheck the type of the avg_states attribute""); print(type(solution.avg_states)); print(""\nThe states have not been averaged over. The shape of the output is {}, with the first dimension labelling the {} trajectories."".format(np.array(solution.states).shape, solution.ntraj)); ```. ### Code Output. ```shell; 10.0%. Run time: 1.02s. Est. time left: 00:00:00:09; 20.0%. Run time: 2.04s. Est. time left: 00:00:00:08; 30.0%. Run time: 3.10s. Est. time left: 00:00:00:07; 40.0%. Run time: 4.10s. Est. time left: 00:00:00:06; 50.0%. Run time: 5.11s. Est. time left: 00:00:00:05; 60.0%. Run time: 6.11s. Est. time left: 00:00:00:04; 70.0%. Run time: 7.19s. Est. time left: 00:00:00:03; 80.0%. Run time: 8.20s. Est. time left: 00:00:00:02; 90.0%. Run time: 9.21s. Est. time left: 00:00:00:01; Total run time: 10.22s; ==========================================; ==========================================. Value of the average_states option: True. Available solver attributes:; dict_keys(['solver', 'times', 'states', 'expect', 'num_expect', 'num_collapse', 'ntraj', 'seeds', 'col_times', 'col_which', 'ss', 'measurement', 'noise', 'traj_states', 'avg_states', 'se']). Check the type of the avg_states attribute; <class 'NoneType'>. The states have not been averaged over. The shape of the output is (500, 172, 50, 1), with the first dimension labelling the 500 trajectories.; ```. ### Expected Behaviour. I expect the states to be averaged over when the average_states option is passed. ### Your Environment. ```shell; QuTiP Version: 4.7.2; Numpy Version: 1.24.3; Scipy Version: 1.10.1; Cython Version: 0.29.35; Matplotlib Version: 3.7.1; Python Version: 3.10.6; Number of CPUs: 12; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. _No response_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2216:3349,Avail,Available,3349,https://qutip.org,https://github.com/qutip/qutip/issues/2216,1,['Avail'],['Available']
Availability,=============================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-pac,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30239,ERROR,ERROR,30239,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"==========================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ok; td_brmesolve: time-dependent a_ops ... ok; td_brmesolve: time-dependent a_ops tuple of strings ... ok; td_brmesolve: time-dependent a_ops tuple interp ... ok; td_brmesolve: time-dependent a_ops & c_ops interp ... ok; td_brmesolve: non-Hermitian e_ops check ... ok; td_brmesolve: states check ... ok; td_brmesolve: split ops #1 ... ok; td_brmesolve: split ops #2 ... ok; td_brmesolve: split ops, Cubic_Spline td-terms ... ok; td_brmesolve: split ops, multiple ... ok; td_brmesolve: Hamiltonian args ... ok; BR Tools : zheevr ... Segmentation fault: 11; ```. I'm unsure what is going on here. I tried reinstalling qutip without any change. Prior I had a lot of errors referring to xcrun but I fixed that by installing xcode. Is there something else I need to get this working?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1124:2717,fault,fault,2717,https://qutip.org,https://github.com/qutip/qutip/issues/1124,2,"['error', 'fault']","['errors', 'fault']"
Availability,"=[[dim],[dim]]) # This fails; # rho0 = qtip.Qobj(rho0.reshape([dim,dim]),dims=[[dim],[dim]]) # This works; qtip.mesolve(rho0=rho0,H=H,tlist=np.linspace(0,10,1),progress_bar=qtip.ui.EnhancedTextProgressBar()); ```. ### Code Output. ```shell; [ 0% ] Elapsed 0.00s / Remaining 00:00:00:00[1] 3281154 segmentation fault (core dumped); ```. ### Expected Behaviour. The code should exit without failure or throw a python error elaborating on the issue. ### Your Environment. ```shell; QuTiP Version: 4.6.2; Numpy Version: 1.21.4; Scipy Version: 1.6.0; Cython Version: 0.29.21; Matplotlib Version: 3.4.3; Python Version: 3.9.7; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/lala5th/.local/lib/python3.9/site-packages/qutip; ```. ### Additional Context. I ran the code through `gdb` to somewhat narrow down the cause of the issue. It seems that `dense2D_to_fastcsr_fmode` causes the segmentation fault, but the parameters passed to it seem fine at first glance, since I expect `ncols = 10000`. While I don't know how useful it is I will put the top of the stack trace (after this the only the call to `mesolve` is relevant in the stack trace). ```; #0 __pyx_pf_5qutip_2cy_9spconvert_6dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_v_ncols=10000, __pyx_v_nrows=<optimised out>, __pyx_v_mat=...) at qutip/cy/spconvert.cpp:9472; #1 __pyx_pw_5qutip_2cy_9spconvert_7dense2D_to_fastcsr_fmode (__pyx_self=<optimised out>, __pyx_args=<optimised out>, __pyx_kwds=<optimised out>) at qutip/cy/spconvert.cpp:9237; #2 0x000000000053a8eb in cfunction_call (func=<built-in function dense2D_to_fastcsr_fmode>, args=<optimised out>, kwargs=<optimised out>) at ../Objects/methodobject.c:543; #3 0x000000000051c24b in _PyObject_MakeTpCall (tstate=0x9561b0, callable=<built-in function dense2D_to_fastcsr_fmode>, args=<optimised out>, nargs=<optimised out>, keywords=<optimised out>) at ../Objects/call.c:191; #4 0x000",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:1873,fault,fault,1873,https://qutip.org,https://github.com/qutip/qutip/issues/1782,1,['fault'],['fault']
Availability,"> * We have added a Users Guide for the new solver, as a new subsection of the ""Monte Carlo Solver"" guide. On my machine, I can build the documentation without problems (there are some warnings, but unrelated to this pull request). However, the check here failed and I do not see a useful error message. Does someone have an idea what is going on?. The error in the documentation (HTTP Error 403) is unrelated the the actual build. It happen from time to time randomly... you can ignore it.; However the documentation build will fail on warnings. > * We have two example notebooks to add to qutip-notebooks. How to proceed in practice: do we open a separate pull request in qutip-notebooks?; ; qutip-notebook is no longer used, we migrated to qutip-tutorial. Please open a new PR there. > * The _run_one_traj function now exists 3 times, with practically identical code:; > https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L197; > https://github.com/qutip/qutip/blob/master/qutip/solver/mcsolve.py#L427; > https://github.com/pmenczel/qutip/blob/nonmarkovian-mcsolve/qutip/solver/nm_mcsolve.py#L160; > Maybe it would be a good idea to make the type of `Result` that is used for single trajectories generic in multi-trajectory solvers (just like the `resultclass` is already generic in solvers in general)? I have implemented that [here](https://github.com/pmenczel/qutip/commit/4a25709f90ed7c6dc2153011ee5a8110f3957c95) and could merge that commit into this PR if you think that's a good idea. There is a fourth `_run_one_traj` coming for the stochastic solver with also almost the same code...; Yes, some cleaning is needed and having a swap-able trajectory result class would be nice.; I looked at your implementation and it look fine.; I would just rename `trajectoryclass` to `trajectory_result_class` or something similar, otherwise it make me think it refer to the removed `TrajectorySolver`. > I've noticed a small bug that has gone unnoticed because of this: ""step"" [here](h",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1446867702:289,error,error,289,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1446867702,5,"['Error', 'error']","['Error', 'error']"
Availability,"> * What is the reason that the time-dependent weights are still part of the trajectory result? That seems a bit inconsistent to me and I wonder if the `TrajectoryResult` class could perhaps just be removed?. The time-dependent weights are available as the `trace` attribute for each trajectories, so I though them as an (indirectly?) physical property of each trajectories. Since they are per trajectories, if feels normal to belong to the single trajectory result. But moving the logic to `NmmcResult` would simplify `MultiTrajResult` a lot and allow to remove `TrajectoryResult`. I will look into it this week.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2502#issuecomment-2296372851:240,avail,available,240,https://qutip.org,https://github.com/qutip/qutip/pull/2502#issuecomment-2296372851,2,['avail'],['available']
Availability,"> ; > ; > I have been trying out pytest for the last couple of days and we can start by using it for the testing as it is now. We need to replace installation [lines](https://github.com/qutip/qutip/blob/master/.travis.yml#L23) like this in the .travis.yml file to install pytest:; > ; > ```; > conda install mkl blas=*=mkl numpy scipy pytest cython coveralls pytest-cov; > ```; > ; > and then change the runner script to use pytest instead of `nose` by changing:; > ; > ```; > nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; > ```; > ; > to; > ; > ```; > pytest --verbosity=1 --cov=qutip qutip; > ```. I have submitted a pull request with these changes. Travis build fails with error ""file not found: qutip"". I suspect it is a problem with pytest, and I am investigating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958#issuecomment-481026053:699,error,error,699,https://qutip.org,https://github.com/qutip/qutip/issues/958#issuecomment-481026053,1,['error'],['error']
Availability,> ; > ; > Seems interesting but tests are failing... Hi Ericgig!. Thank you very much for looking into this! I haven't been able to figure out why the build is failing; the error messages quote parts of the code that I didn't even modify. Could you assist me in finding out why?. Thanks a bunch!; Nithin,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/912#issuecomment-466180105:173,error,error,173,https://qutip.org,https://github.com/qutip/qutip/pull/912#issuecomment-466180105,1,['error'],['error']
Availability,"> > I am not sure why it is only failing in the Python 3.8 case.; > ; > Well, it's a statistical average, so it can deviate. I don't think it has anything to do with Python 3.8. But probably it can be avoided? I guess its the same question as #1268; > ; > I'm thinking, what about adding a `targets` parameters to `QubitCircuit.run_statistics`. Usually, people don't interested in the full output state of the circuit because many of them are ancillary qubits. They can use `targets` to specify what is the qubits they want to look at. In the function, we can use `ptrace(state, targets)` to trace out the ancilla. Seems like a good idea, maybe we can add it as optional parameter to both `QubitCircuit.run_statistics` and `QubitCircuit.run`. Also, regarding Python 3.8, I was saying because both times it only failed in that test run, also never failed in any of my runs. Should I make tolerance higher ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640006594:887,toler,tolerance,887,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640006594,1,['toler'],['tolerance']
Availability,"> @arnelg What if we add a variable `shape` also to the `_super_tofrom_choi`, `choi_to_kraus`, and `kraus_to_choi` functions?; > In that way, if `shape=None` the function uses the old code, while if `shape=""rectangular""` it implements the new version of the code. I don't think this is a good idea. The ""square"" case is really just a special case of ""rectangular"", and there is no reason the user should need to specify that it is square or not through an additional argument; this information is already there by looking at the `Qobj` in question. The code as submitted already correctly handles a square input (as before), so why create a separate code path? Also by sticking to one code path we ensure that if there is an error, it only needs to be fixed once. > Moreover, for the sake of completeness, I think this option should be implemented also in the Stinespring and $\chi$ representation.; > Commenting the docstring on this issue could help the user, even if these are private functions.; > I have been reviewing this with @nathanshammah. Yeah good point. I will have a look at this together with @joshcombes. (It is fine to accept the current pull request, and we can open another one for further improvements, however.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-565329722:725,error,error,725,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-565329722,1,['error'],['error']
Availability,"> @cgranade I'm really liking the overall look of the Instrument class -- it's a much easier way to deal with measurements than calling the measurement operations all the time & of combine measurement operations with other operations on Qobjs. Thank you for the kind words!. > I'm keen to hear feedback from others too, but in the mean time I'm going to note some thoughts here for when I come back to this:; > ; > * It would be good to think about how all the operations on Qobj match up with QuTiP version 5 (since this draft is based on v4 currently).; > * We should decide whether to target QuTiP 4.7 or 4.7 and 5 for this. Target just v5 means not having to worry about making it nice in both, but will mean it'll be a bit more of a delay before release).; > . I'll admit I've not kept up as much with the 5.0 changes as I should have, but I'm happy either way; I can definitely see the benefit to targeting 5.0 and keeping code maintenance down, or to getting the feature out for folks to use sooner at the cost of more development work. > * I'd like to think about removing `Seq` and `Par` and replacing them with some simple rules for sequences, strings and numbers. Honestly, agreed; I tried a few different designs to try and get rid of those two classes, but they all felt a bit awkward and special-cased. Happy to revise, though, to lower the barrier to using the new feature. > This would match, e.g., `qutip.ket(""01"")` and `qutip.basis([2, 2], [0, 1])`. `Seq` and `Par` do however make it really clear that in one case measurements follow each other on the same subspaces and in the other they are performed simultaneously on different subspaces, so I'm not quite sure. Maybe there is some middle ground. My initial thought was to do something like use tuples instead of `Seq` and lists instead of `Par`, but that then ran into a couple issues. Namely, it wasn't as obvious what each kind of container meant, and it was harder to automatically flatten (e.g.: `Seq(1, Seq(2, 3), 4)` is id",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1687#issuecomment-951352562:934,mainten,maintenance,934,https://qutip.org,https://github.com/qutip/qutip/pull/1687#issuecomment-951352562,4,"['down', 'mainten']","['down', 'maintenance']"
Availability,"> @hodgestar shall we attempt to sort out the caching now, or get things moved over ahead of Unitary Hack and sort it out later? I don't think it's particularly a blocking issue - the tests still all run fine, after all. Definitely leave for later. > There's an argument against using `pip wheel` caching for us - we've historically used our tests to try and catch errors when using new versions of packages, which we'd lose if we start pinning versions to one particular thing. I don't think we need to pin to a particular version to benefit from the pip caching, but let's see later.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551#issuecomment-839773306:365,error,errors,365,https://qutip.org,https://github.com/qutip/qutip/pull/1551#issuecomment-839773306,1,['error'],['errors']
Availability,"> @hodgestar since yesterday our tests are failing for python3.9 ubuntu, but I can't reproduce the error locally... I you have time could you take a look. I haven't managed to reproduce locally either yet and the test failures are odd. There was an update to `ubuntu-latest` on `11 October 2021` so maybe that is related somehow? See https://github.com/actions/virtual-environments/blob/main/images/linux/Ubuntu2004-README.md. I've also clicked ""rerun"" in case there was some transient error with the roll out of the Ubuntu update to GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1689#issuecomment-944354143:99,error,error,99,https://qutip.org,https://github.com/qutip/qutip/pull/1689#issuecomment-944354143,3,"['error', 'failure']","['error', 'failures']"
Availability,"> According to the error message; > ; > ```; > WARNING: invalid signature for automodule ('qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:'); > WARNING: don't know which module to import for autodocumenting 'qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:' (try placing a ""module"" or ""currentmodule"" directive in the document, or giving an explicit module name); > ```; > ; > That should be the error source. Lets use; > ; > ```; > .. automodule:: qutip.core.gates; > :members: ...; > ```; > ; > first and see if it works. Thank you, lets try that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2148458661:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2148458661,2,['error'],['error']
Availability,"> Also, regarding Python 3.8, I was saying because both times it only failed in that test run, also never failed in any of my runs. Should I make tolerance higher ?. Ok.... Let me try restart the CI test once",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640007551:146,toler,tolerance,146,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640007551,1,['toler'],['tolerance']
Availability,"> As I understand it, the only way to avoid needing to touch `MANIFEST.in` is to not have files distributed with the test suite (or to have the temporary files by `*.py`, since `setup.py` automatically recognises them). That's not really a pytest thing, it's a `setuptools` one.; > ; > I don't think there's a problem distributing files as part of the tests. You can add a line which says; > ; > ```; > recursive-include qutip/tests/qasm_files *.qasm; > ```; > ; > to `MANIFEST.in`, and that should hopefully fix the problem. You won't have the problem locally, because you'll be running `./setup.py develop`, which ""installs"" in-place, so you don't notice the fact that you've missed files from the manifest. In the tests, it runs `./setup.py install`, which does the copy, missing files which aren't in the manifest.; > ; > Boxi: I'm not certain what more you'd like to do with fixtures here. Fixtures are good for setup and tear down, parametrisation and sharing resources (like network connections), but I'm not certain what further benefit you get for a test function which is testing whether it can open a known file, read it, and construct the expected output. I think Sidhant is already doing some nice parametrisation of his tests, from what I see.; > ; > Sidhant: I added a comment on the exception test, since pytest gives us an easier-to-read context manager you can use. It's also typically better practice to handle file paths like I did in that (using the overloaded `/` operator with `pathlib.Path`, or `os.path.join`) rather than manually putting in slashes. Windows _usually_ will do the right thing now with slashes, but it's better to let Python handle it for us. Thanks for this information, it seems to work ! I was wondering if the following statement is still needed (at all) in `PACKAGE_DATA` in setup.py? ; `'qutip/tests/qasm_files': ['*.qasm'],`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-656450639:932,down,down,932,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-656450639,1,['down'],['down']
Availability,"> Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses).; > ; > Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument. I addressed Simon's question. Also, I tried different solver options in mesolve including solver type, nsteps, relative and absolute tolerence, etc ... Also for RK45 I tried to change the parameters in order to see if the solutions coincide. They didn't. I don't know if there exists an analytically solvable problem in which both Hamiltonian and dissipation operators are time dependent, but if there is such a problem, then I can use it as a benchmark in order to compare QuTiP and RK45.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248:195,toler,tolerance,195,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986665248,2,['toler'],"['tolerance', 'tolerence']"
Availability,"> Consider what you're doing from a statistical sense here. If everything works correctly, then you're effectively trying a two-tail hypothesis test that your test binomial distribution has a probability of 0.25, given you made `n` observations of it. The analytic success rate of your test is then; > ; > ```python; > import scipy.stats; > def success(n, p, tol):; > dist = scipy.stats.binom(n, p); > return dist.cdf(n * (p+tol)) - dist.cdf(n * (p-tol)); > ```; > ; > where `success(4096, 0.25, 0.02)` is 99.67%. Since there are 5 independent runs on Travis, that's equivalent to a failure rate of 1.6% on every single CI run, which is several orders of magnitude too high. It's probably just luck that it was Python 3.8 on both occasions - it's a one-in-five chance that in two failing CI runs, it was the same setup both times.; > ; > You have to consider what is most appropriate to fix the test, and what you can reasonably test in ~1 second of runtime. You don't want to increase the tolerance too much, because then you can get a lot of false positives even if something is broken.; > ; > If you can bump the number of runs up to 100,000 and set the tolerance at 0.01, you'll have a per-test failure rate of ~3e-13, which is more like what we'd want. If you keep it at 4096, the tolerance should be more like 0.05 (which is pretty big tbh). Thanks for the excellent analysis. I don't think it's feasible to do 100,000 given the current. efficiency. It did give me incentive to make it somewhat faster. What is a good guideline for the maximum time a test can take. It seems like I can maybe do 150 runs in ~ 1s. In any case, it doesnt seem feasible to do even 4096 claims without taking quite a bit of time. Any ideas on how to structure the test differently ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640087689:583,failure,failure,583,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640087689,10,"['failure', 'toler']","['failure', 'tolerance']"
Availability,"> Don't put a link on a word if it doesn't specifically refer to the object you're linking to. Yeah, I was worried if linking words like ket, bra were needed or not. I'll remove them. . > The ""Raises"" section should only be for very non-obvious errors; > Don't put the error message in the description of a ""Raises"" section. No problem. I will remove errors created due to incorrect parameters and other obvious errors + error messages. I will add a parameters section if needed to clarify over ValueError. . > I saw a few places where changes in the formatting accidentally deleted a word, or hid some extra meaning. I think the accidental deletes might have been due to getting caught in some cut/copy/paste flow. . > Do you have the docs building correctly?. Yes, I do. I was a bit confused about how to try to format to functions not in API doc. So, I still tried to link a `ref` to them so that they are formatted similar to hyperlinks. I think a couple of these appear as italics.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1499#issuecomment-832138853:245,error,errors,245,https://qutip.org,https://github.com/qutip/qutip/pull/1499#issuecomment-832138853,5,['error'],"['error', 'errors']"
Availability,"> From what I understand, on intel, brmesolve seems to work correctly, but not on M1. This look like an issue with the eigensolver. Exactly. > Could you run the test suite to see if it fails the eigen and bloch redfield related tests: `pytest path_to_qutip/qutip/tests`. (Tests can take >30min). Yes it is failing these (and some others), but in particular it does fail everything in test_brmesolve.py and test_brmesolve_td.py. All failures I find seem to be related to the `Exception: ODE integration error` as mentioned in the original post.; On an emulated Intel terminal, the tests are all passing as expected.; This is strange, since I seem to find way more tests failing than reported in #1755.; Perhaps this is an issue with my installation, rather than qutip itself. I installed it in the standard way using conda (using the Apple Silicon version at 4.13). > Also could you look at the tensor directly:; > ; > ```; > R, H_eigenvector = bloch_redfield_tensor(sigmax(), a_ops=[[sigmax(), psd]]); > ```; > ; > If the tensor is wrong on M1, this would explain the error. Actually, that looks fine surprisingly enough (agrees with the Intel version). Thanks for the quick response. If I figure anything out, i'll let you know.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203341063:432,failure,failures,432,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203341063,3,"['error', 'failure']","['error', 'failures']"
Availability,"> Given that this PR is to fix a particular bug in `correlation`, please could you also add a reproduction for the bug in #1460 in order to ensure that it truly is fixed (I see no reason it shouldn't be from this), and to make sure that we catch any possible regressions in the future?. I modified test_correlation.py to catch this error. It was previously using a non-Hermitian expectation operator which is why it did not raise an error. I changed it to use an Hermitian operator. This means it would fail the test without the fix in mesolve. . However, I wonder now if the test should check for both Hermitian and non-Hermitian expectation operators. I did not add both tests because I did not want to make it slower. Should I make it to cover both cases?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-812849410:332,error,error,332,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-812849410,2,['error'],['error']
Availability,"> Hi @AGaliciaMartinez . Good to hear from you again ;). Hi! :smile: . > It seems that the hermitian check for the operator op evaluates as True. Yes, this is definitely the source of the error. Nice catch! I will try to compare the 4.7.1 version of qutip with the new pre lease of version 5.0.0 and see if we can provide a quick fix for it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1423168374:188,error,error,188,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1423168374,1,['error'],['error']
Availability,"> Hi @Canoming, thanks for spotting this error and fixing it. I'm surprised that this error is hidden here for so long.; > ; > There is still a flaw in the option for `remove=""all""`. When you remove the first element in a list, the rest elements will move forward and eventually leads to an index out of range error.; > For example, if you have a list `gates = [a, b, c]` and use `gates.pop(0)`.; > The list will become; > ; > ```; > >>> gates; > [b, c]; > ```; > ; > if you now iterate to `i=1`, you skip element `b`; > This can be solved by iterating in the inverse order.; > ; > ```; > elif name is not None and remove == ""all"":; > for i in reverse(range(len(self.gates))):; > ```. Ah, sure. Thanks to point it out. It's fixed now. I actually used the reversed order but then deleted it as I forgot why I did that. LOL",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1242#issuecomment-622099083:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/pull/1242#issuecomment-622099083,3,['error'],['error']
Availability,"> Hi, could you please tell us how you installed QuTiP and which python are you using? Just type the following in the terminal; > ; > ```; > which python; > ```; > ; > To check how QuTiP was installed (if on Linux or Mac):; > ; > ```; > pip freeze | grep ""qutip""; > ```; > ; > If on windows, download Anaconda and install QuTiP from conda-forge with; > ; > ```; > conda install -c conda-forge qutip; > ```; I created an environment for qutip and then used the following code ; conda install -c conda-forge qutip. I'm still seeing this error ModuleNotFoundError: No module named 'qutip'",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-647267470:292,down,download,292,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-647267470,2,"['down', 'error']","['download', 'error']"
Availability,"> Hi,; > ; > I installed qutip on my windows system and tried the testing codes and faced the problem (as the figure shows):; > ; > TypeError: Cannot convert _UnitedFuncCaller to qutip.cy.cqobjevo_factor.CoeffFunc; > ; > ![image](https://user-images.githubusercontent.com/13745165/60830800-9a9e5e00-a1ea-11e9-99d7-2ec24390083e.png); > ; > Here is the about() information:; > ; > QuTiP: Quantum Toolbox in Python; > Copyright (c) 2011 and later.; > A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade; > ; > QuTiP Version: 4.4.0.dev0; > Numpy Version: 1.16.4; > Scipy Version: 1.2.1; > Cython Version: 0.29.11; > Matplotlib Version: 3.1.0; > Python Version: 3.7.3; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: True; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Anaconda\envs\qutip\lib\site-packages\qutip-4.4.0.dev0-py3.7-win-amd64.egg\qutip; > ; > I would appreciate it if you can give me some advice to help me pass the testing codes!. Hi,; Has this problem been solved? I met this same error when installing qutip-4.4.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092:1067,error,error,1067,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519833092,1,['error'],['error']
Availability,"> However if `default_dtype` can be seen as _running in that mode_, it certainly could cause confusion. It's not clear how it is understood in some places. In `eigenstates`, if we run in `CSR` mode, then does that mean that we use the sparse eigen solver? It's a lot worst than the dense one. Or should only the returned ket be in CSR format?; > ; > In my tries, the dense steadystate was faster that the sparse one. Could it be an issue that some matrices where too big to fit in RAM forcing to use swap space? We could have a warning when matrices over a certain size are allocated. I guess this was mostly because I wasn't explicitly calling steadystate with sparse=False so it was getting converted back to CSR anyway, and slowing things down. Largely I see similar performance between CSR and dense (using sparse=False), unless I use very small systems (16x16 Liouvillians), though this seemed a bit scipy/method dependent. I guess as you said this also raises the question about whether stuff like eigenstates and steadystate() should default to using methods based on the data layer of the object, instead of kwargs? My feeling is not, since eigenstates+sparse can be bad and steadystate+largesystem+dense could be bad, so its worth having some default conversion cost in place. But I still like the idea of what gets returned to the user following default_dtype. but maybe we can see if this turns out to be an issue that people have in using data layers, could just be me!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-1953388192:742,down,down,742,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-1953388192,2,['down'],['down']
Availability,"> I added a test that compares `correlation_2op_1t` to its analytical solution. I was trying to match the `c_ops` of this new test to the ones appearing in `test_correlation_solver_equivalence`, which are:; > ` c_ops = [np.sqrt(G1 * (n_th+1)) * a, np.sqrt(G1 * n_th) * a.dag()]`; > However, the analytical solution I obtained for this case did not work unless I used a very small value for `n_th = 0.1`. I was wondering whether the analytical solution I got was wrong or whether this actually makes sense. I was thinking that the difference probably comes from the cut we use for the number of states (`N = 20`). I did a quick test and it seemed ok upto about n_th = 1 for N=20 and an atol of 2e-5. ; as an aside, I guess some minimal condition here is that the thermal occupation of the cut-off state should be smaller than the tolerance, which i guess you can get out of the analytic expression for the thermal state. maybe.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-813959317:829,toler,tolerance,829,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-813959317,1,['toler'],['tolerance']
Availability,"> I addressed all your comments in my new commit, but when I try to run the tests with pytest I get a strange error:. This is likely because qutip is not correctly installed. Could you try uninstalling qutip and reinstalling again?. > Also, to avoid the circular import problem with tensor, would it be better if I created a new py file (qutip.core.fermionic_operators.py) for these new operators? . A new file for this seems too much for me... I think `operators.py` is the best choice but it includes indeed mostly basic operators not using `tensor`. Maybe there is a better place for this @Ericgig ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2166#issuecomment-1565683451:110,error,error,110,https://qutip.org,https://github.com/qutip/qutip/pull/2166#issuecomment-1565683451,1,['error'],['error']
Availability,"> I did the pycodestyle on my code, but it is highlighting errors that were there in the original code. It returned lines that have >linespace errors and more, should I edit them too?. I am going to leave this up to you. It is not required as long as the lines you modified follow PEP8. Although, fixing the output of pycodestyle in the same file would be very much welcome :smile:. > The issue was to add __repr__ function to QobjEvo class. Do I need to add a test? If so, can someone help me with it?. We will indeed need a test for repr. It does not need to be very complicated and in fact, something similar to what you show in the description of this pr should work. In this case, we would create a few different `QobjEvo` that cover most of the cases and we would check that `qobjevo.__rerp__()` returns the expected string. This test should go in `qutip/tests/core/test_qobjevo.py`. You can take a look there to see example of how the tests are written. If this is your first time writing tests you may want to take a look at [our documentation](https://qutip.readthedocs.io/en/master/development/contributing.html#testing) and also at pytests documentation. > If the behavior of the code has changed or new feature has been added, please also update the documentation in the doc folder, and the [notebook](https://github.com/qutip/qutip-tutorials). Feel free to ask if you are not sure. This will not be necessary this time. > Include the changelog in a file named: doc/changes/<PR number>.<type> 'type' can be one of the following: feature, bugfix, doc, removal, misc, or deprecation (see [here](http://qutip.org/docs/latest/development/contributing.html#changelog-generation) for more information). `feature` should work here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2111#issuecomment-1455087838:59,error,errors,59,https://qutip.org,https://github.com/qutip/qutip/pull/2111#issuecomment-1455087838,2,['error'],['errors']
Availability,"> I don’t know. It worked for me when I tried to install QuTiP from source —with-openmp. The error was a different and I am on a different MacOS (I also tried a conda install llvm, but what worked was gcc for me, with openmp). I understand that you trying to install QuTiP? If so, how? conda / source / pip? Consider doing it via conda if you are interested in the stable version release (4.3), by activating the conda-forge channel as detailed in the documentation. If QuTiP is installed and you receive this error while doing a specific task, can you copy paste the message of qutip.about() here?; > […](#); > On Sat, 9 Mar 2019 at 14:37, Xiao ***@***.***> wrote: Try conda install gcc. Does that mean I should use gcc from the Anaconda directory? — You are receiving this because you commented. Reply to this email directly, view it on GitHub <[#965 (comment)](https://github.com/qutip/qutip/issues/965#issuecomment-471148065)>, or mute the thread <https://github.com/notifications/unsubscribe-auth/AN5ffFcanH6qaCezLIKtW4SflaVsZ63Aks5vU0iCgaJpZM4bmfhd> . I am installing QuTip from compiling the source code, because I want to use MKL. I didn't use the --with-openmp option as MKL is already openmp threaded. . After ""conda install gcc"" the compilation is passed and QuTip can be so far used without problems. Thanks for your help.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471155651:93,error,error,93,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471155651,2,['error'],['error']
Availability,"> I ran some comparisons to the old version, and everything looks good. There seems to be some speedup both to the RHS construction and the ODE solver for most cases. Thanks! I've now streamlined things a little more, so they might be slightly faster still. > Since each individual ADO is naturally a Qobj, having HierarchyADOsState store them an array or list of Qobjs makes sense I guess. I've put this down in the v5 TODO list (just to draw a line under this PR). > 2. How should the ado_state be stored on a results object? In particular, how should the change in e_ops signature be handled (for the HEOM solver the e_ops callables also take the full ADO state). I ended up always calling `e_ops` functions with `f(t, ado_state)`. This is a bit different to other solvers, but makes what the HEOMSolver considers the evolution state consistent. The density matrix part of the state is available as `ado_state.rho` so it's not a big hardship to retrieve just the system state. >> 3. Recheck the time dependent case.; > ; > From what I can see it looks good! Seems like basically you treat the entire RHS as an effective qobjevo? I ran through various > examples, and couldn't find any issues!. I simplified things a bit further. In the time-dependent case the RHS matrix is calculated without adding the Liouvillian to the diagonal and then the kron of the Liouvillian is added to the RHS at the end, resulting in a simpler QobjEvo. >> 4. The HEOM can't really take new QObjEvo arguments each time run is called because calculating the RHS again is quite expensive. Maybe something can be done?. Arguments are supported now because the full RHS is a QobjEvo!. >> 5. Compare performance to the HEOM in 4.7.; > ; > On the fermionic examples, with very-large system Hilbert space, there was a little slowdown in the RHS construction. Maybe the slowdown has gone away now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1145125739:405,down,down,405,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1145125739,4,"['avail', 'down']","['available', 'down']"
Availability,"> I think that the rendering is executed through the Visual Studio extension called ""[Jupyter Notebook Renderers](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter-renderers)"".; > ; > I apparently solved this issue by simply downgrading the version of this extension, since I read in the changelog of the latest version ""Removed rendering of text/latex in favor of built-in support."". Thus the problem was in the Visual Studio part, however it still remain opened in the case one decide to install the latest version of this extension.; > ; > Thank you. Thank you so much for sharing this!. The cell outputs that included Qobj with Latex code wasn't rendering properly for me just like your issue (although Latex code in the Markdown cells was rendering correctly). I spent hours and tried countless online suggestions to fix the issue with no success, until I re-installed the the 'Jupyter Notebook 'Renderers' extension to the old version (v1.0.4) before it removed the latex support. Now I have the option to 'change presentation' of the output cells so it uses the old version of the extension, and now it finally displays the output with the Latex rendered correctly!. Thank you again for suggesting the only solution that worked for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1809#issuecomment-1633135302:246,down,downgrading,246,https://qutip.org,https://github.com/qutip/qutip/issues/1809#issuecomment-1633135302,2,['down'],['downgrading']
Availability,"> I think this is a good addition. Whether it's accepted comes down to how much complexity it adds to the Bloch sphere class, I suspect. Perhaps open the PR and let's see what the code changes look like?. Thank you so much :D ; I will open a PR soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1683#issuecomment-933426001:63,down,down,63,https://qutip.org,https://github.com/qutip/qutip/issues/1683#issuecomment-933426001,1,['down'],['down']
Availability,"> I tried it locally and `show` print the figure twice, whether you provide a figure or not. `render` itself print the picture so having it in `show` make `display` redundant. Otherwise, it work fine. Where were you running your example? Python console, IPython console, Jupyter notebook? I'm guessing the IPython console because of the reference to `display`, but I wanted to double check.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619#issuecomment-988089216:165,redundant,redundant,165,https://qutip.org,https://github.com/qutip/qutip/pull/1619#issuecomment-988089216,1,['redundant'],['redundant']
Availability,"> I'm not sure the `Qobj permute` failing test is related, by the way. Yeah we actually figured this one out. It's a numerical round off error. `Qobj permute` uses `tidyup`, with the same numerical tolerance as is used when the equality of two `Qobj`s are compared in the test. Kind of lucky that it didn't fail before. We either have to change the test to use a larger tolerance in the comparison, or give an argument to `Qobj permute` to not use `tidyup`. This is not really related to this PR but I'll implement the change once we decide on the best solution. Does anyone have thoughts on why `Qobj permute` uses `tidyup` by default in the first place? I don't know how `permute` actually implements the permutation, but naively I would have thought that a permutation could be done without any numerical error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111:137,error,error,137,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-571353111,4,"['error', 'toler']","['error', 'tolerance']"
Availability,"> I've just spotted a bug in `isherm` on the new data layer, which is my fault for not getting the tests for that written yet. That may also be having some impact on the test fragility. Actually, I _didn't_ introduce a bug in `isherm`! It's just also present in the release version of QuTiP, but _masked_ by the `auto_tidyup`. In ""unrelated"" news: I discovered a dumb bug in `tidyup_dense`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-680059767:73,fault,fault,73,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-680059767,1,['fault'],['fault']
Availability,"> If I understand correctly it refers to line 300 in test_metrics, which has a new hellinger metric test by @wrzadkow . Could it be that using ""for _ in range(10):"" is a problem?. The following observations:; - `for _ in range(10)` is already in [line 128](https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L128) in `test_metrics.py` ; - [line 300](https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L300) is the end of docstring of `test_hellinger_monotonicity()` ; - the presence of `invalid escape sequence \o` in the error message; - this thread https://stackoverflow.com/questions/52335970/how-to-fix-string-deprecationwarning-invalid-escape-sequence-in-python. make me think that the issue may be caused by `\otimes` that I used in the docstring explanations. Don't have a Mac to reproduce and check whether removing this will help, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496497028:562,error,error,562,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496497028,1,['error'],['error']
Availability,"> If it's a known issue, let's leave it for when we switch CI to GitHub Actions (assuming that's the choice we end up making). It's very very difficult to tell, because Travis seem to be aggressively winding down the processing power available to us on Macs - I can't tell if there's a problem in this code, if Travis are over-stuffing their Xcode 12 machines with too many VMs, or even if it's some weird emulation (I think Azure _emulates_ PPC architectures if you ask for them!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-801795088:208,down,down,208,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-801795088,2,"['avail', 'down']","['available', 'down']"
Availability,"> If this is supposed to be displayed in the Sphinx-rendered HTML instead of markdown. I think you need double backticks for the monospace font? E.g. `` ``Qobj`` ``. Yes, I do. Fixed.; ; > Does this also serve as a `guide on migrating from v4 to v5` or do we plan to have it separately somewhere else? It would be nice if we could summarize some common Error messages that one may see along with the solution/possible reasons. The error messages are what people usually type into Google search. This does serve as an initial guideline of what to expect, but I think we do also need a proper porting document like the one you mention.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2076#issuecomment-1419933633:353,Error,Error,353,https://qutip.org,https://github.com/qutip/qutip/pull/2076#issuecomment-1419933633,3,"['Error', 'error']","['Error', 'error']"
Availability,"> If you run it locally it won't appear as a ""failure"" it'll be a warning, but now on the CI server we've fixed every warning, and turned new warnings into errors. You can get the same behaviour on your computer by running the command as `pytest -We [...]` instead. If you look at the CI it ran OK and there was a `todense` call in there. Maybe there is something silencing the warning elsewhere preventing it from being caught.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-828002553:46,failure,failure,46,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-828002553,2,"['error', 'failure']","['errors', 'failure']"
Availability,"> It doesn't look robust enough to be user facing as it is, but as a private function, if you get a 3.5x, I'd say we want it. I'll rename it to `_from_csr_blocks` and add some more checks on the ordering and shape of the ops if those aren't too expensive and add some tests. We can expose it publicly if that's ever useful. > Technically, just give a type to `i` and it's all running in c code. Thanks! Adding the type to `i` did make it a little faster.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2128#issuecomment-1477071388:18,robust,robust,18,https://qutip.org,https://github.com/qutip/qutip/pull/2128#issuecomment-1477071388,1,['robust'],['robust']
Availability,"> It would just be a matter of transforming the spherical coordinates into cartesian coordinates to be used by `add_points`. The following code would work:; > ; > ```python; > b = qutip.Bloch(); > ; > # Range of theta and phi; > th = np.linspace(0, np.pi/2, 20); > phi = np.linspace(0, np.pi/4, 20); > r = 1; > ; > xp = r*np.sin(th)*np.cos(phi); > yp = r*np.sin(th)*np.sin(phi); > zp = r*np.cos(th); > ; > pnts = [xp, yp, zp]; > b.add_points(pnts, meth='l'); > b.render(); > ```. There is a slight problem with this type of code:; 1. By using linspace for theta and phi as you have suggested, the values of theta and phi will not let the arc follow the shortest path and it will be a curve. For example, even in your plot, you'll see the arc is curved, whereas we are trying to plot an arc on the longitude.; 2. Another issue here is if I give you two random points, say (1/sqrt(3),1/sqrt(3),1/sqrt(3)) and (-1/sqrt(3),1/sqrt(3),-1/sqrt(3)), then using `add_points` to draw a curve is very cumbersome at the user-end and thus, prone to errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1685#issuecomment-934344538:1036,error,errors,1036,https://qutip.org,https://github.com/qutip/qutip/pull/1685#issuecomment-934344538,1,['error'],['errors']
Availability,"> Just an 'out there' question... what about superoperators?. I'm still reading, but I imagine superoperator measurements will correspond to partial measurements on systems where only part of the system is available for measurement (e.g. quantum channels), so perhaps lets do partial measurements next and then superoperator measurements after that?. Edit: We'll need superoperators to describe POVMs (i.e. more general measurements on density matrices).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-538153627:206,avail,available,206,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-538153627,1,['avail'],['available']
Availability,"> Knowing the tensor structure is still necessary for enforcing the Hilbert spaces are of the correct dimensions, even if the resulting state can't be written as a product of states on individual spaces. I think there's a lot more design to do to work out a sensible data structure which can really take advantage of this lazy representation, but my morning-after reaction to this is that it's very non-trivial without a lot of code duplication.; > ; > It's easy enough to imagine how it will work for operators of structure `[scalar, oper, scalar] * [scalar, scalar, oper] -> [scalar, oper, oper]` - in this case the final result is fully expanded in the last two states, and not in the first. It's much trickier dealing with `[oper, scalar, scalar] * [scalar, oper, oper] -> [oper, scalar, oper]`. In this case, since there's a subspace in between them, you need a specifically ""lazy"" Kronecker product. I suspect that this would have to be supported via either a completely separate `tensor` mechanism, or the mechanisms which currently underpin the data-layer `kron` would have to be revisited.; > ; > At least at first, I think that's a very large undertaking, and it would really need a lot of careful design to ensure that we don't slow anything down, or balloon the amount of code to be maintained. Both your and Boxi's comments point to the fact that this probably needs to be something on top of Qobj as a QIP-state object rather than part of Qobj itself! Once the details on these changes are fleshed out, I shall certainly look into this. It could potentially be very useful to have a slightly more customized/optimized QIP state layer on top of Qobj.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1320#issuecomment-658138964:1253,down,down,1253,https://qutip.org,https://github.com/qutip/qutip/issues/1320#issuecomment-658138964,1,['down'],['down']
Availability,"> Looks great. I suggested some changes, mainly to docstring. I wonder what is the meaning of the filename qelib1.inc? Could we find a more explicit name if relevant? Should it be added to the Manifest file? It looks fine to me, looking forward to test it and having a section in the documentation would certainly help, under QIP. Ping for review of the notebook when ready and re-request this PR review. Regarding ""qelib1.inc"", it is a ""header"" file that contains some QASM gate definitions. It is available in the OpenQASM repository (as a standard file) and I think it's always included in QASM exports (atleast by QISKIT). It's useful because we don't need to write our own definitions and can just define QuTiP gates by mapping them to ""qelib1.inc"" gates.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1318#issuecomment-663824413:331,Ping,Ping,331,https://qutip.org,https://github.com/qutip/qutip/pull/1318#issuecomment-663824413,2,"['Ping', 'avail']","['Ping', 'available']"
Availability,"> My biggest concern is with the addition of `**_` to some of the functions, I would argue that it is best to raise an error if the function does not have arguments. this may lead to code that works on jax being incompatible with code that works on just qutip though, so it is something to think about. We pass unused arguments when we mix different types of coefficients in solver and `QobjEvo`. So we cannot raise an error. > I could be an interesting idea for the future to consider adding a similar context manager that removes other dtypes (`CSR` and `Dense`) so that it is clear what the code is doing?. I don't understand what you mean by this... A context manager that remove dtype from those known to the dispatcher?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2015#issuecomment-1438679479:119,error,error,119,https://qutip.org,https://github.com/qutip/qutip/pull/2015#issuecomment-1438679479,4,['error'],['error']
Availability,> Not a huge amount to be done about that CodeClimate failure to be honest. These complexity checking tools were all written with business software application logic in mind and don't cater well to cases where a single conceptual unit can be quite complex. Perhaps when we move to GitHub actions we can run our own linting tools directly there and get rid of CodeClimate.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-824625785:54,failure,failure,54,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-824625785,1,['failure'],['failure']
Availability,"> Not sure how to make a test for this. The file name is random and it's not always reliable when the `__del__` is called which is where the file is erased. You could create a coefficient and check that the last entry of `coeff_files.file_list` looks correct and exists. The wouldn't check the deletion but would check that the filename is correct. You can do `del qutip.qobjevo.coeff_files` to trigger the clean-up of the object, but that is a bit GC dependent and implementing it properly would require calling `gc.collect()`. Not sure if that is worth the hassle.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2251#issuecomment-1781948773:84,reliab,reliable,84,https://qutip.org,https://github.com/qutip/qutip/pull/2251#issuecomment-1781948773,1,['reliab'],['reliable']
Availability,"> Not sure why, but I have trouble downloading opening HTML documentation from the artifact... I will re-run the doc build to see if it change anything. The download worked for me and the HTML and PDF docs look okay.; ; > Is it needed to fix all version up the the micro release?. This PR doesn't change that. We fix the version to micro releases to ensure that the documentation builds don't fail or do odd things without us noticing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149#issuecomment-1495028797:35,down,downloading,35,https://qutip.org,https://github.com/qutip/qutip/pull/2149#issuecomment-1495028797,2,['down'],"['download', 'downloading']"
Availability,"> Overall, it look good as a way to make HEOM solvers work on v5. Woot. > But the use of data layer seems not ideal, why is the rhs fixed to `csr`. With it's size, it's probably not ideal as a Dense, but I don't think we should raise an error for other type... It doesn't actually restrict the RHS to CSR -- it only *constructs* the RHS as a CSR initially. The base solver will convert the RHS to the correct format for the integrator if needed. It might be possible one day to avoid constructing the RHS as a CSR but it might be tricky to make it not horribly slow, so I'd like to leave this as potential enhancement rather than work on it right now. > There is no `heomsolve` to go with `HEOMSolver`. I've added `heomsolve`. It has more parameters than `sesolve` or `mesolve`, which is not great, but I'm not sure how to avoid it. The bath and the max_depth are not really optional for the HEOM, and there aren't reasonably default values. > With other solvers, they accept `H` as a `Qobj` or `QobjEvo` only, list format is accepted by the __solve function. I changed HEOMSolver to only support `Qobj` or `QobjEvo`. I allowed `HSolverDL` to continue to support other objects since `HSolverDL` exists only for backwards compatibility. Perhaps we should remove it at some point, but the amount of code in it is also tiny. > `bofin_*.py` does not have a `__all__`, even if they are not supposed to be imported directly, it would be better if they had. I've added `__all__`.; ; > The test coverage does not include time-dependent Hamiltonian. Are those too slow to include in automated tests?. The tests don't include a truly time-dependent case because it's hard to solve one analytically. Previously I tested the time-dependent logic by supplying `[H]` as the system (i.e. fooling the code into using the time-dependent path) but that broke when I switched to using `QobjEvo.isconstant`. I fixed it by using `[H, lambda t: 1.0]` instead, which would be very hard to determine as constant. Thank for pi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845:237,error,error,237,https://qutip.org,https://github.com/qutip/qutip/pull/1869#issuecomment-1165701845,1,['error'],['error']
Availability,"> Overly specific build-system.requires can also cause failures with conda-forges build system. Conda-forge does not and cannot use `build-system.requires`; those are PyPI packages and they might not even have the same name in Conda. Conda always sets PIP_NO_BUILD_ISOLATION to avoid this. This (the linked log) is tripping up on setup_requires, which is deprecated and I don't think you have it set up correctly anyway; if you ask for `Cython` but don't `install_requires` Cython, Cython will not be installed before running the setup.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-989955502:55,failure,failures,55,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-989955502,1,['failure'],['failures']
Availability,> Perhaps it is related to the new specializations for dense that were merged on Friday? Previously some operations that went via the sparse data layer may have been tidied up and now they are not. That could be the reason. I posted this just in case there are some undesired changes that got merged accidentally. It is not difficult to fix it on the side of `qutip-qip`. Just add a filter to the probabilities and states. I agree that we could use the `atol` from core options by default and perhaps add a tolerance parameter to some measurement functions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2029#issuecomment-1336432722:507,toler,tolerance,507,https://qutip.org,https://github.com/qutip/qutip/issues/2029#issuecomment-1336432722,1,['toler'],['tolerance']
Availability,"> Please just use a single pyproject.toml with oldest-supported-numpy. You don't need to copy them around, the build you get is fine for docs & users. You can disable build isolation if you need to have a special newer NumPy for the compile (which is very rare). Thank you for taking a look here. As I explained before, we can't just use oldest-supported-numpy directly because we also require numpy >= 1.16.6 for our own code. The pypi-pyproject.toml file contains a copy of oldest-supported-numpy but with everything less that 1.16.6 replaced with 1.16.6. Overly specific build-system.requires can also cause failures with conda-forges build system -- e.g. this one for building this project with Python 3.10 on Windows 64 -- https://dev.azure.com/conda-forge/feedstock-builds/_build/results?buildId=407213&view=logs&jobId=00f5923e-fdef-5026-5091-0d5a0b3d5a2c&j=00f5923e-fdef-5026-5091-0d5a0b3d5a2c&t=3cc4a9ed-60e1-5810-6eb3-5f9cd4a26dba (maybe there is some separate way around that).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-989950888:611,failure,failures,611,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-989950888,1,['failure'],['failures']
Availability,"> So my guess here is that pyximport keeps appending args like -O2 -fPIC etc to the call to gcc until it breaks. Not sure if it is a qutip thing or Cython. Why theory needs to be validated as a first step. I don't understand the point ""Why theory needs to validated as a first step"" in relation to your hypothesis on the issue. Otherwise, I will take a closer look at the qutip and Cython source codes to see if I can track something down.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966#issuecomment-511643800:434,down,down,434,https://qutip.org,https://github.com/qutip/qutip/issues/966#issuecomment-511643800,1,['down'],['down']
Availability,"> String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; > ; > ```; > def f(t,args):; > return sin(args[""w""]*t); > H = [H0, [H1, f]]; > ```; > ; > Here there is also an error in the error message, we will fix that bug soon. Thanks this worked. > import numpy as np; > from qutip import *; > import matplotlib.pyplot as plt; > ; > delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; > H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); > H1 = A/2.0 * sigmaz(); > args = {'w': omega}; > H = [H0, [H1, 'sin(w * t)']]; > T = 2*np.pi / omega; > f_modes_0, f_energies = floquet_modes(H, T, args); > f_energies. This didnt' work for me. I'm also running it on a Mac",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207#issuecomment-603977040:259,error,error,259,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-603977040,2,['error'],['error']
Availability,"> Thank you for looking at this.; > ; > `store_state` should still be the final factor whether states are stored or not. It's the one available everywhere and for v4. `mesolve` with `store_state` will have `result.states` being the output density matrix. `mcsolve` with the same `store_state` and default options should return a similar result.; > ; > So it would be better to have the new option be `precompute_average_states` and have it only control if the average is compute when all trajectories is stored. The if the `average_states` property it use, it could compute the average then, but never do so if not used.; > ; > Please keep `result.states` and `result.final_states` as is. They have the same behaviour as in v4 and we want to keep them for backward compatibility.; > ; > `runs_...` and `average_...` are new to v5 and could be renamed, but it's not clear that `density_matricies` is the average while `final_states` are for each trajectories. `smesolve` and sometime for `mcsolve` individual trajectories states are already density matrices. Thus `smesolve`'s result density_matricies could work as well for all states from all trajectories, causing confusion.; > ; > You implemented the `density_matricies` property twice.; > ; > Having the options to keep only the final states without keeping all the trajectories is a good idea. Be careful that the trajectory result have the final state stored. So I'm not entirely sure what you want the behaviour to be for each set of options. I think it is confusing to return a density matrix if you request store_states - the density matrix is not the same as the state of the system, and surely v5 is the perfect time to clear up issues like this. Personally I found this behaviour very surprising when updating to V5. I do agree that `density_matricies` should maybe be `average_density_matricies`. I am happy to change `mesolve` as part of this for consistency. If you want to keep it backwards compatible would it be possible to send a li",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2303#issuecomment-1906570023:134,avail,available,134,https://qutip.org,https://github.com/qutip/qutip/pull/2303#issuecomment-1906570023,2,['avail'],['available']
Availability,"> Thanks @jakobjakobson13. A few modules' tests fail, on all operating systems, https://travis-ci.org/github/qutip/qutip/jobs/746708587. I wonder why.; > ; I think I went a bit to far. Perhaps I will close this pull request and cut it down into smaller chunks. > By the way, what software did you use, `autoflake`?; >; No, `deepcode.ai` but I don't know really know how good or bad it performs in contrast to other static code checkers.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1394#issuecomment-735719114:235,down,down,235,https://qutip.org,https://github.com/qutip/qutip/pull/1394#issuecomment-735719114,1,['down'],['down']
Availability,"> The bug in the 3.9 tests seems a real bug with the new tests, it should be fixed. If it's numpy version specific, we can officially drop that version. (1.20). Yes, I need to fix that. > I see no mention of tidyup, some of the tested operation use it, should it not be turned off for these tests? Otherwise it will cause random fails eventually. Disabling tidyup during the tests is a good idea. > What is the plan for other functions? Most of the common function are tested, but some often used are missing (`kron`, `l2`, `isherm`, `expect`). For this PR I just covered all the functions that are methods of the `Data` class. Some of these call out to dispatch functions, but I included those anyway since they're part of the `Data` class API. > I am also curious about some of the more complex functions (`inv`, `expm`, `pow`) would fare, but I don't expect them to play nice with this kind of test. I suspect those will be a bit tricky, but I think we can still find a way to assert that they give the right answer even if it requires restricting a bit what examples hypothesis generates. > I disagree with making our code worst for common use case just to handle junk the same way others do. I don't think I did this anywhere now? In some cases what QuTiP was doing was just wrong. E.g. `inf * CSR-zeros` is just `NaNs` everywhere. The previous QuTiP answer was wrong. We also don't have to handle junk the same way, but we do have to handle junk in a way that is sensible and avoids silently propagating or swallowing errors. People are going to make mistakes, that set of people includes us as core QuTiP developers.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957#issuecomment-1507141695:1524,error,errors,1524,https://qutip.org,https://github.com/qutip/qutip/pull/1957#issuecomment-1507141695,1,['error'],['errors']
Availability,"> The time-dependent weights are available as the `trace` attribute for each trajectories, so I though them as an (indirectly?) physical property of each trajectories. Since they are per trajectories, if feels normal to belong to the single trajectory result. But moving the logic to `NmmcResult` would simplify `MultiTrajResult` a lot and allow to remove `TrajectoryResult`. I do think it would be good to keep the `trace` property on the trajectories, but for the purpose of calculating the weighted averages, it could perhaps be treated like the other types of weights that we have.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2502#issuecomment-2297864958:33,avail,available,33,https://qutip.org,https://github.com/qutip/qutip/pull/2502#issuecomment-2297864958,2,['avail'],['available']
Availability,"> This bug is only in 4.4.0, the patch has not been released yet.; > Don't use parallel_map in windows for mcsolve and stochastic solvers to go around it.; > Or if you can install from source, the working version is in #1040. I download the version 4.4.1 from https://github.com/Ericgig/qutip/tree/4.4.1/qutip but still met this ; problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711:228,down,download,228,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-519951711,1,['down'],['download']
Availability,"> This error message suggests to me that one of the things you're trying to add might be a numpy array:; > ; > ```; > TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None); > ```. Yes, you are right, sorry. I am closing the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2326#issuecomment-1961079240:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/2326#issuecomment-1961079240,1,['error'],['error']
Availability,"> This issue is a duplicate of #999, #1008 and #1018. It has been addressed by PR 1000.; > ; > #1000. Se discussion in #1018. Yep, I know that this is caused by the newest version of Siipy. But is there any possibilities to upgrade the qutip. It seems that it is difficult to ask the scipy team to ""downgrade"" the scipy, isn't it/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019#issuecomment-502356360:299,down,downgrade,299,https://qutip.org,https://github.com/qutip/qutip/issues/1019#issuecomment-502356360,1,['down'],['downgrade']
Availability,"> This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:; > ; > ```; > =================================== FAILURES ===================================; > ___________________________ test_MCSimpleConstStates ___________________________; > @pytest.mark.slow; > def test_MCSimpleConstStates():; > ""Monte-carlo: Constant H with constant collapse (states)""; > N = 10 # number of basis states to consider; > a = destroy(N); > H = a.dag() * a; > psi0 = basis(N, 9) # initial state; > kappa = 0.2 # coupling to oscillator; > c_op_list = [np.sqrt(kappa) * a]; > tlist = np.linspace(0, 10, 100); > mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; > options=Options(average_states=True)); > assert_(len(mcdata.states) == len(tlist)); > assert_(isinstance(mcdata.states[0], Qobj)); > expt = expect(a.dag() * a, mcdata.states); > actual_answer = 9.0 * np.exp(-kappa * tlist); > avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > > assert_equal(avg_diff < mc_error, True); > E AssertionError: ; > E Items are not equal:; > E ACTUAL: False; > E DESIRED: True; > ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; > ----------------------------- Captured stdout call -----------------------------; > 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; > 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; > 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; > 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; > 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; > 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; > 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; > 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; > 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; > 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; > Total run time: 20.34s; > ---------- covera",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896:88,error,error,88,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607478896,2,"['FAILURE', 'error']","['FAILURES', 'error']"
Availability,"> This was reported on the help group; > https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU; > ; > (copying from there); > the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well.; > ; > If using mkl(2019.0), there will MKL read problems, like:; > ; > ```; > File ""C:\Users\ym24chen\Anaconda3\; > x = lu.solve(b, verbose=verbose); > File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; > np_x, np_error); > OSError: exception: access violation reading 0x0000000000000008; > envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; > ```; > ; > Env info:; > ; > ```; > QuTiP Version: 4.3.1; > Numpy Version: 1.15.4; > Scipy Version: 1.1.0; > Cython Version: 0.29.6; > Matplotlib Version: 3.0.3; > Python Version: 3.7.2; > Number of CPUs: 8; > BLAS Info: INTEL MKL; > OPENMP Installed: False; > INTEL MKL Ext: True; > Platform Info: Windows (AMD64); > Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; > ==============================================================================; > ```. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536162505:214,rollback,rollback,214,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536162505,3,"['error', 'rollback']","['errors', 'rollback']"
Availability,"> What is the main difference between `expect` and `measure`? That's the main thing that comes up ; > to my mind. What different question are you answering? I also wonder if `expect` could be called. . `expect` returns the expectation value (i.e. probability weighted average of the measurements). `measure` returns a *single* measurement (i.e. an eigenvalue and an eigenstate, selected randomly with weighted probabilities). > The description of the `measure` function is a bit general maybe with this regard. But I might have ; > missed the point completely (my bad). Open to suggestions. I will also re-read it and see if I can think of something clearer.; ; > Somehow `smesolve` tests fail with Travis CI, not sure how this PR could have affected it. I'll dig a bit and see if the failure is related somehow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-536753408:785,failure,failure,785,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-536753408,2,['failure'],['failure']
Availability,"> Which qutip-tensorflow tests are affected? All of them?. Yes, as this warning is raised when qutip is imported. > Do you know why qutip's own tests are not affected?. To be honest, I am not sure. I think at this moment the tests in `dev.major` do not treat warnings as errors (see [this commit](https://github.com/qutip/qutip/commit/c446e4acd0e4b87a7993a9861440debe5436023b)). Although I am not sure if prior to this commit qutip's own tests were affected. However, I have just realised that this is not the first time the deprecation warning from `pyximport` is silenced. In particular, in PR #1506 @jakelishman also silenced this warning in the master branch: ; https://github.com/qutip/qutip/blob/3432bfeb19ba14f1ef51e9e775588e33db17349c/qutip/cy/pyxbuilder.py#L39-L47; I can add the same comment and the `module=pyximport`. Was there any reason to not merge this change in dev.major?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1582#issuecomment-864919889:271,error,errors,271,https://qutip.org,https://github.com/qutip/qutip/pull/1582#issuecomment-864919889,1,['error'],['errors']
Availability,"> Why is scipy 1.8 only used by the py3.10? I expected python3.9 defaults to use the latest scipy. Because only the 3.10 build uses conda-forge (i.e. SciPy 1.8 isn't available in the base anaconda repositories yet). > Doing it like this, the deprecation warning will be visible to the users, so we may have issues complaining about it but since 4.7 is coming soon, I think it's fine. Python runs with deprecation warnings ignored by default unless one specifies `-X dev` or similar. They only show up here because we run pytest with `-W error`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1797#issuecomment-1031669297:166,avail,available,166,https://qutip.org,https://github.com/qutip/qutip/pull/1797#issuecomment-1031669297,2,"['avail', 'error']","['available', 'error']"
Availability,> With what errors?. The ones from https://github.com/qutip/qutip/issues/723#issuecomment-317495769,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317825979:12,error,errors,12,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317825979,1,['error'],['errors']
Availability,"> You see, the gate Gate(RY, targets=[0, 1], controls=None) is clearly wrong because RY acts only on one qubits. Yep ! That's what I thought as well..for all the single qubit gate outputs with two targets. I knew I was getting an error but was not sure why it was not the same error as both of you. It was because I was using the released version (like you predicted). . I was trying to put off installing from source for as long as I could because I would have to install conda and other dependencies manually. Now, I did get `ValuError`. Thanks !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810592555:230,error,error,230,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810592555,4,['error'],['error']
Availability,"> `result.measurement` is not the same as `result.expect`, the measurement is an expectation value, but not of the `e_ops` but `m_ops` which are usually automatically generated from the `c_ops` and noise is added to the computed expectation value of the state of the trajectory. The noise is usually larger than the signal and makes it hard to see, but it should converge to mesolve's solution eventually.; > ; > `smesolve`'s `expect` are just the expectation value of the state of each trajectories (averaged or not depending on options) and should average to the master equation solutions with enough trajectories. Plot in cell 8 show the match is quite good. Even with enough trajectories, the numerical error from `smesolve` will be visible.; > ; > The equation solved are those written in the notebook. Various stochastic integration method are provided, the default is the taylor expansion of order 1.5. Thank you very much for your reply, but I still don't quite understand `smesolve`'s `expect` are just the expectation value of the state of each trajectories”. In my understanding, solving for 'smesolve' gives the corresponding 'ρ(t)' and then 'expect'. But 'smesolve' provides **[ntraj [int] number of trajectors]**, which means that there are _ntraj_ 'ρ(t)' (`expect`). If I want to show all _ntraj_ ‘s 'expect', how can I do it?. Can I understand `result.measurement` as measuring(POVM) the `smesolve.result` (where ρ(t) was given by solving the stochastic master equation) .$\hat{\rho}_{f}=\frac{\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}}{\mathrm{Tr}[\hat{\Omega}_{m}\hat{\rho}\hat{\Omega}_{m}^{\dagger}]}$。If this is the case, I don't understand the point of doing the measurement again here, because the stochastic master equation itself has a continuous measurement. What I want to do is simply solve the stochastic master equation to get enough trajectories **ρ(t)** and solve the relevant expected value **Tr[ρ(t)A]**. On the one hand, I want to see the expectations of a",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206:707,error,error,707,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1635364206,2,['error'],['error']
Availability,"> `solver_options` contains all available options. I don't think we want to breaks this pattern for this. Maybe fixing MCSolver to use `options.get(""improved_sampling"", False)` instead of `options[""improved_sampling""]` would be enough for now. Okay, I have fixed it like this for now. > But it shows that our solver class structure is to be reworked or we need an equivalent to `improved_sampling` for `nm_mcsolve`. I could try implementing `improved_sampling` for `nm_mcsolve`, but that would need a bit more time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2234#issuecomment-1754376221:32,avail,available,32,https://qutip.org,https://github.com/qutip/qutip/pull/2234#issuecomment-1754376221,1,['avail'],['available']
Availability,"> pytest has this bad habit of loading all available plugins whether or not they're actually used by the tests being run. It's quite annoying actually. It would be better if it only loaded plugins specified in conftest.py. Absolutely agree with this. > But it can be useful if the test code itself can be made robust with respect to the problem. Also yes - if I understand right, it's just the testing code that's a problem here, right, not the actual internal code? We can't swap to `pyplot.close('all')` in the library code (for obvious side-effect-y reasons), but if it's in the tests, then it shouldn't be an issue to change. I wonder why it caused a problem in the first place, though - if we could track it down (does `xvfb` do similar things to inline backends with respect to ""capturing"" images during construction/return?) it would be nice to use something slightly more targetted than `pyplot.close('all')`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909159005:43,avail,available,43,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909159005,3,"['avail', 'down', 'robust']","['available', 'down', 'robust']"
Availability,"> you can see that when it runs conda uninstall cython, it downgrades numpy to 1.14.2. This is really strange. > This would not be a problem in a conda-forge release build, because the numpy API dependency is pinned in the feedstock, but it is a potential problem on pip source builds. I was setting up a GitHub Action test for `qutip_qip` https://github.com/qutip/qutip-qip/pull/6. `pip installation` works well there, but it could be that I don't use any run-time compiling.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782174452:59,down,downgrades,59,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782174452,1,['down'],['downgrades']
Availability,">; <li>Optimize ImageStat.Stat.extrema <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7593"">#7593</a> [<a href=""https://github.com/florath""><code>@​florath</code></a>]</li>; <li>Handle pathlib.Path in FreeTypeFont <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7578"">#7578</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Use list comprehensions to create transformed lists <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7597"">#7597</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>; <li>Added support for reading DX10 BC4 DDS images <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7603"">#7603</a> [<a href=""https://github.com/sambvfx""><code>@​sambvfx</code></a>]</li>; <li>Optimized ImageStat.Stat.count <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7599"">#7599</a> [<a href=""https://github.com/florath""><code>@​florath</code></a>]</li>; <li>Moved error from truetype() to FreeTypeFont <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7587"">#7587</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Correct PDF palette size when saving <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7555"">#7555</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed closing file pointer with olefile 0.47 <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7594"">#7594</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>ruff: Minor optimizations of list comprehensions, x in set, etc. <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7524"">#7524</a> [<a href=""https://github.com/cclauss""><code>@​cclauss</code></a>]</li>; <li>Build Windows wheels using cibuildwheel <a href=""https://redirect.github.com/python-pillow/Pillow/issues/7580"">#7580</a> [<a href=""https://github.com/nulano""><code>@​nulano</code>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2302:8198,error,error,8198,https://qutip.org,https://github.com/qutip/qutip/pull/2302,1,['error'],['error']
Availability,">https://pillow.readthedocs.io/en/stable/releasenotes/9.0.0.html</a></p>; <h2>Changes</h2>; <ul>; <li>Restrict builtins for ImageMath.eval() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5923"">#5923</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Ensure JpegImagePlugin stops at the end of a truncated file <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5921"">#5921</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Fixed ImagePath.Path array handling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5920"">#5920</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Remove consecutive duplicate tiles that only differ by their offset <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5919"">#5919</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Removed redundant part of condition <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5915"">#5915</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Explicitly enable strip chopping for large uncompressed TIFFs <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5517"">#5517</a> [<a href=""https://github.com/kmilos""><code>@​kmilos</code></a>]</li>; <li>Use the Windows method to get TCL functions on Cygwin <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5807"">#5807</a> [<a href=""https://github.com/DWesl""><code>@​DWesl</code></a>]</li>; <li>Changed error type to allow for incremental WebP parsing <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5404"">#5404</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>; <li>Improved I;16 operations on big endian <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5901"">#59",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1760:1342,redundant,redundant,1342,https://qutip.org,https://github.com/qutip/qutip/pull/1760,1,['redundant'],['redundant']
Availability,"@AFvanloo Could you explain a little more what you are doing? The error appears to have been generated by an attempt to recompile `qutip.cy.openmp.parfuncs` without openmp installed, which is unlikely to have happened unless something is attempting to rebuild every cython or cpp file and ignoring qutip's `setup.py`. I also see `pyrex` in your path. The last stable release of `pyrex` was in 2010 and as far as I know it is still inactive. I am not sure what advice to give yet, but I am curious about what is going on. :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810#issuecomment-1043525004:66,error,error,66,https://qutip.org,https://github.com/qutip/qutip/issues/1810#issuecomment-1043525004,1,['error'],['error']
Availability,"@Akhikar I know the error message is the same, but could you open a new issue for this and follow the issue template? This bug was addressed awhile ago, and if you open a new issue we'll know what versions of all the installed software you're using. Usually this issue arises when something went wrong while installing QuTiP, or because you have a script whose name conflicts with an existing package name.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-1220411689:20,error,error,20,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-1220411689,1,['error'],['error']
Availability,"@ArchieB151 The output is very strange. No new version of QuTiP was released in the last month. The ODE integration error you received would only appear if the problem being solved changed somehow. The initial state in your plot doesn't match the psi0 defined in the code (i.e. both expectation values are zero). Could you try do everything from scratch again? Start with a completely fresh download of the notebook, restart the Jupyter kernel entirely run everything from the top?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229018060:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229018060,2,"['down', 'error']","['download', 'error']"
Availability,"@BoxiLi #1179 is possibly not a suitable solution, because it would remove support for IM6. I implemented an alternative at #1194 which should be a bit more resilient. Both would be easy to merge in with this one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-602907441:157,resilien,resilient,157,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-602907441,1,['resilien'],['resilient']
Availability,"@BoxiLi . Thanks, I've commented this error check out of circuit.py, and am able to run my program now!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1040626038:38,error,error,38,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1040626038,1,['error'],['error']
Availability,"@BoxiLi I am a bit confused with the wording of this issue. Is the goal to find what other gates might be creating `ValueError` when `resolve_gates` acts on them ? Then once these gates are identified, figure out the source of error in code of `resolve_gates` ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-794673938:227,error,error,227,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-794673938,1,['error'],['error']
Availability,"@BoxiLi I am happy with the code in this PR now. Great work.; Can you resolve the merge conflicts? I am guessing this is why we don't see the Travis test results. I am not concerned about the CodeClimate test failures. Might be worth commenting on this:; 'Function adjacent_gates has a Cognitive Complexity of 142 (exceeds 5 allowed).' ; though, as it's an order of magnitude beyond the rest :-). Thanks, Alex.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1065#issuecomment-537843702:209,failure,failures,209,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-537843702,1,['failure'],['failures']
Availability,"@BoxiLi I have the latest version installed. . I do not get any gates after applying `resolve_gates()`. My issue is I fail to get the same error type i.e. `ValueError`. When I ran the code as it is, I do not get any gates besides an indicator that the code ran successfully. So, I used `print(A.resolve_gates())` which gave me `qutip.qip.circuit.QubitCircuit object at 0x7fb64044eaf0`. This is most definitely not the expected output of `resolve_gates()` as specified [here](https://github.com/qutip/qutip/blob/8681e995c09986a4355ba16d586dd2d2f1f49657/qutip/qip/circuit.py#L1205)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810442694:139,error,error,139,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810442694,1,['error'],['error']
Availability,"@BoxiLi Sure, the tests looks not too complex. I'm working on it. I'm grouping the gates for better error handling. @jakelishman Thanks. Sorry, I was just too lazy to set up the tests on my machine, LOL. I simply create the pull request and see if the code pass. That's why there are always one or two minor fixes here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1269#issuecomment-629843104:100,error,error,100,https://qutip.org,https://github.com/qutip/qutip/pull/1269#issuecomment-629843104,2,['error'],['error']
Availability,"@BoxiLi Thank you, that was the root of the problem. I'd made an error while defining the list of coefficients. It's working fine now.; That last coefficient was not supposed to be that large.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623#issuecomment-886178364:65,error,error,65,https://qutip.org,https://github.com/qutip/qutip/issues/1623#issuecomment-886178364,1,['error'],['error']
Availability,"@BoxiLi thank you so much for the comments! . I addressed all your comments in my new commit, but when I try to run the tests with `pytest` I get a strange error:. <img width=""570"" alt=""Screen Shot 2023-05-27 at 1 01 17 PM"" src=""https://github.com/qutip/qutip/assets/74874354/1b34ab67-a5c0-4223-863d-d7b64109f153"">. This seems to be an issue with a circular import in `qutip.core.data.__init__.py` file, but I haven't touched anything in that file, or for that matter, any file besides `qutip.core.operators.py` and `qutip.tests.core.test_operators.py`. I wanted to reach out and ask if this problem has been resolved somewhere else. Also, to avoid the circular import problem with `tensor`, would it be better if I created a new py file (`qutip.core.fermionic_operators.py`) for these new operators? happy to do this if it would be helpful. Thank you so much, and please let me know if you have any insight on the `pytest` error :)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2166#issuecomment-1565664898:156,error,error,156,https://qutip.org,https://github.com/qutip/qutip/pull/2166#issuecomment-1565664898,2,['error'],['error']
Availability,"@ChesterCamm @jakelishman I've attempted to clean up the figure state tracking in Bloch.render() to make it more robust. As a bonus, I can no longer crash .render() in my own Python console by closing a figure and calling .render() now updates any existing figure that is already shown. @ChesterCamm Feedback on whether my change helps your case would be appreciated. The new code also works with all sort of combinations of .show() and .render() in a Jupyter notebook for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-884790771:113,robust,robust,113,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-884790771,1,['robust'],['robust']
Availability,"@Ericgig @nwlambert @jakelishman I'm hoping one of you has a chance to review. This makes the Bloch sphere plotting significantly more robust for me, so it would be nice to merge it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619#issuecomment-892545572:135,robust,robust,135,https://qutip.org,https://github.com/qutip/qutip/pull/1619#issuecomment-892545572,1,['robust'],['robust']
Availability,@Ericgig Could we check whether tlist is monotonic when `_safe_mode` is true? It might make the error clearer.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879184807:96,error,error,96,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879184807,2,['error'],['error']
Availability,"@Ericgig Hey Eric, I fixed the test script issues last week, but wasn't sure if you wanted me to ping you again. I'm pinging you again now, but if this isn't what you would like, please let me know!. That is, I'm _pretty sure_ everything should be working now. The test_flimesolve.py script, flimesolve (with your changes made - without the fixing of the step method yet), and correlation.py (where I added options for FLiMESolve to be used) should all be working now. Let me know if there's anything else that needs fixed. Thank you!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-2082770693:97,ping,ping,97,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-2082770693,2,['ping'],"['ping', 'pinging']"
Availability,"@Ericgig Hey Eric, added your changes to the test, fixed the documentation error as well. I also added a steady state solver, would you want me to make a test for that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-2094417518:75,error,error,75,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-2094417518,1,['error'],['error']
Availability,"@Ericgig Hey again Eric, sorry for the double ping. Small issue where I forgot to turn the returned Floquet states (when desired) as quantum objects instead of just numpy arrays. This caused one of the example scripts to mess up again. I fixed this and it looks like the script runs on my end.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2186#issuecomment-2083263942:46,ping,ping,46,https://qutip.org,https://github.com/qutip/qutip/pull/2186#issuecomment-2083263942,1,['ping'],['ping']
Availability,@Ericgig Hi. Do you have any advice on plot_wigner_sphere and matrix_histogram? I will fix the documentation error tomorrow.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2193#issuecomment-1632461619:109,error,error,109,https://qutip.org,https://github.com/qutip/qutip/pull/2193#issuecomment-1632461619,1,['error'],['error']
Availability,"@Ericgig Hi. I tried to fix the documentation error, but I do not know how to fix the following errors. Could you help me?; ```; /home/runner/work/qutip/qutip/qutip/visualization.py:docstring of qutip.visualization.hinton:10: WARNING: Bullet list ends without a blank line; unexpected unindent.; looking for now-outdated files... none found; /home/runner/work/qutip/qutip/qutip/visualization.py:docstring of qutip.visualization.hinton:7: WARNING: Bullet list ends without a blank line; unexpected unindent.; /home/runner/work/qutip/qutip/qutip/visualization.py:docstring of qutip.visualization.hinton:23: WARNING: Bullet list ends without a blank line; unexpected unindent.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2193#issuecomment-1634245514:46,error,error,46,https://qutip.org,https://github.com/qutip/qutip/pull/2193#issuecomment-1634245514,2,['error'],"['error', 'errors']"
Availability,"@Ericgig I am now trying to use pytest's parametrize feature which allows us to parametrize input to test functions variable by variable. I was able to successfully rewrite some tests which use `yield`, but this one (`test_trunc_neg`) in particular throws an error. Could you please run the following self sufficient snippet locally and inform me if there is anything wrong with the values in this example?? Thanks for the tip about yield, that might indeed be what is wrong. ```; from qutip import *; import numpy as np; import pytest; from numpy.testing import (assert_equal, assert_, assert_almost_equal,; run_module_suite). @pytest.mark.parametrize(""method"", ['clip', 'sgs']); @pytest.mark.parametrize(""qobj"", [rand_dm(5), Qobj(np.diag([1.1, -0.1])),; rand_unitary(3)*Qobj(np.diag([1.1, 0, -0.1]))*rand_unitary(3).dag()]); @pytest.mark.parametrize(""expected"", [None, Qobj(np.diag([1.0, 0.0])),; rand_unitary(3)*Qobj(np.diag([1.0, 0.0, 0.0]))*rand_unitary(3).dag()]); def test_trunc_neg(method, qobj, expected):; ""Checks trunc_neg in several different cases.""; pos_qobj = qobj.trunc_neg(method=method); assert(all([energy > -1e-8 for energy in pos_qobj.eigenenergies()])); assert_almost_equal(pos_qobj.tr(), 1); if expected is not None:; assert_almost_equal(pos_qobj.data.todense(), expected.data.todense()); ```. Also, I would like to rewrite all the tests which use `yield` in this format, would that be okay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013:259,error,error,259,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-571008013,1,['error'],['error']
Availability,"@Ericgig I am wondering whether in v5.1 we should add a way for users to specify the timescale of a QobjEvo. At the moment if one knows the timescale when calling the solver one can just set max step, but in code like Boxi's where one is handling QobjEvos or pulses that were created somewhere else, it can be a lot of extra work to determine what the max_step should be, and it would be good if the QobjEvo already had that information. The downside is that one might have to specify the time step when creating the QobjEvo, and that might be too annoying or too easy to forget to do.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2040#issuecomment-1344175267:442,down,downside,442,https://qutip.org,https://github.com/qutip/qutip/pull/2040#issuecomment-1344175267,1,['down'],['downside']
Availability,"@Ericgig I have made the changes upto best of my knowledge, I am not able to figure out how to apply phase fixing to the new operator type. . Also after a few iterations my local build seems to give cython errors, is there a wiki on how to sort that out?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2351#issuecomment-2001914855:206,error,errors,206,https://qutip.org,https://github.com/qutip/qutip/pull/2351#issuecomment-2001914855,1,['error'],['errors']
Availability,@Ericgig I marked your remarks as resolved and made some new changes. If anything more required don't hesitate to ping me.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-472813749:114,ping,ping,114,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-472813749,1,['ping'],['ping']
Availability,"@Ericgig I was indeed a few commits behind, but after I merged the current mater to my branch, I cannot import `mcsolve `any more. `from qutip import mcsolve` gives the following error; ```; <ipython-input-1-58732ae050c2> in <module>; ----> 1 from qutip import mcsolve. c:\users\boxi\onedrive\studium\qutip-project\qutip\qutip\__init__.py in <module>; 205 from qutip.mesolve import *; 206 from qutip.sesolve import *; --> 207 from qutip.mcsolve import *; 208 from qutip.stochastic import *; 209 from qutip.essolve import *. c:\users\boxi\onedrive\studium\qutip-project\qutip\qutip\mcsolve.py in <module>; 46 from qutip.qobjevo import QobjEvo; 47 from qutip.parallel import parfor, parallel_map, serial_map; ---> 48 from qutip.cy.mcsolve import CyMcOde, CyMcOdeDiag; 49 # cy_mc_run_ode = None; 50 from qutip.sesolve import sesolve. ModuleNotFoundError: No module named 'qutip.cy.mcsolve'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1016#issuecomment-501759471:179,error,error,179,https://qutip.org,https://github.com/qutip/qutip/issues/1016#issuecomment-501759471,1,['error'],['error']
Availability,@Ericgig I've started this branch specifically to tackle the strange steadystate (and other) test failures.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-948435607:98,failure,failures,98,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-948435607,1,['failure'],['failures']
Availability,"@Ericgig Not sure if it's directly related to this PR, but the Travis build failed on `test_diag_liou_mult` with the following tolerance error:; ```; > np.testing.assert_allclose(target, calculated, atol=1e-12); E AssertionError: ; E Not equal to tolerance rtol=1e-07, atol=1e-12; E ; E Mismatched elements: 2 / 6724 (0.0297%); E Max absolute difference: 3.36667153e-12; E Max relative difference: 1.85567862e-08; ```; Not sure if we should relax the tolerance slightly now (maybe 1e-11?), or in a separate PR later, or if there is something real to fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1420#issuecomment-853030860:127,toler,tolerance,127,https://qutip.org,https://github.com/qutip/qutip/pull/1420#issuecomment-853030860,4,"['error', 'toler']","['error', 'tolerance']"
Availability,"@Ericgig Should we just raise an error if `offset != 0` is passed with `method=""operator""`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1469#issuecomment-991004427:33,error,error,33,https://qutip.org,https://github.com/qutip/qutip/pull/1469#issuecomment-991004427,1,['error'],['error']
Availability,"@Ericgig Thanks for finding that -- I obviously missed a last round of testing in Jupyter notebooks. I've added a special case for the inline backed in Jupyter notebook and even more comments. The downside is that the whole situation with matplotlib is crazy and the current Bloch implementation is not making things any more sane. The upside is that things now seem to work fairly nicely for me in practice. Holding thumbs that they work nicely for you too. P.S. As a bonus, `b.show()` now works for displaying the colormap and the `b.fig` special case is no longer needed (although it still works too).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619#issuecomment-989293761:197,down,downside,197,https://qutip.org,https://github.com/qutip/qutip/pull/1619#issuecomment-989293761,1,['down'],['downside']
Availability,"@Ericgig Thanks for finding this. I don't think we should add a setting for this though -- it's too obscure. The point of returning `None` when `p == 0` seems to be to avoid division by zero, not to round down small probabilities. I think we should either 1) update the test or 2) if we lots some precision in a recent change, try to get that precision back. Do you know which change caused the loss of precision?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917036156:205,down,down,205,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917036156,1,['down'],['down']
Availability,@Ericgig Will you ping me when you'd like another round of review? Thanks for making the changes so far.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1789395152:18,ping,ping,18,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1789395152,1,['ping'],['ping']
Availability,"@Ericgig `b=Bloch()` QuTiP 4.3.1 and 4.4.0.dev0+5af8c1c5 on python 3.7.3 works on Mac, both from shell and Jupyter notebook. Also plotting is fine. Simply running `Bloch()` in Jupyter notebook gives the error; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. /miniconda3/lib/python3.7/site-packages/qutip/bloch.py in _repr_svg_(self); 298 from IPython.core.pylabtools import print_figure; 299 self.render(); --> 300 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 301 plt.close(self.fig); 302 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```; but then plots the Bloch sphere, I don't know if it's a problem though or the correct functioning of the class. In shell it gives the object reference.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1011#issuecomment-502906115:203,error,error,203,https://qutip.org,https://github.com/qutip/qutip/issues/1011#issuecomment-502906115,1,['error'],['error']
Availability,"@Ericgig and I had a brief discussion about how to handle `inf` and `nan` generally. One option is forbid them entirely from the data layer -- i.e. to check and raise an error whenever a new data layer is created. A potential downside to this is we'd have to check often to be sure, since any operation can potentially create `nan` and `inf`, even simple addition:; ```python; >>> 1e308 + 1e308; inf; >>> (1e308 + 1e308) - (1e308 + 1e308); nan; ```; an alternative is to try propagate `nan` and `inf` only as correctly as, e.g., `BLAS`. What happens with `BLAS` is that `nan` and `inf` propagate reasonably correctly, but are considered fairly interchangeable -- i.e. `nan`, `inf`, and `-inf` are all just bad values.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957#issuecomment-1208234717:170,error,error,170,https://qutip.org,https://github.com/qutip/qutip/pull/1957#issuecomment-1208234717,4,"['down', 'error']","['downside', 'error']"
Availability,"@Ericgig good idea about the tests, I'll implement them in this way. now there seems to be some problem with continuous integration, it fails on. ```; ERROR: Failure: ImportError (libgfortran.so.1: cannot open shared object file: No such file or directory); ```. I attempted to fix it by installing `libgfortran` using `conda`, however it didn't fix the issue. https://github.com/travis-ci/travis-ci/issues/4816#issuecomment-148789525; https://github.com/menpo/landmarkerio-server/issues/23#issuecomment-278361601. I don't want to mess up too much with continous integration as it takes long time to rebuild it, any suggestions on that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-427726780:151,ERROR,ERROR,151,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-427726780,2,"['ERROR', 'Failure']","['ERROR', 'Failure']"
Availability,"@Ericgig sure I will be happy to fix the linting errors, I seem to have missed your previous message about codeclimate, sorry about that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1655#issuecomment-926628157:49,error,errors,49,https://qutip.org,https://github.com/qutip/qutip/pull/1655#issuecomment-926628157,1,['error'],['errors']
Availability,"@Ericgig thanks! found the keywords. I am having some issue with the state being returned though and I am unsure how to work around them. I basically want to calculate expect(Oper, args[""state""]) which gives me a dimension mismatch, if I try doing (Oper*args[""state""]).tr() to find the expectation value, it tells me there is a shape mismatch. I initially start with Oper and psi0 shape as (8,8) but the args[""state""] returns a shape of (64,1). Any idea how to get around this issue? states in the 1d vector or the 2d matrix form also doesn't help leading to similar dimension mismatch errors. I was trying to look into the source code but couldn't figure out how to unflatten the Qobj state",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1538#issuecomment-786988728:586,error,errors,586,https://qutip.org,https://github.com/qutip/qutip/issues/1538#issuecomment-786988728,1,['error'],['errors']
Availability,"@Ericgig tracked this issue down to only occuring on numpy 1.21.X (and not 1.20.X) on CI workers with certain Intel CPUs (8171 and 8272). There are a number of changes in numpy 1.21 which could have caused this, but it might take awhile to track down. The plan from here is to make a small PR for some of the tiny clean-ups from here that seem good to have anyway, and then to create a new PR off of master to try get us back onto 1.21.X somehow (probably this will require a numpy fix, but maybe there is another work around).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-949937189:28,down,down,28,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-949937189,2,['down'],['down']
Availability,"@Ericgig: #1337 broke `mcsolve` seed reuse - it seems to be deliberate, since all the seed code has been explicitly cut. Is this something that `mcsolve` will no longer support? If so, we need to remove the tests of seeding, because they're failing the build, and if not we need to reinstate it quickly so we can have passing tests. Also options classes should probably throw an error when given an unknown key.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-675463113:379,error,error,379,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-675463113,1,['error'],['error']
Availability,@Ericgig: another random failure in the CI here (errored test is unchanged in this PR).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-623953963:25,failure,failure,25,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-623953963,2,"['error', 'failure']","['errored', 'failure']"
Availability,"@Erotemic Thank you for documenting this. I will merge it shortly & have marked if for inclusion in QuTiP 4.6.3. Note that qutip-qip has also been split out into it's own package (https://github.com/qutip/qutip-qip) in preparation for QuTiP 5 so we should update it there too. `reverse_states` seems to reverse the order of the array of quantum and classical bits. It is a bit odd, so I'm happy to leave it undocumented. The original commit just read:. ```; commit dcf8d363718b6ee5a8a17ec9af00df4bc8aea166; Author: Robert Johansson; Date: Mon May 26 19:11:44 2014 +0900. allow reversing the circuit represenation. added support for multigate symbol; ```. @BoxiLi Just pinging you so you know I merged this and can comment if you like.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1652#issuecomment-914132388:668,ping,pinging,668,https://qutip.org,https://github.com/qutip/qutip/pull/1652#issuecomment-914132388,2,['ping'],['pinging']
Availability,"@Gerb0ise The `no attribute 'blas_opt_info'` error is from a change in numpy 1.22 the broke qutip. After you found it it was also reported in #1753 and fixed in #1752. It will be released in 4.6.3 but that will likely only be next week, so for now reverting to numpy 1.20.3 might be the correct solution. BLAS is OPENBLAS now because of the `nomkl` used previously. You can switch blas implementations back to MKL with `conda install ""libblas=*=*mkl""` (see https://conda-forge.org/docs/maintainer/knowledge_base.html#switching-blas-implementation).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1006031950:45,error,error,45,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1006031950,1,['error'],['error']
Availability,"@HarshBabla99 I'm guessing based on the error message that you are running QuTiP on Windows. Do you have a C compiler installed? The compiler is needed to compile the strings. The Windows installation instructions are outlined at https://qutip.org/docs/latest/installation.html#installation-on-windows. I would recommend installing everything using conda if you can (see higher up on the install documentation page). If the compiler is installed, perhaps it is an issue with the compiler not being present in the `PATH`. Either way, this appears to be not an issue with QuTiP itself, but let's keep this issue open for a bit so that we can help you resolve things as best we can. I would also recommend upgrading your Python, QuTiP and numpy to more recent versions if possible. If you use conda, you should get the latest versions unless you explicitly request otherwise.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1914#issuecomment-1143281384:40,error,error,40,https://qutip.org,https://github.com/qutip/qutip/issues/1914#issuecomment-1143281384,1,['error'],['error']
Availability,@KosukeMizuno Thank you very much again for finding and reporting this error. We've addressed the issue in #1588. This fix will be included in the [4.6.3](https://github.com/qutip/qutip/milestone/19) release.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-870513900:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-870513900,1,['error'],['error']
Availability,"@MartinSandeCosta, free feel to complete the tests in the way you want. However, maybe it is good to discuss a bit with @jakelishman? Since there is a refactoring of `qutip/tests/test_gates.py` in #1181. A lot of change in this test might make it hard to resolve two PRs later. Besides, it is better to leave a more detailed description in the PR. As the template indicated:; ```; **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156:764,error,error,764,https://qutip.org,https://github.com/qutip/qutip/pull/1224#issuecomment-607803156,1,['error'],['error']
Availability,"@Zac-HD Any suggestions for ways we could use hypothesis better? It all looks quite clean right now. Is there a way we can change what hypothesis prints when an example is found? E.g. we don't want the data layer object repr to include the contents of the array, but it would be nice to see that in the test failure output.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1957#issuecomment-1186229765:308,failure,failure,308,https://qutip.org,https://github.com/qutip/qutip/pull/1957#issuecomment-1186229765,1,['failure'],['failure']
Availability,"@ajgpitch I am trying to fix this will Pull #660. I do not see this on any other compiler, so it is hard to peg down. Hopefully, switching to a vector from a pointer does the trick. The strange thing is that Apple's own clang compiler does not abort with this error, but somehow XCODE does.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-286179882:112,down,down,112,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-286179882,2,"['down', 'error']","['down', 'error']"
Availability,@ajgpitch I believe I fixed the pep8 issues. . There was also a cython issue where I was compiling tensor.pyx each time qutip starts (aka dev mode) rather than leaving it pre-compiled. I think this might be related to the travis test failures. We are about to find out.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-403663024:234,failure,failures,234,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-403663024,1,['failure'],['failures']
Availability,"@ajgpitch I looked into the changes that Daniel mentioned. But, I would like to close this without merging with QuTiP as I feel that the QubitCircuit class needs some new features to make this addition interesting (Eg., allowing special ancillas, controlled measurement and tracking of the Pauli measurement errors etc.). This was almost 3 years back where I brute forced all of that as Gates. I am not happy to release this code as it is which can be buggy. So, I am closing this. If there is more interest later, we could open it again.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-466346440:308,error,errors,308,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-466346440,1,['error'],['errors']
Availability,@ajgpitch Re-pinging (in case life got busy).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-541419814:13,ping,pinging,13,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-541419814,1,['ping'],['pinging']
Availability,"@ajgpitch yes, the solver does raise an error... but not always. I was able to get it to integrate a few times but it was very inconsistent. The other error it sometimes raises is ""too much accuracy was requested for the precision of the machine"". When I realized the issue, I was very surprised it even got that far and I still don't know how it could ever run the calculation with a bad `rho0`. @nonhermitian yes, I see the point in the code where `mesolve` digs down into various types of `H` input. I'll work on something for the easy Qobj cases first, and think about how to handle the function case. Should be able to test the size of what the function returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479#issuecomment-221595850:40,error,error,40,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221595850,3,"['down', 'error']","['down', 'error']"
Availability,"@ajgpitch: i apologise. my mistake. i forgot about the review.; @sahmed95: downloaded your code. i get an error ""ModuleNotFoundError: No module named 'qutip.qip.icm'. where do I find this module?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-315327458:75,down,downloaded,75,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-315327458,2,"['down', 'error']","['downloaded', 'error']"
Availability,"@albertomercurio Do you know if there is documentation of how the built-in support works somewhere? Perhaps the ""built-in"" support is only available in some newer version of Visual Studio? Or it has a bug? Or just works a bit differently?. Thank you for filing this issue -- I'm sure other Visual Studio users will encounter it too and hopefully this discussion will help even if the fix ends up being elsewhere.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1809#issuecomment-1043051695:139,avail,available,139,https://qutip.org,https://github.com/qutip/qutip/issues/1809#issuecomment-1043051695,1,['avail'],['available']
Availability,"@alexandrupaler Thank you for looking into this. You will have to download this branch and install it in order to find qutip.qip.icm. I think the following set of steps should do it. These are from this [stack overflow question](https://stackoverflow.com/questions/1911109/how-to-clone-a-specific-git-branch). 1. Clone my version of QuTiP using ; ```; git clone https://github.com/sahmed95/qutip.git; ```. 2. Checkout the icm branch in the cloned folder; ```; git checkout icm; ```; 3. Install QuTiP from that branch by going to cloned QuTiP folder; ```; python setup.py install; ```; Alternate way to do this is just copy paste the `qutip/qip/icm.py`, `qutip/qip/circuit.py` and `qutip/tests/test_qubitcircuit.py` files into your local installation of QuTiP. . There are examples in [`qutip/qip/tests/test_icm.py`](https://github.com/qutip/qutip/pull/603/files#diff-93808767f70729e7e757566e9a32b430) which may be useful to see how the code works. @ajgpitch @nonhermitian Suggestions on the recommended way of doing this ? There is this tool called [""hub""](https://hub.github.com) which allows you to directly checkout pull requests using `hub checkout https://github.com/qutip/qutip/pull/603`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603#issuecomment-315378380:66,down,download,66,https://qutip.org,https://github.com/qutip/qutip/pull/603#issuecomment-315378380,1,['down'],['download']
Availability,"@andriusdc The easiest would be if you supplied a short snippet of Python code that when runs, reproduces this error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879105295:111,error,error,111,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879105295,1,['error'],['error']
Availability,@awkwardPotato812 Hi. Your error is similar to the problem on this [website ](https://iq.opengenus.org/module-compiled-against-api-version-0x10-but-this-version-of-numpy-is-0xe/). You may have to upgrade your numpy.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2098#issuecomment-1463557721:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/2098#issuecomment-1463557721,1,['error'],['error']
Availability,"@bencbartlett Ah, yes. Well spotted. I have experience a similar problem when I tried to use MP with the control modules. Because there are back references to objects in the hierarchy it copied the whole object tree into memory for each process, which was hopelessly memory inefficient. It is one of the main reasons I am (slowly) work on a new implementation of the control modules. I did play around a bit and got something to work, but *I did not try Python 2*. Maybe we should consider dropping Python 2.x support in QuTiP v5? It's possible that new versions of Python 2.7 have resolved the instance method pickling issue. The 'hacky workarounds' post was from 2014. @sahmed95 I think we should accept Ben's option 3 proposal. We need to demonstrate we have a robust and elegant solution for multiprocessing before we move things to processor classes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-386245008:764,robust,robust,764,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-386245008,1,['robust'],['robust']
Availability,@cgranade did you test your PR #362 against dick-t example? If so what were the results?; It would seem that dick-t is comparing a method that works with states in general (mixed or pure) with one that assumes states are pure. Do we have some method in qutip that gives the fidelity when states are assumed pure? It would seem more efficient (and less numerical error risk) to compute the fidelity without the sqrtm (as dick-t did in the comparison) if we knew the states were pure.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361#issuecomment-134927300:362,error,error,362,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134927300,1,['error'],['error']
Availability,"@drew-parsons If fixing this will help packaging for Debian, we will definitely fix it!. This appears to be considered an `Xvfb` bug (or at least the discussion in https://github.com/The-Compiler/pytest-xvfb/issues/11 suggests that), but having tests close their windows does seem polite anyway. Installing `xvfb` and `pytest-xvfb` reproduces the error for me and adding `plt.close(""all"")` to the end of `testPlot` removes the error again. After that the rest of the test suite passes, although there have been some reports in the pytest-xvfb of timing or test order sensitive results, so there may be more problems to be found later. For now I'll open a PR that adds the `plt.close(""all"")`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909191682:347,error,error,347,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909191682,2,['error'],['error']
Availability,"@fminga Thank you for catching the slow down, It should be better now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/991#issuecomment-498380704:40,down,down,40,https://qutip.org,https://github.com/qutip/qutip/pull/991#issuecomment-498380704,1,['down'],['down']
Availability,@gabbence95 ; Thank you for catching the error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2331#issuecomment-1964255367:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/issues/2331#issuecomment-1964255367,1,['error'],['error']
Availability,@gadhvirushiraj Ping me when you'd like a re-review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2110#issuecomment-1461774279:16,Ping,Ping,16,https://qutip.org,https://github.com/qutip/qutip/pull/2110#issuecomment-1461774279,1,['Ping'],['Ping']
Availability,"@gaurav-iiser Would you mind also merging the master branch into this one? We recently merged some changes that fixed regular failures in test runs after the new version of numpy broke some tests, and it would be good to have those included in here so that test runs pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1690#issuecomment-950320006:126,failure,failures,126,https://qutip.org,https://github.com/qutip/qutip/pull/1690#issuecomment-950320006,1,['failure'],['failures']
Availability,@gautierronan Apologies for the long delay in further review of this. Could you perhaps update this branch from master and then ping me to review it again? I can them hopefully review and merge this and mark it for inclusion in QuTiP 4.7.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1369#issuecomment-893433268:128,ping,ping,128,https://qutip.org,https://github.com/qutip/qutip/pull/1369#issuecomment-893433268,1,['ping'],['ping']
Availability,"@haoyudoingthings It looks from your error messages that they are caused not by the import cells, but by later cells, and are the result of having modified the notebook. For example, `H = qt.qobj_list_evaluate(h_t, tau, args)` is a modified line from cell 13 of the original notebook. I would suggest starting again from the original notebook and continuing from there. Some of the notebooks are out of date. We're setting up automated tests to correct that as part of this year's Google Summer of Code, but that has only just started so it might be a few months before we have everything set up. I'm closing this for now, but please feel free to update the issue if you encounter more problems.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930#issuecomment-1153919964:37,error,error,37,https://qutip.org,https://github.com/qutip/qutip/issues/1930#issuecomment-1153919964,1,['error'],['error']
Availability,"@hodgestar , I think I responded to all your comments.; The tests for core/blochredfield.py are present, I think it has a 100% coverage.; I did little cut and paste, but stayed close to the original cython code when possible. The question I still have is about the `a_ops` format: I made breaking changes from v4, so I want to be sure the new way is clear. I think `matmul_var_data` should be available in `core/data` not implemented here, but I don't want to touch that part in this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1651#issuecomment-1010222890:393,avail,available,393,https://qutip.org,https://github.com/qutip/qutip/pull/1651#issuecomment-1010222890,2,['avail'],['available']
Availability,"@hodgestar ; It's ready for another look.; I made it so the feedback can be set at `QobjEvo` creation, with `QobjEvo.add_feedback` method and with a method of the solver. `QobjEvo` with feedback can be used outside solver with a default value for the argument passed at creation. This default value is needed when creating the coefficient. When used in a solver an error will be raised if the solver cannot provide the feedback. The `QobjEvo` print will show it has feedback. . The solver method is mostly there for documentation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1789631286:365,error,error,365,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1789631286,2,['error'],['error']
Availability,"@hodgestar Hi, I have managed to reproduce the error with a much smaller code which i have attached at the bottom. Quitp.about() :. QuTiP Version: 4.7.0; Numpy Version: 1.21.5; Scipy Version: 1.7.3; Cython Version: 0.29.28; Matplotlib Version: 3.5.1; Python Version: 3.9.12; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (arm64); Installation path: /opt/anaconda3/lib/python3.9/site-packages/qutip. <img width=""1130"" alt=""Screenshot 2022-08-27 at 12 58 25"" src=""https://user-images.githubusercontent.com/75099190/187029284-1cda7133-9ed1-4b95-82a0-d1b5eb10c36e.png"">. ￼; <img width=""1074"" alt=""Screenshot 2022-08-27 at 12 58 46"" src=""https://user-images.githubusercontent.com/75099190/187029267-49dc711b-412f-4e12-acb4-cfb195902351.png"">. ￼; import numpy as np; from qutip import *. wc = 1.0 * 2 * np.pi ; wa = 1.0 * 2 * np.pi ; g = 0.05 * 2 * np.pi ; N=15 ; rate = 0.005. tlist = np.linspace(0, 25, 101); psi0 = tensor(basis(N, 0), basis(2, 1)) ; a = tensor(destroy(N), qeye(2)); sm = tensor(qeye(N), destroy(2)); H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() * sm + a * sm.dag()). output = mesolve(H, psi0, tlist)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229179569:47,error,error,47,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229179569,1,['error'],['error']
Availability,"@hodgestar Thanks for you help!. However, If I set `dims=[4, 4, 4]`, an issue with the initial state arises. I'm setting an initial state by converting from a regular array to a Qobj:. `psi_zero=Qobj(psi_initial,dims=[4,4,4],type='ket')`. If I set `dims=[4, 4, 4]` instead of ` [[4, 4, 4], [1, 1, 1]]`, I will get an error for the ket:. ```; File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\IPython\core\formatters.py"", line 345, in __call__; return method(). File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qobj.py"", line 831, in _repr_latex_; t = self.type. File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qobj.py"", line 2058, in type; self._type = type_from_dims(self.dims). File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\dimensions.py"", line 65, in type_from_dims; bra_like, ket_like = map(is_scalar, dims). ValueError: too many values to unpack (expected 2); ```. It seems that qutip requires dims to be a list of two lists, giving two dimensions for each particle.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1038576371:317,error,error,317,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1038576371,1,['error'],['error']
Availability,"@hodgestar shall we attempt to sort out the caching now, or get things moved over ahead of Unitary Hack and sort it out later? I don't think it's particularly a blocking issue - the tests still all run fine, after all. There's an argument against using `pip wheel` caching for us - we've historically used our tests to try and catch errors when using new versions of packages, which we'd lose if we start pinning versions to one particular thing. I'm not sure which is more desirable for us - overall I think the time loss from installing `cvxpy` isn't _that_ high, and we'd get more improvement from redoing some of our older tests. (Not to mention the _effective_ wait time for tests to pass is now ~35 minutes, whereas it could be >2hours on Travis since you had to wait from Mac machines for a long time.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551#issuecomment-839686694:333,error,errors,333,https://qutip.org,https://github.com/qutip/qutip/pull/1551#issuecomment-839686694,1,['error'],['errors']
Availability,"@hodgestar since yesterday our tests are failing for python3.9 ubuntu, but I can't reproduce the error locally...; I you have time could you take a look.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1689#issuecomment-943619749:97,error,error,97,https://qutip.org,https://github.com/qutip/qutip/pull/1689#issuecomment-943619749,1,['error'],['error']
Availability,"@hodgestar, I fixed the codeclimat issues and improved the error message. If your still fine with it, let's merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1778#issuecomment-1017814632:59,error,error,59,https://qutip.org,https://github.com/qutip/qutip/pull/1778#issuecomment-1017814632,1,['error'],['error']
Availability,@jakelishman I just pinged you for fun and because I though you might like to see the QuTiP documentation builds being dragged into the century of the fruit bat. :),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2149#issuecomment-1494599342:20,ping,pinged,20,https://qutip.org,https://github.com/qutip/qutip/pull/2149#issuecomment-1494599342,1,['ping'],['pinged']
Availability,"@jakelishman Sorry -- I forgot we added the TODO. I was speaking from a bigger picture perspective -- having CodeClimate fail all the time means that we might not notice if more failures are added accidentally, which would reduce the value of running CodeClimate in CI.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826663656:178,failure,failures,178,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826663656,1,['failure'],['failures']
Availability,"@jakelishman Thanks for this really great PR. I have just a few comments to add to keep track of the private class `_alpha_matrix` and how it behaves. No changes to the code so if you think these comments are reasonable and can help to clarify how it all works for future maintenance, then go ahead and add them and we can merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-877301763:272,mainten,maintenance,272,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-877301763,1,['mainten'],['maintenance']
Availability,"@jakelishman, about the two issues you raised:. 1. Import time related to `import qutip`; I agree with you that in order to make it frictionless for downstream libraries to implement qutip's interface you'd want not to increase their loading times. That would easily be achieved by defining the `__qutip_qobj__` as the entry point of this API. A drawback of this implementation is that it requires the conversion method to be defined on the object itself.; The dispatch-like solution, as was proposed by @hodgestar, is easier to play with, can be defined in a separate file, can be added to a separate package like `netket_qutip_interop` or even using setuptools entry points, though that would add complexity. Again, I'm personally not biased. I would go with option 1 because it's simpler, but I do like the organisational beauty of option 2 (that is used throughout the jax ecosystem). 2. About implicit conversion; - Assume we can distinguish two level of APIs exposed by qutip, similar in spirit to the distinction there is between BLAS and LAPACK. ; - There are low level (BLAS-like) operations on Qobjs such as addition, kron, sum, ecc that are performed repeatedly, can be efficiently implemented only among objects whose data structure is well know. Everything is built on top of those, so they need to be fast with a low overhead. ; - There are higher-level (LAPACK-like) operations on Qobjs, such as `.eigenvalues()` or `eigenstates()`, or `sesolve/mesolve` which are built by combining several low level operations. Their runtime is much higher, and they perform a fair bit of setup/input handling, which comes at the price of some overhead, but which is negligible compared to the runtime cost for most meaningfully large systems. I'd then like to state that; - *I have never suggested to insert a mechanism to insert implicit conversion in the low-level operations.* ; - In this RFC in no way have I proposed to implement implicit conversion anywhere else then were is already done in qu",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687:149,down,downstream,149,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-913661687,2,['down'],['downstream']
Availability,"@jrjohansson plot_pulse is giving an error alongwith the output in case of linear spin chain, please check that out",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/165#issuecomment-46957561:37,error,error,37,https://qutip.org,https://github.com/qutip/qutip/pull/165#issuecomment-46957561,1,['error'],['error']
Availability,"@madphysicist Just re-pinging. As before, it's perfectly okay if you've run out of time a bit -- just let us know.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1469#issuecomment-875604784:22,ping,pinging,22,https://qutip.org,https://github.com/qutip/qutip/pull/1469#issuecomment-875604784,1,['ping'],['pinging']
Availability,@manas7891 This is a question about usage of qutip. Please ask on help group and include full code snippet.; https://groups.google.com/forum/#!forum/qutip. You get the test errors because you don't have working C++ compiler,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467351684:173,error,errors,173,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467351684,1,['error'],['errors']
Availability,"@matteoacrossi Thanks! I don't know that I have much particular advice, other than ""let's try debug the failing tests one at a time"". Maybe pick one of the `test_driven_cavity` ones, because I'm not quite sure how `ValueError: Invalid preconditioning method` can get raised when it succeeds on other platforms. Maybe it is a bug that isn't completely related to the M1?. Are you familiar with pdb? Running just the one test using pytest and `pytest --pdb` will allow to explore the stack trace and see the values of variables in each stack frame, and hopefully figure out what went wrong. Another first step is just to fix the line `raise ValueError(""Invalid preconditioning method."")` to be `raise ValueError(f""Invalid preconditioning method: {ss_args['method']!r}."")` so that the error messages gives more of a hint of what the invalid method name was.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1755#issuecomment-1007285325:782,error,error,782,https://qutip.org,https://github.com/qutip/qutip/issues/1755#issuecomment-1007285325,1,['error'],['error']
Availability,"@mcditoos Thanks more making the PR. Would you mind reverting all the unrelated changes? We don't mind small clean ups, but big clean ups should rather go into separate PRs and it should be clear why they are being made. Once you're ready for this to be reviewed, remove the draft status and ping me on the PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2261#issuecomment-1824959705:292,ping,ping,292,https://qutip.org,https://github.com/qutip/qutip/pull/2261#issuecomment-1824959705,2,['ping'],['ping']
Availability,"@nathanshammah ; I am keeping the release up to date adding merged PR to this one.; This version has most bug fix PR since 4.5.0 and some testing/travis one.; Idealy I would also like to add 2 more waiting approval:; #1219 : Bug on windows using int32; #1215: parallel_map run on mac in python 3.8.; I did not add the PR about gates, they are new feature.; The latex one (#1194 ), I am not sure, so I left it for now.; To be really happy about the release I would like the segfault to be fixed, but I don't have the error and travis test also does not. So I am blind for that one. It will have to wait.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746:516,error,error,516,https://qutip.org,https://github.com/qutip/qutip/pull/1215#issuecomment-613039746,1,['error'],['error']
Availability,"@nathanshammah ; That was a lot more than 1 commit but it's now ready.; - I added a test suite without cython. It only skip brmesolve time dependent tests. ; - Error is raised when trying to use brmesolve without cython, but not at qutip import.; - Every other features works without cython. I tested without cython with both conda and pip. It work with both when done properly but conda is not as stable: uninstalling cython can change numpy, scipy, etc.'s versions which break qutip. So I am not sure if it will work properly we downloaded as binaries from conda. But this error should already be present for conda installation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336:160,Error,Error,160,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-535188336,3,"['Error', 'down', 'error']","['Error', 'downloaded', 'error']"
Availability,"@nathanshammah I've merged in master, waiting for builds to complete. The code climate error is seems largely unrelated to this PR (the PR adds a tiny snippet of code that is similar to 4 other existing pieces of code). I'm happy to refactor this a bit if someone makes a suggestion, but the code climate error seems overly zealous to me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090#issuecomment-581037319:87,error,error,87,https://qutip.org,https://github.com/qutip/qutip/pull/1090#issuecomment-581037319,2,['error'],['error']
Availability,"@nathanshammah, everything seems to be working now! I fixed the small code-climate issues. I am pushing another commit with the changes. However, I am not eager to change __init__ function which has protective measures against a number of possible input errors and I do not even remember all of them readily.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1066#issuecomment-575514599:254,error,errors,254,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575514599,1,['error'],['errors']
Availability,"@nathanshammah: It seems that travis fails before it even gets to the testing, when calibrating openmp. I cannot replicate the error on my end, the calibration takes only about a second for me. I did make 535010d more similar to 5501b2e by no longer using numpy.testing.assert_raises, numpy.testing.assert_warns and a ResourceWarning. Instead I use a try-except construction now. That seems to have fixed things, so I suspect that importing/calling one of the functions or the warning makes openmp fail on the rig used by travis. As I'm pretty sure the reason for the previous failure is either a numpy or openmp issue and therefore a hard fix, I would propose to simply not use those functions, the try-except construction does well enough.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-567132755:127,error,error,127,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-567132755,4,"['error', 'failure']","['error', 'failure']"
Availability,@nonhermitian Hopefully you will see I pinged up on conda-forge/qutip-feedstock#18. There is a problem with the OSX build of QuTiP on the conda-forge,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/649#issuecomment-286091396:39,ping,pinged,39,https://qutip.org,https://github.com/qutip/qutip/issues/649#issuecomment-286091396,1,['ping'],['pinged']
Availability,"@nonhermitian The test failure is with NOMKL=1 and OPENMP=0. Specifically, a solver is unavailable. This is not related to the addition of this function. Something else is breaking. ```; cvxpy.error.SolverError: Solver 'CVXOPT' failed. Try another solver.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-331760244:23,failure,failure,23,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-331760244,2,"['error', 'failure']","['error', 'failure']"
Availability,"@nonhermitian this seems to generate some errors, are you able to fix?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/735#issuecomment-465839176:42,error,errors,42,https://qutip.org,https://github.com/qutip/qutip/pull/735#issuecomment-465839176,1,['error'],['errors']
Availability,"@nonhermitian, I have fixed the import error but 2/4 testers fail. As far as I can tell this is unrelated to this PR. Is there anything that I should do before this can be merged?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/553#issuecomment-257148174:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/553#issuecomment-257148174,1,['error'],['error']
Availability,@nquesada just pinging you as it would be great to have your contribution in the upcoming version release in a week or so.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1148#issuecomment-574254948:15,ping,pinging,15,https://qutip.org,https://github.com/qutip/qutip/issues/1148#issuecomment-574254948,1,['ping'],['pinging']
Availability,"@nwlambert ; Unable to run the test cases in (entropy.py) it show this error ; <img width=""850"" alt=""Screenshot 2024-03-20 at 2 48 54 AM"" src=""https://github.com/qutip/qutip/assets/147247481/710869a8-79e6-4941-b6d6-2ad0cf9fd76d"">; Can you please suggest me the solution to solve it ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2345#issuecomment-2008154917:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/issues/2345#issuecomment-2008154917,1,['error'],['error']
Availability,"@nwlambert Thanks for the help, it somehow solves the problem a bit. However, it doesn't really help much when I increase the Hilbert space cut-off to N=20 or 25. In fact, 4.7 still calculates instantly, but 5.0 will report an error that the space required is too large, or the kernel just shuts down itself... I don't know so much about algorithms, but from your answer it seems that 4.7 and 5.0 are using completely different ways to handle matrices? It seems the 5.0 method is in general a bit slower to handle heavier calculations?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2115#issuecomment-1463804614:227,error,error,227,https://qutip.org,https://github.com/qutip/qutip/issues/2115#issuecomment-1463804614,2,"['down', 'error']","['down', 'error']"
Availability,"@rohan999chaudhary Could you share the error traceback? . From the documentation, the default value for `blit` is False. Perhaps, you could remove the `blit` argument and try again?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558#issuecomment-842039776:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/1558#issuecomment-842039776,1,['error'],['error']
Availability,"@shemian29 Did this issue occur after you upgraded QuTiP or one of it's dependencies? And how did you install QuTiP? The IPython kernel crash suggests that maybe the installation is broken somehow (e.g. mismatched C libraries, etc). I can't reproduce your error on my side.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705#issuecomment-959146334:256,error,error,256,https://qutip.org,https://github.com/qutip/qutip/issues/1705#issuecomment-959146334,1,['error'],['error']
Availability,"@shemian29 It's possible that the error is caused by using numpy 1.21.2 with MKL which triggers this bug -- https://github.com/numpy/numpy/issues/20356 -- on Intel CPUs that support AVX512. If that is the case, it should be fixed by install QuTiP 4.6.3 when it is released (hopefully early next week) and numpy 1.22. P.S. If you like, you could install QuTiP from the master branch and numpy 1.22 now and see if that solves your issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1705#issuecomment-1006413111:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/issues/1705#issuecomment-1006413111,1,['error'],['error']
Availability,@stelakus It's odd that `conda install nomkl qutip` is hanging when `conda install qutip` succeeded. I don't use Windows much myself. Other options are to try downgrade numpy to 1.20.3 perhaps. Or to see what other BLAS implementations are supported in your conda environment and try explicitly install one of those. If you can get more information on why the install is hanging (maybe with `conda install -vvv ...`) I might be able to make more suggestions. Aside: You seem to be running in your `base` conda environment. That is probably not a good idea -- create a new environment for each project you work on so that the `base` environment remains pristine.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1006037619:159,down,downgrade,159,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1006037619,1,['down'],['downgrade']
Availability,@tamakoshi2001 Thanks for the info! That fixed my error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2098#issuecomment-1465279129:50,error,error,50,https://qutip.org,https://github.com/qutip/qutip/issues/2098#issuecomment-1465279129,1,['error'],['error']
Availability,"@tehruhn and I found that trying to install qutip from pip with the latest python 3.9 fails. When we run the installations from a fresh conda env (conda 4.8.5) using pip as. ```; pip install qutip; ```; or with conda (using both). ```; conda install -c conda-forge qutip; conda install qutip; ```. we get different errors. The errors do not occur if we use python3.8 while creating the conda environment as. ```; conda create -n py38 python==3.8; ```. Looking at the error it seems there is specification that prohibits python 3.9. @jakelishman @Ericgig any idea about this?. # Steps to reproduce (with conda 4.8.5). ```; conda create -n qutip-test python=3.9; conda activate qutip-test; conda install -c conda-forge qutip; ```. ### Error; ```; Collecting package metadata (current_repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: failed with repodata from current_repodata.json, will retry with next repodata source.; Collecting package metadata (repodata.json): done; Solving environment: failed with initial frozen solve. Retrying with flexible solve.; Solving environment: \; Found conflicts! Looking for incompatible packages.; This can take several minutes. Press CTRL-C to abort.; failed. UnsatisfiableError: The following specifications were found; to be incompatible with the existing python installation in your environment:. Specifications:. - qutip -> python[version='2.7.*|3.5.*|3.6.*|>=2.7,<2.8.0a0|>=3.6,<3.7.0a0|>=3.7,<3.8.0a0|>=3.8,<3.9.0a0|>=3.5,<3.6.0a0|3.4.*']. Your python: python=3.9. If python is on the left-most side of the chain, that's the version you've asked for.; When python appears to the right, that indicates that the thing on the left is somehow; not available for the python version you are constrained to. Note that conda will not; change your python version to a different minor version unless you explicitly specify; that. Note that strict channel priority may have removed packages",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371:315,error,errors,315,https://qutip.org,https://github.com/qutip/qutip/issues/1371,4,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"@tehruhn let's look into this together this week so that I can understand better also Eric comments. I would be happy to merge, and open a separate issue on the np-Cython bit. nose to pytest migration has been dragging on for ages. Also, please let's try to find a way to have the docstrings print to screen, the verbosity=2 thing does not seem to work. With `nose` and current development master now I get a segmentation fault on Mac 10.14 so I cannot test locally.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-563243088:422,fault,fault,422,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-563243088,1,['fault'],['fault']
Availability,"@thangleiter: this particular error looks possibly like it's caused by build incompatibility with the recently released numpy 1.20. I see that the environment is installing numpy 1.19, but I suspect that the build_wheels action of `pip install` is pulling in numpy 1.20. QuTiP 4.5 doesn't officially support installation from `pip` (we never had enough free CI available to build wheels) - you should be able to always get a working installation using the `conda-forge` channel of `conda`. We should have wheels in the next major release. We're currently facing a couple of problems with numpy 1.20 (#1433), but we'll be able to put out a patch when someone has time, which will include pinning numpy to a lower version when building.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-777556715:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-777556715,2,"['avail', 'error']","['available', 'error']"
Availability,"@trentfridey, there seems to be an error in the newly added towncrier github workflow that needs to be fixed before merging. Would you mind taking a look?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1927#issuecomment-1158769418:35,error,error,35,https://qutip.org,https://github.com/qutip/qutip/pull/1927#issuecomment-1158769418,1,['error'],['error']
Availability,@wrzadkow thank you. It sounds good to me. Could [detect](https://stackoverflow.com/questions/5376837/how-can-i-do-an-if-run-from-ipython-test-in-python) whether the environment is `IPython`. ; If you can write a test too for it to avoid environment-dependent errors that would be great.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/989#issuecomment-493725091:260,error,errors,260,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-493725091,1,['error'],['errors']
Availability,"@yosefrajwulf Thanks for pointing out the bug. I got an unrelated error in MacOS so restarting the tests. Hopefully, they pass and we can merge this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/943#issuecomment-456054829:66,error,error,66,https://qutip.org,https://github.com/qutip/qutip/pull/943#issuecomment-456054829,1,['error'],['error']
Availability,"A blog post with the method is now hosted also at https://unitary.fund/posts/krylov.html; @Ericgig @emilianomfortes what is the next step? I suggest you proceed by opening a PR. Due to the limitations of the method applicability, I could see a use for it as `krylovsolve` for the time being. ; Pinging also @quantshah @cgranade who've been involved in the mentoring of the project.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1668#issuecomment-973132966:294,Ping,Pinging,294,https://qutip.org,https://github.com/qutip/qutip/issues/1668#issuecomment-973132966,1,['Ping'],['Pinging']
Availability,"A check on macOS wasn’t successful, but I don’t see how that error message could have any relation with krylovsolve",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1084513982:61,error,error,61,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1084513982,1,['error'],['error']
Availability,"A representation of a quantum circuit consiting of qubit initialisation (I), controlled NOT gates (C) and measurements (M) with respect to different bases. According to [1], the transformation of a circuit to the ICM representation provides a cannonical form for an exact and fault-tolerant, error corrected circuit needed for optimization prior to final implementation on a hardware model. The algorithm consists of magic qubit initializations, gate teleportation and conditional measurements on qubits. It can be a starting point for topological descriptions of quantum cirucuits important for fault-tolerant quantum computation and can become a part of a pipeline for optimization of topological quantum computing circuits. Check out the game (MeQuanics)[http://www.mequanics.com.au] which aims to do so using crowd sourcing. Several proposals exist for circuit optimizations once we have the topological circuit model (Machine learning, monte carlo search etc) and the ICM model can be a good starting point to get to the initial topological circuit (as far as I could understand). . The algorithm can be roughly described as follows : . ```; Require: Circuit C composed from {Toffoli,CNOT,H,P,T}; Replace the Toffoli gates with their decomposition; Replace the H gates with P V P (already implemented using `resolve_gates`); Implement P V P using gate teleportation outlined in [1]; ```. The final output is a quantum circuit only using qubit initialisations, CNOT and conditional measurements/correction. Once that is complete, maybe another addition can be a conversion to the topological model and visualizations. This is a work in progress. TODO; ------; [ ] Fix code errors; [ ] Write tests; [ ] Update examples and docs. References; ----------; .. [1] arXiv:1509.03962v1 [quant-ph]",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/603:276,fault,fault-tolerant,276,https://qutip.org,https://github.com/qutip/qutip/pull/603,4,"['error', 'fault']","['error', 'errors', 'fault-tolerant']"
Availability,"A.indices); A = A.tocsc(A); A.indices = perm.take(A.indices); ```; where, we previously, the following was being done; ``` py; L[perm[:,None], perm]; ```; with `perm` are obtained from `reverse_cuthill_mckee`. . I am not sure which behavior is the correct one, but the performance degradation is quite a lot (more than 10x) and prevents reaching sufficient enough tolerance. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import (about, destroy, qeye, steadystate, tensor). # Paramaeters; # -----------; Nc, Nm = 4, 30; E, kappa = 0.1, 0.3; gamma, delta = 3e-4, -0.43. # Operators; # ----------; a = tensor(destroy(Nc), qeye(Nm)); b = tensor(qeye(Nc), destroy(Nm)). # Hamiltonian; # ------------; H = -delta * (a.dag() * a) + (b.dag() * b) + 2.4 * kappa * (b.dag() + b) * (a.dag() * a) + E * (a.dag() + a). # Collapse operators; # -------------------; cc = np.sqrt(kappa) * a; cm = np.sqrt(2 * gamma) * b; cp = np.sqrt(gamma) * b.dag(); c_ops = [cc, cm, cp]. precond_options = {'permc_spec': 'NATURAL', 'diag_pivot_thresh': 0.1, 'fill_factor': 100, 'options': {'ILU_MILU': 'smilu_2'}}; solver_options = {""use_precond"": False, ""atol"": 1e-10, **precond_options}. rho_ss = steadystate(H, c_ops, method=""direct"", solver=""gmres"", use_rcm=True, **solver_options); ```. ### Code Output. ```shell; RuntimeError: scipy.sparse.linalg.gmres error: Tolerance was not reached; ```. ### Expected Behaviour. Expected tolerance should be reached as we get in `v4.7` like.; ``` py; Quantum object: dims = [[4, 30], [4, 30]], shape = (120, 120), type = oper, isherm = True; ```. ### Your Environment. ```shell; QuTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: None; Matplotlib Version: 3.9.0; Python Version: 3.10.4; Number of CPUs: 8; BLAS Info: Generic; INTEL MKL Ext: False; Platform Info: Darwin (arm64); ```. ### Additional Context. For more context, I noticed this behaviour while working on this [PR](https://github.com/qutip/qutip-tutorials/pull/97).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2443:2207,error,error,2207,https://qutip.org,https://github.com/qutip/qutip/issues/2443,3,"['Toler', 'error', 'toler']","['Tolerance', 'error', 'tolerance']"
Availability,AFAIK this error only manifests if you have a space of dimension 1.; and a space of dimension 1 is trivial. . Is there a use case where this actually manifests?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823#issuecomment-398962107:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/issues/823#issuecomment-398962107,1,['error'],['error']
Availability,"About only storing kets, but not averaging into a dm, we can't do that yet, but it's easy to implement so if useful, we can add the option. The error is not in the `_to_dm`, but in the addition, which is done in the sparse CSR format. No dense conversion are made. But the `proj` operator does not have a tidyup step, so any non-zero are kept, however small they are. This is also an easy fix that could help. The `MemoryError` is also not that helpful, we should improve the error message to tell what size of arrays are allocated. Thank you for reporting these and trying the alpha version. I see you don't have cython, do you have a way to compile the source yourself? ; Once fixed, I would be curious to have you try the development version without waiting for a release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523:144,error,error,144,https://qutip.org,https://github.com/qutip/qutip/issues/2299#issuecomment-1904338523,2,['error'],['error']
Availability,"About tests being very slow, I saw the following notice when I open the details:; ```; Please be aware travis-ci.org will be shutting down in several weeks, with all accounts migrating to travis-ci.com. Please stay tuned here for more information.; ```; I think we are still on `travis-ci.org`? Is this related to us? Maybe ""switch CI to GitHub Actions"" is more pressing than we thought.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-805920788:134,down,down,134,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-805920788,1,['down'],['down']
Availability,"About the simulation, the frequency of your `H0` is at the level of 10^12 (with w0=0), while your control amplitude `Delta` is only 10^6! This is a huge difference. I feel like there might be an error in the unit somewhere. The number of time steps sampled needs to be hundreds of millions. Simulate this whole process is not practical. By setting `w-w0=0` you discard the fast process and what remains is only `Delta`. With `w-w0=0`, I get reasonable oscillation with the following code; ```python; def pulse(t0,t):; return np.heaviside(t-t0,2e-9). def H1_coeff(t,args):; t0=args['t0']; phi=args['phi']; return Delta*pulse(t0,t)*np.sin((w-w0)*t+phi). H = [H0,[sx,H1_coeff]]. times=np.linspace(0, 0.00001, 1000). args = {""t0"":0, ""phi"":np.pi/2}; result = mesolve(H, basis(2,0), times, args=args, e_ops=[sz]); plt.plot(result.expect[0]); plt.show(); ```. If you want to observe the effect of RWA, you could set `w-w0` to be about 10 times `Delta`. That is, the frequency of your system's dynamics is about ten times larger than your driving. Discarding the system dynamics by RWA will lead to some visible error in the plot, but not significantly enough to destroy the driving dynamics. (Edited) About pulse that spikes up and dies down, a spike at one single time point is not well defined. Mathematically the integral will be 0 (in measures that makes sense here at least). If you want a pulse that is turned on for a certain duration and then off, you can use two Heaviside. But much easier: you can just shift your time scale and define your tlist `times` to be that time duration from `0` to `t_end`, which matches the duration of your pulse.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1466#issuecomment-810331229:195,error,error,195,https://qutip.org,https://github.com/qutip/qutip/issues/1466#issuecomment-810331229,3,"['down', 'error']","['down', 'error']"
Availability,"According to pep8 comparisons should be. ```; if Object is None:; ```. instead of . ```; if Object == None:; ```. I'm not 100% sure whether changing the comparisons will break anything so I left it untouched for now. If you have pep8 installed you can check for this error with. ```; pep8 --select=E711 *.py; ```. inside the qutip dir, which currently yields. ./bloch.py:443:17: E711 comparison to None should be 'if cond is None:'; ./bloch_redfield.py:141:16: E711 comparison to None should be 'if cond is None:'; ./bloch_redfield.py:176:14: E711 comparison to None should be 'if cond is not None:'; ./continous_variables.py:106:10: E711 comparison to None should be 'if cond is not None:'; ./continous_variables.py:117:13: E711 comparison to None should be 'if cond is not None:'; ./continous_variables.py:119:16: E711 comparison to None should be 'if cond is not None:'; ./correlation.py:130:14: E711 comparison to None should be 'if cond is None:'; ./correlation.py:180:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:198:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:227:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:257:13: E711 comparison to None should be 'if cond is None:'; ./correlation.py:307:13: E711 comparison to None should be 'if cond is None:'; ./eseries.py:230:22: E711 comparison to None should be 'if cond is None:'; ./essolve.py:73:18: E711 comparison to None should be 'if cond is None:'; ./fileio.py:48:17: E711 comparison to None should be 'if cond is None:'; ./fileio.py:141:17: E711 comparison to None should be 'if cond is None:'; ./fileio.py:155:27: E711 comparison to None should be 'if cond is None:'; ./floquet.py:492:24: E711 comparison to None should be 'if cond is None:'; ./floquet.py:651:16: E711 comparison to None should be 'if cond is None:'; ./floquet.py:703:14: E711 comparison to None should be 'if cond is not None:'; ./floquet.py:815:10: E711 comparison to None should be",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/10:267,error,error,267,https://qutip.org,https://github.com/qutip/qutip/issues/10,1,['error'],['error']
Availability,"According to the error message; ```; WARNING: invalid signature for automodule ('qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:'); WARNING: don't know which module to import for autodocumenting 'qutip.core.gates\n :members:\n :show-inheritance:\n :imported-members:' (try placing a ""module"" or ""currentmodule"" directive in the document, or giving an explicit module name); ```; That should be the error source. Lets use; ```; .. automodule:: qutip.core.gates; :members: ...; ```; first and see if it works.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2148414542:17,error,error,17,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2148414542,2,['error'],['error']
Availability,"Actually let's also leave it open until I can determine if it is indeed scipy. After installing scipy with pip as the scipy folks suggested, the example I had in that issue is now working, but I get the same integration error with qutip and same tests failing. When I get time, i'll try to distill down the qutip error to a scipy error and post an update. Hopefully the main issue is just a scipy error, but would be good to confirm.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1205435786:220,error,error,220,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1205435786,5,"['down', 'error']","['down', 'error']"
Availability,"Actually on a further look, `Qobj` does _not_ do suitable checks to prevent segfaults in Python-space code (including in the old version). I'll push a new commit to fix that. Behaviour without this PR:; ```python; In [1]: import qutip; ...: k1, k2 = qutip.rand_ket(50), qutip.rand_ket(100); ...: k1.overlap(k2); Segmentation fault: 11; ```. And with this PR:; ```python; In [1]: import qutip; ...: k1, k2 = qutip.rand_ket(50), qutip.rand_ket(100); ...: k1.overlap(k2); [ traceback removed ]; TypeError: incompatible lengths 50 and 100; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1306#issuecomment-652972473:325,fault,fault,325,https://qutip.org,https://github.com/qutip/qutip/pull/1306#issuecomment-652972473,1,['fault'],['fault']
Availability,Adapt to download / upload artifacts v4,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2476:9,down,download,9,https://qutip.org,https://github.com/qutip/qutip/pull/2476,2,['down'],['download']
Availability,Add QuTiP download statistics to better evaluate its impact,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:10,down,download,10,https://qutip.org,https://github.com/qutip/qutip/issues/997,1,['down'],['download']
Availability,Add a linux python 3.8 test; Fix MacOS python version to 3.7 as our test environment result in conflict on 3.8; * Does not fix mac tests' errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1125:138,error,errors,138,https://qutip.org,https://github.com/qutip/qutip/pull/1125,1,['error'],['errors']
Availability,Add a tolerance for measurement.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656:6,toler,tolerance,6,https://qutip.org,https://github.com/qutip/qutip/pull/1656,1,['toler'],['tolerance']
Availability,Add error message to MemoryError,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/2304,1,['error'],['error']
Availability,"Added the option to import string to python instead of compiling to cython for QobjEvo.; This is default if no cython, or set manually if cython available. `QobjEvoInstance.use_cython = False`; Added test and updated docstring.; Work in parallel.; Did not do any benchmark yet.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082:145,avail,available,145,https://qutip.org,https://github.com/qutip/qutip/pull/1082,1,['avail'],['available']
Availability,"After fixing the fortran issue here is the error:. # . ## ERROR: Test Qobj: trunc_neg works for non-diagonal opers. Traceback (most recent call last):; File ""/home/travis/miniconda/envs/test-environment/lib/python3.5/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/travis/build/qutip/qutip/qutip/tests/test_qobj.py"", line 816, in case; pos_qobj = qobj.trunc_neg(method=method); File ""/home/travis/build/qutip/qutip/qutip/qobj.py"", line 1246, in trunc_neg; if eigvals[idx] + acc / (idx + 1) >= 0:; IndexError: index 2 is out of bounds for axis 0 with size 2",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-181509701:43,error,error,43,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181509701,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"After installing qutip via conda (conda install qutip) on Mac 10.15.1 High Sierra, I ran the testing script using:. >> import qutip.testing as qt ; >> qt.run(). I am getting the following error: . Qobj subtraction ... python(4259,0x119a26dc0) malloc: Incorrect checksum for freed object 0x7fdbb05c5910: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(4259,0x119a26dc0) malloc: *** set a breakpoint in malloc_error_break to debug; Abort trap: 6. Does anyone know what is causing this, how to fix it, or what kinds of problems it might cause later? Thank you!. Sacha",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1120:188,error,error,188,https://qutip.org,https://github.com/qutip/qutip/issues/1120,1,['error'],['error']
Availability,"After installing qutip, in order to test qutip installation, I type ""python"" in terminal and then type ""import qutip.testing as qt"", getteing to the following error. import qutip.testing as qt; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; ModuleNotFoundError: No module named 'qutip'; >>> qt.run(); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'qt' is not defined. If anyone can help to solve the problem?; Thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391:159,error,error,159,https://qutip.org,https://github.com/qutip/qutip/issues/1391,1,['error'],['error']
Availability,"After investigating a bit more, I think this may be related to 3a5ab42200b3f1851343081614064e67be3b02bf, in that SCS and CVXOPT are not yet compatible with MKL, and require OpenBLAS instead. If I locally use pip to install SCS and CVXOPT with an MKL-enabled conda env, then importing cvxpy fails due to undefined symbols. On the other hand, if I use the Omnia conda channel to install cvxopt and scs, then `dnorm()` works, but the conda env switches to use OpenBLAS. To resolve the build failures, then, I'd suggest temporarily marking the tests as skipped if MKL is enabled.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/484#issuecomment-222046697:488,failure,failures,488,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222046697,1,['failure'],['failures']
Availability,"After merging #1097, the following error is given on a Linux machine from travis CI ; AttributeError: 'QobjEvo' object has no attribute 'coeff_files'; 1656Exception in thread Thread-546:; 1657Traceback (most recent call last):; 1658 File ""/Users/travis/miniconda/envs/test-environment/lib/python3.7/threading.py"", line 926, in _bootstrap_inner; 1659 self.run()",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-543262454:35,error,error,35,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-543262454,1,['error'],['error']
Availability,"After playing around with PyAMG, I do not see any benefit over our current implementation. In fact, the PyAMG solvers were breaking down just like the SciPy versions did. The only issue we are having is the superLU preconditioner fails for some systems. Once that issue is figured out (hopefully) we will be in a good position with respect to SS solving.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20720708:132,down,down,132,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20720708,1,['down'],['down']
Availability,"After setting atol=1e-9 it works now for 500 time steps. But increasing the number of time steps to 550 causes the program to fail again. It also doesn't help to decrease atol further, I went up to 1e-15, neither does decreasing the relative tolerance rtol. Shouldn't actually increasing the number of time steps improve the precision? Also, why does it depend on the dimension of the dm? I'm just curious now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338105892:242,toler,tolerance,242,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338105892,1,['toler'],['tolerance']
Availability,Agreed that it is tricky to test. I mostly wanted the tests because the nice error messages might contain bugs. Happy to let this slide for now though.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2304#issuecomment-1908915742:77,error,error,77,https://qutip.org,https://github.com/qutip/qutip/pull/2304#issuecomment-1908915742,1,['error'],['error']
Availability,"Ah, are you using an Apple M1?. SciPy support for Apple M1 is still rather unreliable (this is more a function of the lack of availability of Apple M1 VMs for open source projects to run tests on than any fault of SciPy's). Perhaps you are encountering one of these two recent bugs:. - https://github.com/scipy/scipy/issues/16767; - https://github.com/scipy/scipy/issues/16875. The bugs are closed but I don't know if new versions have been released. Various work arounds have been suggested in those issue reports. Hopefully one of them will work for your case.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229182134:126,avail,availability,126,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229182134,2,"['avail', 'fault']","['availability', 'fault']"
Availability,"Ah, nice catch thanks, and thanks for the super clear repro. We're overhauling the solvers for QuTiP 5.0, which will include a lot more rigorous input checking on entry, but also it uses far safer low-level datatypes that would catch this shape mismatch in the C layer (even though the `dims` _should_ have been checked by `mesolve`). I'll check the other solvers and patch in a sanity test - probably after these lines: https://github.com/qutip/qutip/blob/d5e305513d9186df74beee4fd8da680e89f29d15/qutip/mesolve.py#L259-L261; we can just insert a test; ```python; if rho0.dims[0] != rho0.dims[1]:; raise ValueError(; ""input state must be a pure state or square density matrix""; ); ```. There may also be other segfaults lurking if you use a Python function to generate a time-dependent `Qobj` value in the Liouvillian or the expectation operators, but right now you're unlikely to use that form (because it's slow as anything). The bug slips through because we unsafely pass off a matrix down to C code (where we currently don't have sanity checks) without first verifying that it is a valid shape in Python space - the C code is working as designed, so there shouldn't be problems with correct inputs. Removing `c_ops` causes `mesolve` to delegate to `sesolve` which presumably is better at its type-checking, and I expect that a small dimension size working is likely just `malloc` having slack in the memory it gives us for small sizes or small requests being allocated into the special pre-allocated store.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169:988,down,down,988,https://qutip.org,https://github.com/qutip/qutip/issues/1456#issuecomment-791925169,2,['down'],['down']
Availability,"Ah, this is the confluence of two bugs, unfortunately. As an immediate workaround, you should be able to set the environment variable `CI_QUTIP_RELEASE=1` before running `pip` (assuming it propagates the env), and it should build without an error. The two bugs:; 1. building in ""release mode"" isn't the default; on CI to build the wheels we set a release-mode flag, but the sdist can't tell. That's what the environment variable above does. I'll have to think a little about how we'll do versioning. This bug slipped in in #1465, where the primary concern was getting wheels built, and I didn't notice that the sdist wouldn't build in release mode.; 2. `git` isn't meant to be required - in dev mode, it should just get to the string ""nogit"". That error is actually within a `try/except` block, except it only catches `subprocess.SubprocessError`, when it should catch both `subprocess.SubprocessError` and `OSError`. Thanks for the report.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1514#issuecomment-829931042:241,error,error,241,https://qutip.org,https://github.com/qutip/qutip/issues/1514#issuecomment-829931042,2,['error'],['error']
Availability,"Ah, this test failure reminds me I need to merge up the 4.6.0 release to `dev.major`. Documentation fix is good, merging (though ironically there's a typo in your PR name!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1494#issuecomment-818721204:14,failure,failure,14,https://qutip.org,https://github.com/qutip/qutip/pull/1494#issuecomment-818721204,1,['failure'],['failure']
Availability,"Ah, you are right! It seems to be all tests using the ODE solvers are failing.; Indeed mesolve and sesolve tests are also failing (with the same integration error).; There are lots of tests which fail, I think most likely every test that calls a solver... I just did some basic testing with scipy's integrate.ode and this seems to have the same kind of issues, so I think as you mention, the issue lies with the solver...meaning it probably isn't installed correctly.; Similar issues seem to have been raised for scipy previously (e.g. https://github.com/scipy/scipy/issues/15077), though I don't see any currently open. I also updated scipy today and it didn't change anything unfortunately. I guess this issue can be closed, if it's just a scipy problem?; Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1204170858:157,error,error,157,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1204170858,1,['error'],['error']
Availability,"Aha I understand the error now, `oldest-supported-numpy` requires numpy 1.17, but qutip requires >1.19. I tried to install manually with `pip install wheel setuptools packaging numpy cython scipy` and then `pip install --no-build-isolation qutip` but now I get some Cython compilation errors. I think I will stick with v4 for now. I suppose with the updates to the docs in #2413, this issue is resolved.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2412#issuecomment-2092495162:21,error,error,21,https://qutip.org,https://github.com/qutip/qutip/issues/2412#issuecomment-2092495162,2,['error'],"['error', 'errors']"
Availability,"Alex has asked about having a faster expm method for Qobj objects. Having looked into it a bit, here are my thoughts:; - We should check to see if the Qobj is diag, and if so just do the exp on the elements. Otherwise do a dense expm. This is really what matlab does. This will be done in parallel if connected to a good BLAS.; - I have yet to find a real-world usage case where the resulting expm is not a dense matrix. Therefore, the above suggestion seems to be optimal.; - There is a bug in our expm code for a particular kind of matrix, this happens to be a particular diagonal matrix.; - There is a bug in the scipy.sparse.linalg.expm function that is even more serious, and was reported.; - Someone discussed using approximation methods for the expm in the control module. This is an interesting idea in general, but we would need some way of quantifying the error in the approximation. This has probably already been done in the literature somewhere.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462:866,error,error,866,https://qutip.org,https://github.com/qutip/qutip/issues/462,1,['error'],['error']
Availability,"All looks good to me. Thanks a lot for changing all of that - this is all clearly good stuff and should in principle be merged. We should the Linux tests again after #1381 is merged because there is Linux-specific code in the changes that needs to be tested (the tests fail for unrelated reasons at the moment). I can't see any reason why the changes here should cause any true test failures, though - it's more a formality.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1380#issuecomment-727103648:383,failure,failures,383,https://qutip.org,https://github.com/qutip/qutip/pull/1380#issuecomment-727103648,2,['failure'],['failures']
Availability,Also fixed some errors in the docstring and indentation.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/149:16,error,errors,16,https://qutip.org,https://github.com/qutip/qutip/pull/149,1,['error'],['errors']
Availability,"Also for `operator_to_vector`, though this is harder to mis-use. The documentation now spells out exactly what we expect, and we verify that we do have the correct inputs, rather than exploding with a misleading error message (at best) or silently doing something very unexpected (at worst). Fix gh-1204.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1475:212,error,error,212,https://qutip.org,https://github.com/qutip/qutip/pull/1475,1,['error'],['error']
Availability,Ambiguous error message for circuit plotting,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1426:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/1426,1,['error'],['error']
Availability,"An additional algorithm has been added. The existing GRAPE algorithm remains the default; The CRAB algorithm was developed at the University of Ulm; The main difference is that it reduces the number of optimisation variables by defining the control pulses by expansions of basis functions, where the variables are the coefficients. Typically a Fourier series is chosen, i.e. the variables are the Fourier coefficients. Therefore it does not need to compute an explicit gradient. By default it uses the Nelder-Mead method for fidelity error minimisation. Further explanation is given in the comments. Significant changes were required to many of the classes in order to support another alg option in a tidy way.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/338:534,error,error,534,https://qutip.org,https://github.com/qutip/qutip/pull/338,1,['error'],['error']
Availability,"An explicit warning / exception sounds good to me.; You mention a UserWarning there as an error. Does that mean that the ODE solver raises an exception? If so, then there can be no useful application of this, and hence we should raise an exception - probably a RuntimeError unless anyone has a better suggestion.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479#issuecomment-221550684:90,error,error,90,https://qutip.org,https://github.com/qutip/qutip/issues/479#issuecomment-221550684,1,['error'],['error']
Availability,"And for those who are not using Conda? ; ```; In file included from qutip/cy/sparse_utils.cpp:1134:; In file included from /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/complex:235:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:26: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:60: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:18: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:50: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _Floa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:379,error,error,379,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,3,['error'],['error']
Availability,"Any update on the failing tests, @araza6?; This is the print message from CI build:; ```; ==================================== ERRORS ====================================; _____________ ERROR collecting tests/test_basis_transformation.py ______________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/_pytest/python.py:513: in _importtestmodule; mod = self.fspath.pyimport(ensuresyspath=importmode); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:176: in <module>; from qutip.qobj import *; E File ""/home/travis/miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/qobj.py"", line 2026; E """"""; E Checks whether qobj is a valid density matrix; E """"""; E ; E ; E ^; E IndentationError: expected an indented block; ___________________ ERROR collecting tests/test_brmesolve.py ___________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined; During handling of the above exception, another exception occurred:; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting tests/test_brmesolve_td.py __________________; ../../../../miniconda/envs/test-environment/lib/python3.6/site-packages/qutip-4.5.1.dev1+0ffec37-py3.6-linux-x86_64.egg/qutip/__init__.py:46: in <module>; __I",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:127,ERROR,ERRORS,127,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,3,['ERROR'],"['ERROR', 'ERRORS']"
Availability,"Apologies, I encountered a separate set of issues related to cython that I have thus far been unable to solve. Once I get that sorted out, if I run into any errors related to the above, I'll get back to you. Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552#issuecomment-260194032:157,error,errors,157,https://qutip.org,https://github.com/qutip/qutip/issues/552#issuecomment-260194032,1,['error'],['errors']
Availability,"Are you running it from the installation directory?. On May 11, 2017 9:31 AM, ""Jiaqi Cai"" <notifications@github.com> wrote:. > I see that qutip announced a new version, but after my update,It breaks; > down:; > from qutip import *; > the error occurs: undefined symbol: _ZTINSt8ios_base7failureB5cxx11E; > After google the error,I find a possible solution :pip install qutip; > Then the error changes to :; > `-----------------------------------------------------------; > ----------------; > AttributeError Traceback (most recent call last); > /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/*init*.py; > in (); > 46 *IPYTHON*; > ---> 47 qutip.settings.ipython = True; > 48 except:; >; > AttributeError: module 'qutip' has no attribute 'settings'; >; > During handling of the above exception, another exception occurred:; >; > AttributeError Traceback (most recent call last); > in (); > 3 import matplotlib.pyplot as plt; > 4 from tqdm import tnrange,tqdm_notebook; > ----> 5 from qutip import *; >; > /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/*init*.py; > in (); > 47 qutip.settings.ipython = True; > 48 except:; > ---> 49 qutip.settings.ipython = False; > 50; > 51 # ------------------------------------------------------------; > -----------------; >; > AttributeError: module 'qutip' has no attribute 'settings'`; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/694>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqRkf4CJgtdC5dIzttfYgfScDE_Zqks5r4ym1gaJpZM4NYLKw>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/694#issuecomment-300829416:202,down,down,202,https://qutip.org,https://github.com/qutip/qutip/issues/694#issuecomment-300829416,4,"['down', 'error']","['down', 'error']"
Availability,"Are you running on OSX? If so, this could be a known bug between multiprocessing and matplotlib for matplotlib 3.2. You can downgrade to 3.1 or upgrade to 3.3 (haven't personally validated 3.3 yet).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664716642:124,down,downgrade,124,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664716642,1,['down'],['downgrade']
Availability,"Arne,. Do you still have the code where the eigenvalue solver breaks down for the Liouvillian? I am starting to work on the matrix balancing functions and would like something known to cause trouble to test on. Cheers,. Paul",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-34325017:69,down,down,69,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-34325017,1,['down'],['down']
Availability,"Arne,. Please propose your patch in a PR on our Github. So long as it is; mathematically sound, then the context does not matter in this case. If you need any advice on how to do this, then let us know. Email me direct; if you prefer. alex.pitchford@gmail.com. Thanks. Alex. On Thu, 21 Jun 2018 at 09:31, Arne Hamann <notifications@github.com> wrote:. > I use the qutip to do some Grover simulations. having a Hilbertspace of; > Grover an an additional entangled Hilbert space. In a simpler version there; > is only one state in the entangled Space so the program automatically; > chooses dimension 1.; > And then there are allot of errors coming because of this qutip error.; > At the moment I fixed it using a patched qutip version.; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/823#issuecomment-399020891>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7QOoYa2vq7kgVYNcZdxB3vxO3FJnks5t-1n4gaJpZM4SNkIK>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823#issuecomment-399033847:633,error,errors,633,https://qutip.org,https://github.com/qutip/qutip/issues/823#issuecomment-399033847,4,['error'],"['error', 'errors']"
Availability,"As I mentioned in #853, I wonder if it's possible to completely encapsulate any use of sparse matrices to allow for different implementations, assuming a common interface. This would support both int32 and int64, as well as any other specialized implementation anyone might want to use. Obviously, this falls into the ""quite a bit of work"" category, assuming it's possible at all. Personally, I also want to clarify that in #853, I wasn't thinking clearly when I titled it ""moderately big tensor products"" (obviously, it was an insanely large product). I don't actually foresee needing anything bigger than int32. Is there a CPU-time penalty for switching to int64? If so, I would consider that more of a downside than an increase in memory usage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-382528173:705,down,downside,705,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-382528173,2,['down'],['downside']
Availability,"As I understand it, the only way to avoid needing to touch `MANIFEST.in` is to not have files distributed with the test suite (or to have the temporary files by `*.py`, since `setup.py` automatically recognises them). That's not really a pytest thing, it's a `setuptools` one. I don't think there's a problem distributing files as part of the tests. You can add a line which says; ```; recursive-include qutip/tests/qasm_files *.qasm; ```; to `MANIFEST.in`, and that should hopefully fix the problem. You won't have the problem locally, because you'll be running `./setup.py develop`, which ""installs"" in-place, so you don't notice the fact that you've missed files from the manifest. In the tests, it runs `./setup.py install`, which does the copy, missing files which aren't in the manifest. Boxi: I'm not certain what more you'd like to do with fixtures here. Fixtures are good for setup and tear down, parametrisation and sharing resources (like network connections), but I'm not certain what further benefit you get for a test function which is testing whether it can open a known file, read it, and construct the expected output. I think Sidhant is already doing some nice parametrisation of his tests, from what I see. Sidhant: I added a comment on the exception test, since pytest gives us an easier-to-read context manager you can use. It's also typically better practice to handle file paths like I did in that (using the overloaded `/` operator with `pathlib.Path`, or `os.path.join`) rather than manually putting in slashes. Windows _usually_ will do the right thing now with slashes, but it's better to let Python handle it for us.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-656255156:900,down,down,900,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-656255156,1,['down'],['down']
Availability,"As a note: `qutip.vector_to_operator` is part of the implementation of superoperators. The ""vector"" in the name refers to the idea that a superoperator in a Hilbert space can be represented as a vector on a different Hilbert space which comprises of two copies of the original space tensor-producted together. It doesn't refer to a ""vector"" in the sense of a ""ket"". The difference was introduced in c62a8e9, which is the amalgamated commit encompassing all the discussion in #1098. `qutip.vector_to_operator` expects to receive an argument whose `dims` parameter is of the form `[operator_dims , [1]]`, where `operator_dims` is the dimensions of a regular operator (for example `[[2], [2]]` for a single qubit Hilbert space, or `[[2, 2], [2, 2]]` for an operator acting on a Hilbert space with two qubits in. The exception occurs because `vector_to_operator` attempts to access the two elements of the `operator_dims` array to discover the output shape. Since there is an insufficient number of lists for it to access, it just ends up reading the dimensions of the first two elements of the tensor product, and `np.prod` (used to calculate the output shape) doesn't complain when passed scalars. Notice that running the code with `nb_qubits = 1` will cause an `IndexError`, as there are insufficient tensor-product elements. The immediate solution for your code is to use `qutip.ket2dm`, which converts a ket into a density matrix. I think this is what you're actually trying to do. For a fix, there are two points:; 1. The fix is simply to test that the input dimensions are of the correct form, rather than assuming; this will allow us to provide a more descriptive error.; 2. Perhaps worth considering is moving the super-operator functionality in a sub-module `qutip.super`, and not importing all the functions into the main namespace. This might help reduce user confusion going forwards, especially since most people aren't using the superoperator formalism.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011:1668,error,error,1668,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-600792011,2,['error'],['error']
Availability,"As far as the ""known issues"" go, these are discussed in #484.; I don't think the issues I saw recently are the same as in that one.; ```; Intel MKL FATAL ERROR: Cannot load libmkl_avx.so or libmkl_def.so.; ```; I think this is just an MKL install problem.; It's difficult to test at the moment, as I don't seem to be able to create a conda env with mkl blas",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394304854:154,ERROR,ERROR,154,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394304854,1,['ERROR'],['ERROR']
Availability,"As long as we do some test runs without MPI, I think this is fine. Perhaps we could also document somewhere that `mpi` is needed -- maybe just by raising a nice exception if it needs to be imported but isn't available?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2319#issuecomment-1930820031:208,avail,available,208,https://qutip.org,https://github.com/qutip/qutip/pull/2319#issuecomment-1930820031,1,['avail'],['available']
Availability,"As mentioned previous I have patched out the cython check and installs in **init** in the (windows, qutip-3.1.0) conda package that I built. I have put cython as a build requirement, but not a runtime requirement. I install in an environment without cython and then run tests:; 289 tests in 690s; 7 skip, 6 errors, 1 fail. Then I install cython and mingwpy and run tests again:; 320 tests 2371s; 7 skip, 10 errors, 1 fail. I think the time dependent string format tests fail. Not sure, and will not investigate further at the moment. Would only make if they also fail in GitHub version, for which I have not tested on Windows. At no point do the extensions in qutip/cy get built again. So I think it is not necessary to pyximport.install in the **init**.py; I think we should change the message to a warning, like we have for matplotlib, to say something like 'no Cython, string type time-dependent solvers will not run'. It seems to make sense to allow people to install and use parts of the library even if they can't get a C compiler working for them. I don't understand why some tests do not run without cython. For instance, no mcsolve tests run without cython installed. I can't see cython imported in the mcsolve file. I will look into this further.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/448#issuecomment-192570921:307,error,errors,307,https://qutip.org,https://github.com/qutip/qutip/issues/448#issuecomment-192570921,2,['error'],['errors']
Availability,"As mentioned previously, to me more reliable is a big benefit, slightly slower is not an issue.; Do @nonhermitian or @jrjohansson have an opinion on this PR?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360#issuecomment-130280628:36,reliab,reliable,36,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130280628,1,['reliab'],['reliable']
Availability,"As noted by @ajgpitch in #476, Travis CI is currently raising a large number of errors, as every call to `dnorm()` results in a `SolverError`. I am in the process of investigating this problem, but have not yet been able to reproduce the test failures locally. It appears as though the failures only occur when MKL and CVXPY are used together, but I am able to use MKL and CVXPY together fine locally.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/484:80,error,errors,80,https://qutip.org,https://github.com/qutip/qutip/issues/484,3,"['error', 'failure']","['errors', 'failures']"
Availability,"As reported by Dan Hu on the mailing list, the cython code generated by Codegen fails to compile if args contains complex valued variables. The following minimal example reproduces the problem:. ```; from qutip import *; a = destroy(10); H0 = a.dag() * a; #H = [H0, [a.dag(), 'exp(1j * w * t) '], [a, 'exp(-1j * w * t)']]; args = {'w': 1} # works ; H = [H0, [a.dag(), 'exp(delta * t) '], [a, 'exp(-delta * t)']]; args = {'delta': 1j} # fails; mesolve(H, basis(10, 2), linspace(0, 10, 100), [a], [], args=args); ```. The error from the cython code is:. ```; spmvpy(data1, idx1, ptr1, vec, np.exp(-delta * t), out); ^; ------------------------------------------------------------; rhs9.pyx:20:39: Invalid operand type for '-' (complex_t); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/68:520,error,error,520,https://qutip.org,https://github.com/qutip/qutip/issues/68,1,['error'],['error']
Availability,"As stated in the docstring in the function, the a_ops Cubic_Spline must be a tuple (f(w), g(t)). This was my mistake (possibly this could be updated in the online documentation on BRME). Closing this as there is no error. Although I will note there is a legitimate error if the array passed to `qt.Cubic_Spline` is too large. In this case, `np.array2string` uses the default `threshold` argument which means the saved array is compressed (e.g. `[0,1,2,...,8,9,10]`). The way to fix this is to explicitly set the threshold argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1624#issuecomment-887782852:215,error,error,215,https://qutip.org,https://github.com/qutip/qutip/issues/1624#issuecomment-887782852,2,['error'],['error']
Availability,"Assuming Simon's point isn't just a complete answer to your question: in the general case, this is an impossible question to answer - it touches on many parts of numerical integration, such as tolerance limits and adaptive step-size methods. When you're dealing with completely arbitrary time-dependence, there's not really any one-size-fits-all approach that'll work (despite how RK45 is often taught as a magic bullet in physics courses). Here, you will likely find that your RK45 results depend strongly on how many intermediate timesteps you use, whereas QuTiP's results will be (marginally) more stable. This is because QuTiP will internally subdivide the timesteps more to achieve internal precision goals, but then only returns the results at the time points you ask for. You can increase the maximum number of allowed subdivisions by increasing the `nsteps` parameter in a `qutip.Options` object, and with the `options` keyword argument.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136:193,toler,tolerance,193,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986661136,1,['toler'],['tolerance']
Availability,"Assuming you have Anaconda 2.5 installed (so that you can use the Intel MKL on all platforms), the default number of threads is one. Therefore, you don't get much benefit. To change the number of threads used you can do:. ``` python; import mkl; mkl.set_num_threads(N); ```. or in QuTiP it is easy to set using:. ``` python; n_threads = hardware_info()['cpus']; mkl.set_num_threads(n_threads); ```. One can not access the spare MKL routines directly as there is no support in the scipy.sparse library. However, you can get to all of the functions using ctypes. An example of complex SpMV is here:. https://gist.github.com/nonhermitian/74c3ddbbd006b2f8d306. The only issue with the attached method, is that finding the MKL runtime library is platform dependent (maybe should file an issue with the Anaconda people?). Therefore, it is a bit cumbersome to work with. Moreover, it is not possible to access these routines via Cython as they do not have any of the development stuff available. That may not really be an issue at the end of the day though as one needs quite a large system to get any benefit, and at large Hilbert dimensions, the overhead from calling Python funcs. directly is not an issue. I will be chatting with the [Intel Python](https://software.intel.com/en-us/python-distribution) people tomorrow to give them some suggestions and talk about our project. Hopefully we can hash out some plan to make our life a bit easier, and take advantage of the MKL tools. Their parallel direct sparse solver may also be of interest.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/438#issuecomment-186864518:978,avail,available,978,https://qutip.org,https://github.com/qutip/qutip/issues/438#issuecomment-186864518,1,['avail'],['available']
Availability,"At least two tests have been observed to generate unrelated failures:; - `qutip.tests.test_subsys_apply`; - `qutip.tests.test_fidelity2`. I haven't seen any others recently (at least, not since resolving #425), but if we observe any, we should add them here so that we can be sure everything works for 3.2.0.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430#issuecomment-184077054:60,failure,failures,60,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184077054,1,['failure'],['failures']
Availability,"At present the only known working option that works with the runtime compile features (e.g. string type time-dependence) requires Visual Studio 2015 with C++ options. The community edition is fine, which has no monetary cost, but it does come with a considerable install time and disk space (11GB) cost. . According to the [Python wiki on Windows compilers](https://wiki.python.org/moin/WindowsCompilers) These [build tools](https://visualstudio.microsoft.com/downloads/#build-tools-for-visual-studio-2017) are supposed to work, but so far I did not succeed. Not tried in a while, as I don't have very easy access to a Windows machine I can play with. So if someone else wants to give a try, then that would be just great. This issue would ideally be closed after a merging of a PR updating the installation instructions in https://github.com/qutip/qutip-doc",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/954:460,down,downloads,460,https://qutip.org,https://github.com/qutip/qutip/issues/954,1,['down'],['downloads']
Availability,Attempt to solve issue with false errors in Qobj division tests on 32 bit system by using comparison that is more robust to floating-point errors.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/306:34,error,errors,34,https://qutip.org,https://github.com/qutip/qutip/pull/306,3,"['error', 'robust']","['errors', 'robust']"
Availability,AttributeError Traceback (most recent call last); <ipython-input-2-82c62ef8635d> in <module>; ----> 1 from qutip import *; When I try to run ; from qutip import *. I got this error. Can anyone help to come out of this error?. ~/anaconda3/lib/python3.8/site-packages/qutip/__init__.py in <module>; 42 try:; 43 __IPYTHON__; ---> 44 qutip.settings.ipython = True; 45 except NameError:; 46 qutip.settings.ipython = False. AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-1220250053:175,error,error,175,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-1220250053,2,['error'],['error']
Availability,BUG: Fix strange RHS file error on Win,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/pull/729,1,['error'],['error']
Availability,BUG: Loosen tolerance on td-BR states test,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/722:12,toler,tolerance,12,https://qutip.org,https://github.com/qutip/qutip/pull/722,1,['toler'],['tolerance']
Availability,BUG: Loosen tolerances on some random tests,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/636:12,toler,tolerances,12,https://qutip.org,https://github.com/qutip/qutip/pull/636,1,['toler'],['tolerances']
Availability,BUG: MKL error checking dict key error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/734:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/734,2,['error'],['error']
Availability,BUG: MKL error handling not working correctly,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/705:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/705,1,['error'],['error']
Availability,BUG: Wrong phase in td-BR solver due to vec ordering error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/712:53,error,error,53,https://qutip.org,https://github.com/qutip/qutip/pull/712,1,['error'],['error']
Availability,"Badges tell some features of a project, such as code coverage, build status, downloads. ; A comprehensive list of badges can be generated on [shields.io](https://shields.io).; Not any badge that can be generated is interesting to be displayed, but some badges might be cool and informative. ; Anaconda provides some of them at https://anaconda.org/conda-forge/qutip/badges. ; Recently the `conda-forge` download counter was added to Readme.md: [![Anaconda-Server Badge](https://anaconda.org/conda-forge/qutip/badges/downloads.svg)](https://anaconda.org/conda-forge/qutip).; It could be interesting to add meaningful badges from shields.io. On https://github.com/badges/shields it is even possible to generate new badges (one could eventually think of badges providing information about the integration with the quantum-tech ecosystem).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/983:77,down,downloads,77,https://qutip.org,https://github.com/qutip/qutip/issues/983,3,['down'],"['download', 'downloads']"
Availability,Bleh -- build error: `ERROR: Some build dependencies for file:///project conflict with the backend dependencies: numpy==1.13.3 is incompatible with numpy>=1.16.6.`; Probably I need to loosen the build dependencies in setup_requires.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1735#issuecomment-990081489:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/pull/1735#issuecomment-990081489,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,Bloch sphere animation error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/836:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/836,1,['error'],['error']
Availability,"Both this failure and the one before it are in unrelated tests. For instance, the most recent failure is in `qutip.tests.test_fidelity2`, which rather surprises me as I'd have thought that test case was quite stable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-183608615:10,failure,failure,10,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183608615,2,['failure'],['failure']
Availability,Bugs leading to error in building the documentation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1021:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/1021,1,['error'],['error']
Availability,"Build failure on numpy 1.10.1, extra_link_args",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392:6,failure,failure,6,https://qutip.org,https://github.com/qutip/qutip/issues/392,1,['failure'],['failure']
Availability,"Bumping an old topic with two major new considerations. Number one: Travis is [changing its pricing model for open source software](https://blog.travis-ci.com/2020-11-02-travis-ci-new-billing), and generally it seems like [it's going to become unfeasible for us](https://www.jeffgeerling.com/blog/2020/travis-cis-new-pricing-plan-threw-wrench-my-open-source-works). Over the past month or so, queue times on Linux builds have increased massively (from near-instant to up to 90 minutes), and the number of allowed concurrent builds has already limited the amount of testing we are able to do - we don't even have Windows tests because we couldn't fit them in. In around March 2021 we expect the old travis-ci.org that QuTiP is grandfathered onto to shut down completely, forcing us onto the new model on travis-ci.com. Number two: in November 2019, GitHub released their own CI, GitHub Actions. This is (as best as I can tell) completely free for open source, public repositories like QuTiP, and offers access to a large number of Linux, macOS and Windows containers. This completely free period of GitHub Actions might not last forever (you can imagine maybe they're just trying to drive adoption before increasing the cost), but especially with the new time pressure from Travis, this seems like the right choice for now. Our testing set up is fairly straightforward, so migrating to a new CI shouldn't be too difficult. I just wrote (#1429) a GitHub Actions workflow to build and distribute binary releases of QuTiP on Linux/Mac/Windows, and I'm pretty convinced by the power of their CI. It's got an awful lot of flexibility with a _lot_ of customisation so its initial learning curve is a little steep (or maybe I'm just not used to CI tools), but I'm impressed by what's available. I believe it comes with a degree of reusability as well; I think we can define a test as a single ""action"", and then reuse that in the PR-push workflow and the make-distribution workflow.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/959#issuecomment-770455542:753,down,down,753,https://qutip.org,https://github.com/qutip/qutip/issues/959#issuecomment-770455542,4,"['avail', 'down']","['available', 'down']"
Availability,"Bumping this because I'm working on `test_metrics.py` and came across it. ## Attempting to isolate. With `cvxpy` and `cvxopt` from conda-forge, I can run all the `dnorm` tests, but as before (see #874, #880, #881) they fail too much of the time. By my rough tests, failure only occurs with any regularity when using `cvxpy` with operator inputs (not supers) of dimension 3 (not 2). I also find that using `dnorm(A, B)` with `A` and `B` drawn from `rand_unitary_haar` has a failure rate of 0.004(1), whereas drawing from `rand_unitary` instead has a failure rate about 3 times higher of 0.012(2). I'm sure if you have more (i.e. > 0) knowledge of the Haar measure than I do, that presumably gives you more information on what makes it likely for the optimisation to fail. Also, using `dnorm(A)` (i.e. taking `B` to be 0) produced no failures in 4000 tests of the same function. ## Testing strategy. Since each `dnorm` test is repeated 10 times and there's only one offending test, that's a current failure rate of about 4%. The offending test actually isn't even testing what it's supposed to test - it supposedly tests that special cases that are handled by QuTiP agree with the optimisations done by `cvxpy`, except that the offender isn't a handled special case. I'll remove that for now. I will also convert `dnorm` tests to quietly xfail if the optimisation fails, but cause a suite failure if they cause a proper `AssertionError`. ## Future. Since we have a new major version in the future, we do have the option to issue a `FutureWarning` and remove `dnorm` if we want to do so, but if so, we should get the warning out as soon as possible. It's probably worth mentioning that by-and-large, it seems like `dnorm` does actually work in most cases. > This has been the final straw. We have tried to keep dnorm supported. - @ajgpitch . Suspect Alex has some thoughts on this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-634292336:265,failure,failure,265,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-634292336,6,['failure'],"['failure', 'failures']"
Availability,"Bumps [urllib3](https://github.com/urllib3/urllib3) from 1.26.18 to 1.26.19.; <details>; <summary>Release notes</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/releases"">urllib3's releases</a>.</em></p>; <blockquote>; <h2>1.26.19</h2>; <h2>🚀 urllib3 is fundraising for HTTP/2 support</h2>; <p><a href=""https://sethmlarson.dev/urllib3-is-fundraising-for-http2-support"">urllib3 is raising ~$40,000 USD</a> to release HTTP/2 support and ensure long-term sustainable maintenance of the project after a sharp decline in financial support for 2023. If your company or organization uses Python and would benefit from HTTP/2 support in Requests, pip, cloud SDKs, and thousands of other projects <a href=""https://opencollective.com/urllib3"">please consider contributing financially</a> to ensure HTTP/2 support is developed sustainably and maintained for the long-haul.</p>; <p>Thank you for your support.</p>; <h2>Changes</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; </ul>; <p><strong>Full Changelog</strong>: <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19</a></p>; <p>Note that due to an issue with our release automation, no <code> multiple.intoto.jsonl</code> file is available for this release.</p>; </blockquote>; </details>; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/urllib3/urllib3/blob/1.26.19/CHANGES.rst"">urllib3's changelog</a>.</em></p>; <blockquote>; <h2>1.26.19 (2024-06-17)</h2>; <ul>; <li>Added the <code>Proxy-Authorization</code> header to the list of headers to strip from requests when redirecting to a different host. As before, different headers can be set via <code>Retry.remove_headers_on_redirect</code>.</li>; <li>Fixed ha",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:490,mainten,maintenance,490,https://qutip.org,https://github.com/qutip/qutip/pull/2458,1,['mainten'],['maintenance']
Availability,"Bumps [wheel](https://github.com/pypa/wheel) from 0.37.0 to 0.38.1.; <details>; <summary>Changelog</summary>; <p><em>Sourced from <a href=""https://github.com/pypa/wheel/blob/main/docs/news.rst"">wheel's changelog</a>.</em></p>; <blockquote>; <h1>Release Notes</h1>; <p><strong>UNRELEASED</strong></p>; <ul>; <li>Updated vendored <code>packaging</code> to 22.0</li>; </ul>; <p><strong>0.38.4 (2022-11-09)</strong></p>; <ul>; <li>Fixed <code>PKG-INFO</code> conversion in <code>bdist_wheel</code> mangling UTF-8 header values in; <code>METADATA</code> (PR by Anderson Bravalheri)</li>; </ul>; <p><strong>0.38.3 (2022-11-08)</strong></p>; <ul>; <li>Fixed install failure when used with <code>--no-binary</code>, reported on Ubuntu 20.04, by; removing <code>setup_requires</code> from <code>setup.cfg</code></li>; </ul>; <p><strong>0.38.2 (2022-11-05)</strong></p>; <ul>; <li>Fixed regression introduced in v0.38.1 which broke parsing of wheel file names with; multiple platform tags</li>; </ul>; <p><strong>0.38.1 (2022-11-04)</strong></p>; <ul>; <li>Removed install dependency on setuptools</li>; <li>The future-proof fix in 0.36.0 for converting PyPy's SOABI into a abi tag was; faulty. Fixed so that future changes in the SOABI will not change the tag.</li>; </ul>; <p><strong>0.38.0 (2022-10-21)</strong></p>; <ul>; <li>Dropped support for Python &lt; 3.7</li>; <li>Updated vendored <code>packaging</code> to 21.3</li>; <li>Replaced all uses of <code>distutils</code> with <code>setuptools</code></li>; <li>The handling of <code>license_files</code> (including glob patterns and default; values) is now delegated to <code>setuptools&gt;=57.0.0</code> (<a href=""https://github-redirect.dependabot.com/pypa/wheel/issues/466"">#466</a>).; The package dependencies were updated to reflect this change.</li>; <li>Fixed potential DoS attack via the <code>WHEEL_INFO_RE</code> regular expression</li>; <li>Fixed <code>ValueError: ZIP does not support timestamps before 1980</code> when using; <code>SOURCE_DAT",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2052:659,failure,failure,659,https://qutip.org,https://github.com/qutip/qutip/pull/2052,1,['failure'],['failure']
Availability,"But how would you know which ones are safe to remove? The fact that we can have many python interpreters running qutip at the same time makes this complicated. I'm not sure what would be the best solution, but I guess that in principle one could imagine an atexit handler that does the cleanup of files corresponding to the current PID. https://docs.python.org/3/library/atexit.html. But taking us down a path of complicated and and hard to maintain code...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/291#issuecomment-66948492:398,down,down,398,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66948492,1,['down'],['down']
Availability,"But it seems to me that it would be best to avoid this type of issue when possible. For example, the squeezing operator is called squeez just to get around a namespace conflict. Otherwise people are bound to get errors that don't make any sense just because of the import order and then they will be emailing us. Of course we can not avoid all conflicts, but since loading scipy is so fundamental to what we do, having no conflicts with this package seems to be reasonable, at least to me. . On Wednesday, June 5, 2013 at 11:12 AM, Robert Johansson wrote:. > Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.; > ; > —; > Reply to this email directly or view it on GitHub (https://github.com/qutip/qutip/issues/25#issuecomment-18951570).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/25#issuecomment-18951920:212,error,errors,212,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951920,2,['error'],"['error', 'errors']"
Availability,"By (3), I meant removing the csr specialisation from the dispatched function and call the function directly when not all values are desired. When `Qobj.eigenstates` is called, the sparse operation being not available, it would defer to the dense code, no warning nor error. ; We can't fully trust `eigs_csr` as it is, so I would like to make it fully working (1) or remove it from the dispatch (3). Yes (2) can be seen as separate enhancement. For me (5) was purely documentation, a warning is fine, but when `sparse` is specified, it would use `eigh_csr` and too bad if wrong results are obtained... (3) would also mean removing the; ```; if isinstance(L.data, _data.CSR) and not sparse:; L = L.to(_data.Dense); evals, evecs = _data.eigs(L.data); ```; since they are no longer used (`spectrum.py`, `floquet.py`, `qobj.py`) and reviewing the tests cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1472768466:207,avail,available,207,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1472768466,2,"['avail', 'error']","['available', 'error']"
Availability,"By installing qutip via. pip2 install qutip==4.3.1. (I had another problem with qutip 4.4.1 with the python2.7 interpreter) I ran into a problem with cython - several ""Error compiling Cython file"" messages. Here I have cython v. 0.23.4 and the minimum requirement is displayed as 0.21. I guess this minimum requirement should be changed",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129:168,Error,Error,168,https://qutip.org,https://github.com/qutip/qutip/issues/1129,1,['Error'],['Error']
Availability,Can anyone explain why all these travis errors occur?; It seems like they all relate to CVXOPT. They also seem to occur many (10) times each.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/476#issuecomment-221221607:40,error,errors,40,https://qutip.org,https://github.com/qutip/qutip/pull/476#issuecomment-221221607,1,['error'],['errors']
Availability,"Can confirm both the error and the workaround. As a physicist, I just did this to lines 48 and 49 of `hardware_info.py`; ```; #results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); #.readlines()[0].split('@')[1][:-4])*1000)}); results.update({'cpu_freq': 3000}); ```; Works fine now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606#issuecomment-885023500:21,error,error,21,https://qutip.org,https://github.com/qutip/qutip/issues/1606#issuecomment-885023500,1,['error'],['error']
Availability,"Can you please say something about result.photocurrent? I can see it contains all the jumps from all the trajectories, but what is the meaning of the value associated with each jump? It believe it goes down when I increase the number of trajectories or timesteps, so I think it is perhaps dividing by those numbers? But I don't know what else it might depend on. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2539#issuecomment-2400213467:202,down,down,202,https://qutip.org,https://github.com/qutip/qutip/issues/2539#issuecomment-2400213467,1,['down'],['down']
Availability,Catch and raise the error message of the subprocess. **Description**; See https://github.com/qutip/qutip/issues/1426#issuecomment-770080582. **Related issues or PRs**; This should fix #1426 . **Changelog**; Improve the error message of circuit plotting,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1427:20,error,error,20,https://qutip.org,https://github.com/qutip/qutip/pull/1427,2,['error'],['error']
Availability,"Closing this because the original issue is resolved. Some support for Cython 3.0 is now available, but the situation is still a bit fluid and complex as Cython 3.0 stabilizes. We'll likely need a few more specific issues to deal with Cython 3.0 support. Anyone reading feel free to open such an issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2245#issuecomment-1856882465:88,avail,available,88,https://qutip.org,https://github.com/qutip/qutip/issues/2245#issuecomment-1856882465,1,['avail'],['available']
Availability,"Closing this now because it's not really a QuTiP error, just Apple being Apple.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-809712509:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-809712509,1,['error'],['error']
Availability,"Closing this now, unless you have more problems - QuTiP has binary release candidates for 4.5.2 and 4.5.3 on `conda-forge` (I think they rebuilt 4.5.2 since this issue), and I couldn't reproduce any build failures on `pip` with 3.9.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371#issuecomment-809302975:205,failure,failures,205,https://qutip.org,https://github.com/qutip/qutip/issues/1371#issuecomment-809302975,1,['failure'],['failures']
Availability,"Code in `__init__.py` is executed on import, including printing and raising error.; But I don't know if we can differ between import methods (`import qutip` vs `from qutip import *`)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1071#issuecomment-520490526:76,error,error,76,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-520490526,1,['error'],['error']
Availability,CodeClimate reported a bunch of places where line lengths were increased to exceed 79 characters. Could we reduce those down again if possible? Maybe do this at the end so that it's not too hard to review the reformatting.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1925#issuecomment-1152508955:120,down,down,120,https://qutip.org,https://github.com/qutip/qutip/pull/1925#issuecomment-1152508955,1,['down'],['down']
Availability,"Computed error 1.08705544e-07, tol 1e-7... The initial ket in `rand_ket(2)`. I believe that with `nosetest`, the random seed was kept between test file. One of our early test would fix the seed and all following tests would be deterministic. With `pytest` the seed is probably reset at each file. We could loosen the tolerance. Ideally we would get the stats on the error first. Maybe `pytest` has a support for test that pass 99% of the time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625283606:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625283606,3,"['error', 'toler']","['error', 'tolerance']"
Availability,Confirming that the only tests that are failing currently are the `brmesolve` related tests. The previous commit fixed one failure in the coefficient tests.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1727#issuecomment-1050000793:123,failure,failure,123,https://qutip.org,https://github.com/qutip/qutip/pull/1727#issuecomment-1050000793,1,['failure'],['failure']
Availability,"Consider what you're doing from a statistical sense here. If everything works correctly, then you're effectively trying a two-tail hypothesis test that your test binomial distribution has a probability of 0.25, given you made `n` observations of it. The analytic success rate of your test is then; ```python; import scipy.stats; def success(n, p, tol):; dist = scipy.stats.binom(n, p); return dist.cdf(n * (p+tol)) - dist.cdf(n * (p-tol)); ```; where `success(4096, 0.25, 0.02)` is 99.67%. Since there are 5 independent runs on Travis, that's equivalent to a failure rate of 1.6% on every single CI run, which is several orders of magnitude too high. It's probably just luck that it was Python 3.8 on both occasions - it's a one-in-five chance that in two failing CI runs, it was the same setup both times. You have to consider what is most appropriate to fix the test, and what you can reasonably test in ~1 second of runtime. You don't want to increase the tolerance too much, because then you can get a lot of false positives even if something is broken. If you can bump the number of runs up to 100,000 and set the tolerance at 0.01, you'll have a per-test failure rate of ~3e-13, which is more like what we'd want. If you keep it at 4096, the tolerance should be more like 0.05 (which is pretty big tbh).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-640043626:559,failure,failure,559,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-640043626,5,"['failure', 'toler']","['failure', 'tolerance']"
Availability,"Cool, that would be nice. I'll have a look at restructuring qutip.tensor.tensor a bit so that it at least preserves the superreps attribute when possible and raises an error when called with superoperators with different superreps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39531063:168,error,error,168,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39531063,1,['error'],['error']
Availability,"Could we just reach `Data` objects to be multiplied by a scalar so that the Tensorflow backend can accept multiplication by a `tf.Tensor` and either raise an error if it's a not a `1x1` tensor or perform the scalar multiplication if it is? It feels like this is a quirk of Tensorflow that scalars are represented by `1x1` matrices, so it would be nice if the tensorflow backend could handle that quirk itself.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607#issuecomment-881323790:158,error,error,158,https://qutip.org,https://github.com/qutip/qutip/issues/1607#issuecomment-881323790,1,['error'],['error']
Availability,Could you please post the code snippet and the traceback of the error message ? Thank you.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/682#issuecomment-292698585:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/issues/682#issuecomment-292698585,1,['error'],['error']
Availability,"Could you push the code you have right now? We have CI that builds documentation, which will reveal the error you mentioned in more detail. Maybe I can help then.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2441#issuecomment-2148346368:104,error,error,104,https://qutip.org,https://github.com/qutip/qutip/pull/2441#issuecomment-2148346368,1,['error'],['error']
Availability,"Curious cross-reference from [mdanalysis](https://github.com/MDAnalysis/mdanalysis). Their tests trigger the same error (likely again because of pytest-xvfb),; ```; XIO: fatal IO error 0 (Success) on X server "":1029""; ```; Their error is not so simple to clear, since they use the object oriented matplotlib API (e.g. using AxesSubplot `matplotlib.axes._subplots.AxesSubplot`) rather than matplotlib.pyplot. So they don't have access to `plt.close()` and `axes.cla()` doesn't prevent the error, probably for the same reason that `plt.clf()` didn't work for qutip. One point they have which is worth noting: they recommend using the environment variable `MPLBACKEND=agg` for headless CI testing. And sure enough the XIO error does not occur with mdanalysis if `MPLBACKEND=agg` is set. For qutip the `plt.close(fig)` patch is still the best (more robust) solution though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-912159847:114,error,error,114,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-912159847,12,"['error', 'robust']","['error', 'robust']"
Availability,"Currently QuTiP solvers are pure batch jobs. One calls a function, e.g. `mesolve`, which then runs until the state has been propagated to all requested time steps and then the function returns the result. There are a variety of use cases where having access to results as they are calculated can be useful:. * Implementing a progress bar; * Limiting how long a solver runs for; * Stopping a solver early if a steady state or other desired or undesired state is detected.; * Implementing adaptive solvers where parameters are changed depending on the current state. We're currently refactoring the QuTiP solvers for QuTiP v5, so perhaps now is a good time to consider whether this feature will see enough use to be worth the effort. Implementation options:. * The solver could call a `callback function` each time a new result becomes available.; * The solver could `yield` each time a new result becomes available.; * The solver could do something asynchronous (I think this is not worth supporting natively in QuTiP -- either of the others would allow something asynchronous to be implemented by a QuTiP users themselves if they wanted). Probably these are not mutually exclusive. To make porting easier, it should still be possible to call some solve function without a callback or yielding as one can do now. Related issues:. * qucontrol/krotov#93",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571:834,avail,available,834,https://qutip.org,https://github.com/qutip/qutip/issues/1571,2,['avail'],['available']
Availability,"Currently e_ops argument is a list of expectation values to be calculated, and the result is stored as a list of ndarray in result.expect (where result is the Odedata instance returned by the solver). If expectation values for a lot of different operators are requested it becomes a bit tedious to keep track of which order the operators appear in e_ops, and which index show be used in result.expect. A solution could be to make all evolution solvers support that e_ops is given as a dictionary, for example:. ```; e_ops = {'a' : destroy(N), 'N': num(N), 'X': destroy(N) + create(N)}; ```. If e_ops is a dictionary, result.expect should also be a dictionary with the same keys, which would make it easy and less error prone to retrieve the results from result.expect.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/20:713,error,error,713,https://qutip.org,https://github.com/qutip/qutip/issues/20,1,['error'],['error']
Availability,"Currently qutip.control.optimize_pulse supports four formats for `oper_dtype` (i.e. its internal representation of propagators and intermediate states). The four formats and their statuses before this PR are described below:. - `numpy.ndarray`: Working.; - `Qobj`: Working, except that some dimensions were lost in Qobj construction and using sparse eigenvector decomposition was broken.; - `scipy.sparse.csr_matrix`: Broken. There was an undefined variable referenced in the code to construct the propagators. Many code paths had no explicit support for them and assumed they worked the same as ndarrays in cases where they didn't.; - `anything matrix-like`: Broken for the same reasons as `csr_matrix` above. This PR removes support for last two oper_dtypes and fixes the `Qobj` one, leaving the situation as follows:. - `numpy.ndarray`: Working.; - `Qobj`: Working.; - `scipy.sparse.csr_matrix`: No longer supported.; - `anything matrix-like`: No longer supported. Note that `Qobj` uses sparse matrices internally, so CSR matrix support is still available via the `Qobj` oper_dtype. In QuTiP v5, only `Qobj` support will be retained since `Qobj` will support both sparse and dense representations via the data layer. **Related issues or PRs**; * Fixes #1617. **Changelog**; Fix qutip.control.optimize_pulse support for sparse eigenvector decomposition with the Qobj oper_dtype (the Qobj oper_dtype is the default for large systems).; Remove qutip.control.optimize_pulse support for scipy.sparse.csr_matrix and generic ndarray-like matrices. Support for these was non-functional.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1621:1049,avail,available,1049,https://qutip.org,https://github.com/qutip/qutip/pull/1621,1,['avail'],['available']
Availability,"Currently, running `make html` produces a `_build/html` directory that is 50MB large. This causes problems with the qutip/qutip.github.io repository, because currently part of our deployment process involves copying this directory in a new folder in this repo every time we do a minor release. The `docs` folder of the website is already 239MB (and `downloads` is another `154M`, but that's a separate problem - we need to start releasing the PDF documentation in GitHub Releases from this repo and hot-linking to fix that), which is already somewhat beyond ""reasonable"" for a website. There are two main problems causing this right now:; 1. we repackage 13MB of static assets every time we rebuild. Some of these are sensible (we _should_ repackage our styles), but we have 9MB of webfonts (we could link to Google's webfonts CDN) and another 0.5MB of jquery and underscore JavaScript libraries that we could also use versioned hotlinks to.; 2. certain images (e.g. `guide-visualization-6.pdf`) are generated as ultra-high resolution PDFs, which takes up a lot of space (4.6MB for that particular one, though it's the worst offender) and also makes a PDF that can choke some of the weaker PDF readers out there. Both of these are quite fixable I think, but may require us patching/intercepting the output of Sphinx. This can be sensibly done within the `Makefile`, but it's a very nontrivial task.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1539:350,down,downloads,350,https://qutip.org,https://github.com/qutip/qutip/issues/1539,1,['down'],['downloads']
Availability,"Cython 0.29 is not compatible with python 3.12.; On debian, they have the module `python3-zombie-imp` which is a copy of the removed imp module, but it does not seems available on pip or conda. Thus cython jit (pyximport) is not working on 3.12 for almost everyone. Adding cython3 to 4.7.X is not a quick fix and we already choose not to do it. The best we can do is to run as if cython was not installed at runtime on 3.12 and release 5.0.0 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2293#issuecomment-1892641379:167,avail,available,167,https://qutip.org,https://github.com/qutip/qutip/issues/2293#issuecomment-1892641379,1,['avail'],['available']
Availability,"Cython error are quite vague, but there should not be any cython error here.; It could be errors inside a cython function. Could you send the log if it persist.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2351#issuecomment-2004022346:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/pull/2351#issuecomment-2004022346,3,['error'],"['error', 'errors']"
Availability,Cython error with time dependent Hamiltonian on Win10,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/1026,1,['error'],['error']
Availability,"Dear Qutip admin,. Currently, I am using mesolve in qutip. I would like to get the final_state from the mesolve without evaluating any expectation operator (e_ops). I realize that the default feature of qutip is that if I input e_ops to be an empty matrix and set final_state_store = True, qutip will automatically store the state at all time which will slow down the simulation. As for now, I would like to have mesolve to store only the final_state without storing the states at all time. May I kindly ask for your help to add this feature to mesolve? Is it possible also to add a feature where I can evaluate the expectation operator at the final time only without having to evaluate it at all time?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472:359,down,down,359,https://qutip.org,https://github.com/qutip/qutip/issues/1472,1,['down'],['down']
Availability,"Dear Qutip admin,. Thank you for your fast reply. I tried the above method. However, it doesn't work. It gives me an error message saying that ""Time list does not match"". Here is one sample on how I applied it. import qutip; import numpy as np; options = qutip.Options(); options.nsteps = 100000; hamiltonian = qutip.sigmax(); args = {'omega':1000}; timelist = np.linspace(0, 1, 1000); omegatlist = np.cos(args['omega']*timelist); H = qutip.QobjEvo([qutip.sigmax(),[qutip.sigmax(),omegatlist]], tlist=1000); state = qutip.basis(2, 0).proj(); times = np.linspace(0, 1, 2); qutip.mesolve(H,state,times,[],qutip.sigmax(),args=args,options=options). Although in the above, I used an analytic function for my Hamiltonian, actually my real Hamiltonian is a time-dependent non-analytic function which has to be represented by an array. Your comment on how to solve the problem associated with the above code will be much appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808615925:117,error,error,117,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808615925,1,['error'],['error']
Availability,"Dear all,. I'm trying to install the latest release of QuTip on Ubuntu system. Since; our workstation hasn't been connected to internet, I; downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; to install from source code. Firstly I successfully installed Anaconda with the command:; bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh. Then in the conda environment I typed the command:; python setup.py install. I get the following error message:. gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; -funroll-loops; gcc: error trying to exec 'cc1plus': execvp: No such file or directory; error: command 'gcc' failed with exit status 1. It seems the gcc compiler isn't correctly located? Or what else problem. I checked the gcc version on the workstation:; gcc --version; gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; Copyright (C) 2018 Free Software Foundation, Inc.; This is free software; see the source for copying conditions. There is NO; warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. whereis gcc; gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz. How can I direct the installer to find the gcc compiler?. Thanks!; Best regards, Pu Zhang; --; Faculty at School of Physics, Huazhong University of Science and Technology; Room 819 (N.), Yifu Science and Technology Building; 1037 Luoyu Road, Wuhan, China; E-mail: puzhang0702@hust.edu.cn <puzha@fotonik.dtu.dk>; Homepage: www.researchgate.net/profile/Pu_Zhang4; Phone: +86 18871860394",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501605757:140,down,downloaded,140,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501605757,5,"['Down', 'down', 'error']","['Downloads', 'downloaded', 'error']"
Availability,"Dear developers,. I'm failing to install qutip on Ubuntu 18.04 via pip. The error output says:; ```bash; error: invalid command 'bdist_wheel'; ; ----------------------------------------; Failed building wheel for qutip; ```. How can I solve this issue?. Regards. PS: The relevant software versions are; python3 3.6.8; python3-venv 3.6.7; qutip 4.4.1 (The version I tried to install.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1086:76,error,error,76,https://qutip.org,https://github.com/qutip/qutip/issues/1086,2,['error'],['error']
Availability,"Dear qutip admin,. I have a question related to the question about mesolve returning only final state. Here, I would like to ask how to save only the propagator matrix at the final time from qutip.propagator without saving the propagator matrix at all time steps? If I followed the method given in the previous thread titled ""mesolve returning only final state"", the method does not work. Basically if I declared H as QobjEvo and use it in qutip.propagator, I got the following error message ""Invalid time-dependent format"". Any idea how to rectify this problem? Below is the code. import qutip; import numpy as np. fast_ts = np.linspace(0, 1, 1001); omegalist = 2.91e2*fast_ts; fast_xs = 2.9e3*np.pi * np.cos(2*np.pi * omegalist * fast_ts). H = qutip.QobjEvo([[qutip.sigmax(), fast_xs]], tlist=fast_ts); rho = qutip.basis(2, 0).proj(); times = np.array([0., 1]). e_ops = [qutip.sigmay()]; options = qutip.Options(nsteps=10_000_000, atol=1e-14, rtol=1e-12). two_times = qutip.mesolve(H, rho, times, e_ops=e_ops, options=options); many_times = qutip.mesolve(H, rho, fast_ts, e_ops=e_ops, options=options). U = qutip.propagator(H, times, [], options=options); print(U[1]*rho)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1482:478,error,error,478,https://qutip.org,https://github.com/qutip/qutip/issues/1482,1,['error'],['error']
Availability,Description; Fixes TypeError: 'Axes3D' object is not iterable when running the code from the tutorial. Related issues or PRs; #799 . Changelog; Fixed runtime error in http://qutip.org/docs/latest/guide/guide-bloch.html#generating-images-for-animation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558:158,error,error,158,https://qutip.org,https://github.com/qutip/qutip/pull/1558,1,['error'],['error']
Availability,Did you grab the latest version from git? I cant seem to reproduce the error. Perhaps something has changed in diags since scipy 0.15,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/508#issuecomment-237343862:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237343862,1,['error'],['error']
Availability,Dimension error on time evolving Hamiltonian for solving master equation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1988:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/1988,1,['error'],['error']
Availability,Dimensions error when attempting to solve time evolving annealing Hamiltonian using mesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1989:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/issues/1989,1,['error'],['error']
Availability,"Do worry about the failing python2.7 tests, it's a common error on all recent checks. Your pull should not affect them.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/917#issuecomment-428349067:58,error,error,58,https://qutip.org,https://github.com/qutip/qutip/pull/917#issuecomment-428349067,1,['error'],['error']
Availability,"Do you get the same behaviour with QuTiP 4.5.0 in the same environment? The offending parts of `qutip/__init__.py` have been there since then, so it shouldn't be new in 4.5.2 at least. I can't reproduce the error unless `pyximport.install()` has already been run before QuTiP is imported (e.g. if I do `import pyximport; pyximport.install(); import qutip` or `importlib.reload(qutip)`). We have `qutip/__init__.py` organised so that we don't enable `pyximport` until after we've done the test for `qutip.cy.openmp.parfuncs`: first we do. https://github.com/qutip/qutip/blob/8e181cc44ceefc14ad0e4f4bcf78e1c8fcd2b291/qutip/__init__.py#L100-L105. and only after that do we. https://github.com/qutip/qutip/blob/8e181cc44ceefc14ad0e4f4bcf78e1c8fcd2b291/qutip/__init__.py#L124-L126. In your error it's trying to build `qutip.cy.openmp.parfuncs`, and the only line that ever attempts to import that (in Python space) is line 101 above in `__init__`. It can only attempt to Cythonize files if `pyximport` is activated, but `qutip` doesn't activate that til a few lines later. It's certainly still a bug that this error appears if you've manually activated `pyximport` before (which would definitely cause it), but I'm struggling to find any other reason that the error could appear. We're looking to simplify the handling of OpenMP in a later version, and this buggy check is certainly a good reason to expedite that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670167290:207,error,error,207,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670167290,8,['error'],['error']
Availability,Documentation error in `chi_to_choi`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1730:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/issues/1730,1,['error'],['error']
Availability,"Does anyone know how to fix the following error, or even how to interpret it?. ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-2-d4205f385795> in <module>(); ----> 1 from qutip import*. /home/jan/.local/lib/python2.7/site-packages/qutip/__init__.pyc in <module>(); 203 ; 204 # core; --> 205 from qutip.qobj import *; 206 from qutip.states import *; 207 from qutip.operators import *. /home/jan/.local/lib/python2.7/site-packages/qutip/qobj.py in <module>(); 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.ptrace import _ptrace; 62 from qutip.permute import _permute. /home/jan/.local/lib/python2.7/site-packages/qutip/fastsparse.py in <module>(); 403 #Need to do some trailing imports here; 404 #-------------------------------------; --> 405 from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint). /home/jan/.local/lib/python2.7/site-packages/qutip/cy/__init__.py in <module>(); ----> 1 from qutip.cy.spmatfuncs import *. ImportError: /home/jan/.local/lib/python2.7/site-packages/qutip/cy/spmatfuncs.so: undefined symbol: PyUnicodeUCS2_FromStringAndSize",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/637:42,error,error,42,https://qutip.org,https://github.com/qutip/qutip/issues/637,1,['error'],['error']
Availability,Doesn't install matplotlib when installing on windows.; And then produces errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/878:74,error,errors,74,https://qutip.org,https://github.com/qutip/qutip/issues/878,1,['error'],['errors']
Availability,"E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_steadystate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_me.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_se.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_subsys_apply.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:24788,ERROR,ERROR,24788,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_qobjevo.py _________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ___________________ ERROR collecting qutip/tests/test_qpt.py ___________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _____________ ERROR collecting qutip/tests/test_qubit_evolution.py _____________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_qubitcircuit.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:17692,ERROR,ERROR,17692,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_states.py __________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _______________ ERROR collecting qutip/tests/test_steadystate.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_me.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_stochastic_se.py ______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/te",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:24315,ERROR,ERROR,24315,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,ENH: Add error bars in `mcsolve`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1032:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/issues/1032,1,['error'],['error']
Availability,ENR states errors with v5 solvers,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2122:11,error,errors,11,https://qutip.org,https://github.com/qutip/qutip/issues/2122,1,['error'],['errors']
Availability,"Early thought:. The `solver.add_feedback` approach doesn't look too bad, but it does seem a bit odd because on does to specify the state parameters when constructing the operators that the define the system -- i.e. H, c_ops, etc. Could we not expose the feedback on the QobjEvo itself so that users can then do:. ```python; H = QobjEvo([op, lambda t, ket: bra @ ket], feedback={""ket"": ""qobj""}); ...; ```. or; ```python; H = QobjEvo([op, lambda t, ket: bra @ ket]); H.add_feedback(ket=""qobj""); ...; ```. or even; ```python; H = QobjEvo([op, lambda t, ket: bra @ ket]); solver = Solver(...); solver.rhs.add_feedback(ket=""qobj""); ```. Thoughts?. It will get a bit trickier for the feedback that is less easily available from the state, but perhaps solvers can just check whether the ops they're using need the special feedback?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2210#issuecomment-1663061538:707,avail,available,707,https://qutip.org,https://github.com/qutip/qutip/pull/2210#issuecomment-1663061538,2,['avail'],['available']
Availability,Either `nnz` return `size_t` or raise an error when allocating matrix with too many elements.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2314#issuecomment-1946129803:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/pull/2314#issuecomment-1946129803,1,['error'],['error']
Availability,Error 'fast_csr_matrix allows only int32 indptr.' when multiplying Qobj,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2468:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/2468,1,['Error'],['Error']
Availability,Error Pip Install,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/739,1,['Error'],['Error']
Availability,Error from brmesolve() when trying to run code from User Guide examples,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1223,1,['Error'],['Error']
Availability,Error in importing,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1119:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1119,1,['Error'],['Error']
Availability,Error in the log_handler setting and missing documentation,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1156:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1156,1,['Error'],['Error']
Availability,"Error message:; ```; ../anaconda/lib/python3.4/site-packages/qutip/bloch3d.py"", line 115, in __init__; raise Exception(""This function requires the mayavi module.""); ```; It seems that we cannot use python3 and mayavi at the same time. Anyone has similar issues?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/671:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/671,1,['Error'],['Error']
Availability,Error multiplication of Qobjs,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/690:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/690,1,['Error'],['Error']
Availability,Error when passing list of callback functions to mesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2189:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/2189,1,['Error'],['Error']
Availability,Error when printing the result of mcsolver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1016:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1016,1,['Error'],['Error']
Availability,Error while importing Qutip,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2500:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/2500,1,['Error'],['Error']
Availability,Error with conda MKL2019.0 on Windows,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/975,1,['Error'],['Error']
Availability,Error with mesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1930:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1930,1,['Error'],['Error']
Availability,Error with use_precond when using steady state solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1015:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1015,1,['Error'],['Error']
Availability,"Error: fidelity(U, U) != 1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1372:0,Error,Error,0,https://qutip.org,https://github.com/qutip/qutip/issues/1372,1,['Error'],['Error']
Availability,Errors in installation verifying process,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:0,Error,Errors,0,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['Error'],['Errors']
Availability,Errors when running qutip.testing.run() on Mac M1,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:0,Error,Errors,0,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['Error'],['Errors']
Availability,"Every `Qobj` created by qutip have `dims[0]` and `dims[1]` being list. `dims=[2, 2]` is an error that we should catch. The main issue is that there is no clear documentation or tests that clearly says what is a valid dims format. . There are some strange dimension that are produced by our function that would raise an error with `np.stack` like; `tensor(operator_to_vector(oper), oper)` but I don't think we should accept these kind of `Qobj` in the first place, so I am fine failing there.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1783#issuecomment-1028044366:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/1783#issuecomment-1028044366,4,['error'],['error']
Availability,"Every other file works fine. . For example, double click qobj.py and this opens. ![example](https://user-images.githubusercontent.com/32380833/43563341-b0c54b2a-965c-11e8-917c-4f2c18d8b457.png). Double click random_objects.py and it freezes and does nothing. I can open it in other editors like vim but I think it *should* work with the python default editor. . When I try to open up with IDLE from command line I get this error. ![error](https://user-images.githubusercontent.com/32380833/43563415-f443f842-965c-11e8-94f2-c28503bc6637.png). Which leads me to think there's a character somewhere in the file that causes the crash. But I don't know where.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/907:423,error,error,423,https://qutip.org,https://github.com/qutip/qutip/issues/907,2,['error'],['error']
Availability,"Everything else works correctly the issue appears when going to high dimensions only, 8 to be clear. I tried myself on other environments and as long as scipy is changed the instability in 8 dimensions disappears, I do not imagine what type of error can appear only in big dimensions and in a specific scipy version other than a numeric stability in the scipy version itself. Do you have any guess?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817212665:244,error,error,244,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817212665,2,['error'],['error']
Availability,Exception: Input operator and ket do not share same structure. error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/802:63,error,error,63,https://qutip.org,https://github.com/qutip/qutip/issues/802,1,['error'],['error']
Availability,Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/1623,1,['error'],['error']
Availability,Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/806,2,['error'],['error']
Availability,"Extra safety check have been added to prevent this kind of errors. #1783, #1784, #1778",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1374#issuecomment-1074188292:59,error,errors,59,https://qutip.org,https://github.com/qutip/qutip/issues/1374#issuecomment-1074188292,1,['error'],['errors']
Availability,"Failed to break down the line. ```; f.write(""# Generated by QuTiP: %dx%d %s matrix in %s format ['%s' separated values].\n"" % (M, N, numtype, numformat, sep)); ```. to less then 80 chars without breaking the unit tests. Needs to be done later.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/7:16,down,down,16,https://qutip.org,https://github.com/qutip/qutip/issues/7,1,['down'],['down']
Availability,Failure in Correlation unittest when running tests twice,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/269:0,Failure,Failure,0,https://qutip.org,https://github.com/qutip/qutip/issues/269,1,['Failure'],['Failure']
Availability,Failure in doc builds was `ipython 8.10.0 depends on prompt-toolkit<3.1.0 and >=3.0.30` so we likely just need to bump the version of prompt-toolkit.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085#issuecomment-1426687909:0,Failure,Failure,0,https://qutip.org,https://github.com/qutip/qutip/pull/2085#issuecomment-1426687909,1,['Failure'],['Failure']
Availability,"False test failure again - we really have too many tests which fail probabilistically! This particular one should have been smoothed out by #1250, since the current test is rather convoluted and there's several imprecise floating-point literals in use.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1264#issuecomment-628910011:11,failure,failure,11,https://qutip.org,https://github.com/qutip/qutip/pull/1264#issuecomment-628910011,1,['failure'],['failure']
Availability,"Finally, here is the temporal solution for those who might have the same issue. My bug report is ; ```; /home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```. There is no `src/zspmv_openmp.hpp` in that folder, i.e. `/home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/`. One can download [this folder](https://github.com/qutip/qutip/tree/master/qutip/cy/openmp/src) and put this `src` folder into the target folder `/home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205#issuecomment-606944113:193,error,error,193,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-606944113,2,"['down', 'error']","['download', 'error']"
Availability,"First of all I'm glad you could get it to run under OSX. Which OpenCL environment are you using?; - Is the failure of `test_mcsolve_cl_time_dep_h` reproducible?; - You can probably ignore the compiler warning. I assume it is related to the pragma statement. Some OpenCL implementations refuse to work without it, others give you a warning that it is unnecessary. Maybe we can omit the statement based on the platform version and hide some warning, but that would require more testing (on different platforms). At the moment there is a lot of debug information to ease testing.; - The AttributeError you get is something I have not encountered yet. If you do consider merging this branch, it is a good idea to get more people involved in testing. The code has not been reviewed and probably contains some bugs. The questions you raised concerning the maintainability are all valid. On top of that setting up OpenCL is somewhat troublesome, which makes `mcsolve_cl` a kind of experimental feature. Ultimately it is up to the maintainers of qutip to decide whether such a feature should be included. The advantage `mcsolve_cl` has over `mcsolve_f90` is that it supports some time-dependence and introduces no build dependencies. If, for some reason `mcsolve_cl` does not work, the user can always fall back to `mcsolve`. By the way, is it wise to rebase this branch all the time or only when necessary?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-260134503:107,failure,failure,107,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-260134503,1,['failure'],['failure']
Availability,Fix a docstring error prompting a segmentation fault when run on python 3.7.3 on Mac Mojave.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1013:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/1013,2,"['error', 'fault']","['error', 'fault']"
Availability,"Fix a testing set-up regression made in #1348 - the version of SciPy was meant to be constrained to <1.5 to test compatibility with the older version of the sparse matrices, but the version constraint got omitted when I rewrote the `.travis.yml` file. The specific bugs that that test is meant to catch (errors handling `scipy.sparse.csr_matrix` matrix multiplication) can't be present in this branch anyway, because the new data types don't use scipy internals. Still, it's good to test against older versions of scipy as well - in 1.5 they changed some numerics in the eigenvalue solvers, which caused a whole bunch of our tests to break because we relied on the gauge and order of the vectors returned remaining constant.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1363:304,error,errors,304,https://qutip.org,https://github.com/qutip/qutip/pull/1363,1,['error'],['errors']
Availability,"Fix adding points to the Bloch sphere, with `Bloch.add_points(point)`. ; This solves Issue #1027.; It was a bit tricky to pin down. In Matplotlib 3.1.0, differently from 3.0.3, `edgecolor='none'` somehow produced a broadcast error, whereas now it is set by default to `None`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1097:126,down,down,126,https://qutip.org,https://github.com/qutip/qutip/pull/1097,2,"['down', 'error']","['down', 'error']"
Availability,Fix dispatch signatures errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2006:24,error,errors,24,https://qutip.org,https://github.com/qutip/qutip/pull/2006,1,['error'],['errors']
Availability,Fix doc build error from changelog 5,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2365:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/pull/2365,1,['error'],['error']
Availability,Fix error in definition of m_ops for heterodyne detection in smesolve(),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1237:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/1237,1,['error'],['error']
Availability,Fix errors in gate definitions,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1501:4,error,errors,4,https://qutip.org,https://github.com/qutip/qutip/pull/1501,1,['error'],['errors']
Availability,Fix failures in subsystem apply,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/79:4,failure,failures,4,https://qutip.org,https://github.com/qutip/qutip/pull/79,1,['failure'],['failures']
Availability,Fix ffmpeg error [unitaryHACK],MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1557:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/pull/1557,1,['error'],['error']
Availability,Fix for error that popped up when running:; ```; qutip-doc/guide/scripts/floquet_ex3.py; ```; Had to fix the last fix #626 as well.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/628:8,error,error,8,https://qutip.org,https://github.com/qutip/qutip/pull/628,1,['error'],['error']
Availability,Fix for qload decoding error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/323:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/pull/323,1,['error'],['error']
Availability,Fix in load params where 'pulsegen' was 'optim'; Fix to error handing when creating output directory; FileExistsError is new in Python 3; Hence swapped to OSError using errno for Python 2 compatability,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/317:56,error,error,56,https://qutip.org,https://github.com/qutip/qutip/pull/317,1,['error'],['error']
Availability,Fix logic error in shape check,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2349:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/pull/2349,1,['error'],['error']
Availability,Fix redundancy and sign error in jmat.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/565:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/565,1,['error'],['error']
Availability,Fix sign error in jmat.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/569:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/569,1,['error'],['error']
Availability,Fix spelling errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1333:13,error,errors,13,https://qutip.org,https://github.com/qutip/qutip/pull/1333,1,['error'],['errors']
Availability,"Fix the test breaking dev.major by adding the tolerance in the test itself.; This is an alternative to #1656, merge only one.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1658:46,toler,tolerance,46,https://qutip.org,https://github.com/qutip/qutip/pull/1658,1,['toler'],['tolerance']
Availability,Fix transposition errors and improve scaling of Floquet methods,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1248:18,error,errors,18,https://qutip.org,https://github.com/qutip/qutip/pull/1248,1,['error'],['errors']
Availability,Fixed error in code,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/193:6,error,error,6,https://qutip.org,https://github.com/qutip/qutip/pull/193,1,['error'],['error']
Availability,"Fixed some causes of travis tests not succeeding. In particular e303b0e fixes use of `round` in the function `_td_wrap_array_str` in rhs_generate.py. This function uses `round` to get an integer number that is then passed as an array index. Since `round` returns a float, this causes the deprecation warning ""DeprecationWarning: using a non-integer number instead of an integer will result in an error in the future"". I therefore wrapped the call to `round` with a call to `int`. The travis tests now pass succesfully for this pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/404#issuecomment-162598230:396,error,error,396,https://qutip.org,https://github.com/qutip/qutip/pull/404#issuecomment-162598230,1,['error'],['error']
Availability,Fixes #847 scipy requirement superceeds error catching,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/851:40,error,error,40,https://qutip.org,https://github.com/qutip/qutip/pull/851,1,['error'],['error']
Availability,Fixes in load_params and output_dir creation error handling,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/317:45,error,error,45,https://qutip.org,https://github.com/qutip/qutip/pull/317,1,['error'],['error']
Availability,Fixes the wrong vector ordering in the conversion between fock and eigen bases. Essentially gave rise to transpose error. Added tests to verify fix. Also added @cython.cdivision(True) to both BR and ME codegens so that any string with division do not call back to Python.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/712:115,error,error,115,https://qutip.org,https://github.com/qutip/qutip/pull/712,1,['error'],['error']
Availability,"For a constant Liouvillian, it seems very reasonable that an eigenseries-based solution would be faster? In the end, that massively reduces the number of matrix-matrix operations to be done. I'm not at all familiar with Matlab, but I wouldn't be shocked if that's what your toolbox there is doing too. Looking at your code, you seem to have 16 cores available. QuTiP at present can't make too much use of multiple cores in `mesolve` or `essolve` (though it can in `correlation`), whereas Matlab may well have some fancy parallelised methods for solving eigenvector problems (if doing that method) - we rely on Scipy for our eigenvector calculations, and I'm pretty sure there's no parallelisation in there. There could also be large timing disparities if you're not being linked to good BLAS/LAPACK/ARPACK implementations in Python space. I'm sure that any distributed version of Matlab will come stuffed with lovely libraries compiled specifically for your processor's instruction set, but Scipy may only be able to find Netlib BLAS or (even worse) Accelerate - if so, they probably won't be making good use of vectorised instructions in your processor, and may not be well-optimised for memory access.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1591#issuecomment-871031472:350,avail,available,350,https://qutip.org,https://github.com/qutip/qutip/issues/1591#issuecomment-871031472,1,['avail'],['available']
Availability,"For a first issue, it could be solved with little changes or by going down the rabbit-hole.; There could also be a discussion about always returning complex expectation values.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1460#issuecomment-796876592:70,down,down,70,https://qutip.org,https://github.com/qutip/qutip/issues/1460#issuecomment-796876592,1,['down'],['down']
Availability,"For clarity: I ran your code with 1,000 timesteps and 10,000 timesteps and found a linalg norm difference in the outputs of 4.4e-4 (compared to QuTiP's 6.5e-8), which is what I meant. I considered that difference ""not fully convergent"" in part because QuTiP's default tolerance goals have an absolute tolerance of ~1e-8 (that's per-element, not the full norm). Here's a couple more things to look at:; - if you're using QuTiP objects without our solvers like this, we tidy up sparse matrices at every operation. You probably don't want that - you might get different results if you convert your RK method to work on raw Numpy arrays.; - your RHS isn't accurate - it takes `sqrt(gamma)`, but your time-dependent function already does that. This is perhaps a mistake, and very likely the source of the discrepancy? Also, while it's irrelevant here, your Lindbladian has `c_op * c_op.dag() * rho` as the last term, but it should be `c_op.dag() * c_op * rho`.; - your RK method isn't using updated versions of the Hamiltonian or the collapse operator at the intermediate timesteps.; - you say you're using RK45, but you've only got 4 different evaluations? That looks like an RK4 method to me (not that it should matter).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986723762:268,toler,tolerance,268,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986723762,2,['toler'],['tolerance']
Availability,"For example.. one of the errors ... Qobj([1,2,3,4,5]). C:\Users\MTS-144\Anaconda3\lib\site-packages\ipykernel\ipkernel.py:448: DeprecationWarning: `input_splitter` is deprecated since IPython 7.0, prefer `input_transformer_manager`.; status, indent_spaces = self.shell.input_splitter.check_complete(code); Traceback (most recent call last):. File ""<ipython-input-9-03628e422267>"", line 1, in <module>; Qobj([1,2,3,4,5]). NameError: name 'Qobj' is not defined",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467318070:25,error,errors,25,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467318070,1,['error'],['errors']
Availability,"For large matrices (`dim > ~500`), the dense matrix dot product is still a pretty large cost, but you're still saving a fair amount. That said, at that kind of dimension, the analytical formula may do you well enough. If you want derivatives wrt alpha, you should be able to get analytic ones from my method - there's no ""black box"" numerical work that goes on in `__call__`, everything is just matrix multiplication. Given that it appears non-linearly in a possibly large multiplication, though, and I would imagine the derivatives are pretty smooth, you may well just be faster just numerically approximating it with finite differences (I don't know anything about autodifferentiation). If you're so inclined, you can sacrifice some speed for higher accuracy in the eigenvector calculations, as we can find the eigenvalues semi-analytically. There are a few places in numpy and scipy that can find the roots of the Hermite polynomials for you (i.e. get the eigenvalues), which will be found exactly wrt double precision (I believe). You can then call out to the LAPACK routine `dstein` to get the eigenvectors from the eigenvalues. `dstein` is slower than `dstemr`/`dsteqr` (which is what scipy uses, I think), but it allows us to supply the eigenvalues, removing some numerical error. I didn't test that very thoroughly though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-646100632:1281,error,error,1281,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-646100632,1,['error'],['error']
Availability,"For local operators with homogeneous decay, only pumping, emission and; dephasing are supported.; For collective operators, any jump term can be written down, writing a; Liouvillian “by hand” using the jspin operators. On Fri, 9 Oct 2020 at 09:23, pegasus328 <notifications@github.com> wrote:. > Hi.; >; > I was wondering while playing with the permutational invariant solver, if; > there is any way to customize your Lindblad in the dicke basis. I meas,; > suppose I have a collapse of the form, J_+ + J_-. The class Dicke does not; > include any flexibility a part from the collective emission/pumping and the; > corresponding individual emission/pumping.; >; > Or am I missing something?; > Thanks; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1370>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ADPF67GNDFM56EJE5WMCRJ3SJ2T7TANCNFSM4SJVGOSA>; > .; >; -- ; Dr. Nathan Shammah; www.nathanshammah.com",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1370#issuecomment-705998421:153,down,down,153,https://qutip.org,https://github.com/qutip/qutip/issues/1370#issuecomment-705998421,1,['down'],['down']
Availability,"For point 2: adding marks right now will cause conflicts, but if #1181 gets merged then it'll be much simpler. The main issue is that a lot of the testing structure has changed for tests up to `test_mcsolve.py` alphabetically, and so in general the tests are just not the same. The principle is pretty straightforwards - just like #1181 introduces a `requires_cython` mark, we would add `uses_cython`, `uses_mkl` and `uses_openmp` marks. These would be even simpler to add than `requires_cython` because unlike it, they don't require any test-generation logic at all. The change would simply be to add them to `pytest.ini`, mark the requisite functions and then change the pytest invocation of the specialised test to `pytest -m ""uses_cython""` or whatever. As far as I'm aware, the only parts of their codebase which modify their behaviour based on whether `Cython` is available is `QobjEvo`. The other parts (like `brmesolve`) just don't work if Cython isn't there. The MKL tests would become very short; by my reckoning, MKL is only used by `steadystate` and `countstat`. OpenMP is much more pervasive, as `sesolve`, `mesolve` and `brmesolve` all use it, and parts which depend on those are generally the slowest tests. The short tests could just become `pytest -m ""not slow""`? That's not super speedy, but it takes about half the time, maybe. If you want more, then a good starting point is `pytest --durations=0` which will tell us which tests are the slowest (perhaps that was what you already did when marking the slow ones?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776:869,avail,available,869,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604011776,2,['avail'],['available']
Availability,"For the time being, a fix is to downgrade Matplotlib:. conda install matplotlib==3.0.3. On Sat, 28 Sep 2019 at 13:09, XiaoTailong <notifications@github.com> wrote:. > I have the same problem in Bloch() and show() functions in Mac OS 10.14. I; > cannot plot the Bloch sphere. It seems the problem of Matplotlib. But I am; > not sure.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1027?email_source=notifications&email_token=ADPF67AG3SH3L3HWWEZIC2TQL3KHTA5CNFSM4H24W5NKYY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD72QMLY#issuecomment-536151599>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADPF67EQT2K5O3K73IHOFQ3QL3KHTANCNFSM4H24W5NA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027#issuecomment-536154011:32,down,downgrade,32,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-536154011,1,['down'],['downgrade']
Availability,"From what I understand, on intel, brmesolve seems to work correctly, but not on M1.; This look like an issue with the eigensolver. Could you run the test suite to see if it fails the eigen and bloch redfield related tests: `pytest path_to_qutip/qutip/tests`. (Tests can take >30min). Also could you look at the tensor directly:; ```; R, H_eigenvector = bloch_redfield_tensor(sigmax(), a_ops=[[sigmax(), psd]]); ```; If the tensor is wrong on M1, this would explain the error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203272586:469,error,error,469,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203272586,1,['error'],['error']
Availability,Generalized superop reps to more robustly handle multiqubit dims.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/390:33,robust,robustly,33,https://qutip.org,https://github.com/qutip/qutip/pull/390,1,['robust'],['robustly']
Availability,Getting error while importing qutip since merging PR #1082,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:8,error,error,8,https://qutip.org,https://github.com/qutip/qutip/issues/1109,1,['error'],['error']
Availability,"Getting this error for a few conversions, was not happening yesterday:. INPUT -> U1 = gate_sequence_product(qc.unitary_matrix(resolved=True)). ERROR -> ; TypeError Traceback (most recent call last); <ipython-input-67-9b3721c98c5a> in <module>(); ----> 1 U1 = gate_sequence_product(qc.unitary_matrix(resolved=True)); 2 ; 3 U0 == U1. /usr/local/lib/python3.4/dist-packages/qutip/qip/gates.py in gate_sequence_product(U_list, left_to_right); 672 for U in U_list:; 673 if left_to_right:; --> 674 U_overall = U \* U_overall; 675 else:; 676 U_overall = U_overall \* U. /usr/local/lib/python3.4/dist-packages/qutip/qobj.py in **mul**(self, other); 429 ; 430 else:; --> 431 raise TypeError(""Incompatible Qobj shapes""); 432 ; 433 elif isinstance(other, (list, np.ndarray)):. TypeError: Incompatible Qobj shapes",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/145#issuecomment-45190105:13,error,error,13,https://qutip.org,https://github.com/qutip/qutip/pull/145#issuecomment-45190105,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"Given a density matrix `rho` created in QuTiP, I'd like to apply a unitary operator to it, like in the following code:. ```python; rho_coherent = coherent_dm(10, 0); rho_squeezing = squeeze(10,0.25)(rho_coherent); ```. However, it raises the following error:; ```batch; TypeError(""Can only act oper on ket or oper.""); ```. I've fixed it temporarily by adding another `if` line 775 of `qobj.py`:. ```python; elif self.type == ""oper"":; if other.type == ""ket"":; return self * other; elif other.type == ""oper"":; return self * other * self.dag(); else:; raise TypeError(""Can only act oper on ket or oper.""); ```. However, it's only a hack because it works only when the main object is a hermitian operator (observable or density matrix) and other is a unitary matrix. . What do you think would be a good solution to solve this issue?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/977:252,error,error,252,https://qutip.org,https://github.com/qutip/qutip/issues/977,1,['error'],['error']
Availability,"Given that this PR worked fine on Travis CI before I merged it, I'm at a loss as to why all of the builds are now erroring out, much less at the linking stage. It's late here, so I'll try and look at it ASAP tomorrow. Thanks for your patience.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-181319167:114,error,erroring,114,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181319167,1,['error'],['erroring']
Availability,"Good catch, this seems to be a problem with how the arguments are structured in the function signature for brme_solve. For the tensor formation, . `def bloch_redfield_tensor(H, a_ops, spectra_cb=None, c_ops=[], use_secular=True, sec_cutoff=0.1):`. In this case, the spectra_cb is given the [ohmic_spectrum] argument, which is the correct argument. However, for the brme_solve, the signature is . ```; def brmesolve(H, psi0, tlist, a_ops=[], e_ops=[], c_ops=[],. args={}, use_secular=True, sec_cutoff = 0.1,; tol=qset.atol,; spectra_cb=None, options=None,; progress_bar=None, _safe_mode=True, verbose=False):; ```. If you run the same code with . `output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, spectra_cb = [ohmic_spectrum]); `. the code will run perfectly. However, this is an issue we should fix since spectra_cb is a depreciated argument and technically the c_ops list should accommodate arbitrary noise power spectrum functions that spectra_cb handled before. The error seems to be originating because ohmic_spectrum is of type function but the safety checker expects either a Qobj or a tuple. Also, once we fix the documentation/code on how to use c_ops, we also need to add depreciate warning to bloch_redfield_tensor to maintain uniformity.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605703993:975,error,error,975,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605703993,1,['error'],['error']
Availability,Good job hunting this down in NumPy!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/228#issuecomment-56619059:22,down,down,22,https://qutip.org,https://github.com/qutip/qutip/issues/228#issuecomment-56619059,1,['down'],['down']
Availability,"Good point, sorry to cause that problem, then. Is it worth keeping it at a debug or info severity instead, then? Also, should the warning after a failed import of configobj also be removed or downgraded (https://github.com/qutip/qutip/blob/4fc89ce6804324f20e84039d961ac765105a7a2e/qutip/settings.py#L98)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/465#issuecomment-210294305:192,down,downgraded,192,https://qutip.org,https://github.com/qutip/qutip/pull/465#issuecomment-210294305,1,['down'],['downgraded']
Availability,"Good.; Still, `brmrsolve` failing without raising an error is on us, I will close this PR when we fix that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1205377439:53,error,error,53,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1205377439,1,['error'],['error']
Availability,Got error when importing qutip,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1054:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/issues/1054,1,['error'],['error']
Availability,"Got it to work as expected after a few changes:. * First, it seems there is an error in [Gri98] and `A` should be transposed. This can be seen as equation 251 from [Gri98] differs from equation 52 from [PRA44]. There might be another issue with a `k` factor instead of a `-k` factor, but it should not matter as long as thermal population is 0. For some unknown reason, using `A` or its transpose does not change anything on qubits systems.; * Second, `c_ops` should not be dissipation operators but operators coupling to the environment bath. Then, one should not use `a` but `a + a.dag()`. This seems to be different than the standard `mesolve` and might deserve an emphasis in the doc. [Gri98] | Grifoni, P. Hänggi, Driven quantum tunneling, Physics Reports 304, 299 (1998). doi:10.1016/S0370-1573(98)00022-2.; [PRA44] | R. Blümel, A. Buchleitner, R. Graham, L. Sirko, U. Smilansky, H. Walther, Phys. Rev. A 44 (1991) 4521.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772#issuecomment-339472230:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/issues/772#issuecomment-339472230,1,['error'],['error']
Availability,"Great for the PR. . Somehow `nose` was not picking this error. ; It would be nice to investigate and fix. ; The problem seems to be at test 03 there,; ```; AttributeError: 'TestPulseOptim' object has no attribute 'tmp_dirs'; ```; Indeed, TestPulseOptim seems to have this attribute where `tmp_dirs`; are defined, ; ```; def setUp(self):; # list of file paths to be removed after test; self.tmp_files = []; # list of folder paths to be removed after test; self.tmp_dirs = []; ```; Investigating this locally (running the pytest only for this module) would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003:56,error,error,56,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560236003,1,['error'],['error']
Availability,"HI, I have some errors similar to these, and I don't know how to solve it. Is there anyone will face these problems if installing on windows?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-526840351:16,error,errors,16,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-526840351,1,['error'],['errors']
Availability,Happy for this to be merged with the build failure and we can just check that the merge commit builds correctly.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185532:43,failure,failure,43,https://qutip.org,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185532,1,['failure'],['failure']
Availability,"Hard-coding compiler flag `-march=native` in setup.py completely destroys possibility to set up Qutip on heterogeneous cluster. In general, it brings a lot of problems for people that don't have a good experience in debugging ""illegal instruction"" errors, that often happen, if you compile the module on different machine than you use. If you are sure you need optimized build for localhost, you might use; ```; export CFLAGS=""-O3 -march=native""; export CXXFLAGS=""$CFLAGS""; pip install qutip; ```; instead or provide separate option for setup.py script.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/920:248,error,errors,248,https://qutip.org,https://github.com/qutip/qutip/issues/920,1,['error'],['errors']
Availability,"Having a tool to fit a correlation function would be great for the user, I see that it's certainly not easy nor a priority.; I believe having high level Bath available will be important to get user to interested. The issue I see with `BathExponent` is that it contain a `Q` which seems to be usually shared for one Bath. While the exponent themselves can share an instance, `_spreQ`, `_spostQ`, `_s_pre_minus_post_Q` and `_s_pre_plus_post_Q` will be independent for each exponent. I don't know how many exponent per Bath you expect, if it's 1~2, it could be fine, but if it get large, you are computing and storing too many copies of these. > some exponents are paired (e.g. the + and - types). If they are to be paired, then why make each exponents independent? I see this as a reason to store them as a whole.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1601#issuecomment-965224595:158,avail,available,158,https://qutip.org,https://github.com/qutip/qutip/pull/1601#issuecomment-965224595,1,['avail'],['available']
Availability,"Having looked at the code, and thought about it more, what your seeing ; is nothing but the eigenenergies returned via SciPy. these of course ; will have floating point errors in them. The rho operator itself is ; well-defined with diagonal elements:. |[ 0. 0.18508326 0.05229591 0.01262083 0.18508326 0.; 0.01262083 0.05229591 0.05229591 0.01262083 0. 0.18508326; 0.01262083 0.05229591 0.18508326 0. ]; |. These are all positive and sum to one as they should. My earlier ; mistake was in thinking that you had issues with the operator itself and ; not the eigenenergies. -P; > 17643015 <mailto:notifications@github.com>; > February 14, 2017 at 22:31; >; > from itertools import*; > from qutip import*; >; > n= 4; > S = [0.5/sigmax(), 0.5/sigmay(), 0.5*sigmaz()]; > C = list(combinations(range(n), 2)); >; > def dist(ind): return float(min(abs(ind[0]-ind[1]), abs(n - ; > abs(ind[0]-ind[1])))); >; > def tens(oper,ind):; > I = [qeye(2) for i in range(n)]; > for i in range(len(ind)):; > print i; > I[ind[i]] = oper[i]; > return I; >; > H = sum(tensor(tens([S[0],S[0]],ind))/dist(ind) for ind in C); >; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub ; > <https://github.com/qutip/qutip/issues/646#issuecomment-279920905>, or ; > mute the thread ; > <https://github.com/notifications/unsubscribe-auth/ABMPqT8-AbK96w42xwmWK9-aOHt8KemRks5rco2WgaJpZM4L_XrW>.; >; > 17643015 <mailto:notifications@github.com>; > February 13, 2017 at 08:52; >; > qutip ; > <https://cloud.githubusercontent.com/assets/9404272/22890374/d209a6d4-f214-11e6-90e7-c49eee8de738.png>; >; > As one can see in the following picture I am getting negative ; > eigenvalues for a pure state density matrix. This leads to negative ; > entropy. Another mistake is that there should only be one non-zero ; > eigenvalue ( = 1) for a pure state density matrix. This is extremely ; > worrisome as this makes me doubt many of the results I receive from ; > the library. I have check an",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/646#issuecomment-280228892:169,error,errors,169,https://qutip.org,https://github.com/qutip/qutip/issues/646#issuecomment-280228892,1,['error'],['errors']
Availability,"He did - he's the original feature requester, but given super super weird interactions with ufuncs (see #1433), it's not so clear to me that it was _necessarily_ the right idea to implement especially now it's causing problems with how numpy arrays are used in the library. There always was a work-around; allowing `np.array(qobj)` was more to save him from writing `x = x.full() if isinstance(x, Qobj) else np.asarray(x)`. That said, I came round to the idea more as I read more about the control we can have over the rest of the numpy infrastructure. We can allow `np.array` on `Qobj` (satisfying Michael's original request), and with a little bit of extra code we can prevent all the super weird ufunc/implicit casting behaviour, because `Qobj` shouldn't be able to implicitly interoperate with raw arrays. I know in my personal code I'd rather use `Qobj.full()`, but I no longer think it's _wrong_ to allow `np.array(qobj)` given that other people like it, even with these numpy 1.20 problems. It does make it difficult to put `Qobj` in arrays, but numpy 1.20 has ruled out being able to have `np.array(qobj)` and `np.array([qobj1, qobj2], dtype=object)`, so that's not really our fault.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1434#issuecomment-772665656:1185,fault,fault,1185,https://qutip.org,https://github.com/qutip/qutip/pull/1434#issuecomment-772665656,2,['fault'],['fault']
Availability,"Hello @Ericgig, thanks a lot for your comments, it has been very instructive for me. I've solved most of the things, and I'm working with the tests your proposed and any other that comes to mind. . I have a question. When trying a test with <code>sesolve</code> and <code>e_ops=[lambda t, psi: qutip.expect(qutip.num(dim), psi)]</code> I get an <code>AttributeError</code> (krylovsolve seems to be working fine, however). It works if its not a list. This error comes from sesolve check of <code>op.isherm</code>:. ```python; elif isinstance(e_ops, list):; n_expt_op = len(e_ops); expt_callback = False; output.num_expect = n_expt_op; if n_expt_op == 0:; # fallback on storing states; opt.store_states = True; else:; for op in e_ops:; if op.isherm:; AttributeError: 'function' object has no attribute 'isherm'; ```. Im using qutip 4.6.3. Should I not compare to qutip solvers for this functionality?. Here is a running example:. ```python; from qutip import rand_herm, rand_ket, sesolve, expect, num, jmat, krylovsolve; import numpy as np. dim = 100; psi0 = rand_ket(dim); H = rand_herm(dim); tlist = np.linspace(0, 1, 100). e_op = lambda t, psi: expect(num(dim), psi). try:; out = sesolve(H, psi0, tlist, e_ops=e_op); except AttributeError:; print(""first one didn't work""); try:; out2 = sesolve(H, psi0, tlist, e_ops=[e_op]); except AttributeError:; print(""second one didn't work""); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1043000945:455,error,error,455,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1043000945,1,['error'],['error']
Availability,"Hello @hodgestar, we missed your last comment, but Nathan just notified us. We will get it all sorted out by wednesday at most. I leave a todolist to keep track of everything that @Ericgig mentioned. To-do. * [x] Include some tests like test_sesolve.py --> **Included tests with random Hamiltonian, ising transverse field and SHO. Both for states and expectation values. Lacking a testing example for callable e_ops**. * [x] Why <code>krylov_dim=30?</code> ? --> **There was a subtle physical reason, but we conclude its better to leave it as a free input without a predefined variable.**. * [x] <code>tolerance</code>, <code>store_states</code> and <code>store_final_state</code> --> **Changed as an Options qutip class, now tolerance is <code>Options.atol</code> property**. * [x] <code>e_ops</code> should also take a callable or list of mixed function and <code>Qobj</code> --> **Added support**. * [x] Remove support for <code>np.ndarray</code> --> **Removed for qutip cleanliness**. * [x] Assertion errors to specififc errors --> **Modified.**. * [x] Check that psi0 is a ket --> **Added**. * [x] If both <code>store_states</code> and <code>store_final_state</code> are True there is a small bug --> **Fixed the store twice problem**. * [x] Infinite loop at stagnant =0 --> **Added a raise ValueError if its <0.**. * [x] __all__ should be defined to filter functions seen by the user --> **set to =<code>krylovsolve</code> and <code>lanczos_algorithm</code>**. * [x] Why not call <code>_make_partitions</code> directly instead of having this method --> **Removed when deprecating <code>KSolve</code> class**. * [x] tlist is already stored, are those needed? (lines 152-155) --> **Removed when deprecating <code>KSolve</code> class**; * [x] The Result has a tag to the solver that created it --> **Added**; * [x] If tlist is empty, you can just return the empty results. --> **Now it returns an empty <code>Results()</code> instance.**; * [x] Can you use the <code>eigh</code> in <code>qutip.spar",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1739#issuecomment-1039192650:602,toler,tolerance,602,https://qutip.org,https://github.com/qutip/qutip/pull/1739#issuecomment-1039192650,4,['toler'],['tolerance']
Availability,"Hello @jakelishman sorry for hopping in, but I'm having the same problem and I'm desperate... I have xcode 10.3; This is THE error:; ```; /usr/local/Cellar/gcc/10.2.0_3/lib/gcc/10/gcc/x86_64-apple-darwin18/10.2.0/include-fixed/stdio.h:219:10: fatal error: _ctermid.h: No such file or directory; 219 | #include <_ctermid.h>; | ^~~~~~~~~~~~; ```; In the compile flags I see these:. ```; -I/usr/local/include ; -F/Library/Developer/CommandLineTools/SDKs/MacOSX10.14.sdk/System/Library/Frameworks ; -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk; ```. I've tried all suggested above to reinstall all headers, but it's nowhere in my entire disk. ; do you have any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-769182608:125,error,error,125,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-769182608,2,['error'],['error']
Availability,"Hello Dear community, ; i'm trying to install qutip using the "" pip install qutip "" command on ubuntu 16.04 , however at each time i get this error ""Command python setup.py egg_info failed with error code 1 in /tmp/pip_build"" ; i have tried many versions of ubuntu ( 14, 15 ...) and many tricks in the net ( upgrading pip; upgrading python... ) trying to bypass this problem however all my tries failed..; i'll appreciate any help dear community...; sincerly yours; Amine Ch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739:142,error,error,142,https://qutip.org,https://github.com/qutip/qutip/issues/739,2,['error'],['error']
Availability,"Hello Eric, thank you for the quick response!. We have spoken with some members of the qutip team during the grant meetings regarding porting it directly into qutip, and we agreed it would be a good addition as a separate solver. There are a couple of we-believe-good reasons to provide <code>krylovsolve</code> as another qutip solver. As you mention, the method is currently limited to constant closed system Hamiltonians. Another possible addition discussed during the meetings was support for open quantum systems, which provides another unitary-fund grant opportunity for some students!. Another important application for many-body systems comes in handy with Krylov. Given the memory limitations from matrix representation of operators and the exponential growth of many-body systems Hilbert spaces, the limit of qubits on which the solvers live is around 15 qubits. This limitation gets expanded (in exchange for some slow down in the computations) to a few more qubits exploiting the binary operational nature of many-body systems. While any solver could use operations instead of matrices, it is a good testing bead to use Krylov's algorithm because of a property when constructing this space. This feature is a must-have within our research group, and everyone could also benefit from it. More importantly, Krylov is gaining increasing interest in the research community, and we believe that providing it as a qutip solver will increase the traffic of the repository. Regarding benchmarks and some documentation, we have a public jupyter notebook with some benchmarks here [krylov use examples](https://colab.research.google.com/drive/1f7ng8q9QNEzaZ97vGop3aIip8GPtl3GR?usp=sharing), and there's also a [medium blog post](https://medium.com/@julian.ruffinelli/krylov-approximation-method-for-quantum-evolution-148b3f023ec4) with some other details. As for maintenance, yes, the way this code-block fits in should not be problematic to update even with qutip changes. We use <code>krylovsolve<",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1668#issuecomment-926236528:930,down,down,930,https://qutip.org,https://github.com/qutip/qutip/issues/1668#issuecomment-926236528,1,['down'],['down']
Availability,"Hello Eric,; I could have a look at it and add a test with the `scipy.special.sph_harm` .; Could you explain in more detail what errors you got?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1839#issuecomment-1079270356:129,error,errors,129,https://qutip.org,https://github.com/qutip/qutip/issues/1839#issuecomment-1079270356,1,['error'],['errors']
Availability,"Hello everybody,; I am using QuTiP 4.6.2. I created the Hamiltonian for a harmonic oscillator in terms of; 1) the momentum and position operator; 2) the number operators. The first case runs into trouble always whereas the second does not. The issue: When I use the momentum and position operator to create the Hamiltonian, the eigenvalues of two states in the middle of the series of states come out to be equal. this happens no matter how many Hilbert space levels I use. This issue is not there when I use the creation and annihilation operators. I should be getting identical results in both cases. Can someone point out where have I gone wrong? The code below is copied from my interpreter to show the results.; ```python; >>> import qutip as qt; >>> N = 10 # no. of states; >>> om = 1; >>> p = qt.momentum(N); >>> x = qt.position(N); >>> H = 0.5*(p*p+ om*om*x*x); >>> evals, evecs = H.eigenstates(); >>> print(""evals: "",evals); evals: [0.5 1.5 2.5 3.5 4.5 4.5 5.5 6.5 7.5 8.5]; >>> # evals[4] and evals[5] are equal (Why?) <<< The error; >>> evecs[4]==evecs[5]; False; >>> # now let us use the creation and annihilation operators to create the Hamiltonian; >>> ad = qt.create(N); >>> a = ad.dag(); >>> H1 = (ad*a + 0.5)*om; >>> evals1, evecs1 = H1.eigenstates(); >>> print(""evals1: "",evals1) # <<< No trouble here; evals1: [0.5 1.5 2.5 3.5 4.5 5.5 6.5 7.5 8.5 9.5]; >>>; ```. I would appreciate any input to fix my understanding. I am not opening a bug report because I am not sure. . With my best regards; Subimal Deb",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1587:1037,error,error,1037,https://qutip.org,https://github.com/qutip/qutip/issues/1587,1,['error'],['error']
Availability,"Hello everyone, I tried to install qutip via pip on windows 10. I got an error stating that building the wheel failed because I didn't have Virtual Studio. I don't want to install that, so I just downloaded the wheel from this site: https://www.lfd.uci.edu/~gohlke/pythonlibs/#qutip; It installed fine, I thought. If I start a python interpreter in the command line, I can import qutip, and its functions work fine as far as I can tell. Now the problem: when I try to run a .py script, I get the error `AttributeError: module 'qutip' has no attribute 'states'`. So for some reason, python can't always locate the package correctly. Other packages work fine though. Does anyone know how to solve this?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/839:73,error,error,73,https://qutip.org,https://github.com/qutip/qutip/issues/839,3,"['down', 'error']","['downloaded', 'error']"
Availability,"Hello! I'm trying to use the steadystate solver. When not using MKL, my program runs (albeit a bit slow). When using MKL, I get the following error message. I have tried to figure it out myself, to no avail. Traceback (most recent call last):; File ""cubicH_quantumPump_loop.py"", line 54, in <module>; rho = steadystate(H, c_ops); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/steadystate.py"", line 234, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/steadystate.py"", line 400, in _steadystate_direct_sparse; v = mkl_spsolve(L, b, perm = in_perm, verbose = ss_args['verbose']); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/_mkl/spsolve.py"", line 384, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""/home/ingrid/anaconda3/lib/python3.6/site-packages/qutip/_mkl/spsolve.py"", line 167, in solve; raise Exception(pardiso_error_msgs[str(error)]); KeyError: '[-4]'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/791:142,error,error,142,https://qutip.org,https://github.com/qutip/qutip/issues/791,3,"['avail', 'error']","['avail', 'error']"
Availability,"Hello! This is the first of hopefully a few PRs to add measurement functions to qutip. This PR adds a new module named `qutip.measurement` that contains two functions:. * `measure(op, state)` that performs a classic quantum measurement as described in most introductory texts (measurement collapses a state to an eigenvector of an hermitian operator and the result is the corresponding eigenvalue). It is intended to simulate a simple measurement that could be performed in a real experiment. * `measurement_statistics(op, state)` returns information that is not available via a real experiment, but is nevertheless often useful in simulator (the eigenvalues and vectors or projection operators for the measurement operator and the probabilities of each measurement result). Both functions support either kets or density matrices and return sensible results based on the kind of input. Not currently supported:. * Partial measurements of a system.; * Destructive measurements (aka von Neumann measurements of the second kind); * Density matrix ensembles (applying the measurement probabilities to the density matrix rather than making a specific measurement); * Any custom support for qubit measurement (my plan is to add those to a `qutip.qip.measurements` module once we have the basics of this module agreed on). Questions / things I'd like feedback on:. * Do the inputs and outputs of the current functions seem intuitive / sensible?; * What are the most important other features to support?; * I don't want to have too many functions, but I also don't necessarily want to cram all possible kinds of measurements into one function. Any thoughts on how to split these up?; * What other unit tests should I be writing?; * I haven't given any thought to performance yet. Anything egregious I should fix now or any important cases to optimize for?. General stylistic feedback welcomed too.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1090:563,avail,available,563,https://qutip.org,https://github.com/qutip/qutip/pull/1090,1,['avail'],['available']
Availability,"Hello, ; when trying to run the examples from the User Guides in the Bloch-Redfield master equation section; ( http://qutip.org/docs/4.0.2/guide/dynamics/dynamics-bloch-redfield.html ) I get an error . I'm running the code in a conda environment using ipython on Windows 10, the details of the packages installed at the end of the post. To reproduce the error:; ```; import numpy as np; import matplotlib.pyplot as plt; from qutip import *. delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; gamma1 = 0.5; H = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); def ohmic_spectrum(w):; 	if w == 0.0: # dephasing inducing noise; 		return gamma1; 	else: # relaxation inducing noise; 		return gamma1 / 2 * (w / (2 * np.pi)) * (w > 0.0). R, ekets = bloch_redfield_tensor(H, [sigmax()], [ohmic_spectrum]). np.real(R.full()). tlist = np.linspace(0, 15.0, 1000). psi0 = rand_ket(2). e_ops = [sigmax(), sigmay(), sigmaz()]. expt_list = bloch_redfield_solve(R, ekets, psi0, tlist, e_ops). sphere = Bloch(). sphere.add_points([expt_list[0], expt_list[1], expt_list[2]]). sphere.vector_color = ['r']. sphere.add_vectors(np.array([delta, 0, eps0]) / np.sqrt(delta ** 2 + eps0 ** 2)). sphere.make_sphere(). plt.show(). output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, [ohmic_spectrum]); ```. The code runs fine until the last line which gives the following response:; ```; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-1-79f7f2013969> in <module>; 35 plt.show(); 36; ---> 37 output = brmesolve(H, psi0, tlist, [sigmax()], e_ops, [ohmic_spectrum]). ~\Anaconda3\envs\qutip-env\lib\site-packages\qutip\bloch_redfield.py in brmesolve(H, psi0, tlist, a_ops, e_ops, c_ops, args, use_secular, sec_cutoff, tol, spectra_cb, options, progress_bar, _safe_mode, verbose); 196; 197 if _safe_mode:; --> 198 _solver_safety_check(H, psi0, a_ops+c_ops, e_ops, args); 199; 200 # check for type (if any) of time-dependent inputs. ~\Anaconda3\envs\qu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223:194,error,error,194,https://qutip.org,https://github.com/qutip/qutip/issues/1223,2,['error'],['error']
Availability,"Hello, I read the '; Lecture 7 - Symbolic quantum mechanics using SymPsi - Semiclassical equations of motion' and re-run it's codes but I receive error in following line:. ---. ops, op_eqm, sc_eqm, sc_ode, ofm, oim = semi_classical_eqm(H, c_ops). ---. ValueError Traceback (most recent call last); <ipython-input-13-e7aaa32c59a9> in <module>(); ----> 1 ops, op_eqm, sc_eqm, sc_ode, ofm, oim = semi_classical_eqm(H, c_ops). ValueError: too many values to unpack. ---. what is this error?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/504:146,error,error,146,https://qutip.org,https://github.com/qutip/qutip/issues/504,2,['error'],['error']
Availability,"Hello, i discovered an error in the implementation of the QFT. Namely when i want to obtain the gate sequence. The is when tha code runs this . if swapping is True:; for i in range(N // 2):; qc.add_gate(r""SWAP"", targets=[i], controls=[N - 1 - i, i]). it gives an error because the swap gate needs two targets and it is only passing one. Here is a test code. qft.qft_gate_sequence(N=2)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/688:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/688,2,['error'],['error']
Availability,"Hello,. I have a time dependent hamiltionian with a simple polynomial function, whose gradient I find using Numpy's gradient function. I also specify the step size that the gradient function should use. However, when passing the function and its gradient to Qutips mesolve function, i get the error:. ValueError: Shape of array too small to calculate a numerical gradient, at least (edge_order + 1) elements are required. I think this is because usually you would pass the whole array of time which Numpy would calculate the gradient of, but in the case of mesolve in qutip, we are passing a float instead of an array, i.e. calculating 1 time point which numpy cannot use.; I need the gradient function and its step size, rather than using the analytical gradient as a simply function due to the simulations I am trying to make. I would appreciate any and all insight into this problem, thank you. ```python; import scipy as sp; import numpy; from qutip import *; import matplotlib.pyplot as plt. # pre define transport functions (time dependent functions for use in hamiltonian); def q_c(t,t_f,d): #position of ion; return d*(10*(t/t_f)**3 - 15*(t/t_f)**4 + 6*(t/t_f)**5). def grad_q_c(t,t_f,step,d): #velocity; return np.gradient(q_c(t,t_f,d),step). def grad2_q_c(t,t_f,step,d): #acceleration; return np.gradient(grad_q_c(t,t_f,step,d),step). def q_0(t,args): #position of trap (harmonic well); '''; t: time step; t_f: final time (total time); step: step size for gradient function; d: total distance of transport'''; t_f,step,d = args['t_f'],args['step'],args['d']; return grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d). def q_02(t,args): #position of trap; t_f,step,d = args['t_f'],args['step'],args['d']; return (grad2_q_c(t,t_f,step,d)/(w_z**2) + q_c(t,t_f,d))**2. # set up initial conditions and parameters for ion; N = 200 # hilbert space dimension ; w = 2 * pi * 200e3 # angulr frequency of oscillator (Hz); m = 171 * 1.66e-27 # mass of ion (kg); hbar = 1 # reduced plancks constant (eVs) . ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1834:293,error,error,293,https://qutip.org,https://github.com/qutip/qutip/issues/1834,1,['error'],['error']
Availability,"Hello,. There is currently a circular function call in the tensor produce part of `qeye()` - the list comprehension calls `identity()` for each element of the space, which is just a pass-through back to `qeye()`, rather than explicitly recursing. I've just made the recursion explicit. Also, as it stands, the ""list of ints"" argument will accept arbitrarily-nested lists of integers, and silently flatten it out. Is it worth adding an error check to catch what is (presumably) user error?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1157:435,error,error,435,https://qutip.org,https://github.com/qutip/qutip/pull/1157,2,['error'],['error']
Availability,"Hello,; I noticed that vector_to_operator stopped working after updating to 4.5. Simple code that gives error:. ```; import qutip as qu. def zero_state_qutip(nb_qubits):; zero=qu.basis(2,0); if nb_qubits>1:; for i in range(1,nb_qubits):; zero=qu.tensor(zero,qu.basis(2,0)); return zero. nb_qubits=4. Psi=zero_state_qutip(nb_qubits). V=qu.vector_to_operator(Psi); ```. The code works fine with nb_qubits=2, but not with 4, 6 etc. The error is:. File ""qutip\superoperator.py"", line 279, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T. File ""qutip\sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]). File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape. Exception: Total size of array must be unchanged.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204:104,error,error,104,https://qutip.org,https://github.com/qutip/qutip/issues/1204,2,['error'],['error']
Availability,"Hello. As qutip is new to me, I'am not shure if there is a real problem or if it is just poor understanding. Well, here is my issue:; I'd like to get the the final state after solving some unitary time evolution with `mesolve`. The input state is a tensor product of three Fock states.; `psi0 = tensor(basis(N+1,0), basis(N+1,0), basis(N+1,N))`. Then I do the evolution like this:; `H = tensor(a, b, c.dag() * c.dag()) - tensor(a.dag(), b.dag(), c * c)`; Operators a,b and c are defined as `destroy(N+1)`.; `times = np.linspace(0.0, 2.0, 100.0)`; `opts = Options(store_states=False, store_final_state=True)`; `result = mesolve(H, psi0, times, [], [numAop,numBop,numCop], options=opts)`. Now I observe different dimension of input and output state:; `print(psi0.dims, psi0.shape)`; `print(result.final_state.dims, result.final_state.shape)`; gives:; [[41, 41, 41], [1, 1, 1]] [68921, 1]; [[68921], [1]] [68921, 1]; So somehow the dimension structure is lost. The results for the expectation values of the number operators look reliable. So I guess that the time evolution itself worked fine.; Kind regards; Fabian",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/480:1026,reliab,reliable,1026,https://qutip.org,https://github.com/qutip/qutip/issues/480,1,['reliab'],['reliable']
Availability,"Hello. I am currently running a simulation with `mesolve` (yet the same error occurs with `sesolve`) with a slow perturbation, such that close to zero the Hamiltonian is very close to zero (the perturbation is a thin Gaussian distribution). When I run `mesolve`, instead of running my time-dependent coefficients for the values in `tlist` (where in this case I had 250 times in `tlist`), **QuTiP** uses about 20 seemingly random time values, some of which are not even in `tlist`. . I believe this error is stemming from the Hamiltonian changing extremely slowly and being close to zero for a long period of time. This is because **QuTiP** began working normally when I added the constant 0.00001 to my time-dependent coefficient. Is there a bug here, or is there something I am missing about small-frame limits of the software?. An example piece of code that reproduces this error is below.; ```python; import numpy as np; import qutip as qt. def StandardGaussianPi(t):; def gauss_distr(x, sigma, mu):; return np.exp(-((x - mu)/sigma)**2 / 2) / (sigma * np.sqrt(2 * np.pi)); return np.pi * gauss_distr(t, 2, 20). def run_experiment(waveform, tlist, a):; def coeff_1(t, args):; print(t); return -1/2 * waveform(t) * -1; coeff_2 = lambda t, args: coeff_1(t, args) * np.sqrt(2) * np.cos(a * t); coeff_3 = lambda t, args: coeff_1(t, args) * np.sqrt(2) * np.sin(a * t); hamiltonian = [[gm(1), coeff_1], [gm(6), coeff_2], [gm(7), coeff_3]]; initial_state = qt.basis(3, 0); e_ops = [gm(1), gm(2), gm(3)]; return qt.mesolve(hamiltonian, initial_state, tlist, None, e_ops).expect. run_experiment(StandardGaussianPi, np.linspace(0, 40, 250), -0.2); ```; The function `gm` was used to generate matrices. These matrices come from:; ```python; gell_mann = [[], [], [], [], [], [], [], []]. gell_mann[0] = np.array([[1, 0, 0], [0, 1, 0], [0, 0, 1]]) / np.sqrt(2 / 3); gell_mann[1] = np.array([[0, 1, 0], [1, 0, 0], [0, 0, 0]]); gell_mann[2] = np.array([[0, -1j, 0], [1j, 0, 0], [0, 0, 0]]); gell_mann[3] = np.array",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1638:72,error,error,72,https://qutip.org,https://github.com/qutip/qutip/issues/1638,3,['error'],['error']
Availability,"Hello. I'm working on a qutrit system (spin 1). Eventually need to do some pulse optimization but for testing I tried to propagate using a very simple Hamiltonian, namely just Sz^2 with D=2000. ; Units are µs for time (so MHz for frequency). . versions used:; ```python; matplotlib.pylab 1.16.4; qutip 4.4.1; matplotlib 3.1.1; numpy 1.16.4; scipy 1.3.1; CPython 3.7.3; IPython 7.5.0; ```. I solve with sesolve or mesolve with (|+. 1> + |0>)/sqrt(2) as initial state.; **expected:** quite trivially, population should stay 1/2 for any t for |+1> and |0>, 0 for |-1>; **result:** population of |+1> goes down linearly and |0> goes up ; a few observations: ; - if I make the coefficient of Sz^2 smaller, the population diverges less ; - with less time steps but same overall propagation time, I see the divergence less obviously because I see the beginning of it; - I am aware one can somehow optimize the number of time steps but this is about the convenient settings for the next steps for me; - I was thinking of increasing floating point precision or something like that but wasn't able to find a simple way to do that in the docs. it does not seem like having a coefficient on the order of 10000 or 10^5 time steps is that unreasonable, does it ?; anyway, this is about the right, convenient choice of unit for us here. any idea what's wrong ?. ```python; %load_ext watermark; import numpy as np; import scipy; import matplotlib; import matplotlib.pylab as plt; import qutip; %watermark -v --iversions; %matplotlib qt. #Spin 1 operators; S1_x = 1/np.sqrt(2)*qutip.Qobj([[0,1.,0],; [1.,0,1.],; [0,1.,0]]). S1_y = 1.j/np.sqrt(2)*qutip.Qobj([[0,-1.,0],; [1.,0,-1.],; [0,1.,0]]). S1_z = qutip.qdiags([1.,0,-1.], 0). #canonical basis with corresponding projectors; canon_100 = qutip.basis(3,0) #ket |+1>; canon_010 = qutip.basis(3,1) #ket |0>; canon_001 = qutip.basis(3,2) #ket |-1>. proj100 = qutip.ket2dm(canon_100); proj010 = qutip.ket2dm(canon_010); proj001 = qutip.ket2dm(canon_001). #Hamiltonian pa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085:602,down,down,602,https://qutip.org,https://github.com/qutip/qutip/issues/1085,1,['down'],['down']
Availability,"Here's a code that reproduces the error for me (taken from an earlier GitHub issue for qutip):; import qutip as q. ```; import qutip as q; #consider two coupled spin L and S; Lval = 1; Sval = 0.5. [Lx,Ly,Lz] = map(lambda x: q.tensor(x, q.qeye(2*Sval+1)),q.jmat(Lval)); [Sx,Sy,Sz] = map(lambda x: q.tensor(q.qeye(2*Lval+1), x),q.jmat(Sval)). Jx = Lx + Sx; Jy = Ly + Sy; Jz = Lz + Sz. Lsq = Lx*Lx + Ly*Ly + Lz*Lz; Ssq = Sx*Sx + Sy*Sy + Sz*Sz; Jsq = Jx*Jx + Jy*Jy + Jz*Jz. q.simdiag([Lsq,Ssq,Jsq,Jz]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1067#issuecomment-519446924:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/issues/1067#issuecomment-519446924,1,['error'],['error']
Availability,"Hey @lzawbrito, ; I tried to reproduce your error on a Linux (Ubuntu) machine. I installed your exact environment (all versions equal) and your provided code runs without a problem. Also the notebook you refer to does not give an error. So it seems to me that it is a problem with macOS. . Did you try to increase `nsteps`? You can do so by adding an option to the `mesolve()` function: . `output = mesolve(H, psi0, tlist, c_ops, e_ops, options=Options(nsteps=1000))`; Note that `1000` is the standard value for `nsteps`, so you should increase it furhter.; Let me know if increasing `nsteps` works!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1138780441:44,error,error,44,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1138780441,2,['error'],['error']
Availability,"Hey, thanks for the workaround with pinning scipy. How long does it typically take for a qutip version to show up on conda-forge after it is already released by you folks and made available on pypi?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2383#issuecomment-2045143602:180,avail,available,180,https://qutip.org,https://github.com/qutip/qutip/pull/2383#issuecomment-2045143602,1,['avail'],['available']
Availability,"Hey,; Thanks! Since test did not continue after this point, I am not sure whether to continue to use the qutip. Is there any way to bypass these kind of errors and continue the test?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-531466956:153,error,errors,153,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531466956,1,['error'],['errors']
Availability,"Hi @ALasek . You are right, there is a bug in the error handling.; ```; File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 2114, in initialize; raise ValueError(""dimension of state is incorrect""); ```; This check is wrong. It assumes that the state is a qubits state. Our test didn't cover the `run` method with multi-level systems. Here are the ways around:; - If you know how to hack the package, you can simply find the file and delete this error handling (lines 2113 and 2114).; - If you don't know how to do that, you can also use; ```; gate_sequence_product(qc.propagators()); ```; to compute the unitary representation of the circuit first and then apply it to the input state. I'll make a bug fix soon. But the next release may still take a while. Using `QubitCirucuit` for qutrits and qudits should be fine, it is rarely used though. So there might be bugs that are uncovered by our test. If you encounter any further questions, feel free to ask!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1039660650:50,error,error,50,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1039660650,4,['error'],['error']
Availability,"Hi @BoxiLi . If I mix dimensions like that, I can add the gates, but I get an error about wrong dimensions when trying to run the circuit:. `psi_final_Q=qc.run(state=psi_zero)`. ```; Traceback (most recent call last):. File ""C:\Users\OlekAdmin\Documents\GitHub\NATS\ManojExperiment\Huse\David\RUC_David_comm.py"", line 461, in <module>; psi_final=qc.run(state=psi_zero). File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 1182, in run; sim = CircuitSimulator(self, state, cbits, U_list, measure_results,. File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 2004, in __init__; self.initialize(state, cbits, measure_results). File ""C:\Users\OlekAdmin\anaconda3\lib\site-packages\qutip\qip\circuit.py"", line 2114, in initialize; raise ValueError(""dimension of state is incorrect""). ValueError: dimension of state is incorrect; ```. PS This all works fine when state dimension is 2 instead of 4. PPS I can sidestep this error by manually constructing my 2-qudit gate as a 3-qudit (N-qudit in general) operator by tensoring it with the appropriate identity, and then applying this operator on my initial ket, but I'm afraid I'm losing a lot of efficiency by not using the quantum circuit functionality.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1803#issuecomment-1039340372:78,error,error,78,https://qutip.org,https://github.com/qutip/qutip/issues/1803#issuecomment-1039340372,2,['error'],['error']
Availability,"Hi @Canoming, thanks for spotting this error and fixing it. I'm surprised that this error is hidden here for so long. There is still a flaw in the option for `remove=""all""`. When you remove the first element in a list, the rest elements will move forward and eventually leads to an index out of range error.; For example, if you have a list ``gates = [a, b, c]`` and use ``gates.pop(0)``. ; The list will become; ```; >>> gates; [b, c]; ```; if you now iterate to ``i=1``, you skip element `b`; This can be solved by iterating in the inverse order.; ```; elif name is not None and remove == ""all"":; for i in reverse(range(len(self.gates))):; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1242#issuecomment-622091888:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/1242#issuecomment-622091888,3,['error'],['error']
Availability,"Hi @DnMGalan totally forgot this was up!. I think the main code has been iterated on a few times, but can still be improved. Maybe (1) was done already (I think... ). However (2) and (3) are still open. On (2) as a complementary thing, I recently tried the method in appendix A of this paper for calculating finite time moments and cumulants and stuff https://arxiv.org/abs/1012.0750 It works very nicely. . Interestingly, we can also do it a different way with autograd in Jax, taking derivatives of the whole generating function equation of motion directly. also seemed to work pretty well (seemed a little more efficient). I have some basic notebooks of both of these things, can share with you, and we can think about making it generic and robust. (3) I am a little rusty on, we can discuss about it next week. (christian flindt is also visiting, so we can grill him about it!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/442#issuecomment-2005373020:744,robust,robust,744,https://qutip.org,https://github.com/qutip/qutip/issues/442#issuecomment-2005373020,1,['robust'],['robust']
Availability,"Hi @Ericgig , could you be a little more specific about what reworking the kwargs treatment would entail? Also if you could emphasize more concretely what you're looking for in updates to the notebooks and docs, that would be great. I do have some other observations.; 1. I do not get the KeyError message if I run the same jupyter notebook locally with the same versions of code as specified by version_table( ). I get another error instead, which actually seems more reasonable to me (something along the lines of 'use_precond' wasn't found in the keys of the dict, which clearly indicates that there's something off with the optional args thing).; 2. Also using mech_dms = np.asarray(mech_dms) fails, I think because it sees a Qobj instead of a real number.; 3. The direct patch to the KeyError mentioned above, based on my understanding of the code, would simply be to nest the assignment to 'max_iter_refine' in the 'info' dictionary inside a condition that checks if the solver is 'scipy'?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676:428,error,error,428,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-539805676,2,['error'],['error']
Availability,"Hi @Ericgig . I've ran the tests from the FreeBSD port's directory, and the errors above are what was printed. Yuri",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190#issuecomment-1622099822:76,error,errors,76,https://qutip.org,https://github.com/qutip/qutip/issues/2190#issuecomment-1622099822,1,['error'],['errors']
Availability,"Hi @Ericgig, @AFvanloo, and @nwlambert, this bug has become more interested. Thanks for all the comments and suggestions. I will be busy this week, but I will dive down into the functions and propose a good solution during the weekend. It looks that the solution @nwlambert is proposing is the best one but I want to check if there is something else to do here. . Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1808#issuecomment-1149861067:164,down,down,164,https://qutip.org,https://github.com/qutip/qutip/issues/1808#issuecomment-1149861067,1,['down'],['down']
Availability,"Hi @Ericgig, thank you for your feedback. I have already implemented the changes. To correct the error when plotting points with style 'l' I have made the script only sort the points when styles 'm' and 's' are specified as it was in V4.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2308#issuecomment-1911930396:97,error,error,97,https://qutip.org,https://github.com/qutip/qutip/pull/2308#issuecomment-1911930396,2,['error'],['error']
Availability,"Hi @MrRobot2211,. indeed that project is still open, see https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2021#1-error-mitigation-in-qutip. However, compared to last year, the workload is reduced because this year GSoC reduces the required working time (now 175h in total). If you are interested in the part that is removed (e.g. concrete physical model), you are still welcome to draft a proposal according to your interest. It does not have to follow exactly the ideas proposed on the wiki page as long as it is a self-contained project and related to QuTiP. @nathanshammah in case he has comments.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1457#issuecomment-792274551:122,error,error-mitigation-in-qutip,122,https://qutip.org,https://github.com/qutip/qutip/issues/1457#issuecomment-792274551,1,['error'],['error-mitigation-in-qutip']
Availability,"Hi @Phenix00 ,. I don't know if you already managed to do the pip install, but I got the same errors as you and sahmed95 mentioned before. In my case, as I run my programs on a cluster in a Linux environment, where I don't have admin rights (e.g. I cannot use sudo commands), I had to use the --user option. ; So ""pip install --user qutip"" worked for me when the mentioned requirements have been installed met.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-337538079:94,error,errors,94,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-337538079,1,['error'],['errors']
Availability,"Hi @Phenix00, I could reproduce the issue and this looks like an issue of pip messing up the dependencies in the requirements for QuTiP. The workaround is to install numpy, cython and scipy manually before running pip install qutip. Please let me know if this works. Also, I am assuming the complete error message that you got was something like the error message below. Thank you for bringing this to notice.; ```; (qtest) air:qtest shahnawaz$ pip install qutip; Collecting qutip; Downloading qutip-4.1.0.tar.gz (1.9MB); 100% |████████████████████████████████| 1.9MB 523kB/s; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/private/var/folders/yp/zkfwkv252nl6jtzqy2_tt88m0000gn/T/pip-build-7Mg7bn/qutip/setup.py"", line 54, in <module>; from Cython.Build import cythonize; ImportError: No module named Cython.Build. ----------------------------------------; Command ""python setup.py egg_info"" failed with error code 1 in /private/var/folders/yp/zkfwkv252nl6jtzqy2_tt88m0000gn/T/pip-build-7Mg7bn/qutip/; ```; @ajgpitch ; I am looking into why this is happening and how it can be resolved. Relevant issues - https://github.com/h5py/h5py/issues/535, https://github.com/bayespy/bayespy/issues/14, https://github.com/pypa/pip/issues/988",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-321727923:300,error,error,300,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-321727923,4,"['Down', 'error']","['Downloading', 'error']"
Availability,"Hi @TakumiAizawa, yes in a future QuTiP release this will be fixed. If you need to use this right now, I would recommend downloading the code from GitHub and install from source code. http://qutip.org/docs/latest/installation.html#installing-from-source",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1244#issuecomment-623071030:121,down,downloading,121,https://qutip.org,https://github.com/qutip/qutip/issues/1244#issuecomment-623071030,1,['down'],['downloading']
Availability,"Hi @VolodyaCO, thanks for reporting this!; I think the reason for `tlist` being overridden is because the result will be independent of `tlist` when the input is a steady-state. This can be seen in the following equations:; ![image](https://user-images.githubusercontent.com/57414022/121327018-5d313680-c913-11eb-9760-ca6004daca18.png); where rho is the initial state (`state0`) and H is the Hamiltonian of the system. I use the fact that rho is a steady-state to remove its temporal dependence. This derivation is simplified assuming unitary evolution (no collapse operators) but the same applies in the most general case where we include the collapse operators. This is my guess on why `tlist=[0]` is employed when using `state0=None`: the result does not depend on `tlist`. Hence, this is probably not a bug as the result should be mathematically correct. That being said, I would also expect the same output shape for the cases shown above unless explicitly mentioned in the docstring of the function. Thus, I think the way to go here is to document this behaviour in the docstring (as well as removing the t appearing in correlation_..._1t docstring) as any change in the output shape will break backwards compatibility. However, it may be worth considering whether this is the intended behaviour for QuTiP 5. I would suggest removing `state0=None` as possible input for simplicity in the maintenance and testing or at least I would make the example shown by @VolodyaCO to be consistent and have the same output. Let us see what the QuTiP admin team thinks :smile:",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1566#issuecomment-857532355:1394,mainten,maintenance,1394,https://qutip.org,https://github.com/qutip/qutip/issues/1566#issuecomment-857532355,2,['mainten'],['maintenance']
Availability,"Hi @christian512, thanks for the help! I've increased `nsteps` for that particular simulation and the integration runs fine without any errors. One caveat is I have not checked the correctness of the result. . On the other hand, as soon as I tried `mesolve` on a simple Larmor precession problem, `mesolve` started either (1) throwing the typical ODE integration error or (2) integrating but producing a manifestly incorrect result (the final state is not on the Bloch sphere). The code I am using is ; ```; from qutip import * ; import numpy as np. sz = sigmaz(). init_ket = 2 ** (-1/2) * Qobj([[1], [1]]) # Bloch vector is unit x; init_dm = init_ket * init_ket.dag(). b_0 = 1; gam = 1; h_zeem = gam * b_0 * sz; h = [h_zeem]. larmor_freq = gam * b_0 ; period = 2 * np.pi / (larmor_freq); t = np.linspace(0, period / 2, 100). print(mesolve(h, init_dm, t, options=Options(nsteps=1e6)).states[-1]); ```. Which produces ; ```; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[ 0.5 +0.j -263.5988765-267.24047092j]; [ -2.1425229 +0.49907152j 0.5 +0.j ]]; ```; Edit: I have also tried playing around with `atol` and `rtol` without any success.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896#issuecomment-1140305503:136,error,errors,136,https://qutip.org,https://github.com/qutip/qutip/issues/1896#issuecomment-1140305503,4,['error'],"['error', 'errors']"
Availability,"Hi @jakelishman do you have any further doubts about the issues with scipy 1.4 `linallg.eigenh() API` ? To me it is clear that we have to deprecate support for it, as any code that relies on calculating eigenvalues for large matrices has this MKL error, which it often does not show, and instead of terminating returns an incorrect numeric value. This affects not just this code but any possible high dimensional calculation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-818701546:247,error,error,247,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-818701546,2,['error'],['error']
Availability,"Hi @nathanshammah ,. Indeed you are right, but I was concerned that with large Hilbert spaces as in my case storing the individual states at all measuring times would be simply unaffordable. That is why I was wondering if mcsolve could provide not only averaged observables but also the associated statistical errors. I hope this clarifies my problem. Thanks for the example too!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1032#issuecomment-533216900:310,error,errors,310,https://qutip.org,https://github.com/qutip/qutip/issues/1032#issuecomment-533216900,2,['error'],['errors']
Availability,"Hi @nathanshammah,. Could this issue perhaps be broken into sub-tasks in some way, perhaps, in order to enable work starting on it a bit more feasible?. Also, I can see it's been labelled as a ""good first issue"" but it seems to me the definition of done (i.e., what would a PR - or a set of PRs - that would successfully address the problem entail?), with respect to the entire issue, could be clarified a bit further, and the breakdown into sub-tasks (which itself might result organically from some further discussion) might help a bit in that direction. Regarding possible approaches for handling randomness - I have to admit I've started looking into QuTiP only very recently, and I'm yet to start familiarising myself with its more intricate details and get to run the full set of tests, and investigate what kind of test failures occur. In the meantime, I'll generally share some (what I _think_ is) relevant experience in the context of handling randomness in tests:; - My understanding is that we're talking about not testing the behaviour of random-number generations per se, but how the numbers they generate affect the non-deterministic functions/algorithms, which depend on the former. In such cases, I've either used a fixed seed (as you've mentioned in your [original post](https://github.com/qutip/qutip/issues/1268#issue-619006856)), which can get a bit messy, as there's Python's `random`, NumPy's `random` (which also comes in a legacy and a modern flavour, namely `numpy.random.RandomState` and `numpy.random.Generator`). Also, as you've mentioned, there's tight coupling between the implementation logic and the corresponding set of tests, and updates in the former require constant maintenance of the latter.; - As an alternative, I've sometimes resorted to [`mock`](https://docs.python.org/3/library/unittest.mock.html)ing the random-number generation process itself, and - in a way equivalent to using a fixed seed - providing a pre-defined sequence of numbers to the functions ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707:827,failure,failures,827,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-1123679707,2,['failure'],['failures']
Availability,"Hi @nonhermitian, I spent some time struggling with this as I recently shifted to macOS. This problem affects other Python installations too. I found a solution to this and if you could update it in the docs instead of the default macOS installation script, then it would be very helpful for new users. I will post the solution first and explain it below. . 1. Install a manual Python version which overrides the default Python supplied by Apple in the `usr/bin/python` path. You can check this using ```which python```. Installing using brew - . ```brew install python```. 2. Change the default Python interpreter from the one supplied by macOS in `usr/bin/python` to the user installed version in `/usr/local/bin/python`. This is explained in this [post](http://blog.manbolo.com/2014/09/27/use-python-effectively-on-os-x#p1). Edit the file `/etc/paths` using ```sudo vi etc/paths``` and move the line `/usr/local/bin` to the top. This makes the user installed Python default and the packages installed by pip or brew are imported instead of the ones supplied by apple. Restart the terminal. You may need to update numpy and scipy using ```pip install numpy``` or ```pip install numpy -U```. 3. Install qutip using ```python setup.py install```. Apple has its own Python version and a few modules such as numpy and scipy come along with it which are at `/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/include/python2.7`. These modules are difficult to manage and update due to issues with permission. Hence, even if you update numpy or scipy using `pip` or `brew`, it is not detected by Python. ~~This also raises an issue later `error: could not create 'build/src.macosx-10.12-x86_64-2.7': Permission denied`~~. This solution seems better since it does not mess with the system default. Edit 1 : sudo -H is needed to install using ```sudo -H python setup.py install```. The -H tag sets the home directory as the default for installing configuration files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-263745214:1657,error,error,1657,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263745214,1,['error'],['error']
Availability,"Hi @pschindler, thanks for reporting this! Although the eigenenstates are different for both cases (`sparse=True` and `sparse=False`) I believe that they are both equally valid since the operator has degenerated eigenvalues. The approach for the computation of the eigenstates for both `sparse=True ` and `sparse=False` is different so that may explain why you see different results. For the case that @Ericgig presented though, the eigenvalues are non-degenerated. I tracked down the issue and it is related to how we compute these eigenvalues. When we ask for all the eigenvalues what we actually do is to compute the smallest half in with one method (`scipy.sparse.linalg(which='LR')`) and the largest half with a different method (`scipy.sparse.linalg(which='SR')`). Smallest half and largest half here means relative to the _real_ part of the eigenvalue. This makes complete sense for the cases where the eigenvalues are real but unfortunately not so much sense when we only care about the imaginary part. This is what the `which` is doing, is selecting the values with smallest/largest real part. If we include a small real component the bug completely disappears:; ```; In [56]: (qutip.num(4)*(1j+0.00001)).eigenenergies(sparse=True); Out[56]:; array([1.23048985e-16-2.21177095e-16j, 1.00000000e-05+1.00000000e+00j,; 2.00000000e-05+2.00000000e+00j, 3.00000000e-05+3.00000000e+00j]); ```; Because now there is a real part to use in the ordering. The behavior of `eigenstates` is definitely wrong and one way of solving it would be to not use both `LR` and `SR` options when all the eigenvalues are required and instead chose internally just one. This would still return results ordered by their real part but at least all the eigenvalues would be present (only once). We may want to extend the behavior of `eigenstates` to not only accept `sort=low` and `sort=high` and instead have a similar behavior to the one provided by scipy and allow sorting by imaginary part or absolute value.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1416862009:476,down,down,476,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1416862009,1,['down'],['down']
Availability,"Hi @pschindler,. Indeed, the behavior you show is a bug in qutip 4.7.0. Thanks for reporting this! However, it is actually a bug in the `sparse=True` case. The scipy case gives a different result compared to qutip sparse because of the method used. `eigh` assumes the input is hermitian but `op` is not. You can see the correct eigenvalues using:; ```; In [7]: scipy.linalg.eigvals(op.full()); Out[7]:; array([-1. -2.22044605e-16j, -0.5+8.66025404e-01j, -0.5-8.66025404e-01j,; 0.5+8.66025404e-01j, 0.5-8.66025404e-01j, 1. +0.00000000e+00j]); ```. I am genuinely surprised that the `sparse=False` is bugged in the latest version of qutip. Fortunately, I tested this in the master branch of qutip (this contains the qutip 5.0.0 alpha version) and the bug seems to be solved there. This operator is indeed subjected to the same bug Eric shows (it is non-hermitian). However, due to the real part of the eigenvalues, it actually shows the correct answer (similar to the example I showed in my previous comment). I will try to find the source of the error but it seems very likely that we incorrectly label the operator as hermitian and hence uses the wrong method to find eigenvalues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1998#issuecomment-1419816348:1045,error,error,1045,https://qutip.org,https://github.com/qutip/qutip/issues/1998#issuecomment-1419816348,1,['error'],['error']
Availability,"Hi @sahmed95, thanks a lot for your many suggestions on improving this module! I'll respond to each of your individual suggestions, but here is a summary of the ones worth discussing. > Changing QObj to :class: qutip.Qobj; line spacings; ""[[t1]_wg1]"" changes. I will make these changes. See the `temporal_basis_vector` comment for discussion on changing nested list to dictionary. > Things not covered by tests. I'll add tests for these or remove the functionalities (for example, `count_filled()` is never used and is just a debugging function I made while developing this module). > Lots of minor suggestions to comply with PEP8. I will make most of these changes. Some of the errors, such as the 80>79 errors and spaces around kwarg equals, were not shown as problematic using PyCharm's PEP8 linter with default inspection profile - can you provide steps to reproduce? However, I think that some bits that PEP8 classifies as problematic shouldn't be changed for notational consistency, such as H = hamiltonian, and my usage of T and W in the code and the notebook to denote number of time bins and waveguides. > Moving `__all__` to after import statements. I declared `__all__` in its current location because almost universally, all (heh) top-level qutip modules declare it before imports. (I actually checked about a dozen of these and can't find any instance of it being after imports.) I think this might be worth changing to comply with PEP8, but I think it should be done after the module is added in a separate commit where all occurrences of this are changed across QuTiP. > Shortening argument / function names. I'll respond to each proposed change individually, but in general I disagree with most of these proposed changes since I think they reduce conceptual clarity. (For example, `temporal_basis_vector` returns a specific vector in the temporal basis; I would expect a function named `temporal_basis` to return an enumeration of all basis vectors.) However, I will try to think of sh",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/848#issuecomment-384821368:679,error,errors,679,https://qutip.org,https://github.com/qutip/qutip/pull/848#issuecomment-384821368,2,['error'],['errors']
Availability,"Hi @saiyagami , your errors seem to be centered around OpenMP and parallelization stuff. It seems from the red underlined error that you do not have OpenMP installed, which shouldn't be the case since it is bundled with the Visual C/C++ compiler by default. I'd recommend you try the following, in this order:; 1. Try running the install again using the cloned repository's `setup.py` file, but this time run it as `python setup.py install --with-openmp`. Hopefully this configures things properly, and you don't see any more OpenMP related errors.; 2. If the above doesn't work, that suggests a more pathological error, in which case you probably should try using another compiler such as MinGW. Should you do so, please find more detailed instructions here : [https://stackoverflow.com/questions/11079586/getting-started-with-openmp-install-on-windows](url).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401:21,error,errors,21,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-539862401,4,['error'],"['error', 'errors']"
Availability,"Hi @sarsid I am having trouble reproducing this issue. When I copied above code, I get `<qutip.qip.circuit.QubitCircuit object at 0x7fe142c414f0>` and not the `value` error referenced by you. Is there something else I should be doing ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-806265083:167,error,error,167,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-806265083,1,['error'],['error']
Availability,"Hi @tehruhn, I also have the error but it does not appear when using jupyter so I missed it. The error comes from a line inside a `try` block, so I am not sure why it is not properly suppressed... I did touch much in that area so it should be a simple fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109#issuecomment-542708686:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/issues/1109#issuecomment-542708686,4,['error'],['error']
Availability,"Hi @tehruhn, Openmp is not needed to run Qutip in parrallel. We are using the module multiprocessing. ; The 4.4.0 error is an error on my part. The 4.4.1 error seems to comes from temp files being erased too quickly for windows version of multiprocessing. ; multiprocessing does not use shared memory and reload all libraries from the files. string based coefficient are written to file as importable libraries and imported at runtime. In 4.4.1 once imported the file is immediately erased. Work file on linux, but I believe this is the cause of the error on windows. My PR #1082 keep the files until the object using it is no longer used, I am hoping this solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079#issuecomment-540029251:114,error,error,114,https://qutip.org,https://github.com/qutip/qutip/issues/1079#issuecomment-540029251,4,['error'],['error']
Availability,"Hi @tehruhn.; The call to steadystate take different kwargs depending on whether scipy of mkl is solved. It make an error if you give it a keyword not belonging to the right solver. I believe it should be better to accept all keyword and ignore the unused one. If you want to rework it, I would suggest to set the most stable solver/method as a default. I heard the default method sometime fails (#1077). . 2. Since a few version back, when we added a `__array__` method to Qobj. We need to do `np.asarray(mech_dms, dtype=object)`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017#issuecomment-540010694:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/issues/1017#issuecomment-540010694,1,['error'],['error']
Availability,"Hi @yuli139304,. I can't really make out from the code you have written what you are trying to achieve -- it simply looks like you are using numpy and Qobj incorrectly. Could you type out in terms of Sx_nv, ... and D_xx, ... what you want using simple arithmetic? E.g. maybe you want `D_xx * Sx_nv + D_yy * Sy_nv + D_zz * Sz_nv` (which just works as is)?. Then once you have the simple expression written down, you can make it fancier (e.g. use np.dot, etc) if you need to. I'm going to close this for now because this doesn't look like a QuTiP bug, but feel free to ask more questions, either here or preferably on the mailing list.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1848#issuecomment-1093459741:405,down,down,405,https://qutip.org,https://github.com/qutip/qutip/issues/1848#issuecomment-1093459741,2,['down'],['down']
Availability,Hi @yurivict. Could you give more detail?; I can't reproduce the issue and the error messages are not enough to understand what is happening.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2190#issuecomment-1622081465:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/issues/2190#issuecomment-1622081465,1,['error'],['error']
Availability,"Hi All; I get the same error when attempting to run the qutip tutorial ; ""Bloch sphere with colorbar"". from the qutip tutorials with a virgin install of qutip from the conda-forge on Python 3.7.6 using the latest version of Anaconda..in a new environment. Whats up?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196#issuecomment-599356968:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-599356968,1,['error'],['error']
Availability,"Hi Anna, thank you for replying can you please give some more information about which particular part/s of the user guides you are finding these errors?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1759#issuecomment-1104512322:145,error,errors,145,https://qutip.org,https://github.com/qutip/qutip/issues/1759#issuecomment-1104512322,2,['error'],['errors']
Availability,"Hi Anto, ; Could you please leave the issue for a GSoC candidate. There are no error raised but looking are the equations, something looks wrong. For example:; For positive `m`: `SPlm[1]`, but the equivalent term for negative values: `SPlm[abs(m)]`. So when adding the tests, I expect that some fixes will be needed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1839#issuecomment-1079304653:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/issues/1839#issuecomment-1079304653,1,['error'],['error']
Availability,"Hi Boxi,. Can you please modify the projects of the Wiki page as you deem best?; All: we can also think of changing the order of them. It may be that; project #3 is deemed the most important. Best wishes,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Sun, Feb 23, 2020 at 5:42 AM Boxi Li <notifications@github.com> wrote:. > I have some detail information for the GSoC 2020 project ""Error mitigation; > in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub; > Wiki page. I post it here so if anyone finds it nice could copy it to the; > Wiki page.; >; > I add some details based on the original description:; > ------------------------------; > 1. Error mitigation in QuTiP; >; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class Processor and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > qutip.qip.noise to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (qutip.qip.circuit). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the; > Github Project page for a collection of related issues and ongoing Pull; > Request",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313:494,Error,Error,494,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590726313,2,['Error'],['Error']
Availability,"Hi Chester,. I'm not that familiar with matplotlib on Windows, but I'm guessing that; something has gone wrong with the event loop being used to render the; matplotlib figures (possibly QuTiP did something wrong or maybe something; else happened). Could you confirm that you're using the TkAgg matplotlib backend? You can; check with matplot.get_backend(). And are you using IPython or the ordinary; Python console?. Usually only:. b = qutip.Bloch(); b.show(). is required to display the plot. Behind the scenes .show() and; .make_sphere() both call .render(...). I suspect that the empty axes you; are seeing might be related to having rendered the sphere a few different; times. Could you start a new Python console and try:. import qutip; import matplotlib.pyplot as plt; b = qutip.Bloch(); b.render(); plt.show(). I'm hoping that will give you just the plot you are looking for (and so; give you a work around for now). The reason this might be slightly more; robust is that internally b.show() renders the sphere onto the existing; axes, which could possibly be related to the issue you are seeing. After; closing the plot window, running b.render() and plt.show() should display; the sphere again. If that fails, could you confirm that you can show any plots with; matplotlib?. You could also try updating to a more recent matplotlib, but let's perhaps; leave that as a last resort. Yours sincerely,; Simon Cross",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883192074:964,robust,robust,964,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883192074,1,['robust'],['robust']
Availability,"Hi Eric, . thanks for your eager response.; I'll let you know if I find any errors. Since you mentioned the equations in the code, I believe it would be interesting to add explicitly which equations are solved when the options `method=""homodyne""` and `method=""heterodyne""` are selected. Specifically, I would like to check what are the values of dW_factors in both cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706#issuecomment-962765705:76,error,errors,76,https://qutip.org,https://github.com/qutip/qutip/issues/1706#issuecomment-962765705,1,['error'],['errors']
Availability,"Hi Eric, thanks for your comment. > You should remove the options from `solver_options` instead. It contain every valid options keys, just removing the key from it would makes setting it an error. Unfortunately it is not so easy, since `MCSolver` relies on the option being present in `self.options`: https://github.com/qutip/qutip/blob/48df19ceeb1f07dd60659ccdc2fe61d8df159e78/qutip/solver/mcsolve.py#L474; We could try overriding every method of MCSolver that accesses this option, but that seems easy to break accidentally again with future changes in MCSolver. > Also I would suggest to overwrite the `options` property to add the `completeness_rtol`, etc. to it's docsting. Done.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2234#issuecomment-1750005892:190,error,error,190,https://qutip.org,https://github.com/qutip/qutip/pull/2234#issuecomment-1750005892,1,['error'],['error']
Availability,"Hi Eric,; I've created a draft PR request for the changes. I did try to generate documentation according to the steps mentioned in the wiki but am faced with the following error:; ```; make html; sphinx-build -b html -d _build/doctrees . _build/html; Running Sphinx v3.5.4. Configuration error:; There is a programmable error in your configuration file:. Traceback (most recent call last):; File ""__init__.pxd"", line 942, in numpy.import_array; RuntimeError: module compiled against API version 0x10 but this version of numpy is 0xf . Check the section C-API incompatibility at the Troubleshooting ImportError section at https://numpy.org/devdocs/user/troubleshooting-importerror.html#c-api-incompatibility for indications on how to solve this problem . During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""/home/User/miniconda3/envs/qutip-doc/lib/python3.8/site-packages/sphinx/config.py"", line 327, in eval_config_file; execfile_(filename, namespace); File ""/home/User/miniconda3/envs/qutip-doc/lib/python3.8/site-packages/sphinx/util/pycompat.py"", line 88, in execfile_; exec(code, _globals); File ""/home/User/Projects/QuantumStuff/qutip/doc/conf.py"", line 95, in <module>; _check_source_folder_and_imported_qutip_match(); File ""/home/User/Projects/QuantumStuff/qutip/doc/conf.py"", line 80, in _check_source_folder_and_imported_qutip_match; import qutip; File ""/home/User/Projects/QuantumStuff/qutip/qutip/__init__.py"", line 34, in <module>; from .core import *; File ""/home/User/Projects/QuantumStuff/qutip/qutip/core/__init__.py"", line 2, in <module>; from .coefficient import *; File ""/home/User/Projects/QuantumStuff/qutip/qutip/core/coefficient.py"", line 24, in <module>; from .data import Data; File ""/home/User/Projects/QuantumStuff/qutip/qutip/core/data/__init__.py"", line 3, in <module>; from . import dense, csr; File ""qutip/core/data/dense.pyx"", line 1, in init qutip.core.data.dense; File ""qutip/core/data/csr.pyx"", line 1, in i",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2098#issuecomment-1462271488:172,error,error,172,https://qutip.org,https://github.com/qutip/qutip/issues/2098#issuecomment-1462271488,3,['error'],['error']
Availability,"Hi Ericgig,. Thanks for your response!. I installed the qutip manually with master branch. And yes, I used the qutip.testing.run() to test if the installation and functions are ready. I re-run the testing and the error happened on the ""**Monte-carlo: Collapse terms constant (func format)**"". Attached file is the error output with context. [issue1039.txt](https://github.com/qutip/qutip/files/3373987/issue1039.txt). Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876:213,error,error,213,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-509716876,2,['error'],['error']
Availability,"Hi Jake,. Thanks for this, yeah I started looking into it but realised it would take too long for me to track it down. And definitely I have found some speed-ups in `dev.major` for some matrix operations compared to v4.5. Actually, I have been working a bit with Eric and Nathan to make a PR soon on something related to this, where I have been doing fairly rigorous speed testing. If you like, I can loop you in on this thread (I read your blog a bit and have been using the new `Dense` data layer -- this opens up some new possibilities).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1382#issuecomment-728332245:113,down,down,113,https://qutip.org,https://github.com/qutip/qutip/issues/1382#issuecomment-728332245,1,['down'],['down']
Availability,"Hi Lambert,. Thanks you for your answer ! As you said I tried with a higher number of dimension for the case with V(x) = 0.5*x**2+x and I adjusted the sqrt(2) which was lacking and yes the eigenvalues are converging but not a the good values. For example with dim = 35 I obtain : ; [ 3. 4. 5. 6. 7. 8. 9. 10. 10.76386907 11. 12. 13. 13.99999999 14.59881066 15.00000021 15.99999984 16.99997989 17.7691296 18.00061485 ....] the first values are not far from the PySlise values but after the errors are too important.; And the most weird is that if I use the potential V(x) = 0.5*x**2-x and change the position into - position in the Hamiltonian this times qutip converges at : ; [-3.00000000e+00 -2.00000000e+00 -9.99999948e-01 1.24008598e-06; 1.00001959e+00 2.00021567e+00 3.00168756e+00 4.00939902e+00]; and PySlise gives me : [ -3.00000 -1.99999 -0.99990 0.00084 1.00478 2.01924 3.05719 4.13217 ]; So it gives me the good eigenvalues (expect for the 4th but it's negligible) and I really don't understand why it works in this case and not in the other. Thanks for the time you took for helping me.; Christian",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1597#issuecomment-873940529:489,error,errors,489,https://qutip.org,https://github.com/qutip/qutip/issues/1597#issuecomment-873940529,1,['error'],['errors']
Availability,"Hi Leo-am, ; Thank you for your interest, any help would be greatly appreciated.; `stochastic` documentation is certainly lacking. . If there are any error in the equations, please let me know so I can check that they are not also present in the code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706#issuecomment-961883532:150,error,error,150,https://qutip.org,https://github.com/qutip/qutip/issues/1706#issuecomment-961883532,1,['error'],['error']
Availability,"Hi Louis,. There is work in development that will allow `QobjEvo` to be build from callback also, not just list. This will make callback work anywhere easily. . I was in the impression that H callback worked already for mcsolve. I rewrote part of mcsolve and broke it. Looking at your commit, I inverted `_funcrhs_with_state` and `_funcrhs`...; Sorry to have you take time to correct it. The 20x is big, but the list format allows for optimizations that are hard to do with a callback. A big one is that you don't need to create a new matrix/Qobj when calling `mul_vec`, just use it. With this code, I see a 20x between `mul_vec` and creating a Qobj a python function. . ```; import numpy as np; import qutip as qt. qoe = qt.QobjEvo([qt.qeye(3),[qt.destroy(3), lambda t,_:np.sin(t)]]); qoe.compile(). o1 = qt.qeye(3); o2 = qt.destroy(3) ; def H(t):; return o1 + o2 * np.sin(t). v = np.ones(3)+0j; %timeit qoe(0); %timeit qoe.mul_vec(0, v); %timeit H(0); %timeit H(0).data * v; ```. One optimization you could do is having the callback return a `np.array` instead of a Qobj. In `mcsolve`, this would probably be simple to implement and I expect some speed gain. But it can't really be officially supported in Qutip, for now. . ps. All those 'redundant' argument setting are for reusing the system (`ss`) in multiple call of `mcsolve` with different args, used in `correlation`. Using string coefficient, the compilation step can take a few second, so it is set to be able to reuse a compiled system, changing the `psi0`, `args`, `e_ops`, etc. This will become a less obscure feature in v5 when solver object are available.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1260#issuecomment-629231634:1241,redundant,redundant,1241,https://qutip.org,https://github.com/qutip/qutip/issues/1260#issuecomment-629231634,4,"['avail', 'redundant']","['available', 'redundant']"
Availability,"Hi Nathan,. I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it seems that there is no way to make a PR to Wiki. I can also send you the markdown source code per email like this, but I’m not sure if it works as I expected. The following is the markdown source code:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be found",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940:333,Error,Error,333,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590737940,1,['Error'],['Error']
Availability,"Hi Neill,. Thanks a lot for your answer. I did think the issue was with truncated Fock space but did not expect the 'error' would show up right in the middle of the eigenspectrum. I was expecting it somewhere towards the end of the spectrum. The explicit explanation is very helpful. As you pointed out, it would indeed be useful to have a list of ground rules (like normal ordering you mentioned) ; * for new users; * for those handling a problem where a closed form solution is unknown. I will check if the suggested normal ordering approach is helpful in other cases also. Hopefully it should be alright if I report my findings as a followup comment in this thread. With my best regards; Subimal Deb",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1587#issuecomment-869562786:117,error,error,117,https://qutip.org,https://github.com/qutip/qutip/issues/1587#issuecomment-869562786,1,['error'],['error']
Availability,"Hi QuTiP users,. I am not quite sure how I should introduce the issue that I have, but basically it comes down to the fact that my Hamiltonian and a particular function seems to require >500 GB of RAM for some parameters used. For the desired parameters, this can even become Terabytes which is hard to implement. . The main parameters by the way is N, which is the dimension of the Hilbert Space. The maximum is N=111 when running the program on the 500 GB node. The memory usage fits very good to a RAM (MB) = 0.0008804*N^4 dependence. A strange thing is that Slurm's MaxRSS command says that only 133,690 MB was needed to run the program, which is not close to the 500 GB. The memory profiler said that one function required 145,766.2 MiB (152,846.9 MB) at some point, and 327,769.4 MiB (343,691.1 MB) was freed. Together this comes close to the 500 GB, although I don't understand the numbers. I have no profound knowledge of the memory allocation in Python and QuTiP, but I would like to check if this can be improved. I went to two IT consultants who are in charge of the National Supercomputer in the Netherlands, and they also found no errors in my code. One of their suggestions was to ask you for advice on this topic. Of course, I can provide you with more details (the whole code, the outcome of the memory profiler, the meaning of the parameters and the infrastructure), but I don't want to overwhelm you. I look forward to hearing from you. Best regards,. Xavier",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845:106,down,down,106,https://qutip.org,https://github.com/qutip/qutip/issues/845,2,"['down', 'error']","['down', 'errors']"
Availability,"Hi QuTip team and community! I just installed QuTiP on my Mac and I am very excited to try it out. I started playing with this section of QuTiP User Guide [Plotting on the Bloch Sphere; ](http://qutip.org/docs/4.1/guide/guide-bloch.html), but encountered an error. This code works well if I run it in Python console:; ```; from qutip import *; bloch = Bloch(); bloch.show(); ```; But the following code in Python console shows an error; ```; bloch.save(); ```. ```; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/qutip/bloch.py"", line 663, in save; '.' + format); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 1834, in savefig; self.canvas.print_figure(fname, **kwargs); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/backend_bases.py"", line 2188, in print_figure; self.figure.dpi = dpi; File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 436, in _set_dpi; self.set_size_inches(w, h, forward=forward); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/figure.py"", line 745, in set_size_inches; manager.resize(int(canvasw), int(canvash)); File ""/Users/tilek/miniconda2/lib/python2.7/site-packages/matplotlib/backends/backend_tkagg.py"", line 540, in resize; self.canvas._tkcanvas.master.geometry(""%dx%d"" % (width, height)); File ""/Users/tilek/miniconda2/lib/python2.7/lib-tk/Tkinter.py"", line 1668, in wm_geometry; return self.tk.call('wm', 'geometry', self._w, newGeometry); _tkinter.TclError: can't invoke ""wm"" command: application has been destroyed; ```. When I try to execute the code from the User Guide as a complete .py Python file (see below) ; it produces first bloch_0.png file where it is supposed to, but then shows the same error.; ```; import numpy as np; from qutip import *; from scipy import *. def qubit_integrate(w, theta, gamma1, gamma2, psi0, tlist):; # operators and the hamiltoni",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/796:258,error,error,258,https://qutip.org,https://github.com/qutip/qutip/issues/796,2,['error'],['error']
Availability,"Hi QuTip team,. when I run multiple `mesolve` calculations in parallel using. `enumerate(pool.imap(parallel_calculation, taus))`. I sometimes get the following error. ` ZVODE-- At current T (=R1), MXSTEP (=I1) steps; taken on this call before reaching TOUT; In above message, I1 = 1000; In above message, R1 = 0.9633584757678D+00; D:\...\Anaconda3\lib\site-packages\scipy\integrate\_ode.py:869: UserWarning: zvode: Excess work done on this call. (Perhaps wrong MF.); 'Unexpected istate=%s' % istate))`. Interestingly this only happens sometimes and as far as I can tell not in the single-threaded case...; Any ideas? Thanks",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/822:160,error,error,160,https://qutip.org,https://github.com/qutip/qutip/issues/822,1,['error'],['error']
Availability,"Hi Sabhyata21, thank you for the report. Could you please include the output of the command `qutip.about()`? Because your code does not give an error on my setup.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536#issuecomment-2372741589:144,error,error,144,https://qutip.org,https://github.com/qutip/qutip/issues/2536#issuecomment-2372741589,1,['error'],['error']
Availability,"Hi Subimal,. This happens because of the truncation of the Fock space. You can see a related discussion here ; https://groups.google.com/g/qutip/c/DD6z8kYUU1I/m/k48XZS1AAgAJ. But in short, with truncation there is always an error in the commutators, so for truncating the Fock states at N photons, I think you find that [a,a.dag()] = \sum_{n=0}^(N-1) |n><n| - N|N><N| (you can check this by writing out these operators as projectors onto fock states, you will notice a*a.dag() is missing a term due to the truncation that should cancel with a term in a.dag()*a). Similarly putting the creation and annihilation operators into the position/momentum definition of the Hamiltonian, you find H = sum_{n=0}^(N-1)(n+0.5) |n><n| + N/2 |N><N|. Hence, since you truncated at 9 photons in your example, there is a degeneracy of the 4.5 eigenvalue. I am not sure if there is much can be done about this in general, perhaps the discussion I linked above might be useful. The main message I suppose is always take a larger cut-off than you think you might need, particularly if you are relying on the commutation relations to simplify things for you (which, given your example, can be a bad idea some times!). . I guess there is an interesting question about what is the best practice in these things, e.g., if you have a non-linear model, what form is it best to put it in before moving to a truncated basis? given your example, I would expect something like normal ordering to be better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1587#issuecomment-869408770:224,error,error,224,https://qutip.org,https://github.com/qutip/qutip/issues/1587#issuecomment-869408770,2,['error'],['error']
Availability,"Hi all. When I ran this code. ```python; import qutip as q; q.qdiags(q.basis(3, 0), 0); ````. The error that was thrown indicated an improper version of Scipy instead of an error associated with; the function itself. I think it's because the [exception clause here](https://github.com/qutip/qutip/blob/master/qutip/operators.py#L753) is too broad. I think it should be catching ``NameError``.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/847:98,error,error,98,https://qutip.org,https://github.com/qutip/qutip/issues/847,2,['error'],['error']
Availability,"Hi and thank you for your contribution! I see that this is still a draft, but I wanted to quickly point out qutip's existing `parallel` module: https://qutip.readthedocs.io/en/master/apidoc/functions.html#module-qutip.solver.parallel; The module offers functions which can either execute tasks serially (`serial_map`) or in parallel (`parallel_map`, `loky_pmap`, `mpi_pmap`). For example in the Monte Carlo solver, the `map` option decides which of these functions is used, allowing users to switch easily between serial and parallel execution. These functions also come with error handling already, and they select a default number of processes based on the CPU count. It would be nice to have such a `map` option for the calculation of correlation functions.; Are you planning to make similar modifications also to the other types of correlation function in the same module?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2395#issuecomment-2063018511:576,error,error,576,https://qutip.org,https://github.com/qutip/qutip/pull/2395#issuecomment-2063018511,1,['error'],['error']
Availability,"Hi devs,. I've been running into an issue installing the most recent dev version. The _blas_info() method is throwing the following error:. ```; Python 3.5.2 (v3.5.2:4def2a2901a5, Jun 26 2016, 10:47:25) ; [GCC 4.2.1 (Apple Inc. build 5666) (dot 3)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/__init__.py"", line 174, in <module>; import qutip._mkl; File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/_mkl/__init__.py"", line 3, in <module>; _set_mkl(); File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/_mkl/utilities.py"", line 47, in _set_mkl; if _blas_info() == 'INTEL MKL':; File ""/Users/oliviadimatteo/tomo_test/qutip/qutip/utilities.py"", line 405, in _blas_info; if hasattr(config,'mkl_info') or any('mkl' in lib for lib in blas_info['libraries']):; KeyError: 'libraries'; ```. It seems this method was changed most recently in commit d7bb119 to include a line containing `blas_info['libraries']`. For reference I am doing a basic installation with just numpy (1.11.2), scipy (0.18.1), and cython (0.24.1), and not with any of the fortran MC stuff. I'm using Mac OSX 10.11, and Python 3.5.2. [I've also been able to successfully install using a commit from before this, a31f7fc.] . Please let me know if there is just something I've missed here. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552:132,error,error,132,https://qutip.org,https://github.com/qutip/qutip/issues/552,1,['error'],['error']
Availability,"Hi friends,. I'm going to import qutip as . from qutip import *. but i get this error:. Traceback (most recent call last):; File ""D:\py\Master_solve.py"", line 4, in <module>; import qutip; File ""C:\Users\Phd-02\AppData\Roaming\Python\Python36\site-packages\qutip\__init__.py"", line 149, in <module>; from qutip.qobj import *; File ""C:\Users\Phd-02\AppData\Roaming\Python\Python36\site-packages\qutip\qobj.py"", line 60, in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; File ""C:\Users\Phd-02\AppData\Roaming\Python\Python36\site-packages\qutip\fastsparse.py"", line 423, in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); ImportError: DLL load failed: The specified module could not be found. Any suggestion?Thanks in advance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1613:80,error,error,80,https://qutip.org,https://github.com/qutip/qutip/issues/1613,1,['error'],['error']
Availability,"Hi paul,. Thanks for the feedback. I think maybe Rob had originally included the mkl stuff, but I took it out when I was bug fixing. Will put it in, I didn't realize it gave such a big performance boost. thats cool. I will also follow your advice and stick in a finite frequency to make sure all the solvers work. . I had a poke around in discussion forums for numpy and scipy, and it seems like the problem is that they throw an exception when they decide L is ""exactly singular"" (which technically it is). Sometimes numerical rounding errors prevent this exception, as occurs in larger systems, or adding a finite frequency, so it tries to solve it anyway and succeeds, because the projector Q on the right-hand side guarantees a solution. Conversely, matlab will just throw a warning, and try and solve it anyway.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/528#issuecomment-243988381:537,error,errors,537,https://qutip.org,https://github.com/qutip/qutip/pull/528#issuecomment-243988381,2,['error'],['errors']
Availability,Hi! How did you import the function `read_qasm`? Could also include your `import qutip ...` or `from qutip.qip import ...` statements? Does any warning or error message show up during the execution of the import?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2334#issuecomment-1962937455:155,error,error,155,https://qutip.org,https://github.com/qutip/qutip/issues/2334#issuecomment-1962937455,1,['error'],['error']
Availability,Hi! Thanks for spotting this error and sending a fix! The patch looks good so I'm merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/27#issuecomment-19307072:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/pull/27#issuecomment-19307072,1,['error'],['error']
Availability,"Hi!. I'd like to report an installation issue on CentOS/RHEL platforms. I've tested various Python versions (2.7, 3.4) on both RHEL 6.x and 7.x, and the error is consistent, and happens during compilation of some Cython files. The error is: `ambiguous overloaded method` referring to the `abs()` function, and happens in two different places. Full installation output:; ```; $ pip install qutip; Collecting qutip; Using cached qutip-4.1.0.tar.gz; Complete output from command python setup.py egg_info:; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef double * col_sum = <double *>PyDataMem_NEW_ZEROED(ncols, sizeof(double)); cdef double max_col = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; k = ind[jj]; col_sum[k] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:316:29: ambiguous overloaded method; ; Error compiling Cython file:; ------------------------------------------------------------; ...; cdef size_t ii, jj; cdef double * row_sum = <double *>PyDataMem_NEW_ZEROED(nrows, sizeof(double)); cdef double max_row = 0; for ii in range(nrows):; for jj in range(ptr[ii], ptr[ii+1]):; row_sum[ii] += abs(data[jj]); ^; ------------------------------------------------------------; ; qutip/cy/sparse_utils.pyx:335:30: ambiguous overloaded method; Compiling qutip/cy/spmatfuncs.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/stochastic.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/sparse_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/graph_utils.pyx because it depends on /home/kilian/qutip/lib/python2.7/site-packages/Cython/Includes/numpy/__init__.pxd.; Compiling qutip/cy/interpolate.pyx because it depen",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:153,error,error,153,https://qutip.org,https://github.com/qutip/qutip/issues/723,4,"['Error', 'error']","['Error', 'error']"
Availability,Hi!; Assume that the system will reach a steady state.; Is there an efficient method to estimate the time it takes to reach the steady state (or to enter and remain within a specified error band)? ; My wish is that I do not have to calculate the steady state (using the steadystate function or others) to achieve that. Thank you very much.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/319:184,error,error,184,https://qutip.org,https://github.com/qutip/qutip/issues/319,1,['error'],['error']
Availability,"Hi!; I was thinking to use Floquet Formalism to solve some time-dependent problem.; So I firstly try the case in Users Guide, but some unexpected errors occurred. ---------------------------------------------------------------------------; ```; %matplotlib inline; import matplotlib.pyplot as plt; import numpy as np; from qutip import *; delta=0.2*2*np.pi;; eps0=1.0*2*np.pi;; A=2.5*2*np.pi;; omega=1.0*2*np.pi;; H0=-delta/2.0*sigmax()-eps0/2.0*sigmaz(); H1=A/2.0*sigmaz(); args={'w':omega}; H=[H0,[H1,'sin(w*t)']]; T=2*np.pi/omega; f_modes_0, f_energies = floquet_modes(H, T, args); ```. Here is the error information：. ---------------------------------------------------------------------------; ```; DistutilsPlatformError Traceback (most recent call last); F:\Anaconda3\lib\site-packages\pyximport\pyximport.py in load_module(name, pyxfilename, pyxbuild_dir, is_package, build_inplace, language_level, so_path); 215 so_path = build_module(module_name, pyxfilename, pyxbuild_dir,; --> 216 inplace=build_inplace, language_level=language_level); 217 mod = imp.load_dynamic(name, so_path). F:\Anaconda3\lib\site-packages\pyximport\pyximport.py in build_module(name, pyxfilename, pyxbuild_dir, inplace, language_level); 191 inplace=inplace,; --> 192 reload_support=pyxargs.reload_support); 193 assert os.path.exists(so_path), ""Cannot find: %s"" % so_path. F:\Anaconda3\lib\site-packages\pyximport\pyxbuild.py in pyx_to_dll(filename, ext, force_rebuild, build_in_temp, pyxbuild_dir, setup_args, reload_support, inplace); 101 obj_build_ext = dist.get_command_obj(""build_ext""); --> 102 dist.run_commands(); 103 so_path = obj_build_ext.get_outputs()[0]. F:\Anaconda3\lib\distutils\dist.py in run_commands(self); 954 for cmd in self.commands:; --> 955 self.run_command(cmd); 956 . F:\Anaconda3\lib\distutils\dist.py in run_command(self, command); 973 cmd_obj.ensure_finalized(); --> 974 cmd_obj.run(); 975 self.have_run[command] = 1. F:\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py in run(s",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854:146,error,errors,146,https://qutip.org,https://github.com/qutip/qutip/issues/854,2,['error'],"['error', 'errors']"
Availability,"Hi, . Here's the output I get. While I've installed the BLAS libraries on my machine, I haven't 'connected' it with numpy, so maybe this is what's leading to the issue?. ```; >>> import numpy as np; >>> config = np.__config__; >>> config.show(); openblas_lapack_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; atlas_3_10_threads_info:; NOT AVAILABLE; blas_opt_info:; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; extra_compile_args = ['-msse3', '-I/System/Library/Frameworks/vecLib.framework/Headers']; lapack_opt_info:; extra_link_args = ['-Wl,-framework', '-Wl,Accelerate']; define_macros = [('NO_ATLAS_INFO', 3), ('HAVE_CBLAS', None)]; extra_compile_args = ['-msse3']; atlas_3_10_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_threads_info:; NOT AVAILABLE; lapack_mkl_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552#issuecomment-259646175:273,AVAIL,AVAILABLE,273,https://qutip.org,https://github.com/qutip/qutip/issues/552#issuecomment-259646175,12,['AVAIL'],['AVAILABLE']
Availability,"Hi, @abhisekupadhyaya nice work! . Usually a high cognitive complexity indicates that the function is too long or too deep for understanding and maintenance, but sometimes it exaggerates a bit, so it's fine as long as everything is clear. To reduce the function length, for example, if the checking part and each gate parsing can be resued (e.g for QASM v2), they can be defined in a separate function. Another minor thing, what about leaving a short warning when ignoring the unsupported code?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1139#issuecomment-562831745:145,mainten,maintenance,145,https://qutip.org,https://github.com/qutip/qutip/pull/1139#issuecomment-562831745,2,['mainten'],['maintenance']
Availability,"Hi, I also have the problem on both windows 64 bit 7 and 10, with with miniconda 64 bits 2019.07 and qutip 4.4, after following exactly the official install reciepe from http://qutip.org/docs/latest/installation.html; And replacing the last MKL by MKL2018 does not fix the problem for me.; Any more robust solution?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-534742208:299,robust,robust,299,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-534742208,1,['robust'],['robust']
Availability,"Hi, I am getting this error on the current master. I guess this will be solved once this PR is merged ?. ```; air:tests shahnawaz$ nosetests test_sparse.py; E; ======================================================================; ERROR: Failure: ImportError (No module named 'qutip.cy.spconvert'); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/609#issuecomment-270078397:22,error,error,22,https://qutip.org,https://github.com/qutip/qutip/pull/609#issuecomment-270078397,3,"['ERROR', 'Failure', 'error']","['ERROR', 'Failure', 'error']"
Availability,"Hi, I am trying to take tensor product of time dependent collapse operators but following error crops up,. TypeError: One of inputs is not a quantum object. Following is the tensor product I wanted to take:. V_ft=np.sqrt(kappa_f)*tensor([[destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_a01)],[0,0]]),dims=[[2],[2]]), u_t]],[destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_b01)],[0,0]]),dims=[[2],[2]]), u_t]],[destroy(2),[Qobj(np.array([[0,complex(0,-1)*np.conj(H_c01)],[0,0]]),dims=[[2],[2]]), u_t]]]",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1183:90,error,error,90,https://qutip.org,https://github.com/qutip/qutip/issues/1183,1,['error'],['error']
Availability,"Hi, I get many errors while running the test code, and at the end, I came up with a nitification that says (Failed(errors=12)). here are the errors:. td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR. Please let me know how to fix it. thanks in advance",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315:15,error,errors,15,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-524421315,15,"['ERROR', 'error']","['ERROR', 'errors']"
Availability,"Hi, I got the same error but I could successfully install qutip after upgrading Scipy because the previous version of Scipy seems not to have a specific Cython package for building qutip. . It's on Mac but try this:. pip3 install scipy --upgrade; pip3 install qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/739#issuecomment-343758428:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/739#issuecomment-343758428,1,['error'],['error']
Availability,"Hi, I hope I can get some help with this. I am new with qutip; Sx_nv= qutip.tensor(qutip.jmat(1,""x""),qeye(2)) ; Sy_nv= qutip.tensor(qutip.jmat(1,""y""),qeye(2)); Sz_nv= qutip.tensor(qutip.jmat(1,""z""),qeye(2)) ; Ix_nv= qutip.tensor(qeye(3),qutip.jmat(0.5,""x"")); Iy_nv= qutip.tensor(qeye(3),qutip.jmat(0.5,""y"")); Iz_nv= qutip.tensor(qeye(3),qutip.jmat(0.5,""z"")); S_vector = [Sx_nv,Sy_nv,Sz_nv]; D_xx = 0; D_yy =0; D_zz =2870 . D_matrix = np.diag([D_xx,D_yy,D_zz]); I want to make a product like ""S_vector * D_matrix * S_vector"" so I did this. qutip.Qobj(np.dot(np.array(D_matrix),np.array(S_vector))); And I got this error :; ---------------------------------------------------------------------------; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last). TypeError: must be real number, not Qobj. Somewhere I read that there is a problem with 1.20 numpy version and qutip, so I created an environment in conda with numpy 1.19.0; but it does not fix the problem, or maybe it is me the one that is not understanding. Why I can not make operations with Qobj, or convert it to numpy arrays and then back to Qobj.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1848:613,error,error,613,https://qutip.org,https://github.com/qutip/qutip/issues/1848,1,['error'],['error']
Availability,"Hi, I think you may have some typos in your code, for example you have a pi instead of np.pi in line 9. Also in the definition of the constants you have 2np.pi instead of 2*np.pi. . I've run your code changing those typos and I didn't get any error. I am running it in Mac OS X Catalina. . Try to run the code I've run in your machine: . ```; import numpy as np; from qutip import *; import matplotlib.pyplot as plt. delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); H1 = A/2.0 * sigmaz(); args = {'w': omega}; H = [H0, [H1, 'sin(w * t)']]; T = 2*np.pi / omega; f_modes_0, f_energies = floquet_modes(H, T, args); f_energies; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207#issuecomment-603532427:243,error,error,243,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-603532427,1,['error'],['error']
Availability,"Hi, I would like to contribute to this issue as part of the UnitaryHack2024. I will incorporate a basic use of gates module to guide-basics.rst and a table of the available gates.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2389#issuecomment-2140841510:163,avail,available,163,https://qutip.org,https://github.com/qutip/qutip/issues/2389#issuecomment-2140841510,2,['avail'],['available']
Availability,"Hi, I've been starting to learn qutip to write my dissertation on Quantum computing. I was running the script on Vacuum Rabi oscillations in the Jaynes-cummings model from the example section on [qutip.com](http://qutip.com/). Originally it was working correctly. However, I have come back to it after about a month and I have run into an issue. When I run the code copied straight from the website it returns this error . ""ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". so I increase the nsteps to 100000:; output = mesolve(H, psi0, tlist, c_op_list, [a.dag() * a, sm.dag() * sm], options = Options(nsteps= 10000)). however I get an output that is completely different to what I should be getting. What I should be getting: . ![image](https://user-images.githubusercontent.com/75099190/186995018-26029946-bba2-4b71-888d-74b88361c832.png). What my code is outputting:. ![image](https://user-images.githubusercontent.com/75099190/186995092-75b9d285-f854-487f-bd11-7dffc19d57cb.png). Do you have any idea what could be causing this error?; Any help would be hugely appreciated . my code:. import matplotlib.pyplot as plt; import numpy as np; from qutip import *. wc = 1.0 * 2 * np.pi # cavity frequency; wa = 1.0 * 2 * np.pi # atom frequency; g = 0.05 * 2 * np.pi # coupling strength; kappa = 0.005 # cavity dissipation rate; gamma = 0.05 # atom dissipation rate; N = 15 # number of cavity fock states; n_th_a = 0.0 # temperature in frequency units; use_rwa = True. tlist = np.linspace(0, 25, 100). psi0 = tensor(basis(N, 0), basis(2, 1)) # start with an excited atom. a = tensor(destroy(N), qeye(2)); sm = tensor(qeye(N), destroy(2)). if use_rwa:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() * sm + a * sm.dag()); else:; H = wc * a.dag() * a + wa * sm.dag() * sm + g * (a.dag() + a) * (sm + sm.dag()). c_op_list = []. rate = kappa * (1 + n_th_a); if rate > 0.0:; c_op_list.append(np.sqrt(rate) * a). rate = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987:415,error,error,415,https://qutip.org,https://github.com/qutip/qutip/issues/1987,2,['error'],['error']
Availability,"Hi, are you sure you are not in the QuTiP folder when you start your Python; interpreter? Please provide some information as to how you installed QuTiP.; Which Python version are you using?. You can just type the command. >> which python. To find out the Python you are using. I would suggest the best way to run; QuTiP is using the conda installation. On Sun, 29 Nov 2020 at 20:42, ZahraQI <notifications@github.com> wrote:. > After installing qutip, in order to test qutip installation, I type; > ""python"" in terminal and then type ""import qutip.testing as qt"", getteing; > to the following error.; >; > import qutip.testing as qt; > Traceback (most recent call last):; > File """", line 1, in; > ModuleNotFoundError: No module named 'qutip'; >; > qt.run(); > Traceback (most recent call last):; > File """", line 1, in; > NameError: name 'qt' is not defined; >; > If anyone can help to solve the problem?; > Thanks; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1391>, or unsubscribe; > <https://github.com/notifications/unsubscribe-auth/ABVFIBB6E4CM7HU3CY2NT6LSSKP3PANCNFSM4UGXA6UA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-735447201:593,error,error,593,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-735447201,1,['error'],['error']
Availability,"Hi, could you please tell us how you installed QuTiP and which python are you using? Just type the following in the terminal. ```; which python; ```. To check how QuTiP was installed (if on Linux or Mac):. ```; pip freeze | grep ""qutip""; ```. If on windows, download Anaconda and install QuTiP from conda-forge with. ```; conda install -c conda-forge qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387393174:258,down,download,258,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387393174,1,['down'],['download']
Availability,"Hi, matplotlib is an optional dependency and there is a warning on import.; You should install them separately. On Thu, Jun 7, 2018, 2:47 PM Tejas Shetty <notifications@github.com> wrote:. > Doesn't install matplotlib when installing on windows.; > And then produces errors; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/878>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBD8arMQpOQc40gQMwSImZ3fq6Cm7ks5t6L57gaJpZM4Udxhh>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/878#issuecomment-395303939:267,error,errors,267,https://qutip.org,https://github.com/qutip/qutip/issues/878#issuecomment-395303939,1,['error'],['errors']
Availability,"Hi, thak you for the feedback it is really helpful. Using lower density matrices is reducing my time by 10%, and without the fix it produces error; it is an excellent finding.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822574194:141,error,error,141,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822574194,2,['error'],['error']
Availability,"Hi, thank you all for the answers, and sorry for the delay. I understand there is some confusion because what I'm trying to do doesn't really have a physical meaning, I simply wanted to convert between matrices and vectors because I'm looking for computational gains by doing so. ; If this was numpy, I would simply use numpy.reshape. ; I guess it actually makes sense if this is not a permitted operation in qutip, I was just exploiting the operator_to_vector function for a different reason. @quantshah ; Thanks, I tried the code, but even the test_vec implementation fails with error ; File ""qutip\superoperator.py"", line 278, in vector_to_operator; shape = (np.prod(q.dims[0]), np.prod(q.dims[1])). IndexError: list index out of range. @jakelishman ; Thanks for the tip for the tensor product basis state creation.; It's not a density matrix that I want to do, I just wanted to reshape the array. As a side note, I notice that I have a very large computational cost when I work with dense matrices and state vectors, as you do when you simulate a quantum circuit with parametric rotations on each qubit, and this is due to the fact that qutip uses a sparse matrix representation. If I do the same operations with numpy I get a large computational gain, because the arrays are dense. Is there any way that I don't know about to save the Qobj data in dense form?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-601662221:581,error,error,581,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601662221,2,['error'],['error']
Availability,"Hi, thank you for replying!. I have downloaded everything necessary as written there and also tried to change the policy.xml file of ImageMagick, but it would not help, and I still get the same error:; FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. I have a valid version of pdflatex with the packages qcircuit and pdfcrop installed. I verified it through MikTex.; After running, I obtained the latex file and the pdf file, but it is not converted to png file for some reason. Thanks,; Ariel",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888#issuecomment-1112205108:36,down,downloaded,36,https://qutip.org,https://github.com/qutip/qutip/issues/1888#issuecomment-1112205108,2,"['down', 'error']","['downloaded', 'error']"
Availability,"Hi, thank you for the amazing work that you do. When using qutip to diagonalise two simultaneously diagonalizible, hermitian operators it continues to throw this error:. ![Screen Shot 2019-08-08 at 11 29 59](https://user-images.githubusercontent.com/19754061/62691897-e0a83680-b9cf-11e9-8a92-a88a3716ae99.png). Which comes from `qutip.simdiag.py` in `simdiag(ops, evals)`:. ![Screen Shot 2019-08-08 at 11 27 34](https://user-images.githubusercontent.com/19754061/62691786-a76fc680-b9cf-11e9-8f99-7a9ba78db518.png). My installed packages:; QuTiP Version: 4.4.0; Numpy Version: 1.16.4; Scipy Version: 1.3.0; Cython Version: 0.29.12; Matplotlib Version: 3.1.0; Python Version: 3.7.3",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1067:162,error,error,162,https://qutip.org,https://github.com/qutip/qutip/issues/1067,1,['error'],['error']
Availability,"Hi, the cropping issue was there before. Even I had faced it when; visualizing circuits. I used to just add a redundant qubit to the circuit; to get that extra padding. I ll look into the cropping and resize it to; make the visualization better. Could you please open a new issue for that?. I opened a new issue to discuss that in #680 . On 05-Apr-2017 9:37 PM, ""Morten Kjaergaard"" <notifications@github.com>; wrote:. > Hi again @ajgpitch <https://github.com/ajgpitch> and @sahmed95; > <https://github.com/sahmed95>.; >; > I had a chance to work a little with the "".add_state"" feature this; > morning, and wanted to raise an issue in terms of the visualization. The; > problems are shown in the figure below:; > [image: image]; > <https://cloud.githubusercontent.com/assets/7925874/24715124/6f96cf7a-19f8-11e7-8ecd-76c937805bc5.png>; > (NB: this could just be due to jupyter notebook? In any case, I see the; > problem is also reproduced in @sahmed95 <https://github.com/sahmed95>'s; > post here: #679 (comment); > <https://github.com/qutip/qutip/pull/679#issuecomment-291652067>); >; > Two things:; >; > 1. The cropping seems to go bonkers if you use anything else than one; > symbol in the ket-state; > 2. It's not possible to use \textrm{xxx} in the ket-names.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/679#issuecomment-291911527>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBBFZyzHSm5vJxrIdu33IDkreVAMnks5rs7xQgaJpZM4MyxeC>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291957664:110,redundant,redundant,110,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291957664,1,['redundant'],['redundant']
Availability,"Hi, the failure is gone, though the error is still there. # . ## ERROR: Qobj addition. Traceback (most recent call last):; File ""/usr/lib/python2.7/dist-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py"", line 139, in test_QobjAddition; assert_equal(q4.type, ischeck(q4)); NameError: global name 'ischeck' is not defined. ---. Ran 221 tests in 269.779s. FAILED (SKIP=1, errors=1). I removed my installation with apt-get remove python-qutip before installing the development version.; Cheers; Clemens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42922665:8,failure,failure,8,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922665,4,"['ERROR', 'error', 'failure']","['ERROR', 'error', 'errors', 'failure']"
Availability,"Hi, there were some import statement errors which are fixed now and the tests pass, hopefully. The code is the same as in Nathan's repository where we have the notebooks as examples.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-361302051:37,error,errors,37,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-361302051,1,['error'],['errors']
Availability,"Hi, this is just a refactoring of @nwlambert 's code for a generic HEOM solver which takes in a set of exponents and coefficients for a spectral density function and can be used to work with arbitrary spectral density functions. In comparison, the current `heom` solver in QuTiP is specialized. . Specific quantum systems in the `qutip/models` sub-module could have the following signature:; ```; model = System(hamiltonian, **params); result = model.solve(initial_state, tlist, options); ```; System specific functions could be in the model class. For instance,; ```; model._rhs(); ```; gives the RHS (a matrix equivalent to an effective Liouvillian) of the density matrix evolution equation. If any system can be written down as the evolution of an initial density matrix as dp/dt = (RHS)p, and there is an optimised way to solve, it can be written down as a qutip.model. The other necessary function would be a basis change map or a lookup dictionary for translating a state tuple to the index in the larger density matrix which is used for the evolution using the effective Liouvillian. This is the `_heom_state_dictionaries` in this case and `jmm1_dictionary` in case of the WIP #753 . The code in the current form is good enough to be used but it needs to be optimized further. The next steps are:; - [x] Tests for RHS generation and the solve function; - [ ] Optimize the generation of the effective Liouvillian (RHS) similar to the `heom` solver; - [ ] Refactoring and deciding on the API (how to pass in the coefficients etc)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/793:723,down,down,723,https://qutip.org,https://github.com/qutip/qutip/pull/793,2,['down'],['down']
Availability,"Hi,. I cannot find any doc (except the source code itself) about which progress bar are available and how to use them. Especially, the only references to the progress bar in [the doc](http://qutip.org/docs/3.1.0/) are the options for `mesolve` etc. I think it could be really useful to document it, or provide an iPython notebook making use of it. EDIT: Plus the docstring of `mesolve` function (for instance) seems to contradict the first lines of the function:. ```; progress_bar: BaseProgressBar; Optional instance of BaseProgressBar, or a subclass thereof, for; showing the progress of the simulation.; ```. versus. ``` python; if progress_bar is None:; progress_bar = BaseProgressBar(); elif progress_bar is True:; progress_bar = TextProgressBar(); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/444:88,avail,available,88,https://qutip.org,https://github.com/qutip/qutip/issues/444,1,['avail'],['available']
Availability,"Hi,. I have a problem when trying to visualize the quantum circuit with the command ""q.png"".; I have installed ImageMagick, Perl, and Ghostscript as explained in the tutorial: https://nbviewer.ipython.org/github/qutip/qutip-notebooks/blob/master/examples/quantum-gates.ipynb. However, I still receive the next error message:. FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. The pdf file is generated but for some reason, is not converted to a .png file. Thanks a lot,; Ariel",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1888:310,error,error,310,https://qutip.org,https://github.com/qutip/qutip/issues/1888,1,['error'],['error']
Availability,"Hi,. I have been trying to use `qutip.floquet.floquet_master_equation_steadystate` method to get the steadystate of my system, but the docstring is not super useful. From the docstring, I guess I should call it as `qutip.floquet.floquet_master_equation_steadystate(H, A)` where. * `H` is my (time-dependent) hamiltonian, similar as the one used in http://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html#floquet-formalism-in-qutip.; * `A` is the [`A` matrix output](https://github.com/qutip/qutip/blob/master/qutip/floquet.py#L587-L588) from `floquet_master_equation_rates` call. I think I missed something as I am getting an error; ```; TypeError: Solving for steady states requires Liouvillian (super) operators; ```; from https://github.com/qutip/qutip/blob/master/qutip/steadystate.py#L224. Additionnally, I think there is a much easier way to find the steadystate of such a system, using something like (not really well written nor optimised):. ```python; def floquet_master_equation_steadystate2(A):; """"""; TODO. Parameters; ----------. A : TODO; A matrix used to build the master equation.; """"""; B = np.zeros_like(A); N = A.shape[0]; for a in range(N):; for b in range(N):; # Convergence of off-diagonal terms in density matrix to 0; assert(-0.5 * np.sum(A[:, a] + A[:, b]) < 0); # Diagonal terms of density matrix; if a != b:; B[a, b] = A[a, b]; else:; B[a, b] = -1.0 * np.sum([; A[nu, a] for nu in range(N) if nu != a]; ); eigval, eigvec = Qobj(B).eigenstates(); assert(np.isclose(eigval[-1], 0, atol=1e-15)); return eigvec[-1] * eigvec[-1].dag(); ```. which basically looks for the eigenvector associated with 0 eigenvalue of a matrix derived from `A`, which is basically coming directly from equation 251 of [Gri98](http://qutip.org/docs/latest/biblio.html#gri98).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/768:636,error,error,636,https://qutip.org,https://github.com/qutip/qutip/issues/768,1,['error'],['error']
Availability,"Hi,. I think the import order is not correct in `setup.py`, importing `numpy` at the beginning of the file, before giving a chance to `setuptools` to actually install it (because it is in required packages). This line is faulty https://github.com/qutip/qutip/blob/master/setup.py#L34 and results in. ``` zsh; % pip install qutip; Collecting qutip; Downloading qutip-3.1.0.tar.gz (800kB); 100% |████████████████████████████████| 802kB 595kB/s ; Complete output from command python setup.py egg_info:; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-build-w53v9c3b/qutip/setup.py"", line 34, in <module>; import numpy as np; ImportError: No module named 'numpy'; ```. Then, instead of `pip install qutip`, one has to `pip install numpy; pip install qutip`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/426:221,fault,faulty,221,https://qutip.org,https://github.com/qutip/qutip/issues/426,2,"['Down', 'fault']","['Downloading', 'faulty']"
Availability,"Hi,. I was trying to run some simulations with [Floquet formalism in Qutip](http://qutip.org/docs/4.1/guide/dynamics/dynamics-floquet.html) in a Jupyter notebook, when I ran into a ""The kernel appears to died unexpectedly, it will restart"" error message. I tried to understand what is happening, and it seems it is due to a segmentation fault. It happens also when run in CPython 3.5.2. `gdb` was not super useful, and I could not get it to output any interesting backtrace. Manually tracking the issue down, it seems that `qutip.floquet.floquet_modes` call `qutip.propagator.propagator` which itself calls `sesolve`. As far as I could track the error down for the moment, it seems to happen in [this call](https://github.com/qutip/qutip/blob/master/qutip/propagator.py#L159-L160). My code is quite lengthy, and I did not yet manage to isolate a small snippet to reproduce the error :/ Not sure what is the best way to debug this either :/. ```python; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 0.19.1; Cython Version: 0.27.1; Matplotlib Version: 2.0.0; Python Version: 3.5.2; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/phyks/.local/share/virtualenvs/physique/lib/python3.5/site-packages/qutip; ```. Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/761:240,error,error,240,https://qutip.org,https://github.com/qutip/qutip/issues/761,6,"['down', 'error', 'fault']","['down', 'error', 'fault']"
Availability,"Hi,. I'm having some trouble installing QuTiP onto my computer. I'm running Python 2.7 on Windows 7 and using Anaconda 2.10 64 bit and PyCharm 4.0.4.; I tried installing QuTiP in PyCharm by using file->settings->project interpreter and that successfully installed. However, when I go to the python console and type; from qutip import \* I get the following error message:. Backend Qt4Agg is interactive backend. Turning interactive mode on.; Traceback (most recent call last):; File ""C:\Users\daniel\Anaconda\lib\site-packages\IPython\core\interactiveshell.py"", line 2883, in run_code; exec(code_obj, self.user_global_ns, self.user_ns); File ""<ipython-input-2-674d9281af88>"", line 1, in <module>; from qutip import *; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip__init__.py"", line 213, in <module>; from qutip.qobj import *; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\qobj.py"", line 60, in <module>; from qutip.ptrace import _ptrace; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\ptrace.py"", line 38, in <module>; from qutip.sparse import sp_reshape; File ""C:\Program Files (x86)\JetBrains\PyCharm Community Edition 4.0.4\helpers\pydev\pydev_import_hook.py"", line 21, in do_import; module = self._system_import(name, _args, *_kwargs); File ""C:\Users\daniel\Anaconda\lib\site-packages\qutip\sparse.py"", line 49, in <module>; from qutip.cy.sparse_utils import (_sparse_profile, _sparse_permute,; File ""C:\Program Files (",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/343:357,error,error,357,https://qutip.org,https://github.com/qutip/qutip/issues/343,1,['error'],['error']
Availability,"Hi,. It seems there are some errors in the Floquet `mesolve`-equivalent function, which are not seen when considering a simple qubit. Consider for instance an harmonic oscillator with a drive, which should converge towards a coherent state:. ```python; %matplotlib notebook. import numpy as np; from qutip import (basis, destroy, expect, fsesolve, sigmax, sigmaz, rand_ket, num,; mesolve); from qutip.floquet import (floquet_modes, floquet_modes_table,; floquet_modes_t_lookup, fmmesolve). # Parameters; wc = 1.0 * 2 * np.pi; wp = 1.5 * 2 * np.pi; T = 2 * np.pi / wp; N = 20; epsilon_p = np.sqrt(2) * np.sqrt(8) * (wp - wc). psi0 = basis(N,0); a = destroy(N); H = [; wc * a.dag() * a,; [1.0j * epsilon_p * (a.dag() - a), 'cos(wp * t)']; ]. args = {; 'wp': wp; }. # noise power spectrum; gamma1 = 0.05; def noise_spectrum(omega):; return 0.5 * gamma1 * omega / (2 * np.pi). tlist = np.linspace(0, 5 / gamma1, 100). # find the floquet modes for the time-dependent hamiltonian; f_modes_0, f_energies = floquet_modes(H, T, args). # precalculate mode table; f_modes_table_t = floquet_modes_table(f_modes_0, f_energies,; np.linspace(0, T, 500 + 1),; H, T, args). # solve the floquet-markov master equation; output = fmmesolve(H, psi0, tlist,; [a], [], [noise_spectrum], T, args). # For reference: calculate the same thing with mesolve; output_ref = mesolve(H, psi0, tlist, [np.sqrt(gamma1) * a],; [], args); ```. `output_ref.states[-1]` is a coherent state as expected. ![image png 1200 x 1200 pixels - redimensionnee 79](https://user-images.githubusercontent.com/3856586/31828448-433fd44a-b588-11e7-9305-e44f88ed8c1b.png). But `output.states[-1]` is far from being a coherent state. ![image png 1200 x 1200 pixels](https://user-images.githubusercontent.com/3856586/31828469-56631e42-b588-11e7-8950-0ca04ce3c70c.png). I tried to debug it, without real success for now :/. EDIT: Might be partially related to #624.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772:29,error,errors,29,https://qutip.org,https://github.com/qutip/qutip/issues/772,1,['error'],['errors']
Availability,"Hi,. Thanks for digging into this! Given the docstring of `qutip.propagator`, this behavior was unexpected for me https://github.com/qutip/qutip/blob/master/qutip/propagator.py#L62-L76. Changing the propagator to consider a list with a single element as a single float value (`[t]` would be the same as `t`) would break the current API and could eventually break some scripts built using QuTiP and using the fact that `qutip.propagator` of `[t]` gives identity. The best way to fix this would probably be to edit the docstring to emphasize the expected behavior for a single `t` value and for a list of times. P.S.: Not directly related to this issue but when looking for QuTiP doc on search engines, it often sends to documentation for old versions of QuTiP. Typically http://qutip.org/docs/4.0.2/apidoc/functions.html#module-qutip.propagator. What about putting a banner on these legacy documentations online stating that ""You are reading the documentation of an older version of QuTiP. Latest documentation is available at http://qutip.org/docs/latest/apidoc/functions.html#module-qutip.propagator"" (for instance)?. Best,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/950#issuecomment-463583335:1013,avail,available,1013,https://qutip.org,https://github.com/qutip/qutip/issues/950#issuecomment-463583335,1,['avail'],['available']
Availability,"Hi,. There is a [manual integration](https://github.com/qutip/qutip/blob/master/qutip/floquet.py#L602-L624) using rectangles method in `qutip.floquet` file which sometimes fail. Problem is that the number of timesteps, `nT`, is hardcoded and not accessible to the user. In my case, `nT = 100` does not seem to be enough and the integral is wrong. A quick and dirty fix is to have an extra `nT=100` keyword argument to `floquet_master_equation_rates`, so that user can overload it. Still, it does not seem to be the most efficient way of doing it. I have a quick fix I can contribute which is using `scipy.integrate.simps` instead. This requires keeping an array of values to integrate in memory (which is less memory-efficient) but I could keep `nT=100` and get the correct integral by using this method. I guess the best option would be to use [`scipy.integrate.quad`](https://docs.scipy.org/doc/scipy/reference/generated/scipy.integrate.quad.html#scipy.integrate.quad), as it uses an adaptive algorithm. I can contribute a fix for this, just looking for feedback on the best available option :). Thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/767:1077,avail,available,1077,https://qutip.org,https://github.com/qutip/qutip/issues/767,1,['avail'],['available']
Availability,"Hi,. With scipy 1.3, QuTip is unimportable. The exact traceback is . ```python; In [1]: import qutip; ---------------------------------------------------------------------------; ImportError Traceback (most recent call last); <ipython-input-1-e01d5608f34f> in <module>(); ----> 1 import qutip. /usr/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 169 ; 170 # core; --> 171 from qutip.qobj import *; 172 from qutip.states import *; 173 from qutip.operators import *. /usr/lib/python3.6/site-packages/qutip/qobj.py in <module>(); 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.cy.ptrace import _ptrace; 62 from qutip.permute import _permute. /usrl/lib/python3.6/site-packages/qutip/fastsparse.py in <module>(); 35 from scipy.sparse import (_sparsetools, isspmatrix, isspmatrix_csr,; 36 csr_matrix, coo_matrix, csc_matrix, dia_matrix); ---> 37 from scipy.sparse.sputils import (upcast, upcast_char, to_native, isdense, isshape,; 38 getdtype, isscalarlike, IndexMixin, get_index_dtype); 39 from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning. ImportError: cannot import name 'IndexMixin'. ```. And actually `IndexMixin` is no longuer in `scipy.sparse.sputils`. It seems to be now in `scipy/sparse/_index.py `. It's maybe trivial to fix, but I don't have time right now. In few weeks I could be available for help if needed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/999:1435,avail,available,1435,https://qutip.org,https://github.com/qutip/qutip/issues/999,1,['avail'],['available']
Availability,"Hi,. Yes, I know, that's why I added the md file. I updated it now, thanks,; adding more info on general resources to learn about QuTiP and more; references to the #3 project, i.e. your blog and the talk.; https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2020. Neill, Alex, if you have a lead, please add a HEOM project. Bests,. Nathan. Dr. Nathan Shammah; Postdoctoral Research Scientist; Theoretical Quantum Physics Laboratory; RIKEN, Wako, Saitama, Japan; www.nathanshammah.com. On Tue, Feb 25, 2020 at 5:10 PM Boxi Li <notifications@github.com> wrote:. > Hi Nathan,; >; > I can't modify the Wiki page because I'm not a maintainer of QuTiP. And it; > seems that there is no way to make a PR to Wiki. I can also send you the; > markdown source code per email like this, but I’m not sure if it works as I; > expected.; >; > The following is the markdown source code:; >; > -----------------------------------; > ## 1. Error mitigation in QuTiP; > From the QuTiP 4.5 release, the qutip.qip module now contains the noisy; > quantum circuit simulator (which was a GSoC project) providing enhanced; > features for a pulse-level description of quantum circuits and noise; > models. A new class `Processor` and several subclasses are added to; > represent different platforms for quantum computing. They can transfer a; > quantum circuit into the corresponding control sequence and simulate the; > dynamics with QuTiP solvers. Different noise models can be added to; > `qutip.qip.noise` to simulate noise in a quantum device.; >; > This module is still young and many features can be improved, including; > new device models, new noise models and integration with the existing; > general framework for quantum circuits (`qutip.qip.circuit`). There are; > also possible applications such as error mitigation techniques [1-3].; >; > The tutorial notebooks can be found at; > http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM; > conference may help you get an overview (; > ht",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553:928,Error,Error,928,https://qutip.org,https://github.com/qutip/qutip/issues/1184#issuecomment-590741553,1,['Error'],['Error']
Availability,"Hi,; I had a similar issue recently. See; https://stackoverflow.com/questions/11912878/gcc-error-gcc-error-trying-to-exec-cc1-execvp-no-such-file-or-directory. The second suggestion. sudo apt-get update; sudo apt-get install --reinstall build-essential. worked for me. Best of luck with it. Alex. On Thu, 13 Jun 2019 at 09:32, PZJuly <notifications@github.com> wrote:. > Dear all,; >; > I'm trying to install the latest release of QuTip on Ubuntu system. Since; > our workstation hasn't been connected to internet, I; > downloaded Anaconda3-2019.03-Linux-x86_64 and qutip-4.3.1.tar, and attempt; > to install from source code.; >; > Firstly I successfully installed Anaconda with the command:; > bash ~/Downloads/Anaconda3-2019.03-Linux-x86_64.sh; >; > Then in the conda environment I typed the command:; > python setup.py install; >; > I get the following error message:; >; > gcc -pthread -B /home/pz/anaconda3/compiler_compat -Wl,--sysroot=/; > -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -fPIC -Iqutip/cy; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/lib/python3.7/site-packages/numpy/core/include; > -I/home/pz/anaconda3/include/python3.7m -c qutip/cy/spmatfuncs.cpp -o; > build/temp.linux-x86_64-3.7/qutip/cy/spmatfuncs.o -w -O3 -march=native; > -funroll-loops; > gcc: error trying to exec 'cc1plus': execvp: No such file or directory; > error: command 'gcc' failed with exit status 1; >; > It seems the gcc compiler isn't correctly located? Or what else problem.; >; > I checked the gcc version on the workstation:; > gcc --version; > gcc (Ubuntu 8.3.0-6ubuntu1~18.10) 8.3.0; > Copyright (C) 2018 Free Software Foundation, Inc.; > This is free software; see the source for copying conditions. There is NO; > warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.; >; > whereis gcc; > gcc: /usr/bin/gcc /usr/lib/gcc /usr/share/man/man1/gcc.1.gz; >; > How can I direct the installer to find the gcc compiler?; >; > Thanks!; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/946#issuecomment-501609220:91,error,error-gcc-error-trying-to-exec-,91,https://qutip.org,https://github.com/qutip/qutip/issues/946#issuecomment-501609220,4,"['Down', 'down', 'error']","['Downloads', 'downloaded', 'error', 'error-gcc-error-trying-to-exec-']"
Availability,"Hi,; I just recently installed qutip on Canopy using a Windows Binary. When I try to run one of the tests, e.g. test_wigner.py, I get this error:. ---. AttributeError Traceback (most recent call last); C:\Users\David Feng\Desktop\qutip-3.1.0\qutip\tests\test_wigner.py in <module>(); 37 from numpy.testing import assert_, run_module_suite, assert_equal; 38 ; ---> 39 from qutip.states import coherent, fock; 40 from qutip.wigner import wigner; 41 from qutip.random_objects import rand_dm, rand_ket. C:\Users\David Feng\Desktop\qutip-3.1.0\qutip__init__.pyc in <module>(); 60 qutip.settings.ipython = True; 61 except:; ---> 62 qutip.settings.ipython = False; 63 ; 64 # -----------------------------------------------------------------------------. AttributeError: 'module' object has no attribute 'settings' . The AttributeError also appears when I simply try to import qutip from the command line. I'm not too familiar with Python scripting so any assistance on the matter would be greatly appreciated. Thank you!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/469:139,error,error,139,https://qutip.org,https://github.com/qutip/qutip/issues/469,1,['error'],['error']
Availability,"Hi,; I'm running qutip on the latest Ubuntu LTS version in 64 bit. All required packages (gfortran etc.) are installed from the repository. No matter if I use the qutip package from the repository or compile it from source, the testing results into 3 errors:. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ok; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... ok; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Consistency between transformations of kets and denstity matrices ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 2.84e+15); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > > > correlation: compare spectrum obtained for eseries and fft methods ... /usr/lib/python2.7/dist-packages/scipy/sparse/linalg/dsolve/umfpack/umfpack.py:576: UmfpackWarning: (almost) singular matrix! (estimated cond. number: 1.67e+12); > > > warnings.warn(msg, UmfpackWarning); > > > ok; > >",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126:251,error,errors,251,https://qutip.org,https://github.com/qutip/qutip/issues/126,1,['error'],['errors']
Availability,"Hi,; I'm trying to use `mesolve` using a sampled hamiltonian to be interpolated (_list array format_ according to [the doc](https://qutip.org/docs/latest/apidoc/functions.html?highlight=mesolve#module-qutip.mesolve)) with a `tlist` that isn't the time list `times` of the Hamiltonian coefficients, but a sublist `eval_times` of `times`. This method works fine and returns the results at `eval_times` when `c_ops=[]`, but if I specify collapse operators, I get a `tlist are not compatible` error. Here is an example of what I'm saying.; ```python; times = np.linspace(0, 1, 100); x = np.cos(2*np.pi * times); eval_times=times[0:-1:3]; rho = qutip.basis(2, 0).proj(); ham = qutip.QobjEvo([[qutip.sigmax(), x]], tlist=times); qutip.mesolve(ham, rho0=rho, tlist=eval_times, c_ops=[]) # works fine; collapse = [qutip.qeye(2)] ; qutip.mesolve(ham, rho0=rho, tlist=times, c_ops=collapse) # works fine as well; qutip.mesolve(ham, rho0=rho, tlist=eval_times, c_ops=collapse) # raises `tlist are not compatible` error; ```. Do you have any idea what might cause this behaviour ? I believe this might be an issue with the `mesolve` solver, since when you don't specify `c_ops`, you use `sesolve`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1560:489,error,error,489,https://qutip.org,https://github.com/qutip/qutip/issues/1560,2,['error'],['error']
Availability,"Hi,; There are many methods for the steadystate solver, some are faster, some are less stable. I would suggest trying other method until your find a good one for your problem.; Available method are: ; `'direct', 'eigen', 'iterative-gmres', 'iterative-lgmres', 'iterative-bicgstab', 'svd', 'power', 'power-gmres', 'power-lgmres', 'power-bicgstab'`. `'direct'` and `'power'` can use mkl as a solver, all can use scipy. You can also try to change some options such as the tolerance and max iteration number. ; The options for each solver are different depending on the solver and not all are documented. ; I list them here if you want to go deeper:. For scipy:; ```; 'sparse': True, ; 'use_rcm': False,; 'use_wbm': False, ; 'weight': None, ; 'use_precond': False,; 'all_states': False, ; 'M': None, ; 'x0': None, ; 'drop_tol': 1e-4,; 'fill_factor': 100, ; 'diag_pivot_thresh': None, ; 'maxiter': 1000,; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None,; 'permc_spec': 'COLAMD', ; 'ILU_MILU': 'smilu_2',; 'restart': 20, ; 'return_info': False,; 'info': _empty_info_dict(),; 'verbose': False, ; 'solver': 'scipy'; ```. For mkl:; ```; 'max_iter_refine': 10, ; 'scaling_vectors': True, ; 'weighted_matching': True, ; 'return_info': False, ; 'info': _empty_info_dict(), ; 'verbose': False, ; 'solver': 'mkl', ; 'use_rcm': False, ; 'use_wbm': False, ; 'weight': None, ; 'tol': 1e-12, ; 'matol': 1e-15, ; 'mtol': None, ; 'maxiter': 1000; ```. Lastly, most steadystate's method have a logger if you activate debug in setting:; ```; import qutip.settings as settings; settings.debug = True; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834:177,Avail,Available,177,https://qutip.org,https://github.com/qutip/qutip/issues/1077#issuecomment-527620834,2,"['Avail', 'toler']","['Available', 'tolerance']"
Availability,"Hi,; This seems to ba accumulation of numerical error.; You can increase the solver precision (atol, rtol, max_step) in options:; `sesolve(..., options=qutip.Options(atol=1e-9)`.; You could also remove the normalization of the state `Options(normalize_output=False)`, then the error will not spread to the ""010"" state.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085#issuecomment-531283266:48,error,error,48,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531283266,2,['error'],['error']
Availability,"Hi. By clarifying the data types `_data.solve(_data.CSR(A),_data.Dense(V))`, Typeerror stops, but Attribute error occurred instead.; ```; qutip/solver/countstat.py:221: in countstat_current_noise; current, noise = _noise_direct(L, wlist, rhoss, J_ops); qutip/solver/countstat.py:118: in _noise_direct; X_rho = [_data.dense.fast_from_numpy(_solve(A, op)); qutip/solver/countstat.py:118: in <listcomp>; X_rho = [_data.dense.fast_from_numpy(_solve(A, op)); qutip/core/data/dense.pyx:215: in qutip.core.data.dense.fast_from_numpy; cpdef Dense fast_from_numpy(object array):; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ . > if array.ndim == 1:; E AttributeError: 'qutip.core.data.dense.Dense' object has no attribute 'ndim'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2109#issuecomment-1459917369:108,error,error,108,https://qutip.org,https://github.com/qutip/qutip/issues/2109#issuecomment-1459917369,1,['error'],['error']
Availability,"Hi. I replaced scipy wrapper with _data.solve. I ran pytest and error occurred. Does anybody know how to solve this? Thank you. File ""qutip/core/data/dispatch.pyx"", line 582, in qutip.core.data.dispatch.Dispatcher.__call__; raise TypeError(""unknown types to dispatch on: "" + str(dispatch)) from None; TypeError: unknown types to dispatch on: [<class 'scipy.sparse._csr.csr_matrix'>, <class 'numpy.ndarray'>]; Traceback (most recent call last):; File ""/root/opt/qutip/qutip/solver/countstat.py"", line 83, in _solve; return _data.solve(A, V, ""splu"")",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2109#issuecomment-1458453064:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/issues/2109#issuecomment-1458453064,1,['error'],['error']
Availability,"Hi. I've been trying to use the Platen solver for ssesolve but it doesn't seem to work. Running the code below produces an error. Here's the code:; ```; from qutip import *; import numpy as np. N = 15; w0 = 1.0 * 2 * np.pi; A = 0.1 * 2 * np.pi; times = np.linspace(0, 1.5, 150); gamma = 0.25. ntraj = 1; nsubsteps = 1. a = destroy(N); x = a + a.dag(); y = -1.0j*(a - a.dag()). H = w0 * a.dag() * a + A * (a + a.dag()). rho0 = coherent(N, np.sqrt(5.0), method='analytic'); c_ops = [np.sqrt(gamma) * a]; e_ops = [a.dag() * a, x, y]. result = ssesolve(H, rho0, times, [np.sqrt(gamma) * a], e_ops, ntraj=ntraj, nsubsteps=nsubsteps, method='homodyne', map_func=parallel_map, solver='platen'); ```. Here's the error:; ```; Traceback (most recent call last):; File ""test.py"", line 23, in <module>; result = ssesolve(H, rho0, times, [np.sqrt(gamma) * a], e_ops, ntraj=ntraj, nsubsteps=nsubsteps, method='homodyne', map_func=parallel_map, solver='platen'); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 377, in ssesolve; res = _ssesolve_generic(sso, sso.options, sso.progress_bar); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 758, in _ssesolve_generic; task_args, task_kwargs, **map_kwargs); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/parallel.py"", line 183, in serial_map; result = task(value, *task_args, **task_kwargs); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 859, in _ssesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/home/paul/anaconda3/envs/bistable/lib/python2.7/site-packages/qutip/stochastic.py"", line 1843, in _rhs_psi_platen; d1(A, psi_t) * dt +; TypeError: d1_psi_homodyne() takes exactly 4 arguments (2 given). ```; I've rewritten the _rhs_psi_platen function to fix this issue. Would you like me to make a pull request?; ~",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/857:123,error,error,123,https://qutip.org,https://github.com/qutip/qutip/issues/857,2,['error'],['error']
Availability,"Hi. Thanks, but I am now getting a new error. If the code is-. `from qutip import *. import numpy as np. import matplotlib.pyplot as plt. print(Qobj())`. Then there is no error whatsoever. If the code is-. `from qutip import *. import numpy as np. import matplotlib.pyplot as plt. print(Qobj()). print(Qobj([[1],[2],[3],[4],[5]]))`. Then it gives expected result if I run it first thing after launching spyder. But if I have already run any qutip code and then try to run this code, then I get the following error-. File ""/home/premkr/.local/lib/python3.7/site-packages/scipy/sparse/base.py"", line 283, in __bool__; raise ValueError(""The truth value of an array with more than one "". ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(). The full error message is-. runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'); Traceback (most recent call last):. File ""<ipython-input-2-af424448e75a>"", line 1, in <module>; runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 678, in runfile; execfile(filename, namespace). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 106, in execfile; exec(compile(f.read(), filename, 'exec'), namespace). File ""/home/premkr/Dropbox/work/python/qutip/gksl_learning.py"", line 19, in <module>; print(Qobj([[1],[2],[3],[4],[5]])). File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/qobj.py"", line 256, in __init__; _tmp = sp.csr_matrix(data, dtype=complex). File ""/home/premkr/.local/lib/python3.7/site-packages/scipy/sparse/compressed.py"", line 86, in __init__; self._set_self(self.__class__(coo_matrix(arg1, dtype=dtype))). File ""/home/premkr/.local/lib/python3.7/site-packages/scipy/sparse/compressed.py"", line 86, in __init__; self._set_self(self.__class__(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121#issuecomment-1469601223:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/issues/2121#issuecomment-1469601223,4,['error'],['error']
Availability,Hmm. It would be nice to get the results that succeeded. What if we made a single exception class that was used by all the functions and which contained all the errors and all the results? Then everyone can catch the same exception class and decide what to do with all the results and errors?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969#issuecomment-1209413844:161,error,errors,161,https://qutip.org,https://github.com/qutip/qutip/pull/1969#issuecomment-1209413844,2,['error'],['errors']
Availability,"Hmm. Travis didn't run on the force-pushed version. That's frustrating, particularly because I was force-pushing to correct a silly error that CI caught.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-603230950:132,error,error,132,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-603230950,1,['error'],['error']
Availability,"Hmmm. Now the documentation build works, and the macos test run works as well (except for unrelated test failures). The python 3.9 test runs fails to build mpi4py. Here, the problem solution would be [this](https://stackoverflow.com/a/73399242) (I've had the same problem before installing mpi4py on the RIKEN HPC). Should I add that?. All other test runs fail, seemingly because the first call to `mpi_pmap` hangs indefinitely. That's... hard to debug. Why would it work only on macos?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1905456136:105,failure,failures,105,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1905456136,1,['failure'],['failures']
Availability,"Hopefully `sin(t) if t > 4 else cos(t)` should work for you?. Internally the relevant data structures either compile standard Python to code objects or go native via Cython, so the rule of thumb is ""would `eval(my_string)` give me what I want?"". QuTiP provides some basic wrapping of the scoping rules so things like `t` are available, and the standard numpy functions `sin`, `cos`, etc., are available without needing the namespace, but it's not got a full DSL for specifying time-dependence - it just uses regular Python.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1240#issuecomment-620486072:325,avail,available,325,https://qutip.org,https://github.com/qutip/qutip/issues/1240#issuecomment-620486072,2,['avail'],['available']
Availability,How do I fix this error on win64 conda?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702#issuecomment-471319003:18,error,error,18,https://qutip.org,https://github.com/qutip/qutip/issues/702#issuecomment-471319003,1,['error'],['error']
Availability,How to find eigenvalues of Hamiltonian from eigenenergies( ) command.For Hamiltonian it gives error 'list' object has no attribute 'eigenenergies''; I am using Hamiltonian ; H = wc * a.dag() * a + wm * bv.dag() * bv+ wv * bm.dag() * bm + g * (a.dag() * bv + bv.dag()* a)-g * (a.dag() * bm + bm .dag()*a) ; command is like H.eigenenergies( ),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/918:94,error,error,94,https://qutip.org,https://github.com/qutip/qutip/issues/918,1,['error'],['error']
Availability,"I actually have a question about this automatic normalization. Do we really need this to hide the numerical errors? Wouldn't it be better to just expose the error since it will be proportional to `atol` anyway (and if not, something went wrong)? Which group of users will this auto-normalization benefit?. Sometimes an unnormalised state at the ends can also indicate that there is something wrong with the Hamiltonian, e.g., it is not hermitian due to some typos.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2427#issuecomment-2115886018:108,error,errors,108,https://qutip.org,https://github.com/qutip/qutip/pull/2427#issuecomment-2115886018,2,['error'],"['error', 'errors']"
Availability,"I added a test that compares `correlation_2op_1t` to its analytical solution. I was trying to match the `c_ops` of this new test to the ones appearing in `test_correlation_solver_equivalence`, which are:; ` c_ops = [np.sqrt(G1 * (n_th+1)) * a,; np.sqrt(G1 * n_th) * a.dag()]; `; However, the analytical solution I obtained for this case did not work unless I used a very small value for `n_th = 0.1`. I was wondering whether the analytical solution I got was wrong or whether this actually makes sense. I was thinking that the difference probably comes from the cut we use for the number of states (`N = 20`). The new test for `correlation_2op_1t` should be very robust as it tests for a lot of different scenarios, including the one presented in #1460. I was wondering whether these were too many cases.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-813359081:663,robust,robust,663,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-813359081,1,['robust'],['robust']
Availability,"I added all the suggested changes. However, now the tets for trace norm with csr matrices started failing (in particular `TestTraceNorm.test_mathematically_correct[CSR[square,sparse]->Number]`). Decreasing the tolerance to `1e-8` solves the problem but given that this was not a problem before (at least I do not remember this happening), I wonder if it is actually signaling that there is something wrong.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-929280362:210,toler,tolerance,210,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-929280362,1,['toler'],['tolerance']
Availability,"I added support for `nan`.; But most `CSR` operation are not careful about them, `mul` as a fast pass that `*0` return a new zeros matrix without ever reading the original array. I believe that instead of supporting `nan`, operation that could create `nan` should raise an error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1670#issuecomment-928390255:273,error,error,273,https://qutip.org,https://github.com/qutip/qutip/pull/1670#issuecomment-928390255,1,['error'],['error']
Availability,I added the test in `qutip/tests/test_correlation.py` and pytest returns no errors. Why not put it inside the `qutip/tests/test_steadystate.py` file instead?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1660#issuecomment-917597103:76,error,errors,76,https://qutip.org,https://github.com/qutip/qutip/pull/1660#issuecomment-917597103,1,['error'],['errors']
Availability,"I agree we need to be consistent, but I would also go with `matrix * Qobj` to be right and change `Qobj * array` to raise an error.; `Qobj * Qobj` can be understood as `Qobj @ Qobj` but everything else could use `mul`. If `mul` raise a `TypeError`, we can catch it and return `NotImplemented`. With this, we probably won't need to touch the `Dense` and `CSR` `mul` function and `Variable` will be passed to the `TfTensor` specialization.; The only issue I see is that sometime `Variable * Qobj` will work, other time it will not exist.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-880821814:125,error,error,125,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-880821814,1,['error'],['error']
Availability,"I agree with this, with some additional points:; 1. `QobjEvo` also needs to be handled by `__matmul__`, but this should be handled by returning `NotImplemented`, and letting `QobjEvo.__rmul__` dispatch it to `QobjEvo.__rmatmul__`.; 1. however we choose to do this, `__mul__` should return `NotImplemented` if the other element can't be handled correctly; it shouldn't raise an exception by itself. The ""Pythonic"" way is to try/catch an exception in handling, but this just means we need to be sure that all `__mul__` methods do proper error checking, and _do_ reject invalid input rather than just silently doing weird stuff.; 1. what do we want to do in response to being multiplied with Numpy arrays? We have to be careful, because otherwise we might do very different things depending on whether we're being multiplied from the left or right by the Numpy array, which isn't really desirable. My first instinct is to say we should make ourselves appear as a scalar type to Numpy, so it broadcasts the multiplication over the scalar values in its array. To do that, we may need to play a little with `__array__`, `__array_ufunc__` and `__array_function__`, and return `NotImplemented` from `Qobj.__mul__(array)`. I think this maybe gives the most useful behaviour? I can't imagine a situation where it would make sense for a data-layer type to accept a Numpy array in a scalar-multiplication routine, and doing things this way allows people to use the broadcasting support of Numpy for convient looping. Just for posterity, I'm really strongly against any automatic promotion to `Qobj`, with the exception of handling scalar numbers in `__add__` and `__sub__`, where mathematical convention is that they mean the relevant identity operator scaled by the scalar. Having that is also necessary to have `sum()` work with `Qobj` ergonomically. I know that's not the suggestion here, just thought I'd mention it again!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-882613672:535,error,error,535,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-882613672,1,['error'],['error']
Availability,"I also get no error. The user already has access to Q.data, so if this is what they want, then it is already available. I do not see any benefit of changing the display output.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/432#issuecomment-184881219:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/issues/432#issuecomment-184881219,2,"['avail', 'error']","['available', 'error']"
Availability,I also switched the `general_stochastic` parameter checking exceptions type from `Exception` to:; `TypeError` for incorrect object type; `ValueError` for some incorrect property of object; `RuntimeError` for unknown source of error. I think this is good practice.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1115#issuecomment-546778114:226,error,error,226,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546778114,1,['error'],['error']
Availability,I am able to reproduce locally. Both with scipy 1.1 and 0.19; both with libopenblas 0.2.20. The `sp.linalg.eigsh` call generates the seg fault. Seems it this is a known issue with anaconda openblas; https://github.com/scipy/scipy/issues/7667. I have read many other related posts:; https://github.com/opencobra/memote/issues/383; https://github.com/numpy/numpy/issues/613. This one suggests a fix with openblas 0.2.17 (not anaconda though); https://github.com/mingwpy/mingwpy/issues/2,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/871#issuecomment-393906614:137,fault,fault,137,https://qutip.org,https://github.com/qutip/qutip/issues/871#issuecomment-393906614,1,['fault'],['fault']
Availability,"I am afraid it was last week, and I can't remember the details. The error was always related to OSX version mavericks or later not being compatible with gcc48.; Again these steps may not be exact, but this is what I think we did:; 1. Install HomeBrew; ruby -e ""$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)""; 2. Install scipy and cython; brew install scipy; brew install cython",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265#issuecomment-64205641:68,error,error,68,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64205641,1,['error'],['error']
Availability,"I am closing this: change to the documentation are redundant to previous PRs. The `requirements.txt` file refers to the packages needed to use qutip, which we keep to a minimum. Modules required to build the documentation are in `doc/requirements.txt`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1764#issuecomment-1014778988:51,redundant,redundant,51,https://qutip.org,https://github.com/qutip/qutip/pull/1764#issuecomment-1014778988,1,['redundant'],['redundant']
Availability,"I am distributing some qutip code to several cores. I want to enforce that qutip only uses one core per job with qutip.settings.num_cpus=1, but it is not working, the processes still take all the processors of my machine, so that if I have N cores, the multiprocessing ends up using N*N threads, slowing things down a lot! How can I force qutip to use only 1 core? Currently loading like this:. ```; from qutip import create, destroy, Qobj, expect, tensor, qeye, fidelity, basis, variance, settings; from pathos.multiprocessing import ProcessingPool. settings.num_cpus = 1; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1175:311,down,down,311,https://qutip.org,https://github.com/qutip/qutip/issues/1175,1,['down'],['down']
Availability,"I am getting a variety of errors when running the test scripts under OSX:; - For `test_mcsolve_cl_time_dep_h` I get ""atol could not be reached for 1 trajectories"". I am also seeing:. ""CompilerWarning: Non-empty compiler output encountered. Set the environment variable PYOPENCL_COMPILER_OUTPUT=1 to see more.; ""to see more."", CompilerWarning)"". ""AttributeError: 'NoneType' object has no attribute 'clobj__delete'; Exception ignored in: <object repr() failed>""",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/554#issuecomment-259602577:26,error,errors,26,https://qutip.org,https://github.com/qutip/qutip/pull/554#issuecomment-259602577,1,['error'],['errors']
Availability,I am getting the same error using Python 3.6 and qutip 4.1,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/671#issuecomment-401908455:22,error,error,22,https://qutip.org,https://github.com/qutip/qutip/issues/671#issuecomment-401908455,1,['error'],['error']
Availability,I am guessing that the test has too low a tolerance. Also not sure about the two tests. Didnt see it a day or two ago.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/721#issuecomment-316063869:42,toler,tolerance,42,https://qutip.org,https://github.com/qutip/qutip/pull/721#issuecomment-316063869,1,['toler'],['tolerance']
Availability,I am happy to review this. ; Tests seem to be failing with:; ```; ERROR: Failure: ModuleNotFoundError (No module named 'piqs'); ```; Perhaps this could be fixed first,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/753#issuecomment-361266618:66,ERROR,ERROR,66,https://qutip.org,https://github.com/qutip/qutip/pull/753#issuecomment-361266618,2,"['ERROR', 'Failure']","['ERROR', 'Failure']"
Availability,I am happy with the changes and explanations. ; I see the Python2.7 check has failed though. I am not sure what the error message implies. @cgranade do you have any idea?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358#issuecomment-128688035:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/pull/358#issuecomment-128688035,1,['error'],['error']
Availability,"I am having some trouble with the function mesolve. The situation is the following: I have a collection of Hamiltonians and Jump Operators which includes 69 timesteps each, and I want to evolve a initial state to each of this timesteps. However, Qutip is returning ""Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class."". I tryied to change nsteps parameter but it just doesnt work for any value of it, no matter how big the number is. H= Hamiltonian, shape: 69,2,2; list_Jump-op= Jump operators, shape:69,2,2; time= timesteps, shape (69,); estados_val= the different states that I want to evolve on this dynamics, shape( 6,69,2,2) . Note that I am only taking the 0th element on the axis with lenght of 69. predictions=[mesolve(H,; Qobj(estados_val[i][0]),; time,list_Jump_op,options=Options(nsteps=10000000000000000)) for i in range(len(estados_val))]. The terminal out put is; /home/andrius/anaconda3/lib/python3.8/site-packages/scipy/integrate/_ode.py:1013: UserWarning: zvode: Excess accuracy requested. (Tolerances too small.); warnings.warn('{:s}: {:s}'.format(self.__class__.__name__,; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-11-0bc27bfd6f01> in <module>; 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. <ipython-input-11-0bc27bfd6f01> in <listcomp>(.0); 40 ; 41 la=10000000000000000; ---> 42 predictions=[mesolve(H,; 43 Qobj(estados_val[i][0]),; 44 time[1:],list_Jump_op,options=Options(nsteps=la)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605:293,error,error,293,https://qutip.org,https://github.com/qutip/qutip/issues/1605,1,['error'],['error']
Availability,"I am installing on Mac OS Catalina using the following command:. python setup.py develop --with-openmp. However, I am getting the following error:. clang: error: unsupported option '-fopenmp'; error: command 'g++' failed with exit status 1. could you please elaborate?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1230:140,error,error,140,https://qutip.org,https://github.com/qutip/qutip/issues/1230,3,['error'],['error']
Availability,"I am new to Qutip and I installed 4.3.1, and I was just trying to run the steady state solvers optomechanical script that was on Qutip's example notebooks. Running the cell ""Run Steady State Solvers"" Gives me this error:; ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-14-e1b88270a1b6> in <module>; 8 use_rcm = False; 9 rho_ss, info = steadystate(H, c_ops, method=ss, use_precond=True, ; ---> 10 use_rcm=use_rcm, tol=1e-15, return_info=True); 11 print(ss,'solution time =',info['solution_time']); 12 rho_mech = ptrace(rho_ss, 1). /anaconda3/lib/python3.6/site-packages/qutip/steadystate.py in steadystate(A, c_op_list, method, solver, **kwargs); 271 else:; 272 raise Exception(; --> 273 ""Invalid keyword argument '""+key+""' passed to steadystate.""); 274 ; 275 # Set column perm to NATURAL if using RCM and not specified by user. Exception: Invalid keyword argument 'use_precond' passed to steadystate. and I cannot seem to get around it. I am not sure why its not working, I tried to install 4.3.0 instead and it still did not function. It runs if I comment out the use_precond but I am not sure why its giving me this error and how to proceed from here.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1015:214,error,error,214,https://qutip.org,https://github.com/qutip/qutip/issues/1015,2,['error'],['error']
Availability,"I am new to quantum computing and I want to use Qutip to calculate the entanglement entropy on my M1 MacBook Pro. However, I cannot import the Qutip library into either Jupyter notebook or Python3.9. The error message as shown in follow. May I ask how to solve this problem? Thank you. . ```python; IndexError Traceback (most recent call last); <ipython-input-4-82c62ef8635d> in <module>; ----> 1 from qutip import *. /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/__init__.py in <module>; 145 # if num_cpu is 0 set it to the available number of cores; 146 import qutip.hardware_info; --> 147 info = qutip.hardware_info.hardware_info(); 148 if 'cpus' in info:; 149 qutip.settings.num_cpus = info['cpus']. /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/hardware_info.py in hardware_info(); 121 """"""; 122 if sys.platform == 'darwin':; --> 123 out = _mac_hardware_info(); 124 elif sys.platform == 'win32':; 125 out = _win_hardware_info(). /Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/qutip/hardware_info.py in _mac_hardware_info(); 46 l[1].strip('.\n '); 47 results.update({'cpus': int(info['physicalcpu'])}); ---> 48 results.update({'cpu_freq': int(float(os.popen('sysctl -n machdep.cpu.brand_string'); 49 .readlines()[0].split('@')[1][:-4])*1000)}); 50 results.update({'memsize': int(int(info['memsize']) / (1024 ** 2))}). IndexError: list index out of range; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1473:204,error,error,204,https://qutip.org,https://github.com/qutip/qutip/issues/1473,2,"['avail', 'error']","['available', 'error']"
Availability,I am not really seeing the seg fault clearly in this trace. ; Please could you add some more description in here about what exactly you doing. That is steps to replicate. Please also include details about your environment by running `qutip.about()`,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-595872761:31,fault,fault,31,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-595872761,2,['fault'],['fault']
Availability,"I am not too familiar with poetry, but it seems to try to install Qutip from source. To build, you need cython with a working c++ compiler. Usually the c++ compiler is managed by the OS, not python, so you need to install is manually. My guess it that if you can tell poetry to use Qutip's wheels available on pypi instead of building from source, it should work. But if you need to build it from source, you will need to install Microsoft Visual C++ and do some setup. See https://cython.readthedocs.io/en/latest/src/quickstart/install.html. I am not sure if there is anything we can do on our side, but if we are missing something, feel free to tell us or make a PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2322#issuecomment-1936053208:297,avail,available,297,https://qutip.org,https://github.com/qutip/qutip/issues/2322#issuecomment-1936053208,1,['avail'],['available']
Availability,"I am now trying to setup a developement environment using ```python setup.py develop``` and ```python setup.py build_ext --inplace``` but getting the error . ```; cy/stochastic.pyx: cannot find cimported module 'qutip.cy.spmatfuncs'; Appending qutip.cy configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.cy'); Appending qutip.control configuration to qutip; Ignoring attempt to set 'name' (from 'qutip' to 'qutip.control'); Traceback (most recent call last):; File ""setup.py"", line 18, in <module>; setup(**configuration(top_path='').todict()); File ""setup.py"", line 10, in configuration; if os.environ['FORTRAN_LIBS'] == 'TRUE':; File ""/usr/local/Cellar/python/2.7.12_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/UserDict.py"", line 40, in __getitem__; raise KeyError(key); KeyError: 'FORTRAN_LIBS'; ```; I have gcc and gfortran installed and I suspect this might also be due to some issue with the file paths. I will try to get a workaround and post soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-263750245:150,error,error,150,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-263750245,1,['error'],['error']
Availability,"I am running a IPython/Jupyter Notebook via [supervisor](http://supervisord.org/) which does not export the `$HOME` environment variable (this is of course easily fixable). When importing qutip, I get the following warning message:. ```; WARNING:qutip.settings:Error loading RC file.; Traceback (most recent call last):; File ""/home/mvd/miniconda3/lib/python3.4/site-packages/qutip/__init__.py"", line 138, in <module>; os.environ['HOME'], "".qutiprc""; File ""/home/mvd/miniconda3/lib/python3.4/os.py"", line 633, in __getitem__; raise KeyError(key) from None; KeyError: 'HOME'; ```. Since this is just a warning, does it mean that there are no problems, or will it have some effects?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/365:261,Error,Error,261,https://qutip.org,https://github.com/qutip/qutip/issues/365,1,['Error'],['Error']
Availability,"I am running an iterative method that requires calling mesolve many times.; At some point, the program crashes. It seems that every time mesolve is called, the list of arguments passed to the gcc complier grows. Eventually that list is too big for gcc and returns errors and stops the program. I wrote a simplified code that eventually leads to that problem. It took close to 2 hours to reproduce, and but maybe you can figure out a way to reach that point faster (faster calls ? more arguments passed to gcc to make it reach that point faster?). The screen capture shows how many calls were required in my case, how many seconds had elapsed since the program started, as well as how the error manifests. [test_qutip_error.txt](https://github.com/qutip/qutip/files/2973153/test_qutip_error.txt); <img width=""982"" alt=""Screen Shot"" src=""https://user-images.githubusercontent.com/28269924/54465696-b1034400-4739-11e9-91ab-be1fff21f057.png"">. I experienced this problem a while ago, both on my laptop and amazon instances, on Qutip 4.2.0 with Python 2.7.15. Both with the Anaconda and pip installs. Are there any ways to fix this? I need this for my research. Thank you very much !",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966:264,error,errors,264,https://qutip.org,https://github.com/qutip/qutip/issues/966,2,['error'],"['error', 'errors']"
Availability,I am running ubuntu 16.4. The following code:; rho = rand_dm(5); hinton(rho);; produces the following figure:; ![download](https://cloud.githubusercontent.com/assets/9404272/21955048/107afc22-da6b-11e6-894c-f7e03d0b7eb8.png); I am unsure as to where the issue lies since I have latex installed and the bras and kets are displayed correctly inline with jupyter.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/633:113,down,download,113,https://qutip.org,https://github.com/qutip/qutip/issues/633,1,['down'],['download']
Availability,I am still trying to understand the error:; Perhaps the pending notebook; https://github.com/qutip/qutip-notebooks/pull/51; could help you,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/820#issuecomment-366304046:36,error,error,36,https://qutip.org,https://github.com/qutip/qutip/issues/820#issuecomment-366304046,1,['error'],['error']
Availability,"I am trying to add some `.qasm` files to the folder `qutip/qutip/tests/qasm_files/` to use during test time. I thought it would be enough to add them to the `PACKAGE_DATA` variable in `setup.py` but that does not seem to work. Any ideas on how to make sure this folder is available during testing time? Beside this part, the PR is ready for review. @nathanshammah @BoxiLi",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1291#issuecomment-655893373:272,avail,available,272,https://qutip.org,https://github.com/qutip/qutip/pull/1291#issuecomment-655893373,1,['avail'],['available']
Availability,"I am trying to calculate the expectation value of Mx. It is the order parameter of a hamiltonian, and I want to calculate the phase transition of it later on. I used commend expect(Mx, H.groundstate() while I have input a hamiltonian. Here is the code and I have error as the following:. ----------------------------------------; H.groundstate(). Out[193]:; (-21.1393191156312,; Quantum object: dims = [[2, 2, 2, 2, 2, 2, 2, 2, 2, 2], [1, 1, 1, 1, 1, 1, 1, 1, 1, 1]], shape = (1024, 1), type = ket; Qobj data =; [[-0.00980414]; [ 0.01225526]; [ 0.01570169]; ...; [ 0.01570169]; [ 0.01225526]; [-0.00980414]]). **## expect(Mx, H.groundstate())**. ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-194-8e60f2d2c48d> in <module>(); ----> 1 expect(Mx, H.groundstate()). /Users/lib/python2.7/site-packages/qutip/expect.pyc in expect(oper, state); 95 dtype=complex); 96 else:; ---> 97 raise TypeError('Arguments must be quantum objects or eseries'); 98 ; 99 . **TypeError: Arguments must be quantum objects or eseries**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/805:263,error,error,263,https://qutip.org,https://github.com/qutip/qutip/issues/805,1,['error'],['error']
Availability,"I am trying to determine the relationship between Delta and the frequency of this graph. I put all the code that creates the pulse into a for loop and replaced Delta with ""x"" so the loop can run over different values. For each Delta (""x""), I use lmfit to fit the curve to a decaying oscillation equation and determine its frequency, then I plot the fit. I've noticed that the fit is worse for the lower values of Delta in the for loop. I think restricting the fit to the region over which the pulse actually acts can improve it. The pulse occurs from 0 to 0.5e-5 seconds which is half the length of the times array (1e-5). len(times) outputs 1000, so I thought I could accomplish this by writing times[0:500] and results.expect[1][0:500], but I get an error. Code:. from lmfit import Minimizer, Parameters, report_fit. h = 6.62607015e-34; b = 0.1786195317554453 #magnetic field; b_AC = 3.572390635108906e-05 #oscillating magnetic field; g = 2 #g-factor; u = 9.274E-24 #bohr magneton; w = gub/h #omega; w0 = 5e9 # omega0 is the rotating frame frequency. gamma_phi = 999000; gamma_minus = 1000. epsilon = gub/h*(2cmath.pi); Delta = gub_AC/h(2*cmath.pi). H0 = (w-w0)/2 * sz #+ Delta/2*sy. times=np.linspace(0, 0.00001, 1000); state0=(state_z_plus)/(np.sqrt(1)). for x in range(2000000,10000000,900000):. def pulse(t0,t1,t):; return np.heaviside(t-t0,2e-9)-np.heaviside(t-t1,2e-9). def H1_coeff(t,args):; t0=args['t0'] #pulse start time; t1=args['t1'] #pulse end time; phi=args['phi'] #phase; return x*pulse(t0,t1,t)*np.sin((w-w0)*t+phi). args = {""t0"":0,""t1"":0.5e-5 ,""phi"":(1/4)*np.pi}. H = [H0,[sx,H1_coeff]]. results=q.mesolve(H, state0, times, e_ops=[sx, sy, sz],c_ops=[cmath.sqrt(gamma_phi/2)*sz,cmath.sqrt(gamma_minus)*sm], options=qutip_options, args=args). def fcn2min(params, x, data):; amp = params['amp']; shift = params['shift']; omega = params['omega']; decay = params['decay']; model = amp * np.sin(x*omega + shift) * np.exp(-x*x*decay); return model - data. params = Parameters(); params.add",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1559:752,error,error,752,https://qutip.org,https://github.com/qutip/qutip/issues/1559,1,['error'],['error']
Availability,"I am trying to install qutip 3.1.0 on my MS Windows following the official steps:; 1. Install the Python(X,Y) distribution (tested with version 2.7.3.1). Other Python distributions, such as Enthought Python Distribution or Anaconda CE have also been reported to work.; 2. When installing Python(x,y), explicitly select to include the Cython package in the installation. This package is not selected by default.; 3. Add the following content to the file C:/Python27/Lib/distutils/distutils.cfg (or create the file if it does not already exists):; [build]; compiler = mingw32; [build_ext]; compiler = mingw32; The directory where the distutils.cfg file should be placed might be different if you have installed the Python environment in a different location than in the example above.; 4. Obtain the QuTiP source code and installed it following the instructions given above. However, there are some errors after i run the installation verifying process. Is there anyone came across such errors? How can I repair these errors? The errors are presented as follow:; ======================================================================; ERROR: qutip.tests.test_stochastic_me.test_ssesolve_photocurrent; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Python27\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Python27\lib\site-packages\qutip\tests\test_stochastic_me.py"", line 60, in test_ssesolve_photocurrent; map_func=parallel_map); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 527, in smesolve; res = _smesolve_generic(sso, sso.options, sso.progress_bar); File ""C:\Python27\lib\site-packages\qutip\stochastic.py"", line 870, in _smesolve_generic; task_args, task_kwargs, **map_kwargs); File ""C:\Python27\lib\site-packages\qutip\parallel.py"", line 266, in parallel_map; return [ar.get() for ar in async_res]; File ""C:\Python27\lib\multiprocessing\pool.py"", line 554, in get; rais",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/788:897,error,errors,897,https://qutip.org,https://github.com/qutip/qutip/issues/788,1,['error'],['errors']
Availability,"I am trying to install qutip with the fortran monte-carlo solver. I'm installing over a version of qutip which did not have this option, so my installation command is:. pip install --upgrade --no-deps --force-reinstall qutip --install-option=--with-f90mc. The build fails as below. It is looking for libraries which do not exist in the MKL distribution I am using. Perhaps they existed in an earlier version ? Can anyone advise how to achieve a succesful build - I think I need to modify the link line. . Any suggestions gratefully received.; Colin. /cm/shared/apps/gcc/4.8.1/bin/gfortran -Wall -g -Wall -g -shared build/temp.linux-x86_64-2.7/build/src.linux-x86_64-2.7/qutip/fortran/qutraj_runmodule.o build/temp.linux-x86_64-2.7/build/src.linux-x86_64-2.7/fortranobject.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_precision.o build/temp.linux-x86_64-2.7/qutip/fortran/mt19937.o build/temp.linux-x86_64-2.7/qutip/fortran/linked_list.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_general.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_hilbert.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_evolve.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_linalg.o build/temp.linux-x86_64-2.7/qutip/fortran/qutraj_run.o build/temp.linux-x86_64-2.7/build/src.linux-x86_64-2.7/qutip/fortran/qutraj_run-f2pywrappers2.o -L/cm/shared/apps/intel/composer_xe/2013_sp1.3.174/mkl/lib/intel64 -L/cm/shared/apps/python/2.7.9/lib -Lbuild/temp.linux-x86_64-2.7 -lzvode -lmkl_lapack32 -lmkl_lapack64 -lmkl_rt -lpthread -lmkl_lapack32 -lmkl_lapack64 -lmkl_rt -lpthread -lpython2.7 -lgfortran -o build/lib.linux-x86_64-2.7/qutip/fortran/qutraj_run.so; /usr/bin/ld: cannot find -lmkl_lapack32; collect2: error: ld returned 1 exit status",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/491:1699,error,error,1699,https://qutip.org,https://github.com/qutip/qutip/issues/491,1,['error'],['error']
Availability,"I am trying to run this code to test mcsolve():; ```; import numpy as np; from qutip import *. def hamiltonian_t(t, args):; #; # evaluate the hamiltonian at time t. ; #; H0 = args['H0']; H1 = args['H1']; w = args['w']. return H0 + H1 * np.sin(w*t). N = 2 # set where to truncate Fock state for cavity; a = destroy(N); psi0 = basis(N, 0) # define initial state. w_c = 1.0 * 2 * np.pi # cavity frequency; w = w_c; kappa = 0.001 * 2 * np.pi. H0 = w_c * a.dag()*a # time-independent term; H1 = kappa*(a.dag() + a) # time-dependent term. c_ops = [] # Build collapse operators; c_ops.append(np.sqrt(kappa) * a). args = {'H0': H0, 'H1': H1, 'w': w}. times = np.linspace(0, 10, 100) # define time vector. output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); ```. I am getting this error:; ```; Traceback (most recent call last):; File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 365, in run_test; rhs, ode_args = self.ss.makefunc(ss); NameError: name 'ss' is not defined. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""mc_solve_example2.py"", line 33, in <module>; output = mcsolve(hamiltonian_t, psi0, times, c_ops, [a.dag()*a], args=args); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 223, in mcsolve; mc.run_test(); File ""/usr/local/lib64/python3.6/site-packages/qutip/mcsolve.py"", line 368, in run_test; raise Exception(""Error calculating H""); Exception: Error calculating H; ```. Here is the output of qutip.about(); ```; QuTiP Version: 4.5.1; Numpy Version: 1.18.4; Scipy Version: 1.4.1; Cython Version: 0.29.19; Matplotlib Version: 3.2.1; Python Version: 3.6.8; Number of CPUs: 112; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```. Any advice how to fix that?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1368:797,error,error,797,https://qutip.org,https://github.com/qutip/qutip/issues/1368,3,"['Error', 'error']","['Error', 'error']"
Availability,"I am trying to use code from User Guide's [Directly Generating an Animation section](http://qutip.org/docs/4.1/guide/guide-bloch.html?highlight=funcanimation#directly-generating-an-animation):. ```; ani.save('bloch_sphere.mp4', fps=20, clear_temp=True); ```. I get the following error:; ```; Traceback (most recent call last):; File ""bloch_test.py"", line 59, in <module>; ani.save('bloch_sphere.mp4', fps=20, clear_temp=True); TypeError: save() got an unexpected keyword argument 'clear_temp'; ```. It looks like OpenDrift may have had the same or similar issue:; https://github.com/OpenDrift/opendrift/issues/9. My hypothesis is that QuTip needs to be adapted to the newer version of Matplotlib.; According to ; ```; from qutip import *; about(); ```; I use Matplotlib version: 2.1.1.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/798:279,error,error,279,https://qutip.org,https://github.com/qutip/qutip/issues/798,1,['error'],['error']
Availability,I am trying to use heterodyne simulation using built in milstein solver. It gives me error. . Looking at the code it seems that internally milstein solver is converting heterodyne problem into two homodyne problems. Which is fine. But not quite implemented correctly. Can you please update me on this? I will be willing to provide a patch.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/239:85,error,error,85,https://qutip.org,https://github.com/qutip/qutip/issues/239,1,['error'],['error']
Availability,I am unable to open slides that were provided on [FOSDEM 2020 presentation](https://archive.fosdem.org/2020/schedule/event/quantum_qutip/). I am able to download the slides but I don't know what format these slides are in. . This presentation was references[ here](https://github.com/qutip/qutip/wiki/Google-Summer-of-Code-2021#1-error-mitigation-in-qutip).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1467:153,down,download,153,https://qutip.org,https://github.com/qutip/qutip/issues/1467,2,"['down', 'error']","['download', 'error-mitigation-in-qutip']"
Availability,I am using Debian and when I build QuTiP with GCC 5 it passes all modules in qutip.tests. But with GCC 6 it gives a lot of errors in the tests. I am not sure if this is related to your problem @bastikr but hope it gives you some insight.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681#issuecomment-292649790:123,error,errors,123,https://qutip.org,https://github.com/qutip/qutip/issues/681#issuecomment-292649790,1,['error'],['errors']
Availability,"I am using GRAPE to identify optimal pulse sequences to produce a desired unitary, and am running into an error when I use optimize_pulse_unitary for sparse matrices of size 1296x1296 and larger. . For example, the following code works for N=2 but fails for N=>3:. ```python; import numpy as np; from qutip import *; from scipy.sparse import csr_matrix; import qutip.logging_utils as logging; logger = logging.get_logger(); #Set this to None or logging.WARN for 'quiet' execution; log_level = logging.INFO; #QuTiP control modules; import qutip.control.pulseoptim as cpo; import math. # Set parameters; chi = 2.2 * 2 * np.pi # coupling strength; N = 3 # number of cavity states; n_ts = 21 # number of discrete time steps; evo_time = 4. # Length of time; fid_err_targ = 1e-10 # Target fidelity error; max_iter = 0 # # Maximum iterations for the optimization algorithm; max_wall_time = 0 # Maximum (elapsed) time; min_grad = 1e-20 # Minimum gradient; p_type = 'SINE' # pulse type (RND|ZERO|LIN|SINE|SQUARE|SAW|TRIANGLE); f_ext = ""pulsedata.txt"" # output file. # Set operators and Hamiltonians. # operators; a = tensor(destroy(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)); b = tensor(qeye(N), destroy(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)); c = tensor(qeye(N), qeye(N), destroy(N), qeye(N), qeye(2), qeye(2), qeye(2), qeye(2)); d = tensor(qeye(N), qeye(N), qeye(N), destroy(N), qeye(2), qeye(2), qeye(2), qeye(2)); sm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), destroy(2), qeye(2), qeye(2), qeye(2)); zm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), destroy(2), qeye(2), qeye(2)); tm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), destroy(2), qeye(2)); qm = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), qeye(2), qeye(2), destroy(2)); P_se = tensor(qeye(N), qeye(N), qeye(N), qeye(N), basis(2, 1) * basis(2, 1).dag(), qeye(2), qeye(2), qeye(2)); P_ze = tensor(qeye(N), qeye(N), qeye(N), qeye(N), qeye(2), basis(2, 1) * basis(2, 1).d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/issues/1617,2,['error'],['error']
Availability,"I am using anaconda and qutip on Win10 system with VS2015 (community version). When solving Hamiltonian with time dependent coefficients, I get an ""ImportError"" that caused by cython which does not occur on linux. I've re-installed VS2015 and qutip many times, but this problem still exists. Is there any way to solve it? Here is my error message. **ImportError: Building module rhs22280 failed: [""distutils.errors.CompileError: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio 14.0\\\\VC\\\\bin\\\\cl.exe' failed with exit status 2\n""]**. [error_message.txt](https://github.com/qutip/qutip/files/3317876/error_message.txt)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026:333,error,error,333,https://qutip.org,https://github.com/qutip/qutip/issues/1026,2,['error'],"['error', 'errors']"
Availability,"I am using spyder. When I run the code once by pressing F5 button, then I get expected behaviour. But when I press F5 again, then I get error. If I modify the code and press F5, same error. If I restart spyder, then again I do not get any error on the first run, but the error repeats on subsequent runs. Yes, just running `import qutip` also gives the same error. I guess you are asking for the full error message and not just the last two lines. Here it is for `import qutip` for two subsequent runs.-. IN [1]: runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'). IN [2]: runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'); Traceback (most recent call last):. File ""<ipython-input-2-af424448e75a>"", line 1, in <module>; runfile('/home/premkr/Dropbox/work/python/qutip/gksl_learning.py', wdir='/home/premkr/Dropbox/work/python/qutip'). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 678, in runfile; execfile(filename, namespace). File ""/usr/lib/python3/dist-packages/spyder_kernels/customize/spydercustomize.py"", line 106, in execfile; exec(compile(f.read(), filename, 'exec'), namespace). File ""/home/premkr/Dropbox/work/python/qutip/gksl_learning.py"", line 11, in <module>; import qutip. File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/__init__.py"", line 106, in <module>; from qutip.qobj import *. File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/qobj.py"", line 2526, in <module>; import qutip.superop_reps as sr. File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/superop_reps.py"", line 74, in <module>; _SINGLE_QUBIT_PAULI_BASIS = (identity(2), sigmax(), sigmay(), sigmaz()). File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/operators.py"", line 278, in sigmax; return 2 * jmat(1 / 2, 'x'). File ""/home/premkr/.local/lib/python3.7/site-packages/qutip/operators.py"", line 80, in jmat; A ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2121#issuecomment-1469319817:136,error,error,136,https://qutip.org,https://github.com/qutip/qutip/issues/2121#issuecomment-1469319817,6,['error'],['error']
Availability,"I apologize for my distraction, but I fixed the Python 3.4 failures now. Is there anything else that I should do before this is ready to merge? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/332#issuecomment-125435509:59,failure,failures,59,https://qutip.org,https://github.com/qutip/qutip/pull/332#issuecomment-125435509,1,['failure'],['failures']
Availability,"I apologize for not being that familiar with the technical terminology anymore as I have been out of quantum optics research for over 3 years, but I hope that I'll be able to explain the issue anyway. **Describe the issue**; Taking partial trace of a quantum object over its basis does not return the quantum object itself anymore but produces a type error. **To Reproduce**; Since version 4.5.0 running; ```python; psi = qt.thermal_dm(2,1); psi.ptrace(0); ```. Produces the following error. ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-7-87c31fb793ec> in <module>; ----> 1 psi.ptrace(0). ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qobj.py in ptrace(self, sel, sparse); 1353 return q.tidyup() if settings.auto_tidyup else q; 1354 else:; -> 1355 return _ptrace_dense(self, sel); 1356 ; 1357 def permute(self, order):. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qobj.py in _ptrace_dense(Q, sel); 2203 rhomat = vmat.dot(vmat.conj().T); 2204 else:; -> 2205 rhomat = np.trace(Q.full(); 2206 .reshape(rd + rd); 2207 .transpose(qtrace + [nd + q for q in qtrace] +. TypeError: 'numpy.float64' object cannot be interpreted as an integer; ```. Whereas in versions older than 4.5.0 (verified in 4.3.2 and 4.4.1) running; ```python; psi = qt.thermal_dm(2,1); psi.ptrace(0); ```; produced the Qobj psi as the output. . ```; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True. (0.667, 0.0,; 0.0, 0.333); ```. Is this change on purpose? I've found it very useful in older versions to loop over taking the partial trace of quantum objects whether it was necessary or not and I believe that unless there is any specific reason for the change other people may prefer the older output generation. Curious what other people think, thanks!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1413:351,error,error,351,https://qutip.org,https://github.com/qutip/qutip/issues/1413,2,['error'],['error']
Availability,"I apologize to all for the delay, but I just added checks for regression on this issue. They currently fail due to a problem with `to_chi` and multiple qubits. ``` python; ======================================================================; ERROR: Failure: TypeError (Incompatible Qobj shapes); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda\lib\site-packages\nose\loader.py"", line 251, in generate; for test in g():; File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\tests\test_qobj.py"", line 671, in test_dag_preserves_superrep; yield case, to_chi(qobj); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 435, in to_chi; return to_chi(to_choi(q_oper)); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 432, in to_chi; return choi_to_chi(q_oper); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\superop_reps.py"", line 258, in choi_to_chi; return Qobj(B.dag() * q_oper * B, superrep='chi'); File ""C:\Users\Chris\Dropbox\software-projects\qutip\qutip\qobj.py"", line 455, in __mul__; raise TypeError(""Incompatible Qobj shapes""); TypeError: Incompatible Qobj shapes. ----------------------------------------------------------------------; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/375#issuecomment-152945134:244,ERROR,ERROR,244,https://qutip.org,https://github.com/qutip/qutip/pull/375#issuecomment-152945134,2,"['ERROR', 'Failure']","['ERROR', 'Failure']"
Availability,"I built latest cython, which happens to be version 0.21a1. Running any qutip code throws a warning:; QuTiP warning: Cython setup failed: invalid literal for int() with base 10: '21a1'. This is due to _version2int() not properly parsing the version info in __init__.py. commenting it out, works (and qutip code runs). Is this on purpose (so say only certain, non-dev, versions are supported)? or should _version2int() be more robust? . .",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/207:425,robust,robust,425,https://qutip.org,https://github.com/qutip/qutip/issues/207,1,['robust'],['robust']
Availability,I can confirm that the failure in the CI occurs only on the `coverage` test environment and it disappears if we update scipy to 1.6,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817211736:23,failure,failure,23,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817211736,1,['failure'],['failure']
Availability,"I can definitely see the appeal in having bra_ket returning a c-number, but the obvious downside it that one loses the ability to call Qobjs methods and attributes on the result, and maybe not use it as input to some of qutips other functions. But these might be corner cases since the data of bra_ket is after all a c-number so it might not be necessary to represent it with a Qobj. Still I feel hesitant to change this behavior without carefully thinking through the consequences. There is also a function Qobj.overlap that can be used if a c number result is what one wants. . Maybe @nonhermitian has some opinion/insights on this issue?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/28#issuecomment-19604526:88,down,downside,88,https://qutip.org,https://github.com/qutip/qutip/issues/28#issuecomment-19604526,1,['down'],['downside']
Availability,"I can get the same error on linux with:; ```; from qutip.testing import run; import multiprocessing as mp; mp.set_start_method('spawn'); run(); ```; It hangs on qutip/tests/test_mcsolve.py::test_MCTDFunc.; So maybe, set_start_method('fork') could probably fix the problem on mac.; Also this hang, both at console and jupyter:; ```; import multiprocessing as mp; mp.set_start_method('spawn'). def f(i):; return i+1. p = mp.Pool(); p.map(f, [1,2,3,4]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1202#issuecomment-603919447:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-603919447,1,['error'],['error']
Availability,"I can not imagine that that error would have much to do with a compiler change. Sometimes the tests fail for odd reasons and are fine if they get rerun. I will look into it tomorrow. . Paul . > On Feb 21, 2015, at 09:52, Dominic Meiser notifications@github.com wrote:; > ; > Ok makes sense. I will make that change over the weekend. Btw for whatever reason one of the builds failed in the most recent build:; > ; > https://travis-ci.org/qutip/qutip/jobs/51588003; > ; > Any idea what the problem is? Is this something I should be worried about?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/318#issuecomment-75411847:28,error,error,28,https://qutip.org,https://github.com/qutip/qutip/pull/318#issuecomment-75411847,1,['error'],['error']
Availability,"I can not reproduce the second error that you mention. In addition, it seems that the error with homebrew is not a QuTiP issue, but rather some issue with the build_ext command used there. I am not 100% what the error is, but the include file directory does not seem to be passed to the compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-113345570:31,error,error,31,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113345570,3,['error'],['error']
Availability,I can reproduce it with matplotlib `3.9` but actually I am not sure if it is a qutip problem. The error message seems pure matplotlib,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2146968944:98,error,error,98,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2146968944,1,['error'],['error']
Availability,"I can't quite figure out if this is simply due to the DeprecationWarnings or something else but all tests are failing due to `atol` not being set for the gmres solver. I will try to set `atol` and check if the tests pass. Error log: https://api.travis-ci.org/v3/job/379109482/log.txt.; ```; scipy/sparse/linalg/isolve/iterative.py:2: DeprecationWarning: scipy.sparse.linalg.bicgstab called without specifying `atol`. The default value will be changed in a future release. For compatibility, specify a value for `atol` explicitly, e.g., ``bicgstab(..., atol=0)``, or to retain the old behavior ``bicgstab(..., atol='legacy')``. ```. ```; ..................................................; ======================================================================; ERROR: Steady state: Thermal qubit - power-gmres solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/Users/shahnawaz/dev/qutip/qutip/tests/test_steadystate.py"", line 145, in test_qubit_power_gmres; rho_ss = steadystate(H, c_op_list, method='power-gmres'); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 298, in steadystate; return _steadystate_power(A, ss_args); File ""/Users/shahnawaz/dev/qutip/qutip/steadystate.py"", line 863, in _steadystate_power; v = v / la.norm(v, np.inf); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/scipy/linalg/misc.py"", line 137, in norm; a = np.asarray_chkfinite(a); File ""/Users/shahnawaz/miniconda3/lib/python3.6/site-packages/numpy/lib/function_base.py"", line 1233, in asarray_chkfinite; ""array must not contain infs or NaNs""); ValueError: array must not contain infs or NaNs. ----------------------------------------------------------------------; Ran 561 tests in 576.175s. FAILED (SKIP=19, errors=1); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/862:222,Error,Error,222,https://qutip.org,https://github.com/qutip/qutip/issues/862,3,"['ERROR', 'Error', 'error']","['ERROR', 'Error', 'errors']"
Availability,I cannot reproduce the error as I am on darwin. ; It might be something about `_linux_hardware_info`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1004#issuecomment-497178029:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497178029,1,['error'],['error']
Availability,"I cannot reproduce the error. I get the answer. ```python; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777 0.76344136 0.99493615 1.18017809 1.33956231 1.48170345; 1.6112567 1.73108722 1.84311049 0.9486833 ]]; ```; which matches the NumPy dense answer:. ```python; [[ 0.31622777+0.j 0.76344136+0.j 0.99493615+0.j 1.18017809+0.j; 1.33956231+0.j 1.48170345+0.j 1.61125670+0.j 1.73108722+0.j; 1.84311049+0.j 0.94868330+0.j]]; ```. Why not try using Anaconda? It is what our build scripts are run against, and you do not have to build things yourself.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681#issuecomment-292603323:23,error,error,23,https://qutip.org,https://github.com/qutip/qutip/issues/681#issuecomment-292603323,1,['error'],['error']
Availability,"I carefully followed the instruction and installed qutip on an ubuntu system in windows. It seems the the only package I did not explicitly install is Python Headers.; After installing qutip and running the test, I got the following:; 634 passed, 6 skipped, 61 deselected, 2 xfailed, 959 warnings in 236.31s (0:03:56); qutip/tests/test_metrics.py::test_unitarity_known XFAIL [ 35%]; qutip/tests/test_metrics.py::test_unitarity_bounded XFAIL [ 35%]; qutip/tests/test_metrics.py::test_dnorm_bounded SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_known_cases SKIPPED [ 35%]; qutip/tests/test_metrics.py::test_dnorm_qubit_scalar SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_qubit_triangle SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_force_solve SKIPPED [ 36%]; qutip/tests/test_metrics.py::test_dnorm_cptp SKIPPED [ 36%]. 1. I am wondering how to solve these problems. 2. Do I need to worry about deselected and warnings? What should the normal output be if qutip is installed successfully?; As a beginner, I feel it is really challenging to install the package and be free of errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711:1111,error,errors,1111,https://qutip.org,https://github.com/qutip/qutip/issues/1222#issuecomment-605556711,1,['error'],['errors']
Availability,"I checked locally by intentionally making the tests fail, and the case descriptions do show up in failure logs correctly, so at least the hack works?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-179027129:98,failure,failure,98,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-179027129,1,['failure'],['failure']
Availability,"I closed the issue; it is too vague, sorry about that. From: hrahman12 ***@***.***>; Sent: Wednesday, April 20, 2022 5:16 PM; To: qutip/qutip ***@***.***>; Cc: Anna Naden ***@***.***>; Author ***@***.***>; Subject: Re: [qutip/qutip] Details of QuTiP user's guide (Issue #1759). Hi Anna, thank you for replying can you please give some more information about which particular part/s of the user guides you are finding these errors?. —; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/1759#issuecomment-1104512322>, or unsubscribe<https://github.com/notifications/unsubscribe-auth/AN2AJU6X7MKML5BRRV4IWHLVGB62PANCNFSM5LYUHNQA>.; You are receiving this because you authored the thread.Message ID: ***@***.******@***.***>>",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1759#issuecomment-1104665213:423,error,errors,423,https://qutip.org,https://github.com/qutip/qutip/issues/1759#issuecomment-1104665213,2,['error'],['errors']
Availability,"I completely agree with you that random tests really aren't the right way to go in general, but right now our problem is that basically QuTiP's entire testing suite is based on randomised tests, and that's an awful lot of technical debt to overcome any time soon :(. . The `dnorm` tests have historically been a huge problem, even though basically nobody's worked on `dnorm` for a long long time now (for context, see in particular #880 and #874). We don't actually even know if the failures in `dnorm` are deterministic and reproducible, although it turns out that I had a brief look into this when I joined as a GSoC student about a year ago... I don't remember doing it at all!. I know this is super inelegant and not the perfect method, but it's kind of a nasty trade-off - I don't have time to really dig into `dnorm` (a topic I know almost nothing about) to work out an appropriate solution to temperamental errors, we do want `dnorm` to be tested since we're shipping it, and the slight flakiness keeps causing us test suite failures about 1 in 10 times. I'm somewhat opposed to fixing the random seed because having the variance over several test runs does actually help us cover more ground (eventually) - fixing it to a ""known good"" seed actually seems to me to be more of a mask of potential problems than this. Of note: the pytest plugin I'm using reports the number of reruns it performed in the analysis at the bottom - they show up in a yellow alongside the ""skips"" and ""xfails"" - so it's not completely hidden. I'd love to have a property-based testing suite like hypothesis up and running - that definitely seems like the proper solution to this in the end. In the meantime, I'm open to swapping to a fixed random seed if you think that's much better - testing is one place where I'm really aware of my lack of formal experience in software engineering, so I'm basically just learning as I go.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1490#issuecomment-815317227:483,failure,failures,483,https://qutip.org,https://github.com/qutip/qutip/pull/1490#issuecomment-815317227,8,"['error', 'failure', 'mask']","['errors', 'failures', 'mask']"
Availability,"I couldn't reproduce this with an install into a fresh `conda` environment, _but_ I did once see that same error when I tried to make an OpenMP and a non-OpenMP `qutip` coexist in the same environment. When that previously happened, the package actually worked, it just reported that error. My guess is that this happens if `pyximport.install()` has already been activated when `qutip` is imported, and consequently the test in `__init__.py` as to whether `qutip.cy.openmp.parfuncs` is importable causes this error. It should not be able to even attempt to import it _unless_ `pyximport` has been turned on, and if it's been turned on by something other than QuTiP, then it should fail with a `numpy` header file error instead (this is something we should probably fix too, but I've not noticed it before). Is there any chance you're importing or reimporting `qutip` in a Python session in which some other version of `qutip` is already imported (like in an IPython profile file)?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670003770:107,error,error,107,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670003770,4,['error'],['error']
Availability,"I created a CentOS VM - which I think may have been unnecessary and a bit time consuming; I installed Miniconda and the qutip required libraries. Initially this was cython 0.25.2; I installed qutip 4.2 (the version we created for the release) from source with no error.; I upgraded to cython 0.26, for which I had to use the conda-forge channel.; I tried to install qutip 4.2 (the version we created for the release) from source and found the errors reported by @kcgthb ; I installed qutip 4.2 (the version from #731 ) from source with no error.; I would say therefore that this issue is fixed by #731",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-318100070:263,error,error,263,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-318100070,3,['error'],"['error', 'errors']"
Availability,"I did this previously a handful of commits ago in b7df1b5, but the; tolerances chosen there weren't ideal. This is only especially relevant for cases where we have to use generic; eigenvalue solvers in place of Hermitian ones (e.g. when the Hermitian; ones have temperamental segfaults). I ran test_diag_liou_mult for all; dimensions from 2 to 99 inclusive 2000 times, and measured the maximum; absolute and relative tolerance for each case. I found that 3 times out; of 2000 the absolute tolerance exceeded 1e-10, and 12 times out of 2000; the relative tolerance exceeded 1e-7. The max values seen were 4.24e-10; and 3.12e-7 respectively. This updates the tolerances to 1e-9 (absolute) and 1e-6 (relative),; which still seem like reasonable tolerances, and should ensure that; we're testing correctly. See also #1474.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1486:68,toler,tolerances,68,https://qutip.org,https://github.com/qutip/qutip/pull/1486,6,['toler'],"['tolerance', 'tolerances']"
Availability,"I did try to understand the question you are investigating, but a quick look at the error report you can see that the problem is just in the final plotting. If you only fit the first 500 data points, you can only plot those first 500 points, unless you do some extrapolation in advance. So change the line to `ax.plot(times[:500], final, 'r')` should work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1559#issuecomment-846382792:84,error,error,84,https://qutip.org,https://github.com/qutip/qutip/issues/1559#issuecomment-846382792,1,['error'],['error']
Availability,I do not get a build failure under NumPy 1.10.1. What was the particular error message? Any changes would also have to be backward compatible with earlier NumPy versions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154863591:21,failure,failure,21,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154863591,2,"['error', 'failure']","['error', 'failure']"
Availability,"I don't get any error in both cases. ; What is your `qutip.about()` message? ; By the way, QuTiP does not support anymore Python 2.7, see #882. ; My specifications are; ```; QuTiP Version: 4.3.1; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.28.5; Matplotlib Version: 2.2.3; Python Version: 3.6.7; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/796#issuecomment-497299113:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/issues/796#issuecomment-497299113,1,['error'],['error']
Availability,"I don't have xvfb (pytest-xvfb) installed specifically for qutip, but it is used by other packages (The general use of pytest-xvfb is to facilitate testing of GUI, graphical or windowing functionality without having an normal Xserver active. That is, it can be useful for automated CI testing of gui packages, for instance in chroots or cloud CI infrastructure). Since qutip doesn't use xvfb directly this bug won't be a problem for general CI testing, where only qutip is loaded on a cloud instance (for instance Debian testing done at https://ci.debian.net/packages/q/qutip/). But before I upload a package to the Debian infrastructure, I like to run the tests on my own system to be confident they're likely to pass. So this is where the problem happens, running tests on my own system, where I have pytest-xvfb installed for testing other packages. (pytest has this bad habit of loading all available plugins whether or not they're actually used by the tests being run. It's quite annoying actually. It would be better if it only loaded plugins specified in conftest.py). So the use case is running the qutip tests on my own system, where pytest-xvfb simply happens to be installed for other purposes not related to qutip. There are ways of working around the problem, for instance the `--no-xvfb` option could be explicitly added to the `pytest` command line. But it can be useful if the test code itself can be made robust with respect to the problem (e.g. in this case just replacing `plt.clf()` with `plt.close('all')`)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-909115791:895,avail,available,895,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-909115791,4,"['avail', 'robust']","['available', 'robust']"
Availability,"I don't know if it is relevant, but I copy-pasted the block in the first [post](https://github.com/qutip/qutip/issues/932#issue-378533309) of the thread and I do not get an error message by running it on OS High Sierra 10.13.6 in a Jupyter notebook. There is a clang warning ; ```; libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]; ```; Other details. ```; QuTiP Version: 4.3.1; Numpy Version: 1.14.2; Scipy Version: 1.1.0; Cython Version: 0.28.5; Matplotlib Version: 2.2.3; Python Version: 3.6.7; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-466251384:173,error,error,173,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-466251384,1,['error'],['error']
Availability,"I don't know if the test failure is related or not -- it *looks* unrelated but it is a data layer test, so we should probably check a bit carefully.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-892573255:25,failure,failure,25,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-892573255,1,['failure'],['failure']
Availability,"I don't know if this is helpful, but I can get a different error if I first `import numpy`:. ```; >>> import numpy; >>> import qutip.testing as qt; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/local/lib/python2.7/site-packages/qutip/__init__.py"", line 62, in <module>; qutip.settings.ipython = False; AttributeError: 'module' object has no attribute 'settings'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348#issuecomment-113235398:59,error,error,59,https://qutip.org,https://github.com/qutip/qutip/issues/348#issuecomment-113235398,1,['error'],['error']
Availability,"I don't think either ""missing"" or ""full"" should be used much with pure qutip. Only with plugins like qutip-jax it makes any sense to me. With ""missing"", you could set it so it will end up all in jax format and not have too much issues. . ""full"" will probably break HEOM, some steadystate feature, slow down scipy integrators, etc. ""missing? should be safe. Ok for `default_dtype_scope`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2519#issuecomment-2407529422:302,down,down,302,https://qutip.org,https://github.com/qutip/qutip/pull/2519#issuecomment-2407529422,1,['down'],['down']
Availability,"I don't think it's your code, but I haven't looked in to it in sufficient detail yet. As it stands installing qutip is fine but importing it fails, as it is unable to find the C headers, and is spitting out multiple errors of the form ""distutils.errors.CompileError: command '/usr/bin/clang' failed with exit status 1"". I can provide the full error messages sometime tomorrow if I'm still unable to solve the problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/552#issuecomment-260194878:216,error,errors,216,https://qutip.org,https://github.com/qutip/qutip/issues/552#issuecomment-260194878,3,['error'],"['error', 'errors']"
Availability,"I don't think there is something wrong.; We can expect the matmul output and eigen values to have errors of about 1e-16, (double's precision), then it sums the square-roots, resulting in error up to ~1e-8 when the eigen values should be zeros. So with a tol at 1e-8, the test can fail from numerical error with nothing wrong in the test. If you look are the sparse eigen solver, for a 100x100 matrix with only 10 non-zero values, all along the diagonal, it does not find any` 0` eigen values: there are about 89x `~e-36`, 1x `~e-17` and the 10 non-zeros values. So the `sqrt(~e-17)` is pure numerical error and appear in the test at around 3e-9. ; I ran the test a few thousand times and it fails about 23% of the time, at `tol=3e-8`, it fails about 0.2% of the time and the max is 3.7e-8. So I expect everything is fine and you just need to loosen the tolerance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-929406921:98,error,errors,98,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-929406921,5,"['error', 'toler']","['error', 'errors', 'tolerance']"
Availability,"I don't think this is the right way to solve your problem, but we probably should be consistent. `Qobj` is not a container for arbitrary data, and a 1x1 `Qobj` basically should never exist. If I remember correctly, the auto-promotion to `Qobj` is to avoid breaking backwards compatibility, because 4.x doesn't use the `@` syntax at all. We almost certainly should be moving to remove that ""feature"", not add to it - it should never work with compound Hilbert spaces (we should be safe-by-default), and trying to detect special behaviour on 1x1 inputs just leads to weird edge cases and breakages all over the place. You probably want some sort of different mechanism for deciding what types a `Qobj.data` instance can accept in `mul`. At the moment, the test is `isinstance(other, numbers.Number)`, but you want to accept `tensorflow.Variable` if the backing data is TF-like. I think the right solution would be based on having some way for downstream classes to expose what types they can accept, perhaps by a well-defined try/except pattern?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1611#issuecomment-880664515:941,down,downstream,941,https://qutip.org,https://github.com/qutip/qutip/pull/1611#issuecomment-880664515,1,['down'],['downstream']
Availability,"I don't want the way to catch error depend on the map, `serial_map` and `loky_map` both return the error of the first failing iteration and stop there. Having `parallel_map` failing differently will mean that every time we want to catch an error in `mcsolve`, etc. we will have to catch both the expected error and the custom `ParallelMapException`. It also hide the kind of error and prevent us to act on it. I still think that stopping the map and returning the first error is the best options. It will ensure that all map functions fail the same way. In our case, the raised exceptions should be consistent so we should not need run all iteration to see every ways it can fail. And we don't waste computing time to compute result that will not be returned. Another options would to not raise any error and return the finished iteration. For mcsolve, we could have a result returning 99% of the asked trajectories with the note that 1% failed because of overwork from the solver. Trowing away all the work done for one error feels bad. However I can see this not being safe, so it would be a solver options for the user to set.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1969#issuecomment-1209406180:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/pull/1969#issuecomment-1209406180,8,['error'],['error']
Availability,"I don’t know. It worked for me when I tried to install QuTiP from source; —with-openmp. The error was a different and I am on a different MacOS (I; also tried a conda install llvm, but what worked was gcc for me, with; openmp). I understand that you trying to install QuTiP? If so, how? conda / source /; pip? Consider doing it via conda if you are interested in the stable; version release (4.3), by activating the conda-forge channel as detailed in; the documentation. If QuTiP is installed and you receive this error while doing a specific; task, can you copy paste the message of qutip.about() here?. On Sat, 9 Mar 2019 at 14:37, Xiao <notifications@github.com> wrote:. > Try conda install gcc.; >; > Does that mean I should use gcc from the Anaconda directory?; >; > —; > You are receiving this because you commented.; >; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/965#issuecomment-471148065>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AN5ffFcanH6qaCezLIKtW4SflaVsZ63Aks5vU0iCgaJpZM4bmfhd>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965#issuecomment-471153754:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/965#issuecomment-471153754,2,['error'],['error']
Availability,"I encountered a numerical error while simulating a Ramsey experiment using mesolve in QuTiP. Specifically, the simulation shows unexpected discontinuities and unphysical results in the oscillatory pattern. I have highlighted these problematic points with red circles in the plot for clarity.; <div align=""center"">; <img width=""314"" alt=""image"" src=""https://github.com/user-attachments/assets/e7a6fb3e-c9e8-4cf9-96ba-aefaf7e9a554"">; </div>. To make the problem clearer, I simplified the simulation model. The Hamiltonian used is:. $$ H_{\rm rot} = {\rm Re}[\Omega(t)]\frac{\sigma_x}{2} + {\rm Im}[\Omega(t)]\frac{\sigma_y}{2} $$. where $\Omega(t)$ is a time-dependent coefficient. The tlist and coefficients are both numpy arrays. Providing the entire code that generates these coefficients would be lengthy, so I preselected a few sets of coefficients and tlist where the issue is present. Specifically, the problematic data is from indices 92, 93, and 94, which have been highlighted in the plot. These are stored using np.savetxt. Below is the plot of the coefficients, showing that they are mainly real and differ only slightly. ```; plt.figure(); ax0 = plt.subplot(221); ax1 = plt.subplot(222). for wavedata_name in [""index92"",""index93"",""index94""]:; coef = np.loadtxt(f""{wavedata_name}_coef.txt"",dtype=np.complex128); tlist = np.loadtxt(f""{wavedata_name}_tlist.txt"",dtype=np.float64); ax0.plot(tlist, coef.real, label=f""{wavedata_name}""); ax1.plot(tlist, coef.imag, label=f""{wavedata_name}""); ax0.legend(); ax1.legend(); ; ax0.set_title(r""$\sigma_x$ coefficient""); ax1.set_title(r""$\sigma_y$ coefficient""); ```. <div align=""center"">; <img width=""314"" alt=""image"" src=""https://github.com/user-attachments/assets/b07b3a64-a2d4-458b-a04e-4c83c0c4c093"">; </div>; Despite these small differences, the simulation results show significant and unexpected variations. ; Below is simulation code and results. ```; import qutip; import numpy as np; import matplotlib.pyplot as plt. sx = qutip.sigmax(); sy = ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2552:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/2552,1,['error'],['error']
Availability,"I find Python's `collections` module a good example (https://docs.python.org/3/library/collections.html). Python moved Collections Abstract Base Classes like `Iterable` to the `collections.abc` submodule. In python3.7, . The following code still works but there will be a deprecation warning; ```; from collections import Iterable; ```; ```; import collections; collections.Iterable; ```. It won't disturb other users since there is no warning when; ```; import collections; ```; ```; from collections import *; ```. But the following will give an error, ; ```; >>> from collections import *; >>> Iterable; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; NameError: name 'Iterable' is not defined; ```; So for those who use ``from qutip import *``, they still don't know what happens. I'm not sure if it is possible to add a deprecation warning for this case separately. Maybe we can modify the top-level __init__.py so that we `qip` function is imported directly with the `qutip` namespace, it is wrapped with a deprecation warning. In this way, the warning only shows when the functions are called. Not sure if this is practical, though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1071#issuecomment-520506756:548,error,error,548,https://qutip.org,https://github.com/qutip/qutip/issues/1071#issuecomment-520506756,1,['error'],['error']
Availability,"I find this error appears when the two pulses are separated by a distance d > 23.0017... Have no idea why...; ```; c_x_bug = lambda t, arg: cosine_pulse(t, t0=piLen/2.0, amp=0.5*piAmp)+\; cosine_pulse(t, t0=23.0018 + 1.0*piLen+piLen/2.0, amp=0.5*piAmp); ```; The generated `QuobjEvo` seems to be correct. . If I change the `[Qobj, func]` representation to `[Qobj, np.array]`, the same thing appears but with a different threshold. . The bug disappears if I give an epsilon small value to the pulse, like 0.000001, instead of 0. ```; def cosine_pulse(t, t0=piLen/2.0, amp=piAmp, w=piLen, phase=0, df=0):; ...; return ... + 0.000001; ```. Does this somehow ring a bell @Ericgig? Is this possible that the algorithm terminates if the coefficients are all zero for a while?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1265#issuecomment-629680971:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/issues/1265#issuecomment-629680971,1,['error'],['error']
Availability,"I fixed steadystate tests:; - `_permute` use numpy array, @AGaliciaMartinez is looking to fix the data layer function.; - Lowered the precision required for `test_exact_solution_for_simple_methods`. The test looked for `1e-16 +/- 1e-16` and most calls returned `0`. Most methods cannot match this precision and can fail from numerical error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1850#issuecomment-1097177212:335,error,error,335,https://qutip.org,https://github.com/qutip/qutip/pull/1850#issuecomment-1097177212,1,['error'],['error']
Availability,"I followed instruction on http://qutip.org/docs/4.1/installation.html and used pip to install qutip in my python3.5.2 virtualenv directory. All required packages listed under ""General Requirements"" were also installed. pip commands completed fine. I then cd into a directory peer to ""python3.5.2 virtualenv directory"" and launched jupyter notebook. Ran two import commands. Both failed. Any suggestions on how to debug these failures? I restarted firefox and jupyter notebook several times. 1. ""import qutip.testing as qt"" to verify installation; lib/python3.5/site-packages/qutip/__init__.py; 169 ; 170 # core; --> 171 from qutip.qobj import *; 172 from qutip.states import *; 173 from qutip.operators import *. lib/python3.5/site-packages/qutip/qobj.py; 58 import qutip.settings as settings; 59 from qutip import __version__; ---> 60 from qutip.fastsparse import fast_csr_matrix, fast_identity; 61 from qutip.cy.ptrace import _ptrace; 62 from qutip.permute import _permute. lib/python3.5/site-packages/qutip/fastsparse.py; 35 from scipy.sparse import (_sparsetools, isspmatrix, isspmatrix_csr,; 36 csr_matrix, coo_matrix, csc_matrix, dia_matrix); ---> 37 from scipy.sparse.sputils import (upcast, upcast_char, to_native, isdense, isshape,; 38 getdtype, isscalarlike, IndexMixin, get_index_dtype); 39 from scipy.sparse.base import spmatrix, isspmatrix, SparseEfficiencyWarning. ImportError: cannot import name 'IndexMixin'. 2. ""from qutip import *""; lib/python3.5/site-packages/qutip/__init__.py in <module>; 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-2-82c62ef8635d> in <module>; ----> 1 from qutip import *. lib/python3.5/site-packages/qutip/__init__.py in <module>; 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 . AttributeError: module",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1018:425,failure,failures,425,https://qutip.org,https://github.com/qutip/qutip/issues/1018,1,['failure'],['failures']
Availability,"I found a probably severe error in qutip 3.0.0 (worked fine in previous versions). When using mesolve, a function in ""rhs_generate.py"" (_td_wrap_array_str) checks if arguments exist. So far so good, however the if clause using. if args:; .... does not work when the argument is a numpy array, which raises the error:. ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all(). Is not hard to fix, but an annoying error. Keep up the good work!!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/199:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/199,3,['error'],['error']
Availability,"I found this thread,. https://solus-project.com/forums/viewtopic.php?t=2938. which tells one to try:. sudo eopkg install -c system.devel. -P. jakeargent wrote:; >; > I'm using solus <https://solus-project.com> 64-bit, and anaconda for; > my python.; >; > anaconda cannot find any qutip package, so I tried to install with; > pip. It gives the following error:; >; > |Command ""/home/jakeargent/anaconda3/bin/python -u -c ""import; > setuptools,; > tokenize;__file__='/tmp/pip-build-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, ; >; > 'open', open)(__file__);code=f.read().replace('\r\n',; > '\n');f.close();exec(compile(code, __file__, 'exec'))"" install; > --record /tmp/pip-lnsaamvm-record/install-record.txt; > --single-version-externally-managed --compile"" failed with error code; > 1 in /tmp/pip-build-n7ekqm4y/qutip/|; >; > Then I tried easy_install, which gave me:; >; > |Processing qutip Writing /home/jakeargent/qutip/setup.cfg Running; > setup.py -q bdist_egg --dist-dir; > /home/jakeargent/qutip/egg-dist-tmp-9_egnp34 Installing without the; > fortran mcsolver. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurse down to the real one */ ^ compilation; > terminated. In file included from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; > from; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; > from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11, from; > qutip/cy/spmatfuncs.c:27:; > /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61:; > fatal error: limits.h: No such file or directory #include_next; > <limits.h> /* recurs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639#issuecomment-275734243:353,error,error,353,https://qutip.org,https://github.com/qutip/qutip/issues/639#issuecomment-275734243,2,['error'],['error']
Availability,"I get a MemoryError computing a ptrace, although the output object would be smaller than the input object. Minimum working example:; `tensor(fock(2,0), fock(100,0), fock(100,0)).ptrace(0); `. The problem might be that internally the full density matrix is created before summation. This requires more RAM than is eventually available. Mathematically the operation should be possible without excessive RAM usage, as long as the input, as in this case, is a pure state vector. (related to [issue #828](https://github.com/qutip/qutip/issues/828 ) but not the same.)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/842:324,avail,available,324,https://qutip.org,https://github.com/qutip/qutip/issues/842,1,['avail'],['available']
Availability,I get an error `error: command 'gcc' failed with exit status 1` if I try `python setup.py install` or `develop`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1065#issuecomment-527430941:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527430941,2,['error'],['error']
Availability,"I get the following error message. My code runs fine on the first try, but gives the error if I try to run it again. I can restart the kernel every time, but would like to know if there's a fix. Could someone help please?. ---------------------------------------------------------------------------; UnboundLocalError Traceback (most recent call last); <ipython-input-7-becee6304ad3> in <module>; 60 ; 61 ; ---> 62 output3 = mesolve(HDGRnew, tpss.states[i], tlist_reg, c_opsn, [Xp], args=param); 63 ; 64 Xppt = output3.expect[0]*np.exp(1j*wlo*(tlist_reg)). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 252 ss = H; 253 elif isinstance(H, (list, Qobj, QobjEvo)):; --> 254 ss = _mesolve_QobjEvo(H, c_ops, tlist, args, options); 255 elif callable(H):; 256 ss = _mesolve_func_td(H, c_ops, rho0, tlist, args, options). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/mesolve.py in _mesolve_QobjEvo(H, c_ops, tlist, args, opt); 298 ; 299 nthread = opt.openmp_threads if opt.use_openmp else 0; --> 300 L_td.compile(omp=nthread); 301 ; 302 ss = SolverSystem(). /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo.py in compile(self, code, matched, dense, omp); 1553 if self.use_cython:; 1554 # All factor can be compiled; -> 1555 self.coeff_get, Code, file_ = _compiled_coeffs(; 1556 self.ops,; 1557 self.args,. /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _compiled_coeffs(ops, args, dyn_args, tlist); 121 """"""; 122 code = _make_code_4_cimport(ops, args, dyn_args, tlist); --> 123 coeff_obj, filename = _import_str(code, ""cqobjevo_compiled_coeff_"",; 124 ""CompiledStrCoeff"", True); 125 return coeff_obj(ops, args, tlist, dyn_args), code, filename. /opt/anaconda3/envs/qutip-env/lib/python3.8/site-packages/qutip/qobjevo_codegen.py in _import_str(code, basefilename, obj_name, cythonfile); 80 if not import_list:; 81 raise",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196:20,error,error,20,https://qutip.org,https://github.com/qutip/qutip/issues/1196,2,['error'],['error']
Availability,I get the following error when trying to use the ip_parallel_map:. ```; FileNotFoundError: [Errno 2] No such file or directory: '/home/paul/.ipython/profile_default/security/ipcontroller-client.json'; ```. Everything else works as expected.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/276#issuecomment-66558727:20,error,error,20,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66558727,1,['error'],['error']
Availability,"I get this error for anything less than nsteps = 1000000 (I've tried 5000, 10000, 50000, 100000, 500000) while using mesolve to get the dynamics of the system according to the Lindblad ME.; Details - It is a two qubit model, with both qubits coupled to baths and with inter-qubit coupling present. The solution for unit time with 100 divisions takes about 10 min but for any time interval greater than 1, I keep getting this error even with nsteps = 1000000, 5000000. Anything greater than that takes >2 hours to evaluate. ```python; import numpy as np; import matplotlib as plt; from qutip import *; from cmath import *; ```; Initial State:; ```; initialstate=tensor(fock_dm(2,0),fock_dm(2,0)); ```; Hamiltonian:; ```; epsilon=1; g=0.025; sigmaplus=0.5*(sigmax()+1j*sigmay()); sigmaminus=0.5*(sigmax()-1j*sigmay()); H=0.5*epsilon*(tensor(sigmaz()+qeye(2),qeye(2))+tensor(qeye(2),sigmaz()+qeye(2))) + g*(tensor(sigmaplus,sigmaminus)+tensor(sigmaminus, sigmaplus)). ```; Jump operators:; ```; gamma1=0.1; gamma2=0.05; T1=2; T2=0.05. diss_coeff=[cmath.sqrt(gamma1*(1/exp(epsilon/T1)-1)),cmath.sqrt(gamma1*exp(epsilon/T1)*(1/exp(epsilon/T1)-1)), cmath.sqrt(gamma2*(1/exp(epsilon/T2)-1)), cmath.sqrt(gamma2*exp(epsilon/T2)*(1/exp(epsilon/T2)-1))]. diss_oper=[diss_coeff[0]*tensor(sigmaplus, qeye(2)),diss_coeff[1]*tensor(sigmaminus, qeye(2)),diss_coeff[2]*tensor(qeye(2),sigmaplus), diss_coeff[3]*tensor(qeye(2),sigmaminus)]; ```; Time steps:; ```; tlist = np.linspace(0, 1, 100); ```; Using mesolve:; ```; dynamics=mesolve(H, initialstate, tlist,diss_oper, options=Options(nsteps=10000)) ; ```; Note: nsteps=1000000 in the line above evaluates in 7 min. Ideally, I would like to solve for time in the range (0, 400) but in the worst case, time range (0,250) will do (with about 1000 divisions). But, increasing nsteps is not an option because the evaluation takes too long. Are there any changes I can make for faster evaluation?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1623:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/issues/1623,2,['error'],['error']
Availability,"I guess disabling warnings would be OK, but I don't particularly like putting win work-arounds in the general code base.. multiprocessing on windows will always be a pain in the neck.. Anyways, is there anything we can do on this now for 3.1 or should we just kick this can down the road?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/274#issuecomment-66575881:274,down,down,274,https://qutip.org,https://github.com/qutip/qutip/issues/274#issuecomment-66575881,1,['down'],['down']
Availability,I guess the failure on Python 3.10 will sort it self out when this gets merged.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1979#issuecomment-1219958590:12,failure,failure,12,https://qutip.org,https://github.com/qutip/qutip/pull/1979#issuecomment-1219958590,1,['failure'],['failure']
Availability,"I guess there's two things, firstly as you go to higher energies, again convergence errors will appear as levels near the cut-off are sensitive to the cut-off. Also, I think you can see the repeated eigenvalue around the middle of the spectrum which was recently discussed here as a consequence of truncation https://github.com/qutip/qutip/issues/1587 . Secondly, as far as I can see the +- x examples give similar convergence. This example is easily solved analytically, the energies are just that of a normal harmonic oscillator + displacement (+-3 in your case) -0.5. You can calculate this with a couple of just linear coordinate transformations in x. Perhaps there is some issue with your +x solution in pyslise?. Also, for this type of question, you are likely to get good feedback/help from the community if you post to the qutip google group https://groups.google.com/g/qutip",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1597#issuecomment-874060820:84,error,errors,84,https://qutip.org,https://github.com/qutip/qutip/issues/1597#issuecomment-874060820,2,['error'],['errors']
Availability,I guess this was the ZVODE error in the mcsolve_f90 tests?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/197#issuecomment-49157591:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49157591,1,['error'],['error']
Availability,"I had a quick stab at this by adding a Metaclass to Qobj (I tried doing this within `__new__` but could not get it to work. If it's possible I accept suggestions). ; I am also unsure if your constructor `Qobj` is supposed to be called with positional, kwargs or a combination of both. If it was only kwargs the implementation could be more terse. I assumed that the `copy` argument gets passed as part of `__qutip_qobj_interface__`, as in the conversion it might be necessary to copy anyway so the downstream implementor is responsible for taking care of the copy if requested. ```python; class QobjMetaclass(type):; def __call__(cls, inpt=None, dims=None, shape=None,; type=None, isherm=None, copy=True,; fast=False, superrep=None, isunitary=None):. if isinstance(inpt, Qobj):; pass; elif hasattr(inpt, ""__qutip_qobj_interface__""):; inpt_data = inpt.__qutip_qobj_interface__(copy=copy). inpt = inpt_data['matrix']; dims = inpt_data['dims']; copy = False. obj = cls.__new__(cls, inpt, dims, shape, type, isherm, copy, fast,; superrep, isunitary); obj.__init__(inpt, dims, shape, type, isherm, copy, fast,; superrep, isunitary); return obj. class Qobj(object, metaclass=QobjMetaclass):; ...; ```; I'm quite sure this implementation can be improved, however. On the NetKet side, the implementation is very simple. At the moment we only support operators from H->H.; ```python; class AbstractOperator:; ... ; def __qutip_qobj_interface__(self, dims, copy=True):; return {'matrix': stacked_rows_to_stacked_cols(self.hilbert, self.to_sparse()),; 'dims': [list(self.hilbert.shape), list(self.hilbert.shape)]}; ```. This already is quite nice and allows for quick and simple interoperability. Some comments/questions:; - Qutip uses stacked columns (column major) ordering for the tensor products, as opposed to NumPy `kron` ordering that is stacked rows, right? ; - To signal that an object is a super-operator (Liouvillian) is it sufficient to pass a correctly constructed `dims` or I should also provide `s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-829966601:498,down,downstream,498,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-829966601,2,['down'],['downstream']
Availability,"I had tried many times to install the anaconda3.5 3.6 and 3.7, for installing qutip 4.4.0or4.4.1. But when I verifying the Installation, some similar errors always occur, as indicated below; ![QQ截图20190831230327](https://user-images.githubusercontent.com/54746315/64065880-d92e2300-cc45-11e9-9672-f13fca2ffb36.png); ps: I have install vs2015 and option for c++ compiler; in addition, there are some installation information as below; ![QQ截图20190831224652](https://user-images.githubusercontent.com/54746315/64065902-26aa9000-cc46-11e9-9c60-6796fc1deff7.png); the red underline has indicated some problem, is it matter?; who can give some advice for dealing with it? ; Thanks a lot",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1079:150,error,errors,150,https://qutip.org,https://github.com/qutip/qutip/issues/1079,1,['error'],['errors']
Availability,"I have a similar issue, but raising nsteps on options don't solve it. I tried to raise it until I got the error ""OverflowError: Python int too large to convert to C long"", which seems to happen for big numbers.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806#issuecomment-878527034:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/issues/806#issuecomment-878527034,1,['error'],['error']
Availability,"I have a trouble in solving a time dependent Bloch-Redfield master equation with arguments.; Let me use an example discussed in [here](https://github.com/qutip/qutip/issues/966); The schedule functions of the time dependent Hamiltonian are defined by using some parameters which are passed to mesolve as args.; This method works well for sesolve and mesolve.; However, if I try to use the same method in brmesolve, it returns error in compiling Cython. I attached a python code which demonstrates the above observation. . I also noticed that in bloch_redfield.py it says; args : dict ; Placeholder for future implementation, kept for API consistency. Would it be possible to use arguments in brmesolve? If not, how could I use parametrically defined schedule functions while avoiding the issue raised in [here](https://github.com/qutip/qutip/issues/966)?. I need this for my research and I would appreciate your help very much. [Qutip Redfield master issue.py.zip](https://github.com/qutip/qutip/files/4028211/Qutip.Redfield.master.issue.py.zip)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1150:426,error,error,426,https://qutip.org,https://github.com/qutip/qutip/issues/1150,1,['error'],['error']
Availability,I have added the issue. I have spotted already some suggestions of what can be going wrong and note them down on the issue details!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1575060855:105,down,down,105,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1575060855,1,['down'],['down']
Availability,"I have download other examples and they surprisingly work, so it is not the environment problem. The case code have its own problem, but I haven't found where it is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/854#issuecomment-382609847:7,down,download,7,https://qutip.org,https://github.com/qutip/qutip/issues/854#issuecomment-382609847,1,['down'],['download']
Availability,"I have looked into this a bit. Everything compiles fine except the things that require complex.h. VS 15 has this library, and MS even highlights their compatibility with C99. However, others have found that the MS complex type is not compatible with C99. Therefore, one gets a typedef conversion error. Therefore we would have to write a conversion function. Another possibility is to use the Intel compilers. I believe one can get them for free if in academics.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-222156370:296,error,error,296,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222156370,1,['error'],['error']
Availability,"I have noticed some performance benefits with openblas but nothing noticeable for the sparse matrix routines. Multithreading gets some extra performance but the scaling is sublinear for sure. Just a couple of percent. From what I understand many sparse routines are limited by memory bandwidth. This is usually discussed in the context of the spmv. The biggest benefit when going to openblas is the removal of the umfpack out of memory errors. I dont think this has anything to do with the actual openblas functions but somewhere in the build process (suitesparse, metis, or something) the memory limitation is removed.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/55#issuecomment-25365509:436,error,errors,436,https://qutip.org,https://github.com/qutip/qutip/issues/55#issuecomment-25365509,1,['error'],['errors']
Availability,"I have noticed that when I try to use the `.dnorm()` method to calculate the diamond norm distance between two channels I am greeted with an error and the operation fails. Rather than an error I expected the output to be a number between 0 and 2. See the simple example below. ```; from qutip import destroy, qeye, fock_dm, kraus_to_choi. # Choi matrix for 1 qubit amplitude damping channel with probability p; def AmpDampChoi(p):; Kraus = [(1-p)**.5*qeye(2),p**.5*destroy(2),p**.5*fock_dm(2,0)]; return kraus_to_choi(Kraus). # Choi matrix for identity channel on 1 qubit; IdChoi = kraus_to_choi([qeye(2)]). # These values are found without issue but since they're all CPTP maps they all have dnorm 1; print(IdChoi.dnorm()); print(AmpDampChoi(0).dnorm()); print(AmpDampChoi(0.64).dnorm()). # These trivial diamond norm distances between a channel and itself are also produced; print(IdChoi.dnorm(AmpDampChoi(0))); print(IdChoi.dnorm(IdChoi)); print(AmpDampChoi(0.5).dnorm(AmpDampChoi(0.5))). # If a diamond norm distance between two different channels is sought then we see the error; print(IdChoi.dnorm(AmpDampChoi(0.5))); print(AmpDampChoi(0.4).dnorm(AmpDampChoi(0.5))); ```. Attempting to run either of the final two prints gives the following spiel:. ```; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); TypeError: float() argument must be a string or a number, not 'csr_matrix'. The above exception was the direct cause of the following exception:. ValueError Traceback (most recent call last); <ipython-input-21-add6d3e56036> in <module>; 20 ; 21 # If a diamond norm distance between two different channels is sought then we see the error; ---> 22 print(IdChoi.dnorm(AmpDampChoi(0.5))); 23 print(AmpDampChoi(0.4).dnorm(AmpDampChoi(0.5))). ~/.local/lib/python3.8/site-packages/qutip/qobj.py in dnorm(self, B); 1881 ; 1882 """"""; -> 1883 return mts.dnorm(self, B); 1884 ; 1885 @property. ~/.local/lib/python3.8/site-packages/",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1422:141,error,error,141,https://qutip.org,https://github.com/qutip/qutip/issues/1422,2,['error'],['error']
Availability,"I have read that, but as what the output from H.groundstate(), it is showing it's a quantum object. So I don't understand why the error occurs",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/805#issuecomment-360855816:130,error,error,130,https://qutip.org,https://github.com/qutip/qutip/issues/805#issuecomment-360855816,1,['error'],['error']
Availability,"I have seen in multiple places of the code (in `qutip/core/data`) that a `TypeError` is raised when the shape of the input Data (`Dense` or `CSR`) is wrong, even though the `Type` of the input data is correct. Do we want to raise `TypeError` or `ValueError`? I ask this because we sometimes raise `ValueError`, which I believe should be the raised error. Examples are: ; - `trace` is raising `ValueError`; - `pow` was raising `TypeError` but now raises `ValueError` after merging #1622.; - `norm.trace` raises `TypeError` (it is actually `eigen` who raises it); - `norm.l2` raises `ValueError`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1629:348,error,error,348,https://qutip.org,https://github.com/qutip/qutip/issues/1629,1,['error'],['error']
Availability,"I have some detail information for the GSoC 2020 project ""Error mitigation in QuTiP"". Unfortunately, I don't have writing access to the QuTiP GitHub Wiki page. I post it here so if anyone finding it nice could copy it to the Wiki page. I add some details based on the original description:. -----------------------------------; ## 1. Error mitigation in QuTiP; From the QuTiP 4.5 release, the qutip.qip module now contains the noisy quantum circuit simulator (which was a GSoC project) providing enhanced features for a pulse-level description of quantum circuits and noise models. A new class `Processor` and several subclasses are added to represent different platforms for quantum computing. They can transfer a quantum circuit into the corresponding control sequence and simulate the dynamics with QuTiP solvers. Different noise models can be added to `qutip.qip.noise` to simulate noise in a quantum device. . This module is still young and many features can be improved, including new device models, new noise models and integration with the existing general framework for quantum circuits (`qutip.qip.circuit`). There are also possible applications such as error mitigation techniques [1-3]. The tutorial notebooks can be found at http://qutip.org/tutorials.html#nisq. A recent presentation on the FOSDEM conference may help you get an overview (https://fosdem.org/2020/schedule/event/quantum_qutip/). See also the Github Project page for a collection of related issues and ongoing Pull Requests. ### Expected outcomes; - More devices defined in the `qutip.qip.device` module. At the moment, we have two models: spin chain and cavity QED. We would like to include some other commonly used planform such as Superconducting system, Ion trap system or silicon system. Each model will need a new set of control hamiltonian and a compiler that find the control pulse of a quantum gate. This part is gonna involve some physics and study of commonly used hardware platforms. The related code can be fo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1184:58,Error,Error,58,https://qutip.org,https://github.com/qutip/qutip/issues/1184,2,['Error'],['Error']
Availability,"I have such error whenever my the ratio between j or h for my hamiltonian and the total duration time(now in the following code is 0.1) is a certain number and above, mesolve produces this error. However, I need this ratio to be a certain number and above which produces the error. What do you recommend that I do? Thank you so much!. Here is the code:. j = 1000; h = 100000. \begin{equation}; H= j \sum_{\langle ij\rangle} \sigma_i^x\sigma_j^x +h \sum_i \sigma_i^z; \end{equation}. psi0=tensor(basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0),basis(2, 0)). times = np.linspace(0.0, 0.1, 100). result3 = mesolve(H, psi0, times, [], []); ; print fidelity(result3.states[99],psi0). ---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-25-49de88b6cc71> in <module>(); 8 times = np.linspace(0.0, 0.1, 100); 9 ; ---> 10 result3 = mesolve(H, psi0, times, [], []); 11 ; 12 print fidelity(result3.states[99],psi0). /Users/anaconda/lib/python2.7/site-packages/qutip/mesolve.pyc in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 341 else:; 342 res = _sesolve_const(H, rho0, tlist,; --> 343 e_ops, args, options, progress_bar); 344 ; 345 if e_ops_dict:. /Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _sesolve_const(H, psi0, tlist, e_ops, args, opt, progress_bar); 325 #; 326 return _generic_ode_solve(r, psi0, tlist, e_ops, opt,; --> 327 progress_bar, dims=psi0.dims); 328 ; 329 . /Users/anaconda/lib/python2.7/site-packages/qutip/sesolve.pyc in _generic_ode_solve(r, psi0, tlist, e_ops, opt, progress_bar, dims); 689 ; 690 if not r.successful():; --> 691 raise Exception(""ODE integration error: Try to increase ""; 692 ""the allowed number of substeps by increasing ""; 693 ""the nsteps parameter in the Options class.""). **Exception: ODE integration error: Try to increase the allowed number of substeps by increasing the nsteps parameter in the Options class.**",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/806:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/issues/806,5,['error'],['error']
Availability,"I have the same error in the current master, seems parallel can sometime freeze, not sure why or how common it is.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-579832967:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-579832967,1,['error'],['error']
Availability,I have the same exact same NumPy errors in a fresh VirtualEnv with Python 3.6.1 and #731.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317815407:33,error,errors,33,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317815407,1,['error'],['errors']
Availability,"I have tried the simple two-level systems in http://qutip.org/docs/latest/guide/dynamics/dynamics-floquet.html and found an unexpected error, could you help to solve this problem #854 ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/772#issuecomment-382599620:135,error,error,135,https://qutip.org,https://github.com/qutip/qutip/issues/772#issuecomment-382599620,2,['error'],['error']
Availability,"I have two possible solutions for this, one is legit, and the other's a little hacky. 1. (legit) You might want to try installing Visual Studio Build Tools for C/C++, which you can do by going to Control Panel and modifying your VS install.; 2. (hacky) Try pip installing the right WHL package from here for your Python version (basically Wisows binaries for certain Python libs): [https://www.lfd.uci.edu/~gohlke/pythonlibs/#cython](url). Navigate to the specific download path and run `pip -m install <path-to-whl-file>`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200:465,down,download,465,https://qutip.org,https://github.com/qutip/qutip/issues/1026#issuecomment-539875200,1,['down'],['download']
Availability,"I haven't run into that failure before, but I've only tried on Windows 8.1; and 10 so far. Do you have a console log for a python.exe crash?. On Fri, Oct 16, 2015 at 11:14 PM Alexander Pitchford <; notifications@github.com> wrote:. > I have tried on Win7x64 using anaconda.; > under Python2.7:; > I found qutip would install, and most things would work. However there; > were many warnings when running tests and occurrences of python.exe crashing; > under Python 3.5; > I found qutip would install. However nothing much would run, e.g. issues; > importing spmatfuncs when creating a Qobj; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/377#issuecomment-148701161.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148703467:24,failure,failure,24,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148703467,1,['failure'],['failure']
Availability,"I installed anaconda on windows 10. ; I used then ""pip install qutip"", and I get this error : ; File ""\lib\distutils\cygwinccompiler.py"" line 129, in __init__; if self.ld_version >= ""2.10.90"" : ; TypeError: '>=' not supported between instances of 'NoneType' and 'str'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/860:86,error,error,86,https://qutip.org,https://github.com/qutip/qutip/issues/860,1,['error'],['error']
Availability,"I installed qutip through Anaconda on MacBook M1. The installation was successful but when I tried to verify the installation through `from qutip import *`, I received following error:; `Traceback (most recent call last):; File ""/Users/akhil/opt/anaconda3/lib/python3.8/site-packages/qutip/__init__.py"", line 46, in <module>; __IPYTHON__; NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:. Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/akhil/opt/anaconda3/lib/python3.8/site-packages/qutip/__init__.py"", line 49, in <module>; qutip.settings.ipython = False; AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import)`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396:178,error,error,178,https://qutip.org,https://github.com/qutip/qutip/issues/1396,1,['error'],['error']
Availability,"I installed using conda-forge channel and installation worked without any problems, but when i run following jupyter notebook from example code on documentation: (http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/control-grape-cnot.ipynb) ; it gives following error; ![grape](https://user-images.githubusercontent.com/34689025/36730450-652e8d18-1c02-11e8-83a8-8741d69f24d6.JPG). ![gr](https://user-images.githubusercontent.com/34689025/36730803-a21e9bcc-1c03-11e8-9a77-d333108df231.JPG)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368867793:288,error,error,288,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368867793,1,['error'],['error']
Availability,"I installed visual studio 2015 from https://visualstudio.microsoft.com/vs/older-downloads/ , after that I simply followed instructions of qutip documentation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-480488981:80,down,downloads,80,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-480488981,2,['down'],['downloads']
Availability,"I just built and installed Qutip on the command line using Enthought python. No errors... Then when I run I get:. Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information. > > > from qutip import *; > > > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > > > Please check your Xcode installation; > > > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > > > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > > > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > > > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > > > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > > > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > > > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > > > compilation terminated.; > > > Traceback (most recent call last):; > > > File ""<stdin>"", line 1, in <module>; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/**init**.py"", line 213, in <module>; > > > from qutip.qobj import *; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in <module>; > > > from qutip.ptrace import _ptrace; > > > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in <module>; > > > from qutip.sparse import sp_reshape; > > > File ""/Users/rjmag",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382:80,error,errors,80,https://qutip.org,https://github.com/qutip/qutip/issues/382,1,['error'],['errors']
Availability,"I just ran locally:; `make latexpdf SPHINXOPTS=""-W --keep-going -T""`; And got `build succeeded` message.; The error on the project pipeline shows:; `Unknown interpreted text role ""cls"".` for the `me_solver`. Do you have an idea of why could this be happening?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1567334034:110,error,error,110,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1567334034,1,['error'],['error']
Availability,"I just updated to qutip 4.1.0 on archlinux and now code that ran fine before simply fails. The smallest example I managed to boil it down to is multiplying a daggered state with an operator:; ```; import qutip as qt; import numpy as np. N = 10; x = qt.Qobj(np.ones(N, complex)/(N**(1/2))); op = qt.destroy(N) + qt.create(N). for i in range(10):; print(x.dag()*op); ```; which randomly yields different results, e.g.; ```; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +4.00979001e+087j 0.00000000e+000 +5.37624943e+241j; 5.37624943e+241 +1.18017809e+000j 0.00000000e+000 +1.33956231e+000j; 1.33956231e+000 +0.00000000e+000j 1.48170345e+000 +0.00000000e+000j; 1.84311049e+000 +0.00000000e+000j 9.48683298e-001 +0.00000000e+000j]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777+0.j 0.76344136+0.j 0.00000000+0.j; 0.00000000+0.j 0.00000000+1.18017809j 0.00000000+1.33956231j; 1.33956231+0.j 1.48170345+0.j 1.84311049+0.j; 0.94868330+0.j ]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 0.31622777+0.j 0.76344136+0.j 0.00000000+0.j; 0.00000000+0.j 0.00000000+1.18017809j 0.00000000+1.33956231j; 1.33956231+0.j 1.48170345+0.j 1.84311049+0.j; 0.94868330+0.j ]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +0.00000000e+000j 0.00000000e+000 +5.29328215e+180j; 5.29328215e+180 +1.18017809e+000j 0.00000000e+000 +1.33956231e+000j; 1.33956231e+000 +0.00000000e+000j 1.48170345e+000 +0.00000000e+000j; 1.84311049e+000 +0.00000000e+000j 9.48683298e-001 +0.00000000e+000j]]; Quantum object: dims = [[1], [10]], shape = (1, 10), type = bra; Qobj data =; [[ 3.16227766e-001 +0.00000000e+000j 7.63441362e-001 +0.00000000e+000j; 0.00000000e+000 +4.00979001e+087j 0.00000000e+000 +5.37624943e+24",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681:133,down,down,133,https://qutip.org,https://github.com/qutip/qutip/issues/681,1,['down'],['down']
Availability,"I know you've marked this as draft, but let me point out that you've not really aligned your `master` with ours after the merge (one of the reasons it's not a good idea to develop using `master`). You've merged in the changes from our branch, but really you needed to overwrite your local copy with ours; I squashed the previous PR down into just one commit to keep the commit log cleaner and easier to interpret. In this sort of triangular workflow where you're proposing PRs that might not be merged as-is, you need to treat our repository as the single source of truth - you should never change your `master` branch except by doing `git pull` to our repository, so you can't get out of sync. Since you've now developed on the top of an incorrect tip, it'll be a bit difficult for you to untangle if you're not very familiar with `git`. You _can_ do it with rebasing or cherry-picking techniques to keep what you've done, but in this particular case (and there's no way you could have known this), I was actually just about to publish PR #1490 that makes all these same changes in `test_metrics.py`, but also goes a lot further in rewriting the tests in a more pytest-y style. It might be better for you if you reset your repository to match ours exactly, and then start again using the proper branching structure for the superoperator and tensor tests you wanted to look at. Perhaps you could have a look at #1490 as well to see how I go about parametrising tests and organising everything to keep it tidy (not saying that my code is perfect by a long shot, and the concept of ""random"" tests is questionable overall, but it's what we've got at the moment). Remember as well that readibility is a big concern. Using an automated tool to enforce pep8 compliance often won't get you the best results - our real style requirement is that it's easy to read, so linebreaks should be in sensible places (that still abide by pep8).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1487#issuecomment-814998778:332,down,down,332,https://qutip.org,https://github.com/qutip/qutip/pull/1487#issuecomment-814998778,1,['down'],['down']
Availability,"I like your work very much!; Especially the additional option to stop the simulation when a certain accuracy of the observables is reached!. However, I have the problem that the option is not known with me. ; ` mcsolve() got an unexpected keyword argument 'target_tol'`.; Possibly there is just a problem with my merge. EDIT: Error found, the import classes changed to:; ```; from qutip.solver.mcsolve import mcsolve, McSolver; from qutip.solver.solver_base import Solver; from qutip.solver.options import SolverOptions; ```. Now all works fine, I would vote up for merging!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1710#issuecomment-974028874:326,Error,Error,326,https://qutip.org,https://github.com/qutip/qutip/pull/1710#issuecomment-974028874,1,['Error'],['Error']
Availability,"I looked at the failures and they seem to be in parts that are completely disconnected from logging. I have no idea why they aren't also in the main branch, but I'll investigate. Anyway, I agree with you, @jrjohansson, that the current implementation is not in keeping with the design of Python's logging package. At the time, it was a bit of a hack to try and make it fit as well as possible, but I think in retrospect that may have been misguided. Do you think the refactoring to more appropriately use Python logging would be a good 3.2.0 feature, or would you suggest that for ≥ 3.3? Thanks!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-147493646:16,failure,failures,16,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147493646,1,['failure'],['failures']
Availability,"I made a snipped with dummy arrays that reproduce the error. Is it enough?; ````; H=[]. timelist_Jump_op=[]; time=[]; for i in range(t):; H.append(Qobj(np.ones((2,2)))); list_Jump_op.append(Qobj(np.ones((2,2)))); time.append(0.5). estados_val=np.array([; [[ 0.4952317 +0.j , 0.35307695-0.22776115j],; [ 0.35307695+0.22776115j, 0.5047683 +0.j ]],. [[ 0.80942518+0.j , 0.14798043+0.36381018j],; [ 0.14798043-0.36381018j, 0.19057482+0.j ]],. [[ 0.74030166+0.j , -0.42252924+0.11715014j],; [-0.42252924-0.11715014j, 0.25969834+0.j ]],; [[ 0.76627252+0.j , 0.14479804+0.39765874j],; [ 0.14479804-0.39765874j, 0.23372748+0.j ]],; [[ 0.69965345+0.j , 0.4260361 -0.16920917j],; [ 0.4260361 +0.16920917j, 0.30034655+0.j ]],; [[ 0.80355468+0.j , 0.36706718-0.15204028j],; [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) . predictions=[mesolve(H,; Qobj(estados_val[i]),; time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]`. ```; `---------------------------------------------------------------------------; Exception Traceback (most recent call last); <ipython-input-26-ef5799d8412d> in <module>; 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. <ipython-input-26-ef5799d8412d> in <listcomp>(.0); 26 [ 0.36706718+0.15204028j, 0.19644532+0.j ]]]) ; 27 ; ---> 28 predictions=[mesolve(H,; 29 Qobj(estados_val[i]),; 30 time,list_Jump_op,options=Options(nsteps=1000000000)) for i in range(len(estados_val))]. ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in mesolve(H, rho0, tlist, c_ops, e_ops, args, options, progress_bar, _safe_mode); 270 func(0., v, *ode_args) + v; 271 ; --> 272 res = _generic_ode_solve(func, ode_args, rho0, tlist, e_ops, options,; 273 progress_bar, dims=rho0.dims); 274 res.num_collapse = len(c_ops). ~/anaconda3/lib/python3.8/site-packages/qutip/mesolve.py in _generic_ode_solve(func, ode",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553:54,error,error,54,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879127553,1,['error'],['error']
Availability,"I made the change for immutable `Coefficient` and `_Elements`. ; `replace` is about 200ns slower than the previous inplace `arguments`.; With `_Elements` 'immutable', `QobjEvo.copy`'s default is to do a shallow copy of the `elements` list. ; The `_BaseElement._call` is not returning the (data, coeff) pair, but stores it to save on time to create of a python object.; This it may not safe with threading: if 2 copies of a `QobjEvo` are called at the same time with different `t`, both could return the same result. I am not sure how good is the GIL in this case.; I don't expect it to be an issue, in the rare case threading would be used, a deepcopy is available with `QobjEvo.copy(deepcopy=True)`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1481#issuecomment-817018631:655,avail,available,655,https://qutip.org,https://github.com/qutip/qutip/pull/1481#issuecomment-817018631,1,['avail'],['available']
Availability,I met the same errors as you described.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536370037:15,error,errors,15,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536370037,1,['error'],['errors']
Availability,"I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original_dimensions = H.dims.copy(); new_dimensions = list(H.shape). H.dims = new_dimensions; for c_op in c_ops:; c_op.dims = new_dimensions. outputs = qutip.propagator(H, times, c_ops=c_ops); for op in outputs:; # the ops are superoperators, so have expanded dimensions; op.dims = [original_dimensions, original_dimensions]; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:1636,toler,tolerance,1636,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,1,['toler'],['tolerance']
Availability,"I missed `qstate` for some reason, thanks for pointing to it. Anyway, I needed something more general. Anyway, I was thinking how to combine different notations. . That is, for qubits, people use:; - `u` / `d` for up and down (as it is is `qstate`),; - `g` / `e` for ground and excited,; - `H` / `V` for horizontal and vertical (polarizations),. and, of course, numbers. I was thinking about making a dictionary, but I am not sure if it is going to help or not (e.g. there may be intersecting conventions). But it would be nice to write e.g.:. ```; ket(""e00"") + ket(""g01"") + ket(""g10""); ```. I will clean things and do a PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/64#issuecomment-28288241:221,down,down,221,https://qutip.org,https://github.com/qutip/qutip/issues/64#issuecomment-28288241,1,['down'],['down']
Availability,"I moved ```limits bar_style color_limits color_style```. The number of arguments is 13 > 10, but they should not be in ```options```. Also, I raised an error when users pass unexpected arguments to ```bar_style color_style```.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2193#issuecomment-1630117889:152,error,error,152,https://qutip.org,https://github.com/qutip/qutip/pull/2193#issuecomment-1630117889,1,['error'],['error']
Availability,"I need mcsolve result in row and column matrix as mentioned below. How can i got this because this code is showing error.; ```python; fieldfield_list = []; atomfield_list = []; tlist = np.linspace(0,20,2000); gM_list = np.linspace(0,3,200); for g_M in gM_list:; H = omega_M*b.dag()*b + Y*(a + a.dag())+ g*((a*sig_plus) + (a.dag()*sig_plus.dag())); + g_M*a.dag()*a*(b + b.dag()); evalues = mcsolve(H, psi0, tlist, c_ops=[], e_ops=[], ntraj=None, args={}, options=None, progress_bar=True, map_func=None, map_kwargs=None, _safe_mode=True); fieldfield_list.append(evalues[0][-1]/(evalues[2][-1]**2)); atomfield_list.append(evalues[1][-1]/(evalues[2][-1]*evalues[3][-1])); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1189:115,error,error,115,https://qutip.org,https://github.com/qutip/qutip/issues/1189,1,['error'],['error']
Availability,I never saw the test failure in `test_zheevr`. That's odd - I thought we'd merged a change that fixed that. I certainly haven't seen one for a very long time personally - it's all `test_diag_liou_mult`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1446#issuecomment-805888167:21,failure,failure,21,https://qutip.org,https://github.com/qutip/qutip/pull/1446#issuecomment-805888167,1,['failure'],['failure']
Availability,I notice that I am also getting the same error on the travis build in the latest branch on my fork. An error that I do not get on my local machine. I will try a fresh conda env later and see if I can reproduce it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-148046579:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148046579,2,['error'],['error']
Availability,I noticed that stochastic._rhs_psi_platen wasn't working so I fixed it. Now ssesolve can be used with the platen solver for multiple stochastic collapse operators with both homodyne and heterodyne methods. . Basically I have written down equation 1.3 from chapter 15.1 of Numerical solution of stochastic differential equations by Kloeden and Platen.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/915:233,down,down,233,https://qutip.org,https://github.com/qutip/qutip/pull/915,1,['down'],['down']
Availability,"I noticed this recently while addressing an issue for which the test of `average_gate_fidelity` was failing when the random supermatrix included an odd dimensional object. I had your same impression but was unsure of the proper function. I am pinging @BoxiLi and @quantshah to keep an eye on this, if they are knowledgeable, in the future months. Thank you @lucainnocenti, and if you think that your fix is fine, please open directly a pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/869#issuecomment-497300028:243,ping,pinging,243,https://qutip.org,https://github.com/qutip/qutip/issues/869#issuecomment-497300028,1,['ping'],['pinging']
Availability,"I now see SNOT and Toffoli gates as available in the gate resolvers, but I don't use the code so can't make a final judgment. I'll leave to @BoxiLi to close if appropriate now.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/614#issuecomment-809431920:36,avail,available,36,https://qutip.org,https://github.com/qutip/qutip/issues/614#issuecomment-809431920,1,['avail'],['available']
Availability,"I observed something strange after your update. On windows, with Jupyter Notebook, the kernel crashes every time when I try to plot the circuit. No error message. Does it run normally on your OS?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010:148,error,error,148,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605285010,1,['error'],['error']
Availability,"I often get these kind of error when installing manually. If you install Qutip with openmp once, the next time you install it without, you need to clean the old version or you get similar error. I never got this from a clean install. . Setting the `has_openmp` flag at installation is better, but I would let the precompiler set it instead of setup.py.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334#issuecomment-670227091:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/1334#issuecomment-670227091,2,['error'],['error']
Availability,I put some more download and versioning badges into the README in #1511. If you're happy Nathan (@nathanshammah) we can close this issue now?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/983#issuecomment-829132520:16,down,download,16,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-829132520,1,['down'],['download']
Availability,"I quite like this. I find the operator-to-vector-vector-to-operator casting too cumbersome. I also think its OK notation wise, since we typically use parenthesis when superoperators act on operators. Another option however would be to add this functionality to `Qobj.__mul__`, such that `Qobj.__mul__` is interpreted as 'acting on' if an operator is multiplied from the left on a state, or a superoperator from the left on an operator. Leaving out the parenthesis is also pretty standard notation. For the `Qobj.__call__` solution, I don't like so much that ""A(B)"" is interpreted as ""A B A.dag()"" when A and B are both operators though. This is not standard notation anywhere that I'm familiar with and I would personally be very confused by getting this result. If anything I would have expected an error or possibly the product ""AB"".",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/475#issuecomment-221078645:800,error,error,800,https://qutip.org,https://github.com/qutip/qutip/issues/475#issuecomment-221078645,1,['error'],['error']
Availability,"I ran the full tests on Windows 10. All passed except 1. Trace as follows:; ```; ======================================================================; FAIL: Monte-carlo: Collapse terms constant (str format); ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Anaconda2\envs\q4_2-dev-py36\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Anaconda2\envs\q4_2-dev-py36\lib\site-packages\qutip-4.3.0.dev0+6915aee-py3.6-win-amd64.egg\qutip\tests\test_mcsolve.py"", line 326, in test_MCSimpleConstStr; assert_equal(avg_diff < mc_error, True); File ""C:\Anaconda2\envs\q4_2-dev-py36\lib\site-packages\numpy\testing\utils.py"", line 416, in assert_equal; raise AssertionError(msg); AssertionError:; Items are not equal:; ACTUAL: False; DESIRED: True; -------------------- >> begin captured stdout << ---------------------; 10.0%. Run time: 8.27s. Est. time left: 00:00:01:14; 20.0%. Run time: 10.17s. Est. time left: 00:00:00:40; 30.0%. Run time: 12.19s. Est. time left: 00:00:00:28; 40.0%. Run time: 14.11s. Est. time left: 00:00:00:21; 50.0%. Run time: 16.05s. Est. time left: 00:00:00:16; 60.0%. Run time: 18.03s. Est. time left: 00:00:00:12; 70.0%. Run time: 19.99s. Est. time left: 00:00:00:08; 80.0%. Run time: 21.94s. Est. time left: 00:00:00:05; 90.0%. Run time: 23.94s. Est. time left: 00:00:00:02; 100.0%. Run time: 25.87s. Est. time left: 00:00:00:00; Total run time: 25.99s. --------------------- >> end captured stdout << ----------------------. ----------------------------------------------------------------------; Ran 488 tests in 2700.806s. FAILED (SKIP=9, failures=1); >>>; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729#issuecomment-317797935:1669,failure,failures,1669,https://qutip.org,https://github.com/qutip/qutip/pull/729#issuecomment-317797935,1,['failure'],['failures']
Availability,"I re-launched the Travis tests on all platforms. They pass for all besides Mac OS (similar error as for other PR). With `python setup.py install`, with `install` instead of `develop`, things seem to work. What it is unclear to me is why it reads that the QuTiP Version is `4.4.0.dev0+1a639d7a`, when I could not find this hash in here (or maybe I am confused). Now, after some tries with install and develop, I am on that version of qutip-dev. . To begin with, I am running the contents of the [development notebooks](https://github.com/qutip/qutip-notebooks/tree/master/development). Some comments below are relevant to the PR of the notebooks, https://github.com/qutip/qutip-notebooks/pull/71. * `development-qobjevo.ipynb`: Runs fine. ; * `development-qobjevo-adv.ipynb`: Runs fine. ; * `development-qobjevo-timing.ipynb`: Runs fine. * The notebook [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb) could be re-adapted to be among other tutorials, with some title like ""Time-dependent `Qobj` with `QobjEvo`"". There could be much more commentary of the basics of `QobjEvo`. Some could be copy-pasted from the introductory comment in `qobjevo.py`. You are the best person to explain, with basic examples, of increasing complexity, what QobjEvo can do. Possibly taking a known physics problem, e.g., the damped harmonic oscillator with `mesolve`, could help the user. . * In [development-qobjevo.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo.ipynb), block 22 has the first check set to False, but this is both in the notebook I run locally and in the one online. So probably that's the expected behaviour. . In [development-qobjevo-adv.ipynb](https://github.com/qutip/qutip-notebooks/blob/master/development/development-qobjevo-adv.ipynb), block 20 has a comment that is an unfinished sentence. In general, I think that examples could be much more descriptive, with comments, about the",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489565751:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489565751,2,['error'],['error']
Availability,"I reactivated MKL, updated numpy to 1.22.0 and when running `import qutip.testing` I get the following error:. `Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""C:\ProgramData\Miniconda3\lib\site-packages\qutip\__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""C:\ProgramData\Miniconda3\lib\site-packages\qutip\utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'`. Then as I wanted to provide my config I typed `import qutip` but it yielded the exact same error so I reverted it back to 1.20.3. QuTiP Version: 4.6.2; Numpy Version: 1.20.3; Scipy Version: 1.7.1; Cython Version: 0.29.25; Matplotlib Version: 3.5.0; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Miniconda3\lib\site-packages\qutip. Why is it on OPENBLAS now?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1750#issuecomment-1005876725:103,error,error,103,https://qutip.org,https://github.com/qutip/qutip/issues/1750#issuecomment-1005876725,2,['error'],['error']
Availability,"I realised I never replied to this. I suggested `2*rtol` in this case because the error propagation in this case would guarantee that this is always sufficient. For other tests, we can always design the test so that it's calculable what the error term should be. I'd say it's generally a good idea to have the tests be as tight as we can possibly make them without risking false-negatives on the results, because otherwise we're not properly testing that the parameters do what they say. Regardless, that test failure isn't due to any of my PRs - it's a pre-existing problem that we happened to get unlucky on this time round. It'll get fixed when I modify `test_mesolve.py`. Can we review this PR to get the ball rolling on getting all of the test refactoring considered?. Possible reviewers: @Ericgig, @BoxiLi, @nathanshammah",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-628265133:82,error,error,82,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-628265133,3,"['error', 'failure']","['error', 'failure']"
Availability,"I really can't see how the changes here could be causing the Travis errors. ; I restarted once, but got the same errors in all three tests; Any ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-147449765:68,error,errors,68,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-147449765,2,['error'],['errors']
Availability,"I report local tests failing on my MacOS 10.13.6 by running qutip.testing.run(). Tests fail for python 3.7 and 3.6 environments, if QuTiP 4.4. is installed in develop mode (openmp = True). ; Tests fail also for QuTiP 4.3.1 installed with conda. . ### py36; Broken test for python 3.6 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1: ; Error Message below: ; ``` ; Metrics: Trace dist. & Fidelity mixed/pure inequality ... ok ; Metrics: Check avg gate fidelities for random ... ; python(35852,0x7fff9757f380) malloc: *** error for object 0x7fe189168a10: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ---------------------------------------------- ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py36 ; source activate qutip-dev-44-py36 ; conda install python=3.6 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp; ``` . ### py37; Broken test for python 3.7 with: (1) QuTiP 4.4-dev, with openmp =True and (2) conda install qutip, QuTiP 4.3.1. Error Message below: ; ``` ; qutip.tests.test_qobj.test_expect_exception ... ok Qobj data ... ok Qobj type ... ok Qobj Hermicity ... ok ; Qobj unitarity ... ok ; Qobj shape ... ok ; Qobj: multiplication w/ non-square qobj.dims ... ok ; Qobj addition ... ok ; Qobj subtraction ... ok ; Qobj multiplication ... ok ; Qobj division ... ok ; Qobj power ... ; python(35379,0x7fff9757f380) malloc: *** error for object 0x7fbf1089fa90: incorrect checksum for freed object - object was probably modified after being freed. *** ; set a breakpoint in malloc_error_break to debug ; Abort trap: 6 ; ``` . Building the dev environment: ; ``` conda create --name qutip-dev-44-py37 ; source activate qutip-dev-44-py37 ; conda install python=3.7 cython numpy scipy nose jupyter matplotlib; python setup.py develop --with-openmp```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-473772867:371,Error,Error,371,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-473772867,4,"['Error', 'error']","['Error', 'error']"
Availability,"I see it as `v4` being wrong instead of `dev.major`. It should not truncate small values with an hidden tolerance.; Here it's the sparse matrix operations which drop small values to stay sparse that cause the change. In v5, these operations are done using dense matrices. However this should have been the case for a long time... The test `p != 0` is always risky with floating number, we should use `p >= tol` with a documented tolerance instead. The `atol` from core options would work here, but we could also have the tolerance as an optional input to measurement functions.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2029#issuecomment-1336417866:104,toler,tolerance,104,https://qutip.org,https://github.com/qutip/qutip/issues/2029#issuecomment-1336417866,3,['toler'],['tolerance']
Availability,"I see that qutip announced a new version, but after my update,It breaks down:; `from qutip import *`; the error occurs: undefined symbol: _ZTINSt8ios_base7failureB5cxx11E; After google the error,I find a possible solution :` pip install qutip`; Then the error changes to : ; `---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-3-0a5c3f9bc976> in <module>(); 3 import matplotlib.pyplot as plt; 4 from tqdm import tnrange,tqdm_notebook; ----> 5 from qutip import *. /home/caidish1234/anaconda3/lib/python3.6/site-packages/qutip/__init__.py in <module>(); 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 ; 51 # -----------------------------------------------------------------------------. AttributeError: module 'qutip' has no attribute 'settings'`. PS:I'm using Google Computing platform. The system is Ubuntu .However,it works fine on my mac...........",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/694:72,down,down,72,https://qutip.org,https://github.com/qutip/qutip/issues/694,4,"['down', 'error']","['down', 'error']"
Availability,"I see the `Nan`'s...; Scipy's `norm` call numpy's `norm` which call `svd` with `compute_uv=False` and it return junk...:. ```; np.linalg.svd(nan_matrix, compute_uv=False); array([ inf, inf, 1.07311390e+000, 9.83440402e-001,; 9.42395122e-001, 9.27989857e-001, 8.23177182e-001, 2.38050872e-022,; 6.40149943e-032, 5.64518572e-033, 9.14729223e-045, 2.72704923e-049,; 1.56401558e-063, 4.83650926e-068, 6.39334574e-081, 2.83836536e-092,; 8.27175428e-096, 1.73661126e-097, 2.01091260e-114, 1.30856687e-123,; 2.06455678e-127, 4.92744107e-155, 5.08952541e-159, 1.74118770e-186,; 9.44136765e-227, 6.23313780e-246, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, 0.00000000e+000,; 0.00000000e+000, 0.00000000e+000, 0.00000000e+000, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, nan,; nan, nan, nan, 0.00000000e+000]); ```. Put with `compute_uv=True` (default) it work fine... I guess the best we can do is report to numpy... Do you want to do it?. Not computing the `uv` is 10x faster in case everything goes well and these error seem rare, so for now I would use a fall back:; ```; norm = np.linalg.norm(matrix, 'nuc'); if np.isnan(norm):; # Bug in `numpy svd(..., compute_uv=False)` used by `norm(..., 'nuc')`; norm = np.linalg.svd(nan_matrix)[1].sum(); return norm; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-930347069:1704,error,error,1704,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-930347069,1,['error'],['error']
Availability,"I see there is an error when building the pdf but don't understand why. Running the `make pdflatex` command works for me locally. Also the html page is rendered as expected:. <img width=""422"" alt=""Screenshot 2023-05-29 at 11 56 07"" src=""https://github.com/qutip/qutip/assets/57567043/ebbd88a8-df2e-4567-a254-53031d6d7e13"">",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1566883813:18,error,error,18,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1566883813,1,['error'],['error']
Availability,"I see this issue as well but with a different test (error came up with ptrace test). I think this is a larger py3.7 issue, some comments have come up in the mailing list too. In a py3.7 env I see malloc errors occasionally with the es solver in correlation_2op_1t calls as used here: https://github.com/gsteele13/gary-exploring-qutip/blob/master/Correlations.ipynb. QuTiP Version: 4.4.1; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.1; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373:52,error,error,52,https://qutip.org,https://github.com/qutip/qutip/issues/1120#issuecomment-551924373,2,['error'],"['error', 'errors']"
Availability,"I started patching documentation:; - Updated import from moved files (`from qutip.states` --> `from qutip.core.states`).; - Changes `Options` to `SolverOptions`.; - Commented some calls to function and method that do not exist anymore (`QobjEvo.to_list`). There are a lots of warning when building documentattion, but actual error seems to be limited to qip and HEOM changes that where not properly merged.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1850#issuecomment-1095498766:325,error,error,325,https://qutip.org,https://github.com/qutip/qutip/pull/1850#issuecomment-1095498766,1,['error'],['error']
Availability,"I think I have tracked down the problem to this issue https://github.com/cvxgrp/cvxpy/issues/1159, we could patch it using dense matrices instead of sparse ones.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1422#issuecomment-794422644:23,down,down,23,https://qutip.org,https://github.com/qutip/qutip/issues/1422#issuecomment-794422644,1,['down'],['down']
Availability,I think I pinned down the issue for local tests on Mac 10.13.6 (High Sierra) with Python 3.7 with the current qutip 4.4 dev version to the line; ```; assert_(0 <= average_gate_fidelity(rand_super()) <= 1); ```; in test_metrics.py.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496365615:17,down,down,17,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496365615,1,['down'],['down']
Availability,"I think `hypothesis` is the best method here in the long term, but it will most likely have to be a long-term goal. I think the main pro in favour of it is that it actually is making an attempt to remove randomness; it's attempting to comprehensively test a spanning set of input parameters, rather than just Monte-Carlo'ing our way through and hoping. There's a couple of points which make it difficult to implement:. 1. QuTiP can be quite fragile with respect to unexpected input formats, particularly in older parts of the code.; 2. Various components are only accurate up to some tolerance, and the error propagation to work out how that corresponds to useful measurable quantities can be rather tricky. Those are certainly both solvable problems, and point 1 in particular is just general improvement of usability. The second point is about designing the tests well, which again is certainly doable, but will take a while (it takes long enough just to refactor them, let alone a total rewrite of large chunks of them!).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268#issuecomment-629272663:584,toler,tolerance,584,https://qutip.org,https://github.com/qutip/qutip/issues/1268#issuecomment-629272663,4,"['error', 'toler']","['error', 'tolerance']"
Availability,"I think i found the origin of the problem, but i don't know how to fix it correctly. I noticed that in the _essolve.py_ file (line 149) there is this instruction; ```; # check if state is below error threshold; if abs(rho0.full()).sum() < 1e-10 + 1e-24:; # enforce zero operator; return eseries(qzero(rho0.dims[0])); ```; which ( i think) should return zero eseries if the sum of all components is less than that value. However, if i increase the limit from 1e-10 to 1e-05 it work, that is it returns a zero eseries.; In the original case it doesn't enter into this _if_ and than returns an _es_ series which es.ampl[0] returns that error. ### Edit:; I replaced the `return estidy(out)` in line 205 of the same file with `return out`, and it seems to work!. ### Edit 2:; More precisely the problem is on the tolerance of tidy. I modified lines 315-316 of _eseries.py_ file with; ```; rate_tol = 1e-10; ampl_tol = 1e-13; ```; and now (with `return estidy(out)` as in origin), it's working.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1388#issuecomment-735377831:194,error,error,194,https://qutip.org,https://github.com/qutip/qutip/issues/1388#issuecomment-735377831,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"I think is is one of the errors that occurs when running qutip from within; the installation director.; Just cd to your home directory and all should be fine. Alex. On 8 May 2018 at 13:57, Shahnawaz Ahmed <notifications@github.com> wrote:. > Hi, could you please tell us how you installed QuTiP and which python are; > you using? Just type the following in the terminal; >; > which python; >; > To check how QuTiP was installed (if on Linux or Mac):; >; > pip freeze | grep ""qutip""; >; > If on windows, download Anaconda and install QuTiP from conda-forge with; >; > conda install -c conda-forge qutip; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/858#issuecomment-387393174>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7clOzLboC5wUH12kiohPXZ6DnmDgks5twZY7gaJpZM4T2T0k>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387490007:25,error,errors,25,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387490007,2,"['down', 'error']","['download', 'errors']"
Availability,"I think it's quite important to understand why this happened. Previously we reliably had an exactly correct result, and now we don't. This particular check for `p != 0` of a float is I think okay because it's there specially to avoid division by exactly zero. I can think of at least two plausible scenarios:. 1. The issue was caused by the removal of auto_tidyup, in which case I think either a setting like this with an explicit check in either the measurement functions or the simulator are good solutions (although it should be possible to override the setting on a per-call basis, just like with atol). 2. The issue was caused by the removal of the data layer mathematical operations, and in particular, by the replacement of `data / value` by `data.mul(data, 1 / value)`, in which case I think the solution is to add a `div` operation to the data classes so that we don't lose this accuracy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917229773:76,reliab,reliably,76,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917229773,1,['reliab'],['reliably']
Availability,"I think that `qutip.testing` and the tests in CI are different. The former are in that file, the latter look at the instructions from [`.travis.yml`](https://github.com/qutip/qutip/blob/master/.travis.yml), which basically call `python setup.py install` (or `test`). Also looking at the Travis CI reports, it seems that they work fine. Locally, I'm getting tests to fail on my machine, with malloc or abort trap 6 errors every other time, although some time they pass (hence I opened #1160). It may be that they fail on my machine due to some mess with the gcc compiler.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319:414,error,errors,414,https://qutip.org,https://github.com/qutip/qutip/issues/1158#issuecomment-576002319,1,['error'],['errors']
Availability,"I think that makes sense. Tolerances of 1e-12 are a bit ridiculous to insist upon for a trace norm, since that scales with the dimension.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/435#issuecomment-185802054:26,Toler,Tolerances,26,https://qutip.org,https://github.com/qutip/qutip/pull/435#issuecomment-185802054,1,['Toler'],['Tolerances']
Availability,"I think that more slower, but more reliable, Travis CI tests, would be a definite benefit",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/359#issuecomment-130258998:35,reliab,reliable,35,https://qutip.org,https://github.com/qutip/qutip/pull/359#issuecomment-130258998,1,['reliab'],['reliable']
Availability,"I think that the rendering is executed through the Visual Studio extension called ""[Jupyter Notebook Renderers](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter-renderers)"". I apparently solved this issue by simply downgrading the version of this extension, since I read in the changelog of the latest version ""Removed rendering of text/latex in favor of built-in support."". Thus the problem was in the Visual Studio part, however it still remain opened in the case one decide to install the latest version of this extension. Thank you.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1809#issuecomment-1043028427:237,down,downgrading,237,https://qutip.org,https://github.com/qutip/qutip/issues/1809#issuecomment-1043028427,2,['down'],['downgrading']
Availability,"I think that this is the correct solution though, so big bonus points for hunting this down! At work, we have no use for OSX, and would love py3 on win, so I can fiddle around to get something working. Having two separate sources may be the route we need to go. It wouldn't be the end of the world, but should be avoided unless absolutely necessary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/647#issuecomment-279727419:87,down,down,87,https://qutip.org,https://github.com/qutip/qutip/issues/647#issuecomment-279727419,1,['down'],['down']
Availability,"I think that typically you don't gain much by using more processes than the number of cores, even if hyperthreading is available. In some cases you even get a performance degradation, so that's the reason why we dont default to cores*threads. However if you want to you can set the num_cpu flag explicitly.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/260#issuecomment-63587960:119,avail,available,119,https://qutip.org,https://github.com/qutip/qutip/issues/260#issuecomment-63587960,1,['avail'],['available']
Availability,"I think the current behaviour is fine, it just depends on the way the kronecker product is done in QuTiP. Pinging @nwlambert.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1285#issuecomment-643272712:106,Ping,Pinging,106,https://qutip.org,https://github.com/qutip/qutip/issues/1285#issuecomment-643272712,1,['Ping'],['Pinging']
Availability,"I think the module should really be `qutip.testing` (or `qutip.test` if the name's already taken), not `qutip.core.data.testing`, if you're going to add one. It's very likely to be the case in the future (if it isn't already) that you'll need additional dependencies to define the tests, and you don't want to force _all_ runtime users to have them to install QuTiP. If you put the package in a separate top-level module, it's _far_ easier to separate out all the code, and have `qutip/__init__.py` not import `qutip.testing`, so things won't break. Also, tests generally need to work with a fully imported version of the module. If we start putting testing infrastructure in the core, we're going to encode a whole lot of cyclical dependencies right away, or end up with `testing` modules scattered all across the codebase, for no real gain. For discovery: that would only happen during test generation, which comes after importing the modules and defining the classes, so you'd still be able to define tolerances and influence how the tests ran. The problem with _not_ having discovery is that it becomes very easy to forget to test a function, and with so much of the machinery automated, it's also easy to forget it when reviewing a PR. That's particularly true once you have external contributors writing these sorts of things - we have it in Qiskit, where people add things to our ""standard equivalence library"", and new contributors and new reviewers don't know where all the different tests are, so our discovery tests have helped catch bugs. That happens even with super experienced team members. I'd argue that code coverage metrics are possibly a better way of detecting missing tests - that fails safe if you add broken code and forget to test it, whereas having to specify the tests explicitly means you can accidentally add broken code to a dispatcher and not know, if you forgot to add the test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-981562735:1004,toler,tolerances,1004,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-981562735,1,['toler'],['tolerances']
Availability,"I think the test ist faulty. The spin matrices in test_operators.py, to which the output of jmat is compared, are missing the same sign. Should I fix this and prepare a new pull request?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/565#issuecomment-264087183:21,fault,faulty,21,https://qutip.org,https://github.com/qutip/qutip/pull/565#issuecomment-264087183,1,['fault'],['faulty']
Availability,"I think there are two separate issues here. . As for the fortran module, it's true that the it adds a lot of build complexity, but most users do not need it and can easily install qutip without it. There is a case for removing it from qutip and put it in a separate module, but think this should be low priority, since it would require non-negligible amount work, would break backwards compatibility (it should bump next release to 4.0), and does not really provide any new features (other than a less complex code base). There might users who rely on it and for them it might be annoying if we remove it. So I would vote for postponing it until there are very strong arguments for removing it. As for the topic of this issue, I think that qutip should follow the lead of NumPy, even if it breaks backwards compatibility in the configuration methods, so that users that are familiar with NumPy and related projects does not have any surprises when using qutip. Also, if I understand correctly, this would mostly change how one configure and build against blas libraries such as openblas? Then I guess it would not effect the typical user that just download and install the package with standard configuration (no site.cfg file), and it should be safe the follow the advice of the OP.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-155058653:1148,down,download,1148,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155058653,1,['down'],['download']
Availability,"I think this is a good addition. Whether it's accepted comes down to how much complexity it adds to the Bloch sphere class, I suspect. Perhaps open the PR and let's see what the code changes look like?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1683#issuecomment-933398132:61,down,down,61,https://qutip.org,https://github.com/qutip/qutip/issues/1683#issuecomment-933398132,1,['down'],['down']
Availability,"I think we finally have a concrete error and it's rather mystifying to me how it can happen:; ```; E = spla.expm(A.toarray()); if np.isnan(E).any():; print(""A:"", A); print(""A data:"", A.indices, A.indptr, A.shape); print(""A toarray:"", A.toarray()); print(""E:"", E); > raise RuntimeError(""NaNs generated by sp_expm.""); E RuntimeError: NaNs generated by sp_expm. qutip/sparse.py:408: RuntimeError; ----------------------------- Captured stdout call -----------------------------; A: (0, 1)	(-0.5+0j); (1, 0)	(0.5+0j); (1, 2)	(-0.7071067811865476+0j); (2, 1)	(0.7071067811865476+0j); (2, 3)	(-0.8660254037844386+0j); (3, 2)	(0.8660254037844386+0j); (3, 4)	(-1+0j); (4, 3)	(1+0j); A data: [1 0 2 1 3 2 4 3] [0 1 3 5 7 8] (5, 5); A toarray: [[ 0. +0.j -0.5 +0.j 0. +0.j 0. +0.j; 0. +0.j]; [ 0.5 +0.j 0. +0.j -0.70710678+0.j 0. +0.j; 0. +0.j]; [ 0. +0.j 0.70710678+0.j 0. +0.j -0.8660254 +0.j; 0. +0.j]; [ 0. +0.j 0. +0.j 0.8660254 +0.j 0. +0.j; -1. +0.j]; [ 0. +0.j 0. +0.j 0. +0.j 1. +0.j; 0. +0.j]]; E: [[nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]; [nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]; [nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]; [nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]; [nan+nanj nan+nanj nan+nanj nan+nanj nan+nanj]]; ```; See https://github.com/qutip/qutip/runs/3966808806?check_suite_focus=true#step:6:1646",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-948841475:35,error,error,35,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-948841475,1,['error'],['error']
Availability,"I thought that it was highly recommended to use the same compiler for; extensions that is used for python itself? Is this just an ideal rather; than a necessity?. Also, it would be ideal to try and use a compiler that is available on the; conda-forge. Not sure whether the Intel one is or not. On 28 May 2016 at 04:54, Paul Nation notifications@github.com wrote:. > Thanks for pointing this out. I did not know that this was the case.; > Ironically the complex numbers are done this way to support compilers (VS; > in particular) that do not obey C99. The suggested patch is a bit difficult; > to implement as the runtime generated Cython code is compiled via pyximport; > and getting in there to change the c files would be a bit tricky. However,; > I know that the Intel compiler has no problem with the Cython code (at; > least on Linux). So perhaps that is the way to go for Python 3.5.; > ; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > https://github.com/qutip/qutip/issues/447#issuecomment-222288358, or mute; > the thread; > https://github.com/notifications/unsubscribe/AIxX7bilAvaPFQKZx8CtnoG8p0DEpaQ_ks5qF7xvgaJpZM4HpJf1; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-222801414:221,avail,available,221,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-222801414,1,['avail'],['available']
Availability,"I thought we had resolved the installation issues with the Fortran side by making the MC solver a optional (default to False).; I am not that I have fully digested everything in this thread, but @zerothi seems confident that there is just some small change that we need to improve integration with the latest Numpy. Its not clear to me what are the risks or other downsides.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-155040632:364,down,downsides,364,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-155040632,2,['down'],['downsides']
Availability,"I tried it locally and `show` print the figure twice, whether you provide a figure or not. `render` itself print the picture so having it in `show` make `display` redundant. Otherwise, it work fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1619#issuecomment-988068295:163,redundant,redundant,163,https://qutip.org,https://github.com/qutip/qutip/pull/1619#issuecomment-988068295,1,['redundant'],['redundant']
Availability,"I tried it on Colab and obtained this error if importing a single function,; which seems related to the init, . ```; AttributeError Traceback (most recent call last); /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); 1 frames; /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 ; 51 # -----------------------------------------------------------------------------; ```; AttributeError: module 'qutip' has no attribute 'settings'. The strange thing is that that bit of the init has not been touched for years, https://github.com/qutip/qutip/blame/master/qutip/__init__.py#L45. I don't have an immediate fix (@quantshah might know more about colab) but a workaround could be using [My Binder](https://mybinder.org/), if that is a viable option for you. . To set it up, you need to copy a `requirements.yml` file in your repository and activate My Binder by copying the link into their homepage.; Right now, in the master of qutip-notebooks we get an issue with scipy's `IndexMixin` ; https://github.com/theislab/anndata/issues/146. But, from my [notebooks](https://github.com/nathanshammah/notebooks) repository it seems to work. Copying the environment file and copy-pasting the My Binder link should work. You can copy-paste a given branch in mybinder.org, such that it does not keep rebuilding the environment completely from scratch, something that will happen if it finds a new commit in that branch. Hope this helps. . .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1008#issuecomment-498667655:38,error,error,38,https://qutip.org,https://github.com/qutip/qutip/issues/1008#issuecomment-498667655,1,['error'],['error']
Availability,"I tried some experiments with elementwise exp with numpy to see if mkl did any parallel processing. It did not seem to. scipy.linalg.expm claims to use the Pade approximation. There used to be a expm2 (that used diagonalisation) and an expm3 (method?) but these have been deprecated. The scipy docs claim that the method used in expm is ""numerically more robust"". In the control modules we either use a eigendecomp (diagonalisation) method or scipy.linalg.expm_frechet as we typically need to compute propagators (which either uses the eigendecomp or is provided by the frechet deriv) . Frechet also uses some Pade approximation. I think the Pade method uses something like a LU decomp, but would need more research. It would always be more efficient to use the eigendecomp if it has been computed already. My guess is that if parallel LU decomp provides much (x100) faster eigendecomp, then the diagonalisation method would be much faster than expm. However, some experimentation would be needed to verify. . I am told that there are many methods of computing expm, and is there is much numerical research into it. It seems strange that scipy only offer us one method. The spinach control library (http://spindynamics.org/Spinach.php) reputedly has some interesting methods of computing expm. A quick Google search found https://github.com/scipy/scipy/pull/354, which shows that scipy considered adding a method kwarg, but have parked the idea. We currently have multiple methods in qutip based. I assume there must have been some motivation for writing our own sparse matrix functions for expm. It would seem that a pretty thorough investigation would be required determine to value of the various options. Would make a nice self contained project for someone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/462#issuecomment-207456658:355,robust,robust,355,https://qutip.org,https://github.com/qutip/qutip/issues/462#issuecomment-207456658,1,['robust'],['robust']
Availability,"I tried your suggestions but unfortunately nothing changes. I think my issue is with the way the rotating frame approximation is being implemented. Prior to this, my issue was that the graph couldn't be plotted over a large time scale because w0 is so high, so I added (w-w0) to H0. That fixed it, but I'm not sure how that affects the H1_coeff function. Is it as simple as including a (w-w0) term there as well, or do I need to adjust it some other way? As you can see, the pulse does exist, but for some reason nothing I change in the code causes the pulse to affect the graphs in any way. . Also, I realized that the heaviside function may not actually be appropriate for this situation. My goal is to create a pulse that spikes up and dies down, but the heaviside function is a step function so it spikes up and stays there. Do you know if qutip has any functions for such pulses?. ![k](https://user-images.githubusercontent.com/29261370/113001273-42ce2600-9136-11eb-84f3-a4bcdd7c458f.PNG)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1466#issuecomment-810278045:744,down,down,744,https://qutip.org,https://github.com/qutip/qutip/issues/1466#issuecomment-810278045,2,['down'],['down']
Availability,I try to `pip install qutip==4.0.2` (all the latest versions cannot be installed and have even more complicated error). The error seems to be easier to diagnosed. But I still cannot find out which part goes wrong and why the error happened. The error is:; ```; Collecting qutip==4.0.2; Using cached https://files.pythonhosted.org/packages/c1/de/2efee1b7f6cadd45426ef7b0759cdc3e522672a509d1c75bb317cc4be6cb/qutip-4.0.2.tar.gz; Complete output from command python setup.py egg_info:; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ; DTYPE = np.float64; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ; DTYPE = np.float64; ctypedef np.float64_t DTYPE_t; ; ITYPE = np.int32; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t; ; ITYPE = np.int32; ctypedef np.int32_t ITYPE_t; ; CTYPE = np.complex128; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'; ; Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t; ; CTYPE = np.complex128; ctypedef np.complex128_t CTYPE_t; ; CTYPE = np.int64; ^; ------------------------------------------------------------; ; qutip/cy/parameters.pxi:11:10: cimported module has no attribute 'int64'; ```; Thank you very much.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/911:112,error,error,112,https://qutip.org,https://github.com/qutip/qutip/issues/911,8,"['Error', 'error']","['Error', 'error']"
Availability,"I try to run the code for finding floquet energies from the qutip user guide. . ```python; import numpy as np; from qutip import *; import matplotlib.pyplot as plt. delta = 0.2 * 2*np.pi; eps0 = 1.0 * 2*np.pi; A = 2.5 * 2*np.pi; omega = 1.0 * 2*np.pi; H0 = - delta/2.0 * sigmax() - eps0/2.0 * sigmaz(); H1 = A/2.0 * sigmaz(); args = {'w': omega}; H = [H0, [H1, 'sin(w * t)']]; T = 2*pi / omega; f_modes_0, f_energies = floquet_modes(H, T, args); f_energies; ```. I got the following error . ```text; File ""<ipython-input-6-76f4206b44f0>"", line 1, in <module>; runfile('C:/Users/605912/OneDrive - BOOZ ALLEN HAMILTON/DARPA/John Burke/Quantum apertures/calculations/floquet.py', wdir='C:/Users/605912/OneDrive - BOOZ ALLEN HAMILTON/DARPA/John Burke/Quantum apertures/calculations'). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py"", line 827, in runfile; execfile(filename, namespace). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\spyder_kernels\customize\spydercustomize.py"", line 110, in execfile; exec(compile(f.read(), filename, 'exec'), namespace). File ""C:/Users/605912/OneDrive - BOOZ ALLEN HAMILTON/DARPA/John Burke/Quantum apertures/calculations/floquet.py"", line 27, in <module>; f_modes_0, f_energies = floquet_modes(H, T, args). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip\floquet.py"", line 102, in floquet_modes; U = propagator(H, T, [], args). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip\propagator.py"", line 186, in propagator; _safe_mode=False). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip\sesolve.py"", line 157, in sesolve; ss = _sesolve_QobjEvo(H, tlist, args, options). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\lib\site-packages\qutip\sesolve.py"", line 189, in _sesolve_QobjEvo; H_td.compile(omp=nthread). File ""C:\Users\605912\AppData\Local\Continuum\anaconda3\",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207:483,error,error,483,https://qutip.org,https://github.com/qutip/qutip/issues/1207,1,['error'],['error']
Availability,"I understand completely!. I'd probably just go to `int64` with your internal CSR implementation for the moment. Would it be very easy to have the `int32`/`int64` boiled down to a single compile-time flag, for those people that compile QuTiP manually and feel they really need the smaller `int32` matrices? The pre-compiled pip/conda releases could be `int64`. That might be a simple way to provide some support for ""both"". Somehow, I thought that SciPy would put a lot more emphasis on performance, and do things like Kronecker products without conversion. It would seem that SciPy should be the place to really optimize the sparse linear algebra implementation, including all the possible combinations like `CSR * DIA`. Then everyone could build on top of that, making custom sparse-matrix implementation unnecessary. Maybe when someone gets some serious funding for working on QuTiP, encapsulating all of this better would be doable. So, just something to keep in mind before bolting on too many things onto the existing custom implementation (like multiple sparse and full storage formats). Once you open up that can of worms, it just might be better to re-design `Oobj.data` to have a very broad base (e.g. SciPy), and keep the custom CSR as an optional, highly efficient implementation for the special case, maybe in a separate package. Either way, it's going to be a lot of work, and not something for a minor-version release.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-384094285:169,down,down,169,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-384094285,2,['down'],['down']
Availability,"I updated my qutip to V5 and I tried ; ```; cmap = 'jet'; fig, ax = plot_spin_distribution(Q, THETA, PHI, ""3d"", cmap=cmap); ```; to change the color map of the sphere, but I get error; ```; fig, ax = plot_spin_distribution(Q, THETA, PHI, ""3d"", cmap=cmap); NameError: name 'plot_spin_distribution' is not defined. Did you mean: 'plot_spin_distribution_2d'?; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2431#issuecomment-2118997182:178,error,error,178,https://qutip.org,https://github.com/qutip/qutip/issues/2431#issuecomment-2118997182,1,['error'],['error']
Availability,"I use the qutip to do some Grover simulations. having a Hilbertspace of Grover an an additional entangled Hilbert space. In a simpler version there is only one state in the entangled Space so the program automatically chooses dimension 1. ; And then there are allot of errors coming because of this qutip error. ; At the moment I fixed it using a patched qutip version. And I think there are more cases when one has dynamical dimensions of a space, that there are cases in which the dimension is 1.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823#issuecomment-399020891:269,error,errors,269,https://qutip.org,https://github.com/qutip/qutip/issues/823#issuecomment-399020891,4,['error'],"['error', 'errors']"
Availability,"I want to install qutip on the linux (ubuntu 18.04 LTS), but I got the following issue. I wonder whether anyone has encountered this problem before. . ```; /home/abc/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205:245,error,error,245,https://qutip.org,https://github.com/qutip/qutip/issues/1205,1,['error'],['error']
Availability,"I was helping someone with an install on windows 7 yesterday.; We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary. @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423:152,error,error,152,https://qutip.org,https://github.com/qutip/qutip/issues/423,2,['error'],"['error', 'errors']"
Availability,"I was trying to figure out why tests on #943 and #942 were failing for MacOS and could pin-point it down to the `qutip.superop_reps.to_kraus` function. The test `tests.test_superop_reps.test_ChoiKrausChoi` leads to the same malloc error with the message,; ```; python(2234,0x7fff95aef380) malloc: *** error for object 0x7fde6f2f0ff0: incorrect checksum for freed object - object was probably modified after being freed.; ```; Investigating more.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944:100,down,down,100,https://qutip.org,https://github.com/qutip/qutip/issues/944,3,"['down', 'error']","['down', 'error']"
Availability,"I was trying to see the phase transition of magnetization of a transverse Ising model, and I have the following graph. The magnetization changes unusually rapidly under the change of magnetic field and, I don't have this problem using my own library. Since the code I wrote is extremely simple and there is no error message, I wonder do you possibly have encountered the similar issues and have some suggestions on what it happens. Here is the code, and the graph. ----------------------------------------------------------; harray = np.zeros(11); for i in range(11):; harray[i] = 0.0001 * i; ; #print harray; ; marray4 = np.zeros(11). Mx = tensor(sigmaz(),identity(2),identity(2),identity(2))\; + tensor(identity(2),sigmaz(),identity(2),identity(2))\; + tensor(identity(2),identity(2),sigmaz(),identity(2))\; + tensor(identity(2),identity(2),identity(2),sigmaz()). earray4 = np.zeros(11); ; for ii in range(0, 11):; ; H = -(tensor(sigmaz(),sigmaz(),identity(2),identity(2)) \; + tensor(identity(2),sigmaz(),sigmaz(),identity(2)) \; + tensor(identity(2),identity(2),sigmaz(),sigmaz()) \; + tensor(sigmaz(),identity(2),identity(2),sigmaz())) \; - harray[ii]*(tensor(sigmax(),identity(2),identity(2),identity(2))\; + tensor(identity(2),sigmax(),identity(2),identity(2))\; + tensor(identity(2),identity(2),sigmax(),identity(2))\; + tensor(identity(2),identity(2),identity(2),sigmax())); . marray4[ii] = expect(Mx, H.eigenstates()[1][0]); ; plt.plot(harray, marray4, 'o-'); plt.show(). ![screen shot 2018-02-05 at 11 59 45 am](https://user-images.githubusercontent.com/35711575/35817669-17d7afe2-0a6c-11e8-859f-6ae1d686a7fe.png)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/811:310,error,error,310,https://qutip.org,https://github.com/qutip/qutip/issues/811,1,['error'],['error']
Availability,"I was unable to find any common properties of failing elements other than what I mentioned, unfortunately. We're apparently using the `cvxopt` solver, which isn't the default. The failure rate can be improved a lot (~30x fewer or so?) by setting `kktsolver='robust'`, which takes about 2x longer, and still isn't perfect. As to renaming, we already have `Qobj.norm(type)` - should it not become `Qobj.norm(type='diamond')` if we were going for a rename?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-634762505:180,failure,failure,180,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-634762505,2,"['failure', 'robust']","['failure', 'robust']"
Availability,I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/122#issuecomment-107400015:116,error,errors,116,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-107400015,1,['error'],['errors']
Availability,"I will vote for a deprecation warning being raised for a few versions of QuTiP with a `compile()` function that does nothing. The deprecation warning can briefly explain what changed and how to tackle it (in this case simply not use `.compile()`). It can also raise an error based on QuTiP's version such that our tests warn us about needing to remove it. Even if its a rarely used function and mostly employed internal, I still think that we should deprecate it appropriately as it will help making a smother transition to QuTiP 5.0.0. A HOW TO with some of the most significant porting changes is a also useful but I would prefer if it does not substitute deprecation warnings.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949#issuecomment-1176355115:269,error,error,269,https://qutip.org,https://github.com/qutip/qutip/issues/1949#issuecomment-1176355115,2,['error'],['error']
Availability,"I wonder if there is something wrong with your new QuTiP install? Since I can't reproduce the issue locally it might be difficult to suggest solutions, but I can give some debugging advice:. - Try reducing the code used to produce the issue as much as possible (perhaps just a single cell that calls the solver without any c_ops and checks the initial and final expectation values, without plots).; - Check all the inputs to the solver (psi0, etc).; - If a solver prints the ""ODE Integration Error"" warning it usually means that the solver has not converged to an output it trusts, so the solution returned is likely wrong.; ; If you manage to find a smaller reproducer of the error, report it here with as much information about your setup as possible (you can start with the output of `qutip.about()`).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1987#issuecomment-1229174846:492,Error,Error,492,https://qutip.org,https://github.com/qutip/qutip/issues/1987#issuecomment-1229174846,2,"['Error', 'error']","['Error', 'error']"
Availability,"I would like to try to build the solution for this. **Task 1:** For chrome, the error seems to be due to the CORS (Cross-origin Resource Sharing) policy of google chrome.; `Access to XMLHttpRequest at 'file:///C:/Users/Sid/Desktop/qutip-doc/QuTiP_tree_plot/d3_data/qutip.json' from origin 'null' has been blocked by CORS policy: Cross origin requests are only supported for protocol schemes: http, data, chrome, chrome-extension, https.`. To fix this, I created a local server (on port 8080) from the `../qutip-doc/QuTiP_tree_plot` folder and then ran the URL `http://localhost:8082/qutip_org.html` on chrome.; Egde doesn't seemed to have any problem in running `qutip-doc.html`. **Task 2:** ; Clarification - We would right a new script to generate `qutip.json` from `apidoc/functions.rst`, just like `QuTiP_tree_plot/qutip-structure.py`. Am I right?. **Task 4:** ; Can you please elaborate on task 4 as to link to which API docs. **Task 5:**; The script written in Task 2 can be made to run for `classes.rst` and a json file would be created which would be used to generate a tree, right?; Where would we put it in the docs? guide-overview?. PS: I'm sorry if I've asked or stated an obvious thing, I am new to this community and am still trying to fimiliarize myself. Thanks.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1525#issuecomment-469209588:80,error,error,80,https://qutip.org,https://github.com/qutip/qutip/issues/1525#issuecomment-469209588,2,['error'],['error']
Availability,"I would not worry too much about codeclimate, but:; - some of the errors are arising due to trailing whitespaces. This is an easy fix; - in some cases, the ""cognitive complexity"" is very high. For example here:; ```; __init__ has a Cognitive Complexity of 68 (exceeds 5 allowed).; ```; Maybe it is worth considering some code refactoring.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1066#issuecomment-575498581:66,error,errors,66,https://qutip.org,https://github.com/qutip/qutip/pull/1066#issuecomment-575498581,1,['error'],['errors']
Availability,I'd agree on dropping the try-catch as well. The about.py is dependant on a successful hardware_info() call. So there's little use on catching an error just to invoke another one with an empty array one level higher. Shall I make a new clean pull request with a more sophisticated commit message?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/780#issuecomment-348168206:146,error,error,146,https://qutip.org,https://github.com/qutip/qutip/pull/780#issuecomment-348168206,1,['error'],['error']
Availability,"I'd be interested in providing these changes. I have a few points to ask/consider:; 1. which function is meant by `zero_oper()`? I can't find any reference to it in the code, and judging by the name, I'd guess it's equivalent to `qzero()`, which already supports this.; 2. should we extend the automatic tensoring to other operators, e.g. `create()`, `destroy()`, and so forth? I can't necessarily think of any particular use-case, but _not_ having it causes an odd inconsistency with `qeye()`.; 3. for `projection()` and `basis()` in particular: should the interface allow only scalar `m` and `n`, which must be the same for all dimensions, or should there be broadcasting rules? The latter seems like a more useful choice to me, with the rules for all arguments being:; - if `m` is a list, then `max_len == len(m)`; - if `m` is a scalar, then `m = [m] * max_len`. For example, this would provide `tensor(basis(2, 0), basis(2, 1)) == basis(2, [0, 1]) == basis([2,2], [0, 1])`, which seems the ""least surprising"" to me.; 4. should there be error-checking that supplied scalars/lists are the correct format? For lists in particular, the current behaviour is to silently flatten nested lists, though this is presumably a user error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/363#issuecomment-575273170:1040,error,error-checking,1040,https://qutip.org,https://github.com/qutip/qutip/issues/363#issuecomment-575273170,2,['error'],"['error', 'error-checking']"
Availability,"I'd be vastly surprised if there's a way of permitting a test which passes 99% of the time - on any particular test run how would it know?. I don't remember having seen anything about setting the initial seeds, but relying on a previous test to set a seed isn't a good idea - you'd always have to ensure that no tests were ever added or changed in-between that ever used random state or everything would get lost. We could fix the random seed for any test which uses random methods with a fixture to get around that. I actually think this is a true failure; the default solver `rtol = 1e-6`, but here we're using `rtol=1e-7` as the test, so the test is bugged (it's probably not the only one, and I may have missed some of these in `mcsolve` too). I should change this when I convert `test_mesolve.py`. Also, I clearly didn't read the log properly on that one - I thought it was one of the random errors from before!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625290303:549,failure,failure,549,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625290303,4,"['error', 'failure']","['errors', 'failure']"
Availability,"I'll add that it might be worth addressing the fact that there are two common conventions for representing quantum states as tensors that each have their pros and cons. Perhaps this would be better placed in a separate issue, but I'll explain here anyway. Consider a joint state like $` |\psi_1 \psi_2 \rangle \langle \psi_3 \psi_4 | `$ where the dimensions of $` |\psi_i\rangle `$ are $` d_i `$. Two common representations of this abstract state as a tensor are; 1. $` (|\psi_1\rangle \otimes |\psi_2\rangle) \otimes (\langle \psi_3| \otimes \langle \psi_4|) `$, which has shape $`(d_1, d_2, d_3, d_4)`$; 2. $` (|\psi_1\rangle \otimes \langle \psi_3|) \otimes (|\psi_2\rangle \otimes \langle \psi_4|) `$, which has shape $` (d_1, d_3, d_2, d_4) `$. These two conventions essentially correspond to the ""super"" and ""choi"" representations for channels. Representation 1. is nice when you are doing most of your calculations with pure states, but then want a density matrix towards the end, which you can do with just `np.tensordot(my_ket_tensor, np.conj(my_ket_tensor), 0)`. Representation 2. is nice when you are working with density matrices and want to combine multiple subsystems, which you can do with `np.tensordot(my_density_tensor_1, my_density_tensor_2, 0)`. Doing either of these operations in the other representation involves very error-prone index permutation in my experience. When I said above that these two conventions should be ""addressed"" in some way, I was intentionally vague because I'm honestly not sure what the best way to do that would be. One option would be to simply mention it in the user guide somewhere, perhaps near the section on the Super and Choi representations. Another would be to support both conventions via optional parameters like `to_tensor_rep(my_qobj, convention='super')` or `to_tensor_rep(my_qobj, convention='choi')`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2353#issuecomment-2007183867:1341,error,error-prone,1341,https://qutip.org,https://github.com/qutip/qutip/issues/2353#issuecomment-2007183867,2,['error'],['error-prone']
Availability,I'll give that a shot. Are there any other hidden dependencies that could be at fault?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/508#issuecomment-237678785:80,fault,fault,80,https://qutip.org,https://github.com/qutip/qutip/issues/508#issuecomment-237678785,1,['fault'],['fault']
Availability,"I'll go on and do that, then. Just to summarize, this came up in finding a channel that represents tensoring a state with a preparation of an ancilla, evolving according to a larger channel, then partial tracing out the ancilla. That last step can be written down as a contraction of the indices of a superoperator, giving a rectangular supermatrix representation.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/268#issuecomment-65021685:259,down,down,259,https://qutip.org,https://github.com/qutip/qutip/pull/268#issuecomment-65021685,1,['down'],['down']
Availability,"I'll merge this now (it's going to have a couple of merge conflicts with other PRs currently in preparation), but I think there's a bit of discussion that's worth having about our processes for CodeClimate errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-827164375:206,error,errors,206,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-827164375,1,['error'],['errors']
Availability,"I'll try to explain as much as I can, but I'm not sure exactly what is going on. The error might have been there for quite a while, it was not until I recently tried to modify qutip regarding the other issue I raised that I noticed that changes I made had no effect because qutip was not compiling. Earlier today I did manage to get changes to qutip to register and work, but I still get this error on reload. Maybe it no longer matters. While pyrex is in the path, it seems to not be installed. (I cannot import or uninstall it). I can also not remember installing openMP, although I'm not sure if openMP capability comes with gcc by default. . This issue is likely something strange with my exact installation. What has me confused is that re-installing the packages does not seem to solve anything. Apologies for the unclear explanation. If there is any specific information I can add, please tell me what I can do. My qutip.about() is:. QuTiP Version: 4.6.3; Numpy Version: 1.22.2; Scipy Version: 1.8.0; Cython Version: 0.29.27; Matplotlib Version: 3.5.1; Python Version: 3.8.10; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810#issuecomment-1044657281:85,error,error,85,https://qutip.org,https://github.com/qutip/qutip/issues/1810#issuecomment-1044657281,2,['error'],['error']
Availability,I'm +1 on having auto tidy up being a feature of the individual data layers. Could the auto tidy up setting perhaps be passed down to the data layers and then each layer can handle it in a way that seems sensible to the data layer?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-882525259:126,down,down,126,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-882525259,1,['down'],['down']
Availability,"I'm a fan of the CodeClimate complexity tests, but I wouldn't be averse to removing its complaints about ""TODO"" comments - I'm not sure what we really gain from that in this sort of open-source development. In a business where people are working full-time then I imagine it can be worth preventing a merge to finalise some details, but in our very decentralised development, really in some cases (especially in the next major release), we do need to merge in parts of code we know to be imperfect. That said, we probably should make an effort to clear out some of the TODOs and FIXMEs that are in the codebase already. Pushed fix-up changes since last review:; - wrapped the steadystate SciPy linalg functions so they're simplified at the point of call, and unknown keywords in old SciPy versions are just silently ""eaten"" (this is the same behaviour that the file used to have, just formalised a little more).; - added `TODO` in a comment in `qutip.cy.pyxbuilder`; - changed the static class attributes in `test_superoper.py` into a `setup_method` function. *edit*: oh yeah, forgot that there were still errors in some old SciPy bits in the control module as well. I'll push a fix to that before this needs reviewing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826074305:1105,error,errors,1105,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826074305,2,['error'],['errors']
Availability,"I'm also using Anaconda on Macbook M1 and ran into 2 errors today when importing qutip. . 1. With the M1 chip, qutip had a problem with hardware detection and as @jakelishman said, commenting lines 48 and 49 on `qutip/hardware_info.py` fixed this error. 2. Then I got the same error message with ""IPYTHON not defined"" and ""'qutip' has no attribute 'settings'."" I thought my conda environment must have been missing the ipython package somehow(?) so I tried `conda install ipython` and importing qutip again and it worked! (I then ran qutip.testing.run() to test out all functions and everything worked perfectly).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-759733240:53,error,errors,53,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-759733240,3,['error'],"['error', 'errors']"
Availability,I'm changing this draft to the complete PR. I'll update it with any changes related to documentation once the build error is resolved.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2114#issuecomment-1463345791:116,error,error,116,https://qutip.org,https://github.com/qutip/qutip/pull/2114#issuecomment-1463345791,1,['error'],['error']
Availability,"I'm getting the following error when the first three arguments for the clebsch function aren't all ints: ; ```; c_factor = np.zeros((j1 + j2 + j3 + 1), np.int32); TypeError: 'float' object cannot be interpreted as an integer; ```; Fixed by changing ; `c_factor = np.zeros((j1 + j2 + j3 + 1), np.int32) `; to ; `c_factor = np.zeros((int(j1 + j2 + j3 + 1)), np.int32)`; and same for _factorial_prod() etc. It's now giving expected results. This shouldn't break anything as j1 +/- j2 +/- j3 should always give an integer. Seems to have been caused by #1142 in response to #1141.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1176:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/1176,1,['error'],['error']
Availability,"I'm glad that you like the `__call__` option for `super(oper)`; my thought there was that having `__mul__` cas op-to-vec and vec-to-op could lead to some surprising behavior, especially when manipulating Choi states. As for the proposed semantics for `oper(oper)`, my thought behind making that return `A * B * A.dag()` is that this behavior would then be identical to `to_super(A)(B)`, such that it would be a consistent with previously-used semantics within QuTiP. In particular, all of the superoperator representation conversions so far treat `type=""oper""` Qobj instances as acting by conjugation. Though I agree that adopting `A(B) = A * B * A.dag()` for the `oper(oper)` case could raise some potential for confusion, I think that it may be worth it for consistency, especially since `__call__` would not conflict with any previous code. That said, given that it could be confusing, I agree it could make sense for it to raise an error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/475#issuecomment-221128096:936,error,error,936,https://qutip.org,https://github.com/qutip/qutip/issues/475#issuecomment-221128096,1,['error'],['error']
Availability,"I'm glad you like! As for squashing, I think that can make sense, yeah. I'd like to hold off on doing so with this PR I have the current test failures fixed (seems as though the difference-of-unitaries optimization still needs a bit of work). After that, though, I agree that'd make for a much more legible commit history.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-198569367:142,failure,failures,142,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198569367,1,['failure'],['failures']
Availability,"I'm happy to go either way on whether to merge this now or later. I'm happy to keep adding to it, but I'm also mindful that I don't want this to turn into another +15000/-15000 PR. I possibly need to look into that test failure a little more - it's temperamental, and I'm not sure if it's something where it's just a case of a too strict tolerance, or if there is an actually numerical precision problem.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351#issuecomment-680225994:220,failure,failure,220,https://qutip.org,https://github.com/qutip/qutip/pull/1351#issuecomment-680225994,2,"['failure', 'toler']","['failure', 'tolerance']"
Availability,I'm merging this now. All tests are at least now running. The ones related to this are passing.; The errors #872 are not related to this,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870#issuecomment-394187586:101,error,errors,101,https://qutip.org,https://github.com/qutip/qutip/pull/870#issuecomment-394187586,1,['error'],['errors']
Availability,"I'm not at all a fan of making tests part of the public interface like this. It's something that we make absolutely no stability guarantees about, and coupling downstream packages to our own tests just sounds like a recipe for disaster - if we find a bug in main QuTiP and need to change tests or add methods (which we should be able to do completely freely), we're going to inject a ton of extra code into downstream packages, and may completely break them. To be honest, I'm not even wild about how we distribute our tests as part of the module code at all, but that's what we've got. It _could_ be ok if you import the test case base, and redefine your tests from there. We still don't make any stability guarantees about that, but it's conceivable that we could (though of course, the problem of ""what if we need to add methods"" persists). That would also solve your problems about saying you can't import individual tests. You can import individual tests anyway, you just need to rename them to things like `_TestAdd`, or use one of the pytest hooks in your local `conftest.py` to reject tests whose `__module__` isn't your local module, or do one of the other methods of filtering.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-976540355:160,down,downstream,160,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-976540355,2,['down'],['downstream']
Availability,"I'm not sure about this, but I think that we should keep tensor as simple as possible. Meaning that we could support tensor products of superoperators with the same representation, if that operation makes any sense, but not have it converting between different representations or doing any reshuffling to make sure that `to_super(tensor(A, B)) == tensor(to_super(A), to_super(B))`. If there are any important use-cases where this property would be important we could reconsider this. Do you have any examples in mind?. If not I would recommend we raise an error if tensor is called with superoperators with different representations, and set Qobj.superrep to the correct representation if all arguments are the same.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39528800:556,error,error,556,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39528800,2,['error'],['error']
Availability,"I'm not sure how this should be down. What I was thinking is that there are some changes to `circuitprocessor.py` and `gate.py` in my commits in the above list. And I might work on those files further in the coming weeks. If they are not included in qip_opt, we will have to eventually come back and resolve the confliction. Maybe in the next few months all PR related to qip should be merged to qip_opt instead of master?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1014#issuecomment-500755145:32,down,down,32,https://qutip.org,https://github.com/qutip/qutip/pull/1014#issuecomment-500755145,1,['down'],['down']
Availability,"I'm not sure solution 3 will work as easily as this - if the user's `scipy.linalg.eigh` is broken, then calling it doesn't help, surely?. Also, I can reproduce the segfaults with both `np.ascontiguousarray` and `np.asfortranarray` on my machine, but it is a size of 64 that seems to reliably do me in. Script to reproduce:; ```python; import numpy as np; from scipy.linalg import eigh. def random_hermitian(n):; h = np.random.rand(n, n) + 1j*np.random.rand(n, n); return h + np.conj(h.T). for n in range(1, 101):; print(n); for _ in [None]*100:; x = eigh(np.ascontiguousarray(random_hermitian(n))); ```; and this segfaults on `n=64` reliably with the `pip` version of `scipy` (linked against OpenBLAS 0.3.7), and always succeeds with the `conda` version (linked against MKL 2019.4). Both `scipy` versions are 1.4.1 here. I did the most bare-bones install to test this:; ```; $ conda create -n blastest python; $ conda activate blastest; $ pip install scipy; $ python blas.py; ```; where `blas.py` is the repro script above. Doing this, `pip` pulls me OpenBLAS 0.3.7. Looking at the source of OpenBLAS, the whole heavy-lifting implementation is in Fortran - there's the classic LAPACKe C wrapper around the core Fortran LAPACK, but everything eventually goes down to the Fortran. If it helps, it's an out-of-bounds access error that causes the segfault for me, and the address it's trying to access doesn't look like dummy nonsense (`0x101b95010`). I'm pretty sure it's a nasty Mac/OpenBLAS bug. If the problem is particularly in `zheevr` we could swap the call to `eig` (instead of `eigh`) for Mac only, which should hopefully sidestep the problem, because it'll call `zgeev` instead. All recent pip installs of `scipy` link against OpenBLAS, so there's not much that can sidestep it there, other than mandating `conda` usage, because you can't relink `scipy` to decent libraries without compiling from source.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955:283,reliab,reliably,283,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628780955,4,"['down', 'error', 'reliab']","['down', 'error', 'reliably']"
Availability,"I'm sorry I don't have a huge amount of time at the moment, but just to add an extra point (that it looks like I didn't think about before): if we _do_ add this, then any method that requires an unconditional `import qutip` in downstream packages probably isn't a suitable solution - `import qutip` already takes far too long (though a lot of this is importing various parts of `scipy`, which another library might do on our behalf), and it means that they'd have to do their own import checking to handle optional dependencies. In that sense, (ab)using Python's duck-typing with a magic method might be the best way to break the dependency/import problem. I'm definitely still against implicit conversion to `Qobj` in pretty much any situation - I can imagine we could define a safe, fairly forward-compatible interface for letting people do `qutip.Qobj(x)`, but as it stands, that's the limit that I'd want the interface to be used for. I particularly am really against the idea of implicit conversion. I don't see an advantage to allowing QuTiP functions to act implicitly on other objects; it means our own functions are slower (because we have to explicitly test inputs on _everything_), and it restricts us more from improving `Qobj`'s internals, because we have to maintain compatibility with the interface. We'd never really be able to output anything _other_ than a `Qobj` without this, so there's no reason not to just have the user convert the inputs to `Qobj` explicitly themselves - that isolates the efficiency penalty so you only pay it if you need it, and it'll likely be clearer in the end anyway, because explicit is better for following the logic than implicit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-908380301:227,down,downstream,227,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-908380301,2,['down'],['downstream']
Availability,"I'm still fairly new to QuTiP but I've found that `mesolve` allows `H` and `rho0` to have different dimensions. Of course getting it right is the users responsibility, an informative warning may be useful. A minimal example is as follows:. ```; from qutip import *; import numpy as np. N = 3; a = tensor(destroy(N),identity(2)); sz = tensor(identity(N),sigmaz()). H = sz*a.dag() + sz.dag()*a; collapse = [a]; tlist = np.linspace(0,1,100); solution = mesolve(H, basis(2,0), tlist, collapse, [a.dag()*a]); ```. which gives a numerical integration error:; `UserWarning: zvode: Repeated convergence failures. (Perhaps bad Jacobian supplied or wrong choice of MF or tolerances.)`; Rather than a more direct warning about the (more likely) problem of mis-matched Hilbert spaces. I'm happy to add a check to the `mesolve` function and submit a PR, but I wanted to be sure that I'm not missing some use case where `H` and `rho0` should be allowed to differ.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/479:545,error,error,545,https://qutip.org,https://github.com/qutip/qutip/issues/479,3,"['error', 'failure', 'toler']","['error', 'failures', 'tolerances']"
Availability,"I'm teaching a course where we use QuTiP, but recently we cannot import QuTiP anymore : /. The procedure to reproduce the error is to open a new notebook in [colab](http://colab.research.google.com/), install QuTiP with . !pip install qutip. and then just. import qutip. The error in this case is . AttributeError Traceback (most recent call last); /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 46 __IPYTHON__; ---> 47 qutip.settings.ipython = True; 48 except:. AttributeError: module 'qutip' has no attribute 'settings'. During handling of the above exception, another exception occurred:. AttributeError Traceback (most recent call last); <ipython-input-6-e01d5608f34f> in <module>(); ----> 1 import qutip. /usr/local/lib/python3.6/dist-packages/qutip/__init__.py in <module>(); 47 qutip.settings.ipython = True; 48 except:; ---> 49 qutip.settings.ipython = False; 50 ; 51 # -----------------------------------------------------------------------------. AttributeError: module 'qutip' has no attribute 'settings'",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1008:122,error,error,122,https://qutip.org,https://github.com/qutip/qutip/issues/1008,2,['error'],['error']
Availability,"I'm trying to use the eigenstates function to find the eigenstates for a given Hamiltonian, the code for which is below:. from qutip import *; import numpy as np; import matplotlib.pyplot as plt. # Define the spin operators for the two particles. smu_x = tensor(sigmax(),qeye(2)); smu_y = tensor(sigmay(),qeye(2)); smu_z = tensor(sigmaz(),qeye(2)). se_x = tensor(qeye(2),sigmax()); se_y = tensor(qeye(2),sigmay()); se_z = tensor(qeye(2),sigmaz()). omega_mu = 0.1 * np.pi; omega_e = 0.1 * np.pi *200; omega_0 = 5.0 * np.pi. H = 0. # Add interactions with external field. H += -(omega_mu/2)*smu_z + (omega_e/2)*se_z. # Add interaction between the spins. H += (omega_0/4)*(tensor(sigmax(),sigmax())+tensor(sigmay(),sigmay())+tensor(sigmaz(),sigmaz())). H.eigenstates(). However, when I try to run this code it gives me the following error:. Traceback (most recent call last):. File ""/Users/Nathan/Documents/internship2021/week2/qutip/Muonium/muonium_interaction.py"", line 39, in <module>; H.eigenstates(). File ""/Users/Nathan/opt/anaconda3/lib/python3.7/site-packages/qutip/qobj.py"", line 1699, in eigenstates; norms = np.array([ket.norm() for ket in ekets]). File ""/Users/Nathan/opt/anaconda3/lib/python3.7/site-packages/qutip/qobj.py"", line 1699, in <listcomp>; norms = np.array([ket.norm() for ket in ekets]). AttributeError: 'numpy.ndarray' object has no attribute 'norm'. I'm unsure of whether this is due to me not using the function correctly or is a genuine issue that may need addressing. . Kind regards,. Nathan",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634:830,error,error,830,https://qutip.org,https://github.com/qutip/qutip/issues/1634,1,['error'],['error']
Availability,"I'm using Qutip 3.0.1 for Python 3.4, just updated from Python 2.7 to compare. Bug persists, but it seems that your version of Qutip doesn't have it. Sorry about not using the dev version. . I downloaded the latest official version from apt-get, is there a way to get the dev version from there or do I have to compile etc.?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/226#issuecomment-54701699:193,down,downloaded,193,https://qutip.org,https://github.com/qutip/qutip/issues/226#issuecomment-54701699,1,['down'],['downloaded']
Availability,"I'm using [solus](https://solus-project.com) 64-bit, and anaconda for my python. anaconda cannot find any qutip package, so I tried to install with pip. It gives the following error:. `Command ""/home/jakeargent/anaconda3/bin/python -u -c ""import setuptools, tokenize;__file__='/tmp/pip-build-n7ekqm4y/qutip/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))"" install --record /tmp/pip-lnsaamvm-record/install-record.txt --single-version-externally-managed --compile"" failed with error code 1 in /tmp/pip-build-n7ekqm4y/qutip/; `. Then I tried easy_install, which gave me:. `Processing qutip; Writing /home/jakeargent/qutip/setup.cfg; Running setup.py -q bdist_egg --dist-dir /home/jakeargent/qutip/egg-dist-tmp-9_egnp34; Installing without the fortran mcsolver.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; In file included from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/syslimits.h:7:0,; from /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:34,; from /home/jakeargent/anaconda3/include/python3.5m/Python.h:11,; from qutip/cy/spmatfuncs.c:27:; /usr/lib64/gcc/x86_64-solus-linux/6.3.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ^; compilation terminated.; error: Setup script exited with error: Command ""gcc -pthread -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -mtune=generic -march=x86-64 -ftree-vectorize -g2 -O2 -pipe -fPIC -Wformat -Wformat-security",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:176,error,error,176,https://qutip.org,https://github.com/qutip/qutip/issues/639,2,['error'],['error']
Availability,"I'm using. My configuration information is as follows:. Software	Version; QuTiP	4.5.2; Numpy	1.18.5; SciPy	1.5.0; matplotlib	3.2.2; Cython	0.29.21; Number of CPUs	6; BLAS Info	INTEL MKL; IPython	7.16.1; Python	3.8.3 (default, Jul 2 2020, 11:26:31) [Clang 10.0.0 ]; OS	posix [darwin]; Fri Sep 18 02:42:59 2020 MSK. For Mac OS: FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'.\. When I try to generate a circuit diagram as follows:. %matplotlib inline; from IPython.display import Image; from numpy import pi; import numpy as np; from qutip import *; from qutip.qip.operations import *; from qutip.qip.circuit import QubitCircuit, Gate. cphase(pi/2); q = QubitCircuit(2, reverse_states=False); q.add_gate(""CSIGN"", controls=[0], targets=[1]); q.png. Log Error:. ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); <ipython-input-14-a760fe8d2360> in <module>; 1 q = QubitCircuit(2, reverse_states=False); 2 q.add_gate(""CSIGN"", controls=[0], targets=[1]); ----> 3 q.png. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qip/circuit.py in png(self); 1122 def png(self):; 1123 from IPython.display import Image; -> 1124 return Image(self._repr_png_(), embed=True); 1125 ; 1126 @property. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qip/circuit.py in _repr_png_(self); 1114 ; 1115 def _repr_png_(self):; -> 1116 return _latex_compile(self.latex_code(), format=""png""); 1117 ; 1118 def _repr_svg_(self):. ~/opt/anaconda3/lib/python3.8/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); 60 os.system(""convert -density %s %s.pdf %s.png"" % (100, filename,; 61 filename)); ---> 62 with open(""%s.png"" % filename, ""rb"") as f:; 63 result = f.read(); 64 else:. FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.png'. How do I fix this error on Mac?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/702#issuecomment-694558061:771,Error,Error,771,https://qutip.org,https://github.com/qutip/qutip/issues/702#issuecomment-694558061,2,"['Error', 'error']","['Error', 'error']"
Availability,"I'm woundering what is the reason for doing this partial trace; https://github.com/qutip/qutip/blob/0b068fc4876727303644c42c181af82e1f089700/qutip/qobj.py#L490; becauseit leads to errors doing:; ```; O=tensor(sigmax(), qeye(1)); Psi = tensor(basis(2,0),basis(1,0)); O*O*Psi; ```. would it be possible to implement an Option in settings to dissable this behavior? I would be willing to provide a PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823:180,error,errors,180,https://qutip.org,https://github.com/qutip/qutip/issues/823,1,['error'],['errors']
Availability,"I've been thinking about how this interacts with our build and test infrastructure, and I'm writing some of those thoughts here partly for myself:. - We currently build with oldest-supported-numpy, and we want to keep that because which is the earliest supported numpy varies by Python version and operating system and changes over time, so it's good if someone else worries about that for us. - We require for installation currently numpy >= 1.16.6 and that is probably what we want to update to match the NEP. There is a question here of whether we should specify our minimum supported numpy in ""install_requires"" in ""setup.cfg"" or not. - The majority of our test matrix should *build* qutip with oldest-supported-numpy to match what we distribute. - We should include at least one test run for the oldest numpy we require (i.e. oldest NEP) and one for the most recent (i.e. latest numpy). . - We should include at least one test run for the oldest Python we support and one for the newest. - We should include at least one test run for the oldest SciPy we support and one for the newest. - The NEP doesn't say anything about SciPy, but I propose we select the oldest SciPy that supports our oldest NEP numpy. And as Asier suggested, I think it would be good to write this all down. The test matrix requirements could just be a big comment in the GitHub action file.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1941#issuecomment-1165714182:1279,down,down,1279,https://qutip.org,https://github.com/qutip/qutip/pull/1941#issuecomment-1165714182,1,['down'],['down']
Availability,I've created #1751 to fix the error in the cibuildwheel overrides syntax and made it a qutip branch so that I can run the build CI before merging.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1747#issuecomment-1005718437:30,error,error,30,https://qutip.org,https://github.com/qutip/qutip/pull/1747#issuecomment-1005718437,1,['error'],['error']
Availability,"I've given up on solving this for QuTiP 4 for now -- it leads down a long rabbit hole that ends in fixing string coefficient generation, which was a big re-write and has already been done in QuTiP 5. I'm continue the work for QuTiP 5 in #1948.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1854#issuecomment-1170243021:62,down,down,62,https://qutip.org,https://github.com/qutip/qutip/pull/1854#issuecomment-1170243021,1,['down'],['down']
Availability,"I've just pushed a couple of commits to fix up a little bit of the formatting (it was the squashed lines I meant, rather than the particular level of indent or location of the keyword `or`) and to slightly fix the tolerance of the eigenvalue test. The individual uncertainty in any eigenvalue is allowed to be ~1e-12, so when you sum them all up to compare them, you have to propagrate the uncertainty through. Don't worry about the random test failure you got in a pickle test one time - that wasn't your fault and we know about it and have fixed it for the next major release of QuTiP already. Also don't worry about the speed of the CI tests. You can't reliably benchmark by comparing CI runs because you never know what else was running on the physical hardware at the same time. Travis are ramping down the amount of processing power available to us while they're transition business model. I'll be moving our testing infrastructure elsewhere when I've got a bit more time to sort it out, and have decided what we actually want/need/can get. In the mean time, we just live with the occasional test failure if a Mac Xcode12 machine is overloaded when we get to it. We can rerun them if we need to; it's not worth compromising on our test coverage.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822688883:214,toler,tolerance,214,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822688883,7,"['avail', 'down', 'failure', 'fault', 'reliab', 'toler']","['available', 'down', 'failure', 'fault', 'reliably', 'tolerance']"
Availability,"I've just pushed a little change to correct some minor points of style in `random_objects.py` (that weren't your fault - they were there before), and to correct the docstring to say that only `N=None` triggers the deduction, not `N=0`. (I also just finished the conversion of the tests into a parametrised pytest style - I'm trying to keep get these gradually updated as we look at the files, but I didn't want to ask you to do a _whole_ bunch more work, when you've already done a lot to get this ready, thanks!)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1509#issuecomment-832161733:113,fault,fault,113,https://qutip.org,https://github.com/qutip/qutip/pull/1509#issuecomment-832161733,1,['fault'],['fault']
Availability,"I've just spotted a bug in `isherm` on the new data layer, which is my fault for not getting the tests for that written yet. That may also be having some impact on the test fragility.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-680004649:71,fault,fault,71,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-680004649,1,['fault'],['fault']
Availability,I've made codeclimate/codeclimate-duplication#364 to hopefully fix the complex-number parsing problem. Now we need to work on tidying up as much legacy code as we can to get the numbers down!,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1577#issuecomment-862563893:186,down,down,186,https://qutip.org,https://github.com/qutip/qutip/pull/1577#issuecomment-862563893,1,['down'],['down']
Availability,"I've rebased on top of master, now that #1381 has been merged. However there is still an error, but I don't really understand the link with my changes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1380#issuecomment-729960378:89,error,error,89,https://qutip.org,https://github.com/qutip/qutip/pull/1380#issuecomment-729960378,1,['error'],['error']
Availability,"If I have a superoperator already in the Kraus form (that is, as a list of operators), I cannot directly compute its average gate fidelity: `average_gate_fidelity` will try to convert it to Kraus anyway:; https://github.com/qutip/qutip/blob/2aa51b92df57f995778940815d20d293f00f8a9d/qutip/metrics.py#L144; and `to_kraus` will raise an error because the input does not have a `type`:; https://github.com/qutip/qutip/blob/b0c6e59a4914816ff68163b03a37ab40ecf0d809/qutip/superop_reps.py#L543-L555. As a minimal example, shouldn't something like; ```; kraus_ops = [qutip.sigmax(), qutip.sigmay()]; qutip.average_gate_fidelity(kraus_ops); ```; be made to work?. What about adding a check in `average_gate_fidelity` so that if the input is already a list then don't do anything (although it seems more robust to have some kind of wrapper to flag an object as list of operators of a Kraus decomposition)?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/869:334,error,error,334,https://qutip.org,https://github.com/qutip/qutip/issues/869,2,"['error', 'robust']","['error', 'robust']"
Availability,"If I run ""cython spmatfuncs.pyx"" it gives an error:. ```; Error compiling Cython file:; ------------------------------------------------------------; ...; import numpy as np; cimport numpy as np; cimport cython; cimport libc.math. ctypedef np.complex128_t CTYPE_t; ^; ------------------------------------------------------------. spmatfuncs.pyx:24:0: 'CTYPE_t' redeclared ; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/52#issuecomment-25343953:45,error,error,45,https://qutip.org,https://github.com/qutip/qutip/pull/52#issuecomment-25343953,2,"['Error', 'error']","['Error', 'error']"
Availability,"If I try to calculate the time evolution of a mixed state by `mcsolve`, `mcsolve` will raise an error: `initial state must be a state vector`. It seems that we cannot define a single quantum trajectory for a mixed state from a physics perspective. But it is still possible that we can replace H|psi> and c|psi> with -i* [H,rho] and c * rho * c^\dagger respectively to simulate. I am not sure it is a faster way compared to `mesolve`. Can I do a Monte Carlo evolution for a mixed state in QuTip? Thanks.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1375:96,error,error,96,https://qutip.org,https://github.com/qutip/qutip/issues/1375,1,['error'],['error']
Availability,"If I try to import qutip a second time, I get the following error:. ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); <ipython-input-6-d4205f385795> in <module>(); ----> 1 from qutip import*. /home/jan/.local/lib/python2.7/site-packages/qutip/__init__.pyc in <module>(); 60 qutip.settings.ipython = True; 61 except:; ---> 62 qutip.settings.ipython = False; 63 ; 64 # -----------------------------------------------------------------------------. AttributeError: 'module' object has no attribute 'settings'. Also I am running ubuntu 16.10",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/637#issuecomment-273531916:60,error,error,60,https://qutip.org,https://github.com/qutip/qutip/issues/637#issuecomment-273531916,1,['error'],['error']
Availability,"If I use a time-dependent collapse operator in `mcsolve`:. ``` python; import numpy as np; from qutip import destroy, basis, mcsolve. b = destroy(5); H = b.dag() * b; collapse = [[b, '9 * exp(-(t / 5.) ** 2)']]; psi0 = basis(5, 1). times = np.linspace(0, 100, 100); data = mcsolve(H, psi0, times, collapse, [b.dag() * b]) ; ```. I get the following error:. ``` python; Error compiling Cython file:; ------------------------------------------------------------; ...; @cython.boundscheck(False); @cython.wraparound(False); def col_expect(int which, double t, complex[::1] data, int[::1] idx, int[::1] ptr, complex[::1] vec):. if which == 0:; out *= conj(9 * exp(-(t / 5.) ** 2)); ^; ------------------------------------------------------------; ```. I looked into `cy/codegen.py` and found, that the line. ``` python; out_string.append("" out *= conj("" + self.c_tdterms[ind] + "")""); ```. of the function `func_which_expect(self)` (currently line 355) should be replaced with. ``` python; out_string.append("" out = conj("" + self.c_tdterms[ind] + "")""); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/844:349,error,error,349,https://qutip.org,https://github.com/qutip/qutip/issues/844,2,"['Error', 'error']","['Error', 'error']"
Availability,"If it helps in the future, you can use `pycodestyle` (available in `pip` and `conda`) to check pep8 compliance on your end before pushing a commit. As to the actual command, we might not actually want to remove the usage of `convert` - it's quite possible that a lot of people are still using ImageMagick 6, since for most people it's just a dependency that got installed by something else, and isn't frequently updated. `qutip` doesn't list it as an official dependency, so it wouldn't get updated on our behalf. We could catch which version of `ImageMagick` to use with something like; ```python; def _magick_comamnd():; for command in ['magick', 'convert']:; try:; subprocess.run((command, '--version'), capture_output=True); return command; except OSError:; pass; raise FileNotFoundError(""Couldn't locate system ImageMagick""); ```; and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; ```python; subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); ```; or something like that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473:54,avail,available,54,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-585236473,1,['avail'],['available']
Availability,"If the initial state was found to be of type 'oper', no further testing was done in initialisation of mesolve on the dimensions. For example, if a user incorrectly created a density matrix, such as by doing; ```python; tensor(basis(20, 0), qeye(20)/20); ```; (presumably intending `basis(20, 0).proj()` or similar), it would have a type of 'oper' inside Qobj, and mesolve would recognise it as a ""proper"" density matrix, even though the shape was actually incorrect. Such an object would get passed down into the C layer, which does no shape checking, without having its shape explicitly tested, and eventually could cause a segfault in the matrix multiplication routine. The correct check in this setup is to test the shapes when passed into `mesolve`, if this is possible. If the Hamiltonian/Liouvillian is generated by a Python callable, we have to test every time the time-dependence function is called. A user could make a pathalogical function that changes its dimensions on different times, and we cannot allow a segfault. Fix qutip/qutip#1456",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1459:499,down,down,499,https://qutip.org,https://github.com/qutip/qutip/pull/1459,1,['down'],['down']
Availability,"If we don't do `del numpy` in qutip's `__init__.py`, then doing this works:. ```; from import qutip *; numpy.func(...); ```. because numpy was imported but not deleted before the end of qutips init file, and it will be exported form qutip as a global symbol in qutips namespace (which is the callers global name space if called as above). However, this is not a desired behaviour of a module to do like this: importing qutip shouldn't impose that numpy is imported in any particular way (even though qutip uses numpy internally). For example, if a user prefer to import numpy as `np`, then it is pointless that qutip exposes numpy as `numpy` as well. It because even weirder when an import pattern like `import qutip as q` is used, because as it is now then numpy is available through `q.numpy`, which is unnecessary and causes problem with for example nose unit testing of qutip module (because it finds numpy and run all numpy tests as well) and also with module autocompletion in for example spyder and ipython. For these and many other similar reasons, it is neatest if qutip only exports its own symbols, and if a users requires any symbols of other packages they should be explicitly imported from those packages. I hope this explains why I want to eliminate qutips currently excessive namespace populating.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/233#issuecomment-56176673:767,avail,available,767,https://qutip.org,https://github.com/qutip/qutip/pull/233#issuecomment-56176673,1,['avail'],['available']
Availability,"If you have extra_link_args in the site.cfg, then a double keyword argument; happens when reading the options for the blas library. If you use openblas, add this to your site.cfg; [openblas]; extra_link_args = ... whatever ... and the error will happen.; The error is this. TypeError: config.add_extension() got multiple values for keyword argument; 'extra_link_args'. 2015-11-08 21:12 GMT+01:00 Paul Nation notifications@github.com:. > I do not get a build failure under NumPy 1.10.1. What was the particular; > error message? Any changes would also have to be backward compatible with; > earlier NumPy versions.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/392#issuecomment-154863591. ## . Kind regards Nick",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/392#issuecomment-154867711:235,error,error,235,https://qutip.org,https://github.com/qutip/qutip/issues/392#issuecomment-154867711,4,"['error', 'failure']","['error', 'failure']"
Availability,"If you only need the final state and you don't need any intermediate times, your `tlist` should only have two elements in it. So; ```python; import qutip; hamiltonian = qutip.sigmax(); state = qutip.basis(2, 0).proj(); times = [0, 10]; qutip.mesolve(hamiltonian, state, times); ```; should give the correct result. If you want to integrated for a long time, you might get errors about the integration not converging. If so, you will need to increase the `nsteps` solver option, such as; ```; options = qutip.Options(nsteps=10_000_000); qutip.mesolve(..., options=options); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-808417826:372,error,errors,372,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-808417826,1,['error'],['errors']
Availability,"If you run it locally it won't appear as a ""failure"" it'll be a warning, but now on the CI server we've fixed every warning, and turned new warnings into errors. You can get the same behaviour on your computer by running the command as `pytest -We [...]` instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-827823447:44,failure,failure,44,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-827823447,2,"['error', 'failure']","['errors', 'failure']"
Availability,"If you use functions instead of string as coefficient of your Hamiltonian, this error should not happen. ; It should also be faster in your case: string are a little faster (<10%) but take ~1 sec to compile. With 3 sec evolution, the compilation time is not worth it. ; If your Hamiltonian is always the same, you can reuse it by setting `options.rhs_reuse = True`, but we don't have much documentation for this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966#issuecomment-474064887:80,error,error,80,https://qutip.org,https://github.com/qutip/qutip/issues/966#issuecomment-474064887,1,['error'],['error']
Availability,"If you're concerned about the solvers, a) they skip tidyup til the end anyway and b) _technically_ the computational complexity of CSR * dense vector is identical to tidyup (though tidyup is a little more cache efficient), but really it's the constant factors that could kill you for small systems. For example, the ""naive"" way of implementing a relative tolerance would take the absolute value of a complex number, but that involves a floating-point square root, which is a very slow operation. That's likely partly why the current version compares real and imaginary components separately, even though the sparsity structure is only improved if _both_ go to zero. In a two-pass operation you'd sqrt twice for every entry (naively - all the square roots are very avoidable), and I'd start to worry that that really _could_ dominate small system operations. Or maybe you should just ignore me when assigning ""good first issues"" - I'm probably too opinionated about performance characteristics without enough experience at managing other people's code!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-793991141:355,toler,tolerance,355,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-793991141,1,['toler'],['tolerance']
Availability,"ImageMagick is only mentioned in our tutorial page and not listed elsewhere. So we didn't specify a required version for it. . > We could catch which version of `ImageMagick` to use with something like; > ; > ```python; > def _magick_comamnd():; > for command in ['magick', 'convert']:; > try:; > subprocess.run((command, '--version'), capture_output=True); > return command; > except OSError:; > pass; > raise FileNotFoundError(""Couldn't locate system ImageMagick""); > ```; > ; > and cache the result on import (below into the variable `_magick`). There could also be logic based on OS if needed. The convert command would become; > ; > ```python; > subprocess.run((_magick, ""-density"", 100, filename + "".pdf"", filename + "".png"")); > ```. This solution looks neat. One minor thing is that maybe we should use `check=True` instead of `capture_output=True` since the latter one is only available from Python 3.7+. Despite those has already been discussed above, the plot sill does not work for me. I find the following lines also wrong on Windows; ``` python; os.system(""rm -f %s.aux %s.log"" % (filename, filename)). os.system(""mv %s-tmp.pdf %s.pdf"" % (filename, filename)); ```; because `rm` and `mv` are not Windows command. We should probably replace it by python script `os.remove` and `os.replace` to make it system independent.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793:885,avail,available,885,https://qutip.org,https://github.com/qutip/qutip/pull/1179#issuecomment-592993793,1,['avail'],['available']
Availability,"Implements the changes mentioned in #1203. The `qutip.graph` functions are pure mathematical functions which are beyond the purview of the package. Most of them have already been merged into `scipy.sparse.csgraph`, so we now move to using those and mark the functions as deprecated. Only two functions are actually used, and they're not even currently tested. `weighted_bipartite_matching` is not present in `scipy`, but is still marked as deprecated because we can move it into being an internal-only function, or simply remove the code that depends on it since those paths are not tested. This will allow the removal of a good amount of Cython code, and simplify maintenance.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1206:665,mainten,maintenance,665,https://qutip.org,https://github.com/qutip/qutip/pull/1206,1,['mainten'],['maintenance']
Availability,Import error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/637:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/637,1,['error'],['error']
Availability,Import error: pyximport,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2206:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/2206,1,['error'],['error']
Availability,"Importing after conda install with lastest:. /Users/paul/.pyxbld/temp.macosx-10.9-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:626:10: fatal error:; 'src/zspmv_openmp.hpp' file not found; #include ""src/zspmv_openmp.hpp""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334:142,error,error,142,https://qutip.org,https://github.com/qutip/qutip/issues/1334,1,['error'],['error']
Availability,Improve mcsolve's `test_super_H` test tolerance.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2344:38,toler,tolerance,38,https://qutip.org,https://github.com/qutip/qutip/pull/2344,1,['toler'],['tolerance']
Availability,Improve me se zvode failure handling,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/243:20,failure,failure,20,https://qutip.org,https://github.com/qutip/qutip/pull/243,1,['failure'],['failure']
Availability,Improve the error message of circuit plotting,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1427:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/pull/1427,1,['error'],['error']
Availability,Improved error handling in stats and optimconfig and changes to test out files:,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/301:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/301,1,['error'],['error']
Availability,"In QuTiP 4.5.0 conda release on Mac, I get an error if I call a quantum circuit to print in jupyter notebook. However, the circuit is printed after the message. . This did not happen with QuTiP 4.4.1. Imagemagick is installed. This issue may be related to the closed issues #1179 and #702. ```; ---------------------------------------------------------------------------; FileNotFoundError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. /miniconda3/lib/python3.7/site-packages/qutip/qip/circuit.py in _repr_svg_(self); 1117 ; 1118 def _repr_svg_(self):; -> 1119 return _latex_compile(self.latex_code(), format=""svg""); 1120 ; 1121 @property. /miniconda3/lib/python3.7/site-packages/qutip/qip/circuit_latex.py in _latex_compile(code, filename, format); 64 else:; 65 os.system(""pdf2svg %s.pdf %s.svg"" % (filename, filename)); ---> 66 with open(""%s.svg"" % filename) as f:; 67 result = f.read(); 68 . FileNotFoundError: [Errno 2] No such file or directory: 'qcirc.svg'; ```; <img width=""1137"" alt=""Screenshot 2020-02-26 17 44 05"" src=""https://user-images.githubusercontent.com/14573436/75327357-9af58180-58bf-11ea-9989-6892f5b7af41.png"">",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1185:46,error,error,46,https://qutip.org,https://github.com/qutip/qutip/issues/1185,1,['error'],['error']
Availability,"In `brtools`'s tests, we could check that the results `eigenvector` are mathematically right, without matching `scipy`'s result. Should be quite simple and we would more resilient to changes in scipy. . Did anybody check if it solves the segfault issues on Mac yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1299#issuecomment-649523632:170,resilien,resilient,170,https://qutip.org,https://github.com/qutip/qutip/issues/1299#issuecomment-649523632,2,['resilien'],['resilient']
Availability,"In `test_interpolate`, `qzero` was used as `mcsolve`'s collapse operator. Due to numerical error in the interpolation method, `mcsolve` can detect a collapse, but a collapse for a null operator cause a a division by zero. This sometime made our tests fails. By changing the collapse operator to `qeye`, the evolution, thus the test is unaffected, but it no longer randomly fail.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1645:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/1645,1,['error'],['error']
Availability,"In certain cases in matrices containing values smaller than the tolerance for Hermicity, a matrix can be considered Hermitian even if its transpose does not have the same sparsity pattern as itself. The previous version of this function would give false negatives in these circumstances, whereas now we fall back on the more computationally and memory intensive version of constructing the transpose completely, and comparing element-wise. We offset some of this slowdown by optimising the floating-point comparisons to avoid calls to `sqrt` (via `abs`), and by removing a redundant test of the sparsity pattern in the inner loop. Fixes #1350 for the `master` branch, but still to do for `dev.major`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1352:64,toler,tolerance,64,https://qutip.org,https://github.com/qutip/qutip/pull/1352,2,"['redundant', 'toler']","['redundant', 'tolerance']"
Availability,"In certain circumstances, `zcsr_isherm` can give a `False` negative. This is usually masked by the `auto_tidyup` option being turned on. Reproduce:; ```python; >>> import numpy as np; >>> import scipy.sparse; >>> import qutip; >>> x = scipy.sparse.csr_matrix(np.array([[1, 1e-15j], [0, 1]])); >>> bool(qutip.cy.spmath.zcsr_isherm(x, 1e-12)); False; ```; Up to the tolerance specified (`1e-12`), the given matrix _is_ Hermitian, so it should return `True`. This happens when a small non-zero value (lower than the tolerance) is compared to a zero. This is because the structure test in `zcsr_isherm` assumes that for Hermicity to hold, there _must_ always be an explicitly stored corresponding element for each entry, however clearly this isn't always the case. It hasn't appeared before because we always have `auto_tidyup` turned on with a sufficiently large tolerance that these values would be removed by almost all operations which could have introduced this disparity (mostly matrix multiplication). (I'll fix this on both the `master` branch and on `dev.major`, this is just for posterity)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1350:85,mask,masked,85,https://qutip.org,https://github.com/qutip/qutip/issues/1350,4,"['mask', 'toler']","['masked', 'tolerance']"
Availability,"In development version 4.4: . - For Python 3.6, when running `qutip.testing.run()`. ```; uTiP Version: 4.4.0.dev0+0bf3e05e; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.6.8; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); ```; I obtain an error at ; ```; Propagator: steady state ... Segmentation fault: 11; ```. - For Python 3.7 with ; ```; QuTiP Version: 4.4.0.dev0+0bf3e05e; Numpy Version: 1.16.2; Scipy Version: 1.2.1; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: True; INTEL MKL Ext: True; Platform Info: Darwin (x86_64); Installation path: /Users/nathanshammah/miniconda3/envs/py37/lib/python3.7/site-packages/qutip-4.4.0.dev0+0bf3e05e-py3.7-macosx-10.7-x86_64.egg/qutip; ```; the error occurs at . ```; Metrics: Check avg gate fidelities for random ... python(42424,0x7fffa34a8380) malloc: *** error for object 0x7fc74f258880: incorrect checksum for freed object - object was probably modified after being freed.; *** set a breakpoint in malloc_error_break to debug; Abort trap: 6; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-482116179:378,error,error,378,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-482116179,4,"['error', 'fault']","['error', 'fault']"
Availability,"In fact, any scalar multiplying ``qutip.num(0)`` gives the same error",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/981#issuecomment-484690982:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/issues/981#issuecomment-484690982,1,['error'],['error']
Availability,"In file included from qutip/cy/spmatfuncs.cpp:639:; qutip/cy/src/zspmv.hpp:33:10: fatal error: 'complex' file not found; #include <complex>; ^~~~~~~~~; 1 error generated.; error: command 'gcc' failed with exit status 1. MAC os Mojave, python 3.6.4. How to fix this?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965:88,error,error,88,https://qutip.org,https://github.com/qutip/qutip/issues/965,3,['error'],['error']
Availability,"In gates.py there are a few examples in the docstrings. The output is sometimes longer then 79 chars, which yields a pep8 error. Are these examples somehow doctests? And if so, do I trip the doctest mechanism if I format the output of the examples?. If they are either not doctests, or the doctest mechanism is fine with linebreaks in the output, the examples should be pep8-ified",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/9:122,error,error,122,https://qutip.org,https://github.com/qutip/qutip/issues/9,1,['error'],['error']
Availability,"In general in pytest we use the bare keyword `assert` for almost everything. All the functions in `np.testing` are from the ""before times"", when test tooling wasn't as good as it is nowadays - they were a big improvement on available warning messages back before 2015. Nowadays, though, `pytest` does introspection on assertion failures, so it has even better message reporting than the `np.testing` functions, and it lets you write much clearer code. For example, `assert_equal(x, y)` is much better spelled in pytest as `assert x == y`, because it's much faster to read and pytest does better error reporting for it. Similarly, testing for exceptions is better with; ```python; with pytest.raises(ValueError):; call_that_raises(1, ""hello, world""); ```; as opposed to the numpy form `np.testing.assert_raises(ValueError, call_that_raises, 1, ""hello, world"")` - the pytest one is much easier to read, and the error message is better. The only numpy one we still use is `np.testing.assert_allclose` when we're comparing several numpy arrays. That's just because `pytest` doesn't have a good function that's aware of multidimensional arrays (at least not one that I know). This file still has a load of old numpy testing code in it (e.g. `np.testing.assert_equal`) because it was written quite a long time ago, when that was the recommended way of doing things. We're changing over slowly, so we can take advantage of all the nice features of pytest. In this case, I changed `np.testing.assert_allclose(x, y, atol=tol)` to `assert abs(x - y) < tol`. I removed `np.testing.assert_allclose`, because that gives the mistaken impression that we're comparing arrays (we're not, we're comparing two scalars). I could have changed it to `assert x == pytest.approx(y, tol=tol)`, except in this case the test file hasn't been converted to `pytest` style yet, and I wanted to keep the total change of this PR as small as possible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822737671:224,avail,available,224,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822737671,8,"['avail', 'error', 'failure']","['available', 'error', 'failures']"
Availability,"In general, if you think this is something that is worthwhile, we'd ask you to try it yourself, and then show us memory-usage and execution-time benchmark results showing that such a change is warranted. I've given you a few reasons why this sort of ""programming by script"" can be difficult and introduce errors, and why there may be more concerns than you might have thought about. If you can show that such a change has actual tangible benefits with proof, then we would be willing to consider a limited change, but you also need to have verified everything yourself. If it looks like you've done it indiscriminately by script, we would reject the PR, because it would require one of us to go through ourselves line-by-line and check everything, which is something the PR author is meant to do themselves first. We (mostly) do this for free, and we only have a finite amount of time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-972782201:305,error,errors,305,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-972782201,1,['error'],['errors']
Availability,"In my case,. ```python; > H_0.dims; [[3, 11], [3, 11]]; > H_1.dims; [[3, 6], [3, 6]]; ```; and I don't get any error when running. ```python; > H = [H0, [H_1, 'sin(t)']]; qutip.propagator(H, T, [], args); ```; apart from the `Segmentation fault`. I think this is due to `sesolve` being called with `_safe_mode=False` [here](https://github.com/qutip/qutip/blob/master/qutip/propagator.py#L160) as running; ```python; > qutip.sesolve(H, psi0, tlist, [], args, options, _safe_mode=False); ``` ; gets me a `Segmentation fault` without any other error, but running; ```python; > qutip.sesolve(H, psi0, tlist, [], args, options); ```; gives; ```python; Exception: Input operator and ket do not share same structure.; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/761#issuecomment-334228053:111,error,error,111,https://qutip.org,https://github.com/qutip/qutip/issues/761#issuecomment-334228053,4,"['error', 'fault']","['error', 'fault']"
Availability,"In my tries yesterday, I did not have problem with `scipy.linalg.eigh` for C array. Since `scipy` does not use the same lapack interface for C and Fontran continuous array, I though it was fine. I guess I did not run enough tests. . Using `eig` and `zgeev` seems a good idea. I don't have any error with it yet.; It would then be good to change all the `eigh` in the code, not just the `zheevr` call in cython. ; And probably raise an issue in `scipy`. @jakelishman since most computation of eigenvalue in Qutip go through the `Qobj` could you fix that call this summer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918:293,error,error,293,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-628833918,1,['error'],['error']
Availability,"In qutip-tensoflow, we aim to include TensorFlow's autodifferentiation with Qobj. However, this will require the following code to work:; ```python; import numpy as np; import qutip. random_matrix = np.random.random((2, 2)) + 1j * np.random.random((2, 2)); complex_number = np.random.random((1, 1)) + 1j * np.random.random((1, 1)). qobj = qutip.Qobj(random_matrix); qobj*complex_number; ``` ; I used numpy `ndarray` instead of a `tf.Tensor` or `tf.Variable` for simplicity and so that the example is reproducible. . Currently this example raises: ; ""TypeError: incompatible dimensions [[2], [2]] and [[1], [1]]""; as `__mul__(self, other)` defaults to `__matmul__(self, other)` when `other` is not an instance of `numbers.Number`. . If instead we do:; ```python; complex_number*qobj; ```; The error raised is:; ""TypeError: unsupported operand type(s) for *: 'numpy.ndarray' and 'Qobj'""; This error is different because `__rmul__` checks first for `other` being an instance of `numbers.Number` and if not, it raises `NotImplementedError`. It does not check whether `Qobj(other)` works. I would say this is undesired and that `__rmul__` should try first converting `other` into `Qobj` and not assume that other is already `Qobj`. . **Describe the solution you'd like**; I would like to suggest either:; 1) changing the behaviour of `matmul` dispatcher so that (1,1) shaped data is multiplied element wise by default. However this, although not terrible, it breaks conceptually what matmul is, as a (1,1) x (2,2) matrix multiplication can not happen. 2) Allow `mul` dispatcher to have as input a `Data` object. In this way we would raise an error when the `Data` for `mul` dispatcher is not of shape (1,1) and perform an elementwise multiplication when it is. I am not sure how difficult it is to code this. 3) Create `mul_elementwise` dispatcher to have as input two `Data` objects and perform elementwise multiplication. Another change that I would like to suggest is to add a check in `__rmul__` to see",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607:792,error,error,792,https://qutip.org,https://github.com/qutip/qutip/issues/1607,2,['error'],['error']
Availability,"In short the answer is no. One could think of a couple of ways of trying to determine whether the system has reached the steady state or not, but for nonlinear systems this is difficult. In addition, how would you calculate the error if you dont know the steady state solution in the first place?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/319#issuecomment-75664628:228,error,error,228,https://qutip.org,https://github.com/qutip/qutip/issues/319#issuecomment-75664628,1,['error'],['error']
Availability,"In the CI test, we convert warnings to errors. Have you tried `make latexpdf -W`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2167#issuecomment-1566998431:39,error,errors,39,https://qutip.org,https://github.com/qutip/qutip/pull/2167#issuecomment-1566998431,1,['error'],['errors']
Availability,"In the documentation, qutip is build with `pip install qutip[full]`, while in test it is installed with `pip install qutip[$QUTIP_TARGET]`, with the target changing depending on the test. We don't have any test using extra yet... The mpi4py team made a GitHub Actions workflow to run it in test: https://github.com/mpi4py/setup-mpi. You can add that workflow and the `extra` to have every test run with mpi:; ```; - uses: actions/checkout@v3; - uses: mpi4py/setup-mpi@v1; ```. `QUTIP_TARGET=""tests,graphics,semidefinite,ipython,extra"" `. By I am not sure it would work for windows. Also if installing mpi is slow, we may not want it in all test.; But conditional workflow are tricky so lets see want if it just works first. Yes, the test failures are related to last weekend scipy release, not this code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2296#issuecomment-1904189729:738,failure,failures,738,https://qutip.org,https://github.com/qutip/qutip/pull/2296#issuecomment-1904189729,1,['failure'],['failures']
Availability,"In the latest documentation build, 4.4, the links to source code in the [API documentation](http://qutip.org/docs/latest/apidoc/apidoc.html) do not work. ; An example is the `Qobj` [source] link [in this page](http://qutip.org/docs/latest/apidoc/classes.html#qobj) that takes to this broken link, http://qutip.org/docs/latest/_modules/qutip/qobj.html#Qobj. ; The link is broken because it takes to `latest/_modules` instead of `latest/modules`, see for example the working link in 4.3, http://qutip.org/docs/4.3/modules/qutip/qobj.html#Qobj, or even the correct http://qutip.org/docs/latest/modules/qutip/qobj.html#Qobj. . Any help appreciated in fixing this in Sphinx, I think in `sphinx-apidoc`, cc @Ericgig @quantshah @ajgpitch @tehruhn @BoxiLi (pinging you as only Alex watches this repo and you all played with Sphinx recently).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1531:749,ping,pinging,749,https://qutip.org,https://github.com/qutip/qutip/issues/1531,1,['ping'],['pinging']
Availability,"In theory the `correlation_2op_1t` function is only valid when you pass in the steady state solution of the Liouvillian. However, we implement it just by calculating `<A(t) B(0)>` - it's not _immediately_ clear to me that that our output is necessarily correct when you don't pass in a steadystate (especially if `taulist` doesn't start from 0). I _think_ it's fine in all cases, but perhaps Neill you can check me on that front?. I'd agree with Neill that truncation of the thermal state basis is likely the reason you were failing to get that to work exactly right. The tolerance calculation will actually be a bit more involved because QuTiP returns a normed dm. That will cause all the values to shift by relatively the same amount, and then you've got to factor in the solver tolerance on top of those errors, but the principle is correct for sure. *edit*: I'm happy and ready to merge this, but I'll just hold off for a day or so in case Neill has chance to answer my last minor query.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-815021669:572,toler,tolerance,572,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-815021669,6,"['error', 'toler']","['errors', 'tolerance']"
Availability,Increase `iscptp` tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2147:18,toler,tolerance,18,https://qutip.org,https://github.com/qutip/qutip/pull/2147,1,['toler'],['tolerance']
Availability,Increase `test_nm_mcsolve.test_super_H` tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2407:40,toler,tolerance,40,https://qutip.org,https://github.com/qutip/qutip/pull/2407,1,['toler'],['tolerance']
Availability,Increase subsys test tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/435:21,toler,tolerance,21,https://qutip.org,https://github.com/qutip/qutip/pull/435,1,['toler'],['tolerance']
Availability,Increase test reliability,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2337:14,reliab,reliability,14,https://qutip.org,https://github.com/qutip/qutip/pull/2337,1,['reliab'],['reliability']
Availability,"Indeed ; ```; b = Bloch(); b.show(); ```; renders the Bloch sphere. Calling again `b.show()` does not work as you say. . Interestingly, invoking just; ```; b; ```; gives an error, but plots the correct sphere again. ; ```; ---------------------------------------------------------------------------; AttributeError Traceback (most recent call last); ~/miniconda3/lib/python3.6/site-packages/IPython/core/formatters.py in __call__(self, obj); 343 method = get_real_method(obj, self.print_method); 344 if method is not None:; --> 345 return method(); 346 return None; 347 else:. ~/miniconda3/lib/python3.6/site-packages/qutip/bloch.py in _repr_svg_(self); 298 from IPython.core.pylabtools import print_figure; 299 self.render(); --> 300 fig_data = print_figure(self.fig, 'svg').decode('utf-8'); 301 plt.close(self.fig); 302 return fig_data. AttributeError: 'str' object has no attribute 'decode'; ```; Regarding the no-show, I guess there is something to fiddle with at; https://github.com/qutip/qutip/blob/master/qutip/bloch.py#L625-L632",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/989#issuecomment-490030124:173,error,error,173,https://qutip.org,https://github.com/qutip/qutip/issues/989#issuecomment-490030124,1,['error'],['error']
Availability,"Indeed, that is my error. Will fix tonight. Thanks for finding it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/493#issuecomment-224977661:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/493#issuecomment-224977661,1,['error'],['error']
Availability,"Installation error: ""ambiguous overloaded method""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723:13,error,error,13,https://qutip.org,https://github.com/qutip/qutip/issues/723,1,['error'],['error']
Availability,Installation failure on linux (solus 64 bit),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/639:13,failure,failure,13,https://qutip.org,https://github.com/qutip/qutip/issues/639,1,['failure'],['failure']
Availability,Installation on OS X with Homebrew script error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348:42,error,error,42,https://qutip.org,https://github.com/qutip/qutip/issues/348,1,['error'],['error']
Availability,Installing from conda gives fatal error for missing spmv_openmp.hpp,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1334:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/issues/1334,1,['error'],['error']
Availability,Intel MKL error breaks wigner.qfunc,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/937:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/937,1,['error'],['error']
Availability,"Interesting... You see, the gate `Gate(RY, targets=[0, 1], controls=None)` is clearly wrong because RY acts only on one qubits. I guess you are probably using a released version of QuTiP (4.5.2/3 maybe) and not the master branch. This error was hidden before in those released version. If you try to install from source (http://qutip.org/docs/latest/installation.html#installing-from-source) (which you have to if you want to contribute anyway), you will probably see this error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-810554275:235,error,error,235,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-810554275,4,['error'],['error']
Availability,Internal note: `bloch_redfield_solve` quit without raising an error when ode integration fails.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1965#issuecomment-1203283104:62,error,error,62,https://qutip.org,https://github.com/qutip/qutip/issues/1965#issuecomment-1203283104,1,['error'],['error']
Availability,"Internally all `Qobj` use sparse matrices, no matter what type of data you give them. Whether your density matrix stays sparse during the time evolution depends on the Hamiltonian. In general, especially if there's any environmental interaction, it likely won't, but that's just down to the physics.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1737#issuecomment-990055735:279,down,down,279,https://qutip.org,https://github.com/qutip/qutip/issues/1737#issuecomment-990055735,1,['down'],['down']
Availability,"Is the code failing or only the tests?; Does it fail in local test or only in automated tests?; The file that I asked you to add to gitignore was a temp file created in the tests directory, which is not where they should be. If pytest run the tests from that directory, this may be the cause of the error. Otherwise I have no idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739:299,error,error,299,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-562262739,1,['error'],['error']
Availability,Is there anything preventing this merging once the documentation builds are passing?. The documentation build failure is quite odd -- maybe something to do with merging in the upstream/dev.major branch?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1134817221:110,failure,failure,110,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1134817221,1,['failure'],['failure']
Availability,"Is this on, Linux? All the tests run fine under Ubuntu 13.10, Python ; 2.7 & 3.3, as well as the Mac. Maybe you need to check out the latest ; copy or something funny is going on. On 02/20/2014 11:56 AM, Robert Johansson wrote:. > On my system the following tests fails:; > ; > Sparse: Symmetric Reverse Permute ... ERROR; > Sparse: Nonsymmetric Reverse Permute ... ERROR; > Sparse: Bandwidth ... ERROR; > ; > More detailed info:; > ; > ```; > ERROR: Sparse: Symmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 73, in test_sparse_symmetric_reverse_permute; > B=sparse_reverse_permute(x,perm,perm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/cy/sparse_utils.c:5740); > ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; > ; > ```; > ERROR: Sparse: Nonsymmetric Reverse Permute; > ```; > ; > Traceback (most recent call last):; > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", ; > line 198, in runTest; > self.test(*self.arg); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", ; > line 89, in test_sparse_nonsymmetric_reverse_permute; > B=sparse_reverse_permute(x,rperm,cperm); > File ; > ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", ; > line 566, in sparse_reverse_permute; > A.indptr, nrows, ncols, rperm, cperm, flag); > File ""sparse_utils.pyx"", line 266, in ; > qutip.cy.sparse_utils./sparse/reverse_permute_complex ; > (qutip/c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73#issuecomment-35583331:316,ERROR,ERROR,316,https://qutip.org,https://github.com/qutip/qutip/issues/73#issuecomment-35583331,4,['ERROR'],['ERROR']
Availability,Issues about errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1199:13,error,errors,13,https://qutip.org,https://github.com/qutip/qutip/pull/1199,1,['error'],['errors']
Availability,"It adds support for importing qasm v1 files. The support for quantum gates and loops are added. Support for classical control, measurement, and qbit preparation is not available and syntax is ignored.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1138:168,avail,available,168,https://qutip.org,https://github.com/qutip/qutip/pull/1138,1,['avail'],['available']
Availability,It appeared there was a floating point error in ode2es that would result in an empty amplitude string for small enough amplitudes. In PR #509 is fixed by forcing the amplitude to zero when the numerical error occurs.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/500#issuecomment-237693792:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/issues/500#issuecomment-237693792,2,['error'],['error']
Availability,"It appears that the iterative methods do not converge to the tolerance value within the maxiter number of steps. The bicgstab method is particularly bad. Another option is lgmres that I have found to give the correct answer with fewer iterations. I have also noticed that we are still having issues with the preconditioner failing, but that is for another day.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20343868:61,toler,tolerance,61,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20343868,1,['toler'],['tolerance']
Availability,"It appears that they have removed hw.cpufrequency on these things (About this mac doesn't show a freq. either). I don't know what is their policy in this regard but I did find these two related issues: https://github.com/giampaolo/psutil/issues/1892 and https://github.com/shirou/gopsutil/pull/999. My workaround was to comment out the code and hard-wire a random value in there :-) A quick grep didn't seem to show any use of cpu_freq elsewhere in the code but then I didn't look too much in depth. I don't personally use qutip, my partner does, she's the physicist, I'm just the geek helping hand :). It does look like this code could use some error handling and put some ""reasonable"" default values if the sysctl's fail indeed. Happy to test a patch and report. She's currently away so there will be some latency (I can occasionally ssh into her laptop but it takes preparation), so I can't really submit a PR myself at this point.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1606#issuecomment-880308664:646,error,error,646,https://qutip.org,https://github.com/qutip/qutip/issues/1606#issuecomment-880308664,1,['error'],['error']
Availability,"It doesn't look robust enough to be user facing as it is, but as a private function, if you get a 3.5x, I'd say we want it. Technically, just give a type to `i` and it's all running in c code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2128#issuecomment-1476692791:16,robust,robust,16,https://qutip.org,https://github.com/qutip/qutip/pull/2128#issuecomment-1476692791,1,['robust'],['robust']
Availability,"It gives me correct result when I change the ODE tolerances as you mentioned, in mesolve(). Thank you so much. I tried in v4.7.3, now, after I upgrade it to v5, still same result as v4.7.3.; Now I can try my original calculation, your suggestion should work then.; Thanks. > It is a little annoying it is just failing silently. yes, I agree....",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2229#issuecomment-1713148770:49,toler,tolerances,49,https://qutip.org,https://github.com/qutip/qutip/issues/2229#issuecomment-1713148770,1,['toler'],['tolerances']
Availability,"It has been pointed out by collaborators that it may be nice to add the following in the Readme, ; “If you use QuTiP in your research, please cite the original QuTiP papers, available here: https://dml.riken.jp/?s=QuTiP .” for a more direct link to the QuTiP papers.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1552:174,avail,available,174,https://qutip.org,https://github.com/qutip/qutip/issues/1552,1,['avail'],['available']
Availability,"It is giving an error at ; ```; ERROR: mesolve: super vs. density matrix as initial condition; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/nose/case.py"", line 197, in runTest; self.test(*self.arg); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 543, in testSuperJC; fid = self.fidelitycheck(out1, out2, rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/tests/test_mesolve.py"", line 475, in fidelitycheck; rhot = vector_to_operator(E*rho0vec); File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/superoperator.py"", line 280, in vector_to_operator; q.data = sp_reshape(op.data.T, shape[::-1]).T; File ""/home/travis/miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+294d62c2-py3.7-linux-x86_64.egg/qutip/sparse.py"", line 135, in sp_reshape; return zcsr_reshape(A, shape[0], shape[1]); File ""qutip/cy/spconvert.pyx"", line 254, in qutip.cy.spconvert.zcsr_reshape; Exception: Total size of array must be unchanged.; ```; Also, can you do a small change so that we can check if with the new `pytest` on Travis CI this is still the case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575497693,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"It is giving an error because your operator and your state are in two different spaces. . tensor(hadamard_transform(1), hadamard_transform(1), identity(2), identity(2)) is 4 single qubit operators acting on 4 single qubit subsystems (as intended). . basis(16, 1) is an atom with 16 distinguishable states and no subsystems. You cannot make a single qubit operator act on this object (since it is not a qubit) and there are no subspaces for the remaining 3 operators to act on. . The state that you actually want (a system of 4 qubit subsystems) can be constructed as ; tensor(basis(2), basis(2), basis(2), basis(2)). Try this; > tensor(hadamard_transform(1), hadamard_transform(1), identity(2), identity(2)) * tensor(basis(2), basis(2), basis(2), basis(2)). Or for clarity; > H = hadamard_transform(1); > I = identity(2); > ket0 = basis(2); > HHII = tensor(H, H, I, I); > psi = tensor(ket0, ket0, ket0, ket0); > HHII * psi. Hope this helps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/888#issuecomment-403337748:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/issues/888#issuecomment-403337748,1,['error'],['error']
Availability,"It is strange. The failure is not dependent on the changes that you made here since the failure is due to some missing header files in Numpy. I am at a loss on what is happening. But your other PRs are going through so I am sure, it is something small. I will try restarting the builds for this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-398284232:19,failure,failure,19,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-398284232,2,['failure'],['failure']
Availability,"It looks as though the known failures are now properly being skipped. Given that this is causing build failures elsewhere, I'd suggest that this PR is ready for merge.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/487#issuecomment-222056144:29,failure,failures,29,https://qutip.org,https://github.com/qutip/qutip/pull/487#issuecomment-222056144,2,['failure'],['failures']
Availability,It looks like my original tolerance was stricter than the default tolerance on the ODE solver. Oops.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/722:26,toler,tolerance,26,https://qutip.org,https://github.com/qutip/qutip/pull/722,2,['toler'],['tolerance']
Availability,"It looks like there are some wheels for QuTiP on Windows available at https://www.lfd.uci.edu/~gohlke/pythonlibs/. Just tried them out, and they seem to work fine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/933#issuecomment-502266058:57,avail,available,57,https://qutip.org,https://github.com/qutip/qutip/issues/933#issuecomment-502266058,1,['avail'],['available']
Availability,"It looks like your parameters are a bit challenging for the ODE solver (the Rabi frequency Omega is much much smaller than the energy splitting omega). If you change the ODE tolerances using options you will find it gives the expected result, e.g., something like: . ```; options = qt.Options(rtol=1e-8, atol=1e-8); result = qt.mesolve(H, rho0, t, options=options,progress_bar=True); ```. If you use a ket instead of a density operator mesolve() will pass the problem to sesolve(), which I guess for some reason is more robust in this case. It is a little annoying it is just failing silently. I am curious if you tried in v5?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2229#issuecomment-1713056542:174,toler,tolerances,174,https://qutip.org,https://github.com/qutip/qutip/issues/2229#issuecomment-1713056542,2,"['robust', 'toler']","['robust', 'tolerances']"
Availability,"It most likely is. Roundoff error and errors due to discreteness of the; ode methods will lead to some errors. One way to get around this is to; operate only on the upper or lower triangle of rho. This would also speed; things up; - Sent from my Sony Z Tablet. Frequently while I am using mesolve for some long protracted evolution the; density matrix at some point becomes nonhermitian (isherm and; checkherm()return false). I am guessing that this is just because of; numeric noise, as; there is nothing physically that can cause that (and it is happening even; when the evolution is purely unitary). Is this actually because of numerical noise?. If yes, I was wondering whether this can be addressed from within qutip or; whether the burden on addressing numerical noise should be on the user?. Is there a ""canonical qutip way"" to remove the nonhermitian numerical noise; from matrices that should be hermitian?. —; Reply to this email directly or view it on; GitHubhttps://github.com/qutip/qutip/issues/122; .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/122#issuecomment-42121578:28,error,error,28,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-42121578,3,['error'],"['error', 'errors']"
Availability,"It seems like 4fa892932b1062b31fcaf2640987c8ecfa7d7a19 fixed the problem with the broken demos(). But if demos application is going to continue to be an official part of qutip, I think it would be better to dispatch each demo in a separate process, using ""fork() and exec()"", instead of the current method of ""compile() and eval()"" which seems not very robust (that is, it crashes the application if something goes wrong in the example script). Also, the text-based demos can probably be dropped because I doubt anyone use that function. . But work on new qutip demos should probably be using ipython notebooks, I think, so I'm not sure how much energy we should spend on the demos application.. But on the other hand not everyone uses the ipython notebook, so the qt demos application probably might still has a role to play.. and some effort to make it more robust might be worthwhile?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/19#issuecomment-18893809:353,robust,robust,353,https://qutip.org,https://github.com/qutip/qutip/issues/19#issuecomment-18893809,2,['robust'],['robust']
Availability,"It seems the problem was with the `blas_opt['extra_compile_args']` call in the `setup.py` for the Fortran solver. This is an odd error given that is works perfectly well on the mac:. ``` python; import numpy as np; blas_opt=np.__config__.blas_opt_info; extra_compile_args=blas_opt['extra_compile_args']; print(extra_compile_args); ['-msse3', '-DAPPLE_ACCELERATE_SGEMV_PATCH', '-I/System/Library/Frameworks/vecLib.framework/Headers']; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283#issuecomment-66267097:129,error,error,129,https://qutip.org,https://github.com/qutip/qutip/issues/283#issuecomment-66267097,1,['error'],['error']
Availability,"It seems to me that what counts in the end is how good the result of the simulation in the truncated Hilbert space coincides with the exact solution for the infinite Hilbert space. As an example I tried it out on a pumped mode in a cavity (https://gist.github.com/bastikr/136908ce690b299e2e82bd13ab2cb47a). Both approaches, i.e. using the analytically generated coherent state or generating it with the displacement operator as initial states, yield pretty much the same error compared to the analytic result. I may have made a mistake or simply misunderstood your statement. Can you maybe further help me to understand this issue?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/683#issuecomment-293311686:471,error,error,471,https://qutip.org,https://github.com/qutip/qutip/pull/683#issuecomment-293311686,2,['error'],['error']
Availability,"It was during fixing/changing the behaviour shown in 1808 that I first saw the issue. It seems now that I can change the qutip code, and to some degree at least it does compile, but the mentioned error still shows up in the terminal on running reload(qutip). Its likely that the error was there before I started modifying any files, and that I did not happen to spot it between all the lines jupyter tends to print in the terminal. It also shows up on my system after I force a fresh installation of qutip with no changes. It does not currently seem to stop me from doing anything, but I don't know what causes it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810#issuecomment-1046958786:196,error,error,196,https://qutip.org,https://github.com/qutip/qutip/issues/1810#issuecomment-1046958786,2,['error'],['error']
Availability,"It will cause a lot of tests failure not related to changes, We will get tests failure due to new version of jax or a deprecation in numpy /scipy will have to be fixed in multiple repos for the tests to work as we are seen with the present failure. It require commitment to keep everything working and up to date so I would like to hear from the maintainers of the other projects before merging. ; Also should other projects such as `qutip-cupy`, `qutip-qtrl` be included?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2504#issuecomment-2286479530:29,failure,failure,29,https://qutip.org,https://github.com/qutip/qutip/pull/2504#issuecomment-2286479530,3,['failure'],['failure']
Availability,"It would be good to include the zenodo bib reference that relates to the specific version that is being used. It would be good if users included this zenodo reference, as this pinpoints a version, which could be important for people trying to repeat the results. In the same vein it could be a good idea to automatically output a file into the cwd that contains the `qutip.about()` output. We could include a citation reminder in the `qutip.about()` and also a message that explains that bib files have also be produced for their convenience. In order to placate those who may object to all of this, we should provide some setting that allows users to turn off this bib and about() output. We should mention this setting in the `about()`. We also need to handle file errors that may occur.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/752#issuecomment-330591675:767,error,errors,767,https://qutip.org,https://github.com/qutip/qutip/pull/752#issuecomment-330591675,1,['error'],['errors']
Availability,"It would be good to understand why the qutip-qip test started failing now. Perhaps it is related to the new specializations for dense that were merged on Friday? Previously some operations that went via the sparse data layer may have been tidied up and now they are not. The use of `p != 0` existed in version 4 and is, I think, correct in this particular case. If a POVM is supplied as a list of operators, and some of those operators have zero probability, then one cannot provide a normalized final density matrix, but one still needs to return a value to the user, since they specifically asked about that POVM. Perhaps qutip-qip could apply a tolerance itself on the returned probabilities?. We could also add an atol parameter to some measurement functions for v5, but I think that ship has sailed for 4.7.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2029#issuecomment-1336427119:648,toler,tolerance,648,https://qutip.org,https://github.com/qutip/qutip/issues/2029#issuecomment-1336427119,1,['toler'],['tolerance']
Availability,"It would be really good to get #1181 merged - I put in a couple of commits that would show us a lot more whether it's a minor random Monte-Carlo randomness error, or if it's completely wrong. I wouldn't worry too much about it for the purposes of this PR - we know it's not related so it's probably ok to merge despite it. Even if it passed, the subsequent run on merge might fail anyway. (pinging @Ericgig as he asked)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607480196:156,error,error,156,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607480196,2,"['error', 'ping']","['error', 'pinging']"
Availability,"It would maybe be good to keep everything in one PR that can be squashed into a single commit at the end - this is only a single ""logical"" change at the end of the day. Nice to get these things tidied up. You probably need to run all the tests locally before just pushing to check if everything works; QuTiP has quite a few code generation steps and indirect evaluation that can't be detected with static analysis, which is why you're seeing a lot of test failures (though that's _mostly_ `.pyx` files). Something seems wrong with the static analyser if it's not spotting that `Qobj` is used _everywhere_, though, and I notice in several commits it has a lot of false positives for removal. I can't imagine any situation where a static analyser should remove an in-library import from an `__init__.py` file, but it's done that in a couple of places. Similarly, in `cy/pyxbuilder.py` I can see that it's removed a line `import pyximport`, but I can see that that import _is_ used - it's so close it's even within the minimal diff!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1394#issuecomment-735738116:456,failure,failures,456,https://qutip.org,https://github.com/qutip/qutip/pull/1394#issuecomment-735738116,1,['failure'],['failures']
Availability,"It's fine to not split the PR in too many chunks.; Yes it's easier to review, but I don't want to have it half implemented/merged at release, which is coming soon.; You could just add `kron` here. The other can be implemented using matmul and can wait. It's fine to take some time. Just ping me when you want a re-review.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2314#issuecomment-1942727858:287,ping,ping,287,https://qutip.org,https://github.com/qutip/qutip/pull/2314#issuecomment-1942727858,1,['ping'],['ping']
Availability,"Just a few comments:; * The changes in behavior are probably due to a different QuTiP version. Your `qutip.about()` output shows that you have installed version 5.0.3 on the one PC and version 4.6.2 on the other. Version 5 was recently released, and it is a major update and changes many of the internals of QuTiP. Old code should still work with version 5 in the majority of cases, but it is not guaranteed to always work. For old code, you might therefore prefer to use version 4 (the latest release of version 4 is v4.7.6).; * Your notebooks are rather long, and for a person who has not written them it can be hard to figure out what they do. If you would like to investigate in detail where the different behavior comes from, I would recommend to try to boil it down to a *short, self-contained* example script that gives different results in versions 4 and 5.; * The differing plots show values with a magnitude of $10^{-14}$ or so. That is rather small. By default, QuTiP's solvers use tolerances of $10^{-12}$, so you should not expect the numerical results to have a higher precision than that. In numerical calculations, it is generally recommended to rescale your units such that your parameters and results have a magnitude around $1$ if possible.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2501#issuecomment-2249560375:767,down,down,767,https://qutip.org,https://github.com/qutip/qutip/issues/2501#issuecomment-2249560375,2,"['down', 'toler']","['down', 'tolerances']"
Availability,Just a ping to @araza6 for any update. Cc @quantshah.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-633933697:7,ping,ping,7,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-633933697,1,['ping'],['ping']
Availability,"Just adding my two cents. From my experience, a lot of our users don't know how to efficiently locate the error and find the solution. Simply posting a HOW-TO guide along with the release notes might not be sufficient, because the users may not be aware of its existence. It would help I think if we could; - raise an error or warning message that locates the error as clear as possible and; - if feasible, leave a link in the error/warning message directing the users to the HOW-TO guide.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/issues/1949#issuecomment-1179740053,8,['error'],['error']
Availability,"Just adding some minor comments here, not really related to the core discussion; > We could have a warning when matrices over a certain size are allocated. I don't think it is good unless we can read the available memory and derive the warning threshold from that. On the cluster, we sometimes have up to hundreds of GB of memory. The threshold should be different from computer to computer. > Should eigenstates return the states in one operator instead of a list of kets?. I do often want eigenstates to return one operator. Many times I have to get the kets to NumPy array and recreate the unitary operator from them. Maybe we can have an additional argument to the function.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2328#issuecomment-1953129675:204,avail,available,204,https://qutip.org,https://github.com/qutip/qutip/issues/2328#issuecomment-1953129675,1,['avail'],['available']
Availability,"Just found what may have been the cause of the segfault. Incorrect indexing in `data.csr.Accumulator.gather` led to uninitialised memory being exposed if it encountered a zero value which in the current PR would only have been exposed by `Qobj.ptrace` on CSR to CSR, but by no fault of its own. This PR is ready for review - these last couple of patches I've just been sending could equally have gone to the next PR I'm preparing which is waiting for this one to be merged so I can rebase it on top of the new `dev.major`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-678399544:277,fault,fault,277,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-678399544,1,['fault'],['fault']
Availability,"Just some information. There were indeed issues about this, e.g. #1247 . For new users, this could lead to some confusing behaviours. In those cases, `relative tolerance` definitely helps.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-680091809:160,toler,tolerance,160,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-680091809,1,['toler'],['tolerance']
Availability,"Just to add, I tried to benchmark Eric's jax data layer a bit more with an Ising model, the example is at the end of this colab notebook we made for a tutorial talk, which shows some crossover in performance at certain system sizes: https://colab.research.google.com/drive/1RcgX7oEzGjzPAF8Ryus54Q5UmyMddmLA?usp=sharing. ![benchmark](https://github.com/qutip/qutip/assets/5094429/15d2dfaa-b269-44f7-8334-878b8e2c5910). Note colab does not have free GPUs, so you will have to download and use it locally. also in the actual ising example, replace ; `with jax.default_device(jax.devices(""cpu"")[0]):` ; with; `with jax.default_device(jax.devices(""gpu"")[0]):`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-1940278917:474,down,download,474,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-1940278917,1,['down'],['download']
Availability,"Just tried this, I still the same error. So the `resolve_gates()` function works for you? What are the gates you get in the end? Are they correct?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-806463739:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-806463739,1,['error'],['error']
Availability,"Knowing the number of CPUs in the system may help in the future in debugging OpenMP code and setting sensible OpenMP thread counts - we may want to keep that part of the detection. I don't see any need for CPU frequency or memory size, though. That said, we should probably switch to using a library (like [`psutil`](https://github.com/giampaolo/psutil)) if we're going to keep it - it'll be a lot more reliable. For example, I've no idea why the current mac hardware detection in QuTiP ignores the `hw.ncpu` entry in `sysctl`, but the FreeBSD version explicitly uses it...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1395#issuecomment-736675351:403,reliab,reliable,403,https://qutip.org,https://github.com/qutip/qutip/issues/1395#issuecomment-736675351,1,['reliab'],['reliable']
Availability,"Knowing the tensor structure is still necessary for enforcing the Hilbert spaces are of the correct dimensions, even if the resulting state can't be written as a product of states on individual spaces. I think there's a lot more design to do to work out a sensible data structure which can really take advantage of this lazy representation, but my morning-after reaction to this is that it's very non-trivial without a lot of code duplication. It's easy enough to imagine how it will work for operators of structure `[scalar, oper, scalar] * [scalar, scalar, oper] -> [scalar, oper, oper]` - in this case the final result is fully expanded in the last two states, and not in the first. It's much trickier dealing with `[oper, scalar, scalar] * [scalar, scalar, oper] -> [oper, scalar, oper]`. In this case, since there's a subspace in between them, you need a specifically ""lazy"" Kronecker product. I suspect that this would have to be supported via either a completely separate `tensor` mechanism, or the mechanisms which currently underpin the data-layer `kron` would have to be revisited. At least at first, I think that's a very large undertaking, and it would really need a lot of careful design to ensure that we don't slow anything down, or balloon the amount of code to be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1320#issuecomment-658094225:1239,down,down,1239,https://qutip.org,https://github.com/qutip/qutip/issues/1320#issuecomment-658094225,1,['down'],['down']
Availability,Kraus operator function leads to segmentation fault on MacOS,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/944:46,fault,fault,46,https://qutip.org,https://github.com/qutip/qutip/issues/944,1,['fault'],['fault']
Availability,"L += sum(lindblad_dissipator(c_op, chi=chi_); qutip/core/superoperator.py:169: in lindblad_dissipator; ad_b = a.dag() * b; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.data.dia._dia_matrix; scipy_data_matrix.__init__(out); E TypeError: _data_matrix.__init__() missing 1 required positional argument: 'arg1'; __________________________________________ ERROR collecting qutip/tests/solver/test_mesolve.py ___________________________________________; qutip/tests/solver/test_mesolve.py:28: in <module>; class TestMESolveDecay:; qutip/tests/solver/test_mesolve.py:33: in TestMESolveDecay; ada = a.dag() * a; qutip/core/qobj.py:434: in __mul__; return self.__matmul__(other); qutip/core/qobj.py:476: in __matmul__; _data.matmul(self._data, other._data),; qutip/core/data/dispatch.pyx:392: in qutip.core.data.dispatch.Dispatcher.__call__; return function(*args, **kwargs); qutip/core/data/matmul.pyx:329: in qutip.core.data.matmul.matmul_dia; cpdef Dia matmul_dia(Dia left, Dia right, double complex scale=1):; qutip/core/data/matmul.pyx:332: in qutip.core.data.matmul.matmul_dia; npoffsets = np.unique(np.add.outer(left.as_scipy().offsets, right.as_scipy().offsets)); qutip/core/data/dia.pyx:202: in qutip.core.data.dia.Dia.as_scipy; self._scipy = _dia_matrix(data, offsets, self.shape); qutip/core/data/dia.pyx:52: in qutip.core.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:4064,ERROR,ERROR,4064,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['ERROR'],['ERROR']
Availability,"LMFC\INCLUDE"" ""-IC:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt"" ""-IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\shared"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\winrt"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\INCLUDE"" ""-IC:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\ATLMFC\INCLUDE"" ""-IC:\Program Files (x86)\Windows Kits\10\include\10.0.10240.0\ucrt"" ""-IC:\Program Files (x86)\Windows Kits\NETFXSDK\4.6.1\include\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\shared"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\um"" ""-IC:\Program Files (x86)\Windows Kits\8.1\include\\winrt"" /EHsc /Tpqutip/cy/spmatfuncs.cpp /Fobuild\temp.win-amd64-3.5\Release\qutip/cy/spmatfuncs.obj /w /Ox; cl : Command line warning D9025 : overriding '/W3' with '/w'; spmatfuncs.cpp; c:\anaconda2\envs\qtpy3\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(12) : Warning Msg: Using deprecated NumPy API, disable it by #defining NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C2146: syntax error: missing ')' before identifier 'data'; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C3646: 'data': unknown override specifier; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(3): error C2062: type 'int' unexpected; c:\users\alex\documents\github\qutip\qutip\cy\src/zspmv.hpp(7): error C2059: syntax error: ')'; qutip/cy/spmatfuncs.cpp(2503): error C2660: 'zspmvpy': function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2688): error C2660: 'zspmvpy': function does not take 7 arguments; qutip/cy/spmatfuncs.cpp(2923): error C2660: 'zspmvpy': function does not take 7 arguments; error: command 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\BIN\\x86_amd64\\cl.exe' failed with exit status 2; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281199101:1980,error,error,1980,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281199101,10,['error'],['error']
Availability,Leaving the full error message here:. ```; anaconda3/lib/gcc/x86_64-apple-darwin11.4.2/4.8.5/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699:17,error,error,17,https://qutip.org,https://github.com/qutip/qutip/issues/1030#issuecomment-505449699,3,"['down', 'error']","['down', 'error']"
Availability,"Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py _______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py:10: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py ___________________",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:18331,ERROR,ERROR,18331,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"Look good,; Thank you sameshl.; We can ignore the test errors as they are not related to this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1091#issuecomment-537176077:55,error,errors,55,https://qutip.org,https://github.com/qutip/qutip/pull/1091#issuecomment-537176077,1,['error'],['errors']
Availability,"Looking great, good job! . Just a few minor problems with the unit tests:; - use .np.array on line 214 in random_objects.py; - I get errors like ""AttributeError: 'numpy.ndarray' object has no attribute 'H'"". We need to use numpy.matrix instead of numpy.ndarray if .H is to be used.; - line 57 insuperop_reps: ""inpt=q_oper.data.reshape([sqrt_shape] \* 4)."" gives an error because q_oper.data is csr sparse matrix and does not implement reshape. I guess that the unit tests work on your system (maybe some version differences of numpy/scipy), so I'll go ahead and merge this PR now, and try to fix the unit test problems I get here. Just go ahead and make a new PR if there is anything else that you want to add or update. We really appreciate your contribution!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/22#issuecomment-18782823:133,error,errors,133,https://qutip.org,https://github.com/qutip/qutip/pull/22#issuecomment-18782823,2,['error'],"['error', 'errors']"
Availability,"Looking into the function `_mc_alg_evolve` in the source code of mcsolve, I have two questions in mind:; 1. Why do you divide the interval into each `tlist[k]` (`while ODE.t < tlist[k]:`) and run the ode internal step `ODE.integrate(tlist[k], step=1)` one at a time and evaluate `if norm2_psi <= rand_vals[0]:`?; Alternatively, can I run the ode `ODE.integrate(tlist, step=n)` without collapse until `norm2_psi <= rand_vals[0]`? It seems to be faster if `ODE.integrate(tlist, step=n)` can store the state. In this way I ignore `tlist[k]` totally.; 2. After `if norm2_psi <= rand_vals[0]:`, you find the collapse time to within specified tolerance. Can I just take the collapse time as the time immediately after `ODE.integrate(tlist[k], step=1)`? Since the step in the `ODE` should be small enough, would it make a lot difference by ignoring the steps of finding the collapse time to within specified tolerance?. Thank you very much.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/503:637,toler,tolerance,637,https://qutip.org,https://github.com/qutip/qutip/issues/503,2,['toler'],['tolerance']
Availability,"Looks generally good to me. Personally I am happy with the class instance method of invoking the code. However, as you say, the standard approach elsewhere in the library is to provide a function call. In the control modules I took the approach of doing both, with some functionality only being available through the setting of properties and calling instance methods. I would prefer to here from some of the other developer before merging though, as this is more in their area than mine.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/405#issuecomment-164471109:295,avail,available,295,https://qutip.org,https://github.com/qutip/qutip/pull/405#issuecomment-164471109,1,['avail'],['available']
Availability,Looks like plenty of warnings still and some errors in Python3.; Will pick up again tomorrow.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/434#issuecomment-185274058:45,error,errors,45,https://qutip.org,https://github.com/qutip/qutip/pull/434#issuecomment-185274058,1,['error'],['errors']
Availability,MSVC v10 (that is for py < 35) reports a failure to find complex.h; MSVC v14 (for py35) reports issues with pyx_build (can't remember exactly),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/447#issuecomment-192175123:41,failure,failure,41,https://qutip.org,https://github.com/qutip/qutip/issues/447#issuecomment-192175123,1,['failure'],['failure']
Availability,Mac os Compilation error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/965:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/965,1,['error'],['error']
Availability,"MacOS Mojave deliberately deleted the `user/include` folder so when compiling cython code, gcc cannot find the headers. I struggled a bit after suddenly updating to the latest MacOS and could find the solution here:. https://programmer.help/blogs/how-to-resolve-pip-install-twisted-error-limits.h-no-such-file-or-directory.html. Just do . ```; open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg; ```. In case others also update and end up with this error. @nathanshammah",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030:282,error,error-limits,282,https://qutip.org,https://github.com/qutip/qutip/issues/1030,2,['error'],"['error', 'error-limits']"
Availability,MacOS header error: fatal error: limits.h: No such file or directory,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1030:13,error,error,13,https://qutip.org,https://github.com/qutip/qutip/issues/1030,2,['error'],['error']
Availability,Make LaTeX image conversion more resilient,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194:33,resilien,resilient,33,https://qutip.org,https://github.com/qutip/qutip/pull/1194,1,['resilien'],['resilient']
Availability,Make `data.solve` more robust to singular matrices for `countstat`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2144:23,robust,robust,23,https://qutip.org,https://github.com/qutip/qutip/pull/2144,1,['robust'],['robust']
Availability,Make testing more robust especially for random objects,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1268:18,robust,robust,18,https://qutip.org,https://github.com/qutip/qutip/issues/1268,1,['robust'],['robust']
Availability,"Makes sense, I only mentioned about the speed as I thought it might be of interest to Travis. That said, I totally agree, getting a reliable build is definitely important.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360#issuecomment-130281180:132,reliab,reliable,132,https://qutip.org,https://github.com/qutip/qutip/pull/360#issuecomment-130281180,1,['reliab'],['reliable']
Availability,Many of the demo examples doesn't work with current master. The error messages are for example. ```; NameError: global name 'mcsolve' is not defined; ```. or. ```; NameError: global name 'mesolve' is not defined; ```. Seen on Linux and OS X.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/19:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/issues/19,1,['error'],['error']
Availability,Many thanks for this. What was the exact error that was occurring? This might be better treated in the partial transpose call.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/776#issuecomment-347420136:41,error,error,41,https://qutip.org,https://github.com/qutip/qutip/pull/776#issuecomment-347420136,1,['error'],['error']
Availability,"Many thanks for your kind reply. Unfortunately, I can not do that, because there is cases in my hamiltonian in which that matrix is not diagonal, I am just trying from the simplest case, actually my goal is to have a term ""S_vector * D_matrix *S_vector"" . Could you please explain how I am using Qobj incorrectly and how to used right. The error message states that since S_vector is a Qobj I can not multiply it with the D_matrix. If I put Qobj(D_matrix) then I can not multiply them because all terms are Qobj.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1848#issuecomment-1093795266:340,error,error,340,https://qutip.org,https://github.com/qutip/qutip/issues/1848#issuecomment-1093795266,2,['error'],['error']
Availability,Many thanks to your student for hunting this down. Merging now.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/545#issuecomment-251871954:45,down,down,45,https://qutip.org,https://github.com/qutip/qutip/pull/545#issuecomment-251871954,1,['down'],['down']
Availability,"Matlibplot 3.0.3may work will. 发自我的iPhone. ------------------ Original ------------------; From: Michael Kerschbaum <notifications@github.com&gt;; Date: 周六,4月 18,2020 15:16; To: qutip/qutip <qutip@noreply.github.com&gt;; Cc: XiaoTailong <2449734455@qq.com&gt;, Comment <comment@noreply.github.com&gt;; Subject: Re: [qutip/qutip] `Bloch().add_points()` breaks in Matplotlib 3.1.0 (works in Matplotlib 3.0.3) (#1027). ; I can reproduce the above errors with Matplotlib 3.2.1.; ; —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub, or unsubscribe.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027#issuecomment-615872719:444,error,errors,444,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-615872719,1,['error'],['errors']
Availability,"May I propose another approach for testing normalization: use a non-hermitian Hamiltonian and `qeye` as the e_ops.; Then it is clear if the normalization step does it's work or not. Otherwise the `tol` should be very strict, the error between before and after the normalization is usually quite small. `sesolve` does not differentiate between an `unitary` and a `dm`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1148806235:229,error,error,229,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1148806235,2,['error'],['error']
Availability,"Maybe we should require that at least one of the test cases requires a version of scipy pre-1.5 so we don't cause any regressions for older versions of scipy as Travis builds start to reliably pull 1.5? Perhaps we can add a requirement for scipy=1.4.1 to the Linux py3.7, MKL/OMP one?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301#issuecomment-649616762:184,reliab,reliably,184,https://qutip.org,https://github.com/qutip/qutip/pull/1301#issuecomment-649616762,1,['reliab'],['reliably']
Availability,"Minimal script to reproduce the error that only uses numpy:; ```; # On a CPU with AVX512 extensions and numpy 1.21.2:; # (only tested on Ubuntu); # It works again on numpy 1.21.4 (and maybe 1.21.3 -- I did not check because 1.21.3 was not conda installable). import numpy as np. L = np.diag([1+0j, 1, 1, 1]); b = np.array([1+0j, 0, 0, 0]). # commenting out the line below makes everything work, with it solve returns nans.; np.exp(0); # breakpoint(). v = np.linalg.solve(L, b); np.testing.assert_allclose(v, b); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1694#issuecomment-967000449:32,error,error,32,https://qutip.org,https://github.com/qutip/qutip/pull/1694#issuecomment-967000449,1,['error'],['error']
Availability,"Most of it is already in qutip or in development:; - We already have a progress bar.; - We have feedback to support solvers where parameters are changed depending on the current state. Those should not updated at each time-step, but included in the rhs. Otherwise, it will increase runtime and often the numerical error. We mostly use multistep method (Adams and BDF) which are particularly sensible to that.; - In my rework of `mcsolve`, I'm including the capacity to stop after a certain time, (already merged) and after the error bar gets under a certain tolerance. I have not though an equivalent for `me/sesolve` would be needed but it would be simple enough to add. We could have function that takes the expect value and tell the solver to stop or continue. ; - I was thinking of adding the ability to step through the evolution (draft in #1455):; ```; solver = MeSolver(H, c_ops, options=opt); solver.start(t0, rho0); for t in [t1,t2, ...]:; rho_t = solver.step(t, args=new_args); ```; Which would work like a `yield`:; ```; solver = MeSolver(H, c_ops, options=opt); for rho_t in solver.yield_run(rho0, tlist):; if needed:; solver.update_parameter(args=new_args); ```; I prefer using steps since you don't have do define `tlist` first, you could use it in a `while True` loop or interactively.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-858740451:314,error,error,314,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-858740451,6,"['error', 'toler']","['error', 'tolerance']"
Availability,"Most of scipy's solver are not ""thread-safe"", but we will be able to use other solvers in the new version. We will be sure to add at least one which is thread safe. The `args=new_args` refer to the `args` in `[H0, [H1, f(t, args)]]`, in your case, you could use something like:; ```; def f(t, args):; return args['u'] ; ```; We don't have step interpolation with changing coefficient array. It could be added, but we will have to think about it. Using a mutable, as in your example, would create error with most ODE solver with variable step, so I would not recommend it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1571#issuecomment-859791561:496,error,error,496,https://qutip.org,https://github.com/qutip/qutip/issues/1571#issuecomment-859791561,1,['error'],['error']
Availability,"My thinking on this basically comes down to two points. First, the behavior of `composite` is explicitly not the same as that of `tensor()` or `super_tensor()`, as it's a common usecase to compose operators defined on different subsystems without reference to representation. While I agree that it would be good to have more generic wire-bending support in QuTiP, I think that's likely out of scope for this particular feature, as it would require some significant rethinking of how `dims` is currently implemented. Second, I think that it's entirely defensible that the current behavior of `composite` promotes operators by `spre() * spost()`, as this is consistent with the view that superoperators are matrix representations of group action by conjugation. That is, `composite` returns the composite of the same group action applied to each of several subsystems, though the action can be more general for `type='super'` arguments. This could perhaps be made more clear by renaming `composite` to `composite_oper` or similar, but I think that the _behavior_ of the current function is correct and consistent, if admittedly, poorly described.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/241#issuecomment-58038276:36,down,down,36,https://qutip.org,https://github.com/qutip/qutip/pull/241#issuecomment-58038276,2,['down'],['down']
Availability,"Nathan, could you resolve the conflict. You can merge it yourself or ping me if you prefer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1168#issuecomment-633711479:69,ping,ping,69,https://qutip.org,https://github.com/qutip/qutip/pull/1168#issuecomment-633711479,1,['ping'],['ping']
Availability,"Nevermind, sorry I was being stupid. Changed the integrator tolerance and it work :/.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1492#issuecomment-815315471:60,toler,tolerance,60,https://qutip.org,https://github.com/qutip/qutip/issues/1492#issuecomment-815315471,1,['toler'],['tolerance']
Availability,New methods for single stochastic jump operator are implemented:; - 1/2 order predictor-corrector euler-maruyama; - 1 order semi-implicit Milstein; - 3/2 order explicit and semi-implicit Taylor 1.5. Tests for all the new (and old) methods are added. There is a corresponding notebook which shows that the solvers achieve (or exceed) their order of convergence.; https://github.com/qutip/qutip-notebooks/pull/37; Here is the scaling of solver error as a function of stepsize:; ![error_scaling_y_an](https://cloud.githubusercontent.com/assets/4971779/18120795/128dcbe6-6f6a-11e6-8b36-8b16fb73f35a.png). Bug: fast-milstein modifies input noise - fixed. The explicit Taylor 1.5 method and most of the coding is done by **Manuel Grimm** under supervision of **Niels Lörch** at University of Basel.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/529:442,error,error,442,https://qutip.org,https://github.com/qutip/qutip/pull/529,1,['error'],['error']
Availability,"New schemes for the options. All options's default value can be set and seen in qutip.settings:; ```; >>> from qutip import settings; >>> settings.solver[""atol""] = 1e-10; >>> settings.core[""auto_tidyup""] = False; >>> settings.solver.mcsolve[""norm_tol""] = 1e-4; >>> settings.save(); >>> print(qutip.settings); qutip.settings.install:; debug : False; log_handler : 'default'; colorblind_safe : False; tmproot : '/home/eric/.qutip/coeffs'; mkl_lib : None; has_mkl : False; ipython : True; _logger : <Logger qutip.installsettings (WARNING)>; eigh_unsafe : False. qutip.settings.core:; auto_tidyup : False; auto_tidyup_dims : True; auto_herm : True; atol : 1e-12; auto_tidyup_atol : 1e-12; ...; ```. The main changes are; - `settings` is an object in `qutip/settings.py`.; - Actual options are accessed as dictionary values instead of attributes.; - `settings`'s values are read from qutiprc at import.; - Easy saving of settings; - `reset` function as described in documentation but not available yet.; - solver `Options` renamed and split, some options removed (`rhs_with_state`, ...). @jakelishman, I commented out most of the openmp stuff, I expect you to pass behind me and clean when you re-implement it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1337:983,avail,available,983,https://qutip.org,https://github.com/qutip/qutip/pull/1337,1,['avail'],['available']
Availability,Nice work Eric. I had a quick look at the code.; Does this PR mean that string type td will be used to construct Python functions when Cython not available? Just checking that I understand.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-529838231:146,avail,available,146,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-529838231,1,['avail'],['available']
Availability,No errors from the following:; ```; try:; from qutip import *; from qutip.qip import *; except ImportError:; !pip install --quiet qutip--4.7.5 qutip-qip; from qutip import *; from qutip.qip import *; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2334#issuecomment-1962951064:3,error,errors,3,https://qutip.org,https://github.com/qutip/qutip/issues/2334#issuecomment-1962951064,1,['error'],['errors']
Availability,"No longer relevant with v5.; `essolve` was removed.; `sesolve` still has a small drift due to numerical error, but easily solver by changing `rtol` and `atol`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841#issuecomment-2073417353:104,error,error,104,https://qutip.org,https://github.com/qutip/qutip/issues/841#issuecomment-2073417353,1,['error'],['error']
Availability,"No problem - test failures are a big deal, because they prevent everyone else from seeing what might be going wrong with their own code, and lots of people are actively working on QuTiP at the moment. > Merging once tests pass. ""if"", I think - I have a mac, so I still get the segfaults!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1301#issuecomment-649583979:18,failure,failures,18,https://qutip.org,https://github.com/qutip/qutip/pull/1301#issuecomment-649583979,1,['failure'],['failures']
Availability,"No, I never got similar error...; You seems to be following the instruction in the doc's readme which usually work well.; Your branch seems to be not up to date with master, maybe if you merge the recent changes and rebuild qutip from source, it would work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1706#issuecomment-995160913:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/issues/1706#issuecomment-995160913,1,['error'],['error']
Availability,"No, not yet, it will be supported in v5.; You could try to use `photocurrent_mesolve` which is very similar, but with a slower algorithm. ps. There is an error in the formula in the [documentation](https://qutip.org/docs/latest/guide/dynamics/dynamics-photocurrent.html#open-system):; L_eff(rho) = L(rho) - C_dag*C*rho - rho*C_dag*C + tr(C_dag*C*rho - rho*C_dag*C)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2060#issuecomment-1385475587:154,error,error,154,https://qutip.org,https://github.com/qutip/qutip/issues/2060#issuecomment-1385475587,2,['error'],['error']
Availability,"No, we usually have no problem on linux. How did you install it? `pip`, `python setup.py install`? Did you have a prior installation? Some time, if you install qutip without openmp but installed it previously with openmp there are errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973:231,error,errors,231,https://qutip.org,https://github.com/qutip/qutip/issues/1205#issuecomment-600635973,1,['error'],['errors']
Availability,"None:; sso.dW_factors = [1.] * len(sso.m_ops); elif len(sso.dW_factors) == 1:; - sso.dW_factors = sso.dW_factors * len(sso.m_ops); + sso.dW_factors *= len(sso.m_ops); elif len(sso.dW_factors) != len(sso.m_ops):; raise ValueError(""The number of dW_factors must fit"" +; "" the number of m_ops.""); @@ -1318,7 +1318,7 @@ def _sesolve_generic(sso, options, progress_bar):; res.states = res.avg_states = avg_states_list; ; # average; - res.expect = res.expect / nt; + res.expect /= nt; ; # standard error; if nt > 1:; diff --git a/qutip/subsystem_apply.py b/qutip/subsystem_apply.py; index ebd81a1b..110f6cca 100644; --- a/qutip/subsystem_apply.py; +++ b/qutip/subsystem_apply.py; @@ -126,7 +126,7 @@ def _one_subsystem_apply(state, channel, idx):; for mul_idx in range(idx):; # print mul_idx; # print subs_dim_ar[mul_idx]; - n_blks = n_blks * subs_dim_ar[mul_idx][0]; + n_blks *= subs_dim_ar[mul_idx][0]; ; blk_sz = state.shape[0] // n_blks; # Apply channel to top subsystem of each block in matrix; @@ -258,5 +258,5 @@ def _subsystem_apply_reference(state, channel, mask):; else qeye(state.dims[0][j]); for j in range(len(state.dims[0]))]; full_oper = tensor(list(map(Qobj, op_iter_list))); - rho_out = rho_out + full_oper * state * full_oper.dag(); + rho_out += full_oper * state * full_oper.dag(); return Qobj(rho_out); diff --git a/qutip/superoperator.py b/qutip/superoperator.py; index dacc0e1e..8d099484 100644; --- a/qutip/superoperator.py; +++ b/qutip/superoperator.py; @@ -112,19 +112,19 @@ def liouvillian(H, c_ops=[], data_only=False, chi=None):; c_ = c_op; ; if c_.issuper:; - data = data + c_.data; + data += c_.data; else:; cd = c_.data.H; c = c_.data; if chi:; - data = data + np.exp(1j * chi[idx]) * \; + data += np.exp(1j * chi[idx]) * \; zcsr_kron(c.conj(), c); else:; - data = data + zcsr_kron(c.conj(), c); + data += zcsr_kron(c.conj(), c); cdc = cd * c; cdct = cdc.T; - data = data - 0.5 * zcsr_kron(spI, cdc); - data = data - 0.5 * zcsr_kron(cdct, spI); + data -= 0.5 * zcsr_kron(spI, ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872:21697,mask,mask,21697,https://qutip.org,https://github.com/qutip/qutip/issues/1714#issuecomment-974625872,1,['mask'],['mask']
Availability,"Not a complete switch-over to `CSR` from `fast_csr_matrix`, but this goes a really long way to achieving that. `Qobj` is done completely, but `QobjEvo` is pretty difficult to disentangle, and that really slowed me down a lot, and I'm not at all sure I've got it right there yet. OpenMP is ignored for now as low-priority. We'll need to get it working before a QuTiP 5.0 release, but I'm not working on it at the moment. `CQobjEvo` has been absolutely stripped bare. All its variants are gone, since the data layer types will handle this instead. `QobjEvo` is basically managed by shim at the moment, and needs a huge tidy up to bring it up to speed with the new data layer, and keep it maintainable. The data layer types have been taught to pickle themselves safely and automatically, and so consequently `QobjEvo` is magically pickle-able (aside from the OpenMP types). This PR includes all the commits from #1296 as well, but it's still a pretty giant PR as it stands right now. The tests won't pass yet, because I haven't finished converting everything.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1328:214,down,down,214,https://qutip.org,https://github.com/qutip/qutip/pull/1328,1,['down'],['down']
Availability,"Not a huge amount to be done about that CodeClimate failure to be honest - I'm not going to go through and change that function into something more sensible, because the whole type is _completely_ rewritten in 5.0 anyway. If I remember correctly, that whole class is copied from SciPy too, with some small adjustments to the initialisation to speed it up. The failure isn't anything new, it's just being flagged because my diff hit a return statement in a function with about 25 returns.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-824507509:52,failure,failure,52,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-824507509,2,['failure'],['failure']
Availability,"Not in that way. `0` is the right value when the system is constant or the time dependence is always active (`sin(w*t)`, `exp(-t)`, etc.) In these case, it is best to let the solver decide the right step length. Also pulse shorter that 5% of `tlist` could still be missed. Lastly. in some cases, the `tlist` may not be available to the solver. We certainly need to be better documentation of this. Maybe a notebook showing this trap could be useful. But without being able to look into the coefficient, I don't see an easy fix.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1945#issuecomment-1168820859:319,avail,available,319,https://qutip.org,https://github.com/qutip/qutip/issues/1945#issuecomment-1168820859,1,['avail'],['available']
Availability,"Not really much to add, except that if it were possible to try a fresh; install of anaconda, and maybe python 3.6, but that is just guessing.; Probably an install from source is better on linux any way.; The conda packages were mainly developed for users with issues compiling; (i.e. on Windows). Though things have moved on so much since we started; trying that as a solution. On 26 March 2017 at 02:01, Paul Nation <notifications@github.com> wrote:. > Oh sorry, I thought you were reporting the sys gcc, not the conda one.; >; > Conda-forge and QuTiP are tested heavily against Ubuntu 14.04, so if any; > platform works, it should be that one.; >; > As I originally suspected, the problem comes from the Cython code.; > Specifically for the sparse matrix math. The fact that you can build it; > yourself suggests a binary incompatibility. However, again, we test; > against 14.04, so I am hard pressed to think about what the issue could be.; > gdb might be able to hunt down where the dump occurs.; >; > On Mar 25, 2017 18:27, ""Michael Goerz"" <notifications@github.com> wrote:; >; > Since it's the python from the conda package, I'm assuming that's because; > Continuum created the linux package on a Redhat system. GCC is identified; > like that on both of the workstations. But yeah, my guess would be that; > there is some shared library that's compiled in a way that's incompatible; > with the rest of the system. Is there any linux utility that would allow to; > determine which library is being accessed at the moment of the crash? Some; > invocation of ldd?; >; > —; > You are receiving this because you commented.; >; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/674#issuecomment-289249308>, or; > mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqT0F1WSzbd-; > hOyso9XQM0K5ldiiwks5rpbEBgaJpZM4MpI4Z>; > .; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289852411:973,down,down,973,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289852411,1,['down'],['down']
Availability,"Not really sure on the source of the error here. Stange one, as it's from a file not changed in this PR.; All I can suggest is to rebase from the upstream master again, which is not really a very onerous process; ```; git rebase upstream/master; ```; skipping any conflicting commits, then; ```; git push --force; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/883#issuecomment-398675812:37,error,error,37,https://qutip.org,https://github.com/qutip/qutip/pull/883#issuecomment-398675812,1,['error'],['error']
Availability,Not sure how to make a test for this. The file name is random and it's not always reliable when the `__del__` is called which is where the file is erased.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2251#issuecomment-1781162157:82,reliab,reliable,82,https://qutip.org,https://github.com/qutip/qutip/pull/2251#issuecomment-1781162157,1,['reliab'],['reliable']
Availability,"Not sure if it's that simple.; ```; --config-setting=""--global-option=--with-openmp""; ```; actually gives me a build error:; ```shell; $ python3.10 -m build --skip-dependency-check --no-isolation --wheel --config-setting=""--global-option=--with-openmp""; * Building wheel...; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 363, in <module>; main(); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 345, in main; json_out['return_val'] = hook(**hook_input['kwargs']); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 261, in build_wheel; return _build_backend().build_wheel(wheel_directory, config_settings,; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 230, in build_wheel; return self._build_with_temp_dir(['bdist_wheel'], '.whl',; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 211, in _build_with_temp_dir; sys.argv = (sys.argv[:1] + setup_command +; TypeError: can only concatenate list (not ""str"") to list. ERROR Backend subproccess exited when trying to invoke build_wheel; ```. The other method; ```; --config-setting=""--build-option=--with-openmp""; ```; appears to work in the sense that it builds successfully. But after installing the package it reports that openmp is still missing; ```; $ python3 -c ""import qutip; qutip.about()"". QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0; Numpy Version: 1.21.5;",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152:117,error,error,117,https://qutip.org,https://github.com/qutip/qutip/issues/1875#issuecomment-1219841152,2,['error'],['error']
Availability,Not sure if the failure on windows is related to the numpy release or not. It's a different issue so I will merge this and look at it another time.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2510#issuecomment-2296970652:16,failure,failure,16,https://qutip.org,https://github.com/qutip/qutip/pull/2510#issuecomment-2296970652,1,['failure'],['failure']
Availability,"Not sure what is causing conda-forge/qutip-feedstock#18, but switching to a vector in sort may help as there was no issues with the previous 4.0.2 build that has a similar routine in the COO -> CSR inplace conversion function. Note also that building with VS 2015, mingpy, clang-3.9 from homebrew, and clang from Apple itself does not raise the error mentioned in conda-forge/qutip-feedstock#18.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/660:345,error,error,345,https://qutip.org,https://github.com/qutip/qutip/pull/660,1,['error'],['error']
Availability,"Not to discourage you from contributing, but there's already been some movement on #1208 in #1209. About tests: `qutip` uses `pytest` now, so the preferred method is actually just a bare `assert`, because `pytest` does introspection on the variables on an assertion failure. But yes, any changes to that should be in a new PR, because it's a different logical unit of work. There's some movement on that too (e.g. #1181). About pep8 changes: I'm not a maintainer, but it might be a good idea to be conservative about changing actual public APIs in the name of pep8. Changing public APIs that work fine means the users, who are the reason we're writing the code in the first place, have to adjust, and the pep8 spec explicitly warns against breaking backwards compatibility to match the pep. `N` is fairly consistent within `qutip` for the number of qubits, and the `U` in `U_list` refers to unitary matrices, which are conventionally a capital `U` in mathematical writing. You could argue that `U_list` should perhaps be called `unitaries`, but again, there's a degree of backwards-compatibility that should be maintained.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557:266,failure,failure,266,https://qutip.org,https://github.com/qutip/qutip/pull/1212#issuecomment-603560557,1,['failure'],['failure']
Availability,"Note: This appears broken on my M1 MacBookPro running Big Sur... there is no sysctl hw.cpufrequency at all on this machine, so it blows up (some error handling in that function would be good :-). ```$ sysctl hw; hw.ncpu: 8; hw.byteorder: 1234; hw.memsize: 17179869184; hw.activecpu: 8; hw.optional.amx_version: 2; hw.optional.arm64: 1; hw.optional.armv8_1_atomics: 1; hw.optional.armv8_2_fhm: 1; hw.optional.armv8_2_sha3: 1; hw.optional.armv8_2_sha512: 1; hw.optional.armv8_crc32: 1; hw.optional.breakpoint: 6; hw.optional.floatingpoint: 1; hw.optional.neon: 1; hw.optional.neon_fp16: 1; hw.optional.neon_hpfp: 1; hw.optional.ucnormal_mem: 1; hw.optional.watchpoint: 4; hw.cacheconfig: 8 1 1 0 0 0 0 0 0 0; hw.cachelinesize: 128; hw.cachesize: 3616980992 65536 4194304 0 0 0 0 0 0 0; hw.cpu64bit_capable: 1; hw.cpufamily: 458787763; hw.cpusubfamily: 2; hw.cpusubtype: 2; hw.cputype: 16777228; hw.ephemeral_storage: 0; hw.l1dcachesize: 65536; hw.l1icachesize: 131072; hw.l2cachesize: 4194304; hw.logicalcpu: 8; hw.logicalcpu_max: 8; hw.osenvironment: ; hw.packages: 1; hw.pagesize: 16384; hw.pagesize32: 16384; hw.physicalcpu: 8; hw.physicalcpu_max: 8; hw.serialdebugmode: 0; hw.tbfrequency: 24000000; hw.use_kernelmanagerd: 1; hw.use_recovery_securityd: 0; hw.targettype: J293; ```; Big Sur 11.4 on MacBookPro M1. Actually I'll open a separate issue...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1401#issuecomment-879469970:145,error,error,145,https://qutip.org,https://github.com/qutip/qutip/pull/1401#issuecomment-879469970,1,['error'],['error']
Availability,"Note: in theory you can install QuTiP from the test PyPI server right now by doing; ```; pip install -i https://test.pypi.org/simple qutip-jakelishman; ```; (that's just the name - you still do `import qutip`) but since it's on the ""wrong"" server, you first have to manually install `numpy` and `scipy`. When it's released properly on PyPI it'll handle the dependencies correctly - this is only an artifact of being on the testing server. Running that command will install a binary version with no compilation, and should work on any (reasonable) Linux machine, Mac (possibly not M1 chips) and Windows. It's possible you may get an error about `ndarray size changed ... this may indicate binary incompatibility` - if so, either force `numpy` up to the new 1.20 or down to 1.19 (whichever one you don't have). This was a breaking change in numpy 1.20. Per my reading of the release notes, it won't be an issue provided in the future we always build against `numpy>=1.20` (even when using lower `numpy` at runtime) because the new version updates a certain C-API macro to take into account the possibility of runtime variability. I have pushed an additional change to the build requirements to ensure this always happens. This has another knock-on effect: numpy 1.20 only supports Python 3.7+ (released June 2017). Currently, officially QuTiP supports Python 3.6, but I think it's reasonable to follow numpy's footsteps and **drop support for python 3.6 from qutip 5.0**. It's offset by gaining support for 3.9. (Apologies for all the force-pushing - whenever I want to re-run a test release on my own branch I have to temporarily add an extra commit to swap to the testing server, then force-push a rewind of this PR's branch.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519:632,error,error,632,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-770459519,4,"['down', 'error']","['down', 'error']"
Availability,"Note: it _did_ cause additional CodeClimate failures. I manually approved the run from within CodeClimate (you can see that in the output of the checks). Unfortunately the duplication checker still errors out on a lot of files, because it seems to choke on complex numbers, so we actually don't get detection on loads of our files (not to mention all our Cython files).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1577#issuecomment-862377861:44,failure,failures,44,https://qutip.org,https://github.com/qutip/qutip/pull/1577#issuecomment-862377861,2,"['error', 'failure']","['errors', 'failures']"
Availability,"Notionally fixes #1179, #1185. Converts the `os.system` calls to `subprocess.run` because they're now the recommended way of doing things. I check for existence of the dependencies at import time, and emit a warning (`ImportWarning`) if they don't exist. This is ignored by the typical warning filters, so it won't actually show up for most users. If a dependency doesn't exist, then we don't define the relevant methods on the `QubitCircuit` class to avoid IPython introspecting the class object and thinking that it can make a PNG/SVG. This may not be the best way of doing things, but in this delocalised setting I think it's easier to talk/discuss around a problem with an example in front of us. In particular, I think raising `NotImplementedError` on failing to find `pdflatex` might not be the right call: if it doesn't exist, then the PNG and SVG methods of `QubitCircuit` are currently still created, and then IPython would try to call them and produce an error that isn't the fault of the user. Also, maybe there's a nicer way to make sure that the user sees the ""not found"" warnings the first time that they do something which involves a conversion? At the moment, the class just doesn't get the methods defined.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194:965,error,error,965,https://qutip.org,https://github.com/qutip/qutip/pull/1194,2,"['error', 'fault']","['error', 'fault']"
Availability,"Now it gives me one other error and a failure (and I have the impression the I can deal with the prior errors better than with the new one):. > > > import qutip.testing as qt; > > > qt.run(); > > > Qobj data ... ok; > > > Qobj type ... ok; > > > Qobj Hermicity ... ok; > > > Qobj shape ... ok; > > > Qobj addition ... ERROR; > > > Qobj subtraction ... ok; > > > Qobj multiplication ... ok; > > > Qobj division ... ok; > > > Qobj power ... FAIL; > > > Qobj negation ... ok; > > > Qobj equals ... ok; > > > Qobj getitem ... ok; > > > Qobj multiplication type ... ok; > > > Qobj conjugate ... ok; > > > Qobj adjoint (dagger) ... ok; > > > Qobj diagonals ... ok; > > > Qobj eigenenergies ... ok; > > > Qobj eigenstates ... ok; > > > Qobj expm ... ok; > > > Qobj full ... ok; > > > Qobj ket type ... ok; > > > Qobj bra type ... ok; > > > Qobj operator type ... ok; > > > Qobj superoperator type ... ok; > > > Sparse: Symmetric Permute ... ok; > > > Sparse: Nonsymmetric Permute ... ok; > > > Sparse: Symmetric Reverse Permute ... ok; > > > Sparse: Nonsymmetric Reverse Permute ... ok; > > > Sparse: Bandwidth ... ok; > > > Transform 2-level to eigenbasis and back ... ok; > > > Transform 10-level real-values to eigenbasis and back ... ok; > > > Transform 10-level to eigenbasis and back ... ok; > > > Transform 10-level imag to eigenbasis and back ... ok; > > > Check diagonalization via eigenbasis transformation ... ok; > > > brmesolve: harmonic oscillator, finite temperature ... ok; > > > brmesolve: harmonic oscillator, finite temperature, states ... ok; > > > brmesolve: harmonic oscillator, zero temperature ... ok; > > > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > > > brmesolve: qubit ... ok; > > > correlation: comparing me and es for oscillator in coherent initial state ... ok; > > > correlation: comparing me and es for oscillator in steady state ... ok; > > > correlation: compare spectrum from eseries and pseudo-inverse methods ... ok; > > > Diagonalization of random two-",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42855884:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42855884,7,"['ERROR', 'error', 'failure']","['ERROR', 'error', 'errors', 'failure']"
Availability,"Now that #99 is coming along, I went back to this one, and it seems to fix the unit tests for the new superrep. There's still some failures left over from #99, but they don't seem to be caused by the chi matrix support.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/97#issuecomment-39652247:131,failure,failures,131,https://qutip.org,https://github.com/qutip/qutip/pull/97#issuecomment-39652247,1,['failure'],['failures']
Availability,Numeric Error Encountered Using mesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2552:8,Error,Error,8,https://qutip.org,https://github.com/qutip/qutip/issues/2552,1,['Error'],['Error']
Availability,Numpy is maintaining a list of project versions that support numpy 2 -- https://github.com/numpy/numpy/issues/26191. They're waiting of downstream packages to be ready before release. We could add ourselves there if we liked.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2421#issuecomment-2108725817:136,down,downstream,136,https://qutip.org,https://github.com/qutip/qutip/pull/2421#issuecomment-2108725817,1,['down'],['downstream']
Availability,ODE Integration Error in Tutorial Code,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1896:16,Error,Error,16,https://qutip.org,https://github.com/qutip/qutip/issues/1896,1,['Error'],['Error']
Availability,"OK, I won't notify you again about this release, but will get in touch when a new version is available. If you'd rather skip all updates until the next major or minor version, let me know by commenting `@dependabot ignore this major version` or `@dependabot ignore this minor version`. If you change your mind, just re-open this PR and I'll resolve any conflicts on it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2085#issuecomment-1426693519:93,avail,available,93,https://qutip.org,https://github.com/qutip/qutip/pull/2085#issuecomment-1426693519,1,['avail'],['available']
Availability,"OK, good. I see no harm in keeping bicg and lgmres though, if only for backwards compatibility, also in case one encounters a bug in one of them the other could be tried (this just happend to me, bicg failed with an undefined variable error deep in the scipy code, but bicgstab worked). The defaults should be chosen carefully though, of course.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/214#issuecomment-52879383:235,error,error,235,https://qutip.org,https://github.com/qutip/qutip/pull/214#issuecomment-52879383,1,['error'],['error']
Availability,"Oh sorry, I thought you were reporting the sys gcc, not the conda one. Conda-forge and QuTiP are tested heavily against Ubuntu 14.04, so if any; platform works, it should be that one. As I originally suspected, the problem comes from the Cython code.; Specifically for the sparse matrix math. The fact that you can build it; yourself suggests a binary incompatibility. However, again, we test; against 14.04, so I am hard pressed to think about what the issue could be.; gdb might be able to hunt down where the dump occurs. On Mar 25, 2017 18:27, ""Michael Goerz"" <notifications@github.com> wrote:. Since it's the python from the conda package, I'm assuming that's because; Continuum created the linux package on a Redhat system. GCC is identified; like that on both of the workstations. But yeah, my guess would be that; there is some shared library that's compiled in a way that's incompatible; with the rest of the system. Is there any linux utility that would allow to; determine which library is being accessed at the moment of the crash? Some; invocation of ldd?. —; You are receiving this because you commented. Reply to this email directly, view it on GitHub; <https://github.com/qutip/qutip/issues/674#issuecomment-289249308>, or mute; the thread; <https://github.com/notifications/unsubscribe-auth/ABMPqT0F1WSzbd-hOyso9XQM0K5ldiiwks5rpbEBgaJpZM4MpI4Z>; .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-289250540:497,down,down,497,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-289250540,1,['down'],['down']
Availability,"Oh yeah, I totally agree with that perspective - it's in part why I've gone on my little crusade over the past couple of weeks to remove all the warnings and errors from all the build processes. What do you think a sensible strategy is for handling bug fixes that touches code that issues complaints? CodeClimate will typically restate its complaint if you change a line that contributes to it (e.g. here I changed a ""return"" statement in a function that has too many). I guess there's either ""maintainers state whether any particular PR is acceptable with a failing warning""; ""write a [skip ci] commit message"" (or whatever it's called); or ""any PR that touches complained-about code must fix the error"". Without any experience, to my mind it seems like points 1 and 2 are basically the same, but point 1 gives the power to override to maintainers, and point 2 to contributors - seems like version 2 works well in a business where ""everyone"" is trusted to modify the code, but in the distribued opensource world, maybe not? Point 3 seems ideal in principle, but it seems like it would make it very hard to have first-time contributors do anything with older parts of the library - there'd be a huge onus to completely overhaul functionality, even just to fix small stuff. I really don't know what recommended practices are here - I was roughly working under the assumption that we'd have maintainers be allowed to override complexity failures on occasion, but we've never really discussed it as far as I know, and I do recognise the problems with it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826673175:158,error,errors,158,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826673175,3,"['error', 'failure']","['error', 'errors', 'failures']"
Availability,"Oh, I hadn't even thought of that issue. It seems like that could be filed as an upstream bug with someone else, perhaps? Where does it break down when you do have spaces in the username?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-150097897:142,down,down,142,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-150097897,1,['down'],['down']
Availability,"Oh, I just noticed that if I do this in a jupyter notebook, I get a somewhat useful error message from the server: ; ~~~; /Users/goerz/.pyxbld/temp.macosx-10.6-x86_64-3.5/pyrex/rhs72670.cpp:541:10: fatal error: 'complex' file not found; #include <complex>; ~~~",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-436875871:84,error,error,84,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-436875871,2,['error'],['error']
Availability,"Oh, yes, I increase the sampling rate. Indeed the correct result is recovered. Great thanks",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2253#issuecomment-1781240479:68,recover,recovered,68,https://qutip.org,https://github.com/qutip/qutip/issues/2253#issuecomment-1781240479,1,['recover'],['recovered']
Availability,"Ok no worries, lets merge it in there. -P. On Jul 14, 2017 06:36, ""Denis Vasilyev"" <notifications@github.com> wrote:. > The problem is that at the moment this error crashes the entire python; > kernel unexpectedly for a user without any messages. It can be very; > frustrating for a newbie.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/699#issuecomment-315348946>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqYXiiBT-6u_46schRBDuTuOPQ-isks5sN2C3gaJpZM4Nr1OC>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/699#issuecomment-315354193:159,error,error,159,https://qutip.org,https://github.com/qutip/qutip/pull/699#issuecomment-315354193,1,['error'],['error']
Availability,"Ok there are two issues here. 1. Scipy `atol` keyword argument has only been introduced in Scipy 1.1, the latest version. So we should bump it to 1.1 or should do nothing at all and ignore the warnings. 2. The tests are failing for the sparse eigenval function in [`qutip.tests.test_sp_eigs`](https://github.com/qutip/qutip/blob/master/qutip/tests/test_sp_eigs.py#L45). So there is something else which is breaking and this is some weird segmentation fault issue, see below. Note that the test itself was known to give trouble before. But for some reason, with Python 3+ and the latest scipy, everything works fine. . I am very much in favor of dropping support for Python 2.7 as even Numpy seems to be gearing up to drop Python 2.7. [Link](https://docs.scipy.org/doc/numpy/neps/dropping-python2.7-proposal.html). . With regards to the Scipy version, 1.1 seems okay as @nonhermitian mentioned, but it is the latest version though. . ```; @unittest.skipIf(_version2int(scipy.__version__) < _version2int('0.10'),; 'Known to fail on SciPy ' + scipy.__version__); def test_SparseHermValsVecs():; """"""; Sparse eigs Hermitian; """""" ; ```. Failure; ```; Sparse eigs Hermitian ... /home/travis/.travis/job_stages: line 57: 6793 Segmentation fault (core dumped) nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/865#issuecomment-392028033:451,fault,fault,451,https://qutip.org,https://github.com/qutip/qutip/pull/865#issuecomment-392028033,3,"['Failure', 'fault']","['Failure', 'fault']"
Availability,"Ok, I think I may have some more information. I am fairly sure that this is the same bug as #1120, #963 and #944 (which I believe was not actually ever fixed). I'm going to put the information here. My working theory is currently that this is a MKL bug on Mac. For posterity, let me just dump out some information. ## Things you should know if you've not worked with segfaults before. - `Abort trap 6`, `Segmentation fault` and a few other points can all be from the same cause; - Segmentation faults are typically caused by reading or writing to memory that isn't owned by our process. These often occur by reading/writing too much data to an allocated pointer, or trying to read/write a memory location where the location was read from uninitialised memory.; - Segfaults will not always reliably occur. It's _very_ difficult to prove that swapping tools ""fixes"" a segfault; it can often just move around enough allocations to mask the problem, not fix it.; - Python stack traces are likely to be almost entirely unreliable in these cases, because the segfault may often occur while the garbage collector is running, and that will happen at seemingly non-deterministic times.; - Running files in a slightly different interpreter, running within a test runner with differing numbers of files, doing different work before and after will all cause the segfault to change, and may mask it.; - As annoying as they are, segfaults are actually the _good_ case of the bug - the worst is when we have invalid memory writes but _no_ segfault, because then we have memory corruption that's gone undetected. ## Thoughts about #1120. This issue is still present using Andrew's `Malloc.py` file as of the current master branch (commit 624405e7), and is in QuTiP 4.6.0 and most previous versions. I have been able to reproduce the segfaults with Python 3.7, but not Python 3.8, and I can reproduce it with all allowable values of `PYTHONMALLOC`. The most telling is `pymalloc_debug`, where the entire operation comp",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807:417,fault,fault,417,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826124807,8,"['fault', 'mask', 'reliab']","['fault', 'faults', 'mask', 'reliably']"
Availability,"Ok, cool. I'll merge this and we can remove unused bits of `mcsolve` in a different PR. > 139 lines of only white space change in pulsegen.py!. I was just searching for `np.random` in the codebase and fixing files with that and pep8 errors, but I think there might be quite a few more hiding in the control module!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1575#issuecomment-862288347:233,error,errors,233,https://qutip.org,https://github.com/qutip/qutip/pull/1575#issuecomment-862288347,1,['error'],['errors']
Availability,"Ok, here it is:; btw the actual error (the last line) did not appear in the output file, but it does appear in the cmd window, so I typed it in. Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; correlation: legacy me and es for oscillator in coherent initial state ... ok; correlation: comparing me and es for oscillator in coherent initial state ... ok; correlation: comparing me and mc for driven oscillator in ground state ... ERRO",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148708318:32,error,error,32,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148708318,2,['error'],['error']
Availability,"Ok, it looks like the tests are finally going to pass. As the number of commits suggests, this was a pain. Not because the code was wrong, but because:. 1) The default config used by Travis has GCC 4.6 which contains an error that happens to get raised in our case. Thus, had to move to the Trusty build stack. 2) Although it took forever to hunt down, it appears that when .pyx files are included as package data, Py27 may try to rebuild them upon calling **init**. This would throw a missing header error. Since these files are not needed after building, removing them clears up this issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/551#issuecomment-254497807:220,error,error,220,https://qutip.org,https://github.com/qutip/qutip/pull/551#issuecomment-254497807,6,"['down', 'error']","['down', 'error']"
Availability,"Ok, it seems that for some reason the 'mkl_info' key from the NumPy config info is no longer available in some miniconda installs. This took forever to find as I could not reproduce the error at home when using a fresh miniconda install. Now I look in the libs as well for BLAS info.; - Also removed matplotlib from the requirements as it is not a requirement. At least not at present.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/547#issuecomment-252450097:93,avail,available,93,https://qutip.org,https://github.com/qutip/qutip/pull/547#issuecomment-252450097,2,"['avail', 'error']","['available', 'error']"
Availability,"Ok, my bad, I specified the wrong folder. It works for me on windows (except for some tests that are known to be failing), although it takes a bit longer to solve the dependency. It might be very useful for downstream packages since these issues kept popping up.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1309#issuecomment-654983411:207,down,downstream,207,https://qutip.org,https://github.com/qutip/qutip/pull/1309#issuecomment-654983411,1,['down'],['downstream']
Availability,"Ok, the problem was a dumb change I made in the name of ""neatness"", and didn't test locally. For some reason I decided to change my original `cdef int _safe_multiply(int a, int b) except -1` into `except 0`, completely eschewing 50 proud years of C tradition _and_ forgetting that 0 is a normal, valid return value and can't be the error condition.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1436#issuecomment-774359132:332,error,error,332,https://qutip.org,https://github.com/qutip/qutip/pull/1436#issuecomment-774359132,1,['error'],['error']
Availability,"Ok. I wrote a test for it. The error message can be seen below. I will open a PR to resolve this. Thank you very much for raising the issue.; ```; qc = QubitCircuit(3); qc.add_gate(""CNOT"", targets=[1], controls=[0]); test_gate = Gate(""RZ"", targets=[1], arg_value = 1.570796,; arg_label=""P""); qc.add_gate(test_gate); qc.reverse_circuit(); ```. ```; ERROR: Reverse a circuit; ----------------------------------------------------------------------; Traceback (most recent call last):; dev/qutip/qutip/qip/circuit.py"", line 371, in reverse_circuit; temp.append(self.gates[self.N - i - 1]); AttributeError: 'QubitCircuit' object has no attribute 'append'; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/682#issuecomment-292698877:31,error,error,31,https://qutip.org,https://github.com/qutip/qutip/issues/682#issuecomment-292698877,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"On mac, testing #1241, I get:; `qutip/tests/test_cavityqed.py::Testcqed::test_numerical_evo Segmentation fault: 11`; Does this address it somewhay?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1251#issuecomment-624802081:105,fault,fault,105,https://qutip.org,https://github.com/qutip/qutip/pull/1251#issuecomment-624802081,1,['fault'],['fault']
Availability,"On my Mac (Mojave 10.14.5) the latest development version of qutip tests can fail at different points. . First, I run into an abort trap at ptrace. . Then, upon another run, I bumped into this other abort trap error ; ```; tests/test_superop_reps.py::TestSuperopReps::test_ChoiKrausChoi Fatal Python error: Aborted. Current thread 0x000000010b9155c0 (most recent call first):; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/qutip-4.5.0.dev0+d13f5435-py3.7-macosx-10.9-x86_64.egg/qutip/superop_reps.py"", line 547 in to_kraus; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/qutip-4.5.0.dev0+d13f5435-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_superop_reps.py"", line 106 in test_ChoiKrausChoi; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/python.py"", line 166 in pytest_pyfunc_call; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 87 in <lambda>; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/python.py"", line 1435 in runtest; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/runner.py"", line 131 in pytest_runtest_call; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/callers.py"", line 187 in _multicall; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 87 in <lambda>; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/manager.py"", line 93 in _hookexec; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/pluggy/hooks.py"", line 286 in __call__; File ""/miniconda3/envs/qutipdev45/lib/python3.7/site-packages/_pytest/runner.py"", line 207 in <lambda>; File ""/min",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160:210,error,error,210,https://qutip.org,https://github.com/qutip/qutip/issues/1160,2,['error'],['error']
Availability,"On my system the following tests fails:. Sparse: Symmetric Reverse Permute ... ERROR; Sparse: Nonsymmetric Reverse Permute ... ERROR; Sparse: Bandwidth ... ERROR. More detailed info:; # ; ## ERROR: Sparse: Symmetric Reverse Permute. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 73, in test_sparse_symmetric_reverse_permute; B=sparse_reverse_permute(x,perm,perm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Nonsymmetric Reverse Permute. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test_Sparse.py"", line 89, in test_sparse_nonsymmetric_reverse_permute; B=sparse_reverse_permute(x,rperm,cperm); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/sparse.py"", line 566, in sparse_reverse_permute; A.indptr, nrows, ncols, rperm, cperm, flag); File ""sparse_utils.pyx"", line 266, in qutip.cy.sparse_utils._sparse_reverse_permute_complex (qutip/cy/sparse_utils.c:5740); ValueError: Buffer dtype mismatch, expected 'int' but got 'long'; # ; ## ERROR: Sparse: Bandwidth. Traceback (most recent call last):; File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/nose-1.3.0-py3.3.egg/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/home/rob/py-envs/py3-devel/lib/python3.3/site-packages/qutip/tests/test",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/73:79,ERROR,ERROR,79,https://qutip.org,https://github.com/qutip/qutip/issues/73,5,['ERROR'],['ERROR']
Availability,One fail in some rand test. Just outside tolerance; Merging anyway,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/889#issuecomment-403459908:41,toler,tolerance,41,https://qutip.org,https://github.com/qutip/qutip/pull/889#issuecomment-403459908,1,['toler'],['tolerance']
Availability,One needs to run `echo export PATH='/usr/local/bin:$PATH' >> ~/.profile` to put the Homebrew Python in the PATH.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/279#issuecomment-65756811:18,echo,echo,18,https://qutip.org,https://github.com/qutip/qutip/pull/279#issuecomment-65756811,1,['echo'],['echo']
Availability,"Ooo, that's an annoying error in the CI run on 7732470 (though the actual issue is in f42d9f9). Looks like gcc (which I'm using on Mac) does something different to the default clang. Should be a straightforward solution.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1296#issuecomment-647628082:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/1296#issuecomment-647628082,1,['error'],['error']
Availability,"OpenMP handling is broken in the current `master`. It is likely caused by changes made in #1289. Trying to `import qutip` with OpenMP built produces errors; ```python; In [1]: import qutip; Calibrating OPENMP threshold...; ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-1-e01d5608f34f> in <module>; ----> 1 import qutip. ~/code/qutip/qutip/qutip/__init__.py in <module>; 277 print('Calibrating OPENMP threshold...'); 278 thrsh = calculate_openmp_thresh(); --> 279 qutip.configrc.write_rc_key(rc_file, 'openmp_thresh', thrsh); 280; 281 # Load the config file. ~/code/qutip/qutip/qutip/configrc.py in write_rc_key(key, value, section, rc_file); 169 config.read(rc_file); 170 if not config.has_section(section):; --> 171 config.add_section(section); 172 config.set(section, key, str(value)); 173. ~/.anaconda3/envs/qutip-dev/lib/python3.8/configparser.py in add_section(self, section); 1205 RawConfigParser.add_section by validating if the section name is; 1206 a string.""""""; -> 1207 self._validate_value_types(section=section); 1208 super().add_section(section); 1209. ~/.anaconda3/envs/qutip-dev/lib/python3.8/configparser.py in _validate_value_types(self, section, option, value); 1178 """"""; 1179 if not isinstance(section, str):; -> 1180 raise TypeError(""section names must be strings""); 1181 if not isinstance(option, str):; 1182 raise TypeError(""option keys must be strings""). TypeError: section names must be strings; ```. The issue is probably due to `__init__.py` being out-of-date with regards to the change to how the `qutiprc` file is written. The immediate fix should be very simple, however it highlights a larger problem with our testing - this should have been caught by the OpenMP tests. In this case, I believe that the tests don't see the issue because there is a test in `__init__.py` that doesn't trigger the OpenMP calibration if only there is only 1 CPU. Presumably, we only ever get allocate",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1470:149,error,errors,149,https://qutip.org,https://github.com/qutip/qutip/issues/1470,1,['error'],['errors']
Availability,"Originally reported in #944. Tests seem to be failing for MacOS. We get errors like; ```; python(2234,0x7fff95aef380) malloc: *** error for object 0x7fde6f2f0ff0: incorrect checksum for freed object - object was probably modified after being freed.; ```; The build is pretty much always failing, but sometimes passes. I think we only get the errors when tests are run, the functions work fine otherwise. I think someone tried pytest and still got same errors. So kind of a nasty one to investigate, but there might be an easy fix if we can work out what to do. I believe @nathanshammah has done some quite thorough investigation and could probably add to this.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963:72,error,errors,72,https://qutip.org,https://github.com/qutip/qutip/issues/963,4,['error'],"['error', 'errors']"
Availability,"Out of curiosity, are you using the default solver for `cvxpy`? If so, for a failing case, I would wonder if the failure would persist under other SDP solvers. . Another question I have is what the properties are of the random matrices that fail. Perhaps there are some consistent properties amongst those matrices that cause the failure. . I also agree with @nathanshammah about renaming from `dnorm` to `diamond_norm`, as I favor the latter.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-634659794:113,failure,failure,113,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-634659794,2,['failure'],['failure']
Availability,"Out of interest, I had a look around. BSD-3 clause and GPL-v2 are ""compatible"", but only in the sense that the resultant _must_ be GPL-licensed (see [a bit of discussion here](https://opensource.stackexchange.com/questions/7180/can-i-combine-gplv2-and-bsd-3-clause-code-and-keep-the-bsd-permissions)). That probably means that we're technically not following the rules at the moment. That said, my understanding is that licences are just a general statement of rights that are given to everyone. If we get explicit permission from the creator of the library to include it in this library with a rider that this particular section cannot be copied or used in a public project except under GPL-v2 terms, then I think we'd be fine (except that might make it super annoying for downstream projects...). In general I think the primary reason that we can't release GPL'd code under a BSD licence is that the BSD licence doesn't have the restriction that source code must be made available. I _think_, however, that since the circuit drawing isn't an integral part of QuTiP, it would be allowed for us to distribute this portion as a stand-alone extension to QuTiP which is individually GPL'd, even if we couldn't get a relicensed version of the LaTeX package. It's always fine for private use to use GPL'd stuff.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-607176262:774,down,downstream,774,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-607176262,2,"['avail', 'down']","['available', 'downstream']"
Availability,"Passing incompatible dimensions for `rho0`, `H` and `c_ops` to `mesolve` leads to a segfault when the dimensions are large enough and when passing `c_ops`. . **To Reproduce**. Pass something for the initial state that is neither a state vector nor square density matrix. ```python; from qutip import *. D = 13; psi0 = tensor(coherent(D, 100e-9), qeye(D)); result = mesolve(qeye(D**2), psi0,[0, 100e-9], [destroy(D**2)])```; ```; ```; (qutip) ➜ ~ python mwe.py ; [1] 83143 segmentation fault python mwe.py; ```. Changing `D = 13` to `D = 12` correctly raises a `ValueError`:; ```; (qutip) ➜ ~ python mwe.py; Traceback (most recent call last):; File ""mwe.py"", line 5, in <module>; result = mesolve(qeye(D**2), psi0,[0, 100e-9], [destroy(D**2)]); File ""/Users/colmrya/miniconda3/envs/qutip/lib/python3.8/site-packages/qutip/mesolve.py"", line 266, in mesolve; func(0., v, *ode_args) + v; ValueError: operands could not be broadcast together with shapes (20736,) (1728,) ; ```. Trying to get a little more info on the segfault:. ```; (qutip) ➜ ~ lldb --file python mwe.py; (lldb) target create ""/Users/colmrya/miniconda3/envs/qutip/bin/python""; Current executable set to '/Users/colmrya/miniconda3/envs/qutip/bin/python' (x86_64).; (lldb) settings set -- target.run-args ""mwe.py""; (lldb) r; Process 83317 launched: '/Users/colmrya/miniconda3/envs/qutip/bin/python' (x86_64); Process 83317 stopped; * thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x1168d1000); frame #0: 0x0000000113018acd spmatfuncs.cpython-38-darwin.so`__pyx_f_5qutip_2cy_10spmatfuncs_spmvpy(std::__1::complex<double>*, int*, int*, std::__1::complex<double>*, std::__1::complex<double>, std::__1::complex<double>*, unsigned int) + 157; spmatfuncs.cpython-38-darwin.so`__pyx_f_5qutip_2cy_10spmatfuncs_spmvpy:; -> 0x113018acd <+157>: movupd (%rcx,%rax), %xmm4; 0x113018ad2 <+162>: mulpd %xmm4, %xmm3; 0x113018ad6 <+166>: movddup (%rbx), %xmm5 ; xmm5 = mem[0,0] ; 0x113018ada <+170>: shufpd $0x1, ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1456:485,fault,fault,485,https://qutip.org,https://github.com/qutip/qutip/issues/1456,1,['fault'],['fault']
Availability,"Perhaps I was a bit over-zealous (I thought I saw they both had ""raiseNotImplementedError""s) The 2op_2t has the not implemented error. I just ran something for 2op_1t though and it doesn't seem to work:. from qutip import *; from scipy import *. times = linspace(0,10.0,200); a = destroy(10); x = a.dag() + a; H = a.dag() \* a; psi0 = fock(10,1). corr1 = correlation_ss(H, times, [sqrt(0.5) \* a], x, x, rho0=psi0, solver=""me""); corr2 = correlation_ss(H, times, [sqrt(0.5) \* a], x, x, rho0=psi0, solver=""mc""). from pylab import *; plot(times, real(corr1), times, real(corr2)); xlabel(r'Time $t$'); ylabel(r'Correlation $\left<x(t)x(0)\right>$'); show()",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/206#issuecomment-53378743:128,error,error,128,https://qutip.org,https://github.com/qutip/qutip/pull/206#issuecomment-53378743,1,['error'],['error']
Availability,"Perhaps one could fallback to explicitly use `np.exp(1j * w *t)` in this case, or would you prefer defaulting to the numpy version and make the cmath version availably by explicitly choosing it?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/154#issuecomment-45703033:158,avail,availably,158,https://qutip.org,https://github.com/qutip/qutip/pull/154#issuecomment-45703033,1,['avail'],['availably']
Availability,"Photocurrent did not handle having 2 or more collapses in the same time step properly and the state became unnormalized in those case. This PR limit the number of collapse to 1 per time step.; It does it in a rough way and still have an avoidable `O(dt**2)` error, but it does not force to throw away the trajectory.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1010:258,error,error,258,https://qutip.org,https://github.com/qutip/qutip/pull/1010,1,['error'],['error']
Availability,Pinging @tehruhn for help in reviewing this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1113#issuecomment-558986865:0,Ping,Pinging,0,https://qutip.org,https://github.com/qutip/qutip/pull/1113#issuecomment-558986865,1,['Ping'],['Pinging']
Availability,Pinging @tehruhn for help on this.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958#issuecomment-558990244:0,Ping,Pinging,0,https://qutip.org,https://github.com/qutip/qutip/issues/958#issuecomment-558990244,1,['Ping'],['Pinging']
Availability,Pinging lots of people as reviewers just for fun and because it's a momentous occasion.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1857#issuecomment-1098007336:0,Ping,Pinging,0,https://qutip.org,https://github.com/qutip/qutip/pull/1857#issuecomment-1098007336,1,['Ping'],['Pinging']
Availability,Possible fix for cython codegen errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/322:32,error,errors,32,https://qutip.org,https://github.com/qutip/qutip/pull/322,1,['error'],['errors']
Availability,"Previously, passing a Hamiltonian to `mesolve` which used ""array"" time dependence with a tlist not equal to `mesolve`'s would fail if any constant collapse operators were present. This was because `mesolve` was a little over-zealous in promoting `c_ops` to time-dependent `QobjEvo` using the `mesolve` time list. This would cause an unnecessary failure if the Hamiltonian was a `QobjEvo` specified previously with a different tlist. Fix #1560. #### Changelog; - Specialise exception types in ``QobjEvo`` failure paths; - Fix ``tlist`` ``QobjEvo`` with constant collapse operators in ``mesolve``; - 2-element list elements in ``QobjEvo`` specifiers can now be any iterable type, not just ``list``",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1561:345,failure,failure,345,https://qutip.org,https://github.com/qutip/qutip/pull/1561,2,['failure'],['failure']
Availability,"Pursuant to discussions over the build failures observed in #359, this PR migrates Travis CI support to their new container-based configuration. I've observed that the builds with this configuration are more reliable, but they are slower for some reason. In the [instructions](http://docs.travis-ci.com/user/migrating-from-legacy/?utm_source=legacy-notice&utm_medium=banner&utm_campaign=legacy-upgrade#Faster-builds) they provide, Travis say that this configuration should be faster, and to let them know if our build is slower; that might be worth doing.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/360:39,failure,failures,39,https://qutip.org,https://github.com/qutip/qutip/pull/360,2,"['failure', 'reliab']","['failures', 'reliable']"
Availability,"Py2.7 on Windows needs to always use the GCC. The VS version corresponding to Py27 does not support the functions that we need. The Py3.5 errors mean that my #define did not work. I have put up a different version, and will check it tomorrow at work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-281248063:138,error,errors,138,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-281248063,1,['error'],['errors']
Availability,Qobj equality has a tolerance option in qutip's settings:; ```; >>> import qutip as qt; >>> import qutip.settings as settings; >>> settings.atol = 1; >>> qt.destroy(1) == qt.destroy(1)+0.5; True; ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/982#issuecomment-485976020:20,toler,tolerance,20,https://qutip.org,https://github.com/qutip/qutip/issues/982#issuecomment-485976020,1,['toler'],['tolerance']
Availability,Qobj trunc_neg causing Travis errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/425:30,error,errors,30,https://qutip.org,https://github.com/qutip/qutip/issues/425,1,['error'],['errors']
Availability,"QobjEvo used to tidyup once right before 'compiling'. We could tidyup values smaller than `1e-15 * norm` to differentiate small object to numerical error.; In usual operations, `matmul`, `add` etc. if you can make them smarter then and keep a reasonable sparsity without tidyup, it could replace the Qobj's auto_tidyup. And in situation where this is a slowdown, `Dense` should be used.; We could change the default to False for the beta and see how users reacts, but I would not remove the option.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-680020737:148,error,error,148,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-680020737,1,['error'],['error']
Availability,Qtrl fix error when fid_err nan,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/294:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/294,1,['error'],['error']
Availability,"QuTiP 4.5.3 fails to build from source distribution on PyPI, e.g. on Windows:; ```; c1xx: fatal error C1083: Cannot open source file: 'qutip/cy/openmp/src/zspmv_openmp.cpp': No such file or directory; ```; **Checklist**; Thank you for contributing to QuTiP! Please make sure you have finished the following tasks before opening the PR. - [ ] Please read [Contributing to QuTiP Development](https://github.com/qutip/qutip-doc/blob/master/CONTRIBUTING.md); - [ ] Contributions to qutip should follow the [pep8 style](https://www.python.org/dev/peps/pep-0008/).; You can use [pycodestyle](http://pycodestyle.pycqa.org/en/latest/index.html) to check your code automatically; - [ ] Please add tests to cover your changes if applicable.; - [ ] If the behavior of the code has changed or new feature has been added, please also update the [documentation](https://github.com/qutip/qutip-doc) and the [notebook](https://github.com/qutip/qutip-notebooks). Feel free to ask if you are not sure. Delete this checklist after you have completed all the tasks. If you have not finished them all, you can also open a [Draft Pull Request](https://github.blog/2019-02-14-introducing-draft-pull-requests/) to let the others know this on-going work and keep this checklist in the PR description. **Description**; Describe here the proposed change. **Related issues or PRs**; Please mention the related issues or PRs here. If the PR fixes an issue, use the keyword fix/fixes/fixed followed by the issue id, e.g. fix #1184. **Changelog**; Give a short description of the PR in a few words. This will be shown in the QuTiP change log after the PR gets merged.; For example: ; Fixed error checking for null matrix in essolve.; Added option for specifying resolution in Bloch.save function.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1449:96,error,error,96,https://qutip.org,https://github.com/qutip/qutip/pull/1449,2,['error'],['error']
Availability,QuTiP community and list of available projects,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1132:28,avail,available,28,https://qutip.org,https://github.com/qutip/qutip/issues/1132,1,['avail'],['available']
Availability,"QuTiP currently uses QCircuit 2 (version of 2011) to generate LaTeX circuits that are printed to screen or saved to file. A newer version of QCircuit is available, 2.6.0 (2018) https://www.ctan.org/pkg/qcircuit. * `qcircuit` could be updated to the latest version . * Also, the use of this open source package could be highlighted more evidently in the documentation. * Another package has been recently released, https://arxiv.org/abs/1809.03842, Quantikz, which has some features related to noise that could be useful especially with regard to PR #1065, Google Summer of Code project by @BoxiLi on noise modeling in QIP. As this other package is very young, maybe an option to draw the circuit with this package, instead of qcircuit, could be given, also to avoid issues.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1096:153,avail,available,153,https://qutip.org,https://github.com/qutip/qutip/issues/1096,1,['avail'],['available']
Availability,"QuTiP eagerly imports scipy.fft, causing failures on SciPy 1.8.1",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1915:41,failure,failures,41,https://qutip.org,https://github.com/qutip/qutip/issues/1915,1,['failure'],['failures']
Availability,QuTiP executive error due to update of scipy,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1019:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/issues/1019,1,['error'],['error']
Availability,QuTiP fails to change cut-off tolerance,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1829:30,toler,tolerance,30,https://qutip.org,https://github.com/qutip/qutip/issues/1829,1,['toler'],['tolerance']
Availability,"QuTiP is currently incompatible with numpy 1.20. Tests will fail to even collect with an error such as; ```; AttributeError: 'numpy.ndarray' object has no attribute 'dag'; ```; and a lot of functionality will break - anything that requires `Qobj.eigenstates()` for example. This is because `Qobj` defines `__array__`, one of numpy's ""array interface"" functions, intended for classes that can be safely converted _implicitly_ into an `ndarray`. This isn't really the case for `Qobj` - it loses all sorts of information when you do that, which is why we've maintained the separate `Qobj.full()` for explicitly getting the dense matrix representation of a `Qobj`. This is not to mention that numpy ufuncs probably should not be able to implicitly convert `Qobj` - I'd strongly argue that `np.sin(qutip.basis(2, 1))` should be `TypeError`, _not_ `array([[0. +0.j], [0.84147098+0.j]])` (like it is right now). We actually already removed this ""functionality"" in `dev.major`. The most pressing incompatibility is that a few points in QuTiP put a few `Qobj` into a `np.array(dtype=object)`. In numpy 1.20, this no longer produces a 1D array of `Qobj`, but a 3D array of complex. This breaks `Qobj.eigenstates`, and prevents test collection due to it being present in `states.py::qutrit_basis()`, which is called during parametrisation. There are a two possible ways to solve this, and we ought to release a fix with one of them in a patch ASAP:; 1. remove `Qobj.__array__`; 2. remove all use of `Qobj` in `np.array`. I'm personally in favour of ""explicit is better than implicit"" in this case, i.e. removing `Qobj.__array__` and relying on `Qobj.full()`. As another example along this vein, note `scipy.sparse` matrices don't implement this either, and they're arguably closer to being safely coerced to `ndarray` than we are. ### Related issues. #938: feature request for implementing `__array__`. This only asks for `np.array(qobj)` as a convenience, acknowledging the availability of `Qobj.full()`.; #1017",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433:89,error,error,89,https://qutip.org,https://github.com/qutip/qutip/issues/1433,1,['error'],['error']
Availability,"QuTiP is hosted on Anaconda's conda-forge channel and on PyPI. I would like to showcase downloads on the [website](https://github.com/qutip/qutip.github.io) and possibly have a development notebook (or in a personal repository) showing them updated, for QuTiP presentations. . * **conda install qutip**: For conda-forge, it is possible to use the `anaconda-package-data` with `dask` and `intake`, ; https://github.com/ContinuumIO/anaconda-package-data. * **pip install qutip**: For PyPI, it is possible to use, `pypinfo` ; https://github.com/ofek/pypinfo; Note that with`pypinfo` Google's Big Data queries are not free, but new accounts come with some budget credited. Some data: . *`pip install qutip` data starts in 2016. In 2018, 8000 downloads are reported. For 2019, well over 10,000 downloads are predicted. *`conda install qutip` data starts in March 2017. For 2018, 30,000 downloads have been performed. This data is useful to gauge the effective popularity of the two package managers and distribution platforms and can help in setting priorities for relative support and bug fixing. . ## Anaconda downloads; <img width=""441"" alt=""qutip-conda-forge-downloads"" src=""https://user-images.githubusercontent.com/14573436/57989417-45d94380-7ad5-11e9-9694-623fec86865b.png"">. ## PyPI downloads; ![pip-install-qutip-png](https://user-images.githubusercontent.com/14573436/57979590-df174400-7a5a-11e9-807e-c2f46bbb830e.png). With `pypinfo` we can also easily extract other information on users' machines details, such as python usage, which can provide guidance on aspects: . ### Python version; #### 2018; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 3.6 | 47.33% | 4,079 |; | 2.7 | 24.25% | 2,090 |; | 3.7 | 13.97% | 1,204 |; | 3.5 | 12.43% | 1,071 |; | 3.4 | 1.94% | 167 |; | 2.6 | 0.09% | 8 |; | Total | | 8,619 |. #### 2017; | python_version | percent | download_count |; | -------------- | ------: | -------------: |; | 2.7 | 51.55% | 4,333 |; ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997:88,down,downloads,88,https://qutip.org,https://github.com/qutip/qutip/issues/997,4,['down'],['downloads']
Availability,"QuTiP: Quantum Toolbox in Python. ================================. Copyright (c) QuTiP team 2011 and later. Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed,; Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman, Simon Cross, Asier; Galicia, Paul Menczel, and Patrick Hopf. Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco; Nori and Will Zeng. Original developers: R. J. Johansson & P. D. Nation. Previous lead developers: Chris Granade & A. Grimsmo. Currently developed through wide collaboration. See https://github.com/qutip; for details. QuTiP Version: 5.0.4. Numpy Version: 1.24.3. Scipy Version: 1.14.1. Cython Version: None. Matplotlib Version: 3.7.2. Python Version: 3.11.5. Number of CPUs: 16. BLAS Info: INTEL MKL. INTEL MKL Ext: False. Platform Info: Windows (AMD64). Installation path: C:\Users\sabhy\anaconda3\Lib\site-packages\qutip. ================================================================================. Please cite QuTiP in your publication. ================================================================================. For your convenience a bibtex reference can be easily generated using; `qutip.cite()`. On Wed, Sep 25, 2024 at 4:09 AM Paul ***@***.***> wrote:. > Could you please include the output of the command qutip.about()? Because; > your code does not give an error on my setup.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/2536#issuecomment-2372741589>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AJVIYE6VAXW7QIVMRM4WQTDZYILLZAVCNFSM6AAAAABOYAR32CVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMZDGNZSG42DCNJYHE>; > .; > You are receiving this because you authored the thread.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536#issuecomment-2373078683:1350,error,error,1350,https://qutip.org,https://github.com/qutip/qutip/issues/2536#issuecomment-2373078683,1,['error'],['error']
Availability,Quantum Fourier Transform error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/688:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/688,1,['error'],['error']
Availability,Qubit Decay code example on [this page; ](http://qutip.org/docs/4.1/guide/guide-bloch.html) lists these imports. ```; from qutip import *; from scipy import *; ```; I think it misses; `import numpy as np`; for np.sin and np.cos functions. If I don't add that line I get an error.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/797:273,error,error,273,https://qutip.org,https://github.com/qutip/qutip/issues/797,1,['error'],['error']
Availability,"QubitCircuit.resolve_gates() errors on ""FREDKIN"" gate.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330:29,error,errors,29,https://qutip.org,https://github.com/qutip/qutip/issues/1330,1,['error'],['errors']
Availability,"Qutip `essolve` and QOtoolbox's `ode2es` both work by diagonalizing `L`. Once the eigenstates are computed, the time evolution is mostly free.; `mesolve` solve the ODE system one time increment at a time. So for any long enough `tlist`, `essolve` will be faster. Also, unless you compiled Qutip yourself with the openmp option, `mesolve` will run on one cpu, while the eigen solver run in parallel. With 16 cpus and the size of your problem, not running in parallel will slow you down. With some luck, the next major version release will be distributed compiled with openmp. . With the present release, if you compile with openmp (https://qutip.org/docs/latest/installation.html#direct-setuptools-source-builds) you should get better time, but correlation will still not be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1591#issuecomment-870937294:480,down,down,480,https://qutip.org,https://github.com/qutip/qutip/issues/1591#issuecomment-870937294,1,['down'],['down']
Availability,"Qutip works fine with numpy 1.21.1, but fails on import with 1.22 numpy, released Dec 31st. Tested on ubuntu and MacOS. ```; >>> import qutip; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/__init__.py"", line 73, in <module>; (_blas_info() == ""OPENBLAS"" and platform.system() == 'Darwin'); File ""/Users/work/miniconda3/envs/QF9/lib/python3.9/site-packages/qutip/utilities.py"", line 430, in _blas_info; blas_info = config.blas_opt_info; AttributeError: module 'numpy.__config__' has no attribute 'blas_opt_info'; ```. Failure occurs here,. https://github.com/qutip/qutip/blob/52d01da181a21b810c3407812c670f35fdc647e8/qutip/utilities.py#L340. which is kind of mysterious since line 339 explicitly checks that the 'blas_opt_info' attribute exists, and then fails at line 340 because the attribute doesn't exist.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1766:615,Failure,Failure,615,https://qutip.org,https://github.com/qutip/qutip/issues/1766,1,['Failure'],['Failure']
Availability,"RCE=1 -D_LARGEFILE64_SOURCE=1 -DNO_ATLAS_INFO=3 -DHAVE_CBLAS -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/umath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Inumpy/core/include -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/include/numpy -Inumpy/core/src/common -Inumpy/core/src -Inumpy/core -Inumpy/core/src/npymath -Inumpy/core/src/multiarray -Inumpy/core/src/umath -Inumpy/core/src/npysort -I/opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/include/python3.9 -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/common -Ibuild/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath -c numpy/core/src/multiarray/buffer.c -o build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o -MMD -MF build/temp.macosx-11.0-arm64-3.9/numpy/core/src/multiarray/buffer.o.d -faltivec -I/System/Library/Frameworks/vecLib.framework/Headers"" failed with exit status 1; ----------------------------------------; ERROR: Failed building wheel for numpy; Failed to build numpy; ERROR: Could not build wheels for numpy, which is required to install pyproject.toml-based projects; ----------------------------------------; WARNING: Discarding https://files.pythonhosted.org/packages/4c/72/42569d71f1643e581c8ad53073c0773cfadaa8f8cf12ac7599b9de01a9ec/qutip-4.6.2.tar.gz#sha256=9614e8e8270dd28728150c00f74ec750b9a2a23fb3b4fe629006f86dd02011df (from https://pypi.org/simple/qutip/). Command errored out with exit status 1: /opt/homebrew/Caskroom/miniforge/base/envs/qutip_test/bin/python3.9 /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-standalone-pip-g3h2vfu_/__env_pip__.zip/pip install --ignore-installed --no-user --prefix /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-build-env-m9x0lkny/overlay --no-warn-script-location --no-binary :none: --only-binary :none: -i https://pypi.org/simple -- setuptools packaging wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0' Check the logs for full command output.; `",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:70326,ERROR,ERROR,70326,https://qutip.org,https://github.com/qutip/qutip/issues/1740,2,['ERROR'],['ERROR']
Availability,"RESOLVED. First, I changed to a source install inside the anaconda site-packages folder instead of pulling from the site. I was still getting the error, but I found this similar issue at https://github.com/qutip/qutip/pull/311, which suggested I remove the fpmath calls in a couple of the c compiler setup.py files. In particular, the setups in the cy and control subdirectories (see links). For instance, something like . ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native, '-mfpmath=sse']; ```. to. ```; extra_compile_args=['-w', '-ffast-math',; '-O3', '-march=native'], #, '-mfpmath=sse'; ```. For some reason, this wasn't working either, so I decided to try changing; -march=native. to; -march=x86-64. , and that did the trick!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/409#issuecomment-165934550:146,error,error,146,https://qutip.org,https://github.com/qutip/qutip/issues/409#issuecomment-165934550,1,['error'],['error']
Availability,"RS =========================================================================; _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py:3: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py ________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py:4: in <module>; from numpy.testing import assert_, run_module_suite, assert_allclose; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); _________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py ___",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:3033,ERROR,ERROR,3033,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,Random error in multiplication,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/681:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/681,1,['error'],['error']
Availability,Re-enable test errors on ImportWarning,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2083:15,error,errors,15,https://qutip.org,https://github.com/qutip/qutip/pull/2083,1,['error'],['errors']
Availability,"Reducing to `scipy==1.10.1` gave me a different error, `AttributeError: partially initialized module 'qutip' has no attribute 'settings' (most likely due to a circular import)`. using:; ```; qutip 4.7.1; scipy 1.10.1; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182#issuecomment-1607754914:48,error,error,48,https://qutip.org,https://github.com/qutip/qutip/issues/2182#issuecomment-1607754914,1,['error'],['error']
Availability,"Redundant to #1768, we will keep that one for those 2 files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1769#issuecomment-1015730642:0,Redundant,Redundant,0,https://qutip.org,https://github.com/qutip/qutip/pull/1769#issuecomment-1015730642,1,['Redundant'],['Redundant']
Availability,Remove the error showing in #1109,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1110:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/pull/1110,1,['error'],['error']
Availability,Removed converting error on Windows,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1178:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/pull/1178,1,['error'],['error']
Availability,Removed converting error on windows.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1179:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/pull/1179,1,['error'],['error']
Availability,Removed error when converting qcirc.pdf to qcirc.png on windows.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1178:8,error,error,8,https://qutip.org,https://github.com/qutip/qutip/pull/1178,2,['error'],['error']
Availability,"Removing list and forcing dict does not feels making things nicer... Being forced to use dict is mostly a nuisance for me. Presently we support both list ans dict output without much issues, there are very few place that would have issue supporting multiple interfaces. (I can only think of `plot_expectation`.). But how about using `namedtuple`?. It act as a list for loop and numpy, but elements can be called by both the number and name, and I like having result's output somewhat immutable. The biggest issue is that we must provide field names for list inputs... For MC, if e_ops callable return weird things, they will have to choose the option to store all trajectories instead of averaging the result. If they ask for the average or standard derivation of a dict, they will and should get an error, the best we should do is making this error message useful. Custom reduce function could be doable, but probably be a mess, especially if we need one for both `mean` and `std`... So unless someone present a good use case for it, I don't plan going that way.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1907#issuecomment-1141402988:800,error,error,800,https://qutip.org,https://github.com/qutip/qutip/pull/1907#issuecomment-1141402988,2,['error'],['error']
Availability,"Repeat the test 20 times and accept if at least 19 pass?. I remember adapting the tests when numpy's rng changed. 1~2 where failing. I believe that the tests pass over 99% with a random seed, but with the number of tests, it's not enough. I did not realize the test tolerance was smaller than the test one. But the solver tolerance is for the state itself, not expectation values and other scalars obtained from them. The test is not to check numerical error. When there is an mistake in the code, the error is orders of magnitude greater. Not sure if using the sovler's tol is right, but probably better than using a number that just seems to work.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625307705:266,toler,tolerance,266,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625307705,4,"['error', 'toler']","['error', 'tolerance']"
Availability,"Repeating just changes the probability of failure, rather than actually detecting whether it was a rare fail, and `mesolve` tests aren't always the fastest, so repetition here isn't great. For simple unitary qubit operations, I think it should be easy enough to work out how the tolerance translates. It's difficult to say that if there's a numerical error then the error will be much greater - I caught some errors in the `test_gates.py` (I think) that were sneaking through because the tolerances were set too high. It's probably best to keep as tight a tolerance as is reasonable - here I think `2 * qutip.Options.rtol` would always be correct if the numerics are.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625344751:42,failure,failure,42,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625344751,14,"['error', 'failure', 'toler']","['error', 'errors', 'failure', 'tolerance', 'tolerances']"
Availability,"Required due to changes in scipy 1.6.1. Using an explicit dtype will make matrix construction more robust. Fixes qutip Issue #1451. Tested on Debian unstable, with this patch tests/test_sparse.py now passes with scipy 1.6.1. **Description**. scipy 1.6.1 changed the API for constructing sparse matrices with `scipy.sparse.csr_matrix` (affecting the COO format). This caused qutip TestDicke tests in test_piqs.py (test_lindbladian, test_lindbladian_dims, test_liouvillian) to fail. . This patch avoids the problem by setting the dtype explicitly to np,complex128. . **Related issues or PRs**. fixes #1451. **Changelog**; Provide explicit dtype=np.complex128 when constructing sparse matrixes with csr_matrix. Required for working with scipy 1.6.1.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1452:99,robust,robust,99,https://qutip.org,https://github.com/qutip/qutip/pull/1452,1,['robust'],['robust']
Availability,Return info error with steadystate.py and scipy solver,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/issues/1017,1,['error'],['error']
Availability,"Revert ""Fix redundancy and sign error in jmat.""",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/567:32,error,error,32,https://qutip.org,https://github.com/qutip/qutip/pull/567,1,['error'],['error']
Availability,Reverts qutip/qutip#518. This has been causing some issues when being downloaded directly from git. Will rework it.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/522:70,down,downloaded,70,https://qutip.org,https://github.com/qutip/qutip/pull/522,1,['down'],['downloaded']
Availability,"Rework photocurrent code to be more resilient and lower numerical error.; Replace #1010 . euler solver: textbook equation directly used, no more improperly supported multiple collapses.; pred-corr solver: proper support for multiple collapses with no more O(dt) error at each collapses.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1022:36,resilien,resilient,36,https://qutip.org,https://github.com/qutip/qutip/pull/1022,3,"['error', 'resilien']","['error', 'resilient']"
Availability,Rewrote `clebsch` function based on long integer fraction. Thus escaping the rounding error mentioned in #1141. Surprisingly it's a little faster than the float implementation. . Also added tests for the function. Closes #1141,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1142:86,error,error,86,https://qutip.org,https://github.com/qutip/qutip/pull/1142,1,['error'],['error']
Availability,"Right now there's no way to make `Qobj` use a dense representation, but that is something that's been discussed elsewhere. If you just want to use `qutip` functions to build up a system then do the heavy lifting using `numpy`, you can convert a `Qobj` to a dense array with `Qobj.full` (e.g. `qutip.qeye(10000).full()`). Your question certainly did spot a place where the error message could be improved, though!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1204#issuecomment-601795001:372,error,error,372,https://qutip.org,https://github.com/qutip/qutip/issues/1204#issuecomment-601795001,1,['error'],['error']
Availability,"Right now, QuTiP doesn't support passing `c_ops` as an arbitrary function to `mcsolve`. @Ericgig might have more ideas for other things you may try, but in general to us `mcsolve` you need to have your collapse operators as constant matrices multiplied by time-dependent scalars. Depending on your collapse operators, you may be able to move to an interaction picture such that the collapse operators lose their time-dependence, or move to being scalars multiplied by constant matrices. Otherwise, if your system size and available memory permit, you can use `mesolve` to directly solve the Lindblad master equation for the full density matrix rather than single trajectories.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398#issuecomment-739026681:522,avail,available,522,https://qutip.org,https://github.com/qutip/qutip/issues/1398#issuecomment-739026681,1,['avail'],['available']
Availability,"Running `nosetests` in a conda environment in Python 3.6 on a Mac High Sierra 10.13.6 gives; ```. /Users/nathanshammah/github/qutip/qutip/tests/test_metrics.py:300: DeprecationWarning: invalid escape sequence \oegmentation fault: 11; ``` ; and kils the tests. ; If I understand correctly it refers to line 300 in test_metrics, which has a new hellinger metric test by @wrzadkow . Could it be that using ""for _ in range(10):"" is a problem?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496383789:778,fault,fault,778,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496383789,1,['fault'],['fault']
Availability,"Running this code; ```; import qutip.testing as qt; qt.run(); ```; produces an error:; ```; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""qutip/__init__.py"", line 171, in <module>; from qutip.qobj import *; File ""qutip/qobj.py"", line 60, in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; File ""qutip/fastsparse.py"", line 406, in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); File ""qutip/cy/__init__.py"", line 1, in <module>; from qutip.cy.spmatfuncs import *; ImportError: No module named spmatfuncs; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891:79,error,error,79,https://qutip.org,https://github.com/qutip/qutip/issues/891,1,['error'],['error']
Availability,"Running this code; import qutip.testing as qt; qt.run(); produces an error:. Monte-carlo: Collapse terms constant (str format) ... cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_130828459648281117.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_130828459648281117.cp37-win_amd64.exp; Generating code; Finished generating code; cl : Command line warning D9025 : overriding '/W3' with '/w'; cl : Command line warning D9025 : overriding '/Ox' with '/O1'; cqobjevo_compiled_coeff_8398411180025011525.cpp; c:\anaconda\lib\site-packages\numpy\core\include\numpy\npy_1_7_deprecated_api.h(14) : Warning Msg: Using deprecated NumPy API, disable it with #define NPY_NO_DEPRECATED_API NPY_1_7_API_VERSION; Creating library C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.lib and object C:\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\Users\Quantro\.pyxbld\temp.win-amd64-3.7\Release\pyrex\cqobjevo_compiled_coeff_8398411180025011525.cp37-win_amd64.exp; Generating code; Finished generating code; Process SpawnPoolWorker-671:; Process SpawnPoolWorker-669:; Traceback (most recent call last):; Traceback (most recent call last):; File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ""C:\Anaconda\lib\multiprocessing\process.py"", line 297, in _bootstrap; self.run(); File ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084:69,error,error,69,https://qutip.org,https://github.com/qutip/qutip/issues/1084,1,['error'],['error']
Availability,"SNOT and Toffoli can be resolved to [CNOT, RX, RY]. But I think this issue is proposing to resolve other gates to Toffoli and H, which is not available currently. This is indeed something very useful. But this issue is quite old and I'm not sure if any of that code can still be used? @quantshah In particular, the algorithm decomposes arbitrary gate to Toffoli+others.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/614#issuecomment-809444640:142,avail,available,142,https://qutip.org,https://github.com/qutip/qutip/issues/614#issuecomment-809444640,1,['avail'],['available']
Availability,"SX.sdk/usr/include/c++/v1/complex:235:; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:26: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:642:60: error: no template named 'numeric_limits'; bool _FloatBigger = (numeric_limits<_FloatT>::digits > numeric_limits<_IntT>::digits),; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:18: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:50: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cm",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:1157,error,error,1157,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,1,['error'],['error']
Availability,"Same for me :; I rolled back to previous mkl and qutip by running:; conda install mkl=2018.0.3; conda install qutip=4.1.3. Now my programs calling steadystate work again but I also get 1 error related to mkl and steady when running the full test. Denis. De : zhang [mailto:notifications@github.com]; Envoyé : samedi 28 septembre 2019 09:33; À : qutip/qutip <qutip@noreply.github.com>; Cc : VION Denis <denis.vion@cea.fr>; Comment <comment@noreply.github.com>; Objet : Re: [qutip/qutip] Error with conda MKL2019.0 on Windows (#975). This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:. File ""C:\Users\ym24chen\Anaconda3\. x = lu.solve(b, verbose=verbose). File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve. np_x, np_error). OSError: exception: access violation reading 0x0000000000000008. envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve. Env info:. QuTiP Version: 4.3.1. Numpy Version: 1.15.4. Scipy Version: 1.1.0. Cython Version: 0.29.6. Matplotlib Version: 3.0.3. Python Version: 3.7.2. Number of CPUs: 8. BLAS Info: INTEL MKL. OPENMP Installed: False. INTEL MKL Ext: True. Platform Info: Windows (AMD64). Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip. ==============================================================================. How can I rollback it to mkl(2018.0.3)? I just use ""conda install mkl=2018"" but the test still return errors. —; You are receiving this because you commented.; Reply to this email directly, view it on GitHub<https://github.com/qutip/qutip/issues/975?email_source=notifications&email_token=ADBRKX2X6OKO5WY3XBOXMFLQL4CEJA5CNFSM4HFQJOJ2YY3PNVWWK3TUL52",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-536288655:187,error,error,187,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-536288655,3,"['Error', 'error', 'rollback']","['Error', 'error', 'rollback']"
Availability,"Seeing this on `5.0.0.dev` with VSCode Insiders. Calling ; ```python; import qutip as qt; qt.fock(2, 0)._repr_latex_(); ``` ; yields `""Quantum object: dims=[[2], [1]], shape=(2, 1), type='ket'\\begin{equation*}\\left(\\begin{array}{*{11}c}1\\\\0\\end{array}\\right)\\end{equation*}""`. So the missing ""equation"" asterisk is being interpreted as markdown when displayed I think, and matching an asterisk in the column alignment argument `*{11}c`.; ```python; from IPython.display import display, Math; Math(qt.fock(2, 0)._repr_latex_()); ```; results in ```ParseError: KaTeX parse error: {equation*} can be used only in display mode.```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2172#issuecomment-1828518028:579,error,error,579,https://qutip.org,https://github.com/qutip/qutip/issues/2172#issuecomment-1828518028,1,['error'],['error']
Availability,"Seems to be a problem with the Cython pyximport. Running a py3 pyx file with just print(""hello world"") ; Runs and returns the text, but then crashes python.exe. Using Anaconda py3 on win7 x64. > On Oct 16, 2015, at 06:51, Alexander Pitchford notifications@github.com wrote:; > ; > Ok, here it is:; > btw the actual error (the last line) did not appear in the output file, but it does appear in the cmd window, so I typed it in.; > ; > Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic oscillator, finite temperature, states ... ok; > brmesolve: Jaynes-Cummings model, zero temperature ... ok; > correlation: legacy me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and es for oscillator in coherent initial state ... ok; > correlation: comparing me and mc for driven oscillator in ground state ... Transform 2-level to eigenbasis and back ... ok; > Transform 10-level real-values to eigenbasis and back ... ok; > Transform 10-level to eigenbasis and back ... ok; > Transform 10-level imag to eigenbasis and back ... ok; > Consistency between transformations of kets and density matrices ... ok; > Check diagonalization via eigenbasis transformation ... ok; > brmesolve: simple qubit ... ok; > brmesolve: c_ops alone ... ok; > brmesolve: c_ops with a_ops ... ok; > brmesolve: harmonic oscillator, zero temperature ... ok; > brmesolve: harmonic oscillator, finite temperature ... ok; > brmesolve: harmonic osci",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/377#issuecomment-148786885:315,error,error,315,https://qutip.org,https://github.com/qutip/qutip/issues/377#issuecomment-148786885,2,['error'],['error']
Availability,"Seems to be back with matplotlib 3.4.1 in my case - exactly same error, very annoying (from matplotlib's site). QuTiP Version: 4.6.0; Numpy Version: 1.20.2; Scipy Version: 1.6.3; Cython Version: 0.29.23; Matplotlib Version: 3.4.1; Python Version: 3.8.8; Number of CPUs: 32; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /home/XXX/anaconda3/envs/qutip/lib/python3.8/site-packages/qutip. raise Exception(""Could not convert string to importable function, ""; Exception: Could not convert string to importable function, tmpfile:cqobjevo_compiled_coeff_xxxxx.pyx",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-832382977:65,error,error,65,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-832382977,1,['error'],['error']
Availability,Segmentation fault in mesolve if density matrix was constructed with flat aray,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1782:13,fault,fault,13,https://qutip.org,https://github.com/qutip/qutip/issues/1782,1,['fault'],['fault']
Availability,Segmentation fault in sesolve,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/761:13,fault,fault,13,https://qutip.org,https://github.com/qutip/qutip/issues/761,1,['fault'],['fault']
Availability,Segmentation fault while trying to make large tensor product,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1406:13,fault,fault,13,https://qutip.org,https://github.com/qutip/qutip/issues/1406,1,['fault'],['fault']
Availability,"Shahnawaz - I think you had some thoughts about merging in the documentation? It'd be good to know what you think about this strategy as well. I haven't attempted to change any structure of the documentation in this PR; it's building reliably (evidenced by the GH Action), and we can make further overhauls no matter which repo it's based in.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513#issuecomment-830096853:234,reliab,reliably,234,https://qutip.org,https://github.com/qutip/qutip/pull/1513#issuecomment-830096853,1,['reliab'],['reliably']
Availability,"Should fix tests/test_propagator.py::testPropHOStrTd sometime failing, ran it 100 times with the patch without error.; Cause: compiling the same string by multiple process at once resulted in them writing temp files with the same filename, resulting in a race condition and random fails. Not sure why it was not caught before.; @nathanshammah, @ajgpitch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1169:111,error,error,111,https://qutip.org,https://github.com/qutip/qutip/pull/1169,1,['error'],['error']
Availability,"Similar test failures are affecting #429, with `qutip.tests.test_subsys_apply` now raising assertion errors.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-183612808:13,failure,failures,13,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-183612808,2,"['error', 'failure']","['errors', 'failures']"
Availability,"Since merging PR #1082 , I've been getting this strange error whenever I import QuTiP:; ```; (qutip-env) tarun@trolldem0rt:~/riken-work$ python fidel.py ; cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++; /home/tarun/.pyxbld/temp.linux-x86_64-3.7/pyrex/qutip/cy/openmp/parfuncs.cpp:614:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; #include ""src/zspmv_openmp.hpp""; ^~~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```; The codes however run fine. Here's the output from my qutip.about(). ```; >>> qutip.about(). QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+564c987b; Numpy Version: 1.16.4; Scipy Version: 1.2.1; Cython Version: 0.29.13; Matplotlib Version: 3.1.0; Python Version: 3.7.3; Number of CPUs: 2; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Linux (x86_64); Installation path: /home/tarun/riken-work/qutip/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`. ```; @nathanshammah ran this on his Mac, and had the following results. The file runs fine on his Mac with . - (1) conda release 4.4.1; - (2) development version 4.5.0.dev0+f77f7e4a (previous to Eric's PR merge); - (3) updating the current development version 4.5.0.dev0+564c987b (with python setup.py develop). The file throws an error when:; - (4) updating the current development version 4.5.0.d",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1109:56,error,error,56,https://qutip.org,https://github.com/qutip/qutip/issues/1109,2,['error'],['error']
Availability,"Since the PR merge of Ben's (@bcriger) code for Efficient Application of CPTP Maps to Subsystems, there has been a number of failing unit tests. I have fixed some of the tests and ported Ben's code to be python3 compatible, but there are still two remaining errors, which I have traced to the fact that `subsystem_apply(..., reference=True)` does not give the expected results (some normalization problem? perhaps with the eigenvectors?). ```; In [1]: from qutip import *; In [2]: rho_3 = rand_dm(3); In [3]: superop = kraus_to_super(rand_kraus_map(3)); In [4]: analytic_result = vector_to_operator(superop * operator_to_vector(rho_3)); In [5]: analytic_result; Out[5]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.396 (0.069−5.343×10−04j) (−0.003+0.030j) |; |(0.069+5.343×10−04j) 0.407 (−0.029−0.076j) |; |(−0.003−0.030j) (−0.029+0.076j) 0.293 |. In [6]: ref_result = subsystem_apply(rho_3, superop, [True], reference=True); In [7]: ref_result; Out[7]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.354 (0.067−0.036j) (0.058+0.004j) |; |(0.067+0.036j) 0.407 (0.039−0.041j) |; |(0.058−0.004j) (0.039+0.041j) 0.240 ⎟. In [8]: efficient_result = subsystem_apply(rho_3, superop, [True]); In [9]: efficient_result; Out[9]: Quantum object: dims = [[3], [3]], shape = [3, 3], type = oper, isHerm = True; ⎜0.396 (0.069−5.343×10−04j) (−0.003+0.030j) |; | (0.069+5.343×10−04j) 0.407 (−0.029−0.076j) |; |(−0.003−0.030j) (−0.029+0.076j) 0.293 ⎟; ```. Probably @bcriger would be the best person to fix this issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/30:258,error,errors,258,https://qutip.org,https://github.com/qutip/qutip/issues/30,1,['error'],['errors']
Availability,"Since this branch is unfortunately rather old, I didn't want to squash the early commits, but the most recent batch have been squashed down to just one. I think that this feature is now in a state I feel comfortable with reviewing, so I'll add the label. In the future, I would like to generalize the difference of unitaries optimization, but I think that will take a bit of Cython work to implement.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/456#issuecomment-198632131:135,down,down,135,https://qutip.org,https://github.com/qutip/qutip/pull/456#issuecomment-198632131,1,['down'],['down']
Availability,"So I did just that, and the ""overloaded method"" error doesn't happen again, which is good.; But installation still fails on other errors, I believe related to NumPy:. ```; ./setup.py install --user; Compiling qutip/cy/spmatfuncs.pyx because it changed.; Compiling qutip/cy/stochastic.pyx because it changed.; Compiling qutip/cy/sparse_utils.pyx because it changed.; Compiling qutip/cy/graph_utils.pyx because it changed.; Compiling qutip/cy/interpolate.pyx because it changed.; Compiling qutip/cy/spmath.pyx because it changed.; Compiling qutip/cy/heom.pyx because it changed.; Compiling qutip/cy/math.pyx because it changed.; Compiling qutip/cy/spconvert.pyx because it changed.; Compiling qutip/cy/ptrace.pyx because it changed.; Compiling qutip/cy/testing.pyx because it changed.; Compiling qutip/cy/brtools.pyx because it changed.; Compiling qutip/cy/brtools_testing.pyx because it changed.; [ 1/13] Cythonizing qutip/cy/brtools.pyx. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:2:10: cimported module has no attribute 'float64'. Error compiling Cython file:; ------------------------------------------------------------; ... DTYPE = np.float64; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:5:10: cimported module has no attribute 'int32'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.float64_t DTYPE_t. ITYPE = np.int32; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ^; ------------------------------------------------------------. qutip/cy/parameters.pxi:8:10: cimported module has no attribute 'complex128'. Error compiling Cython file:; ------------------------------------------------------------; ...; ctypedef np.int32_t ITYPE_t. CTYPE = np.complex128; ctypedef np.co",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317495769:48,error,error,48,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317495769,3,"['Error', 'error']","['Error', 'error', 'errors']"
Availability,"So I ran the tests with `pytest -m ""not slow""` (on my current #1181 branch) with profiling on, so I've got the following additional slow tests that we could mark to cut down the total time. Here are the tests that took longer than 1 second:; ```; 35.75s call test_stochastic_me.py::test_ssesolve_feedback; 33.73s call test_stochastic_se.py::test_ssesolve_feedback; 25.80s call test_sesolve.py::TestSESolve::test_06_4_compare_state_and_unitary_list_str; 24.41s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[string]; 21.83s call test_propagator.py::testPropHOStrTd; 19.95s call test_mesolve.py::TestMESolveSuperInit::testMETDDecayAsStrList; 17.73s call test_qobjevo.py::test_QobjEvo_expect_rho; 16.52s call test_stochastic_me.py::test_smesolve_homodyne; 15.79s call test_qobjevo.py::test_QobjEvo_call; 12.67s call test_correlation.py::TestTimeDependence::test_varying_coefficient_hamiltonian_2ls[numpy]; 12.37s call test_mesolve.py::TestMESolveStepFuncCoeff::test_array_str_coeff; 11.43s call test_qobjevo.py::test_QobjEvo_mul_mat; 10.89s call test_spmath.py::test_csr_kron; 10.83s call test_qobjevo.py::test_QobjEvo_expect_psi; 9.89s call test_control_pulseoptim.py::TestOptimization::test_object_oriented_approach_and_gradient[QFT-Qobj propagation]; 9.40s call test_mesolve.py::TestMESolverConstDecay::testMEDecayAsStrList; 9.32s call test_sesolve.py::TestSESolve::test_04_2_unitary_with_list_func_H; 8.74s call test_brmesolve_td.py::test_split_operators_maintain_answer[_2_tuple_split]; 8.38s call test_qobjevo.py::test_QobjEvo_call_args; 8.37s call test_mesolve.py::TestMESolveTDDecay::testMETDDecayAsStrList; 8.34s call test_qobjevo.py::test_QobjEvo_pickle; 8.21s call test_qobjevo.py::test_QobjEvo_safepickle; 8.11s call test_qobjevo.py::test_QobjEvo_with_state; 7.79s call test_scattering.py::TestScattering::testScatteringProbability; 7.69s call test_brtools.py::test_diag_liou_mult; 7.48s call test_qobjevo.py::test_QobjEvo_mul_vec; 6.89s call test_cont",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373:169,down,down,169,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604116373,1,['down'],['down']
Availability,"So Travis CI says there's an error in smesolve, which I haven't touched. :/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1100#issuecomment-540438166:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/pull/1100#issuecomment-540438166,1,['error'],['error']
Availability,"So after starting with a fresh install of Anaconda and going through the steps described in https://qutip.org/docs/4.1/installation.html to install through conda-forge and conda, I am still seeing the same behaviour. However I have found a workaround that gives me exactly what I want. During my debugging I ending up adding the `b.make_sphere()` command, this seems to have caused the extra set of axes to keep appearing. I found that by omitting the `make_sphere` command and just replacing `b.show()` with `plt.show()` worked perfectly.; Heres my MWE; ```python; import qutip; import matplotlib.pyplot as plt; b=qutip.Bloch(). b.add_vectors([1,0,0]); b.render(). plt.show(); ```. My `qutip.about()` output is:; ```; QuTiP Version: 4.6.2; Numpy Version: 1.20.3; Scipy Version: 1.6.2; Cython Version: 0.29.24; Matplotlib Version: 3.3.4; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\Chester\.conda\envs\qutip-env\lib\site-packages\qutip; ```. Hopefully this helps someone. @jakelishman I tried interactive mode toggling when this problem first occurred as that's what the behaviour reminded me of too. Gave it another go with my example in this text (replacing the `plt.show()` with `b.show()`) but still same behaviour.; I think it's to do with something similar to the problem/solution in https://stackoverflow.com/questions/12369693/how-to-make-the-plot-not-disappear/12905317 as `self.fig` within the Bloch class is initialised in `render()` (and then called in `show()`) a similar way. But I am not familiar enough with the qutip backend to know if this is an error, especially as this does not seem like a common issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1616#issuecomment-883619754:1691,error,error,1691,https://qutip.org,https://github.com/qutip/qutip/issues/1616#issuecomment-883619754,1,['error'],['error']
Availability,"So the error is because QuTiP uses 32 bit int indices. This is because; that was all the scipy supported at the time. This can be updated to; support 64 ints as well, but is a bit of work to do. On Fri, Apr 6, 2018, 08:53 Xavier <notifications@github.com> wrote:. > Thanks for your quick reply. I am using multiple profilers at the moment,; > but albeit large, the RAM usage may not be the main problem. I am running; > the program on a 2 TB VM as well, and it looks like the maximum of N before; > the program crashes is the same. (N=115 crashes, but there should be enough; > RAM available for this parameter. Now running for N=112.); >; > The specific error I get is the following one:; >; > *Traceback (most recent call last):*; > File ""SPI_V5.py"", line 197, in; > H_BS1=-BS_1/(2.*Dt_BS1)*(a_UPs.dag()*a_LOWs+a_UPs*a_LOWs.dag()+a_UPi.dag(); > *a_LOWi+a_UPi*a_LOWi.dag()); > File ""/usr/local/lib/python3.5/dist-packages/qutip/qobj.py"", line 414, in; > *add*; > out.data = self.data + other.data; > File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/base.py"", line; > 375, in *add*; > return self._add_sparse(other); > File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/compressed.py"",; > line 342, in _add_sparse; >; > return self._binopt(other, '*plus*'); > File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line; > 115, in _binopt; > A = fast_csr_matrix((data, indices, indptr), dtype=data.dtype,; > shape=self.shape); > File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line; > 60, in *init*; >; > *raise TypeError('fast_csr_matrix allows only int32 indices.') TypeError:; > fast_csr_matrix allows only int32 indices.*; >; > To me, it seems that it is due to a bad type of integer passed to a QuTiP; > function. Do you agree?; > I admit that it is hard to solve a problem without having the code; > available, but perhaps you know more of this specific TypeError in QuTiP.; >; > Best regards,; > Xavier; >; > —; > You are receiving this because yo",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-379268268:7,error,error,7,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-379268268,3,"['avail', 'error']","['available', 'error']"
Availability,"So this test has had a failure in `test_diag_liou_mult` again, despite the merging of #1474. I still believe the fix in that issue is correct in principle, but I'll investigate in more detail to determine the tightest allowable tolerances in another issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1480#issuecomment-811934830:23,failure,failure,23,https://qutip.org,https://github.com/qutip/qutip/pull/1480#issuecomment-811934830,2,"['failure', 'toler']","['failure', 'tolerances']"
Availability,"So, in summary, this issue affects only MacOS running Python 3.8. As it is not possible to handle seg faults (because Python crashes), then I think we should, for now, identify which tests we know will seg fault and fail them with a message to say something like ""known fault with Python 3.8 on MacOS"". This way the rest of the tests will complete. We can they work on a proper fix, for which we should raise another issue. I am working on creating a MacOS test platform for myself. In the meantime, if anyone can isolate which tests will cause a seg fault, that would be great.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257:102,fault,faults,102,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-598830257,4,['fault'],"['fault', 'faults']"
Availability,"So, now tests fail for Qobj subtraction, when running `nose.run(defaultTest=""qutip.tests"", argv=['nosetests', '-v'])` but they run just fine when running `nose.run(defaultTest=""qutip.tests.test_qobj"", argv=['nosetests', '-v'])`. Note that before, for the metrics, the error was occuring even if only `nose.run(defaultTest=""qutip.tests.test_metrics"", argv=['nosetests', '-v'])` was run. It might be something ill allocated due to the order of how tests are run. . I also wonder if there is an issue with pycache. Also, in my folder there are both py36.pyc and py37.pyc files. Here there is a discussion that might be related (?); https://github.com/pytest-dev/pytest/issues/200#issuecomment-395816011",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496376661:268,error,error,268,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496376661,1,['error'],['error']
Availability,"So, while I agree that having a flexible storage format is a good way to go, the truth of the matter is that no one has time to implement such a big change. SciPy supports both 32 and 64-bit ints, and checks to see which ones are needed at runtime. e.g. a tensor product of two sparse matrices with int32, may need int64 in the result since their shape is larger. We could also do a similar thing, but it is a lot of work. The reason why we no longer use standard SciPy sparse objects is: 1) They tend to have a sizeable overhead when being created and/or manipulated do to redundant safety checks. 2) Many of the sparse operations are not well optimized. Because SciPy supports many different sparse formats, they had to generalize many of their core operations, making them slower. For example, the sparse kronecker product first converts to COO format, does the tensoring, and then converts back to the original format. Our method is much faster. Supporting more than just the current CSR format is also problematic. As already mentioned, there would be type checks, conditionals, and format conversions everywhere. e.g. what happens when DIA * CSR. As usual, available time is the limiting factor here. Support for both int32 and int64 is not that hard, but would take some time. Just int64 would make smaller matrices larger, but would allow for much greater system dimensions. In this later case, it would be a simple switch `int` -> `int64` and `size_t` -> `uint64` in the Cython code, and the fastsparse module (plus probably other places.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/850#issuecomment-384005667:574,redundant,redundant,574,https://qutip.org,https://github.com/qutip/qutip/issues/850#issuecomment-384005667,4,"['avail', 'redundant']","['available', 'redundant']"
Availability,Solve index error in function wigner cmap,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/704:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/pull/704,1,['error'],['error']
Availability,"Solver object for `sesolve`, `mesolve` and `mcsolve`: `SeSolver`, `MeSolver` and `McSolver`:; - Removed all `rhs_reuse` (except in `brmesolve`). Still work but there is deprecation warning.; - steper for `Sesolver` and `MeSolver` as proposed by Michael.; - Variable output type (`Qobj`, `dense` or `sparse`) input must still be `Qobj`.; - Intermediate object to change the solver used: scipy `zvode`, `solve_ivp`, `dorpri853` are all available for `SeSolver`, `MeSolver`. More could be added in the future, @tehruhn 's GPU solver could probably fit here. I will work on an Adaptative Hilbert Space one eventually. . The objects do not do much more than the original functions if the system is not used more than once. Still to-do:; - Other algorithm for `McSolver`: diagonalized solver (suggested by Fabio?) and one using scipy ivp.; - Inline documentation; - Notebooks; - Cleaning options management. (Unique options object is getting limited for multiple low level solver and both all se,me,mc solve, I would appreciate opinions on how to make this better).; - Add to `__init__.py`; - Add tests. Build on the QobjEvoFunc Pr, with some bug fixed.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1186:434,avail,available,434,https://qutip.org,https://github.com/qutip/qutip/pull/1186,1,['avail'],['available']
Availability,"Some TestDicke tests in `test_piqs.py` (test_lindbladian, test_lindbladian_dims, test_liouvillian) fail with the recent scipy 1.6.1 release. They were previously passing with scipy 1.6.0. **To Reproduce**. ```; $ cp -r qutip/tests/ /tmp/qutip; $ cd /tmp/qutip; $ pytest-3 -v -k ""TestDicke""; ```. The test error message from `TestDicke.test_lindbladian` is; ```; ___________________________________________________________________________________________ TestDicke.test_lindbladian ____________________________________________________________________________________________. self = <tests.test_piqs.TestDicke object at 0x7f55475a0c10>. def test_lindbladian(self):; """"""; PIQS: Test the generation of the Lindbladian matrix.; """"""; N = 1; gCE = 0.5; gCD = 0.5; gCP = 0.5; gE = 0.1; gD = 0.1; gP = 0.1; ; system = Dicke(; N=N,; emission=gE,; pumping=gP,; dephasing=gD,; collective_emission=gCE,; collective_pumping=gCP,; collective_dephasing=gCD,; ); ; > lindbladian = system.lindbladian(). tests/test_piqs.py:450: ; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _; /usr/lib/python3/dist-packages/qutip/piqs.py:509: in lindbladian; return cythonized_dicke.lindbladian(); qutip/cy/piqs.pyx:313: in qutip.cy.piqs.Dicke.lindbladian; ???; qutip/cy/piqs.pyx:431: in qutip.cy.piqs.Dicke.lindbladian; ???; /usr/lib/python3/dist-packages/scipy/sparse/compressed.py:54: in __init__; other = self.__class__(coo_matrix(arg1, shape=shape,; _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _. self = <[AttributeError('dtype not found') raised in repr()] coo_matrix object at 0x7f55475a0ca0>; arg1 = ([(-0.6000000238418579+0j), (0.6000000238418579+0j), (-0.9000000357627869+0j), (-0.90000003576",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1451:305,error,error,305,https://qutip.org,https://github.com/qutip/qutip/issues/1451,1,['error'],['error']
Availability,Some examples I found interesting:. PyPI - Downloads (monthly) ![PyPI - Downloads](https://img.shields.io/pypi/dm/qutip.svg?style=plastic). GitHub code size ![GitHub code size in bytes](https://img.shields.io/github/languages/code-size/qutip/qutip.svg?style=plastic). PyPI - Python Version ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/qutip.svg?style=plastic). Code Climate maintainability ![Code Climate maintainability](https://img.shields.io/codeclimate/maintainability/qutip/qutip.svg?style=plastic). Conda platform support ![Conda](https://img.shields.io/conda/pn/conda-forge/qutip.svg?style=plastic). GitHub contributors ![GitHub contributors](https://img.shields.io/github/contributors-anon/qutip/qutip.svg?style=plastic). PyPI status ![PyPI - Status](https://img.shields.io/pypi/status/qutip.svg?style=plastic). Closed Pull Requests ![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed/qutip/qutip.svg?style=plastic). Already on Readme.md:. Travis status ![Travis (.org)](https://img.shields.io/travis/qutip/qutip.svg). Coveralls github ![Coveralls github](https://img.shields.io/coveralls/github/qutip/qutip.svg?style=plastic),MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/983#issuecomment-484765518:43,Down,Downloads,43,https://qutip.org,https://github.com/qutip/qutip/issues/983#issuecomment-484765518,2,['Down'],['Downloads']
Availability,Some of the norms calculated in the test_ComplexSuperApply were above the tolerance of 1e-12; In 50 repeated tests 7 errors occurred. norms as large as 5e-11 were reported.; After increasing tol to 1e-10 test were repeated 200 times and no errors occurred,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/435:74,toler,tolerance,74,https://qutip.org,https://github.com/qutip/qutip/pull/435,3,"['error', 'toler']","['errors', 'tolerance']"
Availability,"Some of the super operator and QPT tests may have name space issues as reported in the google group: . https://groups.google.com/d/msg/qutip/Z-5o4HHYRv4/yRX7dvjiEgAJ. I can not reproduce the errors, but here is a clean up that will likely fix this possible issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/497:191,error,errors,191,https://qutip.org,https://github.com/qutip/qutip/pull/497,1,['error'],['errors']
Availability,"Some of the test have decorators like this:. ```; @unittest.skipIf(_version2int(Cython.__version__) < _version2int('0.14') or; Cython_found == 0, 'Cython not found or version too low.'); ```. with the Cython_found variable being set at the top of the file like this:. ```; # find Cython if it exists; try:; import Cython; except:; Cython_found = 0; else:; Cython_found = 1; ```. The condition in the decorator will error, as the Cython version is checked even though it failed to import.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/449:415,error,error,415,https://qutip.org,https://github.com/qutip/qutip/issues/449,1,['error'],['error']
Availability,Some of these points have been addressed by #1065. The rest could become also a [project](https://github.com/qutip/qutip/projects; ) and be added also to the wiki as available project.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/441#issuecomment-573581279:166,avail,available,166,https://qutip.org,https://github.com/qutip/qutip/issues/441#issuecomment-573581279,1,['avail'],['available']
Availability,"Some small changes:. 1. remove repetitive assignments of `self.arg_value` and` self.arg_label`; 2. move the description to the definition of class so the document will show it; 3. raise the corresponding error if targets is None while required or not an integer, e.g `Gate(""SWAP"")` or `Gate(""SWAP"", [0.5, 2])`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/995:204,error,error,204,https://qutip.org,https://github.com/qutip/qutip/pull/995,1,['error'],['error']
Availability,Some tests fail from time to time. Most likely they need to have their tolerances increased; This issue replaces #607 as it is more general,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/621:71,toler,tolerances,71,https://qutip.org,https://github.com/qutip/qutip/issues/621,1,['toler'],['tolerances']
Availability,"Some tests in stochastic evolution passes only most of the time.; The problematic tests are comparison of different step length, normally error should be smaller with smaller step length. Since the evolution use random number, this is not true for all seeds. By fixing the test, we should not have the tests randomly failing.; I am adding _improving stochastic tests and having them use pytest_ to my to-do. Ps. tests fail due to the error fixed in #1656",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1657:138,error,error,138,https://qutip.org,https://github.com/qutip/qutip/pull/1657,2,['error'],['error']
Availability,"Somehow, rerunning the Jupyter Notebook or python from bash after reactivating the conda environment gives an error when importing qutip. ; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-1-69863217b56d> in <module>; 1 import numpy as np; ----> 2 from qutip import *. ~/github/qutip/qutip/__init__.py in <module>; 205 from qutip.mesolve import *; 206 from qutip.sesolve import *; --> 207 from qutip.mcsolve import *; 208 from qutip.stochastic import *; 209 from qutip.essolve import *. ~/github/qutip/qutip/mcsolve.py in <module>; 46 from qutip.qobjevo import QobjEvo; 47 from qutip.parallel import parfor, parallel_map, serial_map; ---> 48 from qutip.cy.mcsolve import CyMcOde, CyMcOdeDiag; 49 # cy_mc_run_ode = None; 50 from qutip.sesolve import sesolve. ~/github/qutip/qutip/cy/cqobjevo_factor.pxd in init qutip.cy.mcsolve(). ValueError: qutip.cy.cqobjevo_factor.CoeffFunc size changed, may indicate binary incompatibility. Expected 40 from C header, got 32 from PyObject. ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/969#issuecomment-489535565:110,error,error,110,https://qutip.org,https://github.com/qutip/qutip/pull/969#issuecomment-489535565,1,['error'],['error']
Availability,Someone asked this question on [stackexchange](https://stackoverflow.com/questions/42178706/python-animation-funcanimation-error-object-is-not-iterable). You just have to set `blit=False` in the `FuncAnimation` call and this example will work again.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/836#issuecomment-398766805:123,error,error-object-is-not-iterable,123,https://qutip.org,https://github.com/qutip/qutip/issues/836#issuecomment-398766805,1,['error'],['error-object-is-not-iterable']
Availability,Something is way off about that test failure again... Is it possible Travis isn't cleaning up properly? I can't reproduce the failure (it's also clearly nothing to do with this change) and the error message doesn't match up. If anything it looks like the error message is coming from a hash collision inside QobjEvo _maybe_?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672:37,failure,failure,37,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-605533672,8,"['error', 'failure']","['error', 'failure']"
Availability,"Sorry I didn't get round to commenting on this PR sooner. Since it's now come up in #1579 around the subject of sorting out licensing in general in QuTiP, let me also note some stuff about that here. #1579 proposes to remove all individual-file licence text, because it is in general redundant, and makes it harder for us to centrally manage our licence. There is some concern (mostly mine), that it will be a little difficult for us to manage additional code which does not sign over copyright to the QuTiP admin team; if we accept it, we will have to keep the notice in perpetuity. This will pose a bit of a Theseus' ship problem for us if we ever want to re-organise the file that contains this code; after how many modifications is the code no longer NASA's, but QuTiP's? As long as it's not _ours_, we can't separate it out into different files, or mix it with other code (say additional implementations). I'm definitely not a lawyer, but I'm worried that will cause us code organisation problems in the future, and while the licence would give us permission to improve the code, it's the reorganisation I'm worried about. Secondly, about the code itself: this sort of local operation is something I absolutely would like to include, but I'm not certain that the form it's in right now is the best, general way to do it. I think this is part of much larger discussion about how to handle tensor networks - for example, at the moment, `targets` is fine for states and operators, but it won't work for superoperators. I'm not sure that this is solvable in an ergonomic way with QuTiP's current dimensions specifiers, but it's something we're definitely going to look into after the initial release of 5.0. Also, there are already several disparate functions in QuTiP that provide sort-of similar functionality, and I think we need to have a proper go at tidying them all up into one cohesive interface. This includes `subsystem_apply` (most similar to this), but also `ptrace` and `partial_tranpose",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566:284,redundant,redundant,284,https://qutip.org,https://github.com/qutip/qutip/pull/1405#issuecomment-864073566,2,['redundant'],['redundant']
Availability,"Sorry for the delay on the docstrings and so on, I think all suggestions should be incorporated now. However, thanks to Paul's suggestion of adapting the tutorial 1e. I realized that I made a ""mistake from the very beggining"", namely the function used to fit the correlation function is only good if the imaginary part of the spectral density is 0 at t=0, because I'm using. $C(t)=\sum_{k}a_{k}e^{-b_{k} t}e^{i c_{k} t}$. so . $C_{R}(t)=\sum_{k}a_{k}e^{-b_{k} t}cos(c_{k} t)$. $C_{I}(t)=\sum_{k}a_{k}e^{-b_{k} t}sin(c_{k} t)$. No matter how many terms I take $C_{I}(0)=0$. I should have realized before but this can be bypassed by excluding $t=0$ from the fit, and starting at a small t, you get a decent fit, as long as you don't look at C(0), and I never check for these situations before. The results of doing this are pretty decent, but updating tutorial 1e I realized it required higher calculation times for the HEOMSolver when compared to using another ansatz for the correlation function, since solving is the expensive bit then I changed the code use another function for fitting. $C(t)=\sum_{k}(a_{k}+i d_{k})e^{-b_{k} t}e^{i c_{k} t}$. The downside is that since this function has 4 parameters, it required changing other functions as well, luckily only functions starting with _, hopefully this won't delay the PR too much. I updated the tutorials with this as well, and added a bit so that passing the parameters for the fitting is easier (after this comment), if the change is not desirable we can just go back to the commit before this comment",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2260#issuecomment-1925945764:1151,down,downside,1151,https://qutip.org,https://github.com/qutip/qutip/pull/2260#issuecomment-1925945764,1,['down'],['downside']
Availability,"Sorry for the delayed reply, here is what I've been trying to do:. N = 8; max_excitation = 1 ; num_levels = 2; dims = [num_levels] * N`. ann_operators = enr_destroy(dims, excitations = max_excitation); w_r = 2 * np.pi * 5; w = np.array([w_r] * N). J_r = 2 * np.pi * 0.4; J_t2 = 1.353 * J_r; J_t1 = 1.035 * J_r. J = np.array([J_t2, J_t1] + [J_r] * (N-5) + [J_t1, J_t2]). kappa = 2.92 * J_r; drive_amp = 2 * np.pi * 0.0001. mod_freq = 2 * np.pi * 0.87; mod_amp = mod_freq * 0.8. t = []. detuning_list = 2 * np.pi * np.linspace(-1, 1, 501). for detuning in detuning_list:; drive_w = (w_r - detuning). H_r = 0; for i, a in enumerate(ann_operators):; H_r += (w[i] - drive_w) * a.dag() * a. H_int = 0; for i in range(len(ann_operators)-1):; H_int += J[i] * (ann_operators[i].dag() * ann_operators[i+1] + ann_operators[i+1].dag() * ann_operators[i]). H_d = -1j * drive_amp * (ann_operators[0] - ann_operators[0].dag()). H = H_r + H_int + H_d; c_ops = [np.sqrt(kappa)*ann_operators[0], np.sqrt(kappa)*ann_operators[-1]]; Op_t = mod_amp * ann_operators[6].dag() * ann_operators[6]. rho_ss = steadystate_floquet(H, c_ops, Op_t, w_d = mod_freq). a_out = np.sqrt(kappa) * expect(ann_operators[-1], rho_ss); t.append(np.sqrt(kappa) * a_out/drive_amp). t = np.array(t). dB = 0. if dB:; plt.plot(detuning_list/2/np.pi, 20*np.log10(np.abs(t))); plt.xlabel(""Detuning (GHz)""); plt.ylabel(""|S21|(dB)""); plt.ylim(-10,0.01). else:; plt.plot(detuning_list/2/np.pi, (np.abs(t))); plt.xlabel(""Detuning (GHz)""); plt.ylabel(""|S21|""); plt.grid()`. Qutip 4.7:; ![image](https://github.com/qutip/qutip/assets/61804899/95a303ef-dcef-4fae-bace-5d6f5b7b24a1). Qutip 5.1.0 (installed by downloading a zip from the git as on April 11th):; ![image](https://github.com/qutip/qutip/assets/61804899/04d3e168-2893-435b-9818-91fe917c5d6b)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386#issuecomment-2050649919:1654,down,downloading,1654,https://qutip.org,https://github.com/qutip/qutip/issues/2386#issuecomment-2050649919,1,['down'],['downloading']
Availability,"Sorry, somehow missed adding the description; An error occurred when using the TraceDiff fidelity when the computation of the evolution operator(s) resulted in Inf elements due to the repeated multiplication of large numbers. This resulted in fidelity error of NaN, which confused the L-BFGS-B alg. Forcing the fid_err to Inf instead of NaN seemed to improve L-BFGS-B alg response. ; Had to add new test_out_file to investigate the issue. Took the opportunity to tidy up test out files generally",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/294#issuecomment-67649613:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/pull/294#issuecomment-67649613,2,['error'],['error']
Availability,"Sorry, the blame is on me. Qutip works fine as it is, it was an error on my side. So I'll close the pull request.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1088#issuecomment-532284445:64,error,error,64,https://qutip.org,https://github.com/qutip/qutip/pull/1088#issuecomment-532284445,1,['error'],['error']
Availability,"Sounds good to me. Yeah, even if `packaging` _were_ in `setuptools`, it'd still be an explicit dependency of ours, so you're right to put it in, thanks. Yeah, that coveralls thing just looked like a network timeout on their side. Not the fault of this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-973127486:238,fault,fault,238,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-973127486,1,['fault'],['fault']
Availability,"Sounds good, we should definitely make sure that the tests all work for 3.2; final. In the meantime, I think we should continue to merge in fixes when; its clear that the test failures are unrelated. On Mon, Feb 15, 2016 at 4:52 PM Alexander Pitchford <; notifications@github.com> wrote:. > Yes, I was thinking the same thing. I will open an issue now.; > ; > —; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/pull/428#issuecomment-184074750.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-184074941:176,failure,failures,176,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184074941,2,['failure'],['failures']
Availability,"Sounds good. I restarted once earlier and it failed on a different test, such that I think we should possibly create a new Issue to help track down which tests are randomly failing and why.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/428#issuecomment-184069261:143,down,down,143,https://qutip.org,https://github.com/qutip/qutip/pull/428#issuecomment-184069261,1,['down'],['down']
Availability,Sounds like it is xvfb that is interfering with the test environment. I guess if you install it you'll likely be able to reproduce the error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1639#issuecomment-908496458:135,error,error,135,https://qutip.org,https://github.com/qutip/qutip/issues/1639#issuecomment-908496458,1,['error'],['error']
Availability,"Specifically this test `test_interpolate.test_interpolate_brevolve3()` followed by `test_mcsolve.test_MCCollapseTimesOperators` generates an error or the form; ```; Process SpawnPoolWorker-1:; Traceback (most recent call last):; File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\process.py"", line 249, in _bootstrap; self.run(); File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\process.py"", line 93, in run; self._target(*self._args, **self._kwargs); File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\pool.py"", line 108, in worker; task = get(); File ""C:\Anaconda2\envs\q4_2-py35\lib\multiprocessing\queues.py"", line 345, in get; return ForkingPickler.loads(res); ImportError: No module named 'rhs47600'; ```; The rhs... file in generated by the brevolve3 test. The test appears to finish fine. But somehow it looks like some process is hanging around. Why this is triggered by the MCCollapseTimesOperators test is a bit of a mystery.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/728:141,error,error,141,https://qutip.org,https://github.com/qutip/qutip/issues/728,1,['error'],['error']
Availability,Spectrum sometimes returns error `IndexError: index 0 is out of bounds for axis 0 with size 0`,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1388:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/1388,1,['error'],['error']
Availability,"String format coefficients (`'sin(w * t)' ` in H) which use cython for compilation often fails on windows. Using functions instead work better.; ```; def f(t,args):; return sin(args[""w""]*t); H = [H0, [H1, f]]; ```; Here there is also an error in the error message, we will fix that bug soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1207#issuecomment-600826564:237,error,error,237,https://qutip.org,https://github.com/qutip/qutip/issues/1207#issuecomment-600826564,2,['error'],['error']
Availability,Supplying negative or zero eigenvalues in the list and `pos_def=True` is certainly non-sensical input and should possibly return an error (and I think doesn't at the moment).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1642#issuecomment-905707288:132,error,error,132,https://qutip.org,https://github.com/qutip/qutip/issues/1642#issuecomment-905707288,1,['error'],['error']
Availability,"Switching `auto_tidyup` to being a relative tolerance not an absolute tolerance I think is a really good idea. It raises the cost of it a bit by making it a two-pass operation (and for sure let's use the max norm, not the trace norm!), but I think it's a sensible compromise. We could even have two options - `tidyup_atol` and `tidyup_rtol` to have both, and have `tidyup_atol` default to `0`. Also, fine point about `QobjEvo` - I'd forgotten that it internally called `tidyup`. I'm certainly in favour of swapping the default to `False` for the next major release. I know people may still want the option, so not a good idea to remove it completely, but I think having the default be `False` is safer numerically.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-680027055:44,toler,tolerance,44,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-680027055,2,['toler'],['tolerance']
Availability,Switching to ProcessPoolExecutor seems to have improved parallel_map quite a bit -- now all of the errors seem to be related to compiling coefficients.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1854#issuecomment-1169062453:99,error,errors,99,https://qutip.org,https://github.com/qutip/qutip/pull/1854#issuecomment-1169062453,1,['error'],['errors']
Availability,"T>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:643:50: error: no template named 'numeric_limits'; int _Bits = (numeric_limits<_IntT>::digits - numeric_limits<_FloatT>::digits)>; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:648:17: error: no template named 'numeric_limits'; static_assert(numeric_limits<_FloatT>::radix == 2, ""FloatT has incorrect radix"");; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:25: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:651:58: error: no template named 'numeric_limits'; return _FloatBigger ? numeric_limits<_IntT>::max() : (numeric_limits<_IntT>::max() >> _Bits << _Bits);; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:661:16: error: no template named 'numeric_limits'; using _Lim = numeric_limits<_IntT>;; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:664:12: error: use of undeclared identifier '_Lim'; return _Lim::max();; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:665:21: error: use of undeclared identifier '_Lim'; } else if (__r <= _Lim::lowest()) {; ^; /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX.sdk/usr/include/c++/v1/cmath:666:12: error: use of undeclared identifier '_Lim'; return _Lim::min();; ^; 11 errors generated.; error: command '/usr/bin/clang' failed with exit code 1; [end of output]; ; note",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583:1946,error,error,1946,https://qutip.org,https://github.com/qutip/qutip/issues/1740#issuecomment-1640803583,1,['error'],['error']
Availability,Taking the partial trace of a quantum object over its own basis generates an error now,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1413:77,error,error,77,https://qutip.org,https://github.com/qutip/qutip/issues/1413,1,['error'],['error']
Availability,Test error is an unrelated correlation test failure (it looks like a coefficient generation race condition?).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1857#issuecomment-1098120081:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/pull/1857#issuecomment-1098120081,2,"['error', 'failure']","['error', 'failure']"
Availability,Test for `svd` more robust,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2092:20,robust,robust,20,https://qutip.org,https://github.com/qutip/qutip/pull/2092,1,['robust'],['robust']
Availability,Testing code errors: TypeError,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039:13,error,errors,13,https://qutip.org,https://github.com/qutip/qutip/issues/1039,1,['error'],['errors']
Availability,Tests Error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2472:6,Error,Error,6,https://qutip.org,https://github.com/qutip/qutip/issues/2472,1,['Error'],['Error']
Availability,"Thank for the remark. ; @NS2LPS Replacing the first row of the Liouvillian is a standard way to ensure the algorithm produces a steady state with trace one. Since this condition is, in theory, redundant, adding the weighted first-row or substituting the first line should be equivalent. Often the algorithm is unstable, so one weights the trace 1 condition. Maybe how much of the first row is kept can make the algorithm even more stable?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1275#issuecomment-661868732:193,redundant,redundant,193,https://qutip.org,https://github.com/qutip/qutip/pull/1275#issuecomment-661868732,1,['redundant'],['redundant']
Availability,Thank you @ElieGouzien for pinning down the incompatibility and opening the issue and @Ericgig for carefully addressing it.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/999#issuecomment-495046302:35,down,down,35,https://qutip.org,https://github.com/qutip/qutip/issues/999#issuecomment-495046302,1,['down'],['down']
Availability,"Thank you @christian512, pdf seems to be build without error.; Could you add an upload step so we can access it after the job finished?; The mirror of the ""Upload built HTML files"" step.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1883#issuecomment-1109695548:55,error,error,55,https://qutip.org,https://github.com/qutip/qutip/pull/1883#issuecomment-1109695548,1,['error'],['error']
Availability,"Thank you @jakelishman for the summary on the use of a GPL-2.0 in BSD-3.0. ; Maybe we can ping directly @Travis-S regarding the use of `qcircuit` 2.6 here for input on how to proceed. Let me point out that recently, reference to this project and a link was added in QuTiP's [user guide](https://github.com/qutip/qutip-doc/blob/f3592e9ad5a4083c19a8c7b81db8b2ae282cf4b4/guide/guide-qip.rst#plotting-a-quantum-circuit).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1187#issuecomment-633932995:90,ping,ping,90,https://qutip.org,https://github.com/qutip/qutip/pull/1187#issuecomment-633932995,2,['ping'],['ping']
Availability,Thank you @magzpavz for catching this. Could you add some tests so the error doesn't reappears.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2382#issuecomment-2036003278:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/pull/2382#issuecomment-2036003278,1,['error'],['error']
Availability,Thank you @wuisawesome for the fix and @tilek for spotting the bug. The correct place to open such issue would have been in [`qutip/qutip-doc`](https://github.com/qutip/qutip-doc). ; Now clicking on the link from Chrome downloads the video. In order to view it online something like [this](https://stackoverflow.com/questions/48820321/how-to-force-a-file-mp4-to-transfer-from-github-to-readthedocs) might be needed but [PR 77](https://github.com/qutip/qutip-doc/pull/77) fixes the bug.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/800#issuecomment-497291324:220,down,downloads,220,https://qutip.org,https://github.com/qutip/qutip/issues/800#issuecomment-497291324,1,['down'],['downloads']
Availability,"Thank you Jake for taking a quick look!; I checked once more and the following produces an error (used in an ""empty"" virtual environment):; ```; > pip install setuptools wheel 'cython>=0.29.20' 'numpy>=1.16.6,<1.20' 'scipy>=1.0'; > python setup.py develop. Traceback (most recent call last):; File ""/home/kaladin/Documents/git/qutip/qutip4/setup.py"", line 13, in <module>; import packaging.version; ModuleNotFoundError: No module named 'packaging'; ```; So I think `packaging` it is not included with `setuptools`. . > `requirements.txt` has no special meaning at all so it doesn't really matter,; Lets not add wheels and setuptools to the requirements then. Updating it with the latest dependency versions in setup.cfg dependencies should be fine though.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1715#issuecomment-973123214:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/pull/1715#issuecomment-973123214,1,['error'],['error']
Availability,"Thank you for finding the source to this testing error and proposing a fix. It would be best to have @Ericgig's opinion on this, as he refurbished the stochastic solvers and has been working on migration from int32 to int64, see also project [4](https://github.com/qutip/qutip/wiki//Google-Summer-of-Code-2019#4-abstraction-of-the-quantum-object-class-qutipqobjqobj) in Google Summer of Code.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968#issuecomment-478251874:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/issues/968#issuecomment-478251874,1,['error'],['error']
Availability,"Thank you for reporting, the fix is available in the qutip-4.7.X branch.; We will try to make a release with the fix soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2182#issuecomment-1608172869:36,avail,available,36,https://qutip.org,https://github.com/qutip/qutip/issues/2182#issuecomment-1608172869,1,['avail'],['available']
Availability,Thank you for reporting. I will fix by having ket + scalar raising an error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2208#issuecomment-1658492275:70,error,error,70,https://qutip.org,https://github.com/qutip/qutip/issues/2208#issuecomment-1658492275,1,['error'],['error']
Availability,"Thank you for reporting. `e_ops=callable` should work and allow you to obtain the result you need for now.; `e_ops=[callable]` support should have been added, but it seems it was only properly done for `sesolve`. The error is in the qutip-4.7.X branch at: https://github.com/qutip/qutip/blob/15880398a222ebfd62fd52361cc3852a685b1ac7/qutip/mesolve.py#L458; where is should be set to `True` if at least one of the `e_ops` is a callable but not a `Qobj`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2118#issuecomment-1468144893:217,error,error,217,https://qutip.org,https://github.com/qutip/qutip/issues/2118#issuecomment-1468144893,1,['error'],['error']
Availability,"Thank you for the explanation @phfaist. I don't know the answer unfortunately. There are upcoming developments in quantum tomography with QuTiP, including recently added [notebooks](https://github.com/qutip/qutip-notebooks/pull/79), that warrant looking into this library integration further. . Besides this, regarding cvxpy, the package is now actively maintained also on conda forge https://anaconda.org/cvxgrp/cvxpy/files?page=1, we could add a check in the test failures to the to-do list...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-500419184:466,failure,failures,466,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-500419184,1,['failure'],['failures']
Availability,Thank you for the fix! I tested it locally and I was able to reproduce the error in #1753 and confirm it is fixed with this PR. `qutip.about()` also returns same message locally (not sure where it is tested if it is tested). It seems that CI was not complaining because we do not test for numpy 1.22 yet (although build requirements do install latest numpy version) but I think @hodgestar plans to include numpy 1.22 in the CI soon (see comments in #1747). I hope this PR can be merged soon as tests in PR qutip/qutip-tensornetwork#10 are failing due to `qutip.about()` not working with numpy 1.22.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347:75,error,error,75,https://qutip.org,https://github.com/qutip/qutip/pull/1752#issuecomment-1005999347,1,['error'],['error']
Availability,"Thank you for the tests. ; These tests will already ensure future changes don't break anything so we are quite grateful for them as is. We treat warnings as error during automated tests, so the casting warnings need to be fixed.; You change `self.data` to `self.data.real` in all 3 `visualize_...` functions. It will show same plot without the warnings. Maybe if there are interest, we could add an option as to what to show (real, imag, abs, ...), but not in this PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2548#issuecomment-2420725916:157,error,error,157,https://qutip.org,https://github.com/qutip/qutip/pull/2548#issuecomment-2420725916,1,['error'],['error']
Availability,"Thank you for these fixes! Sorry, it will take me a bit until I can have a proper look (vacation next week). It would help if you could break the PR down a bit. Perhaps into things related to the general multitrajresult, and things related to the stochastic solvers?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2455#issuecomment-2169216457:149,down,down,149,https://qutip.org,https://github.com/qutip/qutip/pull/2455#issuecomment-2169216457,1,['down'],['down']
Availability,"Thank you for your answer @Ericgig !. So, even though we are not using any quotes in our code, this internally maps to the string approach ?; I am trying to understand how to do what I want using callbacks instead, I could use a bit of help.; This is what the original code I shared here reads:. ```; # list of variational parameters ""a[]""; a=[]; for i in range(numite):; a.append(0.01*i). # define energy function by using variational parameters; def energy(a):; psi = initial_H.eigenstates(sparse=False)[1][0]; t = np.linspace(0, 1, timesteps+1); for i in range(numite):; 	H=[[initial_H,1-a[i]*t],[final_H,a[i]*t]]; 	result= qt.mesolve(H, psi, t, [], []); 	psi=result.states[timesteps]. E = qt.expect(final_H,psi); return E; ```. I tried to understand the documentation here: http://qutip.org/docs/latest/modules/qutip/mesolve.html; What I think I need to do is the following:. - I need to just pass callbacks instead of formulas / strings for the coefficients when defining the operators.; - these callbacks must have a signature with the format `(t, *args)` and should return an np.array; - `t` and `args` values are passed as arguments to mesolve. . I am a bit unclear whether or not ""args"" is a list or a dictionary and how I can access it inside my callbacks. I made an attempt but it returns errors: maybe it would be easy for you to fix some lines of this example and tell me if I am on the right track? Or do you have a link to an example, maybe ?; I am just targeting the innermost portion of the code, here:. ```; mesolve_args = ... # a dictionary ? a list? Something that lets me access the variable ""a""; def h_t1(t, *args):; return np.array(1-a[i]*t) # how do I retrieve a[i] by accessing args?; def h_t2(t, *args):; return np.array(a[i]*t) # same. H=[ [initial_H, h_t1], [final_H, h_t2] ]; result= qt.mesolve(H, psi, t, c_ops=[], e_ops=[], args=mesolve_args) # is this correct ?; psi=result.states[timesteps]; ```. Thank you for your help !",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/966#issuecomment-474154477:1300,error,errors,1300,https://qutip.org,https://github.com/qutip/qutip/issues/966#issuecomment-474154477,1,['error'],['errors']
Availability,"Thank you for your prompt reply. @sahmed95. QuTip was installed on Windows; ```; pyhton 3.6.4; ```; We download anaconda and install QuTip from conda-forge with; ```; conda install -c conda-forge qutip; ```; but when run ; ```; import qutip.testing as qt; qt.run(); ```; the following message occurred:; ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.13.3; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.1.2; Python Version: 3.6.4; Number of CPUs: 4; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\ProgramData\Anaconda3\lib\site-packages\qutip. DEBUG:qutip.logging_utils:Creating logger for qutip.control.grape with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimconfig with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dynamics with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.dump with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.tslotcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.fidcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.propcomp with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.optimizer with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulsegen with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.loadparams with policy basic.; DEBUG:qutip.logging_utils:Creating logger for qutip.control.pulseoptim with policy basic.; Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transf",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-387626958:103,down,download,103,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-387626958,2,['down'],['download']
Availability,Thank you for your reply. I used pip to download the qutip and the version of qutip is 4.5.3,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1473#issuecomment-808841158:40,down,download,40,https://qutip.org,https://github.com/qutip/qutip/issues/1473#issuecomment-808841158,1,['down'],['download']
Availability,Thank you. The checks fail with this message `ERROR: Husimi Q: Compare with/without precomputation for rand. ket`.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/934#issuecomment-541546142:46,ERROR,ERROR,46,https://qutip.org,https://github.com/qutip/qutip/pull/934#issuecomment-541546142,1,['ERROR'],['ERROR']
Availability,"Thank you. Turning off auto tidy of course fixes my issue.; I use QuTiP for quantum photonics, where our down-conversion probabilities are of order 1e-7, and sometimes we do two cascaded. This tiny photon component is nonetheless measurable in the lab, and QuTiP is really helpful to predict rates and noise. I guess the problem is unitless in the sense that these small elements are directly the photon probability amplitudes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/521#issuecomment-242072924:105,down,down-conversion,105,https://qutip.org,https://github.com/qutip/qutip/issues/521#issuecomment-242072924,1,['down'],['down-conversion']
Availability,"Thanks @jakelishman. Pinging @vprusso just in case he experienced any of this with [toqito](https://github.com/vprusso/toqito). . By the way, I think that renaming `dnorm` to `diamond_norm` would be more pythonic, with a deprecation warning.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874#issuecomment-634528042:21,Ping,Pinging,21,https://qutip.org,https://github.com/qutip/qutip/issues/874#issuecomment-634528042,1,['Ping'],['Pinging']
Availability,Thanks Chris. This is looking good. I'll try it out in more detail in the comings days. Some immediate comments:; - I don't think we should keep two code-paths for parsing the config file. So either we keep using the old manual parsing or we make configobj the official and only way to parse the config file. In that case I think it would be Ok to simply fail to parse the config file if configobj is not available. I don't think many users use the config file so would be to worried about breaking backwards compatibility with respect to this.; - I think I'd prefer to have the logging module called logging.py rather than _logging.py even though it is supposed to internal to qutip. ; - Please add a `__all__` list in logging.py; - Shouldn't configspec.ini be added to the setup.py file?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248#issuecomment-61393881:405,avail,available,405,https://qutip.org,https://github.com/qutip/qutip/pull/248#issuecomment-61393881,2,['avail'],['available']
Availability,"Thanks Nathan. Once I install your versions of the packages and Python 3.7, these errors are gone.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1018#issuecomment-501582503:82,error,errors,82,https://qutip.org,https://github.com/qutip/qutip/issues/1018#issuecomment-501582503,1,['error'],['errors']
Availability,"Thanks all, I am new to this and I apologise for the extra help required. Here is the plot. Just FYI, the function ""matrix_histogram"" is much more robust than; ""matrix_histogram_complex"", and has cbar_pad as an option. It may be better; in the long run to base the complex version on the ""matrix_histogram""; function.; [image: image.png]. On Wed, 28 Jun 2023 at 09:00, Yuji TAMAKOSHI ***@***.***>; wrote:. > @SJUW <https://github.com/SJUW> Hi. Can you show me a plot? I want to see; > that your change is better.; >; > —; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/2181#issuecomment-1610330125>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/A3KQ4AJKUOCE7MJK42H7APDXNNQYLANCNFSM6AAAAAAZTS45QQ>; > .; > You are receiving this because you were mentioned.Message ID:; > ***@***.***>; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2181#issuecomment-1610360194:147,robust,robust,147,https://qutip.org,https://github.com/qutip/qutip/pull/2181#issuecomment-1610360194,1,['robust'],['robust']
Availability,"Thanks alot for your great help.; Activating conda solved the problem, but still the command ""import numpy as; np"" leads to the following error:. File ""<stdin>"", line 1; import numpy as np; ^; IndentationError: unexpected indent. Other commands like ""import matplotlib.pyplot as plt"" works fine but; something like ""r=np.random.rand(4,4)"" does not work.; My numpy version is 1.19.2. Would you please help me to solve the problem.; Many thanks. On Tue, Dec 1, 2020 at 12:44 AM Boxi Li <notifications@github.com> wrote:. > Every time you open a new terminal, you will need to activate the conda; > environment by conda activate qutip-env. QuTiP is only installed in this; > environment. If you are interested, you could check; > https://docs.conda.io/projects/conda/en/latest/user-guide/tasks/manage-environments.html; > for details.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/1391#issuecomment-736060302>, or; > unsubscribe; > <https://github.com/notifications/unsubscribe-auth/AR53J43QBLGZO3C3WKRB7BDSSQDMJANCNFSM4UGXA6UA>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-736727232:138,error,error,138,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-736727232,2,['error'],['error']
Availability,"Thanks both @jakelishman and @hodgestar for your comments! I agree that I may be depending too much on the classes in `qutip.tests.core.data` to do the testing both in qutip-tensorflow and qutip-tensornetwork. I myself was worried of ""who is going to tests the tests"" if this trend continued with other packages. Reusing the `qutip.tests.core.data`'s code though helps to speed things up in the development process and also allows QuTiP to strictly define what each specialisation is meant to do. . As you mentioned above, I think it would be best to create a `qutip.core.data.testing` module where all the classes for testing are implemented. Then these classes could be tested to ensure that the proper tests are created and these classes ca be used by both QuTiP and downstream packages. I do not have time for this now but I will come to this later, so lets keep this PR open to discuss any ideas!. ----. > the data layer tests should really discover the specialisations rather than us needing to specify them (this is true regardless of this PR). I am not sure about this one. Automatic discovery of tests for specialisations seems to lead to very restricted flexibility in how tests are parametrized. For instance, I needed to change the `rtol` to accommodate the tests for the complex64 data layer in qutip-tensorflow and I am not sure how this could be added automatically. . Also, as @hodgestar mentioned today, you probably want to be explicit on adding tests so that you are confident that those tests are running. Otherwise you need to constantly check the log to ensure the proper tests are running. . Another thing is that by being explicit on what is tested, you could assert if the tested specialisation has not been registered (which actually happened to both qutip-cupy and qutip-tensorflow before: specialisations where being tested but, surprisingly, they were not registered).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1723#issuecomment-981550356:770,down,downstream,770,https://qutip.org,https://github.com/qutip/qutip/pull/1723#issuecomment-981550356,1,['down'],['downstream']
Availability,"Thanks for looking deeply into it. It's good to know the cause. We shouldn't remove support for SciPy 1.4 unless we _absolutely_ have to. Most users won't use matrices that large so won't be affected, and SciPy 1.5 is only a year old which is too recent to be a requirement in an academic setting. We should maintain at least a 2-year dependency window (like NumPy). Any constraints we make on allowable versions affect any packages downstream of us as well, so we want to try and stay as permissive as possible, as long as there's not new features that we absolutely must have. We already have mechanisms for working around an unstable `eigh` implementation because of problems with mac OpenBLAS `zheevr` in some cases, so we can add in this additional test when setting `eigh_unsafe` in our initialisation. The principle is that we decay to using the general-purpose `eig`, and include a specific orthonormalisation step to stabilise the eigensystem afterwards. This code is already in `qutip/sparse.py`, so it shouldn't be too hard to add an extra condition in `qutip/__init__.py`. Could you also test if the issue is also confined to MKL, or if it persists in OpenBLAS with SciPy 1.4 as well? We lose precision when swapping down to `eig` in place of `eigh`, so it's good to confine the switch to the minimum known-bad set.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-818719109:433,down,downstream,433,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-818719109,2,['down'],"['down', 'downstream']"
Availability,"Thanks for reporting this - it's an important bug that's snuck in. Right now, there's a few errors in your code that you can fix to get on your way again, but we need to fix the error on our side. You're using `sigmap()` which is the Pauli excitation operator and is only defined for a Hilbert space with dimension 2. You actually are working with a Hilbert space of dimension `nmax * nmax` (a tensor-product space), so your `e_ops` argument to `sesolve` is wrong - it's difficult to know exactly what you meant here. `destroy(2)` is equivalent to `sigmap()`, so it's possible you intended to have `e_ops` be `[qutip.tensor(a1, a2)]`?. ---. Maintainers: The error is actually a segfault, because QuTiP 4.5 (probably 4.4 too) does not do sufficient error checking on`e_ops` arguments - probably they're missing in the conversion to `CQobjEvo`. When the expectation is called, it has already sidestepped `Qobj`'s dimensions check and there is no matrix size check, so it simply segfaults on OOB access. The fix for the 4.x branch is to have a very loud Python-space error due to mismatched `Qobj` dimensions on entry to the solvers, or insert a size check within `CQobjEvo`. High priority: there's no reason we should be segfaulting here. Partially fixed in the 5.x branch; all matrix multiplications that take place in C-space have a size check and throw a Python exception, however the solvers still sidestep the `Qobj` dimension check so a tensor-product-space mismatch will not be detected.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1374#issuecomment-717495492:92,error,errors,92,https://qutip.org,https://github.com/qutip/qutip/issues/1374#issuecomment-717495492,10,['error'],"['error', 'errors']"
Availability,"Thanks for reporting this. The function should be more robust... We have had this problem several times before, especially with Cython which seem to come up with new version postfix every once in a while... There are a list of special cases in the version2int function. A new special case for version numbers ending with 'a...' should be added.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/207#issuecomment-50946425:55,robust,robust,55,https://qutip.org,https://github.com/qutip/qutip/issues/207#issuecomment-50946425,1,['robust'],['robust']
Availability,"Thanks for reporting this. The new version of packaging removed LegacyVersion. They deprecated *constructing* LegacyVersion for two years, but not doing the right thing and raising an error on LegacyVersion ourselves (which we do). So we'll have to remove our check and release 4.7.1 to fix this.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2036#issuecomment-1342764859:184,error,error,184,https://qutip.org,https://github.com/qutip/qutip/issues/2036#issuecomment-1342764859,1,['error'],['error']
Availability,"Thanks for reporting this. Yes, we certainly want the installation to be smooth on osx... Exactly what problems did you have with macports and xcode? I've got thing running on yosemite and macports, so that's certainly possible, but I have not installed this environment from scratch in a long while, so I don't know what difficulties you might encounter when doing this. . I've not used brew myself, but if you wrote down the steps you had to do to set up things with brew we could provide these as an alternative install path.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/265#issuecomment-64202123:418,down,down,418,https://qutip.org,https://github.com/qutip/qutip/issues/265#issuecomment-64202123,1,['down'],['down']
Availability,"Thanks for reviewing! Sounds good, will make those changes ASAP. . Quick disclaimer, I can't seem to install `cvxpy` on my machine without using anaconda, so I haven't run the qutip tests personally. I assume these run automatically in the pipeline. I have done a lot of testing independently though and the implementation seems to work very reliably (often giving more accurate results than the semidefinite program).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2416#issuecomment-2094916281:342,reliab,reliably,342,https://qutip.org,https://github.com/qutip/qutip/pull/2416#issuecomment-2094916281,1,['reliab'],['reliably']
Availability,"Thanks for spending time tracking down this bug! Qobj.data should always be csr. We make this assumption in many places in qutip, so the bug is in create and not in mcsolve, so I agree with Paul that type casts in mcsolve should not be necessary.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/210#issuecomment-51133272:34,down,down,34,https://qutip.org,https://github.com/qutip/qutip/pull/210#issuecomment-51133272,1,['down'],['down']
Availability,Thanks for spotting this. Obviously an error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/292#issuecomment-67495227:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/292#issuecomment-67495227,1,['error'],['error']
Availability,"Thanks for taking care of this, looks like some nice improvements. I had only originally added the generator-based tests to allow them to fail independently (this is especially useful for randomized tests), but I agree with cutting down the amount of extraneous console output. Is there a better way that I should use in the future that will allow for independent failure without inflating the number of tests reported?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/458#issuecomment-202057828:232,down,down,232,https://qutip.org,https://github.com/qutip/qutip/pull/458#issuecomment-202057828,2,"['down', 'failure']","['down', 'failure']"
Availability,Thanks for the bug report and your interest! Can you give an example which demonstrates the error? Then it would be easier to identify what might be wrong and how it should be fixed.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/239#issuecomment-57045399:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/239#issuecomment-57045399,1,['error'],['error']
Availability,"Thanks for the clue, it was helpfull.; The source of problem is localization of `lscpu` util, which used by `_linux_hardware_info()` function.; The function expects `'Socket(s)'`, `'Core(s) per socket'`, etc in `lscpu` output, but in my system it actually `'Потоков на ядро'`, `'Сокетов'`, etc.; I think, maybe better less system dependent ways to calculate cpu count, for example, we could use `multiprocessing` module and it's `cpu_count` function. Or `len(os.sched_getaffinity(0))`for computers with dynamic cpu management (see [this](https://stackoverflow.com/questions/31346974/portable-way-of-detecting-number-of-usable-cpus-in-python) for details).; Or show exception/error, if we try to use lscpu and `LANG` is not english (or we couldn't found mentioned above `'Socket(s)'`).; Ideas?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045:675,error,error,675,https://qutip.org,https://github.com/qutip/qutip/issues/1004#issuecomment-497325045,2,['error'],['error']
Availability,Thanks for the details and tracking it down. Could you open a Pull Request and add a test for that?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1176#issuecomment-582891331:39,down,down,39,https://qutip.org,https://github.com/qutip/qutip/issues/1176#issuecomment-582891331,1,['down'],['down']
Availability,"Thanks for the quick reply.; Will this error affect other examples and notebooks present on the website where a spectra_cb is needed? Because right now I'm trying to run this example ( https://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/brmesolve-time-dependent-Liouvillian.ipynb ) and the code hungs on the 8th cell, from the Jupyter terminal I get the following message; ```AttributeError: Can't get attribute 'brme_step' on <module '__main__' (built-in)>```. Conda env is the same as the above.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605704959:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605704959,1,['error'],['error']
Availability,"Thanks for your quick reply. I am using multiple profilers at the moment, but albeit large, the RAM usage may not be the main problem. I am running the program on a 2 TB VM as well, and it looks like the maximum of N before the program crashes is the same. (N=115 crashes, but there should be enough RAM available for this parameter. Now running for N=112.). EDIT: N=112 indeed raises a segmentation fault as well. The specific error I get is the following one:. **Traceback (most recent call last):**; File ""SPI_V5.py"", line 197, in <module>; H_BS1=-BS_1/(2.*Dt_BS1)*(a_UPs.dag()*a_LOWs+a_UPs*a_LOWs.dag()+a_UPi.dag()*a_LOWi+a_UPi*a_LOWi.dag()); File ""/usr/local/lib/python3.5/dist-packages/qutip/qobj.py"", line 414, in __add__; out.data = self.data + other.data; File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/base.py"", line 375, in __add__; return self._add_sparse(other); File ""/usr/local/lib/python3.5/dist-packages/scipy/sparse/compressed.py"", line 342, in _add_sparse. return self._binopt(other, '_plus_'); File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line 115, in _binopt; A = fast_csr_matrix((data, indices, indptr), dtype=data.dtype, shape=self.shape); File ""/usr/local/lib/python3.5/dist-packages/qutip/fastsparse.py"", line 60, in __init__; **raise TypeError('fast_csr_matrix allows only int32 indices.'); TypeError: fast_csr_matrix allows only int32 indices.**. To me, it seems that it is due to a bad type of integer passed to a QuTiP function. Do you agree?; I admit that it is hard to solve a problem without having the code available, but perhaps you know more of this specific TypeError in QuTiP. Best regards,; Xavier",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/845#issuecomment-379244228:304,avail,available,304,https://qutip.org,https://github.com/qutip/qutip/issues/845#issuecomment-379244228,4,"['avail', 'error', 'fault']","['available', 'error', 'fault']"
Availability,"Thanks for your replies @BoxiLi @Ericgig , very helpful!. The output seems right after adding the `max_step` option to mesolve().; We changed the width of the cosine shaped pulse, here are some simple observations.; ```; if width = 20, then setting max_step < 27 can produce the correct answer.; if width = 50, then setting max_step < 70 can produce the correct answer.; if width = 100, then setting max_step < 130 can produce the correct answer.; ```. But as we are most caring about how to use the solvers correctly, we still have some doubts:; 1. We only observed two results, one is 'perfectly correct', and another is 'totally wrong' (Like @Ericgig said, the second pulse has been completely skipped over). Would some fault result in the middle happen? Some wrong result very similar to the correct would be even worse. 2. The Ode version of mesolve function is very fast, which is one of the reasons we love it. But we did not find document about other solvers (raw propagator, flatten to Liouville space?) for the master equation. Could you explain why the ODE method is the best over others, in aspect of accuracy and speed?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1265#issuecomment-629729386:723,fault,fault,723,https://qutip.org,https://github.com/qutip/qutip/issues/1265#issuecomment-629729386,2,['fault'],['fault']
Availability,"Thanks for your replies.; I did not have any python on my computer. Firstly, I installed Anaconda, then build a qutip-env. I typed ""conda activate qutip-env"" and then used the following command to install the requirements: ""conda install numpy scipy cython matplotlib pytest pytest-cov jupyter notebook spyder"" .; Then, I added ""conda config --append channels conda-forge"", getting the following warning: ""conda-forge already in channels list, moving to the bottem"".; Then, I run ""conda install qutip"" with no errors.; qutip was installed in ""/root/anaconda3/env"" and i opened a terminal in ""/root"", typed ""python"" and then ""import qutip.testing as qt"" getting the above error.; I really appreciate any help!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1391#issuecomment-735554120:510,error,errors,510,https://qutip.org,https://github.com/qutip/qutip/issues/1391#issuecomment-735554120,2,['error'],"['error', 'errors']"
Availability,"Thanks very much @Ericgig for preparing this!. I feel like it will be quite confusing if gates like `cnot` have different signatures than the ones in qutip-qip. Moreover, many of those gates/transformations are not only relevant to `qip`, but also used in other applications, so maybe we should keep more of them in the main qutip. One of the reasons that we want to include those gates into `qutip.operators` is because a few other downstream packages (e.g. `krylovsolver` that is now merged into qutip, and `qutip-tensornetwork` also uses Hadamard transform) also use them for testing (only) purposes. Having them in the main qutip may save them from depending on qutip-qip. I guess it would be better if we either; - Remove all qip and only define a few `_cnot`, `_swap` as private functions for testing inside the main qutip. And ask whoever else wants to use some gates to install `qutip-qip`. This may result in e.g. `qutip-tensornetwork` depending on `qutip-qip or having to implement a copy of some gates. or; - Include some more commonly used gates like `rx`, `ry` (they are unitaries generated by the Paulis and directly relevant to quantum control) `iswap` etc and keep them identical to the ones in qutip-qip, so that those who just want some gates for testing does not have to download the full qutip-qip. If the problem is the `qutip.qip.expand_operator`. I would argue that we can even include it into the main qutip. It is `tensor` + `permutation` and works not just for qubit systems, but also for other composite Hilbert spaces (provided a `dims`). It is quite handy not just for `qip`, but also for control and probably some other applications. What do you think?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103:433,down,downstream,433,https://qutip.org,https://github.com/qutip/qutip/pull/1890#issuecomment-1120403103,2,['down'],"['download', 'downstream']"
Availability,"Thanks victor!  My main worry as it stands is that, as I mentioned in the previous issue, this fix, on its own, introduces an unwanted additional error for the case with a time-dependent Hamiltonian, as then that time dependence essentially gets shifted twice, once by the H_shifted change, and once again by adding tlist[idx] to tau_list. ; This case of a time-dependent H could do with a test as well I guess. . This can be easily remedied by completely omitting the old method of shifting the time-dependence (e.g., using H and c_ops instead of H_shifted and c_ops_shifted in the call to mesolve(), for example).    But I am a little concerned that the the old method of shifting the time-dependence in H_shifted and C_ops_shifted was there for a reason.  @Ericgig any thoughts?. As an aside, I guess _correlation_mc_2t()  also needs a fix, but maybe better to do that in a separate issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1929#issuecomment-1153462129:146,error,error,146,https://qutip.org,https://github.com/qutip/qutip/pull/1929#issuecomment-1153462129,1,['error'],['error']
Availability,"Thanks! I used git checkout for ecca45c and reinstalled with python setup.py install, and I get the following error for the minimal example:; ```; Traceback (most recent call last):; File ""MinimalErrorExample.py"", line 62, in <module>; result = cpo.optimize_pulse_unitary(drift, ctrls, U_0, U_targ, n_ts, evo_time, fid_err_targ=fid_err_targ, min_grad=min_grad, max_iter=max_iter, max_wall_time=max_wall_time, out_file_ext=f_ext, init_pulse_type=p_type, log_level=log_level,gen_stats=True,dyn_params=dict(oper_dtype=Qobj,sparse_eigen_decomp=True)); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/pulseoptim.py"", line 757, in optimize_pulse_unitary; gen_stats=gen_stats); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/pulseoptim.py"", line 459, in optimize_pulse; result = optim.run_optimization(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/optimizer.py"", line 957, in run_optimization; result = self._create_result(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/optimizer.py"", line 362, in _create_result; result.initial_fid_err = self.dynamics.fid_computer.get_fid_err(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 412, in get_fid_err; return np.abs(1 - self.get_fidelity()); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 422, in get_fidelity; self.fid_norm_func(self.get_fidelity_prenorm()); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/fidcomp.py"", line 438, in get_fidelity_prenorm; dyn.compute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/dynamics.py"", line 1394, in compute_evolution; self.tslot_computer.recompute_evolution(); File ""/Users/msoley/opt/anaconda3/lib/python3.7/site-packages/qutip/control/tslotcomp.py"", line 265, in recompute_evolution; prop_comp._compute_prop_grad(k, j); File ""/Us",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1617#issuecomment-886098212:110,error,error,110,https://qutip.org,https://github.com/qutip/qutip/issues/1617#issuecomment-886098212,1,['error'],['error']
Availability,"Thanks, this helps track it down. It seems not to be an issue with ENR per se, but with the floquet steadystate solver itself (it also appears without using ENR states). . I think I pinned it down to two small bugs in that seem to have crept in to the solver with the data layer updates, I will make a PR for it and ping you for some feedback, if thats ok. We lack a sufficiently robust test for this solver really, if you can suggest something tractable (very small example, potentially analytical solution we can check against), it would be very helpful.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2386#issuecomment-2051189504:28,down,down,28,https://qutip.org,https://github.com/qutip/qutip/issues/2386#issuecomment-2051189504,8,"['down', 'ping', 'robust']","['down', 'ping', 'robust']"
Availability,"Thanks. I come across another problem when I try to run the following codes on a L4 GPU provided by google colab:; ```; import qutip; import qutip_jax. with qutip.CoreOptions(default_dtype=""jax""):; H = qutip.rand_herm(5); c_ops = [qutip.destroy(5)]; rho0 = qutip.basis(5, 4). result = qutip.mesolve(H, rho0, [0, 1], c_ops=c_ops, options={""method"": ""diffrax""}); ```; And an error will occur:; ```; JaxStackTraceBeforeTransformation: NotImplementedError: Schur decomposition is only implemented on the CPU backend. The preceding stack trace is the source of the JAX operation that, once transformed by JAX, triggered the following exception. --------------------. The above exception was the direct cause of the following exception:. NotImplementedError Traceback (most recent call last); [... skipping hidden 28 frame]. [/usr/local/lib/python3.10/site-packages/jax/_src/lax/linalg.py](https://localhost:8080/#) in _schur_lowering(ctx, *args, **kwargs); 2231 ; 2232 def _schur_lowering(ctx, *args, **kwargs):; -> 2233 raise NotImplementedError(; 2234 ""Schur decomposition is only implemented on the CPU backend.""); 2235 . NotImplementedError: Schur decomposition is only implemented on the CPU backend.; ```; So I assume the qutip-jax doesn't work with L4 GPU, right? What GPU or TPU can be used in this case?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2320#issuecomment-2090630204:373,error,error,373,https://qutip.org,https://github.com/qutip/qutip/issues/2320#issuecomment-2090630204,1,['error'],['error']
Availability,"That environment deliberately tests against Scipy 1.4 because we still officially support it. This looks like a true test failure - we need to know what's causing it, and most likely fix it in code, not in the test suite.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817212093:122,failure,failure,122,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817212093,1,['failure'],['failure']
Availability,"That notebook seems to be running fine for me and terminates. Did you interrupt it manually, if not can you post the trace of the error ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1223#issuecomment-605706487:130,error,error,130,https://qutip.org,https://github.com/qutip/qutip/issues/1223#issuecomment-605706487,1,['error'],['error']
Availability,"That particular flag is causing trouble as ARM cpus do not have the SSE extensions. Instead ARM v7+ use the NEON extensions. As such, the build is failing. However, this flag is really only useful for x86 (32-bit) systems where the fpmath is not set to use SSE by default. On x64 it is. In reality, I am not even sure if that flag does any good for our particular code as it is not written to directly use SSE anyway. If you want to remove this flag yourself, it is in the setup.py files in the 'cy' and 'control' directories inside the qutip directory. Given that their are no commercially available ARM systems outside of the Raspberry PI and MS Surface. I am not sure if adding support for ARM extensions is really necessary at the moment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/309#issuecomment-72564925:591,avail,available,591,https://qutip.org,https://github.com/qutip/qutip/issues/309#issuecomment-72564925,1,['avail'],['available']
Availability,"That sound strange. At the end it does remove the bar to show only the total time, so there is the small chance that you just missed the bar. Otherwise it might be an issue with the ipython notebook version. I am running on 2.0 and it works. I can try to track down the issue with some more details (ipython version, python version, etc).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/121#issuecomment-41988948:261,down,down,261,https://qutip.org,https://github.com/qutip/qutip/pull/121#issuecomment-41988948,1,['down'],['down']
Availability,"That test failure actually looks like a serious problem - there's a `NaN` that has crept into an output after a `copy` operation. In this case I think it's important that we really track down the root cause of how that happened, so we can be sure it can't happen again. All the other numbers are the same in that failure, so it looks like possibly memory corruption? There are 17 elements in the output (not a nice round number like 16), so maybe there's an off-by-one somewhere?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1461#issuecomment-809280369:10,failure,failure,10,https://qutip.org,https://github.com/qutip/qutip/pull/1461#issuecomment-809280369,3,"['down', 'failure']","['down', 'failure']"
Availability,"That’s what I thought too in hindsight, so I deleted that part of the; docstring, but nosetests now just gives a segmentation fault and quits. On Tue, 28 May 2019 at 21:33, Wojciech Rzadkowski <notifications@github.com>; wrote:. > If I understand correctly it refers to line 300 in test_metrics, which has; > a new hellinger metric test by @wrzadkow <https://github.com/wrzadkow> .; > Could it be that using ""for _ in range(10):"" is a problem?; >; > The following observations:; >; > - for _ in range(10) is already in line in 128 in test_metrics.py; > https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L128; > - line 300 is the end of docstring of test_hellinger_monotonicity(); > https://github.com/qutip/qutip/blob/master/qutip/tests/test_metrics.py#L300; > - the presence of invalid escape sequence \o in the error message; > - this thread; > https://stackoverflow.com/questions/52335970/how-to-fix-string-deprecationwarning-invalid-escape-sequence-in-python; >; > make me think that the issue may be caused by \otimes that I used in the; > docstring explanations. Don't have a Mac to reproduce, though.; >; > —; > You are receiving this because you were mentioned.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/963?email_source=notifications&email_token=ADPF67GLVSBPTSYBEWHF753PXURAZA5CNFSM4G4MKE72YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGODWL7DBA#issuecomment-496497028>,; > or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ADPF67BCDAJ2I55ZNP3VBB3PXURAZANCNFSM4G4MKE7Q>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-496582231:126,fault,fault,126,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-496582231,2,"['error', 'fault']","['error', 'fault']"
Availability,The CI errors all appear to the result of the coveralls.io service being down. Happy for this to be merged with the failures.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2333#issuecomment-1963065768:7,error,errors,7,https://qutip.org,https://github.com/qutip/qutip/pull/2333#issuecomment-1963065768,3,"['down', 'error', 'failure']","['down', 'errors', 'failures']"
Availability,"The CI errors do not relate to this change, and it is only a one character bug fix, so I will merge unless anyone objects.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/476#issuecomment-221861640:7,error,errors,7,https://qutip.org,https://github.com/qutip/qutip/pull/476#issuecomment-221861640,1,['error'],['errors']
Availability,"The CI failure on ` macOS, Python 3.8: XCode 12` is because the tests took too long. Not sure if this is just a Travis issue or a pre-existing problem or something new.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465#issuecomment-801756430:7,failure,failure,7,https://qutip.org,https://github.com/qutip/qutip/pull/1465#issuecomment-801756430,1,['failure'],['failure']
Availability,The Mac OS ci failed with a strange pardiso error from the HEOM tests.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1992#issuecomment-1247954515:44,error,error,44,https://qutip.org,https://github.com/qutip/qutip/pull/1992#issuecomment-1247954515,1,['error'],['error']
Availability,"The NOMKL build is the only one out of the 6 that fails:; `ERROR: Metrics: checks that special cases for dnorm agree with SDP solutions.`; `cvxpy.error.SolverError: Solver 'CVXOPT' failed. Try another solver.`. Unfortunately I'm not seeing how this is related to my changes. I noticed a huge chunk of warnings for scipy.misc.factorial and will make a second pull request. If that ones fails at the same position, it might be unrelated to this commit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/780#issuecomment-347506698:59,ERROR,ERROR,59,https://qutip.org,https://github.com/qutip/qutip/pull/780#issuecomment-347506698,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"The QIP module is a set of tools for simulating quantum computing, from the high-level of algorithms, down to individual qubit control sequences in a particular physical architecture. So far it has functions for common quantum information processing tasks, including pre-defined quantum gates, along with functions for applying arbitrary 1, 2, and 3 qubit gates to arbitrary target and control qubits in a register of N qubits, circuit representations, a library of quantum algorithms, and models for some common physical QIP architectures. Our goal is to have a set of tools to analyse the influence of unexpected noise sources on a given algorithm realized on a particular architecture, as well as being used as an educational tool for teaching QIP concepts. . QIP module enhancements we plan to implement include:; 1. Simulation of stabilizer circuits and quantum error correction codes.; 2. Simulation of common quantum algorithms - Shor's Factorization, Grover's Search, Quantum Teleportation, and more...( http://math.nist.gov/quantum/zoo/ ); 3. Extend platform to simulate specific quantum computing architectures - Create models to simulate different experimental quantum computing setups like Xmons, including typical environmental noise sources, and limitations on control and readout associated with each example.; 4. Combine the qip and qcontrol modules to optimize circuit and gate decomposition and find ideal fast control pulses to realize particular gates, given physically available limitations of a particular architecture. ; 5. Platform for simulating quantum chemistry on a quantum computer - Create example codes for calculating the ground state of molecules, following specific examples found in DOI: 10.1126/science.1113479 and elsewhere. ; 6. Combine the qip and HEOM/RC solvers to investigate the effect of a non-markovian and nonperturbative environment on error correction and common algorithms.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/441:102,down,down,102,https://qutip.org,https://github.com/qutip/qutip/issues/441,4,"['avail', 'down', 'error']","['available', 'down', 'error']"
Availability,"The RK45 code here has no notion of error associated with it; you have no way of saying whether a particular step size `dt` is actually good. It ideally should converge to something as the step size goes to zero. QuTiP has an adaptive solver that modifies the step size to keep the error below the supplied tolerances. For time-dependent problems one could run into issues with very narrow pulses, but that is not the case here. Writing ones own ODE solver is not really the best thing to do outside of a learning exercise for reasons along these lines.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1733#issuecomment-986722508:36,error,error,36,https://qutip.org,https://github.com/qutip/qutip/issues/1733#issuecomment-986722508,6,"['error', 'toler']","['error', 'tolerances']"
Availability,"The Read The Docs version is compiled on each commit, but the website version requires downloading the update version and manually updating the website repo.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2104#issuecomment-1454074321:87,down,downloading,87,https://qutip.org,https://github.com/qutip/qutip/issues/2104#issuecomment-1454074321,1,['down'],['downloading']
Availability,"The SS solver has been heavily modifed since version 2.2. The bicgstab; method has been replaced in the development version with the LGMRES solver.; The bicgstab method would exit with a fatal error. The new method in; combination with the preconditioner is quite fast. However preconditioning; does fail for some models. Paul; On Jul 9, 2013 5:54 PM, ""Vutshi"" notifications@github.com wrote:. > I would like to draw your attention to this problem once again. I did some; > testing with steady state for my high dimensional model. The direct method; > runs out of memory so I was trying all sorts of iterative methods. My; > conclusion was that the BicgSTAB method is the best for my particular; > problem. However, the iterative methods are very sensitive to everything; > basically this is why there are so many different kinds of them. Moreover,; > the Scipy realisation of these methods is not the most optimal. PyAMG; > realisation of bicgSTAB worked better for me than the one from scipy. So,; > please, keep both of the methods in qutip.; > ; > —; > Reply to this email directly or view it on GitHubhttps://github.com/qutip/qutip/issues/29#issuecomment-20661092; > .",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/29#issuecomment-20662801:193,error,error,193,https://qutip.org,https://github.com/qutip/qutip/issues/29#issuecomment-20662801,1,['error'],['error']
Availability,"The Travis build seems to create a new conda env each time it runs the test. Consequently it downloads and installs the latest [conda] numpy, scipy etc. I tried creating a fresh conda env yesterday and found that the numpy version was higher than my qutip dev env, which I created a few months ago.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-148349639:93,down,downloads,93,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148349639,1,['down'],['downloads']
Availability,"The Travis error occurred because the latest numpy v1.10 did not allow some implicit cast from object to complex. I have fixed this in #380 ; @cgranade I guess we can merge that, then you can rebase from master (or similar process)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/379#issuecomment-148136161:11,error,error,11,https://qutip.org,https://github.com/qutip/qutip/pull/379#issuecomment-148136161,1,['error'],['error']
Availability,"The Windows test failure is the strange ""Tcl is not properly installed one"". Someone else reported this at https://github.com/microsoft/azure-pipelines-tasks/issues/16426 so I mentioned that we see it too. I linked to this build failure there, so please don't re-run it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185394:17,failure,failure,17,https://qutip.org,https://github.com/qutip/qutip/pull/1968#issuecomment-1207185394,2,['failure'],['failure']
Availability,"The `Qcircuit.tex` PR was unfortunately many many years ago, long before I made my first commit to QuTiP (according to `git log` it was by Anubhav Vardhan in 2014), so the damage is already done. It was on my mind because there was a PR about updating the version of the code in it (#1187). Nonetheless, we definitely should remove it. @BoxiLi Boxi: `Qcircuit.tex` is a concern for `qutip-qip` more than the main library from 5.0 onwards - it's currently in `qip/circuit_latex.py`, which we'll have removed, but you've gained. It might be most appropriate to handle this the same way Qiskit does - generate code which does `\usepackage{qcircuit}`, and leave it up to the user to have a properly-provisioned LaTeX environment. I note that `qcircuit` is included in MikTeX and TexLive since at least 2018 (but not sure when exactly it was added). > Yeah putting years I think is the correct thing. Didn't know that at the time. Ah, that's good to know, thanks. I'm trying to learn more about licensing - I'm trying to get it sorted now into the right form, but it's a really complicated field. I think if we change `LICENCE.txt` to. ```text; Copyright (c) 2011--2021 Paul Nation and Robert Johansson.; Copyright (c) 2021--2021 QuTiP Admin Team.; All rights reserved. <BSD 3-clause licence>; ```. and update the final `2021` as appropriate, we'll be in the best standing. That's also why we might want to remove the general licence text from each file - it's already redundant, but it'll be much harder to update if we have it scattered everywhere (automation would run the risk of us messing up and changing any external code's licence as well, I think, which would be wrong). > Look forward to talking to you in July!. Me too!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-864059845:1464,redundant,redundant,1464,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-864059845,2,['redundant'],['redundant']
Availability,"The `Qobj.dag()` method does not preserve `superrep`, which can create surprising errors when attempting to work with adjoint channels (as [Watrous notes](https://cs.uwaterloo.ca/~watrous/TQI/), adjoint channels can be calculated from the Hermitian conjugates of superoperators). In particular, `to_choi(rand_super_bcsz().dag())` raises a `TypeError`:. ``` python; In [1]: from qutip import *. In [2]: to_choi(rand_super_bcsz().dag()); ---------------------------------------------------------------------------; TypeError Traceback (most recent call last); <ipython-input-2-63b1d2d94b5e> in <module>(); ----> 1 to_choi(rand_super_bcsz().dag()). C:\Anaconda\lib\site-packages\qutip-3.2.0.dev_adb91b0-py2.7-win-amd64.egg\qutip\superop_reps.pyc in to_choi(q_oper); 392 return chi_to_choi(q_oper); 393 else:; --> 394 raise TypeError(q_oper.superrep); 395 elif q_oper.type == 'oper':; 396 return super_to_choi(spre(q_oper) * spost(q_oper.dag())). TypeError: None; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/374:82,error,errors,82,https://qutip.org,https://github.com/qutip/qutip/issues/374,1,['error'],['errors']
Availability,"The `Qobj.data` is not a scipy csr matrices, most attributes are not directly available. `Qobj.data_as` convert it usual format scipy, numpy, etc.; ```; csr = qutip.qeye(3, dtype=""CSR"").data_as(""csr_matrix""); csr.nnz; ```; or ; ```; qutip.qeye(3, dtype=""CSR"").data.as_scipy().nnz; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2481#issuecomment-2206199762:78,avail,available,78,https://qutip.org,https://github.com/qutip/qutip/issues/2481#issuecomment-2206199762,1,['avail'],['available']
Availability,"The `from scipy.misc import factorial` generated some error when building win py27 builds in conda-forge/qutip-feedstock#18. So I moved it to the only function in `utilities` that used it. Not strictly good practice. Would perhaps be better to move `_version2int` and `_blas_info` to another module, but quite a bit more work and I was not sure what to call the module: `sysutils`?. The error came from inside scipy due to a call to `multiprocessing.cpu_count()`. As we had one of those inside `__init__()` I wrapped that up as well.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/668:54,error,error,54,https://qutip.org,https://github.com/qutip/qutip/pull/668,2,['error'],['error']
Availability,"The `metrics.dnorm` function uses the cvxpy library to calculate the diamond norm. Twice now it has caused many test failures out of the blue #484 and #872.; It would seem like the developers do not prioritise maintaining a conda package. As this is our recommended platform, then it is a risk having this cvxpy dependence. Perhaps there is a method using scipy that we could employ?. @cgranade perhaps could provide some context?",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/874:117,failure,failures,117,https://qutip.org,https://github.com/qutip/qutip/issues/874,1,['failure'],['failures']
Availability,The above code is working fine with Matplotlib 3.1.3. But when downgrading it to 3.1.0 and running the code is causing error.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027#issuecomment-612224658:63,down,downgrading,63,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-612224658,2,"['down', 'error']","['downgrading', 'error']"
Availability,"The anaconda people have said they have / will fix the scipy openblas package in the next few days, so I think we can wait.; However, I see there were hundreds of new failures in all the py3 latest tests. I will set them of again, see what happens",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/870#issuecomment-394079084:167,failure,failures,167,https://qutip.org,https://github.com/qutip/qutip/pull/870#issuecomment-394079084,1,['failure'],['failures']
Availability,"The canopy needs to be updated as it points toward an old os 10.6 whose SDK is not available on your newer osx. . Paul. > On Oct 14, 2015, at 13:49, rjmagyar notifications@github.com wrote:; > ; > I just built and installed Qutip on the command line using Enthought python. No errors...; > ; > Then when I run I get:; > ; > Enthought Canopy Python 2.7.9 | 64-bit | (default, May 20 2015, 20:01:56) ; > [GCC 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2335.6)] on darwin; > Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; > ; > from qutip import *; > Compiling with an SDK that doesn't seem to exist: /Developer/SDKs/MacOSX10.6.sdk; > Please check your Xcode installation; > In file included from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/syslimits.h:7:0,; > from /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:34,; > from /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:19,; > from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:; > /usr/local/lib/gcc/x86_64-apple-darwin14.4.0/5.1.0/include-fixed/limits.h:168:61: error: no include path in which to search for limits.h; > In file included from /Users/rjmagya/.pyxbld/temp.macosx-10.6-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:16:0:; > /Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/include/python2.7/Python.h:33:19: fatal error: stdio.h: No such file or directory; > compilation terminated.; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 213, in ; > from qutip.qobj import *; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in ; > from qutip.ptrace import ptrace; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packa",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-148179436:83,avail,available,83,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436,2,"['avail', 'error']","['available', 'errors']"
Availability,The changes look good but there are still some `test_satisfy_eigenvalue_equation` failures -- perhaps the accuracy just needs to be loosened slightly?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1820#issuecomment-1137085764:82,failure,failures,82,https://qutip.org,https://github.com/qutip/qutip/pull/1820#issuecomment-1137085764,1,['failure'],['failures']
Availability,"The checks are too restrictive. For the collapse and expectation operator lists, previous versions allowed the input of single operators. The documentation also explicitly states this is OK. Ex. ; mesolve(qzero(2), fock(2, 1), [0, 2], destroy(2), sigmaz()). But now this yields the error:. Traceback (most recent call last):; File ""/home/kevinf/PycharmProjects/QutipProjects/test/test.py"", line 3, in <module>; mesolve(qzero(2), fock(2, 1), [0, 2], destroy(2), sigmaz()); File ""/usr/local/lib/python3.4/dist-packages/qutip/mesolve.py"", line 208, in mesolve; _solver_safety_check(H, rho0, c_ops, e_ops, args); File ""/usr/local/lib/python3.4/dist-packages/qutip/solver.py"", line 813, in _solver_safety_check; for ii in range(len(c_ops)):; TypeError: object of type 'Qobj' has no len()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/630:282,error,error,282,https://qutip.org,https://github.com/qutip/qutip/issues/630,1,['error'],['error']
Availability,"The code below is a (hopefully) minimum working example that demonstrates the strange behavior of the stochastic solver. I'm simulating a single trajectory using `general_stochastic` and plotting the returned expectation values along with expectation values calculated from the states. There is also a theoretical solution for the variances of X and Y, which are deterministic despite the stochastic evolution. The manually calculated expectations match the theory perfectly which means the states are correct. The returned ones accumulate errors and obviously shouldn't be used. I don't see a reason why they should be different -- I would assume the expectations are calculated internally from the states. Note that the deprecation warning from above still appears. ### Output plots. ![image](https://user-images.githubusercontent.com/13610206/100783362-f6840b00-340d-11eb-9274-09148e11cf44.png). ### Code; ```; # -*- coding: utf-8 -*-. import matplotlib.pyplot as plt; import numpy as np. from numpy import sqrt, exp. import qutip. from qutip import destroy, basis, ket2dm, expect, liouvillian, \; general_stochastic, parallel_map, \; cy, spre, spost, vector_to_operator, \; operator_to_vector. #%%%%%%%% . times = np.linspace(0, 2, 1024). N = 16. a = destroy(N) . x = (a + a.dag()) / sqrt(2); y = 1j*(a-a.dag()) / sqrt(2). γ = 1 # damping rate; Ω = 0; χ = 1 # measurement strength. H = Ω * a.dag()*a. c_ops = [sqrt(γ)*a, sqrt(χ)*x]. e_ops = [x, x*x, y, y*y]. ρ0 = ket2dm(basis(N)). opts = qutip.solver.Options(store_states=True). ntraj = 1; nsubsteps = 1. # defintions for the SME; #; # in literature: dρ(t) = −i[H,ρ(t)]dt + γD[a]ρ(t)dt + dW(t)√γ H[a]ρ(t); # in QuTiP: dρ(t) = −i[H,ρ(t)]dt + D1[A]ρ(t)dt + D2[A]ρ(t)dW; #; # H[A]ρ = 0.5 * (Aρ + ρA† − Tr[Aρ+ρA†]ρ). L = liouvillian(H, c_ops=c_ops).data; def D1_ρ(t, ρ_vec):; return cy.spmv(L, ρ_vec). # D2[A]ρ(t) = √γ H[a]ρ(t). n_sum = spre(sqrt(χ)*x) + spost(sqrt(χ)*x.dag()); n_sum_data = n_sum.data. def D2_ρ(t, ρ_vec):; e1 = cy.cy_expect_rho_vec",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1379#issuecomment-736750957:540,error,errors,540,https://qutip.org,https://github.com/qutip/qutip/issues/1379#issuecomment-736750957,2,['error'],['errors']
Availability,The conda-forge download badge has been added to the Readme.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/997#issuecomment-532282813:16,down,download,16,https://qutip.org,https://github.com/qutip/qutip/issues/997#issuecomment-532282813,1,['down'],['download']
Availability,"The current error handling for failure in ode integration, in mesolve/sesolve, is very bad. Now exceptions are raised when this occur, so that these errors can be caught more easily by users.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/243:12,error,error,12,https://qutip.org,https://github.com/qutip/qutip/pull/243,3,"['error', 'failure']","['error', 'errors', 'failure']"
Availability,"The current test failure is unrelated and not your fault. It's everyone's favourite `dnorm` again, and it's not because of any _new_ problems with it, it's just because we recently re-enabled the `dnorm` tests (see #1463) that had been lying dormant due to a problem in how they were written when we swapped to `pytest` as our runner.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1478#issuecomment-811949743:17,failure,failure,17,https://qutip.org,https://github.com/qutip/qutip/pull/1478#issuecomment-811949743,2,"['failure', 'fault']","['failure', 'fault']"
Availability,"The current test failures can probably be fixed by merging #1651, so I should review that.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1727#issuecomment-980007660:17,failure,failures,17,https://qutip.org,https://github.com/qutip/qutip/pull/1727#issuecomment-980007660,1,['failure'],['failures']
Availability,"The default Apple `clang` version doesn't recognise `-fopenmp` out-of-the-box, because Apple don't ship an OMP library with macOS. You'll have more luck (with most C/C++ projects!) if you install a fully-featured compiler and environment. On [homebrew](https://brew.sh) you can find both `clang`/`clang++` and `gcc`/`g++`, both of which can be installed with OMP support. Make sure your set `PATH`/`CC`/`CXX` environment variables are set up correctly after you've installed, so you're calling the compiler you've just installed, not just the Xcode versions. This isn't a bug in QuTiP, although we could remember this when somebody's working on modernising the distribution - in C/C++ land, tools like `automake` run through a big list of things to check during build configuration, and one of them is if OMP appears to exist. That way the error message is a little clearer (although in this case it's reasonable clear if you're used to C compilers).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774:840,error,error,840,https://qutip.org,https://github.com/qutip/qutip/issues/1230#issuecomment-611425774,2,['error'],['error']
Availability,The dnorm tests are sporadically (quite regularly) failing e.g. ```; ======================================================================; ERROR: Metrics: checks that special cases for dnorm agree with SDP solutions.; ----------------------------------------------------------------------; cvxpy.error.SolverError: Solver 'CVXOPT' failed. Try another solver or solve with verbose=True for more information. Try recentering the problem data around 0 and rescaling to reduce the dynamic range.; ```. I suggest we turn them off by not installing cvxpy for any of the test configurations.; We can turn them on again if someone can make an attempt to make the dnorm tests more reliable @cgranade . I will raise a PR for this now.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/880:141,ERROR,ERROR,141,https://qutip.org,https://github.com/qutip/qutip/issues/880,3,"['ERROR', 'error', 'reliab']","['ERROR', 'error', 'reliable']"
Availability,"The docstring can come live in its usual place, but otherwise that looks good to me! I'm always in favour of improving error meesages.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1427#issuecomment-770189215:119,error,error,119,https://qutip.org,https://github.com/qutip/qutip/pull/1427#issuecomment-770189215,1,['error'],['error']
Availability,The documentation build failure is likely due to the pip bug that triggered the documentation build errors on dev.major (#1897).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1902#issuecomment-1139096612:24,failure,failure,24,https://qutip.org,https://github.com/qutip/qutip/pull/1902#issuecomment-1139096612,2,"['error', 'failure']","['errors', 'failure']"
Availability,"The error comes from the file `/usr/local/lib/python2.7/dist-packages/qutip/tests/test_Qobj.py`. This file is no longer part of qutip (development version), so it must come from the old installation. Make sure you delete that file before installing the development version.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42922781:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42922781,1,['error'],['error']
Availability,The error here has nothing to do with the pull but rather with the coveralls that shouldnt be running anyway for py3.2. Since we are no longer testing against 3 2 anyway I see no reason why this cant be merged.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/276#issuecomment-66583536:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/276#issuecomment-66583536,1,['error'],['error']
Availability,The error in the documentation build went away. So I am merging this now,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/626#issuecomment-271126735:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/626#issuecomment-271126735,1,['error'],['error']
Availability,"The error is genuine. I think I have narrowed down the problem. The issue is reshaping (specifically vector_to_operator ) when the vector represents a tensor product system. ```python; from qutip import *. psi0 = tensor(basis(4, 0), basis(2, 0)); rho0vec = operator_to_vector(ket2dm(psi0)). print(rho0vec). vector_to_operator(rho0vec); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1098#issuecomment-575501006:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/1098#issuecomment-575501006,2,"['down', 'error']","['down', 'error']"
Availability,The error is related to my new metrics tests being too strict. So this seems to be ready for review.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/291#issuecomment-66949855:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/pull/291#issuecomment-66949855,1,['error'],['error']
Availability,"The error reported here; ```; /Users/goerz/.pyxbld/temp.macosx-10.6-x86_64-3.5/pyrex/rhs72670.cpp:541:10: fatal error: 'complex' file not found; #include <complex>; ```; Suggests that any string format time-dependence would fail to compile. @goerz Could you try to reproduce with simple example, e.g.; ```; H = [[sigmaz(), ""sin(t)""]]; ```; ?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-463246180:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-463246180,4,['error'],['error']
Availability,"The error seems to occur only when I use matplotlib to make some plots before using the propagator. For example, if I implement the two blocks of code as shown below in the same order, I would get the error as shown. But if I remove the first block and implement only the second block, the error disappears (of course after restarting the kernel). . Block 1:; ```ruby. import numpy as np; import matplotlib.pyplot as plt; from qutip import *. x = np.linspace(0,2*np.pi,100); y = np.sin(x); plt.plot(x,y); plt.show(); ```; output:. <img width=""407"" alt=""image"" src=""https://user-images.githubusercontent.com/53356828/88606624-00e26280-d032-11ea-97a4-107449ad8b56.png"">. Block 2:; ``` ruby; H1 = sigmaz();H2 = sigmax(); ; args = {'w': 2*2*np.pi}; H = [H1, [H2, 'cos(w * t)']]; t_list = np.linspace(0,10,100); U_list = []; for (i,t) in enumerate(t_list):; U = propagator(H,t, [], args); U_list.append(U); print(i); ```; output:; ```; 0; 1; 2; 3; 4; 5; 6; 7; ---------------------------------------------------------------------------; DistutilsExecError Traceback (most recent call last); ~/opt/anaconda3/lib/python3.7/distutils/unixccompiler.py in _compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts); 117 self.spawn(compiler_so + cc_args + [src, '-o', obj] +; --> 118 extra_postargs); 119 except DistutilsExecError as msg:. ~/opt/anaconda3/lib/python3.7/distutils/ccompiler.py in spawn(self, cmd); 909 def spawn(self, cmd):; --> 910 spawn(cmd, dry_run=self.dry_run); 911 . ~/opt/anaconda3/lib/python3.7/distutils/spawn.py in spawn(cmd, search_path, verbose, dry_run); 35 if os.name == 'posix':; ---> 36 _spawn_posix(cmd, search_path, dry_run=dry_run); 37 elif os.name == 'nt':. ~/opt/anaconda3/lib/python3.7/distutils/spawn.py in _spawn_posix(cmd, search_path, verbose, dry_run); 148 ""command %r terminated by signal %d""; --> 149 % (cmd, os.WTERMSIG(status))); 150 elif os.WIFEXITED(status):. DistutilsExecError: command 'gcc' terminated by signal 6. During handling of the above exception, ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290:4,error,error,4,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664714290,3,['error'],['error']
Availability,"The errors in this PR are caused by SciPy 1.11 raising:; ```; FAILED qutip/tests/test_sp_eigs.py::test_DenseHermValsVecs - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; FAILED qutip/tests/test_sp_eigs.py::test_DenseValsOnly - DeprecationWarning: Keyword argument 'eigvals' is deprecated in favour of 'subset_by_index' keyword instead and will be removed in SciPy 1.12.0.; =========== 2 failed, 3250 passed, 12 skipped in 1792.40s (0:29:52) ============; ```; These should be fixed but in another PR. Issue #2093 created to ensure this isn't forgotten.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2091#issuecomment-1428714078:4,error,errors,4,https://qutip.org,https://github.com/qutip/qutip/pull/2091#issuecomment-1428714078,1,['error'],['errors']
Availability,"The example provided no longer produces that error when I run it. However, the error still occurs whenever I run an odd value for N. I would like to look more into this issue and try to resolve it.; ### Code Output; For N=10 `0.006061302499141838 0.006061302499140235`; For N=5 `-inf 0.004046653546081098`; For N=7 `-inf 0.004630127471444943`; For N=9 `-inf 0.005564781691231526`; ### Your Environment; ```; uTiP Version: 5.0.2; Numpy Version: 1.26.4; Scipy Version: 1.12.0; Cython Version: 3.0.10; Matplotlib Version:3.5.1; Python Version: 3.10.12; Number of CPUs: 8; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Linux (x86_64); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1919#issuecomment-2178970555:45,error,error,45,https://qutip.org,https://github.com/qutip/qutip/issues/1919#issuecomment-2178970555,2,['error'],['error']
Availability,"The failing test in `CircuitSimulator` is likely from `run_statistics`, which collects all the possible outcomes wrt. the measurement result. If the measurement result is `None`, it will skip that state. I can also set tolerance there, or update the test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1656#issuecomment-917056083:219,toler,tolerance,219,https://qutip.org,https://github.com/qutip/qutip/pull/1656#issuecomment-917056083,1,['toler'],['tolerance']
Availability,The failing test was unrelated:; ```; FAILED qutip/tests/solver/test_floquet.py::TestFloquet::testFloquetUnitary - assert (0.9999980885...77441045e-05j) == 1.0 ± 5.0e-05; comparison failed; Obtained: (0.9999980885612143+5.1789504077441045e-05j); Expected: 1.0 ± 5.0e-05; ```; Recording it here so that we can fix it (looks like just a tolerance issue in the Floquet tests).,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2089#issuecomment-1432205731:335,toler,tolerance,335,https://qutip.org,https://github.com/qutip/qutip/pull/2089#issuecomment-1432205731,1,['toler'],['tolerance']
Availability,"The failure is because Python 3.10 started warning when importers like PyxImporter don't implement .find_spec. Maybe it is possible to work around it somehow. There is a `-W ignore::ImportWarning` that we add on Python 3.10 for this case, but for some reason it doesn't catch the warning here.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1791#issuecomment-1028096571:4,failure,failure,4,https://qutip.org,https://github.com/qutip/qutip/pull/1791#issuecomment-1028096571,1,['failure'],['failure']
Availability,The first error generally occurs if you are running qutip from within the directory where you installed it,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891#issuecomment-404096438:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/891#issuecomment-404096438,1,['error'],['error']
Availability,"The following codes come from the documentation of mcsolver; http://qutip.org/docs/latest/guide/dynamics/dynamics-monte.html; ```; from qutip import *; import numpy as np; times = np.linspace(0.0, 10.0, 200); psi0 = tensor(fock(2, 0), fock(10, 5)); a = tensor(qeye(2), destroy(10)); sm = tensor(destroy(2), qeye(10)); H = 2 * np.pi * a.dag() * a + 2 * np.pi * sm.dag() * sm + 2 * np.pi * 0.25 * (sm * a.dag() + sm.dag() * a); data = mcsolve(H, psi0, times, [np.sqrt(0.1) * a], [a.dag() * a, sm.dag() * sm]); ```; Sofar it is fine, but if I now try to print `data` with; ```; print(data); ```; The following error shows up in either Ipython or Jupyter Notebook; ```; c:\users\boxi\onedrive\studium\qutip-project\qutip\qutip\solver.py in __str__(self); 272 s += ""missing solver information.\n""; 273 s += ""-"" * (len(s) - 1) + ""\n""; --> 274 if self.states is not None and len(self.states) > 0:; 275 s += ""states = True\n""; 276 elif self.expect is not None and len(self.expect) > 0:; TypeError: len() of unsized object; ```; It is because in the default option is `store_states=False`. Maybe `self.states` should be initialized as e.g. an empty list.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1016:607,error,error,607,https://qutip.org,https://github.com/qutip/qutip/issues/1016,1,['error'],['error']
Availability,"The following error occurred several times while running the tests on my machine:; ```; ======================================================================; ERROR: Stochastic: ssesolve: heterodyne, time-dependent H; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_stochastic_se.py"", line 208, in test_ssesolve_heterodyne; map_func=parallel_map, args={""a"":2}); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\stochastic.py"", line 698, in ssesolve; args=args, **kwargs); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\stochastic.py"", line 417, in __init__; self.noise = np.random.randint(0, 2**32, ntraj).astype(""u4""); File ""mtrand.pyx"", line 990, in mtrand.RandomState.randint; ValueError: high is out of bounds for int32. ----------------------------------------------------------------------; ```; It is due to the fact that the default integer of python on windows is int32 instead of int64. `np.random.randint(0, 2**32)` produces the same error on my machine. Maybe it is better to add `dtype=np.int64` or `dtype=np.uint32` since they are platform independent. If you agree I can work on fixing it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/968:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/issues/968,3,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"The hardware info is wrapped in a `try` statement, thus hiding the error. To see what the problem is, just remove the try statement, and see what error Travis is returning.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/780#issuecomment-347419067:67,error,error,67,https://qutip.org,https://github.com/qutip/qutip/pull/780#issuecomment-347419067,2,['error'],['error']
Availability,"The include a new class to represent time dependent Qobj system.; It's take the list of Qobj and coefficient in the format normally accepted by solvers like mesolve and mcsolve and make an object of it.; The td_Qobj is callable and return the Qobj at the desired time, it support math (+,-,*) and unitary transformations: conj, dag, transpose.; The object has a cython compiled version with cython call to spmv and expect in order to be efficient in solvers.; I made it as a tool used by solver (stochatic/mcsolve), therefore may lack some features for users. Also the naming of some methods only make sense in a solver (rhs).; Lastly, this branch include it's own cubic spline code since the version available when I started working on it only accepted uniformly sampled data. This part may have become redundant. This branch only contain the new object, not the solvers using it.; This pull request replace half the ""cythonizing mcsolve"" pull request.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/814:701,avail,available,701,https://qutip.org,https://github.com/qutip/qutip/pull/814,2,"['avail', 'redundant']","['available', 'redundant']"
Availability,"The installation seems to succeed, but there seems to be a problem when the tests are run (or when I go into python, trying to load anything like `from qutip import *` gives an error. The script gives the following error (which can be reproduced by just running `import qutip.testing as qt` in python):. ```; [. . .]; Successfully installed qutip-3.1.0; Running QuTiP unit tests; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; /Users/justin/.pyxbld/temp.macosx-10.10-x86_64-2.7/pyrex/qutip/cy/spmatfuncs.c:250:10: fatal error: 'numpy/arrayobject.h' file not found; #include ""numpy/arrayobject.h""; ^; 1 error generated.; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/usr/local/lib/python2.7/site-packages/qutip/__init__.py"", line 213, in <module>; from qutip.qobj import *; File ""/usr/local/lib/python2.7/site-packages/qutip/qobj.py"", line 60, in <module>; from qutip.ptrace import _ptrace; File ""/usr/local/lib/python2.7/site-packages/qutip/ptrace.py"", line 38, in <module>; from qutip.sparse import sp_reshape; File ""/usr/local/lib/python2.7/site-packages/qutip/sparse.py"", line 49, in <module>; from qutip.cy.sparse_utils import (_sparse_profile, _sparse_permute,; File ""/usr/local/lib/python2.7/site-packages/qutip/cy/__init__.py"", line 1, in <module>; from qutip.cy.spmatfuncs import *; File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 431, in load_module; language_level=self.language_level); File ""/usr/local/lib/python2.7/site-packages/pyximport/pyximport.py"", line 209, in load_module; inplace=build_inplace, language_level=language_level); File ""/usr/local/lib/python2.7/site-packages/pyximpo",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/348:177,error,error,177,https://qutip.org,https://github.com/qutip/qutip/issues/348,8,['error'],['error']
Availability,The intermittent test failure in c6d68c0 is unrelated and should be resolved by merging in dev.major.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1635#issuecomment-916904969:22,failure,failure,22,https://qutip.org,https://github.com/qutip/qutip/pull/1635#issuecomment-916904969,1,['failure'],['failure']
Availability,"The issue is not with import, but deprecation warnings. ; For our tests, warnings are considered errors.; This is why the tests using scipy 1.12 are still failing.; We will fix this on our side. Thank you again for your contribution.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2305#issuecomment-1908577398:97,error,errors,97,https://qutip.org,https://github.com/qutip/qutip/pull/2305#issuecomment-1908577398,1,['error'],['errors']
Availability,"The issue is when the `O[N-1-j][n]` is evaluated. In the second case, it is evaluated when the object is created, but the first case, it is evaluated when the function is used, using the latest `n` and `j`.; If you did `n=None` between creating `H_globallight` and calling mesolve, the first case will raise an error, but the second will work. Since this is an issue with python, not qutip, I will close the issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2161#issuecomment-1542433352:311,error,error,311,https://qutip.org,https://github.com/qutip/qutip/issues/2161#issuecomment-1542433352,1,['error'],['error']
Availability,"The issue is with numerical error: the default tolerance for the computation of the propagator is `1e-8`, but the tolerance for `iscptp` is `1e-12`. You can improve the precision of the propagator by passing `options=Options(atol=1e-14, rtol=1e-14)`. These precisions are per internal step, not for the full evolution. You can also lower the requirement for `iscptp` with `qutip.settings.atol = ...`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1901#issuecomment-1138620881:28,error,error,28,https://qutip.org,https://github.com/qutip/qutip/issues/1901#issuecomment-1138620881,3,"['error', 'toler']","['error', 'tolerance']"
Availability,"The issue still is the rapid slope on the edges of the pulse. The default tolerance on the ODE solver is not enough to capture the dynamics in your case. Doing:. options=Options(atol=1e-9). in mesolve resolves the issue. The evolution in the sesolve case is a bit different since the vector being solved is a ket rather than dm. > On Oct 19, 2017, at 22:06, nlphysics <notifications@github.com> wrote:; > ; > Yes! I played with Gamma as well as with the number of time steps. Nothing helped. As I already mentioned in the previous post even setting Gamma to zero doesn't help. What I noticed though if I change the factor within the tanh function from 100 to 90 it works again. It's really weird, since it worked with factor 100 in the case of two two level atoms but not for two three level atoms even after increasing the number of time steps by a factor of 20. I really don't know what's going on.; > ; > —; > You are receiving this because you were assigned.; > Reply to this email directly, view it on GitHub <https://github.com/qutip/qutip/issues/771#issuecomment-338100758>, or mute the thread <https://github.com/notifications/unsubscribe-auth/ABMPqTRV0BuVMs-vNMMGSkAmYK_qmopBks5suBxXgaJpZM4P__42>.; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/771#issuecomment-338103310:74,toler,tolerance,74,https://qutip.org,https://github.com/qutip/qutip/issues/771#issuecomment-338103310,1,['toler'],['tolerance']
Availability,The last error is fixed by this PR: https://github.com/qutip/qutip/pull/895. The first error (missing spmatfuncs) is still there.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/891#issuecomment-403722869:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/issues/891#issuecomment-403722869,2,['error'],['error']
Availability,"The latest version of QuTIP uploaded to PyPI (4.0.1 uploaded on 2016-12-29) has scipy (>=0.15) listed as a dependency. However, the file fastsparse.py imports `get_sum_dtype` from scipy.sparse.sputils, which is only available in scipy 0.18 and newer. I believe that the function was not actually used, and the import was removed in commit #596. . I am not certain that the current version still requires scipy(>=0.18), but the version currently available on PyPI (and thus auto-installed with pip) does require it. If the user has an earlier version of scipy, qutip will fail on import (ImportError).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/616:216,avail,available,216,https://qutip.org,https://github.com/qutip/qutip/issues/616,2,['avail'],['available']
Availability,"The main issue causing these errors though is that `cvxpy.Variable` and `cvxpy.Parameter` expect the first arg to be a tuple with dimensions. We are passing `num_rows, num_cols` is two args. Who knows how this has happened - cvxpy changed its interface?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/872#issuecomment-394201690:29,error,errors,29,https://qutip.org,https://github.com/qutip/qutip/issues/872#issuecomment-394201690,1,['error'],['errors']
Availability,"The main purpose of this patch is to cherry-pick up the commits which allow us to move our testing infrastructure to GitHub Actions, without absolutely messing up the merge of #1481. After that is merged, I'll merge everything up properly. This stop-gap measure is necessary because Travis CI is shutting down its free tier _today_, and we haven't managed to effect the merge yet. Unfortunately, I had to pick out rather more than I had hoped to get this without seriously rewriting `__init__.py`, `setup.py` and the testing workflow, so apologies for the larger PR. I have, however, cherry-picked out PRs in full, rather than splitting them, to make it logically a bit simpler. I have also cherry-picked the PRs commit-by-commit, rather than squashing them, to make it easier to understand the history when I have to do a larger merge later (even though it'll still be more confusing in the `git log` than desirable). The cherry-picked PRs are:; - #1465; - #1471; - #1484; - #1510; - #1541; - #1551 (the actual target). I had to fix several merge conflicts in `__init__.py` over time, but most stuff was trivial to solve. The largest merge conflicts that needed to be handled were issues where the old and new methods of handling settings conflicted, but again, it's obvious what is the correct version in this. I have also disabled warnings-as-errors in the testing infrastructure, until we've fixed them properly on this branch.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1574:305,down,down,305,https://qutip.org,https://github.com/qutip/qutip/pull/1574,2,"['down', 'error']","['down', 'errors']"
Availability,The most recent three PR should resolve all error and warnings in the tests. I will merge them all later today unless there any objections,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430#issuecomment-186011649:44,error,error,44,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-186011649,1,['error'],['error']
Availability,"The parallel issue was resolved earlier. See the ipynbtools import of ipyparallel. ncps should not be an issue as it has always has fallen back on the multiprocessing count. > On Feb 9, 2016, at 18:40, Alexander Pitchford notifications@github.com wrote:; > ; > I was helping someone with an install on windows 7 yesterday.; > We were testing using a notebook, and it worked fine except the version_table. The first error was resolved by installing ipython parallel. Still after that it was failing with something like key 'ncpus' missing. Sorry for not supplying exact errors. I could ask the user to post them if necessary.; > ; > @nonhermitian is #421 likely to resolve this? Even if say they don't have win32com or comtypes installed?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/423#issuecomment-182174246:415,error,error,415,https://qutip.org,https://github.com/qutip/qutip/issues/423#issuecomment-182174246,2,['error'],"['error', 'errors']"
Availability,"The particular example that was given as an MKL error, is a tricky problem. Seems that the MKL cannot solve for it in the `power` steady mode. As such, I have implemented a 'solver' kwarg that allows for picking the solver that is used in the direct and power methods. The default is SciPy, which could be the usual SuperLU solver, or UMFPACK, if installed via scikits.umfpack. The 'mkl' option can be passed to do the mkl library. I will see what the Intel people have to say about solving the particular matrix that was given:. https://groups.google.com/d/msg/qutip/axGZ-7vtnhI/2Rlsl7ExAgAJ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/720#issuecomment-315449568:48,error,error,48,https://qutip.org,https://github.com/qutip/qutip/pull/720#issuecomment-315449568,1,['error'],['error']
Availability,"The plugin was already enabled by default, so this does not turn it on. However, it also defaults to Python 2, which means it produces a lot of syntax errors, and the run (silently) failed every time. This may cause our CodeClimate score to drop, not because we actually got worse, but because we suddenly start seeing a load of duplication that was previously hidden. I'm hoping that getting these parser errors fixed will mean that the ""Progress report"" tab on CodeClimate will start getting populated. **Changelog**: (developer changes) fixed Python version for duplication detection in CodeClimate",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1577:151,error,errors,151,https://qutip.org,https://github.com/qutip/qutip/pull/1577,2,['error'],['errors']
Availability,"The possibility exists of issues on 32-bit systems. However, the reported error no longer occurs when checked using int, int32, int64, float, float32, float64, complex, and complex128 types.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/322#issuecomment-77798170:74,error,error,74,https://qutip.org,https://github.com/qutip/qutip/pull/322#issuecomment-77798170,1,['error'],['error']
Availability,The problem arises from `fatal error: limits.h: No such file or directory; #include_next <limits.h> /* recurse down to the real one */`. Something I think @quantshah or someone else might have fixed some time ago.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1065#issuecomment-527433444:31,error,error,31,https://qutip.org,https://github.com/qutip/qutip/pull/1065#issuecomment-527433444,2,"['down', 'error']","['down', 'error']"
Availability,"The problem is recognising what a true 0 is from a small value. In your example on the new data layer, there will already be exactly 0 items explicitly stored (and `data.add_csr` is going to get faster and smarter in another PR, too) without `tidyup`, but much more concerningly `1e-15 * qutip.rand_herm(5)` will end up in a zero matrix, which is clearly absolutely wrong. The argument from Liouvillian doesn't work here - even before the new data layer, `liouvillian` never called the `tidyup` code because it accessed the `Qobj.data` field directly, rather than used `Qobj`. Since it then goes into `CQobjEvo` in most of the solvers, which also don't touch the `tidyup` code, it doesn't get called. I don't think there's any safe way to know if small values should actually be zero, or if they're just small values. It makes sense that we want to maintain as much sparsity as possible when values are truly zero, but I think having the QuTiP default be to attempt to tidy up after every addition, multiplication and matrix multiplication is quite unsafe, and for people who aren't doing very very sparse calculations, it's actually a slow down.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-680011384:1141,down,down,1141,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-680011384,2,['down'],['down']
Availability,The problem is that at the moment this error crashes the entire python kernel unexpectedly for a user without any messages. It can be very frustrating for a newbie.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/699#issuecomment-315348946:39,error,error,39,https://qutip.org,https://github.com/qutip/qutip/pull/699#issuecomment-315348946,1,['error'],['error']
Availability,"The problem was that I was using a pytest plugin to output the docstrings, which are not available in conda. Now I just increased verbosity to 2.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1131#issuecomment-560254158:89,avail,available,89,https://qutip.org,https://github.com/qutip/qutip/pull/1131#issuecomment-560254158,1,['avail'],['available']
Availability,"The scipy Laguerre polynomial will be very inefficient for constructing the entries because it's linear in various inputs, and we need a quadratic number of entries for it, so it ends up being cubic. I have some code for an old project of mine which calculates them all as a nice recurrence relation though, which cuts the timing back down to quadratic. There was an issue on the Google groups recently about something similar: https://groups.google.com/forum/#!topic/qutip/ZtOiO7e9zNk, though the code I supplied there doesn't save the actual recurrence terms, so it would still be cubic (and I'm pretty sure there's still a complex number sign-error bug in it still, because I didn't take very much care when I did it...). You have to be careful, though, because constructing the displacement operator that way will result in an operator which is not unitary for any truncated subspace.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1293#issuecomment-645272426:335,down,down,335,https://qutip.org,https://github.com/qutip/qutip/issues/1293#issuecomment-645272426,2,"['down', 'error']","['down', 'error']"
Availability,"The segfault on mac is not fixed yet. @nathanshammah found 3 tests that fails because of it.; Since we don't have a solution comming soon, we are simply skipping these tests for 4.5.1. This is the error in #1197. In common with these 3 test is the computation of eigenvalues, 2 of them do it directly with scipy, the last one compare the cython version to the scipy one.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1257:197,error,error,197,https://qutip.org,https://github.com/qutip/qutip/pull/1257,1,['error'],['error']
Availability,The six library is used for Python 2.x and 3.x compatibility tricks. It failed to import during Travis tests. Should we make this library available in Travis tests?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/378:138,avail,available,138,https://qutip.org,https://github.com/qutip/qutip/issues/378,1,['avail'],['available']
Availability,"The stochastic ode solver are not smart and do not adjust the step to meet a desired tolerance. You can manually increase the precision by increasing the number of sub-steps `nsubsteps`. ; Since you don't have any c_ops, see if you can use mcsolve instead. It accept `atol `and `rtol `options and you should be able to rebuild the measurement from the collapse.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1357#issuecomment-691086529:85,toler,tolerance,85,https://qutip.org,https://github.com/qutip/qutip/issues/1357#issuecomment-691086529,1,['toler'],['tolerance']
Availability,"The stochastic solver have been redone.; smesolve and ssesovle can be used for time dependent systems (H, c_ops and sc_ops).; The available solvers are : 'euler-maruyama', 'pc-euler, 'milstein', 'platen', 'milstein-imp', 'taylor15', 'taylor15-imp', 'explicit15'. All solvers are usable by both ssesolve and smesolve, for time-dependent cases and for both heterodyne and homodyne methods. There is no restriction on the number of sc_ops. The solvers are in cython, making them 2~3 time faster than the previous version, with the exception of the implicit solvers, where the timing is about the same. The photocurrent method as been moved to it's own functions: photocurrentmesolve and photocurrentsesolve. It can take time-dependent Hamiltonian. The stochastic (piecewse deterministic process) PDP solvers (ssepdpsolve and smepdpsolve) are untouched. The previous version of smesolve/ssesolve allowed the user to determine it's own d1 and d2 function. This capacity have been moved to the function general_stochastic. However the function only has access to some solver: 'euler-maruyama', 'platen', 'explicit15'. . I created a function which list the solvers with the references: stochastic_solver_info(). The convergence of the solvers was tested with a tests similar to https://github.com/qutip/qutip-notebooks/blob/master/development/development-smesolver-new-methods.ipynb .",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/815:130,avail,available,130,https://qutip.org,https://github.com/qutip/qutip/pull/815,1,['avail'],['available']
Availability,"The stuff in `doc/contrib` does not seems to have been used anywhere. I erased it and not error/warnings appeared, but can't tell you what it was used for.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2523#issuecomment-2332246101:90,error,error,90,https://qutip.org,https://github.com/qutip/qutip/pull/2523#issuecomment-2332246101,1,['error'],['error']
Availability,The test failure is the sporadic Window tk one.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1983#issuecomment-1224125400:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/1983#issuecomment-1224125400,1,['failure'],['failure']
Availability,"The test failure is unrelated; the swap to the new `CSR` type has meant that a few test tolerances have become much more fragile when considering numerical precision; since we're now using our own mathematical operations rather than scipy's, we're a bit more likely to have disagreements with them. This may also have to do with the new version of `Qobj` being more consistent about applying the `auto_tidyup` rule. This is one rule I really think we should look at removing or seriously reworking; it's basically just ""numerical imprecision as a feature, not a bug"".",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1348#issuecomment-679976149:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/1348#issuecomment-679976149,2,"['failure', 'toler']","['failure', 'tolerances']"
Availability,"The test failure on Python 3.6 appears to be due to some exceptionally weird behaviour by `conda` in the Travis setup - if you look closely, you can see that when it runs `conda uninstall cython`, it _downgrades_ `numpy` to 1.14.2. This would not be a problem in a `conda-forge` release build, because the `numpy` API dependency is pinned in the feedstock, but it is a potential problem on `pip` source builds. It's possible this super odd behaviour of `conda` is the cause of people's complaints on the email lists about failed imports. I will push a change to the requirements here to try and enforce `numpy >= 1.16.6`, which ought to solve the dependency issues. I will make a similar change on `master` and in #1429 (which I will likely back-port to master before 4.6).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/1448#issuecomment-782105359,1,['failure'],['failure']
Availability,The test failure was just the occasional bloch sphere test failure that happens on Windows sometimes.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1961#issuecomment-1201107734:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/1961#issuecomment-1201107734,2,['failure'],['failure']
Availability,The test failure was just the random superoperator `iscptp` and `isherm` test that is being fixed in #2147.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2146#issuecomment-1492643493:9,failure,failure,9,https://qutip.org,https://github.com/qutip/qutip/pull/2146#issuecomment-1492643493,1,['failure'],['failure']
Availability,The test failures seem to be only coveralls result upload errors. I'm happy to merge without re-running. Let's just double check that the merge commits pass everything.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1889#issuecomment-1191987452:9,failure,failures,9,https://qutip.org,https://github.com/qutip/qutip/pull/1889#issuecomment-1191987452,2,"['error', 'failure']","['errors', 'failures']"
Availability,The tests fail but it looks like a short network outage that caused conda to fail to download some packages. Probably just running it again will sort it out.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1917#issuecomment-1146096672:49,outage,outage,49,https://qutip.org,https://github.com/qutip/qutip/pull/1917#issuecomment-1146096672,2,"['down', 'outage']","['download', 'outage']"
Availability,"The tests for this are sometimes erroring in Travis; See test result for #424 ; ERROR: Test Qobj: trunc_neg works for non-diagonal opers. I saw a conversation about this somewhere, but can't find it now",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/425:33,error,erroring,33,https://qutip.org,https://github.com/qutip/qutip/issues/425,2,"['ERROR', 'error']","['ERROR', 'erroring']"
Availability,The tests report errors because of the cancelled PR #1340 which was made to the wrong branch.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1341#issuecomment-672845992:17,error,errors,17,https://qutip.org,https://github.com/qutip/qutip/pull/1341#issuecomment-672845992,1,['error'],['errors']
Availability,The timeouts are because of a GitHub actions outage. It appears to have been resolved earlier today -- https://www.githubstatus.com/incidents/29xnrws671f0.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1787#issuecomment-1023376091:45,outage,outage,45,https://qutip.org,https://github.com/qutip/qutip/pull/1787#issuecomment-1023376091,1,['outage'],['outage']
Availability,"The variable e does not exist outside the except block even if the try failed...; So trying to give more information about the error resulted in more confusion, sorry. I would suggest to use functions instead of string for your coefficient, the speedpup is often less than the time it take to compile the string, (which is not included in the progressbar). . It is the first case where it would work once, but not the following times. I would be interested in the real error message and/or a code to reproduce the bug. If you are comfortable hacking your version of qutip: adding `print(e)` in the except block; https://github.com/qutip/qutip/blob/01132789581821517986fad1a14ab3feec7d2de2/qutip/qobjevo_codegen.py#L77-L80; should do it give the proper error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212:127,error,error,127,https://qutip.org,https://github.com/qutip/qutip/issues/1196#issuecomment-595847212,3,['error'],['error']
Availability,The version at the last link posted also gives me this error. Should that have been fixed in there?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1039#issuecomment-520215959:55,error,error,55,https://qutip.org,https://github.com/qutip/qutip/issues/1039#issuecomment-520215959,1,['error'],['error']
Availability,"The version of qutip in the macports repository is outdated (2.2.0), which is unfortunate especially since it is still included in the documentation as an ""official"" installation path (http://qutip.org/docs/3.0.1/installation.html#installation-on-mac-os-x-10-6). ; I saw that a patch to 3.0.1 was submitted to MacPorts a while ago (https://trac.macports.org/ticket/44555), but apparently there were some errors and then nothing further happened. It would be great if this could be updated.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/283:404,error,errors,404,https://qutip.org,https://github.com/qutip/qutip/issues/283,1,['error'],['errors']
Availability,"Then norm of an operator (with default input) is its trace. The trace of the Qobj you give, `out`, is 10^(-6). If you increase the tolerance (by default, `tol=0`) or maximum iteration in the eigenvalues solver, it should eventually be equal to the trace function (`tr()`), result.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/952#issuecomment-465112671:131,toler,tolerance,131,https://qutip.org,https://github.com/qutip/qutip/issues/952#issuecomment-465112671,1,['toler'],['tolerance']
Availability,"There are ""breaking"" changes within the scipy private code which various parts of QuTiP depended on (see gh-1298, gh-1301 and commits 46e04a1, 6c85261 and 663d7d2). We ensure that at least one test on Travis uses a scipy version before 1.5 so that we always maintain support for it - the other tests will typically install scipy>=1.5. This particular test is chosen by elimination:; - we want the ""default"" case testing against the newest versions of Python to use the newest versions of the libraries available; - we want the Cython parts to be tested against both versions of scipy, since we link against their versions of LAPACK/BLAS.; - the Mac tests (at the time of writing) skip some tests which are problematic because of intermittent segfaults, including at least one which has issues with scipy 1.5. The MKL/OMP one skips some tests, but not any which use scipy.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1302:502,avail,available,502,https://qutip.org,https://github.com/qutip/qutip/pull/1302,1,['avail'],['available']
Availability,"There are conda versions for cvxopt and cvxpy (https://anaconda.org/mcg/cvxpy) but nobody seems to be maintaining or updating them. Installing the conda version downgrades everything else. I will first try to fix the yml issue. Nothing seemed to be incorrect in the YML file, and the travis CI linter is not available, so I am not sure what is wrong with the file. Will update if I make progress.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394298574:161,down,downgrades,161,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394298574,2,"['avail', 'down']","['available', 'downgrades']"
Availability,"There are two reasons I did not go with `isinstance(other, numbers.Number)`:; - This returns False when `other` is a NumPy array or TensorFlow tensor which makes `__mul__` significantly less flexible.; - If we accept objects that are not instances of `numbers.Number`, we will still have to use `complex(other)`. This is necessary to infer if the output is hermitian or unitary. Hence, instead of doing a set of `isinstance` checks and `shape` checks for NumPy TensorFlow or any other future library we may want to be somewhat compatible with, we just check whether other it can be casted to `complex`. If it can, `mul` makes sense and we let the specialisation do whatever they ""want"" (they could always just do complex(value) in any case). I must admit that the try except with complex also seems not ideal to me. But I could not find a better implementation that fitted the requirements. I mean, we do use this same code pattern at some other points in the code (in `__matmul__` we raise not implemented if `other` can not be casted to Qobj and we catch this with a try) but what worries me is: what happens if `complex(other)` raises TypeError not because we do not know how to do the cast but because the user made a mistake in the code? An example of this could be:; ```python; arrray = np.array([1,2]) # length 2 array; qobj*array; ```; This will return `TypeError` but with a different message if we catch it in the `complex(other)` try execpt. ; - _With_ a try execpt that returns NotImplemented (current implementation) the error message is:` TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None)`; - Wehreas _without_ the try expect (not returnt NotImplemented if `complex(other)` fails), the error message is: `TypeError: only length-1 arrays can be converted to Python scalars`, which could be a useful error message.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-885550798:1534,error,error,1534,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-885550798,3,['error'],['error']
Availability,"There doesn't seem to be the package released under Ubuntu 16.04 channel. After I added the Ubuntu PPA for QuTiP, I got the following error/warning:. ```; qxd@ubuntu1604$: sudo apt-get update; ...; W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; N: See apt-secure(8) manpage for repository creation and user configuration details.; E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; ```. Thanks for maintaining it :)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/472:134,error,error,134,https://qutip.org,https://github.com/qutip/qutip/issues/472,1,['error'],['error']
Availability,There is a Bloch_Decay.mp4 link at the bottom of the [Plotting on the Bloch Sphere](http://qutip.org/docs/4.1/guide/guide-bloch.html#plotting-on-the-bloch-sphere) webpage. When I click on it I get a 404 error from linked Google Code page:; http://qutip.googlecode.com/svn/doc/figures/bloch_decay.mp4,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/800:203,error,error,203,https://qutip.org,https://github.com/qutip/qutip/issues/800,1,['error'],['error']
Availability,"There is numerical error in the answer due to the need for the sqrtm method. I am not sure if I would call this error significant as the error is of order 1e-7, while the fidelity is of order unity. However, as Chris said, there might be a better way for pure states. Paul. > On Aug 26, 2015, at 13:11, dick-t notifications@github.com wrote:; > ; > fidelity() returns >1 by a significant amount for certain pure states. States are normalised, and taking the inner product returns 1. Code below provides two examples of states which give fidelity >1 with themselves.; > ; > #to test qutip's fidelity routine; > import qutip as qu; > ; > psi0=qu.Qobj(); > ; > i=0; > while i<=1:; > j=0; > while j<=1:; > psi0+=qu.state_number_qobj([2,2],[i,j]) #even superposition of qubit states; > j+=1; > i+=1; > ; > psi0=psi0.unit() #normalise; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > print(""\n""); > ; > psi0=qu.tensor(psi0,qu.basis(10,1)) #tensor product with Fock state; > ; > print(qu.fidelity(psi0,psi0)); > print((psi0.dag()_psi0).norm()_*2); > ; > Output:; > ; > 1.00000002107; > 1.0; > ; > 1.00000003485; > 1.0; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/361#issuecomment-134832098:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/361#issuecomment-134832098,3,['error'],['error']
Availability,"There is one particular setup where the sparse eigen solver segfault. This happen with pure scipy and is not related to qutip.; Looking into it, I saw that when we installed qutip, it updated scipy version. It downgraded scipy 1.12 to 1.11, thus we never tested for 1.12.; Also build isolation meant that the version of numpy, scipy and cython we set in our test matrix did not match the one at installation. This is not ideal for cython since the compilation version could have a major impact. I set it to not use build isolation and used the matrix set version to compile qutip.; This had the side effect of not using the setup that caused the segfault and solving the failing test issue.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2361#issuecomment-2019207660:210,down,downgraded,210,https://qutip.org,https://github.com/qutip/qutip/pull/2361#issuecomment-2019207660,1,['down'],['downgraded']
Availability,"There may be some who would wish continue using the mingw compiler on Windows, as it is a smaller download. I guess we could just say that we only support MS compilers on Windows.; Would the zspmv.cpp need to be platform or compiler specific?; Is it possible to choose flags / source based on which compiler is being used? I have seen in the cython generated C that there are compiler specific conditionals in the directives.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/648#issuecomment-280327270:98,down,download,98,https://qutip.org,https://github.com/qutip/qutip/pull/648#issuecomment-280327270,1,['down'],['download']
Availability,"There seems to be a bug when trying to solve the Schrödinger equation with the sesolve and essolve functions using an initial state vector. The following code reproduces the error:; ```python; ### import dependencies; %matplotlib inline; from qutip import *; import numpy as np; import matplotlib.pyplot as plt. ### define spin operators at each site ; N = 3 # Number of spins; def sz(i):; if i==N:; i=0; l = [qeye(2) for j in range(0,i)] + [sigmaz()] + [qeye(2) for j in range(i+1,N)]; return tensor(l); def sp(i):; if i==N:; i=0; l = [qeye(2) for j in range(0,i)] + [sigmap()] + [qeye(2) for j in range(i+1,N)]; return tensor(l); def sm(i):; if i==N:; i=0; l = [qeye(2) for j in range(0,i)] + [sigmam()] + [qeye(2) for j in range(i+1,N)]; return tensor(l). ### Hamiltonian with on-site field and XX-type coupling between spins 0&1 and spins 0&2; delta = 1; V1 = 0.1; V2 = 0.1 ; H0 = -0.5*delta*(sz(0) + sz(1) + sz(2)) + V1*(sp(0)*sm(1) + sm(0)*sp(1)) + V2*(sp(0)*sm(2) + sm(0)*sp(2)) . ### no collapse operaters; e_op is total magnetization in z-direction ; c_ops = []; e_ops = [sz(0)+sz(1)+sz(2)]. ### initial state: each spin polarized in x-y-plane; psi0 = tensor([(basis(2,0) + (1j)**i *basis(2,1)).unit() for i in range(0,N)]); rho0 = psi0*psi0.dag(). ### compute time evolution with different solvers; t_list = np.linspace(0, 50, 500); output0 = mesolve(H0, rho0, t_list, c_ops, e_ops); output1 = essolve(H0, rho0, t_list, c_ops, e_ops); output2 = sesolve(H0, psi0, t_list, e_ops). ### plot result; plt.plot(t_list, output0.expect[0], label='mesolve'); plt.plot(t_list, output1.expect[0], label='essolve'); plt.plot(t_list, output2.expect[0], label='sesolve'); plt.legend(). ### time evolution with essolve, use state vector --> Exception raised; output3 = essolve(H0, psi0, t_list, c_ops, e_ops); plt.plot(t_list, output0.expect[0], label='essolve, state vector'); plt.legend(); ```; The Hamiltonian commutes with the operator for which the expectation value is computed as is easily checked. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/841:174,error,error,174,https://qutip.org,https://github.com/qutip/qutip/issues/841,1,['error'],['error']
Availability,"There seems to be a failure in how `Qobj.istp` checks trace-preservingness for superoperators acting on composite systems. I think there's an exception raised inside the property accessor which is being downgraded to `istp == False`; I'll investigate and fix it soon. In the meantime, I've written a [brief test case](https://gist.github.com/cgranade/31bce360282097d4abd545b68eb65b7d) that shows the problem.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/498:20,failure,failure,20,https://qutip.org,https://github.com/qutip/qutip/issues/498,2,"['down', 'failure']","['downgraded', 'failure']"
Availability,"There were a few invalid escape sequences and scipy imports that somehow escaped being fixed #1493, so this fixes those. Also, in #1480 we issued deprecation warnings for user-facing uses of `eseries`, `essolve` and `ode2es`, however we are not deprecating the correlation and spectrum methods (in QuTiP 5.0 the necessary components are just absorbed into private functions inside `correlation.py`), so these should not generate warnings. Simon (@hodgestar) and I briefly discussed whether we needed a special warnings filter inside those functions, but we thought we didn't need it because default Python filters would prevent `DeprecationWarning` from being shown, since it is triggered by library code and not code in `__main__`. The problem is that not everything uses the default filters; both `pytest` and the documentation build do not suppress all `DeprecationWarning` messages. This was a particular problem in `pytest`, where approximately 68,000 warnings (!) were generated. Since this is _not_ deprecated functionality, nor is it using deprecated functionality, so there shouldn't be any warnings. This PR removes those as well. The end result is that a completely clean documentation build now should generate 0 warnings. My eventual intent is to create an automatic documentation build process, which treats warnings as errors to prevent us from breaking it in PRs. This cannot happen until the merger of the documentation into this repository, however, because otherwise new features/feature removals could get into an impossible situation where the two PRs to `qutip` and `qutip-doc` would not be aware of each other, so would return failed CI. Tests still generate several warnings, but that's for a different PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1505:1334,error,errors,1334,https://qutip.org,https://github.com/qutip/qutip/pull/1505,1,['error'],['errors']
Availability,"There's a new failure on an `mesolve` test in the Xcode 12 branch based on the relative tolerance. It's _probably_ fine, but maybe just check. Let's merge the fix for that in with this so we don't end up with the `diag_liou_mult` problem again (that I still haven't sorted out...). It's probably just a case of being a little more lenient with the test tolerance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1462#issuecomment-805883421:14,failure,failure,14,https://qutip.org,https://github.com/qutip/qutip/pull/1462#issuecomment-805883421,3,"['failure', 'toler']","['failure', 'tolerance']"
Availability,"These failing tests are different from those random failing we've been seeing before. I also have this in my scheduler PR, but it is completely unrelated to the PR. It starts to appear yesterday, but nothing was merged in the last three weeks. Does anyone have a clue?. The error seems to come from the core data part @jakelishman @Ericgig. Scipy made a release 4 days ago and we are using one of the private attributes.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292:274,error,error,274,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-649280292,1,['error'],['error']
Availability,"These fortran errors only appears when installing through the dist file. When installing from the source directory in the repo it works. Something is missing the the dist file, perhaps the .f2py_f2cmap file or something similar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/197#issuecomment-49159675:14,error,errors,14,https://qutip.org,https://github.com/qutip/qutip/pull/197#issuecomment-49159675,1,['error'],['errors']
Availability,"This PR addresses #410 by attempting to import `setuptools`, which has support for unittesting and nose integration. Upon failure, it should leave the setup process as it was. This PR also fixes a rare exception in `settings.py` that can be caused if you have a `*.pyc` file for `logging.py` and call into QuTiP from something like nose.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/429:122,failure,failure,122,https://qutip.org,https://github.com/qutip/qutip/pull/429,1,['failure'],['failure']
Availability,This PR addresses #484 by skipping dnorm() tests in the known failure case that MKL is present (see #484 and cvxopt/cvxopt#57).,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/487:62,failure,failure,62,https://qutip.org,https://github.com/qutip/qutip/pull/487,1,['failure'],['failure']
Availability,"This PR changes the norm used in `qutip.tests.test_superoper.testLiouvilleImplem` to the max-norm. Previously, this test used the tr-norm, which scaled badly with the dimension of the Liouvillian under test, such that spurious failures were generated (see #419).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/420:227,failure,failures,227,https://qutip.org,https://github.com/qutip/qutip/pull/420,1,['failure'],['failures']
Availability,"This PR fixes #386 by changing checking if `j == i + 1`, in which case NumPy doesn't automatically move fancy indices to the left. In particular, for adjacent indices, we should sum over index `i`, not over index `0` as was assumed before. To catch regressions, this PR also adds more robust unit tests that check more unusual tensor contractions. Thanks to @arnelg for pointing this out!",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/387:285,robust,robust,285,https://qutip.org,https://github.com/qutip/qutip/pull/387,1,['robust'],['robust']
Availability,"This PR fixes every warning reported in `pytest`, and then makes `pytest` treat warnings as errors to hopefully make sure we stick to this state of affairs. (Or at least it fixes all the ones that appear on my particular machine...). The reason this is desirable is that it means we cannot ignore deprecation warnings in dependencies or even in our own code. It also helps us not let certain parts of the codebase get lost in the sands of time, or at least compels us to do something about potential problems before they actually become catastrophic. This is _somewhat_ of a trial, though I hope we can stick to it; warnings usually indicate that something's wrong. Tests can still test run code that generates warnings, but you now have to mark it explicitly in `pytest`. This doesn't mean you should just ""blank out"" warnings by filtering them away. You should first consider if what you're doing is the right way to do it (fix the warning), and then only if it absolutely is and you're testing something that is _supposed_ to warn, then you can use `pytest.warns` to _assert_ that it warns. Of note: a `warnings.catch_warnings` block _inside_ a test (i.e. in test code, not module code) does not work when `pytest` is treating warnings as errors. There are a few classes of fixes in this PR:. - filtering ""expected"" warnings from `pyximport` (hoping to remove QuTiP's dependence on this in 5.0 anyway); - removal of the old `np.matrix` type in favour of `ndarray`, with some changes to accommodate the different arithmetic semantics; - convert an `__init__` method in a test into just class attributes to allow `pytest` to collect it; - bug fixes for behaviour that was raising warnings we hadn't been paying attention to. I'll be mightily surprised if all 5 CI runs pass immediately with warnings enabled; I haven't tested MKL on my laptop, and a quick glance at old logs suggests that SciPy 1.4 might be issuing a few more.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506:92,error,errors,92,https://qutip.org,https://github.com/qutip/qutip/pull/1506,2,['error'],['errors']
Availability,"This PR introduces a new generator function, qubit_clifford_group, that yields each member of the single-qubit Clifford group as a Qobj. This functionality should be useful in contexts such as quantum error correction and randomized benchmarking.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/358:201,error,error,201,https://qutip.org,https://github.com/qutip/qutip/pull/358,1,['error'],['error']
Availability,"This PR reduces the calculation of average gate fidelity between two quantum channels to the recently merged implementation of process fidelity. Additional minor change: raise an error when the channel passed to `process_fidelity` does not preserve the Hilbert space dimension of the input state. Previously it gave inconsistent results for that case, for different representations of equivalent channels. It's probably possible to define the `process_fidelity` and `average_gate_fidelity` for non-dimension-preserving channels if there is a use case for it? The previous version of `average_gate_fidelity` also was not defined for non-dimension-preserving channel. **Related issues or PRs**; Last part of the changes proposed in https://github.com/qutip/qutip/issues/1703. Builds on the implementation of process_fidelity from https://github.com/qutip/qutip/pull/1712, https://github.com/qutip/qutip/pull/1748. **Changelog**; Re-implement average_gate_fidelity using process_fidelity.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1788:179,error,error,179,https://qutip.org,https://github.com/qutip/qutip/pull/1788,1,['error'],['error']
Availability,"This PR should be independent of #332, as it fixes a visual error with plotting of channels as Pauli-basis superoperators.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/356#issuecomment-125611531:60,error,error,60,https://qutip.org,https://github.com/qutip/qutip/pull/356#issuecomment-125611531,1,['error'],['error']
Availability,"This all looks very sensible to me. I'm happy with `qobj * matrix` and `matrix * qobj` both being disallowed (though I also wouldn't mind allowing Numpy to broadcast the multiplication treating `Qobj` as a scalar). The thin wrappers around `add_csr` and `add_dense` (and `add_csr_dense_dense`, etc, if they exist), only need to be done when they're passed to the dispatcher - the functions themselves should remain as they are, so they can conveniently be called with C semantics without needing to cast up to a Python object and back down again. `data.add(left, right, scale)` done at arbitrary precision with no tidying up should be identical to `data.add(left, data.mul(right, scale))` (the operation is called ""fused multiply-add""), so yeah, `add` should agree with `mul`. Good catch!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1607#issuecomment-883321575:535,down,down,535,https://qutip.org,https://github.com/qutip/qutip/issues/1607#issuecomment-883321575,1,['down'],['down']
Availability,"This all seems incredibly complicated. How about all specialisations stored in the dispatcher take `object` as the scalar type, and throw a TypeError if they can't handle it. `Qobj.__mul__` just does a `try/except`, and returns `NotImplemented` if it catches a TypeError. If it doesn't catch a type error, it calls a separate function, something like; ```python; @functools.singledispatch; def _scalar_properties(x):; return {; # if the matrix was Hermitian, is the output Hermitian (True), or not known (False); 'preserves_hermicity': bool,; # regardless of the input matrix, is the output Hermitian (True), or not known (False); # (i.e. was the scalar zero-like).; 'forces_hermicity': bool,; # if the matrix was unitary, is it still unitary (True), or not known (False); 'preserves_unitarity': Optional[bool],; }; ```; Then just register types with the functools dispatcher?. So then `Qobj.__mul__` looks like:; ```python; def __mul__(self, other):; if isinstance(other, (Qobj, QobjEvo)):; return self.__matmul__(other); try:; out = _data.mul(self.data, other); except TypeError:; return NotImplemented; properties = _scalar_properties(other); isherm = properties['forces_hermicity'] or (self.isherm and properties['preserves_hermicity'] or None); isunitary = self.isunitary and properties['preserves_unitarity'] or None; return Qobj(; out, copy=False, dims=self.dims, isherm=isherm, isunitary=isunitary,; ); ```; (I've probably not got the property truthiness checking exactly right, but that's the principle.)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1620#issuecomment-889018969:299,error,error,299,https://qutip.org,https://github.com/qutip/qutip/pull/1620#issuecomment-889018969,1,['error'],['error']
Availability,"This can - see e.g. Numpy that uses the same licence. #1405 would add its additional copyright to the top of the file. This is actually _more_ useful in that case - it's far clearer that that code is under different licence conditions. That said, I'm really not certain about accepting #1405 in its current form. It's not using the data-layer correctly at all, and if we were to include it, we'd really want to do something like that in a more structured way in core QuTiP. Really it should be a properly dispatched implementation of `einsum`, but I think this should come in as part of a much larger discussion on how to handle tensor networks completely; to have it be nice and ergonomic in all cases, I think this will come in at the same time or after the introduction of new dimensions objects. I'm also very wary of introducing code to QuTiP which is licensed by a different holder. I can only imagine that that will really give us problems down the line - how long would NASA own the copyright on that code, for example? Could we modify it? After how many modifications is it no longer NASA's? We wouldn't have control over anything like that, and I think it's probably more hassle than it's worth on our side.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579#issuecomment-864022506:947,down,down,947,https://qutip.org,https://github.com/qutip/qutip/pull/1579#issuecomment-864022506,2,['down'],['down']
Availability,"This change enables the use of Python standard logging, and backs it by a new qutip.settings entry. A few instances of classic `if debug: print` style logging have been refactored. The new `qutip.settings` entry is based on [configobj](http://configobj.readthedocs.org), with a fallback to classic `~/.qutiprc` parsing if that library is not available. Errors in the new functionality introduced by this commit are also logged, and can be accessed by setting up `logging.basicConfig` _before_ importing QuTiP. The optional configobj dependency should almost always be met, since it's shipped with matplotlib.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/248:342,avail,available,342,https://qutip.org,https://github.com/qutip/qutip/pull/248,2,"['Error', 'avail']","['Errors', 'available']"
Availability,"This code https://gist.github.com/nathanshammah/f96f6c1db5c323243a4729467cb7351f; Also, let me mention that the progress bar was giving some errors in qutip 4.3.1 and now it does not.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1024#issuecomment-503669133:141,error,errors,141,https://qutip.org,https://github.com/qutip/qutip/pull/1024#issuecomment-503669133,2,['error'],['errors']
Availability,"This does not raise a type error for me in either qutip 4.7.X or qutip 5.0.0a.; ```python; >>> import qutip; >>> qutip.__version__; '4.7.3'; >>> x = qutip.sigmax(); >>> x += x; >>> x; Quantum object: dims = [[2], [2]], shape = (2, 2), type = oper, isherm = True; Qobj data =; [[0. 2.]; [2. 0.]]; ```; and; ```python; >>> import qutip; q>>> qutip.__version__; '5.0.0.dev0+ec33e6b'; >>> x = qutip.sigmax(); >>> x += x; >>> x; Quantum object: dims=[[2], [2]], shape=(2, 2), type='oper', isherm=True; Qobj data =; [[0. 2.]; [2. 0.]]; ```; Could you give a minimal reproducing example and the QuTiP version you're using?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2326#issuecomment-1960288737:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/issues/2326#issuecomment-1960288737,1,['error'],['error']
Availability,"This doubles the time taken for the documentation build from ~9 minutes to ~18 minutes. It would be nice to do slow things down, but the documentation build is also not the slowest part of the build yet, so we can live with it for the moment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1883#issuecomment-1122374547:123,down,down,123,https://qutip.org,https://github.com/qutip/qutip/pull/1883#issuecomment-1122374547,1,['down'],['down']
Availability,"This error comes from the integration algorithm.; Take a differential equation like dy/dt = -i*y.; With a simple method like euler: ; y(t+dt) = y(t) + f' dt = y(1-i*dt); So the norm increase exponentially *(1+dt**2) at each iteration, not somewhat randomly.; The default method we use is ""adams"" from scipy's solver, which is a lot better than euler, but still have a bias. We also stop the solver for re-normalization of the state from time to time, introducing another bias.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531322708,2,['error'],['error']
Availability,This error is because of a conflict between versions. Remove the old qutip installation in /usr/local/lib/python2.7/dist-packages/qutip and reinstall the development version.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42904625:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42904625,1,['error'],['error']
Availability,"This error is not related to your work. It happens sometimes because some of the solvers in qutip are stochastic (in this case mcsolve) and occasionally the averaged results have errors that exceed the thresholds we set in the tests. We could fix it by increasing the number of trajectories in the simulation, but this would add time to the test suite which already takes a while to run.. So its a trade off between making the tests run as fast as possible and not getting too many false errors. I've restarted the test on travis, probably it will not fail again this time.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/246#issuecomment-63485058:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/pull/246#issuecomment-63485058,3,['error'],"['error', 'errors']"
Availability,This error message suggests to me that one of the things you're trying to add might be a numpy array:; ```; TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None); ```,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2326#issuecomment-1960290022:5,error,error,5,https://qutip.org,https://github.com/qutip/qutip/issues/2326#issuecomment-1960290022,1,['error'],['error']
Availability,This fails because time only contain `0.5`. ; You probably meant `time.append(0.5*i)`. The error message is a catch-all for failure in scipy solver and certainly not clear.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879178905:91,error,error,91,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879178905,4,"['error', 'failure']","['error', 'failure']"
Availability,"This fails for python2.7 and it might also be related to older scipy version. I could not even install it locally in my python2.7 conda environment with scipy 0.15 as I get some compile errors for the `cy/brtools` module. One more reason to move to Python 3 and update scipy perhaps. @ajgpitch . If you have seen this error before with a conda env clashing with the Python GIL, please let me know,; ```; qutip/cy/brtools.pyx:98:51: Converting to Python object not allowed without gil; Traceback (most recent call last):; ```; The conda environment is as follows:; ```; # packages in environment at /Users/shahnawaz/miniconda3/envs/python2:; #; # Name Version Build Channel; blas 1.0 mkl; ca-certificates 2018.4.16 0 conda-forge; certifi 2018.4.16 py27_0 conda-forge; cython 0.28.3 py27_0 conda-forge; intel-openmp 2018.0.3 0; libgfortran 3.0.1 h93005f0_2; mkl 2018.0.3 1; ncurses 5.9 10 conda-forge; numpy 1.9.3 py27hb3dd696_3; numpy-base 1.14.3 py27ha9ae307_2; openblas 0.2.20 8 conda-forge; openssl 1.0.2o 0 conda-forge; pip 9.0.3 py27_0 conda-forge; python 2.7.15 0 conda-forge; qutip 4.3.0.dev0+2a849f2e <pip>; readline 7.0 0 conda-forge; scipy 0.15.1 np19py27_0; setuptools 39.2.0 py27_0 conda-forge; sqlite 3.20.1 2 conda-forge; tk 8.6.7 0 conda-forge; wheel 0.31.0 py27_0 conda-forge; zlib 1.2.11 h470a237_3 conda-forge; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396111344:186,error,errors,186,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396111344,2,['error'],"['error', 'errors']"
Availability,"This fixes an incompatibility between the current version of QuTiP and the current version of matplotlib. When plotting the Bloch sphere, the call to Bloch.show() produces a run-time error because the Arrow3D class does not implement the method do_3d_projection. This method returns a sort key to matlotlib for sorting artists. This fix adds the method, simply returning a value of 1. The assumption here is that there is only one artist, or that the sort order does not matter. This PR also modifies the conventions for the viewing angles specified in the view attribute of the Bloch and Bloch3d classes, rotating them by a quarter of a turn. See prior PR.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1824:183,error,error,183,https://qutip.org,https://github.com/qutip/qutip/pull/1824,1,['error'],['error']
Availability,"This fixes the calls to the `qutip.configrc` module in `qutip/__init__.py` when setting up OpenMP. Also, this tidies up a lot of very old code out of `__init__.py` that was testing for ancient versions of SciPy and Numpy. Since we have hard requirements at installation time for those, it's fine for us not to test their versions at initialisation. We still should check the version of Cython because it's an optional dependency, so isn't always constrained by the package manager. Some of the changes deliberately make `qutip/__init__.py` less forgiving of exceptions, especially when it comes to loading up `pyximport`. This is deliberate, even though it may make a couple more errors surface that have previously gone undetected. As it stands right now, the file will causes several errors to be silently ignored, even if they weren't the error we were testing for. That masks problems for a short while, but they usually resurface during use when they're much harder to debug. We should be solving the underlying problems, not sweeping them under the rug. In particular, we've frequently had complaints about `pyximport` failing, or trying to import OpenMP modules that have previously been compiled but aren't currently active, and things like that. This patch won't fix all those problems, but it hopefully will make some of them easier to debug when they do appear. There is more explanation to the logic behind each change in the commit messages. Fix #1470.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1471:680,error,errors,680,https://qutip.org,https://github.com/qutip/qutip/pull/1471,4,"['error', 'mask']","['error', 'errors', 'masks']"
Availability,"This has been going on for a while now - `test_diag_liou_mult` fails about ~5-10% of the time on Travis runs, with only 1 or 2 elements of the huge matrix differing by a small relative tolerance. I _think_ this started around the time that scipy 1.5 was released, which changed how `scipy.linalg.eigh` chose its underlying LAPACK driver, and broke a load of tests that relied on our custom `eigh` functions reproducing the `scipy` behaviour exactly (#1299). At the time we fixed those tests (#1298, #1301), but this intermittent failure of `test_diag_liou_mult` may have slipped through. Equally, at the same time on `dev.major` I think I was moving the `brtools` internals to use the new `CSR` types, which involved rewriting things like `diag_liou_mult`. I don't think this is the cause (though I may have done at the time), because we see the intermittent test failures still on `master`, which does not use the new types yet. I'm not absolutely certain the `eigh` changes are the cause, which is why I don't want to just bump up `atol`/`rtol` in the test without going through and calculating what the acceptable tolerance _should_ be. This is a note for posterity. I'll look into it myself and try and determine the true root cause, and PR an appropriate change.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1431:185,toler,tolerance,185,https://qutip.org,https://github.com/qutip/qutip/issues/1431,4,"['failure', 'toler']","['failure', 'failures', 'tolerance']"
Availability,"This is a fix for #847. Since we already have a minimum requirement for Scipy, the error catching here does not make sense. It is better to leave the error returned from the scipy function `scipy.diags` untouched as the qutip version just wraps the result into a `qutip.Qobj`. . @ajgpitch",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/851:83,error,error,83,https://qutip.org,https://github.com/qutip/qutip/pull/851,2,['error'],['error']
Availability,"This is a real shot in the dark, but it appears to have fixed an issue with lots of random malloc errors popping up on the mac platform (see #1120 and other recent discussions on the google group. It appears this is literally the only call to `free()` in all of qutip so perhaps there is a better way to do low-level memory work? I only know enough C to be dangerous, and found a random hint about setting pointers to NULL after freeing them. I gave it a shot and no longer see the issue on my mac when running py2.7.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1126:98,error,errors,98,https://qutip.org,https://github.com/qutip/qutip/pull/1126,1,['error'],['errors']
Availability,"This is a really great idea! Since we're putting this into version 5, I have a suggestion to take things a small step further and try the following:. Let's have only one function element type that accepts functions of the form `f(t, ...)` where `...` is any signature that does not include `POSITIONAL_ONLY` arguments (i.e. no `/`) or a `VAR_POSITIONAL` argument (i.e. no `*args`) and is implemented as follows:. When the function element is constructed, we use `inspect.signature(f)` to:. * raise an error if any `POSITIONAL_ONLY` or `VAR_POSITIONAL` arguments are present; * determine the list of `POSITIONAL_OR_KEYWORD` argument; * determine whether a `VAR_KEYWORDS` argument is present. When the function arguments are updated:. * if `VAR_KEYWORDS` was present, we just keep all arguments; * if not, set the arguments to just `{k: new_args[k] for k in argument_list}`. When the function element is called:. * we can just just call `f(t, **args)` as before, because `args` already contains either just the named arguments we want or all the arguments if a `VAR_KEYWORDS` argument was present in f. Thoughts?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1609#issuecomment-881312472:501,error,error,501,https://qutip.org,https://github.com/qutip/qutip/pull/1609#issuecomment-881312472,1,['error'],['error']
Availability,"This is a tidied up and completed version of #934. The first commit is credited to the original author (although I fixed up some little concerns in the PR and rebased it), because it's logically built off that PR, although in the end it's a complete reimplementation. This is a complete rewrite of the Husimi Q calculations, to make a more formal split between the iterative (low-memory) and precomputed (faster) algorithms, giving full access to both of them. It's a bit easier to use from a user's perspective, and it's faster than #934 as well. The concept of the precomputed matrix is encapsulated into a class with a cached tensor, so that the same precomputed system can be used for many states of different sizes, and autoexpands (up to the memory limit) to accommodate larger states. This is called `QFunc` as opposed to the standard function interface `qfunc`. It also adds rather more error checking on its inputs, and adds a complete testing suite for the new implementation. Closes #934. ## Examples. Let's say we have some states, and the phase-space coordinates we want to calculate the Husimi Q function at.; ```python; >>> import qutip; >>> states = [qutip.rand_dm(32, density=0.2) for _ in [None]*100]; >>> xs = np.linspace(-2, 2, 401); ```. Now the normal way of calculating the Q distribution for a single state is; ```python; >>> qutip.qfunc(states[0], xs, xs); array( ... ); ```. This already has some speed advantages over the pre-PR version of `qfunc`, because it caches a lot of its intermediary results, to avoid recomputing them. This results in calculating more matrix-vector products than before, but far fewr FLOPS overall. By default, `qfunc` issues a warning if it exceeds a certain amount of memory, and falls back to the low-memory version. You can control this limit with the `precompute_memory` option:; ```python; >>> qutip.qfunc(states[0], xs, xs, precompute_memory=0); qutip/qutip/wigner.py:822: UserWarning: Falling back to iterative algorithm due to lack of mem",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583:895,error,error,895,https://qutip.org,https://github.com/qutip/qutip/pull/1583,1,['error'],['error']
Availability,This is also an error for me. Do I need to downconvert matplotlib for windows as well?. QuTiP Version: 4.6.2; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.24; Matplotlib Version: 3.5.0; Python Version: 3.9.7; Number of CPUs: 12; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Windows (AMD64); Installation path: C:\Users\XXX\Anaconda3\envs\qutip\lib\site-packages\qutip,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-996827395:16,error,error,16,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-996827395,2,"['down', 'error']","['downconvert', 'error']"
Availability,"This is an artifact of `auto_tidyup`; the object in the picture is zero everywhere except the diagonal, whose values are of the order 1e-7. The first step of calculating the trace norm is to do `op @ op.dag()`, which you can see will make all the diagonal entries of order 1e-14. This is below the default tolerance for `auto_tidyup`, so the resulting sparse matrix gets contracted to zero. This happens within `Qobj.norm`, so cannot be intercepted by the user. Can be worked around by temporarily setting `qutip.settings.auto_tidyup = False`, but that's just a work-around. Fixed already in `dev.major`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/952#issuecomment-809684497:306,toler,tolerance,306,https://qutip.org,https://github.com/qutip/qutip/issues/952#issuecomment-809684497,1,['toler'],['tolerance']
Availability,This is an issue with `matplotlib` rather than `QuTiP`. A possible workaround is downgrading to version 3.2.2.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1385#issuecomment-732099730:81,down,downgrading,81,https://qutip.org,https://github.com/qutip/qutip/issues/1385#issuecomment-732099730,1,['down'],['downgrading']
Availability,"This is because I switched the linear solver used by expm to the sparse version added to scipy. The upside is that we can use expm for larger systems, the downside is that the routine now obviously takes longer.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/50#issuecomment-29263828:155,down,downside,155,https://qutip.org,https://github.com/qutip/qutip/issues/50#issuecomment-29263828,1,['down'],['downside']
Availability,"This is causing test failures in all CI builds against scipy 1.5 currently. The other failing tests on scipy 1.5 are due to changes to the handling of `csr` matmul operations, which is fixed in patch #1298. As far as I can see, there is no way to recover the exact same behaviour as existed in scipy < 1.5 (there's optimisations of the `lwork` input to the LAPACK routine), and consequently we are not getting the exact same set of eigenvectors for problem dimensions > 32. This does not mean that `brtools` is suddenly doing something wrong. It just means that the test assumed we would have the exact same output as `scipy`, and we don't any more. . This is an annoying problem to fix, I think. Two possible methods:. 1. attempt to ""trick"" scipy into doing the same pre-1.5 behaviour. Possibly this would involve monkey-patching out the ability of `eigh` to optimise the `lwork` parameters (i.e. stubbing out `scipy.linalg.lapack._compute_lwork` to always return `lwork=18*nrows`, `lrwork=24*nrows` and `liwork=10*nrows` to match `qutip.cy.brtools.ZHEEVR`).; 2. do some linear algebra work to determine that the eigenvectors we have returned are equivalent to the ones scipy has returned. 2 is a better solution, but harder to implement, especially in the presence of degenerate or near-degenerate eigenvalues (of which there are likely a lot around 0). 1 is very unsatisfying, but might be enough. In general, this problem will hopefully be solved a bit more thoroughly when `brmesolve` is updated to use the new data layer types, and we standardise the calculation of eigenvalues and -vectors across QuTiP. Hopefully someone has a better idea than me? @Ericgig, @nonhermitian.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1299:21,failure,failures,21,https://qutip.org,https://github.com/qutip/qutip/issues/1299,2,"['failure', 'recover']","['failures', 'recover']"
Availability,"This is code from a jupyter notebook in which I am trying to plot a graph of mesolve. Times is the variable that specifies the scale of the x axis (in units of s). I need to plot over 1ms, but it takes so long to plot that I think it just get stuck. If I plot over a much smaller scale, like 10^-6, it plots with no problem, but even then it can only do so if the number of points is small. It seems that the issue is with nsteps. As you can see, I have made nsteps very large already and if I make it any larger I get an error. I've tried debugging this to the best of my abilities but I've hit a dead end and I just can't find any useful info on nsteps online. %matplotlib inline. import matplotlib.pyplot as plt; import numpy as np; import qutip as q; import cmath; import matplotlib as mpl; from mpl_toolkits.mplot3d import Axes3D. rc_dict = {; ""figure.subplot.bottom"": 0.11,; ""figure.subplot.hspace"": 0.2,; ""figure.subplot.left"": 0.125,; ""figure.subplot.right"": 0.9,; ""figure.subplot.top"": 0.88,; ""figure.subplot.wspace"": 0.2,; ""figure.figsize"":(10,10/1.61),; ""axes.grid"": True,; ""text.usetex"": True,; ""grid.linestyle"": "":"",; ""grid.color"": ""black"", #; ""legend.fontsize"": 20,; ""lines.linewidth"": 2.5,; ""axes.linewidth"": 1.5,; ""font.family"": [""serif""],; ""font.sans-serif"": ""Times New Roman Bold"",; ""font.size"":26,; }; plt.rcParams.update(rc_dict). qutip_options = q.Odeoptions(; store_states=True,; nsteps=2000000000000; ). si, sx, sy, sz=q.qeye(2), q.sigmax(), q.sigmay(), q.sigmaz(); sp, sm=q.sigmap(), q.sigmam(); state_z_plus=q.basis(2,0); state_z_minus=q.basis(2,1); state_x_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + q.basis(2,1)); state_x_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - q.basis(2,1)); state_y_plus=1.0/cmath.sqrt(2)* (q.basis(2,0) + 1j* q.basis(2,1)); state_y_minus=1.0/cmath.sqrt(2)* (q.basis(2,0) - 1j* q.basis(2,1)). h = 6.62607015e-34; b = 0.1786195317554453 ; b_AC = 3.572390635108906e-05 ; g = 2; u = 9.274E-24 ; w = g*u*b/h . gamma_phi = 442; gamma_minus = 1. epsilon = g*u*b/h",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1376:522,error,error,522,https://qutip.org,https://github.com/qutip/qutip/issues/1376,1,['error'],['error']
Availability,"This is due to numerical error in the integration, you can change the precision in options:; `Options(max_step=1/(wr * 100), atol=1e-9, rtol=1e-9)`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2258#issuecomment-1793050302:25,error,error,25,https://qutip.org,https://github.com/qutip/qutip/issues/2258#issuecomment-1793050302,1,['error'],['error']
Availability,"This is just FYI because I needed some time to track this one down, but I do not think it can be fixed in qutip (or scipy). A Bug in Intel MKL causes scipy.linalg.eig to break and return zeros if the matrix is too large. This in turn breaks wigner.qfunc if the state in question is a density matrix. Possibly related are issues ; https://github.com/scipy/scipy/issues/8713 and https://github.com/scipy/scipy/issues/8205. However the fix mentioned there does not solve the problem for me, so it might be unrelated. If you run into this error, the only workaround I know of is to link scipy and numpy to a different blas library, e.g. openblas. Note that anaconda on windows always uses MKL on intel machines, so you need to install either manually or with pip.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/937:62,down,down,62,https://qutip.org,https://github.com/qutip/qutip/issues/937,2,"['down', 'error']","['down', 'error']"
Availability,"This is just a test. ; Since many failed Travis builds had a malloc error, also according to [this StackOverflow thread](https://stackoverflow.com/questions/19840671/malloc-error-incorrect-checksum-for-freed-object-object-was-probably-mod/19841133) it seemed that XCode was the source of the problem. . I added as osx environment in the travis configuration file xcode 10.2 (should be on osx 10.14 Mojave, not sure though). Build still fails, now at ; ```; Qobj subtraction ... python(2491,0x1192585c0) malloc: Incorrect checksum for freed object 0x7ffe6ff1ad50: probably modified after being freed.; Corrupt value: 0x3ff0000000000000; python(2491,0x1192585c0) malloc: *** set a breakpoint in malloc_error_break to debug; /Users/travis/.travis/functions: line 104: 2491 Abort trap: 6 nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; The command ""nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip"" exited with 134.; ```; which seems a pretty basic test.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/985#issuecomment-485054530:68,error,error,68,https://qutip.org,https://github.com/qutip/qutip/pull/985#issuecomment-485054530,2,['error'],"['error', 'error-incorrect-checksum-for-freed-object-object-was-probably-mod']"
Availability,"This is my first attempt at fixing and slightly extending the functionality of the countstat_current_noise(); function in countstat.py. There were several issues with this function, which I have attempted to rectify as described below. Also its my first pull request (instead of asking anubhav or alex to help), so if I messed it up let me know. 1) The default method, a direct solution using sparse matrices, would fail with an ""exactly singular"" error on small examples (like the well studied single-resonant level or double quantum dot examples). The other sparse methods also suffered from the same issue, as did the 'direct' method for dense solutions. The latter, the dense matrices solver, I have fixed by capturing the error using lstsq() if np.linalg.solve() fails. For the sparse cases there seems to no equivalent fix. One can solve the issue by adding a small finite frequency to the definition of the shot noise. However, this seems like a bit of a bodge, and could cause issues if this small frequency is of the order of some system frequencies. So I have changed the default behavior to use the dense solvers, and added a description of the sparse matrix issues in the function description and in an example notebook I will upload to the example notebooks github. . Maybe someone can suggest a better fix?. 2) There was, in addition, an error in the definition of the shot noise formula in the default sparse matrix direct solution. In addition, the dense methods which used pinv() were also incorrectly defined (they were missing pre and post- multiplication by the 'Q' operator), and would thus give different results from the direct solutions. These issues have been fixed, and everything now fits expected analytical results (see example notebook). 3) I have added a frequency dependence via a list of possible frequencies at which to evaluate the shot noise. 4) I removed the option of passing a pseudo-inverse to the function directly, and changed various other interface things. ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/528:448,error,error,448,https://qutip.org,https://github.com/qutip/qutip/pull/528,2,['error'],['error']
Availability,"This is numerical error from the ODE solver.; Try changing the solver tolerance:; `sesolve(..., options=Options(atol=1e-10)`",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2275#issuecomment-1839300126:18,error,error,18,https://qutip.org,https://github.com/qutip/qutip/issues/2275#issuecomment-1839300126,2,"['error', 'toler']","['error', 'tolerance']"
Availability,This is post for discussion over whether it might be beneficial to switch from `nose` to another unit testing software. . - QuTiP is using nose for unit testing. A [disclaimer](https://nose.readthedocs.io/en/latest/) on that project homepage warns that nose might not be maintained in the future. . - [`nose2`](https://nose2.readthedocs.io/en/latest/differences.html) is the successor to `nose`. It is actively maintained. There are some [differences](https://nose2.readthedocs.io/en/latest/differences.html). . - [pytest](https://pytest.readthedocs.io/en/latest/) is another open-source solution. By comparing [nose2](https://github.com/nose-devs/nose2/graphs/contributors?from=2010-08-01&to=2019-02-27&type=a) and [pytest](https://github.com/pytest-dev/pytest/graphs/contributors?from=2009-04-05&to=2019-02-27&type=a) activity it seems that the latter has grown and is actively updated. . I wonder whether it would make sense to migrate to a more popular (possibly more robust?) software and how much work this would mean. Other implications are not clear to me at this moment.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/958:972,robust,robust,972,https://qutip.org,https://github.com/qutip/qutip/issues/958,1,['robust'],['robust']
Availability,"This is something I can do or help someone with guidance. We simply need to do the following: ; - add intersphinx as extension in the `conf.py` file; - find the functions / objects we use from other libraries and add to `conf.py` such libraries; - change the cited functions classes with the correct reference, e.g. ```:class:`qiskit.QuantumCircuit` ```; The `krotov` library by @goerz shows how to do it, see [here](https://github.com/qucontrol/krotov/blob/0e8a4dbe81bd3986dbc5c4464d49131727fd57ef/docs/conf.py). ; The tilde `~` can be used to cut down the prefix of the cited module/function/class/method, e.g., from ```:class:`qiskit.QuantumCircuit` ``` to ```:class:`~qiskit.QuantumCircuit` ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1528#issuecomment-619395402:549,down,down,549,https://qutip.org,https://github.com/qutip/qutip/issues/1528#issuecomment-619395402,2,['down'],['down']
Availability,"This is somewhat unrelated, but I might also mention that I have experienced getting different answers for the dense and the sparse solver. This has nothing to do with qutip, as I tried calling scipy.linalg.eigvals() and scipy.sparse.eigs() directly. In certain cases, the sparse solver would output completely different values (difference being much larger than the specified relative tolerance), even though the maximum number of iterations was not reached. Not sure what to make of it, but I guess I would trust the dense solver more than the sparse one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/16#issuecomment-16368695:386,toler,tolerance,386,https://qutip.org,https://github.com/qutip/qutip/issues/16#issuecomment-16368695,1,['toler'],['tolerance']
Availability,This is the same error as #681. It is an issue with the Arch linux package. You should install another way.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/690#issuecomment-298933237:17,error,error,17,https://qutip.org,https://github.com/qutip/qutip/issues/690#issuecomment-298933237,1,['error'],['error']
Availability,This is weird it is showing an apparently unrelated failure while saving and loading pickles. And the CI times seem longer.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1498#issuecomment-822631709:52,failure,failure,52,https://qutip.org,https://github.com/qutip/qutip/pull/1498#issuecomment-822631709,1,['failure'],['failure']
Availability,"This issue has a two-fold interest: decreasing test time in general and expand the platforms through which QuTiP is available. . What is the reason it takes so long on Nix? QuTiP, in the [latest PR](https://travis-ci.org/qutip/qutip/builds/628865624?utm_source=github_status&utm_medium=notification), takes on average 20 minutes to run its tests on a given platform. Much of this I think is due to the Cython configurations, indeed the no-cython option takes only 13 minutes. My first suggestion would be to try without Cython if things speed up, from those requirements (@Ericgig set that up and I am not knowledgeable about it). . From your PR on `nixpkgs` do you build on Travis CI or a similar cloud? If you could give a list of time taken by the different tests that would help. . The idea of a subset of tests is interesting (essential tests vs. thorough tests), in general; for example thorough tests could be done only in production and a lighter version could be called with `qutip.testing.run()`. Although, in specific, it is not clear to me how to triage which tests to skip. I would be glad to have the others opinion on this too (pinged them as assignees).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700:116,avail,available,116,https://qutip.org,https://github.com/qutip/qutip/issues/1147#issuecomment-569696700,4,"['avail', 'ping']","['available', 'pinged']"
Availability,"This issue has been answered online on [StackOverflow](https://stackoverflow.com/questions/42178706/python-animation-funcanimation-error-object-is-not-iterable), exactly relative to the QuTiP question (!). If I implement the fix though, the saved mp4 file is empty and another error is given, ; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); <ipython-input-32-9b6a11dd33f8> in <module>(); 41 ani = ani.FuncAnimation(fig, animate, frames=t, init_func=ini, repeat=True); 42 plt.show(); ---> 43 ani.save('bloch_sphere.mp4', fps=20). ~/miniconda3/lib/python3.6/site-packages/matplotlib/animation.py in save(self, filename, writer, fps, dpi, codec, bitrate, extra_args, metadata, extra_anim, savefig_kwargs); 1198 # TODO: See if turning off blit is really necessary; 1199 anim._draw_next_frame(d, blit=False); -> 1200 writer.grab_frame(**savefig_kwargs); 1201 ; 1202 # Reconnect signal for first draw if necessary. ~/miniconda3/lib/python3.6/contextlib.py in __exit__(self, type, value, traceback); 97 value = type(); 98 try:; ---> 99 self.gen.throw(type, value, traceback); 100 except StopIteration as exc:; 101 # Suppress StopIteration *unless* it's the same exception that. ~/miniconda3/lib/python3.6/site-packages/matplotlib/animation.py in saving(self, fig, outfile, dpi, *args, **kwargs); 239 yield self; 240 finally:; --> 241 self.finish(); 242 ; 243 . ~/miniconda3/lib/python3.6/site-packages/matplotlib/animation.py in finish(self); 365 def finish(self):; 366 '''Finish any processing for writing the movie.'''; --> 367 self.cleanup(); 368 ; 369 def grab_frame(self, **savefig_kwargs):. ~/miniconda3/lib/python3.6/site-packages/matplotlib/animation.py in cleanup(self); 403 def cleanup(self):; 404 '''Clean-up and collect the process used to write the movie file.'''; --> 405 out, err = self._proc.communicate(); 406 self._frame_sink().close(); 407 _log.debug('MovieWriter -- Command stdout:\n%s', out). ~/miniconda3",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/799#issuecomment-497315077:131,error,error-object-is-not-iterable,131,https://qutip.org,https://github.com/qutip/qutip/issues/799#issuecomment-497315077,2,['error'],"['error', 'error-object-is-not-iterable']"
Availability,"This latest commit 77c21f8 fixes several bugs in the testing of `qutip.qip.operations.gates` - see the commit message for more details. (Force-pushed a new version of it to increase the commit hash references by one character, so GitHub would pick them up and link them.). We should also add tests that the explicit forms of the gates are correct (comparing to hard-coded arrays) in their base forms. These tests should never really fail, but they should be there as a fail-safe sanity check against somebody changing things in that module in the future.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553:469,fail-safe,fail-safe,469,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-593333553,1,['fail-safe'],['fail-safe']
Availability,"This moves our entire testing apparatus over to GitHub Actions, since Travis has changed its pricing model and we can no longer rely on it. This actually has several advantages for us right now:; - better integration with other GitHub Actions workflows; - more concurrent jobs; - more access to Windows and macOS machines; - easier job dependency graphs within our resources. This first commit does not add in any Windows tests because they're currently known to fail, but the intention is to turn them on. The blocking issue is currently a failure of the multiprocessing capabilities, which also affects mcsolve. We can now reasonably run coverage reporting on every test run, and upload all of them to Coveralls at the end, so we get accurate stats on what lines were actually tested. I've also turned pytest's timer, so it reports all tests that took longer than a second to run. This should really help identify where the real problems in our testing are - right now you should see that there's a `correlation` test that takes around 2 minutes to run, which is a very sizable chunk of the entire test suite. We can concentrate on rewriting the longest tests to make sure we're still testing all the behaviour, without excessively long runtimes. I've been fairly conservative with the number of tests I set in motion. On the free GitHub plan we can have 20 concurrent VMs running across the whole QuTiP organisation, which I think spreads across all repositories and all test runs. With no Windows tests currently active this is 6 test runs plus the documentation build. If we want more, we could consider spending some money ($4/user/month) to convert into a Teams account which gets us 60 concurrent VMs, but I don't see any need to do this right now. All the test runners now start up almost instantly, which really solves a lot of the slowdown we were getting on Travis. The actual speeds of the Linux VMs seem to be similar to what we had on Travis - the walltimes are slightly longer because ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1551:541,failure,failure,541,https://qutip.org,https://github.com/qutip/qutip/pull/1551,1,['failure'],['failure']
Availability,"This no longer has any conflicts. However, as usual, the errors are generated by qutip.tests.test_subsys_apply as given in Issue #430.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/421#issuecomment-184880374:57,error,errors,57,https://qutip.org,https://github.com/qutip/qutip/pull/421#issuecomment-184880374,1,['error'],['errors']
Availability,"This particular segfault is solved by #1288 - it's related to a bust `zheevr` implementation in the Mac OpenBLAS stack somewhere or another (may even be in `scipy`'s binding, we never tracked it down exactly). This doesn't mean all segfaults on Mac are fixed - see also #1160, which I believe still occasionally rears its head and we have no idea about.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-809350853:195,down,down,195,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-809350853,1,['down'],['down']
Availability,"This patch obsoletes #1429, by applying the packaging changes to the current version of `master` rather than needing the new structure on `dev.major`. This patch should (mostly) apply cleanly to `dev.major` as well, so merging this up will be easy - the new automated systems in `setup.py` also mean that the distribution can handle both the current `master` and the `dev.major` package layouts with no changes. The rest of this text is very similar to the original message in #1429. ---. This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged, there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - all directory-tree access is done in a completely platform-agnostic manner, rather than just hoping that Unix-style paths will work on Windows; - the file is tidied and structured into a small script, ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1465:754,avail,available,754,https://qutip.org,https://github.com/qutip/qutip/pull/1465,1,['avail'],['available']
Availability,"This patch overhauls how QuTiP is packaged and distributed. Once this patch is merged to `master` (not just `dev.major`), there will be an option on QuTiP's GitHub Actions tab for people who have write permission on qutip/qutip to build all wheels and optionally release the build to PyPI, making it available on `pip` as a binary release. The major changes are in the files `pyproject.toml`, `setup.py`, `setup.cfg` and `.github/workflows/build.yml`, while `MANIFEST.in` and a new file `VERSION` were also touched. The patch also contains two commits that remove unused OpenMP code and remove a particularly problematic C struct from some inner Python code; the struct and the presence of the dead code caused portability problems, and they in no way change the behaviour of the package. ### Distribution changes:; - there is a GitHub Action which will build all the wheels for CPython 3.6+ on Linux (`manylinux1` x86 and x86_64), macOS and Windows (32- and 64-bit). This action is triggered manually, and the wheels will be available for download afterwards. Optionally, the action will push to PyPI, making the version immediately available on `pip` by binary release.; - `.cpp` files are now distributed with the wheels but not added to source control. This is a step towards a full Cython-free delivery of the QuTiP source (binary releases never require Cython), but right now I think our `setuptools` machinery doesn't quite handle that. ### Changes to `setup.py`; - all package metadata is moved out into `setup.cfg`, which is easier to read and change, and modern `setuptools`' preferred way of doing things; - build requirements are moved into `pyproject.toml` including listing `setuptools` as the build method, in accordance with PEP 517. Any PEP 517-complaint installation and build process will now _enforce_ the presence of `numpy`, `scipy` and `cython` (and `setuptools`) before attempting the build, so no more need for attempted import guards.; - packages are now discovered rather th",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429:300,avail,available,300,https://qutip.org,https://github.com/qutip/qutip/pull/1429,1,['avail'],['available']
Availability,This problem has since gotten worse. The linked notebook is no longer available. I'm going to update the documentation with the numbering convention.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/385#issuecomment-350960435:70,avail,available,70,https://qutip.org,https://github.com/qutip/qutip/issues/385#issuecomment-350960435,1,['avail'],['available']
Availability,"This randomly failing test appears again. It is really getting annoying. I copied the error message from Travis bellow:. ```; =================================== FAILURES ===================================; ___________________________ test_MCSimpleConstStates ___________________________; @pytest.mark.slow; def test_MCSimpleConstStates():; ""Monte-carlo: Constant H with constant collapse (states)""; N = 10 # number of basis states to consider; a = destroy(N); H = a.dag() * a; psi0 = basis(N, 9) # initial state; kappa = 0.2 # coupling to oscillator; c_op_list = [np.sqrt(kappa) * a]; tlist = np.linspace(0, 10, 100); mcdata = mcsolve(H, psi0, tlist, c_op_list, [], ntraj=ntraj,; options=Options(average_states=True)); assert_(len(mcdata.states) == len(tlist)); assert_(isinstance(mcdata.states[0], Qobj)); expt = expect(a.dag() * a, mcdata.states); actual_answer = 9.0 * np.exp(-kappa * tlist); avg_diff = np.mean(abs(actual_answer - expt) / actual_answer); > assert_equal(avg_diff < mc_error, True); E AssertionError: ; E Items are not equal:; E ACTUAL: False; E DESIRED: True; ../../../../miniconda/envs/test-environment/lib/python3.7/site-packages/qutip-4.5.0.dev0+4512014-py3.7-macosx-10.9-x86_64.egg/qutip/tests/test_mcsolve.py:240: AssertionError; ----------------------------- Captured stdout call -----------------------------; 10.0%. Run time: 2.25s. Est. time left: 00:00:00:20; 20.0%. Run time: 4.93s. Est. time left: 00:00:00:19; 30.0%. Run time: 6.67s. Est. time left: 00:00:00:15; 40.0%. Run time: 8.10s. Est. time left: 00:00:00:12; 50.0%. Run time: 10.13s. Est. time left: 00:00:00:10; 60.0%. Run time: 12.40s. Est. time left: 00:00:00:08; 70.0%. Run time: 14.97s. Est. time left: 00:00:00:06; 80.0%. Run time: 16.57s. Est. time left: 00:00:00:04; 90.0%. Run time: 18.81s. Est. time left: 00:00:00:02; 100.0%. Run time: 20.29s. Est. time left: 00:00:00:00; Total run time: 20.34s; ---------- coverage: platform darwin, python 3.7.7-final-0 -----------; Name ; ```; Restart the tests",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749:86,error,error,86,https://qutip.org,https://github.com/qutip/qutip/pull/1209#issuecomment-607477749,2,"['FAILURE', 'error']","['FAILURES', 'error']"
Availability,"This removes the `CI_QUTIP_RELEASE` environment variable and the `--release` flag to `setup.py` in favour of deriving this information from the `VERSION` file. This file should now contain a `.dev` suffix on the `master` and `dev.major` branches to indicate that they are not releases, while release branches will omit it. This means that sdists will no longer attempt to build in local development mode. This also fixes the related bug in handling local versioning when `git` is not installed on the system by making sure any relevant errors are caught. Fix #1514 (after a new sdist release)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1541:536,error,errors,536,https://qutip.org,https://github.com/qutip/qutip/pull/1541,1,['error'],['errors']
Availability,This resolves issue where running subsequent optimisations with pulses; where the number of timeslots changes; Also updated the save_amps method to allow for excluding the time column; and handling any error saving the file,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/281:202,error,error,202,https://qutip.org,https://github.com/qutip/qutip/pull/281,1,['error'],['error']
Availability,This second commit fixes the test error in `test_ptrace.py` - the commit message in 6c85261 explains what I've done. The errors in `brtools` are due to a much more difficult fix to implement. See #1299.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1298#issuecomment-649502147:34,error,error,34,https://qutip.org,https://github.com/qutip/qutip/pull/1298#issuecomment-649502147,2,['error'],"['error', 'errors']"
Availability,"This seems to fix the issue reported by Vlad on the Google group. This fixes the errors when using complex cmath header and typedef variables. Variables must be of float, int, or complex, not np.kind_t",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/322:81,error,errors,81,https://qutip.org,https://github.com/qutip/qutip/pull/322,1,['error'],['errors']
Availability,"This segfault is still _very_ occasionally present on Mac as of QuTiP 4.6.0 and the current master (624405e7). Unfortunately, I've not been able to find any sort of reliable reproducer, so I can't offer a huge amount of insight into what might be causing it. Here's an example output:; ```; jake@tauros$ pytest tests/test_superop_reps.py; =========================================================================================== test session starts ============================================================================================; platform darwin -- Python 3.8.8, pytest-6.2.3, py-1.10.0, pluggy-0.13.1; rootdir: /Users/jake/code/qutip/qutip/qutip/tests, configfile: pytest.ini; plugins: rerunfailures-9.1.1; collected 15 items. tests/test_superop_reps.py ..F............ [100%]. ================================================================================================= FAILURES =================================================================================================; ____________________________________________________________________________________ TestSuperopReps.test_ChoiKrausChoi ____________________________________________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x11f1140d0>. Fatal Python error: Segmentation fault. Current thread 0x000000010c77b5c0 (most recent call first):; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 312 in _optimize_charset; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 120 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 607 in _code; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/sre_compile.py"", line 768 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 304 in _compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/python3.8/re.py"", line 252 in compile; File ""/Users/jake/.anaconda3/envs/qutip-dev/lib/",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502:165,reliab,reliable,165,https://qutip.org,https://github.com/qutip/qutip/issues/1160#issuecomment-826099502,2,"['FAILURE', 'reliab']","['FAILURES', 'reliable']"
Availability,This should be addressed in Pull #801. The only other reported instance of error when using the MKL solver was resolved when the new kwarg `weighted_matching=False` is used in the steady state solver.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/791#issuecomment-358553914:75,error,error,75,https://qutip.org,https://github.com/qutip/qutip/issues/791#issuecomment-358553914,1,['error'],['error']
Availability,"This should be fixed by #428. I tried running tests locally several times, and didn't observe any failures. If Travis checks out on that PR, I'll merge it and close both issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/425#issuecomment-183599625:98,failure,failures,98,https://qutip.org,https://github.com/qutip/qutip/issues/425#issuecomment-183599625,1,['failure'],['failures']
Availability,"This shouldn't segfault (we should detect it and turn it into a Python error, so that's definitely a bug), but do note that you'd need a supercomputer to actually use a system of that size - storing a single operator or state of this system would require 8GB of RAM even if it were the 0 operator.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1406#issuecomment-747009088:71,error,error,71,https://qutip.org,https://github.com/qutip/qutip/issues/1406#issuecomment-747009088,1,['error'],['error']
Availability,This test seems to be failing with. ```; Sparse eigs Hermitian ... /home/travis/.travis/job_stages: line 57: 6699 Segmentation fault (core dumped) nosetests --verbosity=2 --with-coverage --cover-package=qutip qutip; ```; I will try and recreate locally,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/871:127,fault,fault,127,https://qutip.org,https://github.com/qutip/qutip/issues/871,1,['fault'],['fault']
Availability,"This test would fail approximately 1 in 10 times. I have parametrised the test case so pytest sees the different dimension runs as separate elements, which gives us better information on what's going on. I have only seen the test fail on CI on Mac, as best as I remember, and after a bit of experimentation, I was able to reproduce the issue on my Mac at approximately the same frequency as we saw it on Travis, if I was using OpenBLAS. I couldn't reproduce the failures with MKL, so I'm fairly sure this is to do with our use of `eig` instead of `eigh` on Mac/OpenBLAS to avoid segfaults (see #1197, #1288). This makes some sense - the tolerances of `eig` are effectively slightly more permissive than `eigh` when dealing with real numbers, because there's more scope for an eigenvalue to be different by having a small imaginary component (contributes in quadrature) as opposed to only having the linear difference. I'm pretty confident that there's no logic error that caused the tolerances to slip a little, it's just a reality of dealing with an imperfect eigensystem solver, so I've relaxed the test tolerances by just a little. Fix #1431",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1474:462,failure,failures,462,https://qutip.org,https://github.com/qutip/qutip/pull/1474,5,"['error', 'failure', 'toler']","['error', 'failures', 'tolerances']"
Availability,"This trace out only occurred when adding system, and not things like mult. Caused several confusing errors.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/735:100,error,errors,100,https://qutip.org,https://github.com/qutip/qutip/pull/735,1,['error'],['errors']
Availability,"This tries to address https://github.com/qutip/qutip/issues/73 using some type conversion and some fused types. I see a unit test error due to some fortran thing, and a couple of unit test failures, but I don't know if they are related.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/76:130,error,error,130,https://qutip.org,https://github.com/qutip/qutip/pull/76,2,"['error', 'failure']","['error', 'failures']"
Availability,"This updates the licence holders to be the ""QuTiP Admin Team"" (this is similar to how Numpy handle their licensing). This also updates the text of the licence file to a GitHub-readable version of the 3-clause BSD licence, so it should present better information to users as well. At present, erroneous whitespace in the licence file means that GitHub's detection can't tell what exactly the licence is. In addition, having the text of the licence in each file is redundant, and just made it more annoying to edit the files. It also made it much harder to update the information in the licence in order to put the whole admin team as copyright holders, so I have removed it. Again, this is in keeping with how other large-scale projects manage their licensing. We always distribute `LICENSE.txt` with all copies of the QuTiP source (either by clone of the repository, or by sdist). **Changelog**: update licence holders with regards to new governance model, and remove extraneous licensing information from source files.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1579:463,redundant,redundant,463,https://qutip.org,https://github.com/qutip/qutip/pull/1579,1,['redundant'],['redundant']
Availability,"This was reported on the help group; https://groups.google.com/forum/#!topic/qutip/L-MIFFwK0xU. (copying from there); the newest mkl(Math library for intel) version(2019) can not work on QuTiP 4.3.1. I rollback it to mkl(2018.0.3), the qutip.testing then work well. If using mkl(2019.0), there will MKL read problems, like:; ```; File ""C:\Users\ym24chen\Anaconda3\; x = lu.solve(b, verbose=verbose); File ""C:\Users\ym24chen\Anaconda3\envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 164, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000000000008; envs\qutip-env\lib\site-packages\qutip\_mkl\spsolve.py"", line 384, in mkl_spsolve; ```. Env info:; ```; QuTiP Version: 4.3.1; Numpy Version: 1.15.4; Scipy Version: 1.1.0; Cython Version: 0.29.6; Matplotlib Version: 3.0.3; Python Version: 3.7.2; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Windows (AMD64); Installation path: C:\Users\canwa\AppData\Local\conda\conda\envs\qutipenv\lib\site-packages\qutip; ==============================================================================; ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975:202,rollback,rollback,202,https://qutip.org,https://github.com/qutip/qutip/issues/975,1,['rollback'],['rollback']
Availability,"This will repeat the issue quite quickly and always reliability; ```; import traceback; import sys; import qutip.tests.test_interpolate as test_interpolate; import qutip.tests.test_mcsolve as test_mcsolve. def main():. try:; test_interpolate.test_interpolate_brevolve3(); test_mcsolve.test_MCCollapseTimesOperators(). print(""Tests passed""); except:; print(""Test failed:""); traceback.print_exc(). if __name__ == ""__main__"":; main(); ```. The main function is necessary on windows for scripts that use multiprocessing somewhere",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/728#issuecomment-317279772:52,reliab,reliability,52,https://qutip.org,https://github.com/qutip/qutip/issues/728#issuecomment-317279772,1,['reliab'],['reliability']
Availability,"This won't be easy to fix, if the compilation is in the task, `parfor` cannot know about it to wait for it.; The simplest would be to have only the main process able to compile. This code will still raise an error, but the solution would be in the error message.; Otherwise communication between process would be needed and this can get tricky. Also `parfor` will be removed. It says in its [documentation](https://qutip.org/docs/latest/apidoc/functions.html#qutip.parallel.parfor) to use `parallel_map` instead since v3.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1963#issuecomment-1199314433:208,error,error,208,https://qutip.org,https://github.com/qutip/qutip/issues/1963#issuecomment-1199314433,4,['error'],['error']
Availability,Those are subject to some error since the monte carlo method is random. Try to run it again.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/729#issuecomment-317799666:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/pull/729#issuecomment-317799666,1,['error'],['error']
Availability,"Those do match. The absolute error is ~3.5e-5, which is the same as the error made in interpolating this particular cosine function with 1000 points. So again this comes down to considering the error inherent in making an interpolation, like I said in the previous comment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-819560261:29,error,error,29,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-819560261,4,"['down', 'error']","['down', 'error']"
Availability,"Those last two CI failures are exceedingly odd, especially since they're not consistent with each other, and those last two commits essentially don't do anything. I'm unable to reproduce either test failure on my machine. The `mcsolve` error _could_ have just been unfortunate chance, since `mcsolve` is inherently a bit random, but the errors in `test_interpolate.py` are really odd. I can't reproduce it at all, and it's inconsistent - it says that `mesolve` and `mcsolve` have (the same!) issue with one particular case, but in that case `mcsolve` decays exactly to `sesolve`, and that test passed...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734:18,failure,failures,18,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-604114734,4,"['error', 'failure']","['error', 'errors', 'failure', 'failures']"
Availability,"Thought I pitch that to you before continuing with the work. I use pep8 and pyflakes to check my python code on the fly. Currently there are plenty of faults that the two find and anything new I introduce would be drowned in the noise. Instead of turning it off I thought I might as well run through the main files and fix the errors. In principle this should not break anything because it is mostly things like trailing whitespaces, long lines and whitespaces around operators. Making these changes will touch a lot of lines though, so if you'd rather stick with the current codebase that's fine too. I'll just turn off the checkers and mothball this pull request :). So far I came as far as changing about.py and bloch.py",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/6:151,fault,faults,151,https://qutip.org,https://github.com/qutip/qutip/pull/6,2,"['error', 'fault']","['errors', 'faults']"
Availability,"To elaborate a little on the syntax: There's two prefixes (which can also be combined), `.` and `~`. (There's also `!`, but I don't know when you'd ever use that one.). The `~` cuts down the name in the *output* to the last component. That is, if you write a reference using the fully qualified name `` :class:`~qiskit.QuantumCircuit` `` it will show up in the rendered HTML as ""QuantumCircuit"" (without the tilde, it would be the full ""qiskit.QuantumCricuit"". The`.` is for cutting down the name in the *input*, e.g. you could write `` :func:`.mesolve` `` instead of `` :func:`qutip.mesolve.mesolve` `` anywhere, and Sphinx will search its internal index for any fully qualified name that ends in `.mesolve` and use that. This is great for keeping docstrings readable, but I'd avoid using it to refer to *external* functions (from intersphinx). See the Sphinx documentation on [Cross-referencing syntax](https://www.sphinx-doc.org/en/1.8/usage/restructuredtext/domains.html#cross-referencing-syntax) and the explanations at the end of [Cross-referencing Python objects](https://www.sphinx-doc.org/en/1.8/usage/restructuredtext/domains.html#cross-referencing-python-objects) for details.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1528#issuecomment-619413454:182,down,down,182,https://qutip.org,https://github.com/qutip/qutip/issues/1528#issuecomment-619413454,2,['down'],['down']
Availability,"To illustrate the point further for dimension 8 the resulting superoperator has dims `[[[8, 8], [8, 8]], [[8, 8], [8, 8]]]` this amounts to 16777216 numbers. If the differences in each is of the order of 1e-8 this test will not pass, as the resulting total error will be well above 1e-5. . This difference is not seen in scipy versions :; - 1.5; - 1.6; - 1.6.2. Going deeper when running the 8 dimension tests in scipy 1.4 set to verbose this error is thrown. >Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB. looking at it in stackoverflow ; https://stackoverflow.com/questions/54314529/mkl-error-parameter-12-for-large-matrices-with-scipy-linalg-eigvalsh-in-an. and then looking at the PR history in scipy I found this. https://github.com/scipy/scipy/pull/11304. which refers to this issue in particular. https://github.com/scipy/scipy/issues/8205. which seems in consonance with my finding. Scipy 1.4 has issues in its `linalg.eigh()` API Iam surprised this is not producing errors elsewhere. Specially when calculating the tracenorm.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1491#issuecomment-817235661:257,error,error,257,https://qutip.org,https://github.com/qutip/qutip/pull/1491#issuecomment-817235661,5,"['ERROR', 'error']","['ERROR', 'error', 'error-parameter-', 'errors']"
Availability,"To me this is a question of what guarantees our primary type makes, so it's quite a big decision to be taken. I'm not sure I agree that implementing `__array_wrap__` is a good idea - `Qobj` does not support ufunc semantics, and implementing that implies that we're a similar class to `ndarray`, which I don't think we are. I don't think `np.sin(qobj)` should return `ndarray` _or_ `Qobj`; I think it should be a TypeError. To me, we should be rather conservative about adding features like that when there's little tangible benefit - when there's a slightly more explicit alternative syntax, it's better to fail-safe than add potential ""gotchas"". The fact that elementwise operations are not part of the algebra of `Qobj` should be enough of a reason to cause you to have to explicitly ask for it, otherwise it tacitly _becomes_ part of the algebra. For your point three, if that's the case, I'd argue you're doing something wrong: are you constructing the `Qobj` before you've finalised your data? Shouldn't it be; ```python; incomplete_data = np.array([[theta, 0, 0], ...]); return Qobj(np.sin(incomplete_data)); ```; not; ```python; return np.sin(Qobj(incomplete_data)); ```. As a compromise, we could ensure that all our data-layer types (`CSR`, `Dense`, whatever else) will support ufuncs with ndarray syntax; then you could do `Qobj(np.sin(qobj.data))` to be explicitly elementwise if you really wanted, rather than absolutely requiring you to produce a full dense matrix. I'm still not sure I see the use case there, though. I'm in favour of removing `np.array([qobj1, qobj2, ...], dtype=object)` usage inside QuTiP no matter which way we come down on this, though. As far as I recall from seeing it, there no reason to use `ndarray` over a regular Python list in any of our internal use, and it's rarely (if ever) actually returned out of a QuTiP function. Given it might cause subtle differences between different numpy versions, probably best to avoid it. If GSoC applications are imminent, ",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-774058408:607,fail-safe,fail-safe,607,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-774058408,1,['fail-safe'],['fail-safe']
Availability,"To reproduce the problem:. - run Lecture 8 - Adiabatic sweep from qutip lectures with qutip 4.02. - Error message:. Traceback (most recent call last):; File ""as.py"", line 92, in <module>; mesolve(h_t, psi0, taulist, [], process_rho, args); File ""/usr/local/lib/python2.7/site-packages/qutip/mesolve.py"", line 208, in mesolve; _solver_safety_check(H, rho0, c_ops, e_ops, args); File ""/usr/local/lib/python2.7/site-packages/qutip/solver.py"", line 822, in _solver_safety_check; for ii in range(len(e_ops)):; TypeError: object of type 'function' has no len()",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/645:100,Error,Error,100,https://qutip.org,https://github.com/qutip/qutip/issues/645,1,['Error'],['Error']
Availability,"Today I encountered the same problem when installing qutip 4.3.1 from conda-forge channel on Ubuntu 18.04. I have Anaconda 2018.12 with Python 3.7. Installing via pip in the system python didn't work either. The solution was in fact to install from source in anaconda which I did in the following manner:; 1. download the qutip source file from webpage, in my case it was: qutip-4.3.1.tar.gz; 2. write in terminal: ""whereis pip""; 3. choose the anaconda pip location, something like: /home/miriam/anaconda3/bin/pip ; 4. go to the directory where you downloaded the source file and type: sudo *here_goes_the_pip_location_from_previous_step* install qutip-4.3.1.tar.gz; 5. it finally works for me.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-457501976:309,down,download,309,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-457501976,2,['down'],"['download', 'downloaded']"
Availability,Tracing out systems with dimensions 1 on multipilcation creates dimention missmatch errors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/823:84,error,errors,84,https://qutip.org,https://github.com/qutip/qutip/issues/823,1,['error'],['errors']
Availability,"Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic oscillator, finite temperature ... ok; brmesolve: harmonic oscillator, finite temperature, states ... ok; brmesolve: Jaynes-Cummings model, zero temperature ... ok; brmesolve: Check for #572 bug. ... ok; brmesolve: input list of Qobj ... ok; td_brmesolve: passes all brmesolve tests ... ERROR; td_brmesolve: time-dependent a_ops ... ERROR; td_brmesolve: time-dependent a_ops tuple of strings ... ERROR; td_brmesolve: time-dependent a_ops tuple interp ... ERROR; td_brmesolve: time-dependent a_ops & c_ops interp ... ERROR; td_brmesolve: non-Hermitian e_ops check ... ERROR; td_brmesolve: states check ... ERROR; td_brmesolve: split ops #1 ... ERROR; td_brmesolve: split ops #2 ... ERROR; td_brmesolve: split ops, Cubic_Spline td-terms ... ERROR; td_brmesolve: split ops, multiple ... ERROR; td_brmesolve: Hamiltonian args ... ERROR; BR Tools : zheevr ...",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197:956,ERROR,ERROR,956,https://qutip.org,https://github.com/qutip/qutip/issues/1197,12,['ERROR'],['ERROR']
Availability,Travis CI failures for dnorm(),MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/484:10,failure,failures,10,https://qutip.org,https://github.com/qutip/qutip/issues/484,1,['failure'],['failures']
Availability,"Tried to install Qutip in windows 10, but showing following errors while working. .; .; .; .....; U = propagator(H,1, unitary_mode='single'); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\propagator.py"", line 164, in propagator; _safe_mode=False); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 185, in sesolve; progress_bar); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\qutip\sesolve.py"", line 520, in _sesolve_list_str_td; exec(code, globals()); File ""<string>"", line 1, in <module>; File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 462, in load_module; language_level=self.language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 231, in load_module; raise exc.with_traceback(tb); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 215, in load_module; inplace=build_inplace, language_level=language_level); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyximport.py"", line 191, in build_module; reload_support=pyxargs.reload_support); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\pyximport\pyxbuild.py"", line 102, in pyx_to_dll; dist.run_commands(); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 966, in run_commands; self.run_command(cmd); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\dist.py"", line 985, in run_command; cmd_obj.run(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 186, in run; _build_ext.build_ext.run(self); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 339, in run; self.build_extensions(); File ""C:\Users\MTS-144\Anaconda3\lib\site-packages\Cython\Distutils\old_build_ext.py"", line 194, in build_extensions; self.build_extension(ext); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\command\build_ext.py"", line 533, in build_extension; depends=ext.depends); File ""C:\Users\MTS-144\Anaconda3\lib\distutils\_msvccom",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/858#issuecomment-467317662:60,error,errors,60,https://qutip.org,https://github.com/qutip/qutip/issues/858#issuecomment-467317662,1,['error'],['errors']
Availability,"Trying to run the Qutip `propagator` for a Hamiltonian that is a `QobjEvo` object does not work and will result in _Invalid time-dependent format_ error. Example of a piece of code. ```; N = 3; a = destroy(N); t_total = 10; tlist = np.linspace(0, t_total, 1000); H = a.dag()**2 * a**2; H1 = a.dag()*a; H_tot = QobjEvo([H,[H1,np.cos(tlist)]],tlist=tlist); prop = propagator(H_tot, tlist, []); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1166:147,error,error,147,https://qutip.org,https://github.com/qutip/qutip/issues/1166,1,['error'],['error']
Availability,"Turns out the failure in the Python 2 tests was because `Qobj` was declared `class Qobj():`, which supports getting properties, but not setting them. Thus, `isherm = None` was overriding the property call. I have less experience with Python 3, though, so I'm not sure why the reshuffling is causing the `dims` property to be set to `[[], []]`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/99#issuecomment-39650759:14,failure,failure,14,https://qutip.org,https://github.com/qutip/qutip/pull/99#issuecomment-39650759,1,['failure'],['failure']
Availability,"Two small bugs appeared in floquet steadystate in v5, this is a quick patch. **Description**; Two bugs:. 1) Small minus sign error in one of the terms (comparing to v4.7 and what is written in the old toolbox guide). 2) Some kind of data copying confusion with the S and T operators when updating their data contents with the results. Just initiating these two separately seems to fix it. other minor fix: updated the link to the toolbox guide. Some other minor niggles that I didn't fix:; - some of the optional solver methods dont work (seem not to support square right hand sides in '_data.solve()'. I didn't dig much on fixing these though. - the 'splu' method fails for a couple of reasons. I can get it to work by removing the choice of warnings as errors in 'solve.py' (which make it fail in other instances as well i suppose, like with normal steadystate()), making sure the solver option is not passed to steadystate(), and making sure that S and T are always converted back to CSR() after being updated in the iterative bit (in `steadystate_floquet()' they get returned as dense from _data.solve). I did not include those changes here though as the docstrings dont actually indicate support for splu anyway, so perhaps not needed. I am marking this as draft at the moment as I also want to update the test to be sensitive to these bugs (its a bit too coarse at the moment), and double check that the results from this solver are now correct. **Related issues or PRs**; fix #2386",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2393:125,error,error,125,https://qutip.org,https://github.com/qutip/qutip/pull/2393,2,['error'],"['error', 'errors']"
Availability,"Unexpected behaviour in ``Qobj.permute()`` in dev.major branch. **To Reproduce**; E.g. take any permutation of identity matrices for 'large' system size (e.g. `n>=16`), which should still result in the identity matrix:; ```python; >>> import numpy as np; >>> from qutip import tensor, qeye; >>> n = 16; >>> np.isclose(tensor([qeye(2)] * n).permute(list(range(n)))[0,0], 1.0); False; ```. **Expected behavior**; In this example, the permutation should do nothing and full matrix should be diag(1, 1, 1,...), but it is giving diag(0, 1, 1, ...). This occurs for me at `n>=16`. Note, the error is of course not confined to trivial permutations of the identity operator, but this seemed the cleanest case to present. **Your Environment**; QuTiP Version: 5.0.0b1.dev0+b862fe9; Numpy Version: 1.19.2; Scipy Version: 1.5.2; Cython Version: 0.29.21; Matplotlib Version: 3.3.2; Python Version: 3.7.9; Number of CPUs: 4; BLAS Info: INTEL MKL; INTEL MKL Ext: True; Platform Info: Darwin (x86_64). **Additional context**; This affects the `expand` functions (e.g. `expand_operator`, `gate_expand_2toN`).; I do not get this error in v4.5.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1382:585,error,error,585,https://qutip.org,https://github.com/qutip/qutip/issues/1382,2,['error'],['error']
Availability,"Unfortunately I have had some issues with `conda` in CI (for instance, it's solver uses quite a bit of memory, which had readthedocs actually shoot it down when solving the environment at some point). Also build matrices that test various combinations of optional dependencies are much cleaner when using a pure `pip` setup. I see your point though. I'll have to work around it for now. Thanks anyway!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1396#issuecomment-777706377:151,down,down,151,https://qutip.org,https://github.com/qutip/qutip/issues/1396#issuecomment-777706377,1,['down'],['down']
Availability,"Unfortunately not, or at least, certainly not the underlying cause - I was only able to reproduce the segfaults maybe once, but then it disappeared once I attached a debugger. It's very unlikely to be that particular test function, since I used to get them in fairly random locations. Just rearranging the test functions may have caused it to temporarily disappear, but it'll be back eventually until we find out whatever use-after-free or out-of-bounds error's actually causing it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1251#issuecomment-624835925:454,error,error,454,https://qutip.org,https://github.com/qutip/qutip/pull/1251#issuecomment-624835925,1,['error'],['error']
Availability,"Uninstalling cython or using a virtualenv without it will make the risky code make an import error and not crash. cython is needed for installation, but mostly optional at runtime. It can be used to speedup some computations but usually the compilation time is not worth it. Or, you can run tests per section:; ```; import nose; import glob; for testfile in glob.glob("".../qutip/qutip/tests/*.py):; test = testfile[N:-3].repace(""\"",""."") # remove the whole path and the .py: ( ""qutip.tests.test_qobj"" ); nose.run(defaultTest=test, argv=['nosetests', '-v']); ```; test_mccolve, test_stochastic_se and test_stochastic_me will fail/crash, but I expect most of the rest to pass.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694:93,error,error,93,https://qutip.org,https://github.com/qutip/qutip/issues/1084#issuecomment-531884694,1,['error'],['error']
Availability,Update diag_liou_mult test tolerances,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1486:27,toler,tolerances,27,https://qutip.org,https://github.com/qutip/qutip/pull/1486,1,['toler'],['tolerances']
Availability,"Update to 4.1 dev or do [e_ops]. -P. On Feb 9, 2017 06:10, ""WolfgangLechner"" <notifications@github.com> wrote:. > To reproduce the problem:; >; > -; >; > run Lecture 8 - Adiabatic sweep from qutip lectures with qutip 4.02; > -; >; > Error message:; >; > Traceback (most recent call last):; > File ""as.py"", line 92, in; > mesolve(h_t, psi0, taulist, [], process_rho, args); > File ""/usr/local/lib/python2.7/site-packages/qutip/mesolve.py"", line 208,; > in mesolve; > _solver_safety_check(H, rho0, c_ops, e_ops, args); > File ""/usr/local/lib/python2.7/site-packages/qutip/solver.py"", line 822,; > in _solver_safety_check; > for ii in range(len(e_ops)):; > TypeError: object of type 'function' has no len(); >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/645>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqUOt9R6_QP67bFpCcaIVV3D2Su2cks5raxBggaJpZM4L8Gzy>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/645#issuecomment-278673105:233,Error,Error,233,https://qutip.org,https://github.com/qutip/qutip/issues/645#issuecomment-278673105,1,['Error'],['Error']
Availability,"Update to the original 4.5.1 which is already a month old. New inclusions: . Better error message for failed string coefficient compilation.; Run the python 3.8 test in travis. (by Simon Cross ); Fix clebsch function for half-integer (by Thomas Walker); Deprecate graph function (by Jake Lishman); Fix travis warning (by Ivan Carvalho); Fix spin husimi/wigner functions (by maij). I would like the mac stuff to be fixed and moving the mac test to 3.8, but that will take some time.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1215:84,error,error,84,https://qutip.org,https://github.com/qutip/qutip/pull/1215,1,['error'],['error']
Availability,"Updates the README to point various links at the new places in the documentation (this cannot be merged until qutip/qutip-doc#142 is merged and the docs are re-built on the website). As part of this, I tidied up the sections quite a lot and grouped similar ones together to make it a bit easier to read. I added some download and installation badges as well (see #983). Probably the best way to look at this PR is looking at [the rendered version on my fork](https://github.com/jakelishman/qutip/tree/update-readme#qutip-quantum-toolbox-in-python).",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1511:317,down,download,317,https://qutip.org,https://github.com/qutip/qutip/pull/1511,1,['down'],['download']
Availability,Updates to remove some of the errors from the Sphinx docs. Many errors in the control module have yet to be fixed.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/516:30,error,errors,30,https://qutip.org,https://github.com/qutip/qutip/pull/516,2,['error'],['errors']
Availability,Use versions available on conda,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2527:13,avail,available,13,https://qutip.org,https://github.com/qutip/qutip/pull/2527,1,['avail'],['available']
Availability,"Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); __________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py __________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py:2: in <module>; from numpy.testing import assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ____________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py ____________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py:2: in <module>; from numpy.testing import run_module_suite, assert_equal; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:14723,ERROR,ERROR,14723,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"Using `tempfile.TemporaryDirectory()` as a context manager doesn't change the current directory, so we should be allowed to `cd` into the directory it returns... The documentation doesn't mention anything about not being able to as far as I can see, and regardless, if it fails it should raise an `OSError` and not crash the interpreter. I need to get a Windows box to try and debug this myself - it's difficult to know how to proceed without working out exactly what the problem is. We could try using the `cwd` kwarg of `subprocess.run`, but if you're not allowed to change into a temporary directory on Windows in any manner, then that may also fail. We don't want to run `pdflatex` in the user's directory, but ""officially"" we don't know exactly what files it will produce, so we can't reliably clean them all up. That's also not to mention the potential race condition that we get if two processes are trying to draw circuits simultaneously.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605333270:790,reliab,reliably,790,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605333270,1,['reliab'],['reliably']
Availability,"Using the exact same qutip, numpy, scipy and python versions, I still cannot reproduce your error. Perhaps something messed up your installation? I would recommend trying again in a fresh conda environment.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2536#issuecomment-2375830378:92,error,error,92,https://qutip.org,https://github.com/qutip/qutip/issues/2536#issuecomment-2375830378,1,['error'],['error']
Availability,"Using the stable release of QuTiP doesn't really help me: I'm trying to prepare a pull request for QuTiP, so I need to be able to run tests on `master` and my topic branch. I've been relying on the CI to run the tests for me, but that gets tricky once you run into test failures. You can't really debug the tests if you can't run them locally. I'm also not surprised you're not able to reproduce this on your machine on Linux: this is definitely a platform-dependent problem. The issue is that QuTiP's use of Cython is *extremely* brittle. This makes contributing to the library quite difficult. Until the most recent release (4.4.1), these kinds of problems were also affecting me and colleagues a lot as a user, but luckily that seems to have gotten better. Nonetheless, it would be great if QuTiP's low-level parts became even more robust. I know this is not a trivial problem (or I'd contribute some fixes myself), and I'm very thankful for all the core developers' work, but it's definitely a source of frustration.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634:270,failure,failures,270,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540025634,2,"['failure', 'robust']","['failures', 'robust']"
Availability,"Version 5 has `loky` (and mpi) based parallel maps available for when `multiprocessing` doesn't want to cooperate.; All maps are tests of linux, mac and windows.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757:51,avail,available,51,https://qutip.org,https://github.com/qutip/qutip/issues/1202#issuecomment-2029143757,1,['avail'],['available']
Availability,"Very probably. The integrator doesn't know what you're trying to achieve, and you've set it exact tolerance limits (either implicitly or explicitly), so it has to integrate within those limits. If you want the steady-state solution, you can try `qutip.steadystate` instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-886246136:98,toler,tolerance,98,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-886246136,1,['toler'],['tolerance']
Availability,"We can in theory drop that requirement for users - it was there in the immediate aftermath of the Numpy 1.20 release, which broke C-ABI compatibility with previous versions, and we had a couple of problems with people building against Numpy 1.20 but trying to run against a prior version. Our CI and release versions will still all need to be built against Numpy 1.16 (or our minimum supported runtime Numpy) as the lowest common denominator until we drop support for all Numpy releases before 1.20, but we enforce that in our build pipelines anyway. Just to be clear (though I think you knew this):. > Can qutip be updated to run with current versions of Numpy?. QuTiP already runs correctly against Numpy 1.20 and Numpy 1.21, and its runtime requirements on Numpy are uncapped. It's just building from source that'll fail, and that was originally a sort of ""fail-safe"" mechanism. Also `pip install -e .` should automatically do build isolation for you, including installing all the build requirements into a temporary virtual environment, so it should have just worked here. Calling `setup.py develop` directly is kind of out-dated now, though it can still be useful if you're planning on doing Cython development; `pip`'s isolation actually usually means that the Cython compiler can't detect changes any more, so it always needs to rebuild everything. `setup.py develop`, because of its much lower-level status, leaves the source and extension-library files well enough untouched that it can do incremental compilation. If you're not doing Cython development (only Python), `pip install -e .` is much better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1720#issuecomment-974830497:860,fail-safe,fail-safe,860,https://qutip.org,https://github.com/qutip/qutip/issues/1720#issuecomment-974830497,2,['fail-safe'],['fail-safe']
Availability,"We can't implement `__hash__` for `Qobj`, sorry - it's just not possible while following the [Python data model](https://docs.python.org/3/reference/datamodel.html#object.__hash__). The two principle points that a hash function must follow from there are; 1. objects which compare equal with `__eq__` have the same hash; 2. the hash of an object cannot change after instantiation (no mutable types). Unfortunately we fail on both points. `Qobj.__eq__` is a rounding match, because it gives a total `True` or `False` based on a floating point tolerance, not on exact equality. I'm not aware of any hash function which can handle this. Second, the `data` attribute of a `Qobj` is mutable in-place, and so hashing based on the data in the object is not valid. This is the same reason that `list` and `np.ndarray` are also not hashable types. If your cache is just for memoisation over a small number of `Qobj` where you know that floating-point tolerance will never be an issue, you may be able to get away with rolling your own cache decorator which uses linear lookup rather than constant-time. I mean something like; ```python; In [1]: import functools; ...: import qutip; ...:; ...: def linear_cache(f):; ...: cache = []; ...: @functools.wraps(f); ...: def out(*args):; ...: for cached_args, cached_value in cache:; ...: if args == cached_args:; ...: print(""Getting from cache""); ...: return cached_value; ...: print(""Computing new value""); ...: value = f(*args); ...: cache.append((args, value)); ...: return value; ...: return out; ...:; ...: @linear_cache; ...: def negate(x):; ...: return -x; ...:; ...: sx = qutip.sigmax(); ...: sy = qutip.sigmay(); ...: negate(sx); ...: negate(sx); ...: negate(sy); ...: negate(sx); ...: negate(sy); Computing new value; Getting from cache; Computing new value; Getting from cache; Getting from cache; ```; This will lead to degraded performance if you need to do it for a large number of possible inputs, but if you have a relatively small number of inputs an",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277:542,toler,tolerance,542,https://qutip.org,https://github.com/qutip/qutip/issues/1321#issuecomment-658078277,4,['toler'],['tolerance']
Availability,"We get warnings when compiling using the mingw32 compiler under windows.; ```; ""unknown conversion type 'z' in format""; ```; The warnings only seem to occur during the tests and not the build_ext, so there may be something we can do with CFLAGS. ; I have done quite a lot of reading around and it seems many projects suffer from this. There did not seem to be a clear resolution, other than to change the C code. We don't seem to use the 'z' in any of our source, but it is found in all the so files, so I guess it is used in one of the dependencies, and hence I don't think we can take that approach.; The tests still seem to pass, so I am putting it down as a won't fix.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/597:652,down,down,652,https://qutip.org,https://github.com/qutip/qutip/issues/597,1,['down'],['down']
Availability,"We have a number of pull requests that are all nice fixes and enhancements, however we are delaying merging because of travis test failures. I can't see how any of these pull request can be an underlying cause:; #421; #422; #428; #429. So I will merge all these. We can then investigate what is causing some of the tests to fail under this issue.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430:131,failure,failures,131,https://qutip.org,https://github.com/qutip/qutip/issues/430,1,['failure'],['failures']
Availability,"We have decided not to continue to maintain the Ubuntu channel. Please; install from source to using qutip 3.2.; Alternatively you can use the conda-forge channel if you are able to work; with qutip 3.1. On 9 May 2016 at 02:52, Qi notifications@github.com wrote:. > There doesn't seem to be the package released under Ubuntu 16.04 channel.; > After I added the Ubuntu PPA for QuTiP, I got the following error/warning:; > ; > qxd@ubuntu1604$: sudo apt-get update; > ...; > W: The repository 'http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu xenial Release' does not have a Release file.; > N: Data from such a repository can't be authenticated and is therefore potentially dangerous to use.; > N: See apt-secure(8) manpage for repository creation and user configuration details.; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-amd64/Packages 404 Not Found; > E: Failed to fetch http://ppa.launchpad.net/jrjohansson/qutip-releases/ubuntu/dists/xenial/main/binary-i386/Packages 404 Not Found; > ; > Thanks for maintaining it :); > ; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly or view it on GitHub; > https://github.com/qutip/qutip/issues/472",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/472#issuecomment-218122293:403,error,error,403,https://qutip.org,https://github.com/qutip/qutip/issues/472#issuecomment-218122293,1,['error'],['error']
Availability,"We have made some progress! But I also have some questions for the experts here.; * We have added a Users Guide for the new solver, as a new subsection of the ""Monte Carlo Solver"" guide. On my machine, I can build the documentation without problems (there are some warnings, but unrelated to this pull request). However, the check here failed and I do not see a useful error message. Does someone have an idea what is going on?; * We have two example notebooks to add to qutip-notebooks. How to proceed in practice: do we open a separate pull request in qutip-notebooks?; * The _run_one_traj function now exists 3 times, with practically identical code:; https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L197; https://github.com/qutip/qutip/blob/master/qutip/solver/mcsolve.py#L427; https://github.com/pmenczel/qutip/blob/nonmarkovian-mcsolve/qutip/solver/nm_mcsolve.py#L160; I've noticed a small bug that has gone unnoticed because of this: ""step"" [here](https://github.com/qutip/qutip/blob/master/qutip/solver/multitraj.py#L206) should be ""integrate"", I think. Maybe it would be a good idea to make the type of `Result` that is used for single trajectories generic in multi-trajectory solvers (just like the `resultclass` is already generic in solvers in general)? I have implemented that [here](https://github.com/pmenczel/qutip/commit/4a25709f90ed7c6dc2153011ee5a8110f3957c95) and could merge that commit into this PR if you think that's a good idea. Side note: due to a WSL bug, some of my commit timestamps are messed up. Because of that, some commits seem to be shown out of order here...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2070#issuecomment-1446149901:369,error,error,369,https://qutip.org,https://github.com/qutip/qutip/pull/2070#issuecomment-1446149901,2,['error'],['error']
Availability,"We have not modified the sp_eigs code in some time. Also, the only error that I have ever seen is subsys_apply. Taking care of that test would cure most, if not all, of our issues.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/430#issuecomment-184881659:67,error,error,67,https://qutip.org,https://github.com/qutip/qutip/issues/430#issuecomment-184881659,1,['error'],['error']
Availability,"We made good progress updating the documentation for v5, we are mostly missing pages for new features and porting from v4 to v5, which would be hard to write without being up to date with recent progress.; However if you want to take a look with fresh eyes, fix error, improve wording, fix broken links, etc. it would be greatly appreciated.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1898#issuecomment-1356839030:262,error,error,262,https://qutip.org,https://github.com/qutip/qutip/issues/1898#issuecomment-1356839030,1,['error'],['error']
Availability,"We mostly added it to `mesolve` since we always had it for `sesolve`.; Numerical error is not well understood by all users and we can get issues that the solver are wrong because the trace, norm, populations etc. is not constant.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2427#issuecomment-2115919319:81,error,error,81,https://qutip.org,https://github.com/qutip/qutip/pull/2427#issuecomment-2115919319,1,['error'],['error']
Availability,"We ran into the ""Illegal Instruction"" problem too when using the conda qutip package (4.2.0-np113py36_2). Building qutip from source within the same conda environment produced a working qutip. Details of the processor on which the failure was observed:. model name	: Intel(R) Core(TM)2 Duo CPU E8400 @ 3.00GHz; flags		: fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx lm constant_tsc arch_perfmon pebs bts rep_good nopl aperfmperf pni dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm sse4_1 xsave lahf_lm dtherm tpr_shadow vnmi flexpriority. $ uname -a; Linux plantain 3.16.0-4-amd64 #1 SMP Debian 3.16.43-2+deb8u2 (2017-06-26) x86_64 GNU/Linux",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/674#issuecomment-318765815:231,failure,failure,231,https://qutip.org,https://github.com/qutip/qutip/issues/674#issuecomment-318765815,1,['failure'],['failure']
Availability,"We removed the need for cython at run time (officially) recently. It is still needed at installation for installation from sources, but conda can be used if cython is not available. I am not sure about the minimum version, but it does not have to be that recent. Pickling of cdef class is done manually and depend more on pickle version than cython's.; We don't support python2 anymore since numpy also removed it's support, but 4.3 or 4.2 should date from a time it was still supported. Are some of the cython files compiling or are they all failing?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651:171,avail,available,171,https://qutip.org,https://github.com/qutip/qutip/issues/1129#issuecomment-607866651,1,['avail'],['available']
Availability,"We should somehow highlight more in the documentation that:; 1. QuTiP use cubic spline and the time points in `tlist` are not the sampling points used in `mesolve`.; 2. (edited) `tlist` in `QobjEvo` and in `mesolve` do not have to be the same. The _later_ one determines only which point to save the state or calculate the expectation value. From what I experienced, quite some people don't know this. And it slows down their code a lot.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1472#issuecomment-811468770:415,down,down,415,https://qutip.org,https://github.com/qutip/qutip/issues/1472#issuecomment-811468770,1,['down'],['down']
Availability,"We were running the ""Steady State Solvers: Optomechanical System"" from QuTiP examples, but were repeatedly getting errors. Specifically, line 466 of `steadystate.py` tries to query `max_iter_refine` from `ss_args`, but this line is also executed when using a scipy solver, causing a `KeyError`. . We were using scipy specifically so that `use_precond` is a valid option.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1017:115,error,errors,115,https://qutip.org,https://github.com/qutip/qutip/issues/1017,1,['error'],['errors']
Availability,"We will probably change this behavior in version 3. Indeed, the benefits probably out weigh the possible downsides, if any. > On 2013. 11. 12., at 20:51, Piotr Migdał notifications@github.com wrote:; > ; > When it comes to bra*ket results, I would prefer to have a c-number, not an Qobj.; > ; > Why?; > ; > Because typical things like; > ; > if abs(some_bra \* some_ket) > 0.5:; > do_something(); > won't work.; > ; > Also things like creating a Gramian matrix (as np.matrix or np.array) from a set of quantum states won't work (unless I extract them by [0,0]); > ; > Moreover, Qobj.tr() returns a c-number not a Qobj, and here I would expect to have similar behavior for both tr and inner product.; > ; > Also, things like number of particles or dimensionality have (IMHO) little sense for a 1x1 Qobj.; > ; > I do understand why, from matrix multiplication perspective, scalar products may result in a 1x1 Qobj.; > But in mathematics a vector is not a nx1 matrix, and a scalar product is a function to c-numbers.; > ; > Anyway, I do understand that it's not pure mathematics, and there is implementation and other factors.; > ; > @jrjohansson Do you know any particular use-cases when it is preferable to distinguish between 1x1 Qobj and c-numbers?; > ; > —; > Reply to this email directly or view it on GitHub.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/28#issuecomment-28289086:105,down,downsides,105,https://qutip.org,https://github.com/qutip/qutip/issues/28#issuecomment-28289086,1,['down'],['downsides']
Availability,"Weird CI error on f56d27f - the build log suggests there was an error in setup (looks like `numpy` failed to load?), but I don't think that commit actually caused it, since it doesn't touch `setup.py`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030:9,error,error,9,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586401030,2,['error'],['error']
Availability,"Weirdly, that error didn't show up in Travis CI for me before I merged. Working on diagnosing now, thanks for catching it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/417#issuecomment-181628033:14,error,error,14,https://qutip.org,https://github.com/qutip/qutip/pull/417#issuecomment-181628033,1,['error'],['error']
Availability,Well the most naive way I can think of is to overwrite the `circuit.py` file in your local installation of qutip with this new `circuit.py` file. It is located in `qutip/qutip/qip` in your local python package installation folder. If you can't find it then you can go for a fresh install with this file. - Remove your current qutip version with a `pip uninstall qutip`; - Download the latest qutip version from the [website](qutip.org) and replace the `circuit.py` file in `qutip/qip` folder with the one from here.; - Reinstall qutip by running `python setup.py install` from your qutip folder. Of course there are better ways to do this such as pulling this branch locally and updating your qutip version. If you need any help ping me on our gitter channel https://gitter.im/qutip/Lobby.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/679#issuecomment-291664172:372,Down,Download,372,https://qutip.org,https://github.com/qutip/qutip/pull/679#issuecomment-291664172,2,"['Down', 'ping']","['Download', 'ping']"
Availability,"Well, having a higher version of scipy and cython does not seem to fix it and we are plagued again by the `dnorm` issue. Attempting to run with the latest scipy (1.1) one last time. Otherwise, we should decide to include this after QuTiP drops python 2.7, or let it be merged as it is with a warning that python2 is not recommended for the `piqs` module. I cannot understand the error, as locally, all tests are passing.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/861#issuecomment-396131009:379,error,error,379,https://qutip.org,https://github.com/qutip/qutip/pull/861#issuecomment-396131009,1,['error'],['error']
Availability,"Well, your opinion is definitely important, especially regarding core :) Performance is a top requirement there. Technically I think there is no need for square root at all because we can just compare the squared value to the squared tolerance. But I get your point that constant factor may dominate the performance of a small system. It's best to avoid Cython in ""good first issues"", so this one won't be on my list anyway.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1349#issuecomment-794400401:234,toler,tolerance,234,https://qutip.org,https://github.com/qutip/qutip/issues/1349#issuecomment-794400401,1,['toler'],['tolerance']
Availability,What I did in stochastic.py is a totally redundant mess. This is the reason I didn't do the pull request. I feel that an elegant way to add the Milstein with multiple Wiener increments (as well as any other more advanced methods) is to switch to a RHS function which is provided with all A_ops and which returns rho_{n+1}. Since it involves changing of API I want to discuss it with you first.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/35#issuecomment-22015755:41,redundant,redundant,41,https://qutip.org,https://github.com/qutip/qutip/issues/35#issuecomment-22015755,1,['redundant'],['redundant']
Availability,"What happens if you try one of the control pulseoptim notebooks? e.g.:; http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/blob/master/examples/control-pulseoptim-QFT.ipynb. They do not have any cython components. On 27 February 2018 at 13:09, Bilal Riaz <notifications@github.com> wrote:. > I installed using conda-forge channel and installation worked without any; > problems, but when i run following jupyter notebook from example code on; > documentation: (http://nbviewer.jupyter.org/github/qutip/qutip-notebooks/; > blob/master/examples/control-grape-cnot.ipynb); > it gives following error; > [image: grape]; > <https://user-images.githubusercontent.com/34689025/36730450-652e8d18-1c02-11e8-83a8-8741d69f24d6.JPG>; >; > —; > You are receiving this because you modified the open/close state.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/826#issuecomment-368867793>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7dXsxCq1txKUU7RuhVSNZaW3A9oPks5tY_5_gaJpZM4SSlE1>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/826#issuecomment-368895127:597,error,error,597,https://qutip.org,https://github.com/qutip/qutip/issues/826#issuecomment-368895127,1,['error'],['error']
Availability,What is the possible source of this installation error?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/911:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/issues/911,1,['error'],['error']
Availability,"What you are asking about is a common issue when trying to simulate infinite dimensional systems, and has been asked many times. In short, for self-consistency, you must begin with the assumption that your Hilbert space is finite, built the corresponding operators, and go from there. You would check convergence by increasing the state space size until a desired tolerance is met. Using the infinite analytic formulas are incorrect for the truncated space, but people use them a lot since they are familiar.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/683#issuecomment-292995687:364,toler,tolerance,364,https://qutip.org,https://github.com/qutip/qutip/pull/683#issuecomment-292995687,1,['toler'],['tolerance']
Availability,"What's wrong with just using a loop? Adding the `combine` statement is already extra work for you, and using the solver in a loop will be much clearer about what's going on. The `Qobj` object container is not meant to a vector of objects itself - use a list for that, or a numpy array if you're only going to do simple mathematical operations that you want broadcasting for (numpy will broadcast `*`, `/`, `+`, `-` and `**` correctly). The calculational complexity of the solver isn't helped by knowing you're going to do it a few times, but there are some setup costs that QuTiP already gives you the tools to alleviate. `mesolve` constructs a Liouvillian out the Hamiltonian and collapse operators; if you want to reuse the result of this, you should use `qutip.liouvillian` and `qutip.QobjEvo`, and use the `compile` method of the latter. You can pass the result of this directly as the `H` parameter of `mesolve` and it'll skip all the setup. There is some work going on about making a class-based interface to the solvers, which allows easier use of the tools to reduce setup time, but those likely won't be released for some time yet. In the meantime, just use a loop here. There will not be a notable slow down (unlike numpy maths operations) because the Python iteration over elements takes a negligible amount of time compared to single numerical intergration. As a side note, in this particular case you're doing unitary dynamics with state vectors, so this call to `mesolve` is actually translated into one to `sesolve`, which does not need to construct the Liouvillian.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774:1213,down,down,1213,https://qutip.org,https://github.com/qutip/qutip/issues/1323#issuecomment-660459774,2,['down'],['down']
Availability,"When I follow the example to generate animation for bloch sphere plotting, i.e., page 120-122 from [this doc](http://qutip.org/downloads/4.2.0/QuTiP_4.2.pdf), I faced ; `'Axes3D' object is not iterable`; problem, which happens for the `save` function. > .../matplotlib/animation.py in save(self, filename, writer, fps, dpi, codec, bitrate, extra_args, metadata, extra_anim, savefig_kwargs); 1192 for anim in all_anim:; 1193 # Clear the initial frame; -> 1194 anim._init_draw(); 1195 for data in zip(*[a.new_saved_frame_seq() for a in all_anim]):; 1196 for anim, d in zip(all_anim, data):. > .../matplotlib/animation.py in _init_draw(self); 1755 raise RuntimeError('The init_func must return a '; 1756 'sequence of Artist objects.'); -> 1757 for a in self._drawn_artists:; 1758 a.set_animated(self._blit); 1759 self._save_seq = []. >TypeError: 'Axes3D' object is not iterable. My environment:. QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.2.0; Numpy Version: 1.14.1; Scipy Version: 1.0.0; Cython Version: 0.27.3; Matplotlib Version: 2.2.0; Python Version: 3.5.2; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/836:127,down,downloads,127,https://qutip.org,https://github.com/qutip/qutip/issues/836,1,['down'],['downloads']
Availability,"When I run `ffmpeg -r 20 -b 1800 -i bloch_%01d.png bloch.mp4`; from the User Guide's [Generating Images for Animation; ](http://qutip.org/docs/4.1/guide/guide-bloch.html#generating-images-for-animation) section I get the following error:. ```; Option b (video bitrate (please use -b:v)) cannot be applied to input url %04d.png -- you are trying to apply an input option to an output file or vice versa. Move this option before the file it belongs to.; Error parsing options for input file bloch_%01d.png.; Error opening input files: Invalid argument; ```. What works for me instead is this:; `ffmpeg -r 20 -i bloch_%01d.png -pix_fmt yuv420p bloch.mp4`. Note: personally I print files as zeropadded 4-digit number, so I have %04d.png instead of bloch_%01d.png.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/799:231,error,error,231,https://qutip.org,https://github.com/qutip/qutip/issues/799,3,"['Error', 'error']","['Error', 'error']"
Availability,"When I was trying to run a script written with qutip on a cluster with Ubunt 18.04, python 2.7 conda 4.7.12 installed, the following error occurred. Traceback (most recent call last):; File ""test.py"", line 13, in <module>; from qutip import *; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/__init__.py"", line 171, in <module>; from qutip.qobj import *; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/qobj.py"", line 2434, in <module>; import qutip.superop_reps as sr; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/superop_reps.py"", line 61, in <module>; from qutip.superoperator import vec2mat, spre, spost, operator_to_vector; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/superoperator.py"", line 408, in <module>; from qutip.qobjevo import QobjEvo; File ""/home/user/miniconda2/lib/python2.7/site-packages/qutip/qobjevo.py"", line 515; raise TypeError(""Qobj not compatible."") from e",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1119:133,error,error,133,https://qutip.org,https://github.com/qutip/qutip/issues/1119,1,['error'],['error']
Availability,"When calling `ssesolve` or `smesolve` without any stochastic collapse operators but `store_measurement` set to True, there is an IndexError. This PR fixes the error and adds a test for this situation. Example code:; ```python; import qutip as qt; r = qt.ssesolve(qt.sigmaz(), qt.basis(2, 1), [0, 1, 2], options={'store_measurement': True}, ntraj=15); ```",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2423:159,error,error,159,https://qutip.org,https://github.com/qutip/qutip/pull/2423,1,['error'],['error']
Availability,"When reloading qutip in a jupyter notebook, the following error shows up. /home/arjan/.pyxbld/temp.linux-x86_64-3.8/pyrex/qutip/cy/openmp/parfuncs.cpp:703:10: fatal error: src/zspmv_openmp.hpp: No such file or directory; 703 | #include ""src/zspmv_openmp.hpp""; | ^~~~~~~~~~~~~~~~~~~~~~. Due to this, I cannot make adjustments to the qutip code. I've reinstalled qutip, numpy, scipy, matplotlib, gcc (now version 9.3.0) and cython (0.29.27). That, so far, has not solved the issue. I've searched for this issue, and it seems it has been seen before. However, I could not find any information on how to resolve it.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1810:58,error,error,58,https://qutip.org,https://github.com/qutip/qutip/issues/1810,2,['error'],['error']
Availability,"When running eigenstates, function in line 1653 of qobj.py, I get the error ``` AttributeError: 'numpy.ndarray' object has no attribute 'norm' ```. I changed the contents of the function to:. ```python; evals, evecs = sp_eigs(self.data, self.isherm, sparse=sparse, sort=sort,; eigvals=eigvals, tol=tol, maxiter=maxiter); ekets = []; for i in range(len(evals)):; ekets.append(Qobj(evecs[i])); for ket in ekets:; ket = ket*(1./ket.norm()); return evals, ekets; ```. Which seems to work for me. **Your Environment**. QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Current admin team: Alexander Pitchford, Paul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, and Boxi Li; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.2; Numpy Version: 1.20.1; Scipy Version: 1.6.2; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.8.8; Number of CPUs: 8; BLAS Info: INTEL MKL; OPENMP Installed: False; INTEL MKL Ext: True; Platform Info: Darwin (x86_64). This is the machine I am currently using, but I has the same issue in an older (2011) Mac with 10.11.6 and a windows 10 PC.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1661:70,error,error,70,https://qutip.org,https://github.com/qutip/qutip/issues/1661,1,['error'],['error']
Availability,"When using the Qobj.permute function for a specific state and specific permutation we encounter the isherm-property to be set to False, while the state is Hermitian nevertheless. ; I attached the most minimalistic example I could built. . There we calculate a permutation of a small compound state that sets isherm=False, another one that works properly and a transformation (double transpose) that ""repairs"" the Qobj and sets isherm=True again. A double transpose of the state is our current work-around. With isherm=False you cannot calculate the partial trace of the density operator describing the state. [qutip_permute_isherm_bug.txt](https://github.com/qutip/qutip/files/3406839/qutip_permute_isherm_bug.txt)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1051:400,repair,repairs,400,https://qutip.org,https://github.com/qutip/qutip/issues/1051,1,['repair'],['repairs']
Availability,When using the `average_states` solver option `general_stochastic` seemed to error when summing the timeslot states. This PR provides a fix for this. Also included is some hopefully more succinct messages from the safety checks in `general_stochastic`.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1115:77,error,error,77,https://qutip.org,https://github.com/qutip/qutip/pull/1115,1,['error'],['error']
Availability,"Whether it is an issue likely depends on you school of thought. The error comes from the finite accuracy of the solvers. By default, the solutions are found using a method that is accurate 12-order in the step size and looks for absolute and relative errors at the 1e-8 and 1e-6 levels, respectively. If you evolve for long enough then inevitably there is going to be some error, and you will not get perfectly Hermitian matrices. One can accept this, and possibly lower the tolerance levels for more accuracy, or you can take 0.5*(A+A.dag()) to force the Hermicity. What method you use likely depends on your question and taste. Either way, I do not think that I would call this an issue. It is more of a fact of life when doing numerics. Paul. > On Jun 1, 2015, at 20:00, mmensing notifications@github.com wrote:; > ; > I was wondering if this is still an issue? If so I could try to spend some thinking on possible ways to correct the errors.; > ; > —; > Reply to this email directly or view it on GitHub https://github.com/qutip/qutip/issues/122#issuecomment-107400015.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/122#issuecomment-108683653:68,error,error,68,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-108683653,5,"['error', 'toler']","['error', 'errors', 'tolerance']"
Availability,"Which version of QuTiP and which version of Cython do you have? I think this is an issue with a Cython version number parsing error in QuTiP, but if I am not mistaken it has been fixed in the development version of qutip that you find here on github,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/126#issuecomment-42841619:126,error,error,126,https://qutip.org,https://github.com/qutip/qutip/issues/126#issuecomment-42841619,1,['error'],['error']
Availability,"While running the above example on a jupyter notebook I am faced with the following error ; ```; {; 	""name"": ""TypeError"",; 	""message"": ""_remove_margins.<locals>._get_coord_info_new() missing 1 required positional argument: 'renderer'"",; 	""stack"": ""---------------------------------------------------------------------------; TypeError Traceback (most recent call last); File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/pyplot.py:265, in _draw_all_if_interactive(); 263 def _draw_all_if_interactive() -> None:; 264 if matplotlib.is_interactive():; --> 265 draw_all(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/_pylab_helpers.py:131, in Gcf.draw_all(cls, force); 129 for manager in cls.get_all_fig_managers():; 130 if force or manager.canvas.figure.stale:; --> 131 manager.canvas.draw_idle(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backend_bases.py:1919, in FigureCanvasBase.draw_idle(self, *args, **kwargs); 1917 if not self._is_idle_drawing:; 1918 with self._idle_draw_cntx():; -> 1919 self.draw(*args, **kwargs). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/backends/backend_agg.py:387, in FigureCanvasAgg.draw(self); 384 # Acquire a lock on the shared font cache.; 385 with (self.toolbar._wait_cursor_for_draw_cm() if self.toolbar; 386 else nullcontext()):; --> 387 self.figure.draw(self.renderer); 388 # A GUI class may be need to update a window using this draw, so; 389 # don't forget to call the superclass.; 390 super().draw(). File ~/.local/share/virtualenvs/qutip-319cV_iJ/lib/python3.11/site-packages/matplotlib/artist.py:95, in _finalize_rasterization.<locals>.draw_wrapper(artist, renderer, *args, **kwargs); 93 @wraps(draw); 94 def draw_wrapper(artist, renderer, *args, **kwargs):; ---> 95 result = draw(artist, renderer, *args, **kwargs); 96 if renderer._rasterizing:; 97 renderer.stop_rasterizing(). File ~/.local",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903:84,error,error,84,https://qutip.org,https://github.com/qutip/qutip/issues/2400#issuecomment-2142000903,1,['error'],['error']
Availability,"While the tests now pass for Mac on Travis CI, this is the error messages I get locally on Mac, . ```; (base) cln-232-18:qutip nathanshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-4.6.2, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 0 items / 60 errors. ==================================== ERRORS ====================================; __________ ERROR collecting qutip/tests/test_basis_transformation.py ___________; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:171: in <module>; from qutip.qobj import *; qutip/qobj.py:60: in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; qutip/fastsparse.py:406: in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); qutip/cy/__init__.py:1: in <module>; from qutip.cy.spmatfuncs import *; stringsource:105: in init qutip.cy.spmatfuncs; ???; E AttributeError: type object 'qutip.cy.spmatfuncs.array' has no attribute '__reduce_cython__'; ________________ ERROR collecting qutip/tests/test_brmesolve.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = F",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:59,error,error,59,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,4,"['ERROR', 'error']","['ERROR', 'ERRORS', 'error', 'errors']"
Availability,"While this isn't an alternative for this PR, scipy 1.5 made new LAPACK drivers available for `scipy.linalg.eigh`, one or more of which might not have the same problems in OpenBLAS on Mac. Still, we can't require scipy 1.5 when that only released like 5 days ago, but it's interesting going forwards.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1288#issuecomment-649793403:79,avail,available,79,https://qutip.org,https://github.com/qutip/qutip/pull/1288#issuecomment-649793403,1,['avail'],['available']
Availability,"Why though? It _is_ a badly written function and it should be changed. It's a true error, and I wouldn't be confident that there isn't an edge-case bug in it, because it's got so many branches I can't separate them easily in my head when reading it. There's loads of ways to write the same functionality where it's decomposed into smaller bits that are all much easier to check for correctness individually (`mul_dense`, `mul_scalar`, `mul_sparse`, etc) - way easier to verify the top-level dispatching logic into those bits, and then way easier to verify each individual component within them. Also, as long as we have the ""TODO"" error filter turned on, it would be wrong to silence the error that comes from adding a new one, right? If we wanted to skip it, we should turn it off globally (which I'm not against for the TODO thing). If it's in, this way at least lets us use codeclimate properly to see when certain errors were introduced, or when issues in funny-looking functions might have been affected. At any rate, the many-return function is completely removed in `dev.major` since we completely rewrote the backing types.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1506#issuecomment-826657390:83,error,error,83,https://qutip.org,https://github.com/qutip/qutip/pull/1506#issuecomment-826657390,4,['error'],"['error', 'errors']"
Availability,Will address other test errors as they pop up.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/621#issuecomment-273363278:24,error,errors,24,https://qutip.org,https://github.com/qutip/qutip/issues/621#issuecomment-273363278,1,['error'],['errors']
Availability,Will take some trial and error to make this useful but has some interesting stats.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/974:25,error,error,25,https://qutip.org,https://github.com/qutip/qutip/pull/974,1,['error'],['error']
Availability,Will this also restrict all the downstream packages to only use NumPy <1.20 or is it just a restriction when compiling `qutip`?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1429#issuecomment-779700849:32,down,downstream,32,https://qutip.org,https://github.com/qutip/qutip/pull/1429#issuecomment-779700849,1,['down'],['downstream']
Availability,"With that branch, you can pass any function that take time and a args dict that return a Qobj as a `c_ops`:; ```; import qutip as qt; def f(t, args):; return (qt.destroy(3)*t).expm(). res = qt.mcsolve(qt.qeye(3), qt.basis(3,1), [0,1,2,3,4,5], [f], [qt.num(3)], 10); ```; It slows down the solver a lot...",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1398#issuecomment-741910743:280,down,down,280,https://qutip.org,https://github.com/qutip/qutip/issues/1398#issuecomment-741910743,1,['down'],['down']
Availability,"With the latest changes, `Qobj.type` now points at the new `dims_utils.type_from_dims`, which consolidates the type-detection logic in one place and makes it more robust to ragged `dims`. On Python 2 all tests of `qobj`, `tensor` and `dims_utils` now pass locally, I'll try with Python 3 soon.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/389#issuecomment-152941888:163,robust,robust,163,https://qutip.org,https://github.com/qutip/qutip/pull/389#issuecomment-152941888,1,['robust'],['robust']
Availability,With what errors?,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/723#issuecomment-317819602:10,error,errors,10,https://qutip.org,https://github.com/qutip/qutip/issues/723#issuecomment-317819602,1,['error'],['errors']
Availability,Work in progress. Fixed error in globalphase,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/145:24,error,error,24,https://qutip.org,https://github.com/qutip/qutip/pull/145,1,['error'],['error']
Availability,Would it be useful to add error bars to mcsolve results once the averages are computed?,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1032:26,error,error,26,https://qutip.org,https://github.com/qutip/qutip/issues/1032,1,['error'],['error']
Availability,"Would it help to run just a part of the tests?; `nose.run(defaultTest=""qutip.tests.test_mcsolve"", argv=['nosetests', '-v'])`; That way you can go around the td_brmesolve's tests. . Can anybody who has this error (@arnelg) and some time, check if:; 1. You get the same error with 4.4.1, nobody touched the brmesolve for years as far as I know.; 2. Only brmesolve fails, here is a script that will run all other tests, just set `path_to_qutip`; ```; path_to_qutip = ""/home/.../qutip""; import glob; testfiles = glob.glob(path_to_qutip+""/qutip/tests/*.py""); testfiles = [testfile for testfile in testfiles if ""br"" not in testfile] # skip brmesolve stuff; testfiles = [testfile for testfile in testfiles if ""__init__"" not in testfile] # remove __init__.py; tests = [testfile.split(""/"")[-1][:-3] for testfile in testfiles]; for test in tests:; nose.run(defaultTest=""qutip.tests."" + test, argv=['nosetests', '-v']); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018:206,error,error,206,https://qutip.org,https://github.com/qutip/qutip/issues/1093#issuecomment-540042018,2,['error'],['error']
Availability,"Yeah, I didn't notice before because I always run the tests locally before I push big things like that, and all the solver tests run locally, since it was just a packaging mix-up. As long as changing `__setitem__` means that `SolverOptions(seeds=[1, 2, 3])` throws an error (for now), then it's all good.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1338#issuecomment-675511997:268,error,error,268,https://qutip.org,https://github.com/qutip/qutip/pull/1338#issuecomment-675511997,1,['error'],['error']
Availability,"Yeah, I would think so too. Most of the times the energy gap is quite large compared to calculation errors.; But I'm really a newbie, so I'm not sure what the day-to-day users need. It would be great if a contributor could pitch in if this is a good idea.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1800#issuecomment-1103429187:100,error,errors,100,https://qutip.org,https://github.com/qutip/qutip/issues/1800#issuecomment-1103429187,1,['error'],['errors']
Availability,"Yeah, I'd like to get a better isolated failure case first, but once I've done that, I think it makes sense to report this to CVXOPT especially.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/484#issuecomment-222058027:40,failure,failure,40,https://qutip.org,https://github.com/qutip/qutip/issues/484#issuecomment-222058027,1,['failure'],['failure']
Availability,"Yeah, definitely there's no point running tests that aren't really testing the package properly. I would hope that if we're much more aggressive about converting time-dependent lists into QobjEvo objects inside `mesolve`, `mcsolve` and `sesolve` (or the class-based versions of them), we could significantly reduce the amount of testing that needs to be done with them. Most of the tests of time-dependent formats would then occur in the QobjEvo tests. We could still test all the configurations of the solvers without too heavy a time penalty. If we only use a small number of different time-dependent operators, we can compile them all only once, and have `pytest` manage the resources through shared fixtures. That would really cut down the run times, especially for the current ""slow"" tests. Another avenue for cutting down run time is if we could merge say the MKL and OpenMP tests into one Travis job - the setup time for one job is about 2.5 minutes, and that's before any tests have run at all. I would hazard a guess that having MKL but not OpenMP is a pretty rare case (maybe more common on high-performance clusters where people submit single-cpu jobs?).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182:735,down,down,735,https://qutip.org,https://github.com/qutip/qutip/issues/1217#issuecomment-604348182,2,['down'],['down']
Availability,"Yeah, don't worry about that. That's a pretty unfortunate error (I've never actually seen it before) but it's certainly not related to your changes. It means that the numerical intergrator we use for solvers couldn't proceed properly (failed to converge in, or that kind of thing). It will be related to the random seed that `mcsolve` used that time round, but certainly not your fault.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1274#issuecomment-647047749:58,error,error,58,https://qutip.org,https://github.com/qutip/qutip/pull/1274#issuecomment-647047749,2,"['error', 'fault']","['error', 'fault']"
Availability,"Yeah, it runs completely normally for me... ![jupyter output](https://i.imgur.com/9LkOQzO.png). I can only think that there is some problem with the temporary directory on Windows, since the calls to all the external programmes are the functionally the same. Do you get any error messages in the kernel log? If not, can you try running it in raw `python` or `ipython` on the command line, and just run; ```python; from qutip.qip.circuit import QubitCircuit; qc = QubitCircuit(2); qc.add_gate(""CNOT"", 0, 1); qc.png; qc.svg; ```; and see if there are any error messages?. I kind of hope it's a mistake in my code somewhere, because if it is the `tempfile.TemporaryDirectory` on Windows then I'll have to re-think some parts of #1181 too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820:274,error,error,274,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605289820,2,['error'],['error']
Availability,"Yeah, looking at it, this functionality still does not exist. The `essolve` function is pretty out-of-date (its last real activity was back in 2013), and may well be completely deprecated in an upcoming version of QuTiP. Hopefully `qutip.mesolve` should be a near drop-in replacement for you (`c_ops_list` is now called `c_ops`, but other than that you're fine), and it may well be a lot faster as well. @Ericgig, @ajgpitch: shall we commit to maintaining `essolve` and/or the `eseries` class, or issue a deprecation warning as soon as possible? They're pretty unloved, and `QobjEvo` really is a far far more general way of specifying time-dependence. My vote (should I have one) is for deprecation. I'm always in favour of slimming down codebases if it doesn't remove useful functionality!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1262#issuecomment-628260933:733,down,down,733,https://qutip.org,https://github.com/qutip/qutip/issues/1262#issuecomment-628260933,1,['down'],['down']
Availability,"Yeah, so this bug is fixed in QuTiP 4.5.3 and above. You can also fix it by downgrading Numpy to 1.19 or below (in 1.20 they changed how they handle object arrays, which broke us and a few other packages). That's strange that Conda won't let you upgrade beyond 4.5.2; there's no constraint on our conda package which should prevent it. Do you have any other packages installed that depend on QuTiP? If so, they might be pinning our version. What happens when you run `conda update qutip`? (By the way, you can also install `qutip` from `pip` easily since the 4.6 release).",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1634#issuecomment-895511734:76,down,downgrading,76,https://qutip.org,https://github.com/qutip/qutip/issues/1634#issuecomment-895511734,1,['down'],['downgrading']
Availability,"Yeah, that's a very fair point. If you absolutely want to do it in a sparse manner too, there's `CSR.as_scipy()` available as well that'll let you munge our data however you like. I'm still not a fan of `Qobj.__array__`, but happy enough to go with it since it seems everyone else likes it (we should also reinstate it in `dev.major`). We can set `Qobj.__array_ufunc__ = Qobj.__array_function__ = None` to disable ufuncs and other numpy functions unconditionally. It's unlikely this will annoy anyone, since we've not had a complaint that ufuncs on `Qobj` does something super weird since `Qobj.__array__` was implemented. We can leave it unless Simon wants to make some more of the case for allowing ufuncs on `Qobj`, or happy to go with this? (tag @hodgestar.). We can also give it a day or two for Michael (tag @goerz), but it seems people are generally resolved to keeping the functionality he originally wanted anyway, even with numpy 1.20 changing its behaviour.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-774128466:113,avail,available,113,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-774128466,1,['avail'],['available']
Availability,"Yeah, that's good. There are plenty of cases (like in the tests) where we want to change something like `ntraj` on-the-fly within the same script. Even just in regular REPL work, I mess around with tolerances and things like that, and it's much much easier to be able to do that case-by-case, rather than having to set global state, which often ends up with boilerplate when you're trying to be safe - you can't do quick checks as one-liners, and you have to use `try/finally` if you only want to temporarily set it.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1297#issuecomment-651144540:198,toler,tolerances,198,https://qutip.org,https://github.com/qutip/qutip/pull/1297#issuecomment-651144540,1,['toler'],['tolerances']
Availability,"Yeah, this feels like a bug in `propagator` - I bet at some point we do `qeye(L.shape[0])` instead of `qeye(L.dims[0])`. There's sometimes quite a bit of that in older code - it used to slip through because we weren't super strict about dimension handling, so in certain cases (like this one), we'd accept bad dimensions. I might try and have a look tonight (UK time), if I have time - I've wanted to break up the large `propagator` monolith into smaller components for quite a while. ---. About numerical precision: if you want to try increasing the precision of the integrators, try passing `options=qutip.Options(nsteps=1_000_000, atol=1e-12, rtol=1e-10)` to `propagator`. `atol` and `rtol` are absolute and relative tolerances respectively, and `nsteps` is the number of subdivisions the integrator is _allowed_ to take (if it reaches its tolerance goals, it won't take all of them). You'll find that `atol` and `rtol` will have only a loose relation to the tolerance of your fidelity value, because there's a _lot_ of floating-point operations between those points in which the errors compound, and there's a hard limit on the tolerances the integrator can achieve, so you might not be able to get a perfect answer. The fidelity calculation involves finding the square root of a density operator, so that's another large possible source of error. About times: if you only care about the state at the last time, setting `tlist = np.linspace(0, x, 201)` is quite inefficient. Instead, set `tlist = [0, x]`, and then pass `options=qutip.Options(nsteps=<very very big integer>)`. It's more efficient because it doesn't need to achieve tolerance goals and construct/store `Qobj` instances at every intermediate timestep. Temporary workaround: this is _very_ temporary, and generally a bad idea in QuTiP, but you can ""flatten"" all your operators into a single space for now, while we implement a fix. To do that:; ```python; # initial setup; H = qutip.tensor(...); c_ops = [qutip.tensor(...)]. original",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199:720,toler,tolerances,720,https://qutip.org,https://github.com/qutip/qutip/issues/1585#issuecomment-865903199,2,['toler'],"['tolerance', 'tolerances']"
Availability,"Yeah, this is a ""true"" merge of the qutip-doc repository with this one. Technically all the commits have been rewritten (you'll find that the hashes won't match between the repositories), but they'll all be credited to the same authors on GitHub. Everyone will actually get the credit ""twice"" - once for the archived qutip/qutip-doc repo, and once for the new commit object in here. If anybody was in the habit of signing their commits with a private key, that will have been lost, but the only people that's likely to have affected are me and the GitHub merge bot. It doesn't mean anything in the greater scheme of things, because I've signed the merge commit. (signing is mostly just a way of verifying that the author really was who it says it was). *edit:* I checked, the only two types of signed commits in qutip/qutip-doc are those from me and those from the GitHub bot. Answers:; - I'll migrate all open issues on qutip-doc into the qutip/qutip repository, and tag them with a ""docs"" tag. GitHub has a built-in mechanism to migrate issues.; - We'll archive it, posting a message on the front page of it (or the README if GitHub doesn't have a separate mechanism). We need to leave the repository up and available on the web, because old documentation refers to it in links.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1513#issuecomment-830106458:1210,avail,available,1210,https://qutip.org,https://github.com/qutip/qutip/pull/1513#issuecomment-830106458,1,['avail'],['available']
Availability,"Yeah, this is just one of those silly things caused by ImageMagick choosing a _very_ generic name and then getting burned (hence the swap to `magick`...). Probably the best thing to do is to try and run `convert` once at discovery and to see what happens. If you run `convert -version` on an IM6 install, does it output a string that looks like; > Version: ImageMagick 6.blahblahblah; or something similar?. If so, try this patch: [check_convert.txt](https://github.com/qutip/qutip/files/4397692/check_convert.txt). It rearranged the functions a little for a more logical order (I'll rebase the PR before merge), but the main change is that it now tests the output of `convert -version` to see if it contains the substring `imagemagick` (case insensitive). The reason to do this now is because if we allowed the error to propagate later, we'd have to check it every time and it would mean we'd have to pass through the ""special cases"" more frequently, and it would make the core logic more complex. Also, we _could_ catch a subprocess `CalledProcessError` later (say if one of the other commands were to fail for some reason) and re-raise our own, but to be honest I didn't want to over-engineer what ought to have been a relatively simple PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526:812,error,error,812,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605504526,2,['error'],['error']
Availability,"Yeah, using `np.int`, `np.long` or `np.longlong` when it _matters_ what size they are is a recipe for disaster. C99 guarantees that `stdint.h` will be available, so you can always safely use `np.int8`, `np.int16`, `np.int32` and `np.int64` if you know the size you need. If you just need ""at least"" whatever, then in C `int` is >= 16-bit, `long` is >= 32-bit and `long long ` is >= 64-bit.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1313#issuecomment-655142649:151,avail,available,151,https://qutip.org,https://github.com/qutip/qutip/pull/1313#issuecomment-655142649,1,['avail'],['available']
Availability,"Yep, looks like my error.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/807#issuecomment-360949839:19,error,error,19,https://qutip.org,https://github.com/qutip/qutip/issues/807#issuecomment-360949839,1,['error'],['error']
Availability,"Yep, the `resolve_gates()` function is quite messy right now and works on a case by case basis. In the FREDKIN case, it was giving this error. The issue would atleast involve resolving the FREDKIN gate properly as a starting point. . As an aside, @BoxiLi Should this issue be moved to the qutip_qip module already? Or should it wait since everything is not setup there yet?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1330#issuecomment-794864771:136,error,error,136,https://qutip.org,https://github.com/qutip/qutip/issues/1330#issuecomment-794864771,1,['error'],['error']
Availability,"Yes `multiprocessing` is used by `mcsolve`. If there are issues pickling function, then it will cause errors. I hope that this could be fixed with the function `set_start_method` from `multiprocessing`. In the segfault case, the problematic function call lapack from cython by using scipy interface. So it could be a couple of things. On mac, there is the accelerate blas/lapack implementation which does not have the same interface, so if it links to this, then a segfault would not be surprising. But I can't say for sure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1197#issuecomment-596712910:102,error,errors,102,https://qutip.org,https://github.com/qutip/qutip/issues/1197#issuecomment-596712910,1,['error'],['errors']
Availability,"Yes `nsubsteps` and `tlist` are the only way to control precision with `photocurrent_mesolve`, `mcsolve` does not support a mix of `c_ops` and `sc_ops` so if both of them are needed `photocurrent_mesolve` is your only option available.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1357#issuecomment-691366231:225,avail,available,225,https://qutip.org,https://github.com/qutip/qutip/issues/1357#issuecomment-691366231,1,['avail'],['available']
Availability,"Yes, I also tried using these packages. If you see #484 and all the; corresponding links you will see why we switched to the pip install. It's questionable whether we should have a feature that relies on a library; that is not maintaining a conda package. But that is a question for another; day. On 4 June 2018 at 10:51, Shahnawaz Ahmed <notifications@github.com> wrote:. > There are conda versions for cvxopt and cvxpy (https://anaconda.org/mcg/; > cvxpy) but nobody seems to be maintaining or updating them. Installing; > the conda version downgrades everything else. I will first try to fix the; > yml issue. Nothing seemed to be incorrect in the YML file, and the travis; > CI linter is not available, so I am not sure what is wrong with the file.; > Will update if I make progress.; >; > —; > You are receiving this because you authored the thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/pull/873#issuecomment-394298574>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/AIxX7e0B0n4eEJ-sZ3Ts6PTblD_UxUD8ks5t5QMkgaJpZM4UYSyh>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394303776:543,down,downgrades,543,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394303776,2,"['avail', 'down']","['available', 'downgrades']"
Availability,"Yes, I am running on OS X. Thanks for the advice, it worked. I see that matplotlib 3.1.0 and 3.3.0 don't give any errors but anything in between would result into the error. ; PS: I was using 3.1.3",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1326#issuecomment-664736506:114,error,errors,114,https://qutip.org,https://github.com/qutip/qutip/issues/1326#issuecomment-664736506,2,['error'],"['error', 'errors']"
Availability,"Yes, I have seen similar errors on my windows when running the tests. Looks like memory error; ```; ======================================================================; ERROR: Counting statistics: current and current noise in a DQD model; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_countstat.py"", line 73, in test_dqd_current; rhoss = steadystate(L); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 290, in steadystate; return _steadystate_direct_sparse(A, ss_args); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\steadystate.py"", line 460, in _steadystate_direct_sparse; weighted_matching=ss_args['weighted_matching']); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 393, in mkl_spsolve; x = lu.solve(b, verbose=verbose); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 170, in solve; np_x, np_error); OSError: exception: access violation reading 0x0000000099EC80F8. ======================================================================; ERROR: MKL spsolve : Hermitian (real) solver; ----------------------------------------------------------------------; Traceback (most recent call last):; File ""C:\Users\Boxi\Miniconda3\envs\qutip-dev-py3\lib\site-packages\nose\case.py"", line 197, in runTest; self.test(*self.arg); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\tests\test_mkl.py"", line 230, in test_mkl_spsolve10; y = mkl_spsolve(A, b, hermitian=1); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 414, in mkl_spsolve; lu.delete(); File ""C:\Users\Boxi\OneDrive\Studium\qutip-project\qutip\qutip\_mkl\spsolve.py"", line 208, in delete; byref(c",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/975#issuecomment-483000016:25,error,errors,25,https://qutip.org,https://github.com/qutip/qutip/issues/975#issuecomment-483000016,3,"['ERROR', 'error']","['ERROR', 'error', 'errors']"
Availability,"Yes, I would suspect it is numerical errors. How large is the nonhermicity? For example, what does something like `abs(rho - rho.dag()).data).max()` give? In some places in qutip where we know that a Qobj is hermitian we enforce it with something like `rho = (rho+rho.dag())/2`, but I'm not a big fan of this introducing more of this kind enforcement on the matrix data level. But we could perhaps have some convenient functions for helping users enforcing hermiticity?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/122#issuecomment-42121559:37,error,errors,37,https://qutip.org,https://github.com/qutip/qutip/issues/122#issuecomment-42121559,1,['error'],['errors']
Availability,"Yes, configuring a bot is beneficial for several tasks. However, the scope would be broad then. Narrowing down seems reasonable. What do you think about opening a new issue, mentioning several examples that can be worked on?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1089#issuecomment-1852573254:106,down,down,106,https://qutip.org,https://github.com/qutip/qutip/issues/1089#issuecomment-1852573254,1,['down'],['down']
Availability,"Yes, eigenenergies computation, while technically required, is too strict in most case. Other options would be to make the check optional and/or adding a tolerance.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-612477122:154,toler,tolerance,154,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-612477122,1,['toler'],['tolerance']
Availability,"Yes, string will be turned to python function when cython is not available.; It is possible to use python even if cython is available if preferred.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1082#issuecomment-530016047:65,avail,available,65,https://qutip.org,https://github.com/qutip/qutip/pull/1082#issuecomment-530016047,2,['avail'],['available']
Availability,"Yes, that also fails, with the same error (on Windows):. `Building module rhs44481 failed: ['distutils.errors.DistutilsPlatformError: Unable to find vcvarsall.bat\n']`. I just realized that this particular problem is probably just that this Windows VM doesn't have Visual Studio installed (maybe I should try again with the 20GB developer's VM that Microsoft has). So as a user on Windows, having installed QuTiP through Anaconda, I can't do any time propagation? Somehow, I would have thought that having Cython though Anaconda would also come with some compiler like gcc (which is what it seems to be doing on the Mac). Otherwise, that seems like a very limiting factor to any Windows user. There's no way to run QuTiP while preventing it to cythonize time-dependencies, right? That is, aside from workarounds like the one I did here: https://github.com/qucontrol/krotov/blob/247d4066c83ee4923769b934486da9dae95f6879/src/krotov/objectives.py#L175. Anyway, this is likely not really the same issue as the original problem on the Mac.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/932#issuecomment-464148578:36,error,error,36,https://qutip.org,https://github.com/qutip/qutip/issues/932#issuecomment-464148578,2,['error'],"['error', 'errors']"
Availability,"Yes, the Tavis tests fail due to the missing Normalize class from Matplotlib. This caused the failure in #248 and is why I resorted to the try statement on loading.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/249#issuecomment-61443740:94,failure,failure,94,https://qutip.org,https://github.com/qutip/qutip/pull/249#issuecomment-61443740,1,['failure'],['failure']
Availability,"Yes, the tests ran locally on a test environment I had created. The metrics test ran fine on Travis indirectly on this other PR : https://travis-ci.org/qutip/qutip/builds/379109476. . Note that the python 2.7 failures are not related but are of similar nature with something changing for supplying arguments in tuples vs directly passing them. However, in hindsight, I should have tried a rebuild on this PR. But I could find no way of re-starting the tests here as travis didn't see any change to trigger a new test. I will test this with a fresh PR.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/873#issuecomment-394276414:209,failure,failures,209,https://qutip.org,https://github.com/qutip/qutip/pull/873#issuecomment-394276414,1,['failure'],['failures']
Availability,"Yes, these are the implementation issues I discussed. Calling the ode solver of course takes small steps, with the step size based on the requested tolerance level. Our root finding is trivial in this case. We linearize the evolution and then find the intercept. It almost always works in a single step, and is quite efficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/344#issuecomment-105092235:148,toler,tolerance,148,https://qutip.org,https://github.com/qutip/qutip/issues/344#issuecomment-105092235,1,['toler'],['tolerance']
Availability,"Yes, this can happen.. But I dont think this is a bug or error, although it can be confusing. There is always a risk of namespace collisions when importing different packages into the global namespace. For example, many conflicts of this kind occur between the math and numpy packages.. The only way to get around it safely is to import packages in different namespaces.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/25#issuecomment-18951570:57,error,error,57,https://qutip.org,https://github.com/qutip/qutip/issues/25#issuecomment-18951570,1,['error'],['error']
Availability,"Yes, this error always comes up when doing something wrong. However, in order to understand what that is, we need to see the actual system being solved.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879092131:10,error,error,10,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879092131,1,['error'],['error']
Availability,"Yes, we have binary operator defined for `Data` with object of the same type, but since for a while we only used `CSR`, there are probably some in the code where the `Data` types can be mixed. It will cause problem when we start using multiple types together. Also `/=` is used in `Qobj`, so some `TfTensor` no having them will cause problem as it is right now. We could remove operator support or fully support them, but the present something used, partially supported will cause issues. I prefer full support. By adding operator in `base.Date`, new type don't need to do anything so it's not causing difficulties when creating new types and it will work as expected everywhere, so we don't have to hunt them down. It also make the code cleaner.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1647#issuecomment-908306079:710,down,down,710,https://qutip.org,https://github.com/qutip/qutip/pull/1647#issuecomment-908306079,1,['down'],['down']
Availability,"Yes, we should catch any error before the ode solver when we can,",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1605#issuecomment-879192853:25,error,error,25,https://qutip.org,https://github.com/qutip/qutip/issues/1605#issuecomment-879192853,1,['error'],['error']
Availability,"You can control the tolerance of the output of the solvers with the `qutip.Options()` class, in particular the parameters `atol`, `rtol` and `nsteps`. It's highly unlikely that you'll ever get them to be _exactly_ equal due to the realities of floating-point. A more relevant measure is the size of the overlap `r1.overlap(r2)`. Again, this will never be exactly 0, but by setting the tolerances of the solvers suitably, you can bound it to an acceptable value. This is unfortunately just one of the realities of numeric computing - floating-point calculations accumulate error, and it's up to the user to specify what level of error is tolerable.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1686#issuecomment-938617719:20,toler,tolerance,20,https://qutip.org,https://github.com/qutip/qutip/issues/1686#issuecomment-938617719,5,"['error', 'toler']","['error', 'tolerable', 'tolerance', 'tolerances']"
Availability,"You could try restarting them if you like, but it's been an issue hitting a few PRs now - I've had random test failures on two or three commits in #1181, now here, and I think one of your recent ones did too?. The oddest thing is that I can't reproduce the failures on my machine at all, so it's difficult to find out what's going on. I may try and make a fake PR which disables all but the nocython tests to see if I can pin it down (or if Eric knows). I ran the tests like 30 times back to back and no failure.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956:111,failure,failures,111,https://qutip.org,https://github.com/qutip/qutip/pull/1221#issuecomment-607082956,4,"['down', 'failure']","['down', 'failure', 'failures']"
Availability,"You may be trying to run QuTiP from the same directory you installed it; from. On Jan 18, 2017 9:51 AM, ""17643015"" <notifications@github.com> wrote:. > If I try to import qutip a second time, I get the following error:; > ------------------------------; >; > AttributeError Traceback (most recent call last); > in (); > ----> 1 from qutip import*; >; > /home/jan/.local/lib/python2.7/site-packages/qutip/*init*.pyc in (); > 60 qutip.settings.ipython = True; > 61 except:; > ---> 62 qutip.settings.ipython = False; > 63; > 64 # ------------------------------------------------------------; > -----------------; >; > AttributeError: 'module' object has no attribute 'settings'; >; > Also I am running ubuntu 16.10; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/637#issuecomment-273531916>, or mute; > the thread; > <https://github.com/notifications/unsubscribe-auth/ABMPqUlvpTPnqA51MHD8rB-A_QVrHsXYks5rTkMngaJpZM4LnG0_>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/637#issuecomment-273536944:212,error,error,212,https://qutip.org,https://github.com/qutip/qutip/issues/637#issuecomment-273536944,1,['error'],['error']
Availability,"You should install qutip with anacondas package manager and not pip. Please install using. ```conda install -c conda-forge qutip; ```. On Tue 8 May, 2018, 10:50 PM hchanzy, <notifications@github.com> wrote:. > I installed anaconda on windows 10.; > I used then ""pip install qutip"", and I get this error :; > File ""\lib\distutils\cygwinccompiler.py"" line 129, in *init*; > if self.ld_version >= ""2.10.90"" :; > TypeError: '>=' not supported between instances of 'NoneType' and 'str'; >; > —; > You are receiving this because you are subscribed to this thread.; > Reply to this email directly, view it on GitHub; > <https://github.com/qutip/qutip/issues/860>, or mute the thread; > <https://github.com/notifications/unsubscribe-auth/AGpUBK8samd0yf037ZRMulY3XfyKvmEdks5twaK9gaJpZM4T2rnS>; > .; >",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/860#issuecomment-387572634:297,error,error,297,https://qutip.org,https://github.com/qutip/qutip/issues/860#issuecomment-387572634,1,['error'],['error']
Availability,"You simple need to create a function starting with `test_` that use the progress bar. Ideally you would use it in a way that ensure all lines of code are used at least once. Then if there is an error in the code, python will raise an error and the test will fail. There should be some tutorials for pytest on the web, writing a step per step guide on making tests is more work than making the tests themselves so please have mercy.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2127#issuecomment-1478014084:194,error,error,194,https://qutip.org,https://github.com/qutip/qutip/pull/2127#issuecomment-1478014084,4,['error'],['error']
Availability,"You still wouldn't be able to put `Qobj` into numpy arrays except by doing something like; ```python; qobjs = np.empty(3, dtype=object); qobjs[:] = [qutip.qeye(2), qutip.qeye(2), qutip.qeye(2)]; ```; but probably that's not _too_ much of a big deal. Leaving QuTiP as it is right now would require that anyway. My main problem is actually just with allowing ufuncs and other numpy interfaces to act directly on `Qobj` without an explicit conversion step, because it promotes the idea that it's ok to act elementwise on a `Qobj`. I don't think we should allow ufuncs at all - `Qobj` is not meant to be like an `ndarray` and ufunc semantics don't make sense. We can set `Qobj.__array_ufunc__ = None` and `Qobj.__array_function__ = None` to disable numpy functions acting on `Qobj` directly. Example with this in place:; ```python; >>> import qutip; >>> import numpy as np; >>> np.array(qutip.qeye(2)); array([[1.+0.j, 0.+0.j],; [0.+0.j, 1.+0.j]]); >>> np.array([qutip.qeye(2), qutip.qeye(2)]) # Not ideal, but not our fault.; array([[[1.+0.j, 0.+0.j],; [0.+0.j, 1.+0.j]],. [[1.+0.j, 0.+0.j],; [0.+0.j, 1.+0.j]]]); >>> np.sin(qutip.qeye(2)); Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; TypeError: operand 'Qobj' does not support ufuncs (__array_ufunc__=None); >>> np.sin(np.array(qutip.qeye(2))); array([[0.84147098+0.j, 0. +0.j],; [0. +0.j, 0.84147098+0.j]]); ```; Alternatively, if people _really_ want to be able to use ufuncs on `Qobj`, it is possible to define `__array_ufunc__` in such a way that we allow only some `ufuncs` to operate. Doing this leaves us susceptible to problems interacting with other libraries that implement this, though, beacuse whichever class has the highest `__array_priority__` gets to dictate what makes sense. Unless there's a really clear _need_ for this, I don't think it's a good idea. For completeness, the rest of this comment is stuff I find out while researching. ## The `__array__()` and `__array_wrap__()` methods. These have been s",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902:1891,fault,fault,1891,https://qutip.org,https://github.com/qutip/qutip/issues/1433#issuecomment-772608902,2,['fault'],['fault']
Availability,"You want to be very careful using black - we haven't applied it to most of the codebase, so if you're letting it run, then it's going to produce large unrelated changes everywhere and make the PR harder to understand. Also, black doesn't abide by the exact set of rules set up in codeclimate, so it'll also add a bunch of errors. This would be part of a larger change we'd have to make across the whole codebase separately. (*note*: everything I wrote was already codeclimate-compatible - it's probably better to remove the two commits running black)",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1583#issuecomment-878145441:322,error,errors,322,https://qutip.org,https://github.com/qutip/qutip/pull/1583#issuecomment-878145441,1,['error'],['errors']
Availability,"You're welcome! I've used `qutip` a lot throughout my PhD, so it seems fair that I'd contribute back to development. While I'm still getting used to the code base, I'm quite happy to do some ""boring"" software engineering-y maintenance bits, and plus, this helps me learn `pytest` a lot better. This PR can be merged whenever if you're happy with the changes - I'll open a new one if/when I convert more files.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1181#issuecomment-586622667:223,mainten,maintenance,223,https://qutip.org,https://github.com/qutip/qutip/pull/1181#issuecomment-586622667,2,['mainten'],['maintenance']
Availability,Your welcome and thanks for looking into this. I understand that there are functionality considerations to be made. Perhaps a simple assertion check would strike the right balance -- giving the functionality you want while avoiding the danger of faulty assumptions.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/18#issuecomment-17175299:246,fault,faulty,246,https://qutip.org,https://github.com/qutip/qutip/issues/18#issuecomment-17175299,2,['fault'],['faulty']
Availability,"Yup, it installed ok, the openmp threshold check error is gone, and all tests passed ok~!",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1471#issuecomment-808886693:49,error,error,49,https://qutip.org,https://github.com/qutip/qutip/pull/1471#issuecomment-808886693,1,['error'],['error']
Availability,ZVODE error,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/822:6,error,error,6,https://qutip.org,https://github.com/qutip/qutip/issues/822,1,['error'],['error']
Availability,[![Coverage Status](https://coveralls.io/builds/40090550/badge)](https://coveralls.io/builds/40090550). Coverage increased (+0.01%) to 64.915% when pulling **d32953c7780c3108198787e3b61953c5e11ad0cd on Yash-10:Fix-ffmpeg-error** into **9c422c8e30ff96ac835e852efb0d8656eb01ddab on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1557#issuecomment-849787790:221,error,error,221,https://qutip.org,https://github.com/qutip/qutip/pull/1557#issuecomment-849787790,1,['error'],['error']
Availability,[![Coverage Status](https://coveralls.io/builds/44999770/badge)](https://coveralls.io/builds/44999770). Coverage increased (+0.02%) to 68.347% when pulling **c5e0aeeef46ed1f4074e0698634ebd0a656087d2 on hodgestar:fix/raise-error-if-offset-nonzero-is-used-with-meth-operator-in-coherent** into **9b859e82b89d3ccec39603ed3bb70c4af819e4bc on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1741#issuecomment-993797670:222,error,error-if-offset-nonzero-is-used-with-meth-operator-in-coherent,222,https://qutip.org,https://github.com/qutip/qutip/pull/1741#issuecomment-993797670,1,['error'],['error-if-offset-nonzero-is-used-with-meth-operator-in-coherent']
Availability,[![Coverage Status](https://coveralls.io/builds/51772900/badge)](https://coveralls.io/builds/51772900). Coverage remained the same at 69.935% when pulling **53339827c21901c053647e9b1b6cf4f337a484de on hodgestar:feature/silence-pyximport-relative-error-warning** into **82c6704c6fea8a2801492865ad1ef7c1d73c8840 on qutip:master**.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1978#issuecomment-1219804239:246,error,error-warning,246,https://qutip.org,https://github.com/qutip/qutip/pull/1978#issuecomment-1219804239,1,['error'],['error-warning']
Availability,"[Terminal Saved Output.txt](https://github.com/qutip/qutip/files/67295/Terminal.Saved.Output.txt); Hi, I hope I'm handling this correctly, as I'm new to both qutip and git (recent MATLAB deserter)... I've been trying to set up qutip within my anaconda distribution using . ```; conda install -c https://conda.anaconda.org/jrjohansson qutip; ```. The package linking completes with no errors. But when I . ```; import qutip; ```. I get the following. ```; ImportError: Building module qutip.cy.spmatfuncs failed: ; [""CompileError: command 'gcc' failed with exit status 1\n""]; ```. After running. ```; conda update gcc; conda update cython; ```. I get the same error. I am running OS X 10.11.1. I'm really looking forward to using this software for thesis work, so I hope to get resolved ASAP! Thanks for reading.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/409:384,error,errors,384,https://qutip.org,https://github.com/qutip/qutip/issues/409,2,['error'],"['error', 'errors']"
Availability,"[[3], [2]]], shape=(9, 6), type='super', isherm=False; Qobj data =; [[1. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 1. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 1. 0.]; [0. 0. 0. 0. 0. 0.]; [0. 0. 0. 0. 0. 0.]]; ```. So at the very least the behavior of spre has changed for nonsquare operators. I haven't installed the master branch to see what the current behavior is there but if I'm reading [this commit](https://github.com/qutip/qutip/commit/8d6883da7c373dc65fc3adb88b74c2b27e350db6#diff-53b46f507cc9fff2a9bd96162758693033d4d57ad7e06ea2b58ad3dcee2205d1) correctly, then it appears as though the master branch will just throw a `ValueError(""Can't create and identity like a non square matrix."")`. From searching throw past issues, it looks like these are the relevant pull requests:; - https://github.com/qutip/qutip/pull/1098; - https://github.com/qutip/qutip/pull/1491. For `sprepost` for rectangular operators, it's clear that the expected behavior should correspond to a supoperator taking density matrices in an input hilbert space to one in a potentially different dimensional output hilbert space. However, I think that it's not completely clear what behavior one should expect of `spre` (and `spost`) for rectangular operators. One potentially sensible behavior would be to view `spre` and `spost` as special cases of `sprepost` where one uses the identity isometry between input and output hilbert spaces to form a superoperator which will act like `sprepost(A, A.dag())`. However, I don't think such superoperators will necessarily correspond to CPTP channels as they may not admit Kraus decompositions which obey the completeness relation (I haven't actually checked this, it's just my intuition). Since it appears somewhat doubtful that anyone is currently using `spre` or `spost` with nonsquare operators, my suggestion would actually be to raise a more helpful error that acknowledges there still may be use cases for such a situation.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2171:3718,error,error,3718,https://qutip.org,https://github.com/qutip/qutip/issues/2171,1,['error'],['error']
Availability,"[mkdtemp.txt](https://github.com/qutip/qutip/files/4396123/mkdtemp.txt). Could you try and apply this patch and see if it fixes the problem? Just download it somewhere, then; ```; git apply /path/to/mkdtemp.txt; ```; should do it. If so, I'll commit and push.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1194#issuecomment-605336931:146,down,download,146,https://qutip.org,https://github.com/qutip/qutip/pull/1194#issuecomment-605336931,1,['down'],['download']
Availability,"[pristine_from_docs.zip](https://github.com/qutip/qutip/files/6491982/pristine_from_docs.zip). I get this error for dir_gen_anim2.py. I have just attached the relevant part here. . ```python; fig = pyplot.figure(); ax = Axes3D(fig, azim=-40, elev=30); sphere = Bloch(axes=ax). def animate(i):; sphere.clear(); sphere.add_vectors([np_sin(theta), 0, np_cos(theta)]); sphere.add_points([sx[:i+1], sy[:i+1], sz[:i+1]]); sphere.make_sphere(); return ax. def init():; sphere.vector_color = ['r']; return ax. ani = FuncAnimation(fig, animate, arange(len(sx)),; init_func=init, blit=False, repeat=False). ani.save('bloch_sphere.mp4', fps=20). Exception ignored in: <function TimerQT.__del__ at 0x7fbf6c561b80>; Traceback (most recent call last):; File ""/home/rohan/anaconda3/envs/nbdev/lib/python3.8/site-packages/matplotlib/backends/backend_qt5.py"", line 189, in __del__; TypeError: 'NoneType' object is not callable; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1558#issuecomment-842086433:106,error,error,106,https://qutip.org,https://github.com/qutip/qutip/pull/1558#issuecomment-842086433,2,['error'],['error']
Availability,"]-U_prop_single[-1]).full()); ```. and here is the ""bad"" output with the older version of qutip that I was running before (Note, the difference between the 'batch' and 'single' has terms of order 1e-6). . ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+4277eae; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.4/dist-packages/qutip-4.3.0.dev0+4277eae-py3.4-linux-x86_64.egg/qutip. #I would expect this to have largest terms of order 1e-11 say.; [[-4.24096116e-07+1.00022928e-06j -4.16215462e-09-4.54122270e-07j]; [ 4.16215462e-09-4.54122270e-07j -4.24096116e-07-1.00022928e-06j]]; ```; and here is the result of running with the latest version (note, now difference between the two propagators respects the required tolerances):. ```; QuTiP: Quantum Toolbox in Python; Copyright (c) 2011 and later.; A. J. Pitchford, P. D. Nation, R. J. Johansson, A. Grimsmo, and C. Granade. QuTiP Version: 4.3.0.dev0+489fd41; Numpy Version: 1.14.2; Scipy Version: 1.0.0; Cython Version: 0.28.1; Matplotlib Version: 2.2.2; Python Version: 3.4.3; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: True; INTEL MKL Ext: False; Platform Info: Linux (x86_64); Installation path: /usr/local/lib/python3.4/dist-packages/qutip-4.3.0.dev0+489fd41-py3.4-linux-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex file can be easily generated using `qutip.cite()`. #working well now:; [[ 3.84509091e-12+2.02926564e-12j -1.25703892e-11+0.00000000e+00j]; [ 1.25703892e-11+0",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/829#issuecomment-376601387:1635,toler,tolerances,1635,https://qutip.org,https://github.com/qutip/qutip/issues/829#issuecomment-376601387,2,['toler'],['tolerances']
Availability,"_**edit to put the positivity up top!**_: This is a very exciting prospect to me, and I'm always happy when other libraries want to interact with QuTiP! In the interests of inciting more discussion, I've got thrown in some more discussion points below - I'm 100% sure they're all solvable, but it also seems like there isn't one way that's unambiguously correct to do them, so they're worth discussing. ---. In principle I'm happy to implement this, though I don't really agree with your assertion that `othertype.toqobj()` is bad style! It might be so in Julia, but Python doesn't have all the same multiple-dispatch niceties that Julia has, so at the end of the day, we have to add in a method with a ""magic"" name somewhere, and it all just comes down to choosing the name of the method. The downside to having a magic name is that it means we have to eschew proper namespacing; what if another library one day wants to call their interface the same thing? Then it's completely impossible for a downstream library to interoperate with both. Having conversions be a non-special method of the downstream class, and leaving our constructor unaware of them alleviates that issue. Numpy can get away with squatting the `__array__` name because they're _huge_, but I would argue that if we do it, we could actually _harm_ the quantum software ecosystem in the long-run - what happens when a package better than QuTiP comes along that wants to call its objects `Qobj` as well? Let's face it - it's a pretty straightforward name!. All that said, I am very aware that not everyone agrees with me on this, and I _am_ a big fan of interfaces. Python doesn't give us the tools to do it properly, but we can emulate it, like you suggest. I have a few more considerations to add to a discussion:. 1. we can't have _proper_ namespacing, but let's at least make the magic name `__qutip_qobj__` so we realistically prevent any chance of a clash - by nature of a centralised package manager, we can be sure that no ot",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507:749,down,down,749,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-825608507,6,['down'],"['down', 'downside', 'downstream']"
Availability,"_Edited 2020-08-10_. This is now a complete switch-over to the new `CSR` type, from `fast_csr_matrix`. There are huge changes and knock-on effects all across QuTiP. Most notably for user code is that arithmetic on `Qobj` is now massively faster for small `Qobj`. The instantiation cost of `Qobj` is reduced an awful lot, and internal functions which return `Qobj` now supply `dims` and `type` information to the constructor so that instantiation time is down from ~50-100µs to about ~5µs. Notable removals:; - `eseries` and `essolve` are completely gone; - OpenMP is temporarily removed (though this will be added back in to the data layer later); - all functions in `correlation` and `qobj` which were marked ""deprecated"" are now actually removed; - `vec2mat` and `mat2vec` have been renamed to `vector_to_operator` and `operator_to_vector`; - all ""legacy"" files have been completely removed; - all previous scipy-CSR-like Cython code is completely gone (replaced by the data layer); - `Qobj` no longer defines `__array__`, and so will not automatically turn itself into one. Having this produced very inconsistent behaviour when multiplying by numpy arrays, or otherwise dealing with numpy functions. If you _need_ `Qobj` to be array, be explicit and call `Qobj.full()`. Notable changes in `Qobj`:; - matrix multiplication now contracts to a scalar if doing `bra @ ket`; - matrix multiplication no longer contracts 1D subspaces, but the new `Qobj.contract()` will do this; - arithmetic operations are much more strict about enforcing `Qobj.type`-safety; - `Qobj` understands the `@` operator to mean matrix multiplication, but also maintains the same behaviour of treating `Qobj * Qobj` as matrix multiplication. Package organisation:; - the solvers are now physically contained in `qutip.solve`, but are still logically available in the `qutip` namespace. This means that direct imports (like `from qutip.mesolve import mesolve`) will fail (it becomes `from qutip.solve.mesolve import mesolve`), bu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1332:454,down,down,454,https://qutip.org,https://github.com/qutip/qutip/pull/1332,1,['down'],['down']
Availability,"__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packa",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29279,ERROR,ERROR,29279,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"_______; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py:6: in <module>; from numpy.testing import assert_, run_module_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-package",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29356,ERROR,ERROR,29356,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"_ref = mesolve(H, rho0, times, c_ops, e_ops); #plot_expectation_values(result_ref); #plt.show(). L = liouvillian(H); D = lindblad_dissipator(c_ops[0]); d1_operator = L + D; def d1_rho_func(t, rho_vec):; return d1_operator * rho_vec. B1 = spre(c_ops[0]) + spost(c_ops[0].dag()); B2 = spre(c_ops[0]) + spost(c_ops[0].dag()); def d2_rho_func(t, rho_vec):; e1 = expect_rho_vec(B1.data, rho_vec, False); drho1 = B1 * rho_vec - e1 * rho_vec. e1 = expect_rho_vec(B2.data, rho_vec, False); drho2 = B2 * rho_vec - e1 * rho_vec. return np.vstack([1.0/np.sqrt(2) * drho1, -1.0j/np.sqrt(2) * drho2]); # Everything above is almost the same as the example. I only modified the following part; result = smesolve(H=H*0, rho0=ket2dm(rho0), times=times,; e_ops=e_ops,; d1=d1_rho_func, d2=d2_rho_func,; d2_len=2, ntraj=ntraj, nsubsteps=nsubsteps*2,; dW_factors=[np.sqrt(2/gamma), np.sqrt(2/gamma)],; store_measurement=True, map_func=parallel_map); ```. The error message; ```; ============================= test session starts ==============================; platform darwin -- Python 3.6.8, pytest-3.3.2, py-1.5.2, pluggy-0.6.0; rootdir: /Users/haiwen/PycharmProjects/Qutip_test, inifile:Total run time: 0.13s. test_smesolve2.py:None (test_smesolve2.py); multiprocessing.pool.RemoteTraceback: ; """"""; Traceback (most recent call last):; File ""/Users/haiwen/anaconda3/lib/python3.6/multiprocessing/pool.py"", line 119, in worker; result = (True, func(*args, **kwds)); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1040, in _smesolve_single_trajectory; A_ops, dt, dW[:, t_idx, j, :], d1, d2, sso.args); File ""/Users/haiwen/anaconda3/lib/python3.6/site-packages/qutip/stochastic.py"", line 1789, in _rhs_rho_euler_maruyama; dW_len = len(dW[0, :]); IndexError: index 0 is out of bounds for axis 0 with size 0; """""". The above exception was the direct cause of the following exception:; test_smesolve2.py:53: in <module>; store_measurement=True, map_func=parallel_map); ../../anaconda3/lib",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1029:1883,error,error,1883,https://qutip.org,https://github.com/qutip/qutip/issues/1029,1,['error'],['error']
Availability,"_suite, assert_equal, \; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ================================================================ short test summary info =================================================================; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_graph.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_mesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_noise.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_openmp.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_optpulseprocessor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_parallel.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_partial_transpose.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_piqs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:29924,ERROR,ERROR,29924,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"` returns True, same as with openblas_info. numpy provides a summary of its configuration in `np.show_config()`:; ```; numpy.show_config(); blas_armpl_info:; NOT AVAILABLE; blas_mkl_info:; NOT AVAILABLE; blis_info:; NOT AVAILABLE; openblas_info:; NOT AVAILABLE; accelerate_info:; NOT AVAILABLE; atlas_3_10_blas_threads_info:; NOT AVAILABLE; atlas_3_10_blas_info:; NOT AVAILABLE; atlas_blas_threads_info:; NOT AVAILABLE; atlas_blas_info:; NOT AVAILABLE; blas_info:; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; define_macros = [('HAVE_CBLAS', None)]; blas_opt_info:; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; libraries = ['blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; include_dirs = ['/usr/local/include', '/usr/include']; language = c; lapack_armpl_info:; NOT AVAILABLE; lapack_mkl_info:; NOT AVAILABLE; openblas_lapack_info:; NOT AVAILABLE; openblas_clapack_info:; NOT AVAILABLE; flame_info:; NOT AVAILABLE; atlas_3_10_threads_info:; NOT AVAILABLE; atlas_3_10_info:; NOT AVAILABLE; atlas_threads_info:; NOT AVAILABLE; atlas_info:; NOT AVAILABLE; lapack_info:; libraries = ['lapack', 'lapack']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; language = f77; lapack_opt_info:; libraries = ['lapack', 'lapack', 'blas', 'blas']; library_dirs = ['/usr/lib/x86_64-linux-gnu']; language = c; define_macros = [('NO_ATLAS_INFO', 1), ('HAVE_CBLAS', None)]; include_dirs = ['/usr/local/include', '/usr/include']; Supported SIMD extensions in this NumPy install:; baseline = SSE,SSE2,SSE3; found = SSSE3,SSE41,POPCNT,SSE42,AVX,F16C,FMA3,AVX2; not found = AVX512F,AVX512CD,AVX512_SKX,AVX512_CLX,AVX512_CNL,AVX512_ICL; ```; So numpy itself marks openblas_info as NOT AVAILABLE (evidently using a build-time test, not runtime, which arguably is a pity). It seems to me that `hasattr` in qutip's BLAS support tests is returning false positives and false negatives. It indicates i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2053:1771,AVAIL,AVAILABLE,1771,https://qutip.org,https://github.com/qutip/qutip/issues/2053,19,['AVAIL'],['AVAILABLE']
Availability,"` vs `v5.0` with iterative scipy solvers, especially while using `use_rcm=True`. After spending some time, I believe the main key difference between both versions comes from permutation done in the `_permute_rcm`, where indices are permuted with the indices obtained from the `reverse_cuthill_mckee` function, and this prevents us from getting the preconditioner efficiently. In `v5.0`, for permuting, we use `_data.permute.indices` for the Liouvillian matrix `L`. This gives us different results from what we used in `v4.7`, i.e.,`sp_permute` with the same permuting indices. . As per my understanding, `_data.permute.indices` performs somewhat the following - ; ``` py; A = L.copy(); A.indices = perm.take(A.indices); A = A.tocsc(A); A.indices = perm.take(A.indices); ```; where, we previously, the following was being done; ``` py; L[perm[:,None], perm]; ```; with `perm` are obtained from `reverse_cuthill_mckee`. . I am not sure which behavior is the correct one, but the performance degradation is quite a lot (more than 10x) and prevents reaching sufficient enough tolerance. ### Code to Reproduce the Bug. ```shell; import numpy as np; from qutip import (about, destroy, qeye, steadystate, tensor). # Paramaeters; # -----------; Nc, Nm = 4, 30; E, kappa = 0.1, 0.3; gamma, delta = 3e-4, -0.43. # Operators; # ----------; a = tensor(destroy(Nc), qeye(Nm)); b = tensor(qeye(Nc), destroy(Nm)). # Hamiltonian; # ------------; H = -delta * (a.dag() * a) + (b.dag() * b) + 2.4 * kappa * (b.dag() + b) * (a.dag() * a) + E * (a.dag() + a). # Collapse operators; # -------------------; cc = np.sqrt(kappa) * a; cm = np.sqrt(2 * gamma) * b; cp = np.sqrt(gamma) * b.dag(); c_ops = [cc, cm, cp]. precond_options = {'permc_spec': 'NATURAL', 'diag_pivot_thresh': 0.1, 'fill_factor': 100, 'options': {'ILU_MILU': 'smilu_2'}}; solver_options = {""use_precond"": False, ""atol"": 1e-10, **precond_options}. rho_ss = steadystate(H, c_ops, method=""direct"", solver=""gmres"", use_rcm=True, **solver_options); ```. ### C",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2443:1216,toler,tolerance,1216,https://qutip.org,https://github.com/qutip/qutip/issues/2443,1,['toler'],['tolerance']
Availability,"`--config-setting=""--global-option=--with-openmp""` gives a build error (qutip 4.7.0, debian unstable, python 3.10.6):; ```; $ python3.10 -m build --skip-dependency-check --no-isolation --wheel --config-setting=""--global-option=--with-openmp""; * Building wheel...; Traceback (most recent call last):; File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 363, in <module>; main(); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 345, in main; json_out['return_val'] = hook(**hook_input['kwargs']); File ""/usr/lib/python3/dist-packages/pep517/in_process/_in_process.py"", line 261, in build_wheel; return _build_backend().build_wheel(wheel_directory, config_settings,; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 230, in build_wheel; return self._build_with_temp_dir(['bdist_wheel'], '.whl',; File ""/usr/lib/python3/dist-packages/setuptools/build_meta.py"", line 211, in _build_with_temp_dir; sys.argv = (sys.argv[:1] + setup_command +; TypeError: can only concatenate list (not ""str"") to list. ERROR Backend subproccess exited when trying to invoke build_wheel; ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1978#issuecomment-1219844355:65,error,error,65,https://qutip.org,https://github.com/qutip/qutip/pull/1978#issuecomment-1219844355,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,`2 * Options.rtol` could be good enough for most the tests.; ; But expecting `Options.rtol` to be a good estimation of the numerical error in all case is risky. There is no promise by the solver that the result is within rtol of the analytical solution and it ignore error propagation in the post-treatment steps.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1249#issuecomment-625407196:133,error,error,133,https://qutip.org,https://github.com/qutip/qutip/pull/1249#issuecomment-625407196,2,['error'],['error']
Availability,`Bloch` instance errors when trying render vectors,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1817:17,error,errors,17,https://qutip.org,https://github.com/qutip/qutip/issues/1817,1,['error'],['errors']
Availability,`Brmesolve` properly raise error when ode fails.,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1966:27,error,error,27,https://qutip.org,https://github.com/qutip/qutip/pull/1966,1,['error'],['error']
Availability,"`QobjEvo` have a `with_state` method `QobjEvo.with_state(t, psi, args={})` which can be used instead of `__call__` if needed. It compute the coefficient on the python side and send them to the cython part if needed. But I don't like it like this, using `__call__` will raise and error if a psi is needed, and we need to treat it differently in solvers.; How about having the state inserted in the args dictionary.; So if the users have the key ""psi_vec"" or ""psi_Qobj"" in args and mul_vec (spmv)/ expect is used, it is automatically updated. With that definition most solvers could work without a special cases for `rhs_with_state=True`. The present method could still be supported using decorator.; Also it would be relatively simple to support expectation value in args in a similar way:; if a specific key/value is found in the dictonary (`args[""_expect""+name] = Qobj/ QobjEvo` ), it is replaced with the operator expectation value when possible. . For the present case, we should document it more than change it, going back to Qobj will slow the simulation. Maybe `rhs_with_state` could be more than a bool and offer the option?; Here ` expect_rho_vec(data, vec, isherm)` from qutip.expect could be used to skip the vec -> Qobj conversion. . Also, the users should not need to know the matrix format and have to do the conversion themselves. They should never have to use `dense2D_to_fastcsr_fmode`. `QObj((vec2mat(rho))` works and should be sufficient.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/947#issuecomment-462591342:279,error,error,279,https://qutip.org,https://github.com/qutip/qutip/issues/947#issuecomment-462591342,2,['error'],['error']
Availability,"`[]` is a list while 'identity' is function, so they will invoke two different type of time-dependent functions (list-string or list-function type or function callback type, respectively). `rhs_reuse` only applies to the list-string type, so it should only affect the first type of call to `mesolve`. It might be that we have a bug in handing of empty lists as first argument to mesolve, I will look into that. Regarding `rhs_reuse` it can behave a bit differently in a script and the notebook because a notebook is one long-running python process, so the state of `rhs_reuse` might be retained from one call to `mesolve` to another, while a script would get reset between successive calls (runs of the script). I guess this is the reason for the backtrace error you show. Note that you cannot use `rhs_reuse` with successive calls to `mesolve` if you change the function signature. If this is not the case, then it would be useful with a small minimum example (script or notebook) that reproduces the error. ps.. In your second use-case you qouted `mesolve(identity, ..)`. In this case I would rather use `mesolve(identity(), ..)`, so that the first argument is a `Qobj` instance rather than the function that returns one.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/123#issuecomment-42158885:757,error,error,757,https://qutip.org,https://github.com/qutip/qutip/issues/123#issuecomment-42158885,2,['error'],['error']
Availability,"``` bash; correlation: comparing TLS emission correlations (str-list td format) ... capi_return is NULL; Call-back cb_f_in_zvode__user__routines failed.; ERROR; ```. It seems that we are passing an extra arg to the td cython ode function, but this error does not occur when running the tests once, only twice in a row. ``` bash; Traceback (most recent call last):; File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/nose/case.py"", line 198, in runTest; self.test(*self.arg); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/tests/test_correlation.py"", line 278, in test_str_list_td_corr; sm.dag(), sm.dag() * sm, sm, args=args); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 392, in correlation_3op_2t; solver=solver, args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1086, in _correlation_2t; args=args, options=options); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/correlation.py"", line 1135, in _correlation_me_2t; ).expect[0]; File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 280, in mesolve; progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 618, in _mesolve_list_str_td; return _generic_ode_solve(r, rho0, tlist, e_ops, opt, progress_bar); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/qutip/mesolve.py"", line 867, in _generic_ode_solve; r.integrate(r.t + dt[t_idx]); File ""/opt/local/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 388, in integrate; self.f_params, self.jac_params); File ""/opt/local/Librar",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/269:154,ERROR,ERROR,154,https://qutip.org,https://github.com/qutip/qutip/issues/269,2,"['ERROR', 'error']","['ERROR', 'error']"
Availability,"```; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/usr/lib/python3.6/site-packages/qutip/entropy.py"", line 169, in negativity; rho_pt = partial_transpose(rho, mask); File ""/usr/lib/python3.6/site-packages/qutip/partial_transpose.py"", line 82, in partial_transpose; return _partial_transpose_dense(rho, mask); File ""/usr/lib/python3.6/site-packages/qutip/partial_transpose.py"", line 96, in _partial_transpose_dense; np.array(rho.dims).flatten()).transpose(pt_idx).reshape(rho.shape); TypeError: only integer scalar arrays can be converted to a scalar index; ```. I guess `_partial_transpose_dense` was expecting `mask` to be an array of 0's or 1's, but negativity is passing in boolean array. Now that I read the docstring for partial_transpose, I agree with you. Should I just cast the mask to integers in `partial_transpose`?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/776#issuecomment-347820465:193,mask,mask,193,https://qutip.org,https://github.com/qutip/qutip/pull/776#issuecomment-347820465,4,['mask'],['mask']
Availability,"```; from qutip import *; import numpy as np; #from mayavi import mlab; import matplotlib.pyplot as plt. b = Bloch(); pnt = [1/np.sqrt(3),1/np.sqrt(3),1/np.sqrt(3)]; b.add_points(pnt); Bloch().add_points(pnt); b.show(); qutip.about(); ```; gives the error in a Jupyter notebook:; ```; ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); /miniconda3/lib/python3.7/site-packages/IPython/core/formatters.py in __call__(self, obj); 339 pass; 340 else:; --> 341 return printer(obj); 342 # Finally look for special method names; 343 method = get_real_method(obj, self.print_method). /miniconda3/lib/python3.7/site-packages/IPython/core/pylabtools.py in <lambda>(fig); 242 ; 243 if 'png' in formats:; --> 244 png_formatter.for_type(Figure, lambda fig: print_figure(fig, 'png', **kwargs)); 245 if 'retina' in formats or 'png2x' in formats:; 246 png_formatter.for_type(Figure, lambda fig: retina_figure(fig, **kwargs)). /miniconda3/lib/python3.7/site-packages/IPython/core/pylabtools.py in print_figure(fig, fmt, bbox_inches, **kwargs); 126 ; 127 bytes_io = BytesIO(); --> 128 fig.canvas.print_figure(bytes_io, **kw); 129 data = bytes_io.getvalue(); 130 if fmt == 'svg':. /miniconda3/lib/python3.7/site-packages/matplotlib/backend_bases.py in print_figure(self, filename, dpi, facecolor, edgecolor, orientation, format, bbox_inches, **kwargs); 2054 orientation=orientation,; 2055 dryrun=True,; -> 2056 **kwargs); 2057 renderer = self.figure._cachedRenderer; 2058 bbox_artists = kwargs.pop(""bbox_extra_artists"", None). /miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py in print_png(self, filename_or_obj, metadata, pil_kwargs, *args, **kwargs); 525 ; 526 else:; --> 527 FigureCanvasAgg.draw(self); 528 renderer = self.get_renderer(); 529 with cbook._setattr_cm(renderer, dpi=self.figure.dpi), \. /miniconda3/lib/python3.7/site-packages/matplotlib/backends/backend_agg.py in draw(self); 386 self.renderer = self.get_",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027:250,error,error,250,https://qutip.org,https://github.com/qutip/qutip/issues/1027,1,['error'],['error']
Availability,```; mesolve: time-dependence as string list ... /home/yuri/.pyxbld/temp.freebsd-10.2-STABLE-amd64-2.7/pyrex/rhs170529.c:725:24: error: '_Complex type-name' is invalid; typedef npy_double _Complex __pyx_t_npy_double_complex;; ```. Spotted on FreeBSD-10.2,MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/411:129,error,error,129,https://qutip.org,https://github.com/qutip/qutip/issues/411,1,['error'],['error']
Availability,"```python; jake@tauros$ python; Python 3.7.7 (default, May 6 2020, 04:59:01); [Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import qutip; /Users/jake/.anaconda3/anaconda3/envs/qutip-dev/lib/python3.7/site-packages/setuptools/distutils_patch.py:26: UserWarning: Distutils was imported before Setuptools. This usage is discouraged and may exhibit undesirable behaviors or errors. Please use Setuptools' objects directly or at least import Setuptools first.; ""Distutils was imported before Setuptools. This usage is discouraged ""; >>>; ```. It was caused by the original coefficients PR. Could be interplay between `pyximport` and the later import of `setuptools`, but I'm not sure (definitely the import of `setuptools` in `core/coefficient.py` is what actually triggers the warning, but I'm not sure when `distutils` is imported). I don't think you _need_ `setuptools` (which is also causing the `build` directories) - I think you can use importlib to import the result of `cythonize` directly?. At any rate, it would be very good to drop the `pyximport` dependency from BR too.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1351#issuecomment-680183199:468,error,errors,468,https://qutip.org,https://github.com/qutip/qutip/pull/1351#issuecomment-680183199,1,['error'],['errors']
Availability,"``b.add_points([1/np.sqrt(3),1/np.sqrt(3),1/np.sqrt(3)],meth=""l"")``; Gives no error, but produces no output. The other methods fail.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1027#issuecomment-539973018:78,error,error,78,https://qutip.org,https://github.com/qutip/qutip/issues/1027#issuecomment-539973018,1,['error'],['error']
Availability,"`auto-tidyup` exist to remove 0s stored in sparse matrices. `auto-tidyup` is quite messy, rounding all values under 1e-12 to 0 per default after each matrix operation can only cause problems. . As for the benchmark, why ask for dense operations to add an extra step to increase their outputs error to the same level as sparse operations so their benchmark do not look to good in comparisons. I think it is fair that the sparse operation's timing include the time needed to manage it's structure. . For auto-differentiation, if operations included are done with `Qobj`, it would have to differentiate tidy-up steps after each operation. But since the tidy-up operation does not have a clean derivative (`out[out < 1e-12] = 0`) it will make the auto-differentiation very inefficient. I see `auto-tidyup` more as a necessary evil to keep sparse matrix efficient. I would argue that we should not have `auto-tidyup` in `Qobj` and have sparse matrix operation clean themselves instead.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1610#issuecomment-881709826:292,error,error,292,https://qutip.org,https://github.com/qutip/qutip/pull/1610#issuecomment-881709826,1,['error'],['error']
Availability,"`dims` is an argument of all random Qobj creator, we should keep it.; It should be in [[m,n],[1,1]] format. documentation is not clear / wrong. If used with this format, it does work, but the check and documentation indicate to use [[n,m]] which is wrong and will cause errors. What I was thinking was something along the line of:; ```; def rand_ket(N=0, ...) : ; if not N: ; N = np.prod(dims[0]); ```",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1058#issuecomment-516436835:270,error,errors,270,https://qutip.org,https://github.com/qutip/qutip/pull/1058#issuecomment-516436835,2,['error'],['errors']
Availability,"`general_stochastic` is very manual, halfway to scipy's ode solver. It can be used for both open and closed system and does not correspond to any particular physics equation. It the function that you use if you do weird stuff that does not fit already available template and I would discourage it's use. ; If other type of stochastic evolution are commonly used, it would be better to make a new specialized function than use `general_stochastic`. Old example should be adapted to `smesolve` as much as possible. The solver does not know if it is solving an close or open system (or something else). So e_ops are not touched. ; d1, d2 are working in array for performance issue. We could easily have them work in Qobj, but I would expect a significant slowdown. These function, taking no args, and being call many time at each step could benefit from being compiled with numba.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283:252,avail,available,252,https://qutip.org,https://github.com/qutip/qutip/pull/1115#issuecomment-546958283,1,['avail'],['available']
Availability,`mcsolve` can only evolve ket states. The closest to what you want is `photocurrent_mesolve` which does master equation evolution of a density matrix with the liouvillian build from `H` and `c_ops` but using discrete jumps for `sc_ops`. It is a lot slower than mesolve since it use only basic ode method (Euler's or Heun's method) and you need to set a very small time step to keep the error resonable.,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1375#issuecomment-720652251:386,error,error,386,https://qutip.org,https://github.com/qutip/qutip/issues/1375#issuecomment-720652251,1,['error'],['error']
Availability,"`mesolve([],...)` fails while `mesolve(identity,...)` works. There is no failure if `rhs_reuse` is not involved. ```; File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 269, in mesolve; progress_bar); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 602, in _mesolve_list_str_td; return _generic_ode_solve(r, rho0, tlist, e_ops, opt, progress_bar); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/qutip/mesolve.py"", line 949, in _generic_ode_solve; r.integrate(r.t + dt[t_idx]); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 388, in integrate; self.f_params, self.jac_params); File ""/lustre/home/client/fas/jiang/sk943/python_lab/lib/python3.4/site-packages/scipy/integrate/_ode.py"", line 866, in run; args[5:])); File ""rhs0.pyx"", line 13, in rhs0.cy_td_ode_rhs (/home/fas/jiang/sk943/.pyxbld/temp.linux-x86_64-3.4/pyrex/rhs0.c:1427); def cy_td_ode_rhs(double t, np.ndarray[CTYPE_t, ndim=1] vec, np.ndarray[CTYPE_t, ndim=1] data0, np.ndarray[int, ndim=1] idx0, np.ndarray[int, ndim=1] ptr0):; ValueError: Buffer dtype mismatch, expected 'double complex' but got 'double'; ```. Offtopic: is qutip trying to decide on its own when to use `rhs_reuse`? I had this phantom bug that never appeared in the ipython notebook, but appeared in batch scripts.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/123:73,failure,failure,73,https://qutip.org,https://github.com/qutip/qutip/issues/123,1,['failure'],['failure']
Availability,"`pdf2svg` isn't part of ImageMagick, (at least on `brew`) is http://www.cityinthesky.co.uk/opensource/pdf2svg. It feels like all of these system commands should be made a bit more robust. In particular, the bare `os.system` is not the recommended way of calling out to system commands any more. It's now preferable to use [`subprocess.run`](https://docs.python.org/3/library/subprocess.html#subprocess.run). Here, the bug is, I would assume, actually on the previous line:; ```python; os.system('command_which_does_not_exist'); ```; will return a non-zero error code which isn't checked for, but will not raise an exception. . If Jupyter supports displaying embedded PDF files and that's all it's being used for, then it might be worth removing the conversion to SVG. (pdf)LaTeX certainly supports embedded PDF files as graphics. The fewer little dependencies we require, the better.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1185#issuecomment-593375737:180,robust,robust,180,https://qutip.org,https://github.com/qutip/qutip/issues/1185#issuecomment-593375737,2,"['error', 'robust']","['error', 'robust']"
Availability,"`qutip.ptrace()` takes the partial trace. It is defined only on composite Hilbert spaces. You are applying it on a single Hilbert space, hence it gives an error. If you want to take the trace, you could call it with `qp.sigmax().tr()`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1239#issuecomment-620130318:155,error,error,155,https://qutip.org,https://github.com/qutip/qutip/issues/1239#issuecomment-620130318,1,['error'],['error']
Availability,"`qutip` has binary built extensions and we distribute binary releases through `conda`. These generally have to be built against a specific version of CPython, so we haven't released a cp39 candidate package yet, and `conda` will recognise that as effectively a requirement that `python<3.9`. `pip` should install from source, because we haven't yet built wheels to distribute that way (though I've been looking into that a bit more recently), so the error will likely be completely different - what sort of error do you get from that?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1371#issuecomment-711168808:450,error,error,450,https://qutip.org,https://github.com/qutip/qutip/issues/1371#issuecomment-711168808,2,['error'],['error']
Availability,"`result.measurement` is not the same as `result.expect`, the measurement is an expectation value, but not of the `e_ops` but `m_ops` which are usually automatically generated from the `c_ops` and noise is added to the computed expectation value of the state of the trajectory. The noise is usually larger than the signal and makes it hard to see, but it should converge to mesolve's solution eventually. `smesolve`'s `expect` are just the expectation value of the state of each trajectories (averaged or not depending on options) and should average to the master equation solutions with enough trajectories. Plot in cell 8 show the match is quite good. Even with enough trajectories, the numerical error from `smesolve` will be visible. The equation solved are those written in the notebook. Various stochastic integration method are provided, the default is the taylor expansion of order 1.5.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2194#issuecomment-1634520926:698,error,error,698,https://qutip.org,https://github.com/qutip/qutip/issues/2194#issuecomment-1634520926,1,['error'],['error']
Availability,"`solver_options` contains all available options. I don't think we want to breaks this pattern for this.; Maybe fixing MCSolver to use `options.get(""improved_sampling"", False)` instead of `options[""improved_sampling""]` would be enough for now. But it shows that our solver class structure is to be reworked or we need an equivalent to `improved_sampling` for `nm_mcsolve`.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2234#issuecomment-1751297442:30,avail,available,30,https://qutip.org,https://github.com/qutip/qutip/pull/2234#issuecomment-1751297442,1,['avail'],['available']
Availability,"`svd` is used by `steadystate`. There are no method in common between `Dense` and `CSR`, the default is `solve` for `Dense`, but `spsolve` for `CSR`. All iterative methods are only available in `sparse.linalg`... So we cannot pass it anywhere thus I think it won't be hard to remember. If we want to have the default change depending on whether we have mkl or not, we could read the default method from core's settings.",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2002#issuecomment-1267059737:181,avail,available,181,https://qutip.org,https://github.com/qutip/qutip/pull/2002#issuecomment-1267059737,1,['avail'],['available']
Availability,"a_x \otimes \mathbb{I}$; the measurement function produces the correct eigenvalue (which is 1), but not the correct output density matrix $\rho_e$ (which should be equal to the input density matrix $\rho_i$, since the first qubit is already in the eigenstate of $\hat{O}$). ### Code to Reproduce the Bug. ```shell; import qutip. rho_1 = qutip.Qobj([[1,1],[1,1]]).unit() # Initialize two qubits, both in |+X>-state; rho_tot = qutip.tensor(rho_1, rho_1) # Density matrix of combined system. op = qutip.tensor(qutip.sigmax(), qutip.qeye(2)) # Measurement operator acting on first Qubit, measuring projection in x-direction. result = qutip.measurement.measure(rho_tot, op) ; print(result); ```. ### Code Output. ```shell; 50 % of the time:. (1.0, Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[0. 0. 0. 0. ]; [0. 0.5 0. 0.5]; [0. 0. 0. 0. ]; [0. 0.5 0. 0.5]]). Other 50 % of the time:. (1.0, Quantum object: dims = [[2, 2], [2, 2]], shape = (4, 4), type = oper, isherm = True; Qobj data =; [[0.5 0. 0.5 0. ]; [0. 0. 0. 0. ]; [0.5 0. 0.5 0. ]; [0. 0. 0. 0. ]]); ```. ### Expected Behaviour. The correct result of the output matrix should be $rho_i$, as the input matrix is already an eigenstate of $\hat{O}$.; The output of the measurement shoud be:; $\rho_e = |X\rangle \langle X| \otimes |X\rangle \langle X| =$ [[0.25 0.25 0.25 0.25], [0.25 0.25 0.25 0.25], [0.25 0.25 0.25 0.25], [0.25 0.25 0.25 0.25]]. Instead the measurement output is given by:; $\rho_e = |X\rangle \langle X| \otimes |Z\rangle \langle Z|$ and $\rho_e = |X\rangle \langle X| \otimes |-Z\rangle \langle -Z|$; which is the expected output if the measurement operator would be $\hat{O} = \sigma_x \otimes \sigma_z$, instead of $\hat{O} = \sigma_x \otimes \mathbb{I}$. ### Your Environment. ```shell; QuTip version: 4.7.0; ```. ### Additional Context. The error does not occure if state vectors are used as input for the measurement.measure function instead of the density matrices.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2054:2309,error,error,2309,https://qutip.org,https://github.com/qutip/qutip/issues/2054,1,['error'],['error']
Availability,"ackages/qutip/tests/test_processor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_propagator.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_pulse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qft.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qobjevo.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qpt.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubit_evolution.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_qubits.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_rhs_reuse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_scattering.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sesolve.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sp_eigs.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_sparse.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_spmath.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_me.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_stochastic_se.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_subsys_apply.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_superoper.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_td_formats.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py; ERROR Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.py; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! Interrupted: 30 errors during collection !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!; ===================================================== 51 deselected, 52 warnings, 30 errors in 0.97s ===================",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:30957,ERROR,ERROR,30957,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,"ad already installed numpy and scipy). ** This is what happens when I try it**; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Downloading qutip-4.5.0.tar.gz (3.5 MB); |████████████████████████████████| 3.5 MB 509 kB/s ; ERROR: Command errored out with exit status 1:; command: /usr/bin/python3 -c 'import sys, setuptools, tokenize; sys.argv[0] = '""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""'; __file__='""'""'/tmp/pip-install-69anjthq/qutip/setup.py'""'""';f=getattr(tokenize, '""'""'open'""'""', open)(__file__);code=f.read().replace('""'""'\r\n'""'""', '""'""'\n'""'""');f.close();exec(compile(code, __file__, '""'""'exec'""'""'))' egg_info --egg-base /tmp/pip-install-69anjthq/qutip/pip-egg-info; cwd: /tmp/pip-install-69anjthq/qutip/; Complete output (5 lines):; Traceback (most recent call last):; File ""<string>"", line 1, in <module>; File ""/tmp/pip-install-69anjthq/qutip/setup.py"", line 52, in <module>; from Cython.Build import cythonize; ModuleNotFoundError: No module named 'Cython'; ----------------------------------------; ERROR: Command errored out with exit status 1: python setup.py egg_info Check the logs for full command output. ** Installing cython fixes it **. jevon@bb8:~$ pip3 install cython; Collecting cython; Downloading Cython-0.29.17-cp38-cp38-manylinux1_x86_64.whl (2.0 MB); |████████████████████████████████| 2.0 MB 721 kB/s ; Installing collected packages: cython; Successfully installed cython-0.29.17; jevon@bb8:~$ pip3 install qutip; Collecting qutip; Using cached qutip-4.5.0.tar.gz (3.5 MB); Requirement already satisfied: cython>=0.21 in ./.local/lib/python3.8/site-packages (from qutip) (0.29.17); Requirement already satisfied: numpy>=1.12 in ./.local/lib/python3.8/site-packages (from qutip) (1.18.3); Requirement already satisfied: scipy>=1.0 in ./.local/lib/python3.8/site-packages (from qutip) (1.4.1); Building wheels for collected packages: qutip; Building wheel for qutip (setup.py) ... done; Created wheel for qutip: filename=qutip-4.5.0-cp38-cp38-linux_x86_64.wh",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1246:1199,ERROR,ERROR,1199,https://qutip.org,https://github.com/qutip/qutip/issues/1246,2,"['ERROR', 'error']","['ERROR', 'errored']"
Availability,"af717</code></a> Disallow special filenames on Windows</li>; <li><a href=""https://github.com/python-babel/babel/commit/3a700b5b8b53606fd98ef8294a56f9510f7290f8""><code>3a700b5</code></a> Run locale identifiers through <code>os.path.basename()</code></li>; <li><a href=""https://github.com/python-babel/babel/commit/5afe2b2f11dcdd6090c00231d342c2e9cd1bdaab""><code>5afe2b2</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-babel/babel/issues/754"">#754</a> from python-babel/github-ci</li>; <li><a href=""https://github.com/python-babel/babel/commit/58de8342f865df88697a4a166191e880e3c84d82""><code>58de834</code></a> Replace Travis + Appveyor with GitHub Actions (WIP)</li>; <li><a href=""https://github.com/python-babel/babel/commit/d1bbc08e845d03d8e1f0dfa0e04983d755f39cb5""><code>d1bbc08</code></a> import_cldr: use logging; add -q option</li>; <li><a href=""https://github.com/python-babel/babel/commit/156b7fb9f377ccf58c71cf01dc69fb10c7b69314""><code>156b7fb</code></a> Quiesce CLDR download progress bar if requested (or not a TTY)</li>; <li><a href=""https://github.com/python-babel/babel/commit/613dc1700f91c3d40b081948c0dd6023d8ece057""><code>613dc17</code></a> Make the import warnings about unsupported number systems less verbose</li>; <li>Additional commits viewable in <a href=""https://github.com/python-babel/babel/compare/v2.9.0...v2.9.1"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=babel&package-manager=pip&previous-version=2.9.0&new-version=2.9.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores). Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`. [//]: # (dependabot-automerge-start); [//]: # (dependabot-automerge-end). ---. <details>",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1695:2790,down,download,2790,https://qutip.org,https://github.com/qutip/qutip/pull/1695,1,['down'],['download']
Availability,"age for misconfiguring an HTTP proxy as HTTPS. (<code>[#3405](https://github.com/urllib3/urllib3/issues/3405) &lt;https://github.com/urllib3/urllib3/issues/3405&gt;</code>__)</li>; </ul>; </blockquote>; </details>; <details>; <summary>Commits</summary>; <ul>; <li><a href=""https://github.com/urllib3/urllib3/commit/d9d85c88aa644af56d5e129634e750ce76e1a765""><code>d9d85c8</code></a> Release 1.26.19</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/8528b63b6fe5cfd7b21942cf988670de68fcd8c0""><code>8528b63</code></a> [1.26] Fix downstream tests (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3409"">#3409</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/40b6d1605814dd1db0a46e202d6e56f2e4c9a468""><code>40b6d16</code></a> Merge pull request from GHSA-34jh-p97f-mpxf</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/29cfd02f66376c61bd20f1725477925106321f68""><code>29cfd02</code></a> Fix handling of OpenSSL 3.2.0 new error message &quot;record layer failure&quot; (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3405"">#3405</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/b60064388302f54a3455259ddab121618650a154""><code>b600643</code></a> [1.26] Bump RECENT_DATE (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3404"">#3404</a>)</li>; <li><a href=""https://github.com/urllib3/urllib3/commit/7e2d3890926d4788e219f63e2e36fbeb8714827f""><code>7e2d389</code></a> [1.26] Fix running CPython 2.7 tests in CI (<a href=""https://redirect.github.com/urllib3/urllib3/issues/3137"">#3137</a>)</li>; <li>See full diff in <a href=""https://github.com/urllib3/urllib3/compare/1.26.18...1.26.19"">compare view</a></li>; </ul>; </details>; <br />. [![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=urllib3&package-manager=pip&previous-version=1.26.18&new-version=1.26.19)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-secu",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/2458:3005,error,error,3005,https://qutip.org,https://github.com/qutip/qutip/pull/2458,2,"['error', 'failure']","['error', 'failure']"
Availability,ah great the rtol set to 1e-9 solved it.; thanks a lot !. out of a curiosity I need to ask though: why is the bias so constantly driving the population exclusively downwards (or upwards) ? I have no idea where the numerical error actually comes into play but I would have expected the error to be a lil' more all over the place...,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1085#issuecomment-531289790:164,down,downwards,164,https://qutip.org,https://github.com/qutip/qutip/issues/1085#issuecomment-531289790,3,"['down', 'error']","['downwards', 'error']"
Availability,"altivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/multiarray/scalarapi.c; clang: numpy/core/src/multiarray/temp_elide.c; clang: numpy/core/src/multiarray/vdot.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_object.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/umath/loops.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltive",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:67294,error,error,67294,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/umath/ufunc_type_resolution.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: numpy/core/src/common/array_assign.c; clang: numpy/core/src/common/ucsnarrow.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/npymath/ieee754.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: /private/var/folders/kj/vdvd_3693992wc4c9gm79hdr0000gn/T/pip-install-cp5z29tf/numpy_1458b1f38a5449d18aa77b5bb31c63d1/numpy/_build_utils/src/apple_sgemv_fix.c; clang: build/src.macosx-11.0-arm64-3.9/numpy/core/src/common/npy_cpu_features.c; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; clang: error: the clang compiler does not support 'faltivec', please use -maltivec and include altivec.h explicitly; error: Command ""clang -Wno-unused-result -Wsign-compare -Wunreachable-code -DNDEBUG -fwrapv -O2 -Wall -fPIC -O2 -i",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1740:68052,error,error,68052,https://qutip.org,https://github.com/qutip/qutip/issues/1740,1,['error'],['error']
Availability,"ame time different versions of the interface, however, and there’s value in doing so. > To me, this is absolutely one of the mistakes that Numpy made in their implementation, and we shouldn't be copying it. I don't know enough of the history behind numpy current api, but I see your point. however I'd like to reiterate that this is not what I am proposing. ; I think there is considerable difference between supporting arbitrary operations `new_obj = Qobj + netket_operator*5` (though if you are going to export dispatch hooks in `5.0`, this would be possible in a consistent way, I think) and `qutip.mesolve(netket_operator, ...)`. ; In the first, I do agree with your point that the nature python's `__add__/__radd__` is not commutative, leading to surprising behavior. From my point of view, no package really owns `+` so any conversion would be implicit.; But `qutip.groundstate(netket_operator)` is in itself an explicit cast. I am explicitly asking to qutip `please give me the ground state of this object`. I do expect to get a Qobj out, and qutip to make an effort converting this object to whatever format he internally wants to work with. Same goes with time evolution. . > For greater discussion, here's an alternate approach: instead of objects defining __qutip_qobj__, instead we expose an entry-point qutip.Qobj.register_conversion_function(converter, type, priority, version=None), and downstream libraries register functions rather than defining methods on their classes. I do prefer such an approach. I just did not think that was an option in QuTiP.; In fact we have redesigned NetKet to allow for something similar using multiple dispatch. (I’m not familiar with Tensorflow either.). I do agree with all your points, especially the first. As for your last point, about downstream packages having to import qutip: This is indeed a potential issue. I’ll try to investigate this: maybe there is a solution whereby a callback executed on package load can be registered with importlib?",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742:3628,down,downstream,3628,https://qutip.org,https://github.com/qutip/qutip/issues/1508#issuecomment-830113742,4,['down'],['downstream']
Availability,"and compatible with previous syntax. **Description**; Operating System: MacOS Big Sur 11.0.1; CPU: Apple M1. The syntax of output of command ; ```; sysctl -n machdep.cpu.brand_string; ``` ; has been changed. The output for previous MacOS: ; ```; $ sysctl -n machdep.cpu.brand_string; Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n; ```. The updated output; ```; $ sysctl -n machdep.cpu.brand_string; VirtualApple @ 2.50GHz processor\n; ```. Therefore, the function [`_mac_hardware_info`](https://github.com/qutip/qutip/blob/cb201690a2ca3a9c904bc642ef6600f2ef54f763/qutip/hardware_info.py#L48) of file `hardware_info.py` cannot parse the frequency of CPU correctly. The popped error information is attached below. ```; ValueError: could not convert string to float: ' 2.50GHz proces'; ```. This pull request fix this problem and compatible with both syntax of hardware information. . Since the unit tests of file or function are not found, I do not add test files for this change. I attach python code below to prove the correctness of the implementation. ```python; # before change; old_str = 'Intel(R) Core(TM) i5-5257U CPU @ 2.70GHz\n'; new_str = 'VirtualApple @ 2.50GHz processor\n'; # parse old hardware message; int(float(old_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); # parse new hardware message; int(float(new_str.split('@')[1].split(' ')[1].replace('GHz', ''))*1000); ```. **Related issues or PRs**; No related issue. **Changelog**; Fixed error parsing hardware information for MacOS Big Sur (Apple M1 chip)",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1401:672,error,error,672,https://qutip.org,https://github.com/qutip/qutip/pull/1401,2,['error'],['error']
Availability,"and setup a matching integrator options. Thus only the keys used by the solver or integrator are defined in the instance. This allow adding new integrator with their own options without adding complexity to the solver options. It can be used as such:; ```; opt = SolverOptions(method='lsoda'); opt['progress_bar'] = False; opt.ode['max_order_ns'] = 10; ```; To make it work smoothly, each integrator must be associated to only one method thus `zvode` was split between `adams` and `bdf`. There is also a generic `Options` class that accept any keys used by integrator or solver and can be converted to any specific solver options:; ```; Options(futur_cupy_ode_specific_options=True) # Will work; Options(not_an_options=True) # Error; # For most solver:; __solve(..., opt=Options()); ```; Once options are associated to a solver, they are frozen:; ```; opt = SeOptions(); solver = SeSolver(..., opt); opt['...'] = ... # Ok, but solver has a copy and is unaffected.; solver.options['...'] = ... # Error; solver.options = opt; ```; This is because changing options without the solver knowing will not take effect. I removed saving / storing options for now. It was mostly used to store openmp threshold, which is not supported.; I also propose to write the stored options as python code when we restore it. (`options = eval(repr(options))`, we may have some issue with circular import if called from `__init__.py`, but we can just write the `repr` of the `dict`.). While it's working fine as is, there are few point to discuss:; - Freezing options associated to solver work fine, but I see 2 alternatives:; - Options know they are used by a solver and inform it when modified. More complex but give the image that it just work. ; - All options instance are read-only. To change a key, you create a new options. Simple for us. To modify an existing options we could make it callable: `updated_options = old_options(atol=1e-5)`.; - Passing bad options keys or wrong options types (`mesolve(..., SeOptions)`",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1812:2780,Error,Error,2780,https://qutip.org,https://github.com/qutip/qutip/pull/1812,1,['Error'],['Error']
Availability,"anshammah$ pytest; ============================= test session starts ==============================; platform darwin -- Python 3.7.3, pytest-4.6.2, py-1.8.0, pluggy-0.12.0; rootdir: /Users/nathanshammah/github/qutip; collected 0 items / 60 errors. ==================================== ERRORS ====================================; __________ ERROR collecting qutip/tests/test_basis_transformation.py ___________; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:171: in <module>; from qutip.qobj import *; qutip/qobj.py:60: in <module>; from qutip.fastsparse import fast_csr_matrix, fast_identity; qutip/fastsparse.py:406: in <module>; from qutip.cy.spmath import (zcsr_transpose, zcsr_adjoint, zcsr_mult); qutip/cy/__init__.py:1: in <module>; from qutip.cy.spmatfuncs import *; stringsource:105: in init qutip.cy.spmatfuncs; ???; E AttributeError: type object 'qutip.cy.spmatfuncs.array' has no attribute '__reduce_cython__'; ________________ ERROR collecting qutip/tests/test_brmesolve.py ________________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; ______________ ERROR collecting qutip/tests/test_brmesolve_td.py _______________; qutip/__init__.py:46: in <module>; __IPYTHON__; E NameError: name '__IPYTHON__' is not defined. During handling of the above exception, another exception occurred:; /miniconda3/lib/python3.7/site-packages/py/_path/local.py:701: in pyimport; __import__(modname); qutip/__init__.py:49: in <module>; qutip.settings.ipython = False; E AttributeError: module 'qutip' has no attribute 'settings'; _________________ ERROR collecting qutip/tests/test_brtools.py",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/963#issuecomment-514146533:1140,ERROR,ERROR,1140,https://qutip.org,https://github.com/qutip/qutip/issues/963#issuecomment-514146533,1,['ERROR'],['ERROR']
Availability,"are not engaged with the project, do not reply to communications or attend board meetings. . **<span style=""text-decoration:underline;"">Decisions</span>**; Each board member has a vote in decisions, which are taken by a majority vote. . **<span style=""text-decoration:underline;"">Communications</span>**; The board agrees to meet **[once a year]** (also via online meeting). The board is informed at least **[once a year]** by the Admin Team on QuTiP development and other activities (via email in the qutip-board channel). . ### 4. Non-profit Support; Since 2018, QuTiP is an affiliated project of [NumFOCUS](https://numfocus.org/), a 501(c)(3) nonprofit organization registered in the USA. The mission of NumFOCUS is to promote open practices in research, data, and scientific computing **[Unitary Fund](http://unitary.fund/)** pledges to support the QuTiP project as a fiscally sponsored project. QuTiP remains an affiliated project of NumFOCUS. [Unitary Fund](http://unitary.fund/) is a 501(c)(3) nonprofit organization registered in the USA working to create a quantum technology ecosystem that benefits the most people. Due to its role in the quantum software community, Unitary Fund pledges to: . * Promote the knowledge of QuTiP in the quantum software and sci-dev community.; * Provide scientific and technical software advice upon request of the Admin team and Board. ; * Provide logistic and financial support for code projects and meetings (subject to request by the QuTiP admins and availability of Unitary Fund funds). ; * Accept financial support on behalf of the QuTiP project. These funds will be allocated to and managed by the QuTiP admins on board’s approval in coordination with Unitary Fund. ; * Provide access to expert legal advice (subject to request by the QuTiP board or admin team and availability of Unitary Fund funds) through its legal counsel, useful for matters related to licensing, copyright, collaborations with industry and to protect the QuTiP brand and project.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1373:13756,avail,availability,13756,https://qutip.org,https://github.com/qutip/qutip/issues/1373,2,['avail'],['availability']
Availability,"arge-matrices-with-scipy-linalg-eigvalsh-in-an) , [bug report ](scipy/scipy#8205) that has been fixed by this [solution](scipy/scipy#11304) in the 1.5 release. This is related to the `linalg.eigh() API` which performs eigenvalue calculation, it causes error of this form `Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB`, which mostly the get silenced, and instead of terminating it just outputs an array of zeros except for the last entry. This issue occurs exclusively when using the API with high dimensional tensors, which are probably not being handled in the tests, but will inevitably cause miscalculations for the users as eigenvalue finding of hermitics is pervasive. **To Reproduce**; Just as an illustration you cun run . `pytest qutip/tests/test_superop_reps.py -s -k SuperChoiChi`. from the codes in #1491 in an environment like the generated for `coverage` tests in the CI. The terminal out put is; ```; qutip/tests/test_superop_reps.py ..; Intel MKL ERROR: Parameter 12 was incorrect on entry to ZHBRDB.; F. ================================================================= FAILURES ==================================================================; _________________________________________________ TestSuperopReps.test_SuperChoiChiSuper[8] _________________________________________________. self = <qutip.tests.test_superop_reps.TestSuperopReps object at 0x7f01d2d5c6d0>, dimension = 8. @pytest.mark.parametrize('dimension', [2, 4, 8]); def test_SuperChoiChiSuper(self, dimension):; """"""; Superoperator: Converting two-qubit superoperator through; Choi and chi representations goes back to right superoperator.; """"""; superoperator = super_tensor(rand_super(dimension), rand_super(dimension)); ; choi_matrix = to_choi(superoperator); chi_matrix = to_chi(choi_matrix); test_supe = to_super(chi_matrix); ; # Assert both that the result is close to expected, and has the right; # type.; #print(test_supe.dims); #print(superoperator.dims); > assert (test_supe - superoperato",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1495:1223,ERROR,ERROR,1223,https://qutip.org,https://github.com/qutip/qutip/issues/1495,1,['ERROR'],['ERROR']
Availability,"args):; t = np.clip(t, tlist_control_points[0], tlist_control_points[-1]); coeff = spline_corrected(t).item(); return coeff * h_drive. tlist_state_eval = np.linspace(-0.1, 1.1, int(1e4)). res_qobjevo = qt.sesolve(qobjevo, initial_state, tlist=tlist_state_eval, options=options); res_calling_qobjevo = qt.sesolve(calling_qobjevo, initial_state, tlist=tlist_state_eval, options=options); res_callable_corrected = qt.sesolve(callable_corrected, initial_state, tlist=tlist_state_eval, options=options). # complex argument of <1|s(t)>, for each state |s(t)> in the trajectory for each of the three Hamiltonians; angle_qobjevo = np.angle(np.array([np.array(s).flatten()[1] for s in res_qobjevo.states])); angle_calling_qobjevo = np.angle(np.array([np.array(s).flatten()[1] for s in res_calling_qobjevo.states])); angle_callable_corrected = np.angle(np.array([np.array(s).flatten()[1] for s in res_callable_corrected.states])). # the interpolated control value at time t can be recovered as the time derivative of the complex argument of <1|s(t)>; interpolated_controlvalue_qobjevo = np.gradient(angle_qobjevo, tlist_state_eval); interpolated_controlvalue_calling_qobjevo = np.gradient(angle_calling_qobjevo, tlist_state_eval); interpolated_controlvalue_callable_corrected = np.gradient(angle_callable_corrected, tlist_state_eval). fig, axs = plt.subplots(2); axs[0].plot(tlist_state_eval, interpolated_controlvalue_qobjevo, label='passing qobjevo', marker='.'); axs[0].plot(tlist_state_eval, interpolated_controlvalue_calling_qobjevo, label='passing qobjevo as callable'); axs[0].plot(tlist_state_eval, interpolated_controlvalue_callable_corrected, label='callable H, corrected'); axs[0].grid(); axs[0].legend(); axs[0].set_ylabel('interpolated values of control parameter'). axs[1].plot(tlist_state_eval, interpolated_controlvalue_calling_qobjevo - interpolated_controlvalue_qobjevo,; label='passing qobjevo as callable - qobjevo'); axs[1].plot(tlist_state_eval, interpolated_controlvalue_callable_correct",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2063:2201,recover,recovered,2201,https://qutip.org,https://github.com/qutip/qutip/issues/2063,1,['recover'],['recovered']
Availability,"args:; warnings.warn(""c_op_list argument name has been deprecated in favor of c_ops for consistency in the library. This will be remover in future versions."",; category=DeprecationWarning); c_ops = c_op_list; ```. To be honest, it looks like `kwargs` in `mesolve` should not be an option. It is only used to retrieve the `num_cpus` input from it. I would suggest deprecating it too and just add a new argument, `num_cpus` that is properly documented. . **To Reproduce**; ```python; a = qutip.destroy(10); H = a.dag() * a; c_ops = [a]; psi0 = qutip.coherent(10, 0.1); t_list = np.linspace(0, 25.0, 1001). # This works; result = qutip.mesolve(H, psi0, t_list, c_ops=c_ops, e_ops=[a]) . # This works and can be used to reproduce the above result. Note the kwarg is c_ops_list instead; # of c_ops as in mesolve.; U = qutip.propagator(H, t_list, c_op_list=c_ops). # This does not work as intended but it gets executed. That is because c_ops in interpreted as being part of kwargs. ; # The biggest issue is that no error is raised.; U1 = qutip.propagator(H, t_list, c_ops=c_ops); ```. **Expected behavior**; Functions in QuTiP should use the same name for the argument `c_ops`. **Your Environment**; ```; QuTiP: Quantum Toolbox in Python; ================================; Copyright (c) QuTiP team 2011 and later.; Current admin team: Alexander Pitchford, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, Eric Giguère, Boxi Li, Jake Lishman and Simon Cross.; Board members: Daniel Burgarth, Robert Johansson, Anton F. Kockum, Franco Nori and Will Zeng.; Original developers: R. J. Johansson & P. D. Nation.; Previous lead developers: Chris Granade & A. Grimsmo.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.7.0.dev0+5c73300; Numpy Version: 1.21.2; Scipy Version: 1.7.1; Cython Version: 0.29.23; Matplotlib Version: 3.3.4; Python Version: 3.9.5; Number of CPUs: 4; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Inf",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1716:1540,error,error,1540,https://qutip.org,https://github.com/qutip/qutip/issues/1716,1,['error'],['error']
Availability,"ary/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py _________________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_tensor.py:3: in <module>; from numpy.testing import assert_equal, assert_, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ______________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py ______________________________; ImportError while importing test module '/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py'.; Hint: make sure your test modules/packages have valid Python names.; Traceback:; /Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/importlib/__init__.py:127: in import_module; return _bootstrap._gcd_import(name[level:], package, level); Library/Python/3.9/lib/python/site-packages/qutip/tests/test_three_level.py:2: in <module>; from numpy.testing import assert_, assert_equal, run_module_suite; E ImportError: cannot import name 'run_module_suite' from 'numpy.testing' (/Users/guglielmo2/Library/Python/3.9/lib/python/site-packages/numpy/testing/__init__.py); ________________________________ ERROR collecting Library/Python/3.9/lib/python/site-packages/qutip/tests/test_wigner.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/2180:27337,ERROR,ERROR,27337,https://qutip.org,https://github.com/qutip/qutip/issues/2180,1,['ERROR'],['ERROR']
Availability,as no att...; ERROR ../tests/test_dimensions.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52452,ERROR,ERROR,52452,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,as no att...; ERROR ../tests/test_eigenstates.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_enr_state_operator.py - AttributeError: module 'qutip' ha...; ERROR ../tests/test_entropy.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_expect.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_fastsparse.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52534,ERROR,ERROR,52534,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,as no att...; ERROR ../tests/test_fileio.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_floquet.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_gates.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_graph.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_heom_solver.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_interpolate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_lattice.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mcsolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_metrics.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_mkl.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_noise.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_openmp.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_operators.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_optpulseprocessor.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_parallel.py - AttributeError: module 'qutip' has no attri...; ERROR ../tests/test_partial_transpose.py - AttributeError: module 'qutip' has...; ERROR ../tests/test_piqs.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:52944,ERROR,ERROR,52944,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,as no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54584,ERROR,ERROR,54584,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"ata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/dist.py"", line 972, in run_command; > cmd_obj.run(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 163, in run; > _build_ext.build_ext.run(self); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 337, in run; > self.build_extensions(); > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/Cython/Distutils/build_ext.py"", line 171, in build_extensions; > self.build_extension(ext); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/command/build_ext.py"", line 496, in build_extension; > depends=ext.depends); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/ccompiler.py"", line 574, in compile; > self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts); > File ""/Applications/Canopy.app/appdata/canopy-1.5.4.3105.macosx-x86_64/Canopy.app/Contents/lib/python2.7/distutils/unixccompiler.py"", line 122, in _compile; > raise CompileError, msg; > ImportError: Building module qutip.cy.spmatfuncs failed: [""CompileError: command 'gcc' failed with exit status 1\n""]; > import numpy as np; > ; > from qutip import *; > Traceback (most recent call last):; > File """", line 1, in ; > File ""/Users/rjmagya/Library/Enthought/Canopy_64bit/User/lib/python2.7/site-packages/qutip/init.py"", line 62, in ; > qutip.settings.ipython = False; > AttributeError: 'module' object has no attribute 'settings'; > ; > ######################; > ; > This seems similar to the build error in Installation on OS X with Homebrew script error #348.; > ; > Is this a bug in qutip ? Is there a way to fix this?; > ; > —; > Reply to this email directly or view it on GitHub.; > ; > Untracked with Trackbuster",MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/382#issuecomment-148179436:5133,error,error,5133,https://qutip.org,https://github.com/qutip/qutip/issues/382#issuecomment-148179436,2,['error'],['error']
Availability,attribute...; ERROR ../tests/test_processor.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_propagator.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_ptrace.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_pulse.py - AttributeError: module 'qutip' has no attribut...; ERROR ../tests/test_qft.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qobj.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54420,ERROR,ERROR,54420,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,attribute...; ERROR ../tests/test_qobjevo.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_qpt.py - AttributeError: module 'qutip' has no attribute ...; ERROR ../tests/test_qubit_evolution.py - AttributeError: module 'qutip' has n...; ERROR ../tests/test_qubitcircuit.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_qubits.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rand.py - AttributeError: module 'qutip' has no attribute...; ERROR ../tests/test_random.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_rhs_reuse.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_scattering.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_sesolve.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sp_eigs.py - AttributeError: module 'qutip' has no attrib...; ERROR ../tests/test_sparse.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_spinchain.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_spmath.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_states.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_steadystate.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test_stochastic_me.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_stochastic_se.py - AttributeError: module 'qutip' has no ...; ERROR ../tests/test_subsys_apply.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superop_reps.py - AttributeError: module 'qutip' has no a...; ERROR ../tests/test_superoper.py - AttributeError: module 'qutip' has no attr...; ERROR ../tests/test_td_formats.py - AttributeError: module 'qutip' has no att...; ERROR ../tests/test_tensor.py - AttributeError: module 'qutip' has no attribu...; ERROR ../tests/test_three_level.py - AttributeError: module 'qutip' has no at...; ERROR ../tests/test,MatchSource.ISSUE_COMMENT,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997:54912,ERROR,ERROR,54912,https://qutip.org,https://github.com/qutip/qutip/pull/1232#issuecomment-619398997,1,['ERROR'],['ERROR']
Availability,"aul D. Nation, Nathan Shammah, Shahnawaz Ahmed, Neill Lambert, and Eric Giguère.; Project Manager: Franco Nori.; Currently developed through wide collaboration. See https://github.com/qutip for details. QuTiP Version: 4.5.0.dev0+d377c997; Numpy Version: 1.17.2; Scipy Version: 1.3.1; Cython Version: 0.29.13; Matplotlib Version: None; Python Version: 3.7.4; Number of CPUs: 2; BLAS Info: OPENBLAS; OPENMP Installed: False; INTEL MKL Ext: False; Platform Info: Darwin (x86_64); Installation path: /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+; d377c997-py3.7-macosx-10.9-x86_64.egg/qutip; ==============================================================================; Please cite QuTiP in your publication.; ==============================================================================; For your convenience a bibtex reference can be easily generated using `qutip.cite()`; nose.plugins.cover: ERROR: Coverage not available: unable to import coverage module; /Users/goerz/.pyenv/versions/miniconda3-latest/envs/qutip_testing_env/lib/python3.7/site-packages/qutip-4.5.0.dev0+d377c997-py3.7-macos; x-10.9-x86_64.egg/qutip/__init__.py:161: UserWarning: matplotlib not found: Graphics will not work.; warnings.warn(""matplotlib not found: Graphics will not work.""); Transform 2-level to eigenbasis and back ... ok; Transform 10-level real-values to eigenbasis and back ... ok; Transform 10-level to eigenbasis and back ... ok; Transform 10-level imag to eigenbasis and back ... ok; Consistency between transformations of kets and density matrices ... ok; Check diagonalization via eigenbasis transformation ... ok; Check Qobj eigs and direct eig solver transformations match ... ok; Check Qobj eigs and direct eig solver reverse transformations match ... ok; brmesolve: simple qubit ... ok; brmesolve: c_ops alone ... ok; brmesolve: c_ops with a_ops ... ok; brmesolve: harmonic oscillator, zero temperature ... ok; brmesolve: harmonic ",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/issues/1093:2042,ERROR,ERROR,2042,https://qutip.org,https://github.com/qutip/qutip/issues/1093,2,"['ERROR', 'avail']","['ERROR', 'available']"
Availability,"ax_step = 1; qset.save(); print(Options().atol); >>> 1e-10; ```; `atol = 1e-10` and `max_step = 1` will be kept as default in future sessions. `qset.options.reset` to go back to qutip's default. I believe that loading custom settings when importing qutip will be appreciated with support of both `dense` and `sparse` most researchers will have a preference depending on their domain. This also brings all settings in one place: `qutip.settings...` even if we split the code in ""core"", ""solver"", ""qip?"", etc. Lastly, creating and moving around an `Options` object is no longer needed, changing the default before using the solver has the same effect. . For developers:; Principally @jakelishman as I expect you to add settings for core. ; I went with an implementation similar to python `dataclass`. To add `core`'s settings to `qutip.settings` you would do ""; ```; from qutip.settings import QtOptionClass. @QtOptionClass(""core""); class CoreOptions:; basetype = ""Dense""; auto_tidyup = True; ...; ```; And it would create the `__init__`, `__repr__`, `save`, `load` and `reset` methods, and create the default instance as `qutip.settings.core`. All attributes that do not start with ""_"" and are one of `bool`, `str`, `int`, `float`, `complex` will be in tagged to be saved and loaded. Those are the only types available now, but other can be added if needed. In `__init__` all these + properties with a setter can be initiated as keyword arguments. '__repr__' 'print' all the saved attributes and properties.; This is for the likes of `has_openmp`, I would make it a read only property. Another way of doing this would have been to use a parent class and a ""register"" functions. I went with this one because the signature of `__init__` in help was cleaner. I have both implemented so if qip of control want to use the base without registering to `qutip.settings`, I can change the PR. (@ajgpitch, @BoxiLi ). Build on top of #1289. . **Changelog**; Solver options can be set in `qutip.settings.options`.",MatchSource.ISSUE,qutip,qutip,v5.0.4,https://github.com/qutip/qutip/pull/1297:1720,avail,available,1720,https://qutip.org,https://github.com/qutip/qutip/pull/1297,1,['avail'],['available']
