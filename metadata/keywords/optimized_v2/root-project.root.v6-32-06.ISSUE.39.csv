quality_attribute,sentence,source,author,repo,version,id,keyword,matched_word,match_idx,wiki,url,total_similar,target_keywords,target_matched_words
Performance," pyunittests-pyroot-pyz-ttree-setbranchaddress test segfaults with Python 3.13:; ```; 41/1342 Test #31: pyunittests-pyroot-pyz-ttree-setbranchaddress .............................***Failed 57.97 sec; test_array_branch (ttree_setbranchaddress.TTreeSetBranchAddress.test_array_branch) ... ok; test_basic_type_branch (ttree_setbranchaddress.TTreeSetBranchAddress.test_basic_type_branch) ... ok; test_class_with_array_member (ttree_setbranchaddress.TTreeSetBranchAddress.test_class_with_array_member) ... ok; test_fallback_case (ttree_setbranchaddress.TTreeSetBranchAddress.test_fallback_case) ... *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f13f12e87 in wait4 () from /lib64/libc.so.6; #1 0x00007f3f13e664fb in do_system () from /lib64/libc.so.6; #2 0x00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:1093,optimiz,optimized,1093,https://root.cern,https://github.com/root-project/root/issues/15799,1,['optimiz'],['optimized']
Performance," retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604; #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112; (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex; $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}; (gdb) . ```. Valgrind:; ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:; ```; Thread 1 ""runGUI"" received signal SIGINT, Interrupt.; futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183; 183	../sysdeps/nptl/futex-internal.h: No such file or directory.; (gdb) info threads; Id Target Id Frame ; * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183; 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183; (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):; #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183; #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508; #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638; #3 0x00007ffff66c5077 in TPosixCondition::Wait (this=0x555556c5e1b0) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65; #4 0x00007ffff66c2b46 in TThread::XARequest (xact=0x7ffff66d0208 ""PRTF"", nb=2, ar=0x7ffee5529510, iret=0x0) at /opt/root_src/core/thread/src/TThr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:15785,optimiz,optimized,15785,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['optimiz'],['optimized']
Performance," sched status:; running_tid=1. Thread 1: status = VgTs_Runnable syscall 90 (lwpid 92602); ==92602== at 0x4024310: mmap (in /usr/lib64/ld-2.17.so); ==92602== by 0x4007E9B: _dl_map_object_from_fd (in /usr/lib64/ld-2.17.so); ==92602== by 0x401D5EF: dl_open_worker (in /usr/lib64/ld-2.17.so); ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so); ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so); ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so); ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so); ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so); ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so); ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118); ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372); ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464); ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942); ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777); ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488); ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514); ==92602== by 0x1136688B: TCling::LazyFunctio",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:23938,load,loadLibrary,23938,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['load'],['loadLibrary']
Performance, snprintf.h ROOT/TSeq.hxx TArrayC.h TArrayD.h TArrayF.h TArray.h TArrayI.h TArrayL64.h TArrayL.h TArrayS.h TBits.h TBtree.h TClassTable.h TClonesArray.h TCollection.h TCollectionProxyInfo.h TExMap.h THashList.h THashTable.h TIterator.h TList.h TMap.h TObjArray.h TObjectTable.h TOrdCollection.h TRefArray.h TRefTable.h TSeqCollection.h TSortedList.h TVirtualCollectionProxy.h ESTLType.h RStringView.h TClassEdit.h ROOT/RIntegerSequence.hxx ROOT/RMakeUnique.hxx ROOT/RNotFn.hxx ROOT/RSpan.hxx ROOT/RStringView.hxx ROOT/span.hxx ROOT/TypeTraits.hxx TUnixSystem.h root_std_complex.h TClingRuntime.h TBaseClass.h TClassGenerator.h TClass.h TClassMenuItem.h TClassRef.h TClassStreamer.h TDataMember.h TDataType.h TDictAttributeMap.h TDictionary.h TEnumConstant.h TEnum.h TFileMergeInfo.h TFunction.h TFunctionTemplate.h TGenericClassInfo.h TGlobal.h TInterpreter.h TInterpreterValue.h TIsAProxy.h TListOfDataMembers.h TListOfEnums.h TListOfEnumsWithLock.h TListOfFunctions.h TListOfFunctionTemplates.h TMemberStreamer.h TMethodArg.h TMethodCall.h TMethod.h TProtoClass.h TRealData.h TSchemaHelper.h TSchemaRule.h TSchemaRuleSet.h TStatusBitsChecker.h TStreamerElement.h TStreamer.h TToggleGroup.h TToggle.h TVirtualIsAProxy.h TVirtualRefProxy.h TVirtualStreamerInfo.h Getline.h /mnt/build/workspace/root-pullrequests-build/root/core/base/inc/LinkDef.h ; - /usr/include/string.h:159:11: fatal error: 'xlocale.h' file not found ; - /usr/include/c++/5/cmath:44:10: fatal error: could not build module 'libc' ; - input_line_1:1:10: fatal error: could not build module 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/RuntimeUniverse.h:26:10: fatal error: could not build module 'std' ; - /mnt/build/workspace/root-pullrequests-build/build/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std' ; - /usr/include/x86_64-linux-gnu/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found ; - Error: Error loading the default header files.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4120#issuecomment-515038284:6278,load,loading,6278,https://root.cern,https://github.com/root-project/root/pull/4120#issuecomment-515038284,2,['load'],['loading']
Performance," special column `rdfentry_`, despite the name, does not correspond to the global TChain entry number _in MT runs_ (see also [the relevant docs](https://root.cern/doc/master/classROOT_1_1RDataFrame.html#helper-cols)). This is surprising for users (hence the big warning in the docs linked above) and makes it unnecessarily difficult to e.g. attach a numpy array as an additional column (because it's hard to index into it correctly without stable global row numbers). We could instead make `rdfentry_` always match the ""real"" (global) entry number in the dataset -- if only each MT task knew the offset of the current tree w.r.t. all other trees in the chain. ### Proposed solution . - have TTreeProcessorMT tell each MT task which tree it is processing w.r.t. to the global chain (`#1`, `#2`, `#3`, ...); - have each task calculate its tree's offset by going over a list of tree entry numbers, filling missing values as needed (the list of entry numbers would be implemented as an array of fixed size `nTrees` with atomic elements. This plus the fact that threads only need to write into the atomic elements if they see the value has not been calculated yet should minimize thread contention) . ### Other solution considered. - we could always build a global TChain, for every task, and always use global entry numbers everywhere. However this would require that TTreeProcessorMT reads out the number of entries in each tree before the tasks even start, because it first needs to come up with entry ranges for each task. My intuition is that this would bring a larger performance impact than the proposed solution: we know from DistRDF that the (redundant) opening O(1k) remote files at startup is a significant cost.; - we could do nothing: `rdfentry_` would be unstable and it could not be relied upon to e.g. index into manually added ""friend columns"" or to fill TEntryLists (like [this user would have liked to do](https://root-forum.cern.ch/t/accessing-entry-information-using-rdataframe/52378))",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190:1583,perform,performance,1583,https://root.cern,https://github.com/root-project/root/issues/12190,1,['perform'],['performance']
Performance," std::align_val_t) () from /home/koala/ROOT/root_v6.30.02/lib/libNew.so; #8 0x00007f1de01f5430 in std::pair<llvm::StringMapIterator<llvm::cl::Option*>, bool> llvm::StringMap<llvm::cl::Option*, llvm::MallocAllocator>::try_emplace<llvm::cl::Option*>(llvm::StringRef, llvm::cl::Option*&&) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #9 0x00007f1de01f5b3d in (anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, llvm::cl::SubCommand*) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #10 0x00007f1de01f6805 in llvm::cl::Option::addArgument() () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #11 0x00007f1ddc1ba304 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #12 0x00007f1de3cc147e in call_init (l=<optimized out>, argc=argc; entry=1, argv=argv; entry=0x7ffc77af7118, env=env; entry=0x7ffc77af7128) at ./elf/dl-init.c:70; #13 0x00007f1de3cc1568 in call_init (env=0x7ffc77af7128, argv=0x7ffc77af7118, argc=1, l=<optimized out>) at ./elf/dl-init.c:33; #14 _dl_init (main_map=0x55a9235852d0, argc=1, argv=0x7ffc77af7118, env=0x7ffc77af7128) at ./elf/dl-init.c:117; #15 0x00007f1de2374905 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7f1de3cc8f40 <call_dl_init>, args=args; entry=0x7ffc77af6a80) at ./elf/dl-error-skeleton.c:182; #16 0x00007f1de3cc8ff6 in dl_open_worker (a=0x7ffc77af6c20) at ./elf/dl-open.c:808; #17 dl_open_worker (a=a; entry=0x7ffc77af6c20) at ./elf/dl-open.c:771; #18 0x00007f1de23748a8 in __GI__dl_catch_exception (exception=exception; entry=0x7ffc77af6c00, operate=operate; entry=0x7f1de3cc8f60 <dl_open_worker>, args=args; entry=0x7ffc77af6c20) at ./elf/dl-error-skeleton.c:208; #19 0x00007f1de3cc934e in _dl_open (file=<optimized out>, mode=-2147483647, caller_dlopen=0x7f1de3a01a07 <TROOT::InitInterpreter()+1031>, nsid=-2, argc=1, argv=<optimized out>, env=0x7ffc77af7128) at ./elf/dl-open.c:883; #20 0x00007f1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:6800,optimiz,optimized,6800,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,1,['optimiz'],['optimized']
Performance," std::align_val_t) () from /home/koala/ROOT/root_v6.30.02/lib/libNew.so; #8 0x00007f78ff1f5430 in std::pair<llvm::StringMapIterator<llvm::cl::Option*>, bool> llvm::StringMap<llvm::cl::Option*, llvm::MallocAllocator>::try_emplace<llvm::cl::Option*>(llvm::StringRef, llvm::cl::Option*&&) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #9 0x00007f78ff1f5b3d in (anonymous namespace)::CommandLineParser::addOption(llvm::cl::Option*, llvm::cl::SubCommand*) () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #10 0x00007f78ff1f6805 in llvm::cl::Option::addArgument() () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #11 0x00007f78fb1ba304 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/koala/ROOT/root_v6.30.02/lib/libCling.so; #12 0x00007f7902d6a47e in call_init (l=<optimized out>, argc=argc; entry=1, argv=argv; entry=0x7ffeb2a74cf8, env=env; entry=0x7ffeb2a74d08) at ./elf/dl-init.c:70; #13 0x00007f7902d6a568 in call_init (env=0x7ffeb2a74d08, argv=0x7ffeb2a74cf8, argc=1, l=<optimized out>) at ./elf/dl-init.c:33; #14 _dl_init (main_map=0x5572a98c1920, argc=1, argv=0x7ffeb2a74cf8, env=0x7ffeb2a74d08) at ./elf/dl-init.c:117; #15 0x00007f7901b74905 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7f7902d71f40 <call_dl_init>, args=args; entry=0x7ffeb2a74550) at ./elf/dl-error-skeleton.c:182; #16 0x00007f7902d71ff6 in dl_open_worker (a=0x7ffeb2a746f0) at ./elf/dl-open.c:808; #17 dl_open_worker (a=a; entry=0x7ffeb2a746f0) at ./elf/dl-open.c:771; #18 0x00007f7901b748a8 in __GI__dl_catch_exception (exception=exception; entry=0x7ffeb2a746d0, operate=operate; entry=0x7f7902d71f60 <dl_open_worker>, args=args; entry=0x7ffeb2a746f0) at ./elf/dl-error-skeleton.c:208; #19 0x00007f7902d7234e in _dl_open (file=<optimized out>, mode=-2147483647, caller_dlopen=0x7f7902a01a07 <TROOT::InitInterpreter()+1031>, nsid=-2, argc=1, argv=<optimized out>, env=0x7ffeb2a74d08) at ./elf/dl-open.c:883; #20 0x00007f7",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:2337,optimiz,optimized,2337,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,1,['optimiz'],['optimized']
Performance, std::allocator<char> > > > const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRSt10shared_ptrIN4ROOT6Detail3RDF13RJittedDefineEEEONSt16remove_referenceIT_E4typeEOS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>::type&& std::move<std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&>(std::shared_ptr<ROOT::Detail::RDF::RJittedDefine>&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRN4ROOT8Internal3RDF15RColumnRegisterEEONSt16remove_referenceIT_E4typeEOS6_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<ROOT::Internal::RDF::RColumnRegister&>::type&& std::move<ROOT::Internal::RDF::RColumnRegister&>(ROOT::Internal::RDF::RColumnRegister&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZSt4moveIRKSt10shared_ptrIN4ROOT8Internal3RDF13RJittedActionEEEONSt16remove_referenceIT_E4typeEOS9_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::remove_reference<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>::type&& std::move<std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT8Internal3RDF14MakeWeakOnHeapINS1_13RJittedActionEEEPSt8weak_ptrIT_ERKSt10shared_ptrIS5_E' unresolved while linking [cling interface function]!; You are probably missing the definition of std::weak_ptr<ROOT::Internal::RDF::RJittedAction>* ROOT::Internal::RDF::MakeWeakOnHeap<ROOT::Internal::RDF::RJittedAction>(std::shared_ptr<ROOT::Internal::RDF::RJittedAction> const&); Maybe you nee,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439#issuecomment-1573184913:3490,load,load,3490,https://root.cern,https://github.com/root-project/root/issues/6439#issuecomment-1573184913,1,['load'],['load']
Performance," std::function<void (llvm::DenseMap<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> >, llvm::DenseMapInfo<llvm::orc::JITDylib*>, llvm::detail::DenseMapPair<llvm::orc::JITDylib*, llvm::DenseSet<llvm::orc::SymbolStringPtr, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr> > > > const&)>) (this=this@entry=0xbcb8b0, SearchOrder=<error reading variable: Cannot access memory at address 0x8>, ; > Symbols=..., K=K@entry=llvm::orc::LookupKind::Static, RequiredState=llvm::orc::SymbolState::Ready, RegisterDependencies=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2011; > #54 0x00007fffefd9d0c5 in llvm::orc::ExecutionSession::lookup (this=0xbcb8b0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=llvm::orc::SymbolState::Ready) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2036; > #55 0x00007fffefdbe05c in llvm::orc::LLJIT::lookupLinkerMangled (this=<optimized out>, JD=..., Name=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/LLJIT.cpp:651; > #56 0x00007fffeead3ec6 in llvm::orc::LLJIT::lookupLinkerMangled (this=this@entry=0x8eb360, JD=..., Name=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:120; > #57 0x00007fffeead14f8 in llvm::orc::LLJIT::lookup (this=0x8eb360, JD=..., UnmangledName=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; > #58 llvm::orc::LLJIT::lookup (this=0x8eb360, UnmangledName=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; > #59 cling::IncrementalJIT::getSymbolAddress (this=0x500650, Name=..., IncludeHostSymbols=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:230; > #60 0x00007fffeead65bd in (anonymous namespace)::ReuseExistingWeakSymbols:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098026446:13885,optimiz,optimized,13885,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098026446,1,['optimiz'],['optimized']
Performance," std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46581/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46581/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46581/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_multiTree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46581/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_multiTree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46581/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46581/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46581/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TooSmall/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2902#issuecomment-435153906:4594,cache,cache,4594,https://root.cern,https://github.com/root-project/root/pull/2902#issuecomment-435153906,1,['cache'],['cache']
Performance," std::pair&lt;const clang::CXXMethodDecl*, const clang::CXXMethodDecl*&gt;’ with no trivial copy-assignment; use copy-assignment or copy-initialization instead [-Wclass-memaccess] . And 65 more. ### Failing tests:; - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46710/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46710/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46710/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_multiTree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46710/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_multiTree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46710/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46710/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46710/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TooSmall/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-p",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2902#issuecomment-435336682:4594,cache,cache,4594,https://root.cern,https://github.com/root-project/root/pull/2902#issuecomment-435336682,1,['cache'],['cache']
Performance," symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL33make_ROperator_BatchNormalizationERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_BatchNormalization(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL22make_ROperator_SigmoidERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Sigmoid(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877#issuecomment-1187667192:11807,load,load,11807,https://root.cern,https://github.com/root-project/root/issues/10877#issuecomment-1187667192,1,['load'],['load']
Performance, tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28496/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28496/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28496/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28496/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28496/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28496/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28496/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28496/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2126#issuecomment-393847828:1136,cache,cache,1136,https://root.cern,https://github.com/root-project/root/pull/2126#issuecomment-393847828,1,['cache'],['cache']
Performance, tests:; - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28500/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28500/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28500/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28500/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28500/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28500/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28500/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28500/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2126#issuecomment-393842066:1138,cache,cache,1138,https://root.cern,https://github.com/root-project/root/pull/2126#issuecomment-393842066,1,['cache'],['cache']
Performance, tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55052/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55052/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55052/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55052/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_examples](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55052/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_examples/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55052/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.dict.ROOT-8739.roottest_cling_dict_ROOT_8739_execNextTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55052/testReport/projectroot.roottest.cling.dict/ROOT-8739/roottest_cling_dict_ROOT_8739_execNextTest/); - [projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55052/testReport/projectroot.roottest.cling/typedef_glob,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3522#issuecomment-471632325:1117,cache,cache,1117,https://root.cern,https://github.com/root-project/root/pull/3522#issuecomment-471632325,1,['cache'],['cache']
Performance, tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55055/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55055/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55055/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55055/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_examples](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55055/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_examples/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55055/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.dict.ROOT-8739.roottest_cling_dict_ROOT_8739_execNextTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55055/testReport/projectroot.roottest.cling.dict/ROOT-8739/roottest_cling_dict_ROOT_8739_execNextTest/); - [projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/55055/testReport/projectroot.roottest.cling/typedef_glob,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3522#issuecomment-471630521:1111,cache,cache,1111,https://root.cern,https://github.com/root-project/root/pull/3522#issuecomment-471630521,1,['cache'],['cache']
Performance, tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95291/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95291/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95291/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95291/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95291/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runoutoforder_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95291/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runoutoforder_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make_CloneTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95291/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make_CloneTree/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6277#issuecomment-689412952:1365,cache,cache,1365,https://root.cern,https://github.com/root-project/root/pull/6277#issuecomment-689412952,1,['cache'],['cache']
Performance, tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95467/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95467/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95467/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95467/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95467/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runoutoforder_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95467/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runoutoforder_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make_CloneTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95467/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make_CloneTree/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6323#issuecomment-691035943:1365,cache,cache,1365,https://root.cern,https://github.com/root-project/root/pull/6323#issuecomment-691035943,1,['cache'],['cache']
Performance, tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95771/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95771/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95771/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95771/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95771/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runoutoforder_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95771/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runoutoforder_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make_CloneTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95771/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make_CloneTree/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6346#issuecomment-692193707:1365,cache,cache,1365,https://root.cern,https://github.com/root-project/root/pull/6346#issuecomment-692193707,1,['cache'],['cache']
Performance," the test gives even more errors then before:. ```; 1548: -- BEGIN OUTDIFF OUTPUT --; 1548: --- /home/vpadulan/Programs/rootproject/roottest/root/core/execStatusBitsCheck.ref	Wed Jun 9 11:08:31 2021; 1548: +++ /home/vpadulan/Programs/rootproject/rootbuild/execstatusbitcheck-fix-v2/roottest/root/core/execStatusBitsCheck.log	Mon Jul 17 18:19:46 2023; 1548: @@ -14,5 +14,29 @@; 1548: Bit 13 declared in TObject as kInvalidObject; 1548: Bit 14 declared in TStreamerElement as kWholeObject; 1548: Bit 21 declared in TStreamerElement as kWarned; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initializat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:2219,Load,LoadClassInfo,2219,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['Load'],['LoadClassInfo']
Performance," this=0x5555572ec0c0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #46 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x55555767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #47 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556597160, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #48 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555556597160); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #49 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #50 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=54, b=..., onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #51 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x5555576460a0, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #52 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #53 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #54 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x555557625580, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #55 TStreamerInfoActions::ReadSTL<&TStreamerInfoAct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:11362,optimiz,optimized,11362,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance," those using ROOT/TestSupport.hxx; C:\build\workspace\root-pullrequests-build\root\core\testsupport\src\TestSupport.cxx(77): error: Failed; Received unexpected diagnostic of severity 3000 at 'TChain::SetBranchAddress' reading 'unknown branch -> i'.; Suppress those using ROOT/TestSupport.hxx; C:\build\workspace\root-pullrequests-build\root\core\testsupport\src\TestSupport.cxx(77): error: Failed; Received unexpected diagnostic of severity 3000 at 'TChain::SetBranchAddress' reading 'unknown branch -> g'.; Suppress those using ROOT/TestSupport.hxx; C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\datasource_root.cxx(175): error: Expected equality of these values:; 29.; Which is: 29; *max; Which is: 13; [ FAILED ] TRootTDS.FromARDFMT (9 ms); [ RUN ] TRootTDS.FromARDFWithJittingMT; C:\build\workspace\root-pullrequests-build\root\core\testsupport\src\TestSupport.cxx(77): error: Failed; Received unexpected diagnostic of severity 3000 at 'TChain::LoadTree' reading 'Cannot find tree with name t in file C:/build/workspace/root-pullrequests-build/build/tree/dataframe/test/specTestDescribe3.root'.; Suppress those using ROOT/TestSupport.hxx; C:\build\workspace\root-pullrequests-build\root\core\testsupport\src\TestSupport.cxx(77): error: Failed; Received unexpected diagnostic of severity 3000 at 'TChain::LoadTree' reading 'Cannot find tree with name t in file C:/build/workspace/root-pullrequests-build/build/tree/dataframe/test/testDescribeDataset3.root'.; Suppress those using ROOT/TestSupport.hxx; C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\datasource_root.cxx(186): error: Expected equality of these values:; 5.; Which is: 5; *max; Which is: 0; C:\build\workspace\root-pullrequests-build\root\tree\dataframe\test\datasource_root.cxx(187): error: Expected equality of these values:; 5.; Which is: 5; *min; Which is: 7; [ FAILED ] TRootTDS.FromARDFWithJittingMT (587 ms); ```; These dataframes are constructed from a `RRootDS` with `fileGlob = ""TRo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13460#issuecomment-1681726222:1842,Load,LoadTree,1842,https://root.cern,https://github.com/root-project/root/pull/13460#issuecomment-1681726222,1,['Load'],['LoadTree']
Performance," to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManag",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:110978,load,loaded,110978,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance, to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11412,load,load,11412,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance, to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:22046,load,load,22046,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance, to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3424,load,load,3424,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance, to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Faile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4973,load,load,4973,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance, to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Fail,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4182,load,load,4182,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance, to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3145,load,load,3145,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance, to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3861,load,load,3861,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,2,['load'],['load']
Performance, to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module R,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3826,load,load,3826,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance, to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module RMySQL; Failed to load module Unuran; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module PgSQL; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:3086,load,load,3086,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance, to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module st,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4433,load,load,4433,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance, to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Fail,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:1921,load,load,1921,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance, to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Fa,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5103,load,load,5103,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance, to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUtil; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ROOTTreeViewer; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTGeomViewer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:2404,load,load,2404,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance, to load module _Builtin_intrinsics; >Failed to load module ROOT_Foundation_C; >Failed to load module ROOT_Rtypes; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Core; >Failed to load module Rint; >Failed to load module RIO; >Failed to load module MathCore; >Failed to load module Hist; >Failed to load module ROOTBrowsable; >Failed to load module Unfold; >Failed to load module RHTTPSniff; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load modu,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4109,load,load,4109,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance, to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module ROOT_Foundation_C; Failed to load module ROOT_Rtypes; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Core; Failed to load module Rint; Failed to load module RIO; Failed to load module MathCore; Failed to load module Hist; Failed to load module ROOTBrowsable; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module Imt; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module RDAVIX; Failed to load module RHTTP; Failed to load module FitPanel; Failed to load module ROOTVecOps; Failed to load module ProofDraw; Failed to load module Quadp; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:2813,load,load,2813,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,2,['load'],['load']
Performance, to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:688; 15: Calling 'TBtInnerNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:690; 16: Access to field 'fInnerMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:248; /opt/root_src/core/cont/inc/TBtree.h:314:41: warning: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') [clang-analyzer-core.NullDereference]; 1: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 2: Calling constructor for 'TBtLeafNode' in /opt/root_src/core/cont/src/TBtree.cxx:1695; 3: Passing null pointer value via 3rd parameter 't' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 4: Calling constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:1941,load,loaded,1941,https://root.cern,https://github.com/root-project/root/issues/7424,1,['load'],['loaded']
Performance," to store a category index; and a (possibly truncated) state name. This prevented fast batch access,; and increased the overhead for data storage and data loading. From now on, categories are represented as integers.; Every state can be denoted by index or name, but instead of storing; *both packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at once or using category[""stateName""] = 1.; - Mark legacy interfaces exposing RooCatType as deprecated in doxygen.; - Stop including RooCatType when R__LESS_INCLUDES is set.; - Flag legacy interfaces with R__SUGGEST_ALTERNATIVE.; - Don't create RooCatType instances, unless users continue to use; the legacy interface.; - Provide functions hasIndex() and hasLabel() to check validity of; index/label.; - Provide",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:1421,load,loading,1421,https://root.cern,https://github.com/root-project/root/pull/5502,1,['load'],['loading']
Performance," type ‘long int’, but argument 3 has type ‘int64_t’ {aka ‘long long int’} [-Wformat=] ; - [2020-08-22T08:07:33.391Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/tree/src/TBranch.cxx:2639:15: warning: unused variable ‘leaves’ [-Wunused-variable] . ### Failing tests:; - [projectroot.tree.tree.test.gtest_tree_tree_test_testTIOFeatures](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93605/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTIOFeatures/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execFileMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93605/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execFileMerger/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TestCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93605/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TestCache/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_treeCloneTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93605/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_treeCloneTest/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93605/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93605/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93605/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-678613470:1955,cache,cache,1955,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-678613470,1,['cache'],['cache']
Performance," type ‘long int’, but argument 3 has type ‘int64_t’ {aka ‘long long int’} [-Wformat=] ; - [2020-08-24T09:25:38.445Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/tree/src/TBranch.cxx:2639:15: warning: unused variable ‘leaves’ [-Wunused-variable] . ### Failing tests:; - [projectroot.tree.tree.test.gtest_tree_tree_test_testTIOFeatures](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93662/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTIOFeatures/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execFileMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93662/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execFileMerger/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TestCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93662/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TestCache/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_treeCloneTest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93662/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_treeCloneTest/); - [projectroot.roottest.root.tree.chain.roottest_root_tree_chain_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93662/testReport/projectroot.roottest.root.tree/chain/roottest_root_tree_chain_make/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93662/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93662/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-679026275:1547,cache,cache,1547,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-679026275,1,['cache'],['cache']
Performance," was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):; #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213; #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109; #5 R__zipMultipleAlgorithm (cxlevel=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize; entry=0x7ff4299869ac, tgt=tgt; entry=0x7ff3c94c924f ""ZL\b\177\272"", irep=irep; entry=0x7ff4299869a8, compressionAlgorithm=ROOT::RCompressionSet",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:1092,optimiz,optimized,1092,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance," was configured as ""x86_64-pc-linux-gnu"".; Type ""show configuration"" for configuration details.; For bug reporting instructions, please see:; <https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; -------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1717,load,load,1717,https://root.cern,https://github.com/root-project/root/pull/11882,1,['load'],['load']
Performance, which participates in a condition later in /opt/root_src/io/io/src/TMapFile.cxx:727; 23: Assuming 'mr' is equal to field 'fLast' in /opt/root_src/io/io/src/TMapFile.cxx:728; 24: Taking true branch in /opt/root_src/io/io/src/TMapFile.cxx:728; 25: Null pointer value stored to field 'fLast' in /opt/root_src/io/io/src/TMapFile.cxx:729; 26: Execution continues on line 743 in /opt/root_src/io/io/src/TMapFile.cxx:737; 27: 'lock' is false in /opt/root_src/io/io/src/TMapFile.cxx:743; 28: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:743; 29: Returning from 'TMapFile::Remove' in /opt/root_src/io/io/src/TMapFile.cxx:614; 30: Assuming the condition is false in /opt/root_src/io/io/src/TMapFile.cxx:614; 31: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:614; 32: Assuming field 'fFirst' is non-null in /opt/root_src/io/io/src/TMapFile.cxx:619; 33: Taking false branch in /opt/root_src/io/io/src/TMapFile.cxx:619; 34: Access to field 'fNext' results in a dereference of a null pointer (loaded from field 'fLast') in /opt/root_src/io/io/src/TMapFile.cxx:623; /opt/root_src/io/io/src/TMemFile.cxx:181:40: warning: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'mode' is never read in /opt/root_src/io/io/src/TMemFile.cxx:181; /opt/root_src/io/io/src/TStreamerInfo.cxx:1116:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming field 'fClass' is non-null in /opt/root_src/io/io/src/TStreamerInfo.cxx:731; 2: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:731; 3: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:777; 4: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:777; 5: Assuming field 'fIsSyntheticPair' is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:785; 6: Taking false branch in /opt/root_src/io/io/src/TStreamerInfo.cxx:785; 7: Assuming the condition is false in /opt/root_src/io/io/src/TStreamerInfo.cxx:793;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:95226,load,loaded,95226,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance," write_thnsparse_l(); {; std::unique_ptr<TFile> file{TFile::Open(""hist.root"", ""RECREATE"")};; Int_t bins[2] = {10, 20};; Double_t xmin[2] = {0., -5.};; Double_t xmax[2] = {10., 5.};; THnSparseL hist{""hist"", ""hist"", 2, bins, xmin, xmax};; file->WriteObject(&hist, ""hist"");; }; ```; Try to read it with ROOT 6.32.00 (or `master`):; ```bash; root hist.root -e 'hist'; ```; You'll get this error:; ```txt; Error in <TClingCallFunc::make_ctor_wrapper>: Failed to compile; ==== SOURCE BEGIN ====; __attribute__((used)) extern ""C"" void __ctor_0(void** ret, void* arena, unsigned long nary); {; if (!arena) {; if (!nary) {; *ret = new THnSparseT<TArrayL>;; }; else {; *ret = new THnSparseT<TArrayL>[nary];; }; }; else {; if (!nary) {; *ret = new (arena) THnSparseT<TArrayL>;; }; else {; *ret = new (arena) THnSparseT<TArrayL>[nary];; }; }; }. ==== SOURCE END ====; Error in <TClingCallFunc::ExecDefaultConstructor>: Called with no wrapper, not implemented!; Error in <TClingClassInfo::New()>: Call of default constructor failed to return an object for class: THnSparseT<TArrayL>; Error in <TClass::New>: cannot create object of class THnSparseT<TArrayL>; Error in <TKey::ReadObj>: Cannot create new object of class THnSparseT<TArrayL>; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE5ClassEv' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Class(); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN10THnSparseTI7TArrayLE8StreamerER7TBuffer' unresolved while linking [cling interface function]!; You are probably missing the definition of THnSparseT<TArrayL>::Streamer(TBuffer&); Maybe you need to load the corresponding shared library?; ```. ### ROOT version. ROOT 6.32.00 upwards. ### Additional context. Thanks do @philippe554 for catching this! This issue is important for project HighLO because we're using `THnSparseL` as a container for reduced data.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15874:1709,load,load,1709,https://root.cern,https://github.com/root-project/root/issues/15874,2,['load'],['load']
Performance," you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytm",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:8212,optimiz,optimized,8212,https://root.cern,https://github.com/root-project/root/issues/15799,2,['optimiz'],['optimized']
Performance," | Welcome to ROOT 6.24/08 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Sep 29 2022, 13:04:57 |; | From tags/v6-24-08@v6-24-08 |; | With c++ (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44) |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. Processing Minimum.C+()...; Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory/./Minimum_C.so; Warning in cling::IncrementalParser::CheckABICompatibility():; Possible C++ standard library mismatch, compiled with __GLIBCXX__ '20150623'; Extraction of runtime standard library version was: '20190222'. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt. cling::DynamicLibraryManager::loadLibrary(): /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory/Minimum_C.so: undefined symbol: _ZN5TROOT14RegisterModuleEPKcPS1_S2_S1_S1_PFvvERKSt6vectorISt4pairINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiESaISD_EES2_b; /lib/../lib64/crt1.o: In function `_start':; (.text+0x20): undefined reference to `main'; /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory/Minimum_C_ACLiC_dict.o: In function `(anonymous namespace)::TriggerDictionaryInitialization_Minimum_C_ACLiC_dict_Impl()':; /afs/cern.ch/work/e/escalier/public/ForOthers/ProblemMemory/Minimum_C_ACLiC_dict.cxx:94: undefined reference to `TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool)'; /afs/cern.ch/w",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8984#issuecomment-1387318513:1411,load,loadLibrary,1411,https://root.cern,https://github.com/root-project/root/issues/8984#issuecomment-1387318513,1,['load'],['loadLibrary']
Performance," }. EOF; ; mkdir build; cd build; cmake ..; make; repro; reproBroken; ```. #### Output from reproducer. ```; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; track is 0x47f4ce0; track is 0x47f4ce0; Info in <TGeoManager::TGeoManager>: Geometry mygeo, mygeo created; Info in <TGeoManager::SetTopVolume>: Top volume is TOP. Master volume is TOP; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 0; Info in <TGeoManager::CloseGeometry>: 1 nodes/ 1 volume UID's in mygeo; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; track is 0; track is 0; ```. ### ROOT version. master. In particular https://github.com/linev/root/commit/662c32fbfeba987f2b04c7a052c852d8e840607f. $ root --version; ROOT Version: 6.33.01; Built for linuxx8664gcc on Aug 04 2024, 22:30:37; From heads/master@v6-31-01-2852-ga038a2f345. ### Installation method. LCG stacks. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16167:4987,cache,cache,4987,https://root.cern,https://github.com/root-project/root/issues/16167,1,['cache'],['cache']
Performance, ���2V8���2V not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� @Eǉ7VP\�2 not found.; Module Ц~�����2V D not found.; Module mi not found.; Module �j%�2Vpj%�2VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module 9.0 not found.; ��2V���2V ��2V���2V�Y��2V ��2V�v�2V��2V ��2V 	��2V not found.; Module @�ĉ7VPh%�2V@h%�2V@s%�2V0s%�2V�N��2V�N��2VQ��2VQ��2V@S��2V0S��2V �8�2V not found.; Module !p�w��:�2 not found.; Module ��=\u��&���g|��Xϭ)��ۡc}n?�ʾ��v� �z�� not found.; Module not found.; Module ��ĉ7V99cl_khr_gVs_�0���2V;;e>khr_fp16 not found.; Module not found.; Module GeneticMinimizer not found.; Module �[h�A�2V�[h�<��[h�0�#\h���K\h� not found.; Module �� not found.; Module module not found.; Module base_1621��7VP\�2Vl_khr_f not found.; Module not found.; Module not found.; Module �'��&E'��'�Q|�~ not found.; Module Q����2V�; ��2V����a3 not found.; Module е8�2V��8�2VP�8�2V@�8�2V��8�2V��8�2V�K�Q7V��2V>��� not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pcm file does not exist; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libMathCore_rdict.pcm file does not exist. (int) 2; ```. on the third:. ```; <<< cling interactive line includer >>>: remark: building module 'ROOTVecOps' as '/home/cburr/miniconda3/envs/test/lib/ROOTVecOps.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'ROOTVecOps' [-Rmodule-build]; (truncated but it's similar to above); ```. on the **fourteenth**:. ```; <<< cling interactive line includer >>>: remark: building module 'TMVA' as '/home/cburr/miniconda3/envs/test/lib/TMVA.pcm' [-Rmodule-build]; <<< cling interactive line includer >>>: remark: finished building module 'TMVA' [-Rmodule-build]; Module FitterBase not found.; Module (�;cU! ��;cUpJ��� not found.; Module TMVA.pcmoRTTI not found.; Module not found.; Error in <TCling::LoadPCM>: ROOT PCM /home/cburr/miniconda3/envs/test/lib/libNet_rdict.pc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8518:4591,Load,LoadPCM,4591,https://root.cern,https://github.com/root-project/root/issues/8518,1,['Load'],['LoadPCM']
Performance,![progress](https://github.com/root-project/root/assets/4936580/98687f37-f747-4f2c-ab8a-0f3b0375107d); 1. Introduce progress handlers for browsables objects; 2. Provide progress information when performing `TTree::Draw`; 3. Display such progress on the client side in the warning dialog - while waiting on result of double click; 4. Use `TVirtualMonitoringWriter` handle to hook inside `TTree::Draw` processing loop; 5. Execute long operations (like tree draw) outside of websocket data handler to let receive other messages; 6. Fix cleanup problem of widgets in RBrowser - JSROOT elements were not destroyed properly,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13236:195,perform,performing,195,https://root.cern,https://github.com/root-project/root/pull/13236,1,['perform'],['performing']
Performance,![screenshot](https://user-images.githubusercontent.com/249404/51119045-173f1980-1812-11e9-9195-9cbc431d1709.png); I get this even after clearing the cache.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3235#issuecomment-454025552:150,cache,cache,150,https://root.cern,https://github.com/root-project/root/pull/3235#issuecomment-454025552,2,['cache'],['cache']
Performance,""", compRes=; 0x7fff0771e03c: cling::Interpreter::kSuccess, result=0x7fff0771e170) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:2460; #18 0x00007fa76afa4749 in TCling::ProcessLine (this=0x16e7bc0, line=<optimized out>, error=0x7fff0771f04c) at /jenkins/workspace/build-any-ib/sw/20156516; /1/slc7_x86-64/GCC-Toolchain/v12.2.0-alice1-5/include/c++/12.2.0/bits/unique_ptr.h:191; #19 0x00007fa76afa4b02 in TCling::ProcessLineSynch (this=0x16e7bc0, line=0x16e8930 "".X /home/tdietel/alice/data/ole/./sortbug.C+"", error=0x7fff0771f04c); at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/metacling/src/TCling.cxx:3554; #20 0x00007fa7711777e7 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fff0771f04c, keep=<optimized out>) at /jenkins/workspace/build-any-ib; /sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/base/src/TApplication.cxx:1661; #21 0x00007fa77172040c in TRint::ProcessLineNr (this=0x16b4f60, filestem=<optimized out>, line=0x7fff0771f060 "".x sortbug.C+"", error=0x7fff0771f04c) at /; jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:820; #22 0x00007fa771721fc6 in TRint::Run (this=this; entry=0x16b4f60, retrn=retrn; entry=false) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-04/core/rint/src/TRint.cxx:461; #23 0x00000000004011dd in main (argc=<optimized out>, argv=0x7fff077211e8) at /jenkins/workspace/build-any-ib/sw/20156516/1/SOURCES/ROOT/v6-28-04/v6-28-0; 4/main/src/rmain.cxx:84; ```. I assume the bug can be triggered with other data sets in plain ROOT. If needed, I could try to strip things down, but I don't know if this is the most efficient use of my time. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13314:9148,optimiz,optimized,9148,https://root.cern,https://github.com/root-project/root/issues/13314,1,['optimiz'],['optimized']
Performance,""";; TString formula = ""x"";; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<x<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; std::cout<<""\n"";; ULong64_t y = x-1;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; std::cout<<""\n"";; y = x-926;; formula = TString::Format(""x-%lld"", y);; std::cout<<"" TTree::Scan(\""""<<formula<<""\"");\n"";; std::cout<<""Expected output: ""<<std::setw(19)<<x-y<<""\n"";; t->Scan(formula, """", ""colsize=25 col=lld"");; ; ; f.Close();; }. int main() {; ULong64_t x = 1617047019150033926;; ; write(x);; read(x);; }; ```. The program:. 1. Creates a tree with a single ULong64_t branch and single entry, and saves it to file f.root; 2. Reads the file and the tree:; - Reads the value from tree with TTree::GetEntry() to confirm the variable is saved properly – this seems to work correctly; - Displays the value with Scan() – displayed value is different on the last digit; - Perform simple subtractions using Scan() – the results are incorrect as well. This is output I obtained with 6.22/08 in Linux:; ```; Written to tree: 1617047019150033926; Read from tree: 1617047019150033926 (correct). TTree::Scan(""x"");; Expected output: 1617047019150033926; ****************************************; * Row * x *; ****************************************; * 0 * 1617047019150033920 *; ****************************************. TTree::Scan(""x-1617047019150033925"");; Expected output: 1; ****************************************; * Row * x-1617047019150033925 *; ****************************************; * 0 * 0 *; ****************************************. TTree::Scan(""x-1617047019150033000"");; Expected output: 926; ****************************************; * Row * x-1617047019150033000 *; ****************************************; * 0 * 1024 *; ****************************************; ```; I encou",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7844:1883,Perform,Perform,1883,https://root.cern,https://github.com/root-project/root/issues/7844,1,['Perform'],['Perform']
Performance,"""TDF: bad interaction between multi-thread execution and separate output TFile"". See [jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-9116?filter=-1) for more details.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1477:30,multi-thread,multi-thread,30,https://root.cern,https://github.com/root-project/root/pull/1477,1,['multi-thread'],['multi-thread']
Performance,"""You"" was Axel and Philippe + whoever is doing TXNetNG these days :) ; Michal (main developer of XrdCl) and I assumed the crash happens because libXrdCl was already unloaded, see xrootd issue: xrootd/xrootd#1487. Now, you say the library is still loaded ... then it's probably more likely that destruction ob XrdCl global objects has already happened or was in progress (I just learned c++ is rather relaxed about how this is allowed to happen). @simonmichal ... what do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-892009554:247,load,loaded,247,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-892009554,2,['load'],['loaded']
Performance,"""rf104_classfactory"", T=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:643; #22 cling::MetaSema::actOnxCommand (this=0x11f2601d0, file=..., args=..., result=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #23 0x00007fffa2afed24 in cling::MetaParser::isXCommand (this=this; entry=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=resultValue; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #24 0x00007fffa2affe20 in cling::MetaParser::isCommand (this=0x7fffff1572b0, actionResult=; 0x7fffff157260: cling::MetaSema::AR_Success, resultValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #25 0x00007fffa2ae4044 in cling::MetaProcessor::process (this=0x11f260fc0, input_line=..., compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=0x7fffff157520, disableValuePrinting=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #26 0x00007fffa282b4b0 in HandleInterpreterException (metaProcessor=0x11f260fc0, input_line=0x11efcdaa0 "".X /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 test",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:17896,optimiz,optimized,17896,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"# Bug in ROOT library loading. This small example illustrates a bug in the ROOT library loading. . I suspect that the ROOT code cannot handle directories that start with; a dot (`.`). . ## Platform . - ROOT 6.26/00; - Features:; - cxx17; - asimage; - builtin_clang; - builtin_cling; - builtin_llvm; - builtin_openui5; - builtin_vdt; - builtin_xxhash; - builtin_zeromq; - cefweb; - clad; - dataframe; - davix; - exceptions; - fftw3; - fitsio; - gdml; - gfal; - gnuinstall; - gsl_shared; - gviz; - http; - imt; - mathmore; - mlp; - minuit2; - opengl; - pyroot; - pythia6_nolink; - pythia6; - roofit; - roofit_multiprocess; - webgui; - root7; - rpath; - shadowpw; - shared; - soversion; - sqlite; - ssl; - tmva; - tmva-cpu; - tmva-pymva; - spectrum; - uring; - vc; - vdt; - veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory i",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:22,load,loading,22,https://root.cern,https://github.com/root-project/root/issues/10704,2,['load'],['loading']
Performance,"# Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; When opening a GDML geometry with TEveManager I get this error message:; ```; Error in <TFile::Init>: HERD.gdml not a ROOT file; ```; Apart from the message, there's no evident malfunctioning and everything works as expected. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; No error message if really there is no malfunctioning triggered by using a GDML file. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; This can be simply reproduced in the Root shell by opening any GDML file as:; ```; $ root; root [0] TEveManager m(500, 500); (TEveManager &) @0x7fbabb351008; root [1] m.GetGeometry(""HERD.gdml""); TEveManager::GetGeometry loading: 'HERD.gdml' -> 'HERD.gdml'.; Info in <TGeoManager::Import>: Reading geometry from file: HERD.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldLogical. Master volume is worldLogical; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 4, max placements = 7497; Info in <TGeoManager::CloseGeometry>: 15080 nodes/ 33 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; Error in <TFile::Init>: HERD.gdml not a ROOT file; (TGeoManager *) 0x5571054",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7987:1372,load,loading,1372,https://root.cern,https://github.com/root-project/root/issues/7987,1,['load'],['loading']
Performance,"# Goal. This PR implements `Im2Col` in CUDA in (what I consider) an optimal way in terms of performance. I achieve that by assigning one thread per output element. This means that threads do not share their write address and therefore no synchronization is required. They do share read address which is of course thread safe. I complement the new functionality with a complete testing suite to assert correctness. # Extra tasks. The tests within the `CNN` module suffer from extensive code duplication as the `Reference` and `CPU` versions do exactly the same thing (the CUDA one's would just worsen the issue). Instead I refactored the `Im2Col` one's using templated arguments: As a result the tests are now defined only once and called independently from each architecture using templates. This approach is also followed in the `DNN` module. If time allows, I plan to refactor all tests within the `CNN` module in a similar manner.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2118:92,perform,performance,92,https://root.cern,https://github.com/root-project/root/pull/2118,1,['perform'],['performance']
Performance,"# Problem Outline:; Precondition. On the **training (classification)** stage user adds array of variables to the `TMVA::DataLoader` object with a new method introduced in ROOT 6.20:; ```; TMVA::DataLoader *loader = new TMVA::DataLoader(...); loader->AddVariablesArray(""vars"", nBins);; ```. On the next stage - **classification application** user creates `TMVA::Reader` object and adds an array of variables to it:; ```; TMVA::Reader* reader = new TMVA::Reader(...);; std::vector<float> fValues(nBins);; reader->DataInfo().AddVariablesArray(""vars"", nBins, """", """", 0, 0, 'F', kFALSE, &fValues[0]);; ```. Pointer to the first element of the `&fValues[0]` passed to the `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Inside `AddVariablesArray()` pointer is **not incremented** in the loop where variables are defined. This provides faulty `reader->EvaluateMVA` output. # This Pull Request:; Modifies `TMVA::DataSetInfo::AddVariablesArray(..., void *external)` function. Depending on the variable type `char varType`, `void * external` pointer is incremented in the loop. This provides correct TMVA evaluation. ## Changes or fixes:; Please refer to the commit details. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10780:206,load,loader,206,https://root.cern,https://github.com/root-project/root/pull/10780,2,['load'],['loader']
Performance,# This Pull request: . - Adds the feature to import datasets and modelConfigs to RooWorkspace using the `RooJSONFactoryWSTool`.; - Adds a new Pythonic tutorial for fitting and plotting using single-channel data. ## Changes:. - `RooJSONFactoryWSTool` to import binned & unbinned datasets and modelConfigs; - Adds a `FitModelAndPlot` overload to perform measurement using RooWorkspace; - A new tutorial `hf101.py`. ## Checklist:. - [x] tested changes locally; - [x] updated the docs,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13553:344,perform,perform,344,https://root.cern,https://github.com/root-project/root/pull/13553,1,['perform'],['perform']
Performance,# This Pull request:. ## Adds a new feature:; Performs real-time map-reduce using Dask framework allowing real-time data representation. Fixes #13607. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13521:46,Perform,Performs,46,https://root.cern,https://github.com/root-project/root/pull/13521,1,['Perform'],['Performs']
Performance,"# This Pull request:. ## Changes or fixes:. Add `dependabot.yml` file which will configure the dependabot to periodically create PRs whenever GitHub actions can be updated. Currently configured to submit the PR weekly with a maximum of 5 concurrent open PRs. GitHub actions cannot (or should not) be configured to run on the latest version, you can only specify which major version to run. Many times whenever there is a new version released it never gets updated on the developer's end. This PR fixes this with the added benefit of a dedicated PR for each action which should test if there are any breaking changes. The PR also contains a link to the action changelog.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14683:238,concurren,concurrent,238,https://root.cern,https://github.com/root-project/root/pull/14683,1,['concurren'],['concurrent']
Performance,"# This Pull request:. ## Changes or fixes:. Currently, building the documentation issues 3700 warnings, see https://lcgapp-services.cern.ch/root-jenkins/view/ROOT/job/root-makedoc-master/lastBuild/parsed_console/. With the current hack, we would go down to just 2700. By the way, it would be nice to fine-tune the parser: see https://github.com/root-project/jenkins-pipelines/issues/10. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). See related discussion https://github.com/doxygen/doxygen/issues/9044",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11614:305,tune,tune,305,https://root.cern,https://github.com/root-project/root/pull/11614,1,['tune'],['tune']
Performance,"# This Pull request:. ## Changes or fixes:. In preparation for coming optimizations, we introduce here some changes to RooFit::MultiProcess::Queue. 1. Queue itself is now an abstract base class. This means we must access it as a pointer from e.g. within JobManager. Queue still holds a lot of the old generic Queue functionality, like Queue::loop.; 2. The old ""default"" Queue implementation is now FIFOQueue. This behaves the same as before: first task in == first task out.; 3. A new Queue implementation is added: PriorityQueue. As the name implies: the user can set task priorities when using this queue. The type of Queue and also task priorities can be set through RooFit::MultiProcess::Config::Queue. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627:70,optimiz,optimizations,70,https://root.cern,https://github.com/root-project/root/pull/11627,11,"['Queue', 'optimiz', 'queue']","['Queue', 'optimizations', 'queue']"
Performance,"# This Pull request:. ## Changes or fixes:. Most commonly seen on ppc64le. Backtrace:; ```; ===========================================================; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #11 ROOT::Experimental::RColor::toHex[abi:cxx11](unsigned char) (v=<optimized out>) at /usr/include/c++/11/ext/new_allocator.h:82; #12 0x00007fff90c220ec in ROOT::Experimental::RColor::SetRGB (this=0x7fffeadf5d10, r=<optimized out>, g=<optimized out>, b=<optimized out>) at /usr/include/c++/11/ext/new_allocator.h:89; ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10309:648,optimiz,optimized,648,https://root.cern,https://github.com/root-project/root/pull/10309,4,['optimiz'],['optimized']
Performance,"# This Pull request:. ## Changes or fixes:. Whitelist libtbbmalloc in library import test; ```; 6/1344 Test #12: pyunittests-pyroot-import-load-libs .......................................***Failed 1.35 sec; test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT ... ERROR; ======================================================================; ERROR: test_import (import_load_libs.ImportLoadLibs.test_import); Test libraries loaded after importing ROOT; ----------------------------------------------------------------------; Exception: Found not whitelisted libraries after importing ROOT:; - libtbbmalloc; If the test fails with a library that is loaded on purpose, please add it to the whitelist.; ----------------------------------------------------------------------; Ran 1 test in 1.186s; FAILED (errors=1); ```; This failure is seen in Fedora 41 after tbb was updated from version 2021.11.0 to version 2021.13.0 in the distribution. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16016:139,load,load-libs,139,https://root.cern,https://github.com/root-project/root/pull/16016,4,['load'],"['load-libs', 'loaded']"
Performance,"# This Pull request:. ## Changes or fixes:. With the improvements in dataframe with better distinction between long, long long and pointers it works OK on ix86 when compiled with gcc 12. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). ```; Start 54: pyunittests-pyroot-pyz-rdataframe-asnumpy; Start 55: pyunittests-pyroot-pyz-rdataframe-makenumpy; 134/1231 Test #55: pyunittests-pyroot-pyz-rdataframe-makenumpy ......................... Passed 10.99 sec; 151/1231 Test #54: pyunittests-pyroot-pyz-rdataframe-asnumpy ........................... Passed 23.56 sec; Start 363: gtest-tree-dataframe-test-dataframe-friends; Start 364: gtest-tree-dataframe-test-dataframe-colnames; Start 365: gtest-tree-dataframe-test-dataframe-cache; 388/1231 Test #364: gtest-tree-dataframe-test-dataframe-colnames ........................ Passed 4.40 sec; Start 366: gtest-tree-dataframe-test-dataframe-callbacks; 389/1231 Test #363: gtest-tree-dataframe-test-dataframe-friends ......................... Passed 10.87 sec; Start 367: gtest-tree-dataframe-test-dataframe-histomodels; 390/1231 Test #366: gtest-tree-dataframe-test-dataframe-callbacks ....................... Passed 8.60 sec; Start 368: gtest-tree-dataframe-test-dataframe-interface; Start 369: gtest-tree-dataframe-test-dataframe-nodes; 392/1231 Test #369: gtest-tree-dataframe-test-dataframe-nodes ........................... Passed 2.13 sec; Start 370: gtest-tree-dataframe-test-dataframe-regression; 393/1231 Test #367: gtest-tree-dataframe-test-dataframe-histomodels ..................... Passed 19.30 sec; Start 371: gtest-tree-dataframe-test-dataframe-utils; 394/1231 Test #371: gtest-tree-dataframe-test-dataframe-utils ........................... Passed 1.38 sec; Start 372: gtest-tree-dataframe-test-dataframe-report; 395/1231 Test #370: gtest-tree-dataframe-test-dataframe-regression ...................... Passed 12.11 sec; Start 373: gtest-tree-dataframe-test-dataframe-splitcoll-arrayview; 396/1231 Test #372",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:758,cache,cache,758,https://root.cern,https://github.com/root-project/root/pull/10300,1,['cache'],['cache']
Performance,"# This Pull request:. ## Changes or fixes:; - `RooFit::HistFactory::ConfigParser`: function `ConfigParser::CreateMeasurementFromDriverNode()`fix null dereferences, improve logic, fix some other edge cases, optimise performance; - `TMVA::DataLoader`: calling `.front()` on an empty container is undefined, fix also null ptr dereference; - minor RooFit fixes for null ptr dereferences. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9271:215,perform,performance,215,https://root.cern,https://github.com/root-project/root/pull/9271,1,['perform'],['performance']
Performance,"# This Pull request:. ## Changes or fixes:; Impossibility to build ROOT when another ROOT is already installed under /usr/ or other global directory for CLANG.; The modulemap file which is loaded on start of the interpreter was renamed from module.modulemap to ROOT.modulemap , this allows to avoid collisions with filenames. ## Checklist:. - [X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #7128",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14321:189,load,loaded,189,https://root.cern,https://github.com/root-project/root/pull/14321,1,['load'],['loaded']
Performance,"# This Pull request:. ## Changes or fixes:; Let user stop internal timer, for performance reasons, when there is a priori knowledge that there is no remote check needed. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8269",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8561:78,perform,performance,78,https://root.cern,https://github.com/root-project/root/pull/8561,1,['perform'],['performance']
Performance,"# This Pull request:. ## Changes or fixes:; We found and fixed two bugs in the RooFit TestStatistics likelihoods that negatively affected performance:. 1. TestStatistics likelihoods were being recalculated every time. They now have caching enabled, so they are only recalculated when parameters change.; 2. While cloning the dataset inside the likelihood builder for simultaneous components, all parameters were cloned. Now we only clone the parameters relevant to the specific pdf component. With these fixes, single-worker performance of MultiProcess enabled fits is now on par with old style RooFit fits, at least with batch mode disabled. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10832:138,perform,performance,138,https://root.cern,https://github.com/root-project/root/pull/10832,2,['perform'],['performance']
Performance,"# This Pull request:. - Cleans up dangling[^1] images and unused containers before running; - Renames `buildroot.yml` to `root-ci.yml` and `rootci-installers/` to `root-ci-config`; - Enables unbuffered python output again. Buffered python output sometimes (often) causes the output to be sorted by stderr first, then stdout. This makes the grouping wrong and warnings out of order. Disabling buffering is also a very minor performance loss for the CI because CMake, CTest and git writes most of their output to stderr, which is already unbuffered. [^1]: Images that are still on disk, but no longer tagged because they are overwritten by an updated one.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12309:423,perform,performance,423,https://root.cern,https://github.com/root-project/root/pull/12309,1,['perform'],['performance']
Performance,"# This Pull request:. Adds optimized `BulkRead` implementations for RVec of simple types and cardinality fields. Along the way, fixes an issue with RNTuple's handling of adopted RVecs. @eguiraud @vepadulano If RDF relies on the elements of a bulk of RVec<PoD> being all consecutively in memory, we also need to implement `BulkRead` for `RArrayAsRVecField` (#13040). ## Checklist:. - [X] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13382:27,optimiz,optimized,27,https://root.cern,https://github.com/root-project/root/pull/13382,1,['optimiz'],['optimized']
Performance,"# This Pull request:. Adds plugin support to cling. This patch enables loading clang/pass plugins with the flag: . `EXTRA_CLING_ARGS=""-fplugin=path/to/plugin.so -fpass-plugin=path/to/plugin.so""`. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15169:71,load,loading,71,https://root.cern,https://github.com/root-project/root/pull/15169,1,['load'],['loading']
Performance,# This Pull request:. Adds signpost intervals on macOS for module loading operations. This allows profiling expensive loaded modules when running under instruments. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13146:66,load,loading,66,https://root.cern,https://github.com/root-project/root/pull/13146,2,['load'],"['loaded', 'loading']"
Performance,"# This Pull request:. Adds the version 1 binary format specification and upgrades the implementation from version 0 to version 1. This is a backwards incompatible change. As of version 1, RNTuple is supposed to stay backwards compatible. The new binary format is a precondition for, among other things, the following required features; - Support for incremental loading of meta-data for very large files (>100G); - Sharded clusters, needed for backfilling; - Forward-compatibility; - Meta-data support. Compared to the v0 format, the header is ~40% smaller and the footer ~100% smaller (after zstd compression). This PR sets the pre-release tag 1 in the binary format, so files written in this version trigger a warning on reading. The pre-release tag might increase in follow-up PRs. Once stable, the pre-release tag will be set to 0. Other follow-up PRs:; - Use v1 serialization in DAOS backend; - Remove v0 serialization code",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8897:362,load,loading,362,https://root.cern,https://github.com/root-project/root/pull/8897,1,['load'],['loading']
Performance,"# This Pull request:. Allow to populate ROOT using FetchContent. Only compilation has been tested and further work should be done to allow to used the fetched ROOT. snippet:; ```cmake; cmake_minimum_required(VERSION 3.16). project(test). set(FETCHCONTENT_QUIET false); include(FetchContent); FetchContent_Declare(MyRoot GIT_REPOSITORY https://github.com/flagarde/root.git GIT_TAG FetchContent); #FetchContent_MakeAvailable(MyRoot); # Check if population has already been performed; FetchContent_GetProperties(MyRoot); if(NOT myroot_POPULATED); # Fetch the content using previously declared details; FetchContent_Populate(MyRoot). # Set custom variables, policies, etc.; # ... # Bring the populated content into the build; add_subdirectory(${myroot_SOURCE_DIR} ${myroot_BINARY_DIR}); endif(); ```. ## Changes or fixes: . Mainly some CMake variables. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary). This PR fixes :. It's a rework on #9516 . This PR should not change anything for users compiling ROOT as standalone project. However until now, it is not possible to directly include ROOT in an other project using FetchContent. This PR is focusing on the CMake configuration, generation steps and in the compilation process. No work has been done yet to let upstream project to find ROOT and to use it. I made a try on the last point but I think it is better to split the task in more steps. Usage of FetchContent is more and more used to create ""standalone"" project downloading and compiling all its dependencies. In the other PR tries some people and official maintainers have raised their interest on this feature.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15105:471,perform,performed,471,https://root.cern,https://github.com/root-project/root/pull/15105,1,['perform'],['performed']
Performance,# This Pull request:. An option is added to selectively turn off const optimization of level 1 or level 2 for PDF components. ## Changes or fixes:. The attributes. - NoOptimizeLevel1; - NoOptimizeLevel2. can be added to disallow const-optimization of level 1 or 2 on any component. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9338:71,optimiz,optimization,71,https://root.cern,https://github.com/root-project/root/pull/9338,2,['optimiz'],['optimization']
Performance,"# This Pull request:. Do not use `cling::printValue` for printing the column elements of the arithmetic types. ## Changes or fixes:. This <strike>require a proper specialisation, however it already</strike> gives `x10` performance improvement on my laptop. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . fixes #14511. @vepadulano - FYI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14692:219,perform,performance,219,https://root.cern,https://github.com/root-project/root/pull/14692,1,['perform'],['performance']
Performance,"# This Pull request:. Explicitly linked the core library against `libatomic`. This is necessary on some platforms in order to use the atomic operations performed by the library. ## Changes or fixes:. The current master branch, without the fix, produces the following build error on Raspberry Pi OS with GCC 11. (Though the exact GCC version doesn't matter much, just that it would not be the built-in GCC 6.3 coming with the OS.). ```; [100%] Linking CXX executable src/rootcling_stage1; ../foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o: In function `ROOT::Experimental::RLogManager::Emit(ROOT::Experimental::RLogEntry const&)':; RLogger.cxx:(.text+0x99c): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0x9c8): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0x9e8): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0xa08): undefined reference to `__atomic_fetch_add_8'; RLogger.cxx:(.text+0xa30): undefined reference to `__atomic_fetch_add_8'; ../foundation/CMakeFiles/Foundation_Stage1.dir/src/RLogger.cxx.o:RLogger.cxx:(.text+0xa58): more undefined references to `__atomic_fetch_add_8' follow; collect2: error: ld returned 1 exit status; core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/build.make:242: recipe for target 'core/rootcling_stage1/src/rootcling_stage1' failed; make[3]: *** [core/rootcling_stage1/src/rootcling_stage1] Error 1; CMakeFiles/Makefile2:26106: recipe for target 'core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all' failed; make[2]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/all] Error 2; CMakeFiles/Makefile2:26113: recipe for target 'core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/rule' failed; make[1]: *** [core/rootcling_stage1/CMakeFiles/rootcling_stage1.dir/rule] Error 2; Makefile:8132: recipe for target 'rootcling_stage1' failed; make: *** [rootcling_stage1] Error 2; ```. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary) -",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9987:152,perform,performed,152,https://root.cern,https://github.com/root-project/root/pull/9987,1,['perform'],['performed']
Performance,# This Pull request:. Implements writing page checksums and checksum verification on read.; Page checksums are written on `SealPage`. They are verified on `LoadSealedPage()` and on `UnsealPage()`. Note that the page size stored in locators does not change. Pages flagged as having a checksum are serialized with additional trailing 8 bytes. Still some commit cleanup todo. Depends on #15767,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15789:156,Load,LoadSealedPage,156,https://root.cern,https://github.com/root-project/root/pull/15789,1,['Load'],['LoadSealedPage']
Performance,"# This Pull request:. Increase some test timeouts. ## Changes or fixes:. Fixes occasional test timeout failures. Mostly seen on aarch64.; ```; The following tests FAILED:; 	330 - TMVA-DNN-MethodDL-Adam-Optimization-Cpu (Timeout); 	967 - tutorial-tmva-TMVAMulticlass (Timeout); ```; The timeout has been seen for various tutorial-tmva-TMVA* tests, not just the one mentions above. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10886:202,Optimiz,Optimization-Cpu,202,https://root.cern,https://github.com/root-project/root/pull/10886,1,['Optimiz'],['Optimization-Cpu']
Performance,# This Pull request:. Loads factory expressions and export keys in RooFit automatically to avoid unnecessary imports. ## Changes:. It's not required to call `loadExportKeys` and `loadFactoryExpressions` every time to load default JSON I/O keys. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13152:22,Load,Loads,22,https://root.cern,https://github.com/root-project/root/pull/13152,4,"['Load', 'load']","['Loads', 'load', 'loadExportKeys', 'loadFactoryExpressions']"
Performance,# This Pull request:. Missing experimental add-on module ROOT.RDF.Experimental.Distributed (DistRDF) should not fail the loading of the rest of the ROOT.RDF namespace. Also addresses a mismatch in the minimum Python version check in the code vs. cmake. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes: https://bugzilla.redhat.com/show_bug.cgi?id=2173518,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12407:121,load,loading,121,https://root.cern,https://github.com/root-project/root/pull/12407,1,['load'],['loading']
Performance,# This Pull request:. This PR refactors the iterator implementation for the JSON interface to avoid performance issues with reading workspaces from JSON. ## Changes or fixes:. Reading JSON files is much faster now. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9728:100,perform,performance,100,https://root.cern,https://github.com/root-project/root/pull/9728,1,['perform'],['performance']
Performance,"# This Pull request:. Updates the binary format to release candidate 2. The changes are result of the RNTuple design workshop. The changes improve forward compatibility, scalability, and design limits. **Note**: I reverted the removal of the compression settings per column and cluster from the page list. We concluded to remove the settings based on the assumption that this information would only be useful for reporting, and for reporting it is acceptable to check the pages directly. However, meanwhile I realized another use case: scheduling decision based on the compression algorithm. We may decide to perform decompression on an accelerator based on the algorithm. In addition, the overhead after compression is low, [<1% of the size of footer + page list](https://docs.google.com/spreadsheets/d/17jGTCO90nzYr3Ktevq2DBn1DpEQLqzVGy3Uuy3oKtMA/edit?usp=sharing). ## Changes or fixes:. - Add a document version to the RNTuple binary format specification; - Add format version to RNTuple anchor; - Make all sizes in the anchor 64bit wide; - Remove individual versioning from envelopes; - Use 64bit xxhash3 for anchor and envelope checksums (replaces crc32); - Allow for 64bit wide envelopes and frames; - Clarify use of feature flag; - Add minimum entry and entry span to cluster group records; - Move cluster summaries into the page lists; - Enlarge switch column to 96bit. ## Checklist:. - [X] tested changes locally; - [X] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13779:170,scalab,scalability,170,https://root.cern,https://github.com/root-project/root/pull/13779,2,"['perform', 'scalab']","['perform', 'scalability']"
Performance,# This Pull request:; Add `RNTupleWriter::CreateEntry()` and uses it in a demonstration on multi-threaded writing.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8688:91,multi-thread,multi-threaded,91,https://root.cern,https://github.com/root-project/root/pull/8688,1,['multi-thread'],['multi-threaded']
Performance,"# This Pull request:; Adds the rootreadspeed executable to the ROOT package. It allows for testing throughputs when reading .root files under various configurations. ## Changes or fixes:; - Integrates the source code into ROOT (under `tree/readspeed`); - Adds the `rootreadspeed` executable, runnable once ROOT has been installed; - Adds a new test suite for the readspeed application. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes - N/A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11102:99,throughput,throughputs,99,https://root.cern,https://github.com/root-project/root/pull/11102,1,['throughput'],['throughputs']
Performance,"# This Pull request:; As a follow-up from #8688, this is a sketch of a thread-safe, bounded queue that could be used as a channel to transfer work items between consumer and producer threads. Opened as draft to solicit input if such a class would be a useful addition to the ROOT internal infrastructure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8715:92,queue,queue,92,https://root.cern,https://github.com/root-project/root/pull/8715,1,['queue'],['queue']
Performance,"# This Pull request:; Continue Adrian's work: This draft PR for testing the doxygen generation GitHub action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #16046. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the Doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions support defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16724:699,OPTIMIZ,OPTIMIZATION,699,https://root.cern,https://github.com/root-project/root/pull/16724,1,['OPTIMIZ'],['OPTIMIZATION']
Performance,"# This Pull request:; Continue Jollys work: This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. Initial PR #15337. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. It also uploads it to GitHub as an artifact. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [x] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs. This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16046:697,OPTIMIZ,OPTIMIZATION,697,https://root.cern,https://github.com/root-project/root/pull/16046,1,['OPTIMIZ'],['OPTIMIZATION']
Performance,# This Pull request:; Development of the convolution operator for the ROOT/TMVA SOFIE (System for Optimized Fast Inference code Emit). ## Checklist:; - [ x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8800:98,Optimiz,Optimized,98,https://root.cern,https://github.com/root-project/root/pull/8800,1,['Optimiz'],['Optimized']
Performance,# This Pull request:; Fixes GL drawing for scaled shapes which are normally optimized to use GL primitives and appeared un-scaled (e.g. tubes). ## Changes or fixes:; Added new flag `TBuffer3D::fScaled` set by `TGeoScaledShape::GetBuffer3D` and used by the viewer to decide if `TBuffer3D::kRaw` section needs to be filled/used. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13253:76,optimiz,optimized,76,https://root.cern,https://github.com/root-project/root/pull/13253,1,['optimiz'],['optimized']
Performance,"# This Pull request:; Just a draft PR to test for performance issues/failing tests. . This fixes the failing python enum tests like:; - `roottest-python-cpp-cpp`; - `roottest-python-cmdLineUtils-ROOT_8197`. A memory leak was fixed in LLVM commit [142f270](https://github.com/devajithvs/llvm-project-root/commit/142f270c279f2576e4618fc0d1121181c7531fdf), which caused our tests to fail as they relied on the previous behavior. If there are no serious performance issues/failure, we can clean up and try to upstream this patch to cppyy. Currently a temporary fix https://github.com/devajithvs/root/commit/de5d1413e07170e396ac51d982c0844e4f548f4b is used to fix the failing tests for LLVM18. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16000:50,perform,performance,50,https://root.cern,https://github.com/root-project/root/pull/16000,2,['perform'],['performance']
Performance,"# This Pull request:; Many years ago, when I originially wrote the CholeskyDecompGenDim class, I argued that the class does not need copy constructor or assignment operator implementations because nobody would ever want to copy a decomposition. Well, it turns out that in today's world, one wants to be able to move (and potentially also copy) CholeskyDecompGenDim, so you can put it into an std::optional, for example, so you can return a std::nullopt if the decomposition state is not okay, and a decomposition otherwise. The code as it was up to this MR does not behave correctly if a CholeskyDecompGenDim is copied, moved or assigned. In the old code, if you copy or move a CholeskyDecompGenDim, you're likely to read garbage from the decomposition because of a potential for use-after-free, and/or get a double free on destruction of the object that goes out of scope later. ## Changes or fixes:; This patch fixes this shortcoming by using a std::unique_ptr<F[]> to hold the allocated memory. As a result, we can use defaulted destructor, move assignment operators and constructors, and default constructors, and just need to implement a specialized copy constructor and assignment operator. This change should be transparent to existing code, and enable new use cases, without sacrificing performance. (Note: CholeskyDecomp itself does not need to be fixed because the size of the matrix is known at compile time, and storage is statically allocated.). ## Checklist:. - tested changes locally: yes; - updated the docs (in-line documentation comments have been updated, but no changes are visible to callers in existing code that did not trigger the bug that this MR fixes)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14399:1295,perform,performance,1295,https://root.cern,https://github.com/root-project/root/pull/14399,1,['perform'],['performance']
Performance,"# This Pull request:; TGeo uses internally a material ""dummy"", which is not a valid material, but gets ejected into the GDML.; This material is not understood by Geant4 and inhibits produced GDML files being loaded to Geant4.; A user switch `TGDMLWrite::SetIgnoreDummyMaterial(true)` allows to inhibit to eject this material into the GDML. ## Changes or fixes:; Badly produced GDML files. ## Checklist:. - [ x] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11886:208,load,loaded,208,https://root.cern,https://github.com/root-project/root/pull/11886,1,['load'],['loaded']
Performance,"# This Pull request:; The `RooLagrangianMorphFunc` loads its input objects from a nested set of `TFolders` stored in a `TFile`. ; This MR adds protection (inspired by [ROOT-9275](https://sft.its.cern.ch/jira/browse/ROOT-9275) to avoid memory leaks in the initialisation of the `RooLagrangianMorphFunc`, which for large `RooFit` workspaces with many morphing functions can otherwise become unfeasible to use. . ## Changes or fixes:; - add a `cleanUpFolder` helper method to an existing anoymous namespace to `RooLagrangianMorphFunc.cxx`, which ensures ownership is enabled for `TFolder`s loaded from `TFile`s and optionally deletes the folders after setting them up ; - add a templated `loadFromFileResidentFolder` method to the same anonymous namespace in `RooLagrangianMorphFunc.cxx`, refactoring the procedure of loading an object from a nested `TFolder` structure that was previously performed in various locations in the class. The method exploits the `cleanUpFolder` method to prevent memory leaks in the access procedure. . ## Checklist:. - [ x ] tested changes locally - confirmed leak rate massively reduced in local testing. Draft test script (not yet merged) provided by @rahulgrit retains same output as before the changes; - [ ] updated the docs (if necessary) - no changes to user-accessible code. Inline doxygen documentation of new methods. . Tagging @rahulgrit @guitargeek",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9717:51,load,loads,51,https://root.cern,https://github.com/root-project/root/pull/9717,5,"['load', 'perform']","['loadFromFileResidentFolder', 'loaded', 'loading', 'loads', 'performed']"
Performance,"# This Pull request:; This draft PR for testing the doxygen generation github action with our self-hosted runners.; Uses our existing Makefile setup. ## Status; Succeeded with building only docs for `core`.; The workflow first builds `root` without tests and then makes the doxygen documentation. ## Checklist:; - [x] **Test with build from scratch and all documentation folders**; - [ ] Install latest version of `doxygen`, `qhelpgenerator` and other required packages in image at https://github.com/root-project/root-ci-images; - [ ] Upload result to website/S3; - [ ] Nightlies for different releases; - [ ] OPTIMIZATION: use build from existing build workflows instead of building again in this workflow. We could for example add a job in `root-master.yml` that only builds documentation after the `run_nightlies` job. Github actions supports defining dependencies between jobs: https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow#defining-prerequisite-jobs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15337:611,OPTIMIZ,OPTIMIZATION,611,https://root.cern,https://github.com/root-project/root/pull/15337,1,['OPTIMIZ'],['OPTIMIZATION']
Performance,"# This Pull request:; This is the Scipy plugin for ROOT math libraries for minimization; * Implementation using Python C API that supports several methods such as; Nelder-Mead, L-BFGS-B, Powell, CG, BFGS, TNC, COBYLA, SLSQP, trust-constr,; Newton-CG, dogleg, trust-ncg, trust-exact and trust-krylov.; * It supports:; * Jacobian (Gradients); * Hessian; * Bounds for the variables.; * Constraints functions but not using [NonlinearConstraint](https://docs.scipy.org/doc/scipy/reference/generated/scipy.optimize.NonlinearConstraint.html#scipy.optimize.NonlinearConstraint), this requires more design/development to be implemented.; * The implementation of extra parameters was implemented.; * This is part of the work presented in CHEP 2023 https://indico.jlab.org/event/459/contributions/11597/. ## Changes or fixes:. ## Checklist:. - [x] tested changes locally; - [x] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12997:500,optimiz,optimize,500,https://root.cern,https://github.com/root-project/root/pull/12997,2,['optimiz'],['optimize']
Performance,"# This Pull request:; Translates the tutorials of the `root/tutorials/v7` into Python language.; Some of them have C++ wrappers(simple extension module) to achieve their functionality and match ; the behavior of its corresponding C++ version.; As suggested by cppyy documentation, first they(the wrappers) are compiled, then they are loaded in the Python script. ## Checklist:; - [yes] tested changes locally; - [yes] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16657:334,load,loaded,334,https://root.cern,https://github.com/root-project/root/pull/16657,1,['load'],['loaded']
Performance,"# This Pull request:; allows loading a RNTuple containing locators of unknown types. Rather than failing upon reading the RNTuple, we will throw an exception only when attempting to load a page containing an unknown locator type. This allows reconstructing the model and reading the descriptor. ## Checklist:. - [x] tested changes locally; - [ ] updated the docs (if necessary)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16760:29,load,loading,29,https://root.cern,https://github.com/root-project/root/pull/16760,2,['load'],"['load', 'loading']"
Performance,"# This Pull request:; fixed https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console. ## Changes or fixes:; reverted header RExport.h changed in https://github.com/root-project/root/commit/4809ef48e9d3cc48bfe5f81f971a5c535b593b39. ## Checklist:. - [ X] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes # . https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/2946/LABEL=ROOT-performance-centos8-multicore,SPEC=default,V=master/console",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8843:133,perform,performance-,133,https://root.cern,https://github.com/root-project/root/pull/8843,2,['perform'],['performance-']
Performance,"## Bug description; <!--; A clear and concise description of what you expected to happen.; -->. When running over TTrees, RDF event loops that exhaust all entry ranges specified via `df.Range(..)` quit the event loop early as a performance optimization. RDataSource-based event loops do not, and instead run until the end of the dataset in all cases (performing no processing after Ranges have been exhausted). This yields correct results but wastes CPU cycles.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6455:228,perform,performance,228,https://root.cern,https://github.com/root-project/root/issues/6455,3,"['optimiz', 'perform']","['optimization', 'performance', 'performing']"
Performance,"## Changes:. This PR introduces a major refactoring of the `RooAbs(Opt)TestStatistic`-`RooNLLVar` inheritance tree into:. 1. statistics-based classes on the one hand;; 2. calculation/evaluation/optimization based classes on the other hand. The likelihood is the central unit on the statistics side. The `RooAbsL` class is implemented for four kinds of likelihoods: binned, unbinned, ""subsidiary"" (an optimization for numerical stability that gathers components like global observables) and ""sum"" (over multiple components of the other types). These classes provide ways to compute their components in parallelizable chunks that can be used by the calculator classes as they see fit. On top of the likelihood classes, we also provide for convenience a set of likelihood builders. The calculator ""`...Wrapper`"" classes are abstract interfaces. These can be implemented for different kinds of algorithms, or with different kinds of optimization ""back-ends"" in mind. In an upcoming PR, we will introduce the fork-based multi-processing implementation based on `RooFit::MultiProcess`. Other possible implementations could use the GPU or external tools like TensorFlow. The coupling of all these classes to `RooMinimizer` is made via the `MinuitFcnGrad` class, which owns the `...Wrappers` that calculate the likelihood components. ## Todo:. There are still a couple of things that require attention, which I hope the reviewers can help me with:. 1. I have a Kahan summation helper class. This should probably be replaced with the new Kahan summation class in ROOT itself, but I didn't get to this yet. Maybe it is not urgent to do now, up for discussion.; 2. `likelihood_builders.cxx` is still missing the top level entry point function. This should be quite a simple function: it should just check whether the pdf is binned, unbinned or sum and has subsidiary terms. All the building blocks are already present, so it is just a matter of building it, but didn't get to it yet.; 3. `optional_parameter_type",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700:194,optimiz,optimization,194,https://root.cern,https://github.com/root-project/root/pull/8700,3,['optimiz'],['optimization']
Performance,"## Describe the bug. I just ran into an issue while trying to use the ATLAS analysis software on the latest version of macOS, with the latest version of Xcode. While trying to load the dictionary of a class whose header includes `<boost/shared_ptr.hpp>`, my test application dies. To simplify things a bit, I put a simple reproducer under: https://github.com/krasznaa/root-boost-dictionary-error With which I see the following:. ```; [bash][eowyn-1]:root-boost-dictionary-error > root; ------------------------------------------------------------------; | Welcome to ROOT 6.22/02 https://root.cern |; | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosx64 on Aug 17 2020, 12:46:52 |; | From tags/v6-22-02@v6-22-02 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] MyClass c;; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/smart_ptr/shared_ptr.hpp:1072:31: error: expected expression; template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT; ^; /Users/krasznaa/ATLAS/sw/projects/externals/build/src/ROOT-build/etc/cling/lib/clang/5.0.0/include/stdatomic.h:83:73: note: expanded from macro 'atomic_is_lock_free'; #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))); ^; In file included from libMyLibrary dictionary payload:5:; In file included from ./MyClass.h:6:; In file included from /Users/krasznaa/ATLAS/sw/projects/externals/install/AnalysisBaseExternals/22.0.0/InstallArea/x86_64-mac1015-clang12-opt/include/boost/shared_ptr.hpp:17:; /Users",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6454:176,load,load,176,https://root.cern,https://github.com/root-project/root/issues/6454,1,['load'],['load']
Performance,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `tbb::global_control c(tbb::global_control::max_allowed_parallelism, 3);` followed by `ROOT::GetThreadPoolSize()` or `TThreadExecutor::GetPoolSize()` results in the incorrect number of threads reported (hardware concurrency rather than what was set via `tbb::global_control`. ## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. `ROOT::GetThreadPoolSize` should report the real TBB thread pool size or the real number of threads that ROOT will use. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. This code prints 8 two times on my 8-core workstation, but CPU usage is actually 300%, i.e. TBB's thread pool has size 3 but we ROOT reports 8. ```cpp; #include <ROOT/TThreadExecutor.hxx>; #include <tbb/global_control.h>; #include <tbb/task_scheduler_init.h>; #include <iostream>; #include <TROOT.h>. int main() {; tbb::global_control c(tbb::global_control::max_allowed_parallelism, 3);; ROOT::EnableImplicitMT();; std::cout << ROOT::GetThreadPoolSize() << std::endl;; ROOT::TThreadExecutor pool;; std::cout << pool.GetPoolSize() << std::endl;; auto busyLoop = [](int x) { int i = 0; for (; i < 1000000000+x; ++i); return i; };; pool.Foreach(busyLoop, {1,2,3,4,5,6,7,8});; return 0;; }; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6363:316,concurren,concurrency,316,https://root.cern,https://github.com/root-project/root/issues/6363,1,['concurren'],['concurrency']
Performance,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. `hadd --help` prints the following:. ```; usage: hadd [-a A] [-k K] [-T T] [-O O] [-v V] [-j J] [-dbg DBG] [-d D] [-n N]; [-cachesize CACHESIZE]; [-experimental-io-features EXPERIMENTAL_IO_FEATURES] [-f F]; [-fk FK] [-ff FF] [-f0 F0] [-f6 F6]; TARGET SOURCES. OPTIONS:; -a Append to the output; -k Skip corrupt or non-existent files, do not exit; -T Do not merge Trees; -O Re-optimize basket size when merging TTree; -v Explicitly set the verbosity level: 0 request no output, 99 is the default; -j Parallelize the execution in multiple processes; -dbg Parallelize the execution in multiple processes in debug mode (Does not delete partial files stored inside working directory); -d Carry out the partial multiprocess execution in the specified directory; -n Open at most 'maxopenedfiles' at once (use 0 to request to use the system maximum); -cachesize Resize the prefetching cache use to speed up I/O operations(use 0 to disable); -experimental-io-features Used with an argument provided, enables the corresponding experimental feature for output trees; -f Gives the ability to specify the compression level of the target file(by default 4) ; -fk Sets the target file to contain the baskets with the same compression; as the input files (unless -O is specified). Compresses the meta data; using the compression level specified in the first input or the; compression setting after fk (for example 206 when using -fk206); -ff The compression level use is the one specified in the first input; -f0 Do not compress the target file; -f6 Use compression level 6. (See TFile::SetCompressionSettings for the support range of value.); TARGET Target file; SOURCES Source files; ```. The options `-fk`, `-ff` and `-f0` are listed in the short usage overview as `[-fk FK] [-ff FF] [-f0 F0] `, but they do not accept a parameter. The docs mention that `-f` controls the compression _level_ of the target file (e.g. 4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6438:220,cache,cachesize,220,https://root.cern,https://github.com/root-project/root/issues/6438,5,"['CACHE', 'cache', 'optimiz']","['CACHESIZE', 'cache', 'cachesize', 'optimize']"
Performance,"## Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; This is a continuation of a jira issue originally found in multithreaded RDF [ROOT-10896](https://sft.its.cern.ch/jira/browse/ROOT-10896). If a TTree spans over multiple files (i.e. when its size is higher than `fgMaxTreeSize`) TBufferMerger cannot correctly save its contents to the (multiple) TBufferMergerFile(s) in its queue. This is due to the original TFile being deleted in [`TTree::ChangeFile`](https://github.com/root-project/root/blob/4342e397b3c2a97a6851d895983291eddf8f033f/tree/tree/src/TTree.cxx#L2703) but not updated in TBufferMergerFile which then holds a dangling pointer. The program crashes with the following stacktrace (not really helpful even with debug symbols enabled in ROOT as well):; ```; vpadulan@fedorathinkpad-T550 [~/Projects/ROOT-10896]: ./tbuffermerger_setmaxsize_seq ; Fill: Switching to new file: tbuffermerger_sequential_1.root; Fill: Switching to new file: tbuffermerger_sequential_2.root. *** Break *** segmentation violation; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f4fca7fbeca in wait4 () from /lib64/libc.so.6; #1 0x00007f4fca777aa7 in do_system () from /lib64/libc.so.6; #2 0x00007f4fcd15e590 in TUnixSystem::Exec (this=0xe4c800, shellcmd=0x1f92840 ""/home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/etc/gdb-backtrace.sh 8100 1>&2"") at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f4fcd15edf6 in TUnixSystem::StackTrace (this=0xe4c800) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f4fcd16271a in TUnixSystem::DispatchSignals (this=0xe4c800, sig=kSigSegmentationViolation) at /home/vpadulan/Programs/rootproject/root/core/unix/src/TUnixSystem.cxx:3649; #5 0x00007f4fcd15a82a in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6523:419,queue,queue,419,https://root.cern,https://github.com/root-project/root/issues/6523,1,['queue'],['queue']
Performance,"## Describe the bug; Crash. ```; [@ test]$ ./pad3. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007fd0a354d46c in __libc_waitpid (pid=19301, stat_loc=stat_loc; entry=0x7fffd00a2ce0, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007fd0a34caf62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fd0a66ce5dc in TUnixSystem::StackTrace (this=0x1a0b980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007fd0a66d106a in TUnixSystem::DispatchSignals (this=0x1a0b980, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007fd0a58b3774 in TPad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.cxx:11; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fd0a58b3774 in TPad::PaintLine (this=0x238b1d0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:4171; #6 0x0000000000400b7c in main (argc=<optimized out>, argv=<optimized out>) at test/pad3.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6446:545,optimiz,optimized,545,https://root.cern,https://github.com/root-project/root/issues/6446,5,['optimiz'],['optimized']
Performance,"## Describe the bug; Crash. ```; [@test]$ ./pad5.exe . *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc; entry=0x7ffeea3c7360, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6449:551,optimiz,optimized,551,https://root.cern,https://github.com/root-project/root/issues/6449,2,['optimiz'],['optimized']
Performance,"## Describe the bug; Crash.; ```; [host@hermes Desktop]$ g++ canvas.cxx $(root-config --glibs --cflags --libs) -o canvas -g; [host@hermes Desktop]$ ./canvas. *** Break *** floating point exception. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f481d5d946c in __libc_waitpid (pid=1478152, stat_loc=stat_loc; entry=0x7ffe12925160, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f481d556f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f4821f685dc in TUnixSystem::StackTrace (this=0x244d980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f4821f6b06a in TUnixSystem::DispatchSignals (this=0x244d980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 TPad::ResizePad (this=0x2503ca0, option=0x7f4820490bae """") at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:5490; #6 0x00007f4820448f84 in TCanvas::Build (this=0x2503ca0) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:637; #7 0x00007f482044969e in TCanvas::Constructor (this=this; entry=0x2503ca0, name=name; entry=0x400cc3 ""canvas"", title=title; entry=0x400cc3 ""canvas"", ww=4, ww; entry=-4, wh=wh; entry=-28) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:425; #8 0x00007f482044c88c in TCanvas::TCanvas (this=0x2503ca0, name=0x400cc3 ""canvas"", title=0x400cc3 ""canvas"", ww=-4, wh=-28) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TCanvas.cxx:366; #9 0x0000000000400ba3 in main (argc=1, argv=0x7ffe12927dc8) at canvas.cxx:5; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are reall",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6379:656,optimiz,optimized,656,https://root.cern,https://github.com/root-project/root/issues/6379,1,['optimiz'],['optimized']
Performance,"## Describe the bug; TPad::GetPrimitives() returns nullptr instead of an empty list, gets defererenced ... and so on.; ```; [@test]$ ./pad4 . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007fc2c245846c in __libc_waitpid (pid=25123, stat_loc=stat_loc; entry=0x7ffefaecb520, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007fc2c23d5f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fc2c55d95dc in TUnixSystem::StackTrace (this=0xcf6980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007fc2c55dc06a in TUnixSystem::DispatchSignals (this=0xcf6980, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; =================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6447:636,optimiz,optimized,636,https://root.cern,https://github.com/root-project/root/issues/6447,1,['optimiz'],['optimized']
Performance,"## Description. There are several known compatibility problems of PyMVA and SOFIE with common Python modules that need to be fixed:. ### 1. Collisions of `openblas` because of SOFIE vs. NumPy; SOFIE can load an `openblas` version that is different from the one built in to NumPy, which can cause crashes for example on AlmaLinux 9 (the [TMVA_SOFIE_RSofieReader.C](https://github.com/root-project/root/blob/master/tutorials/CMakeLists.txt#L302) tutorial test is deactivated for this reason). ### 2. TensorFlow 2.16 compatibility for Python 3.12 support; PyMVA doesn't work with TensorFlow>=2.16 because of the change from Keras 2 to Keras 3 in TensorFlow (that the motivation for this version check in [requirements.txt](https://github.com/root-project/root/blob/master/requirements.txt)). TensorFlow 2.16 support is important, because it's the first version that supports Python 3.12. ### 3. Collisions of `openblas` because of `tmva-cpu` vs NumPy; The TMVA CPU backend (activated with `tmva-cpu` has the same problem as stated in **1.**, because it also uses openblas. That's the reason why `tmva-cpu` is deactivated on `alma9`. ### 4. Collisions of `std::regexp` because of cppyy vs {torch, xgboost}; Collisions of `std::regexp` that comes with cppyy with the `std::regexp` in XGBoost or PyTorch. This is more of a [cppyy issue](https://github.com/wlav/cppyy/issues/227) (or an issue of the other modules), but mostly affects PyMVA tutorials, because that's where ROOT is imported together with machine learning libraries. When this is fixed, 872886b and 1bf3d5a can be reverted. Related issues:; * https://github.com/root-project/root/issues/15211",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15309:203,load,load,203,https://root.cern,https://github.com/root-project/root/issues/15309,1,['load'],['load']
Performance,"## Example benchmark of the effects of this PR. ### Setup; Hardware. * AMD 5950x (16 physical cores); * 64 GB RAM; * 1 TB NVMe SSD. Software. * Python 3.11, GCC 12; * dask 2023.2.0. Benchmark. * dimuon tutorial, using distrdf+dask; * 1 file, stored on local SSD. The file is preloaded in filesystem cache before the tests run; * ~2GB of data, 75 TTree clusters; * 2 physical cores. One Dask worker is spawned on each core. The benchmark is run keeping the number of cores fixed, increasing the number of partitions per core. Each test is run 10 times, plots show mean value at each number of partitions and the error is the standard error of the mean. ## Results; ### Memory usage. Memory is taken from `psutil.virtual_memory().available`, i.e. the total available memory on the system. The benchmark is the ""only"" process running on the system (i.e. the machine is disconnected from the internet and no other user applications are running at the same time). Memory used by the test run is computed as the difference between the memory available before running the analysis and the memory available at the end of the analysis, before exiting the Python script. ![avoid_rejitting_memory](https://user-images.githubusercontent.com/15638895/220674757-66fda652-9b61-4c11-8877-0fd3962833b4.png). ### Runtime. Runtime is computed as the runtime of the analysis, from right before creating the RDataFrame to the moment when the results of the computations are obtained. ![avoid_rejitting_runtime](https://user-images.githubusercontent.com/15638895/220674777-f6756062-73e6-447d-9f91-9b46096180f4.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12363#issuecomment-1440293977:299,cache,cache,299,https://root.cern,https://github.com/root-project/root/pull/12363#issuecomment-1440293977,1,['cache'],['cache']
Performance,"## Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Just like TTree does, TTreeReader should limit the event loop to the number of entries in the main tree. ## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following self-contained reproducer should print 10 (number of entries in the main tree), but prints 20 (number of entries in the friend tree). ```cpp; #include <ROOT/RDataFrame.hxx>; #include <TTreeReader.h>; #include <TTreeReaderValue.h>; #include <TFile.h>; #include <TTree.h>; #include <iostream>. int main() {; ROOT::RDataFrame(10).Define(""x"", ""42"").Snapshot(""main"", ""main.root"", {""x""});; ROOT::RDataFrame(20).Define(""y"", ""1"").Snapshot(""friend"", ""friend.root"", {""y""});. TFile fmain(""main.root""); ; auto tmain = fmain.Get<TTree>(""main""); ; TFile ffriend(""friend.root"");; auto tfriend = ffriend.Get<TTree>(""friend"");. tmain->AddFriend(tfriend); . int counter = 0;; TTreeReader r(tmain); ; while (r.Next()); ++counter;; std::cout << ""should be 10: "" << counter << std::endl;. return 0;; } ; ```. This becomes problematic when comparing e.g. the output of `TTree::Draw` with the output of `RDataFrame::Histo1D`:. ```cpp; tmain->Draw(""x""); // fills the histogram with 10 entries; ROOT::RDataFrame(*tmain).Histo1D(""x"")->DrawClone(); // fills the histogram with 20 entries, 10 of which are bogus; ```. ## Additional context; <!--; Add any other context about the problem here.; -->. The problem was first reported [on the forum](https://root-forum.cern.ch/t/add-friend-with-rdataframe/41652/10) and via TTreeReader it affects RDataFrame analyses too (but only if implicit multi-threading is disabled).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6518:1859,multi-thread,multi-threading,1859,https://root.cern,https://github.com/root-project/root/issues/6518,1,['multi-thread'],['multi-threading']
Performance,"## Explain what you would like to see improved. I know that this is a **very** first world problem, but it has been bugging me since a while. The build of ROOT using its CMake setup is not scaling well to many core systems at all. :frowning:. This is a snapshot of how ROOT 6.20/08 used my system's resources during its build:. ![root-6 20 08-build](https://user-images.githubusercontent.com/30694331/94133565-1d97ec80-fe61-11ea-927d-94b8926cd41b.png). The build starts ""pretty much"" at the left hand side of the timeline, and lasts until ""pretty much"" the right hand side of it. As you can see, the build starts out very well. Building LLVM scales perfectly to 64 threads. And I believe it would scale well to even beyond that. But once the LLVM build is done, many bottlenecks show up. First there is a big bottleneck with building `libCling` and `rootcling`, but after that the build of `libRIO` is also taking a surprising amount of time. And the build is stuck waiting for all of these. Towards the end things improve a bit once more, as many libraries / source files can build in parallel once more. But even then, very rarely does the build manage to make use of all of the available cores. ## Optional: share how it could be improved. From a quick glance it seems that ROOT's CMake configuration sets up way too many unnecessary dependencies between its build targets. Most of the issues seem to arise from how the dictionary generation is set up as far as I can see. In ATLAS I use the following code to set up the generation of dictionary source files:. https://gitlab.cern.ch/atlas/atlasexternals/-/blob/master/Build/AtlasCMake/modules/AtlasDictionaryFunctions.cmake. And that provides a much better behaviour. Mainly because in ATLAS's setup dictionary generations do not need to wait for anything. Even if the library that a dictionary is being produced for depends on a number of upstream libraries, the dictionary for that library can be generated before all the upstream libraries woul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6432:767,bottleneck,bottlenecks,767,https://root.cern,https://github.com/root-project/root/issues/6432,2,['bottleneck'],"['bottleneck', 'bottlenecks']"
Performance,## Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146659/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](ht,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1144980019:1559,load,load,1559,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1144980019,2,['load'],['load']
Performance,## Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146675/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](ht,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145207749:1559,load,load,1559,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145207749,2,['load'],['load']
Performance,"## More efficient datasets. RooDataSet is very inefficient when loading values, as it only loads single values. RooDataSet could theoretically adopt memory from a std::vector, making importing a zero-copy operation.; Further, RDataFrame snapshots or numpy arrays could be imported. *Originally suggested by Stephan Hageboeck in [ROOT-10366](https://sft.its.cern.ch/jira/browse/ROOT-10366)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557#issuecomment-1495749464:64,load,loading,64,https://root.cern,https://github.com/root-project/root/issues/6557#issuecomment-1495749464,2,['load'],"['loading', 'loads']"
Performance,"## Multi-threaded generation/evaluation of toys. When generating toys to estimate uncertainties on parameters, each round of toys is independent of each other. These can be done in threads. Possible interference with multi-threaded likelihood evaluations. *Originally suggested by Stephan Hageboeck in [9822](https://sft.its.cern.ch/jira/browse/ROOT-9822)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557#issuecomment-1916762430:3,Multi-thread,Multi-threaded,3,https://root.cern,https://github.com/root-project/root/issues/6557#issuecomment-1916762430,2,"['Multi-thread', 'multi-thread']","['Multi-threaded', 'multi-threaded']"
Performance,"## Overview. RDICT files store some useful information (in particular about class offsets) in ROOT files to avoid the potentially expensive call to the interpreter if the information is not the PCH. For example, ROOT's `libGeom` and other third-party code. This is done to circumvent the costly call to `ShowMembers` which will require parsing. CxxModules diminish that benefit as providing a finer grained control over the information deserialization. We see no observable benefits in generating RDICT files next to our pcm files. . ## Performance results. We have run several times all tests in `roottest/io` and `roottest/meta/MakeProject` folders and compared the results with and without generating RDICT (namely with ROOT master with `-Druntime_cxxmodules=On` with and without this PR). They are available [here](https://docs.google.com/spreadsheets/d/1Y_swct0USyX1DMp0tJOPdZzvmvIOTXOS9s7n08wCb2I/edit?usp=sharing) and [here](https://docs.google.com/spreadsheets/d/1s5LbPmhGBfhimirA0GH87nyEKcrGUfCX80H7-fOrjAU/edit?usp=sharing). ### Methodology. We have a forwarding `root.exe` which essentially calls `/usr/bin/time -v root.exe $@`. We have processed and stored this information in csv files. We have run in:; * (no)dict1-cold -- Tests are run immediately after restarting the physical test machine.; * (no)dict1a-cold -- Tests are run immediately after restarting the physical test machine. Second time.; * (no)dict2 -- Tests are run once again after running (no)dict1-cold;; * (no)dict3 -- Tests are run once again after running (no)dict2;; * (no)dict4 -- Tests are run once again after running (no)dict3;; * (no)dict5 -- Tests are run once again after running (no)dict4. The values of each column in (no)dict* are the sum of each value produced after running each test under roottest/io. The average values are computed in the columns under `dict` and `nodict`. The difference is shown in `diff`. There are two known test failures wrt to modules whose values are ignored. The machine specifi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012:537,Perform,Performance,537,https://root.cern,https://github.com/root-project/root/pull/3012,1,['Perform'],['Performance']
Performance,"## Performance after further //-isation. Note these are small gains; Benchmarks are run on small sample sizes. Training takes ~50% of total run time. Before:; root -l -b -q 'TMVAClassification.C(""BDTG"")' 4.06s user 1.01s system 147% cpu 3.423 total; root -l -b -q 'TMVARegression.C(""BDTG"")' 14.52s user 2.47s system 149% cpu 11.396 total; root -l -b -q 'TMVAMulticlass.C(""BDTG"")' 16.51s user 2.81s system 181% cpu 10.645 total. After:; root -l -b -q 'TMVAClassification.C(""BDTG"")' 3.99s user 0.97s system 149% cpu 3.310 total; root -l -b -q 'TMVARegression.C(""BDTG"")' 13.60s user 2.51s system 147% cpu 10.924 total; root -l -b -q 'TMVAMulticlass.C(""BDTG"")' 19.52s user 3.87s system 242% cpu 9.631 total. ## Output comparison. Summary: output identical before and after. ```; Classification; ==============. Top line: before; Bottom line: after. DataSet MVA Signal efficiency: from test sample (from training sample); Name: Method: @B=0.01 @B=0.10 @B=0.30; ------------------------------------------------------------------------------------------; dataset BDTG : 0.206 (0.540) 0.705 (0.858) 0.902 (0.928); dataset BDTG : 0.206 (0.540) 0.705 (0.858) 0.902 (0.928). Regression; ==========. Top line: before; Bottom line: after. DataSet Name: MVA Method: <Bias> <Bias_T> RMS RMS_T | MutInf MutInf_T; dataset BDTG : 0.198 0.165 2.60 2.00 | 3.084 3.149; dataset BDTG : 0.198 0.165 2.60 2.00 | 3.084 3.149. Multiclass; ==========. Top line: before; Bottom line: after. Dataset MVA Method ROC AUC Sig eff@B=0.01 Sig eff@B=0.10 Sig eff@B=0.30; Name: / Class: test (train) test (train) test (train) test (train). After:; dataset BDTG; ------------------------------; Signal 0.966 (0.981) 0.486 (0.659) 0.910 (0.955) 0.994 (0.996); Signal 0.966 (0.981) 0.486 (0.659) 0.910 (0.955) 0.994 (0.996); ; bg0 0.905 (0.932) 0.252 (0.325) 0.716 (0.801) 0.908 (0.955); bg0 0.905 (0.932) 0.252 (0.325) 0.716 (0.801) 0.908 (0.955); ; bg1 0.951 (0.955) 0.463 (0.465) 0.850 (0.845) 0.970 (0.979); bg1 0.951 (0.955) 0.463 (0.4",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2631:3,Perform,Performance,3,https://root.cern,https://github.com/root-project/root/pull/2631,1,['Perform'],['Performance']
Performance,"## Pythonic interaction with the RooWorkspace. This issue tracks the progress on the GSoC project on the Pythonic interaction with the RooWorkspace:; https://hepsoftwarefoundation.org/gsoc/2023/proposal_RooFit-RooWorkspacePythonization.html. This project was assigned to @yashnator. ## Milestones and TODOs. - [x] Pythonic way to use the RooWorkspace factory language using `__setitem__` on the workspace (#12911); - [x] Enable creation of pdf, functions and variables from Python dictionaries passed to `RooWorksapce.__setitem__` (#12994); - [x] Implement automatic loading of JSON IO keys (#13152); - [ ] Support creation of binned datasets from dictionaries as described in [this comment](https://github.com/root-project/root/issues/13185#issuecomment-1621628860); - [ ] Move all logic except for `dict` to string conversion to the C++ side; - [ ] Avoid using nlohmann-json directly, but use RooFits `JSONInterface` instead. ## Merged PRs. 1. https://github.com/root-project/root/pull/12911; 2. https://github.com/root-project/root/pull/12994; 3. https://github.com/root-project/root/pull/13152; 4. https://github.com/root-project/root/pull/13150",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13185:567,load,loading,567,https://root.cern,https://github.com/root-project/root/issues/13185,1,['load'],['loading']
Performance,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS; * Use multiprocess for RooStats calculators; * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense; * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6557#issuecomment-1334826540:20,Perform,Performance,20,https://root.cern,https://github.com/root-project/root/issues/6557#issuecomment-1334826540,2,"['Perform', 'perform']","['Performance', 'performance']"
Performance,"## This Pull request:. This is to follow-up on the mistake I did when performing the rebase for the [previous PR](https://github.com/root-project/root/pull/9665). ; Stating the PR message for clarity. The pull request add the tutorials for the lagrangian ; morphing class and also add an example for the factory interface. The are some accompanying ; fixes as listed below.; Please take a look and let me know if this looks good !. ## This Pull request:. - Add two tutorials `rf711_lagrangianmorph` and `rf712_lagrangianmorphfit` to demonstrate ; the usage of the `RooLagrangianMorphFunc` class; - The PR also includes an update to `rf512_wsfactory_oper` showing an example for the new; options of `taylorexpand` and `lagrangianmorph`; ; ## Changes or fixes:; - formatting of `tutorials/roofit/rf710_roopoly.py`; - The attribute for new physics couplings in the `RooLagrangianMorphFunc` class is changed ; from `NP` to `NewPhysics` to avoid confusion with other abbreviations; - The `lagrangianmorph` factory interface is update to accept arguments in any order. ## Checklist:. - [x] tested changes locally. Cheers,; Rahul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9680:70,perform,performing,70,https://root.cern,https://github.com/root-project/root/pull/9680,1,['perform'],['performing']
Performance,## This Pull request:; Broadcast the bias of Conv to ouput channels x output depth x output height x output width and add it to the output of each batch inside the loop. This makes it faster for Conv models with large batch size and especially for models with large input images and large batch size. It doesn't affect the performance of SOFIE for single event inference. - [x] tested changes locally,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11642:323,perform,performance,323,https://root.cern,https://github.com/root-project/root/pull/11642,1,['perform'],['performance']
Performance,"## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. 1. Ensure you are using ROOT >= 6.24/00; 1. Ensure you are using CMake >= 3.22.0; 1. Execute the provided `runit` script to configure, build, and execute the tests. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. 1. Problem verified on 6.24/06 and 6.25/02.; 2. SLF7.; 3. ROOT was compiled for UPS, configured using FNAL/art standard options. See attached ROOT build logs for details. ### Additional context; <!--; Add any other context about the problem here.; -->. The showstopper issue appears to be that when looking for information about `gallery::Event` (defined in an ""old-style"" dictionary rather than a C++ module), it mistakenly identifies the TMVA module as providing `Event` and never loads the dictionary containing the definition for `gallery::Event`. This issue does not occur if we look for the aliased `gallery::GalleryEvent` instead, nor if `runtime_cxxmodules=OFF`. In addition, when `runtime_cxxmodules=ON`—even for the ""good"" case—I get many messages of the form:; ```Console; Error in <TCling::RegisterRdictForLoadPCM>: Rdict '/scratch/greenc/products/root/v6_25_02/Linux64bit+3.10-2.17-e20-p399-debug/lib/libNet_rdict.pcm' is both in Module extension and in File system.; ```. This may be due to the presence of `dev=ON`, `asserts=ON`, `CMAKE_BUILD_TYPE=Debug`, `LLVM_BUILD_TYPE=Debug` or `LLVM_ENABLE_ASSERTIONS=ON`, but regardless: is this a real error, or indicative of another (or the same) bug, or should this be ignored by the art infrastructure which would otherwise convert it to a fatal exception?. ### Attached files:. * [build_root-v6_25_02-e20-p399-debug.log.gz](https://github.com",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583:1875,load,loads,1875,https://root.cern,https://github.com/root-project/root/issues/9583,1,['load'],['loads']
Performance,"## To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The first line executed is invalid C++ code, and cling rightly complains. The second line is valid code, but cling does not seem to be able to compile it after the previous compilation failure. Opening a new ROOT prompt and directly inserting the valid code works fine. ```; ~ root -l; root [0] ROOT::RDataFrame(10).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"");; ROOT_prompt_0:1:53: error: no matching member function for call to 'Snapshot'; /*** snip ***/; root [1] ROOT::RDataFrame(10).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"", {""x""});; IncrementalExecutor::executeFunction: symbol '_ZStanSt12memory_orderSt23__memory_order_modifier' unresolved while linking [cling interface function]!; You are probably missing the definition of std::operator&(std::memory_order, std::__memory_order_modifier); Maybe you need to load the corresponding shared library?; ```. ## Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master@3ae45ea5f9, RelWithDebInfo.; I could not reproduce with master@dcac6e1bf0, Debug build type.; The 6.22.02 conda package also seems to be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6439:1131,load,load,1131,https://root.cern,https://github.com/root-project/root/issues/6439,1,['load'],['load']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. In an ongoing development we have an external pulled into a header (SYCL related); that header has a static variable. JITting that header triggers static initialization which need the library to be loaded to resolve the symbol. That library doesn't get loaded when generating module.idx causing a missing symbol. (We had a similar case with Vc in the past, IIRC.). ### What is the expected behaviour?. No error message when generating `module.idx`. ### How to reproduce?. This can be reproduced with a modified ROOT:; ```diff; diff --git a/tree/dataframe/inc/ROOT/RDataFrame.hxx b/tree/dataframe/inc/ROOT/RDataFrame.hxx; index 7a094cc01f..d74c69aa2b 100644; --- a/tree/dataframe/inc/ROOT/RDataFrame.hxx; +++ b/tree/dataframe/inc/ROOT/RDataFrame.hxx; @@ -73,4 +73,6 @@ namespace cling {; std::string printValue(ROOT::RDataFrame *tdf);; } // ns cling; ; +static ROOT::RDataFrame thisWillBeBadForTheModulesIdx(17);; +; #endif // ROOT_RDATAFRAME; ```. This causes; ```; [522/527] Generating lib/modules.idx; [runStaticInitializersOnce]: Failed to materialize symbols: { (main, { __cxx_global_var_initcling_module_1_.2, __cxx_global_var_initcling_module_1_, _ZL29thisWillBeBadForTheModulesIdx, _ZN4ROOT8InternalL13gVersionCheckE, $.cling-module-1.__inits.0, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE10_M_releaseEv, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED2Ev, _ZNSt12__shared_ptrIN4ROOT6Detail3RDF12RLoopManagerELN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZN4ROOT10RDataFrameD2Ev, _ZN4ROOT3RDF10RInterfaceINS_6Detail3RDF12RLoopManagerEvED2Ev, _ZN4ROOT10RDataFrameD1Ev, _ZN4ROOT3RDF14RInterfaceBaseD2Ev, _ZNSt16_Sp_counted_baseILN9__gnu_cxx12_Lock_policyE2EE19_M_release_last_useEv, _GLOBAL__sub_I_cling_module_1, _ZNSt10shared_ptrIN4ROOT6Detail3RDF12RLoopManagerEED1Ev, _ZNSt14__shared_countILN9__gnu_cxx12_Lock_policyE2EED2Ev, _ZStL8__ioinit, __cxx_global_var_initcling_module_1_.1, _ZNSt16_Sp_counted_baseI",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12988:278,load,loaded,278,https://root.cern,https://github.com/root-project/root/issues/12988,2,['load'],['loaded']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Describe the bug. Using the example provide in the original [report](https://root-forum.cern.ch/t/linking-problems-with-shared-library-backward-backward-warning-h) : [linker_example.zip](https://github.com/root-project/root/files/11763343/linker_example.zip); Doing:; ```; make; root.exe -b -l -q macro.cc; ```; leads to:; ```. Loading A.sl. Processing macro.cc...; In file included from ADictUX dictionary payload:6:; ./B.h:5:18: error: base class has incomplete type; class B : public A {; ~~~~~~~^; ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'; class A {; ^; In file included from ADictUX dictionary payload:6:; ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'; B(int arg) : A(arg) {}; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H; ```. ### What is the expected behaviour?. The correct output is:; ```. Loading A.sl. Processing macro.cc...; init A with arg=0; test A; init A with arg=0; test A; ```. ### How to reproduce?. ```; unzip linker_example.zip; make; root.exe -b -q -q macro.cc; ```. ### ROOT version. Any v6 version. ### How did you install ROOT?. any. ### Which operating system are you using?. linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:; ```; diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx; index f56ce23b7a..7cd24d2c63 100644; --- a/core/dictgen/src/rootcling_impl.cxx",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:390,Load,Loading,390,https://root.cern,https://github.com/root-project/root/issues/13034,1,['Load'],['Loading']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Behavior: Snapshot warns that an illegaly named column will be renamed when writing to file. Then the column appears twice, with the new name and the original. Renamed leaves now appear outside of their original branch. Expected behavior: Only the renamed column appears in the saved tree, respecting the original tree structure. ### Reproducer. ```; //Dicts for the file structure; gSystem->Load(""$HOME/progs/ExRootAnalysis/libExRootAnalysis.so"");. auto df = ROOT::RDataFrame(""LHEF"", ""pp_2j_LO_H_T_35GeV.root"");. //redefinition of column with unsupported name. auto add_func_call_int=[](ROOT::VecOps::RVec<int> inputArray1,ROOT::VecOps::RVec<int> inputArray2){; auto Array3 = inputArray1+inputArray2;; return Array3;};. auto df2 = df.Redefine(""Event.Nparticles"",add_func_call_int,{""Event.Nparticles"",""Event.Nparticles""});. df2.Snapshot(""LHEF"", ""out_snapshot.root"");. std::unique_ptr<TFile> file1{TFile::Open(""out_snapshot.root"")};; TTree * tree1 = (TTree*)file1->Get<TTree>(""LHEF"");; tree1->Print(); . //Info in <Snapshot>: Column Event.Nparticles will be saved as Event_Nparticles; //Warning in <TTree::Bronch>: Using split mode on a class: TRootWeight with a custom Streamer. // Print() shows the column Events_Nparticles (renamed), but the original is also written to the file as Events.Nparticles. //Redefining by doing ; auto df2 = df.Redefine(""Event.Nparticles"",""Event.Nparticles+Event.Nparticles""}); ; //for example, just gives ; //Error in <TRint::HandleTermInput()>: std::runtime_error caught: RDataFrame::Redefine: cannot define variation ""Event.Nparticles"". Not a valid C++ variable name.; ```. [pp_3j_LO_H_T_2_35GeV.root.tar.gz](https://github.com/root-project/root/files/12874991/pp_3j_LO_H_T_2_35GeV.root.tar.gz). ### ROOT version. ROOT 6.28/00 . ### Installation method. built from source. ### Operating system. Linux Mint 21.1 Cinnamon. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13846:467,Load,Load,467,https://root.cern,https://github.com/root-project/root/issues/13846,1,['Load'],['Load']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. From https://its.cern.ch/jira/browse/ROOT-10196. Since boundary check of TH1D::fArray is not performed in TH1D::AddBinContent, the method can cause memory issues.  . I understand that TH1::AddBinContent is very frequently called from TH1::Fill and thus I guess the developers do not want to repeat a boundary check again in TH1::AddBinContent. But TH1::SetBinContent does a boundary check and users like me expect that TH1::AddBinContent also checks the TH1::fArray boundary. ```cpp; void test() {}; int nbins = 500;;  TH1D* h = new TH1D(""h"", """", nbins, 0, nbins);.   for(int j = 0; j < 1000; j++){;     int bin = h->GetBin(500);;     for(int i = bin; i < bin + 100; i++){;       h->AddBinContent(i, 1);;     };   }; ```; ```; $ root; root [0] .L test.C; root [1] for(int i = 0; i < 100; i++) test();; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; Warning in <TROOT::Append>: Replacing existing TH1: h (Potential memory leak).; root.exe(67870,0x10be0f5c0) malloc: Incorrect checksum for freed object 0x7fedb5190a00: probably modified after being freed.; Corrupt value: 0x408f400000000000}}{{root.exe(67870,0x10be0f5c0) malloc: *** set a breakpoint in malloc_error_break to debug; ```. ### Reproducer. As per the description. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14575:168,perform,performed,168,https://root.cern,https://github.com/root-project/root/issues/14575,1,['perform'],['performed']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Hi ROOT team,. We ran into some trouble last night with the ROOT ""HEAD"" builds that have CUDA enabled in our LCG nightlies. The builds failed on these platforms: x86_64-centos7-gcc11-opt, x86_64-centos8-gcc11-opt, and el9-gcc11-opt. These are the ones we use for this configuration. @bellenot: asked me to let you know, so here's the ticket. Here's the error message we got:. ```; Error: Module 'RooFitCuda.pcm' failed to load.; ```; and this:; ```; make[5]: *** [roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/build.make:519: roofit/roofitcore/G__RooFitCore.cxx] Error 1; make[5]: Target 'roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/depend' not remade because of errors.; make[4]: *** [CMakeFiles/Makefile2:44521: roofit/roofitcore/CMakeFiles/G__RooFitCore.dir/all] Error 2; ```. you can find the full build logs here:. http://cdash.cern.ch/upload/d526fd513d6f4007d95aa0eeb56dfc0627929bf1/ROOT-HEAD-build.log. Thanks for looking into this, and let me know if you need anything else!. Cheers,; Dmitri. ### Reproducer. No reproducer. ### ROOT version. HEAD. ### Installation method. build from sources. ### Operating system. Linux, centos7. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13415:497,load,load,497,https://root.cern,https://github.com/root-project/root/issues/13415,1,['load'],['load']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. If display histogram, zoom in with mouse wheel an then zoom out, content of stats box changes.; Most probably due to the fact that `TAxis::kAxisRange` flag is not reset after unzooming. ### Reproducer. Load and display histogram with the command:; ```; root --web=off -l https://root.cern/js/files/hsimple.root -e 'hpxpy->Draw()' ; ```; And then zoom in/out with mouse wheel. . Before:; ![before](https://github.com/root-project/root/assets/4936580/82dba545-b9ed-4a2d-b59a-aff1a72a5ece). After:; ![after](https://github.com/root-project/root/assets/4936580/6659d04d-65c2-4e0f-b872-564ce3b34b01). ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13880:277,Load,Load,277,https://root.cern,https://github.com/root-project/root/issues/13880,1,['Load'],['Load']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In `master` it seems like objects on the `PyROOT` side always have `__getitem__` defined. Here is a simple reproducer:. ```; $ python -c ""import ROOT; ROOT.gInterpreter.LoadText('struct foo{};'); print(hasattr(ROOT.foo(), '__getitem__'));""; ```. In version `v6.28.12` this returns `false` whereas in `master` it returns `true`. This seems to be coming from `cppyy`:. ```python; import cppyy. cppyy.cppdef(""""""; struct foo {};; """"""). bar = cppyy.gbl.foo(); print(f""cppyy version {cppyy.__version__}""); print(f""Does foo have __getitem__()? {hasattr(bar, '__getitem__')}""); This gives:; ```. This returns:. ```; cppyy version 1.6.2; Does foo have __getitem__()? False; ```. vs. ```; cppyy version 3.1.2; Does foo have __getitem__()? True; ```. This change in behavior causes the object, which clearly doesn't support e.g. indexing, to pass the sequence check [(docs)](https://docs.python.org/3/c-api/sequence.html), which creates other issues elsewhere in the ATLAS code. We briefly discussed this on Mattermost w/ @vepadulano but I wanted to create an issue before I forget 😄 Any ideas?. ### Reproducer. Provided in the description. ### ROOT version. heads/master@v6-31-01-1576-g7784644928. ### Installation method. LCG dev3 nightly build. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15161:244,Load,LoadText,244,https://root.cern,https://github.com/root-project/root/issues/15161,1,['Load'],['LoadText']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. In the presence of LD_LIBRARY_PATH containing directories with many entries (typically when using the LCG view),; it takes a very, very long time to load a dictionary using pyroot. After some initial debugging with Axel he admitted ; that there is something going wrong when loading dictionaries. The expired time is way too long. The observed behaviour is not limited to the reproducer below, but also occurs on standalone installations. ### Reproducer. 1) Use a LCG view on cvmfs; ```; . /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/setup.sh; ```; 2) Load a dictionary from pyroot:; ```; $ python; Python 3.9.12 (main, Jul 31 2023, 15:05:19) ; [GCC 12.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import time; >>> time.ctime(); import dd4hep; time.ctime(); 'Wed Dec 13 09:15:34 2023'; 'Wed Dec 13 09:16:27 2023'; ```. ### ROOT version. Standard root vervion of LCG 103 on cvmfs:; ```; $ which root; /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; $ /cvmfs/sft.cern.ch/lcg/views/LCG_104/x86_64-el9-gcc12-dbg/bin/root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. Pre-build, pre-installed on cvmfs. ### Operating system. Linux lxplus940.cern.ch 5.14.0-362.8.1.el9_3.x86_64 #1 SMP PREEMPT_DYNAMIC Tue Oct 3 11:12:36 EDT 2023 x86_64 x86_64 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14223:224,load,load,224,https://root.cern,https://github.com/root-project/root/issues/14223,3,"['Load', 'load']","['Load', 'load', 'loading']"
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10694](https://its.cern.ch/jira/browse/ROOT-10694). We have a tiny amount of global state (namely, two or three {{static}}s) within the RDF framework that should be protected from concurrent modification, and we do not test the case of concurrent usage of different RDF objects. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15080:279,concurren,concurrent,279,https://root.cern,https://github.com/root-project/root/issues/15080,2,['concurren'],['concurrent']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. Moving from JIRA: [ROOT-10724](https://its.cern.ch/jira/browse/ROOT-10724); Most of the issue was solved - the remaining part is for a rare case: . We still ""leak"" in the odd case in which RDF jitted code is registered but the application never actually triggers any RDF event loops, in which case the code to be lazily jitted remains in the pipeline until the end of the application, and parts of the computation graph are kept alive indefinitely by heap-allocated shared_ptrs.; I suppose we could forcibly trigger execution of the jitted code that performs the clean-up whenever the count of live RLoopManagers goes from >0 to 0. ### Reproducer. -. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15076:625,perform,performs,625,https://root.cern,https://github.com/root-project/root/issues/15076,1,['perform'],['performs']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The build of ROOT 6.32.00 on ix86 crashes with a segmentation fault during the generation of the tutorials/hsimple.root file:. ```; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0xf7f03589 in __kernel_vsyscall (); #1 0xf76ada87 in wait4 () from /lib/libc.so.6; #2 0xf76adc06 in waitpid () from /lib/libc.so.6; #3 0xf76061d8 in do_system () from /lib/libc.so.6; #4 0xf7d17a81 in TUnixSystem::Exec (this=0x57816fd0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #6 0xf7d12654 in TUnixSystem::DispatchSignals (this=0x57816fd0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3662; #7 0xf7d126d8 in SigHandler (sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:410; #8 0xf7d02a21 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; #10 0xf6f9e92e in bswapcpy32 (to=0x59098bb2, from=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/inc/Bswapcpy.h:61; #11 TBufferFile::WriteFastArray (this=0x58d8e800, ii=0x0, n=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:2071; #12 0xf7c419b2 in TArrayI::Streamer (this=0x58ac6028, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/cont/src/TArrayI.cxx:157; #13 0xf7d7f75c in ROOT::streamer_TArrayI (buf=..., obj=0x58ac6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:674,optimiz,optimized,674,https://root.cern,https://github.com/root-project/root/issues/15738,2,['optimiz'],['optimized']
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. The function `TClass::GetClassInfo()` is not thread safe because `TObject::TestBit` is not thread safe. The function `TClass::GetClassInfo()` is used routinely outside of the global interpreter lock, e.g. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfDataMembers.cxx#L408. https://github.com/root-project/root/blob/dcebd46c6dec4028f68f1b7bf8e37d64558f1e56/core/meta/src/TListOfFunctions.cxx#L376C26-L376C38. As CMS is experiencing problems where the list of functions returned from TClass will infrequently be empty when we are running multi-threaded, it is possible this race condition is the cause. ### Reproducer. Visual inspection shows the problem. We have not been able to make a small reproducer for the thread problem we are seeing. ### ROOT version. 6.30. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15090:669,multi-thread,multi-threaded,669,https://root.cern,https://github.com/root-project/root/issues/15090,2,"['multi-thread', 'race condition']","['multi-threaded', 'race condition']"
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. We have our own packaging of root via fpm which relocates our builds which happen in some folder in /tmp to and rpm which installs in /opt/o2. This was working fine in v6.28.00 however when switching to v6-30-01 we have a bunch of errors along the lines of:. ```; Module Net not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libNet_rdict.pcm file does not exist; Module MultiProc not found.; Module Imt not found.; Module MathCore not found.; Error in <TCling::LoadPCM>: ROOT PCM /opt/o2/lib/libMathCore_rdict.pcm file does not exist; Error in <TClass::LoadClassInfo>: no interpreter information for class TSignalHandler is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class TFileHandler is available even though it has a TClass initialization routine.; ```. when starting root on the command line. By doing a strace, we figured out that this derives from root not being able to find `module.modulemap` which is present in `/opt/o2/include`, yet it is not considered. We are able to workaround the issue by simply copying module.modulemap in the current directory, which is apparently in the search path, however that is clearly not a viable solution in a deployed environment. What mechanism is used by default to lookup `module.modulemap`? We would be fine if we could work it around via some environment variable or systemrc tweak. ### Reproducer. Build root in one folder and relocate it to a different one. ### ROOT version. v6-30-01. v6-28-01 works fine. ### Installation method. alibuild, fpm. ### Operating system. el8. ### Additional context. This is preventing ALICE DAQ to use the latest ROOT.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15318:380,Load,LoadPCM,380,https://root.cern,https://github.com/root-project/root/issues/15318,4,['Load'],"['LoadClassInfo', 'LoadPCM']"
Performance,"### Check duplicate issues. - [ ] Checked for duplicates. ### Description. When I open a TFile with a classic TBrowser, right click on a Ttree, StartViewer, then File Save source, /tmp/session.C, and then File load Session, and I select that file, I get an error.; Reason is that the created macro contains the slash verbatim as the name of the main function, rather than stripping the part of the path that is the basedir. ### Reproducer. See above. ### ROOT version. 6.32.04. ### Installation method. Binary . ### Operating system. Ubuntu 24. ### Additional context. std filesystem might help here",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16562:210,load,load,210,https://root.cern,https://github.com/root-project/root/issues/16562,1,['load'],['load']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. After merging #12676, _all the page sources_ are required to be able to populate the page zero from the `kTypePageZero` locator. However, for for the sake of simplifying the PR #12676 (which was already quite large), this was not included and thus left for a follow-up pull request. ### What is the expected behaviour?. `RPageSourceDaos` should be able to populate the page zero in all cases, i.e. a call to `PopulatePage()`, `LoadSealedPage()`, or `LoadClusters()`. ### How to reproduce?. n/a. ### ROOT version. master. ### How did you install ROOT?. custom build. ### Which operating system are you using?. n/a. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12960:507,Load,LoadSealedPage,507,https://root.cern,https://github.com/root-project/root/issues/12960,2,['Load'],"['LoadClusters', 'LoadSealedPage']"
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. When doing a simple `TFile::Open()`, ROOT initialises the interpreter on the first `TEnv::GetValue` needed by the aforementioned method. This makes it load all the pcms which it can find, regardless of weather they are needed to read the file or not (in our case we only have branches with basic types, e.g. floats or ints or vector of thereof). ; This has the net result of adding 70MB of RSS for no particular reason to any process which uses ROOT. You can find more details in the attached instruments screenshot.; Moreover, single stepping with the debugger and printing out the LoadModule argument, it seems that the pcms for Sofie, Proof and 3D graphics are particularly honours, all of which we do not need and we do not link. ![image](https://github.com/root-project/root/assets/10544/c1ee3a82-a5cc-4f64-a131-ea4fce1453c3). ### What is the expected behaviour?. The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. A second best option would be to be able to start the interpreter in a clean slate state and load by hand only the pcms which are needed to read a file. ### How to reproduce?. On macOS using Instruments one can do:; ; ```bash; xcrun xctrace record --output root.trace --time-limit 30s --template Allocations --launch -- /Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-04-local2/bin/root.exe -q -b http://alimonitor.cern.ch/train-workdir/testdata/LFN/alice/data/2015/LHC15o/000246392/pass2/PWGZZ/Run3_Conversion/320_20220701-0813/AOD/019/AO2D.root; open root.trace; ```. and get the report in question. Using the alice environment should not matter, but in principle you should be able to load it from CVMFS. ### ROOT version. 6.28.04, but it's a while we see it. ### How did you install ROOT?. ALICE build environment. ### Which operating system are you using?. macOS, linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000:231,load,load,231,https://root.cern,https://github.com/root-project/root/issues/13000,5,"['Load', 'load']","['LoadModule', 'load']"
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Describe the bug. With ROOT v6-28-00-patches@v6-28-04-96-g9248a09 compiled with C++17 (**not** C++20) the code; ```cpp; #ifdef __has_include; #if __has_include(<span>); #include <span>; #endif; #endif; ```; (found in `range/v3/range/access.hpp`) causes an error in the interpreter:; ```; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Thu/ROOT/v6-28-00-patches/x86_64-centos7-gcc12-dbg/etc/cling/std.modulemap:312:10: error: module 'std.span' requires feature 'cplusplus20'; module ""span"" {; ```; Meaning that the interpreter thinks the header `<span>` exists, but it cannot be loaded. What I find very surprising too, is that (still without C++20) I can do:; ```; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |; | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] std::span<int> s; (std::span<int> &) {}; root [1] ; ```; which looks wrong to me. ### What is the expected behaviour?. `__has_include(<span>)` should evaluate to false in C++17 builds. ### How to reproduce?. from lxplus.cern.ch; ```; ❯ . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Thu/x86_64-centos7-gcc12-dbg/setup.sh; ❯ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/05 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jun 13 2023, 00:22:00 |; | From heads/v6-28-00-patches@v6-28-04-96-g9248a09 |; | With g++ (GCC) 12.1.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13032:641,load,loaded,641,https://root.cern,https://github.com/root-project/root/issues/13032,1,['load'],['loaded']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. # Error; Running any line of code in a Jupyter notebook using the JupyROOT C++ kernel will make the kernel unresponsive and produce the following error in the server console:; ```; IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_13'!; You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(); Maybe you need to load the corresponding shared library?; ```; A similar error comes up if I try to ``import ROOT`` in a python notebook:; ```; Welcome to JupyROOT 6.30/02; Error in callback <bound method CaptureDrawnPrimitives._post_execute of <JupyROOT.helpers.utils.CaptureDrawnPrimitives object at 0x7fe486ee7bb0>> (for post_execute), with arguments args (),kwargs {}:. IncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7RCanvas11GetCanvasesEv' unresolved while linking symbol '__cf_15'!; You are probably missing the definition of ROOT::Experimental::RCanvas::GetCanvases(); Maybe you need to load the corresponding shared library?. ---------------------------------------------------------------------------; ValueError Traceback (most recent call last); File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:476, in CaptureDrawnPrimitives._post_execute(self); 475 def _post_execute(self):; --> 476 NotebookDraw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:466, in NotebookDraw(); 464 DrawGeometry(); 465 DrawCanvases(); --> 466 DrawRCanvases(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:459, in DrawRCanvases(); 458 def DrawRCanvases():; --> 459 rdrawers = GetRCanvasDrawers(); 460 for drawer in rdrawers:; 461 drawer.Draw(). File ~/notebooks/nbenv/lib64/python3.9/site-packages/JupyROOT/helpers/utils.py:431, in GetRCanvasDrawers(); 429 def GetRCanvasDrawers():; 430 if not RCanvasAvailable(): re",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14587:498,load,load,498,https://root.cern,https://github.com/root-project/root/issues/14587,2,['load'],['load']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. 10-20fold slowdown of running a particular ALICE event generation process, where the generator is compiled just-in-time from a ROOT macro (see reproducer). Slowdown observed when switching from ROOT tag 6.28.04 to 6.28.08. In particular, bisecting this slowdown shows that it is caused by this commit https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 (from #11631). Reverting this single commit brings back the original performance. ### Reproducer. On lxplus7.cern.ch, run:. ```; #!/usr/bin/env bash. # good software version; /cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231207-1 > env.txt. # bad software version; #/cvmfs/alice.cern.ch/bin/alienv printenv O2sim::v20231208-1 > env.txt. source env.txt. time o2-sim-dpl-eventgen --nEvents 5 --generator external --configFile ${O2DPG_ROOT}/MC/config/PWGEM/ini/GeneratorEMCocktail.ini --seed 11. ```. ### ROOT version. Everything having https://github.com/root-project/root/pull/11631/commits/4e4545fcd4dcb80af05cefd9747f7f585fbe75d3 included. ### Installation method. build from source. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15579:542,perform,performance,542,https://root.cern,https://github.com/root-project/root/issues/15579,1,['perform'],['performance']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. A pyroot python program crashes when reading a TFile containing a TTree containing a TClonesArray. It appears to crash the second time it accesses the TClonesArray. This has started happening since moving to ROOT 6.32 on AlmaLinux 9.4. It worked fine with 6.20.04 running on Centos7. The library for accessing the TTree information was created using MakeProject. . ### Reproducer. This is the python code that crashes; ```; #!/usr/bin/env python3; import os; import ROOT; import argparse. parser = argparse.ArgumentParser(description='Analyse events.'); parser.add_argument(""inputfile""); parser.add_argument(""-o"",""--outputfile"",default=""Output.root"",help=""Name of output file""); args = parser.parse_args(). READEVENTANALYSISLIBRARY=ROOT.gSystem.Getenv(""READEVENTANALYSISLIBRARY"");; ROOT.gSystem.Load(READEVENTANALYSISLIBRARY);. globalRecon = ROOT.TChain(""ReconDir/Global""); globalRecon.AddFile(args.inputfile). OutputFile = ROOT.TFile(args.outputfile,""RECREATE"",""ND280 Analysis""); hTrackMomenta = ROOT.TH1F(""TrackMomenta"", ""Charged Track Momentum"", 100, 0, 1000.0). entries = globalRecon.GetEntries(); for entry in range(entries):; 	print("" entry = ""+str(entry)); 	ientry = globalRecon.LoadTree(entry); 	if ientry < 0:; 		break; 	nb = globalRecon.GetEntry(entry); 	if nb<=0:; 		continue; 	; 	for	pid in globalRecon.PIDs :; 		if(pid.Charge != 0) :; 			print("" charge is ""+str(pid.Charge)); 		#	hTrackMomenta.Fill(pid.FrontMomentum); OutputFile.Write(); OutputFile.Close(); ```. The crash traceback suggest this as the line causing the crash:. #7 0x00007fe963a68e9a in TBranchElement::ReadLeavesClones(TBuffer&) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #8 0x00007fe963a60899 in TBranch::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #9 0x00007fe963a7326b in TBranchElement::GetEntry(long long, int) () from /home/aleph/ajf/t2k/root/lib/libTree.so; #10 0x00007fe963ad7300 in TTree::GetEntry(lo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16725:870,Load,Load,870,https://root.cern,https://github.com/root-project/root/issues/16725,1,['Load'],['Load']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Autoloading via the TCling::AutoLoad generally works very well, always exhibiting the same behaviour. However, sometimes it fails, for example when a symbol is in a library linked to a pcm which is not yet loaded. This is due to the fact that ROOT ultimately figures out which libraries to load based on the pcm linked to a certain class (scope to precisely use the Clang nomenclature). This happens because TCling::AutoLoad temporarily suppresses parsing: the lookup done by cling for a certain scope is doomed to fail if the pcm where the scope is defined is not loaded already. ### Reproducer. `root -b -q -l -e ""gInterpreter->AutoLoad(\""RooGaussian\"")""` ; returns 0 (unhappiness) ; ```; root [0] gInterpreter->AutoLoad(""RooGaussian""); (int) 1; ```; as the snippet shows, returns 1 (happiness). Note that other classes such as TPython could be used, this has nothing to do with RooFit specifically!. ### ROOT version. master on mac, but really any module build would do. ### Installation method. build from sources. ### Operating system. MacOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13432:281,load,loaded,281,https://root.cern,https://github.com/root-project/root/issues/13432,3,['load'],"['load', 'loaded']"
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Class `TProcessEventTimer` is async timer and used inside `TTreePlayer::Process()` method to enable events processing during `TTree::Draw()`. Main problem - all data handling in the `THttpServer` performed inside `THttpTimer` handler - including `TTree::Draw()` invoked from `RBrowser`. So to say one cannot initiate async timer inside sync timer handler. There is simple solution. In `TUnixSystem::DispatchTimers(Bool_t mode)` one should change line 2947:; https://github.com/root-project/root/blob/master/core/unix/src/TUnixSystem.cxx#L2947; ```; fInsideNotify = !mode; ; ```. Means handling of ""normal"" sync timers is not dangerous and do not block functionality to reset async timer inside ; `TUnixSystem::ResetTimer` which implemented as:. ```; void TUnixSystem::ResetTimer(TTimer *ti); {; if (!fInsideNotify && ti && ti->IsAsync()); UnixSetitimer(NextTimeOut(kFALSE));; }; ```. Another solution - let process `THttpServer` events differently - not in the `THttpTimer` handler. ; But this means extension of `TSystem::DispatchOneEvent` method. Like adding generic event handlers called every time `gSystem->ProcessEvents()` is called. . ### Reproducer. Not provided. ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13224:271,perform,performed,271,https://root.cern,https://github.com/root-project/root/issues/13224,1,['perform'],['performed']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Consider the following tree loading structure:; ```; TChain c2 ---> TTree ---(friend)---> TChain c1 ---> TTree; ```; When iterating over `c2`, branches coming from `c1` stop updating after the first file boundary is reached in `c1`. They start updating again once a file boundary is reached in `c2`. I think this is distinct from #16804 because in this case the issues lie in `TChain::LoadTree`, while for #16804 `TChain::LoadTree` is the sole culprit. As in #16804, the root cause of the issue is that the following code is not invoked often enough:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1407-L1434; I will call the operation above an ""address refresh"". TChain has code triggering an address refresh when needed for friends of the current tree:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1384-L1393. Unfortunately this doesn't work for two reasons:; 1. The code cannot possibly be reached unless `c2` itself has friends because of the following condition:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1370; In our case `c2` doesn't have friends, but the `fTree` does. This is easy to fix (or work around).; 2. Even if `fFriends` is made non-null, `fetree->IsUpdated()` always returns `false` because `TTree::LoadTree` resets it:; https://github.com/root-project/root/blob/18b4f317b389fa7931d7eb8e00525f4dca44be0f/tree/tree/src/TTree.cxx#L6512; Fixing this is much more annoying. For [my application](https://gitlab.cern.ch/Proto/Darwin/-/merge_requests/44), I ended up subscribing to the `Notify` signal and calling `TFriendElement::MarkUpdated` again. This is only a partial solution because when `c2` loads a new file, it doesn't reset friend elements that were marked updated, which would happen somewhere along this l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16805:103,load,loading,103,https://root.cern,https://github.com/root-project/root/issues/16805,3,"['Load', 'load']","['LoadTree', 'loading']"
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Firstly, I realize that root 5.x is now ancient and there may be little anyone can/wants to do about this. But for the record.. NixOS now builds all packages with [`-D_FORTIFY_SOURCE=3`](https://developers.redhat.com/articles/2022/09/17/gccs-new-fortification-level), and this has caused the build for our `root5` package to fail with `*** buffer overflow detected ***: terminated`. This is around the section where `loadfile.cxx` is being built and the compiler's static checks are complaining extensively about e.g. `'__builtin___snprintf_chk' output 8 or more bytes (assuming 1054) into a destination of size 1024`. For a full build log see https://hydra.nixos.org/log/m5px209xi7xr4iinwsgjjf01xxlwsq9g-root-5.34.38.drv (mirrored https://gist.github.com/risicle/d2118ace061c90f8eca3d4c366a93434). ### Reproducer. Build on linux with `-D_FORTIFY_SOURCE=3`?. This is with gcc12 & glibc 2.37. ### ROOT version. 5.34.38 + 348f30a6a3b5905ef734a7bd318bc0ee8bca6dc9 (""gcc9 fix"") + 3c243b18768d3c3501faf3ca4e4acfc071021350 (""gcc10 fix"") + c75458024082de0cc35b45505c652b8460a9e71b (""python 3.7 fix""). ### Installation method. NixOS package. ### Operating system. NixOS Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13216:492,load,loadfile,492,https://root.cern,https://github.com/root-project/root/issues/13216,1,['load'],['loadfile']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Follow-up from #13693. I found a few more inconsistencies in the attached plotting scripts. 1: throughput-formats; - Different ticks and label frequency in the left side y axis; - Different error bar width. 2: size-overview; - Difference in `TPaveText` background (flat color vs shadow); - Title vs no title (this may be rather a bug in TCanvas because the plotting script does set a title for the upper histogram); - Y grid vs no y grid (again, perhaps rather a bug in TCanvas because there are calls to `TPad::SetGridy()`). 3: scaling; - Different range and ticks/label frequency on x axis. ### Reproducer. [03_scaling.zip](https://github.com/root-project/root/files/12704585/03_scaling.zip); [02_size_overview.zip](https://github.com/root-project/root/files/12704586/02_size_overview.zip); [01_throughput-formats.zip](https://github.com/root-project/root/files/12704587/01_throughput-formats.zip). ### ROOT version. master. ### Installation method. Built from sources. ### Operating system. Arch Linux, Chromium set as web GUI. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13707:170,throughput,throughput-formats,170,https://root.cern,https://github.com/root-project/root/issues/13707,1,['throughput'],['throughput-formats']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. For a class with read rules, data members may report wrong offsets (see reproducer). ### Reproducer. [infobug.tar.gz](https://github.com/user-attachments/files/15884205/infobug.tar.gz). In the attached reproducer, the output of `offset` is. ```; $ ./offset ; 0; 8; 0. StreamerInfo for class: Event, version=3, checksum=0x153ea7a; Event@@3 @@alloc offset= 0 type=1001 ; float pt offset= 8 type= 5 (cached) ; float pt offset= 0 type= 5 (write) ; Event@@3 @@dealloc offset= 0 type=1002 ; i= 0, @@alloc type=1001, offset= 0, len=1, method=0; i= 1, pt type= 5, offset= 8, len=1, method=0 [cached]; i= 2, pt type= 5, offset= 0, len=1, method=0 [write]; i= 3, @@dealloc type=1002, offset= 0, len=1, method=0; ```. Demonstrating that `pt` is reported with an offset of 8 by the streamer info element. The wrong offset in the streamer info seems to stem from `TStreamerInfo::BuildOld`, which adds a second, faulty cached member to the list of streamer info elements. ### ROOT version. master. ### Installation method. From sources. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15877:472,cache,cached,472,https://root.cern,https://github.com/root-project/root/issues/15877,3,['cache'],['cached']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello! Sorry for the newbie issue, but I can't seem to work around it...!; After upgrading from ubuntu 22 to ubuntu 23, my root stopped working. I would try to run my old macros and the system would always break (can't find those logs now, I'm sorry!). ### Reproducer. I was using the precompiled version and therefore I have uninstalled it and tried to reinstall it again. From the root webpage I was suggested to do so via snap. I managed to install it and in the end, when I oppened a session and tried new TBrowser() to check some hists and if everything was according to how it was previously, I got this as header of the break:. ```; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; Error in <TGVSplitter::TGVSplitter>: splitterv.xpm not found; Error in <TGHSplitter::TGHSplitter>: splitterh.xpm not found; Error in <TGComboBox::TGComboBox>: arrow_down.xpm not found; Error in <TGVScrollBar::TGVScrollBar>: arrow_*.xpm not found; ```. I proceeded to uninstall it and try to build it on my own.; I followed the instructions on this webpage https://root.cern/install/build_from_source/ after checking all the dependencies. When I made the first cmake I got some things that it couldn't find which would give the following lines on terminal. ```; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY) (Required is at least version ""0.4""); -- VDT not found. Ensure that the installation of VDT is in the CMAKE_PREFIX_PATH; ```; The things it couldn't find were:; ```; PCRE; xxHash; ZSTD; GIF; TIFF; JPEG; GLEW; gl2ps; LibXml2; MySQL; PostgreSQL; Sqlite; CFITSIO; XROOTD; FTGL; LibXml2; TBB; Vdt; OCaml; ```; Then I got the fol",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479:745,load,loadLibrary,745,https://root.cern,https://github.com/root-project/root/issues/14479,3,['load'],"['loadLibrary', 'loading']"
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hello, . I have used the latest version of ROOT through docker container.; The VDT related variables are not found in cmake although it is built internally. ```; -- Found nlohmann_json: /usr/lib/cmake/nlohmann_json/nlohmann_jsonConfig.cmake (found suitable version ""3.10.5"", minimum required is ""3.10.5"") ; CMake Error at /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:230 (message):; Could NOT find Vdt (missing: VDT_INCLUDE_DIR VDT_LIBRARY); Call Stack (most recent call first):; /usr/share/cmake-3.22/Modules/FindPackageHandleStandardArgs.cmake:594 (_FPHSA_FAILURE_MESSAGE); /opt/root/cmake/modules/FindVdt.cmake:63 (find_package_handle_standard_args); /usr/share/cmake-3.22/Modules/CMakeFindDependencyMacro.cmake:47 (find_package); /opt/root/cmake/ROOTConfig.cmake:132 (find_dependency); cmake/Req/LoadROOT.cmake:5 (find_package); CMakeLists.txt:83 (include); -- Configuring incomplete, errors occurred!; ```. ### Reproducer. docker run -it rootproject/root:latest. Then run a cmake using: find_package(ROOT REQUIRED). ### ROOT version. 6.30. ### Installation method. docker. ### Operating system. ubuntu. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14195:896,Load,LoadROOT,896,https://root.cern,https://github.com/root-project/root/issues/14195,1,['Load'],['LoadROOT']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Hi, build craps out as seen below. Reasonably standard build, the only difference from (my) usual is that I have no preinstalled xrootd, no idea if that is related. I've seen similar issues on 13.2-RELEASE. Something makes it think it is seeing llvm2 (system has 16, not sure what root builds - 14? 15?). ```; [ 51%] Performing configure step for 'clad'; CMake Error at /home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-stamp/clad-configure-Release.cmake:37 (message):; Command failed: 1. '/usr/local/bin/cmake' '-G' 'Unix Makefiles' '-DCMAKE_BUILD_TYPE=Release' '-DCMAKE_C_COMPILER=/usr/bin/cc' '-DCMAKE_C_FLAGS= -pipe -Wall -W -pthread -fPIC' '-DCMAKE_CXX_COMPILER=/usr/bin/c++' '-DCMAKE_CXX_FLAGS= -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -pipe -Wall -W -Woverloaded-virtual -fsigned-char -pthread -fno-semantic-interposition -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -fPIC -fno-rtti' '-DCMAKE_INSTALL_PREFIX=/home/mkrzewic/build/root/etc/cling//plugins' '-DLLVM_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm' '-DCLANG_INCLUDE_DIRS=/home/mkrzewic/src/root/interpreter/llvm-project/clang/include' '/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang//include' '-DCMAKE_CXX_STANDARD=17' '-DClang_DIR=/home/mkrzewic/build/root/interpreter/llvm-project/llvm/tools/clang/' '-DClang_CONFIG_EXTRA_PATH_HINTS=' '-DLLVM_FORCE_USE_OLD_TOOLCHAIN=ON' '-DCLAD_BUILD_STATIC_ONLY=ON' '-GUnix Makefiles' '-S' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad' '-B' '/home/mkrzewic/build/root/interpreter/cling/tools/plugins/clad/clad-prefix/src/clad-buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14492:392,Perform,Performing,392,https://root.cern,https://github.com/root-project/root/issues/14492,1,['Perform'],['Performing']
Performance,### Check duplicate issues. - [X] Checked for duplicates. ### Description. If load canvas with ratio plot from the file and then simply close it - ROOT crashes. ### Reproducer. root -l -b https://jsroot.gsi.de/files/ratioplot.root -e 'ratioplot1->Draw(); ratioplot1->Close();' . ### ROOT version. master. ### Installation method. build from source. ### Operating system. OpenSUSE Linux. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14855:78,load,load,78,https://root.cern,https://github.com/root-project/root/issues/14855,1,['load'],['load']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Importing `tensorflow` and then `ROOT` results in a segmentation fault with ROOT 6.32. The other way around works fine. ### Reproducer. ```; (root-bug) ➜ ~ python; Python 3.11.9 | packaged by conda-forge | (main, Apr 19 2024, 18:36:13) [GCC 12.3.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import tensorflow; 2024-07-02 14:04:03.356022: I tensorflow/core/util/port.cc:113] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.; 2024-07-02 14:04:07.360190: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.; To enable the following instructions: SSE4.1 SSE4.2 AVX AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags. >>>; >>> import ROOT. *** Break *** segmentation violation; ```. ### ROOT version. 6.32/0. ### Installation method. Conda: `mamba create -n root-bug root=6.32 tensorflow`. ### Operating system. Linux. ### Additional context. Full seg fault trace:; ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 10 (Thread 0x7f1039269640 (LWP 281196) ""python""):; #0 0x00007f1095c8679a in __futex_abstimed_wait_common () from /lib64/libc.so.6; #1 0x00007f1095c88fa0 in pthread_cond_wait. GLIBC_2.3.2 () from /lib64/libc.so.6; #2 0x00007f10757d1964 in blas_thread_server () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/site-packages/numpy/core/../../../../libcblas.so.3; #3 0x00007f1095c89c02 in start_thread () from /lib64/libc.so.6; #4 0x00007f1095d0ec40 in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:831,optimiz,optimized,831,https://root.cern,https://github.com/root-project/root/issues/15970,2,"['optimiz', 'perform']","['optimized', 'performance-critical']"
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. In our stack we have our own build of ROOT which is performed on CC7. We regularly use those builds on RHEL8 or any subsequent version, since the ABI stability always allowed us to do so (provided we override the compiler installation with one which was compiled on the runtime platform). This worked fine until v6.30.01. With such a version whenever we do:. ```; #include <sys/stat.h>; ```. it breaks on lxplus8 with:. ```; [O2Physics/daily-20231219-0100-1] ~ > root; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] #include <sys/stat.h>; In file included from ROOT_prompt_0:1:; In file included from /usr/include/sys/stat.h:30:; /usr/include/bits/types/struct_timespec.h:9:8: error: redefinition of 'timespec'; struct timespec; ^; /usr/include/time.h:120:8: note: previous definition is here; struct timespec; ^; ```. notice that running the same with v6.28.8 works just fine. Running a slc7 build on slc7 also works fine. Compiling the same thing with GCC also works fine, including when mixing the platforms. ### Reproducer. On lxplus8:. ```; /cvmfs/alice.cern.ch/bin/alienv enter VO_ALICE@O2Physics::daily-20231219-0100-1; root; #include <sys/stat.h>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.30/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 19 2023, 01:09:04 |; | From tags/v6-30-01-alice2@v6-25-02-6400-g526782cfe8 |; | With c++ (GCC) 12.2.0 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14272:127,perform,performed,127,https://root.cern,https://github.com/root-project/root/issues/14272,1,['perform'],['performed']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Increasing the number of nodes in an RDataFrame computation graph can introduce serious overheads both in terms of performance and memory usage. In extreme (but very realistic) cases, this leads to OOM crashes. . A flamegraph (attached) can highlight that the main culprit is the allocation/deallocation of very large STL containers (std::map, std::vector), which happens in the machinery of the `RColumnRegister` class. This class has a copy-on-write policy, introduced by https://github.com/root-project/root/pull/10899 and further explained at https://github.com/root-project/root/pull/11297 . ![many_defines_original](https://github.com/root-project/root/assets/15638895/298b9fb4-b18c-4fb8-a103-8a7fccf225a7). For large graphs (O(10K) nodes), we start seeing multiple GBs of memory used just to make the `Define` calls, and a large portion of the total runtime being spent in the destruction of the RDataFrame itself (i.e. at the end of the application the user is stuck at the terminal). The copy-on-write policy is there for a reason. This way, any new branch of the computation graph can share the information about the columns defined (available) for that branch, without being contaminated by information coming from other branches of the graph (this is the cause of the CI errors in https://github.com/root-project/root/pull/14490 for example). We need to rethink about a way to keep the same functionality that does not incur in the performance/memory usage penalties. ### Reproducer. ```cpp; #include <ROOT/RDataFrame.hxx>. #include <string>; #include <iostream>. int main(); {. ROOT::RDataFrame df(1);. auto node = df.Define(""col_0"",; [](); { return 42; });. // Increase the number of iterations for a more evident effect; for (std::size_t i = 0; i < 10000; i++); {; node = node.Define(""col_"" + std::to_string(i + 1),; [](); { return 42; });; }. std::cout << ""End of main\n"";; }; ```. ### ROOT version. Any. ### I",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14510:190,perform,performance,190,https://root.cern,https://github.com/root-project/root/issues/14510,1,['perform'],['performance']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. It seems that when saving a canvas to a ROOT file (`SaveAs(""c.root"")`), colors defined with `TColor::GetColor` are not preserved whereas builtin colors are. This can be seen saving the canvas to both . png .root formats, then load the .root and save it again as a .png, and compare the two pngs created. . Tagging CMS CAT conveners @lenzip @anigamova and DPROC subconveners @oglez @ttedeschi . ### Reproducer. Define a save.C macro:; ```C++; {; TRandom3 r;; TH1F h = TH1F(""test"",""Test"",100,-1.0,1.0);; for (int i=0;i<=1000;++i) {; h.Fill(r.Rndm());; }. TCanvas c = TCanvas();; c.Draw();. h.SetFillStyle(1001);; h.SetFillColor(TColor::GetColor(""#F5BB54""));. //h.SetFillColor(kRed);; h.Draw(""HIST"");. c.SaveAs(""c.root"");; c.SaveAs(""c.png"");; }; ```; and a load.C macro:; ``` C++; {; TFile *f = new TFile(""c.root"");; TH1F *h1 = (TH1F*)f->Get(""c1"");; h1->Draw();; h1->SaveAs(""loaded_c.png""); }; ```. If `h.SetFillColor(TColor::GetColor(""#F5BB54""));` is uncommented and `h.SetFillColor(kRed)` is commented, `c.png` and `loaded_c.png` differ (the latter lacks the color), whereas if `h.SetFillColor(TColor::GetColor(""#F5BB54""))` is commented and `h.SetFillColor(kRed)` is uncommented, `c.png` and `loaded_c.png` are the same (both properly showing the red fill color). ### ROOT version. 6.32.04. ### Installation method. [Docker image](https://github.com/root-project/root-docker/blob/6.32.04-ubuntu24.04/ubuntu2404/Dockerfile). ### Operating system. Ubuntu 24.04⁠. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16560:301,load,load,301,https://root.cern,https://github.com/root-project/root/issues/16560,2,['load'],['load']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS 14, if you compile a library with ACLiC, it is not possible to load it in PyROOT with `gSystem.Load()` without loading `libRint` before. ### Reproducer. ```sh; # Creating a dummy library; echo ""void foo() {}"" > foo.C; root -l -b -q -e "".L foo.C+"". # With the ROOT interpreter, everything goes fine; root -l -b -q -e 'std::cout << gSystem->Load(""foo_C"") << std::endl;'. # Let's see with a compiled script; echo '#include <TSystem.h>; #include <iostream>; int main() { std::cout << gSystem->Load(""foo_C"") << std::endl; }' > main.cpp. g++ main.cpp $(root-config --cflags) -I $(root-config --incdir) -L $(root-config --libdir) -lCore -o main; ./main. # But with PyROOT, it doesn't work on macos 14 beta; python3 -c 'import ROOT; print(ROOT.gSystem.Load(""foo_C""))'. # With loading Rint before, it works!; python3 -c 'import ROOT; ROOT.gSystem.Load(""libRint""); print(ROOT.gSystem.Load(""foo_C""))'. ```; The Python version without loading libRint first is failing on macos 14 beta with the following error message:; ```txt; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so, 0x0009): Library not loaded: @rpath/libRint.so; Referenced from: <3831F8AB-C7D6-3522-AF78-6E908F97B77A> /Users/sftnight/build/jenkins/night/LABEL/macbeta/SPEC/cxx20/V/master/build/roottest/python/pythonizations/foo_C.so; Reason: no LC_RPATH's found; -1; ```. ### ROOT version. ROOT `master`. ### Installation method. build from source. ### Operating system. macOS 14 (beta). ### Additional context. This problem makes several tests in the `macbeta` nighlies fail:; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=macbeta,SPEC=cxx20,V=master/lastBuild/#showFailuresLink",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13734:147,load,load,147,https://root.cern,https://github.com/root-project/root/issues/13734,12,"['Load', 'load']","['Load', 'load', 'loadLibrary', 'loaded', 'loading']"
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. On macOS, it is possible to demonstrate two bugs of the WebGraphics with one simple PyROOT script:; 1. A crash, upon first execution; 2. A system freeze, once the browser is loaded. ## Crash; Upon first execution, a browser window is loaded, however the script exits, even if the `input` function should stop execution. The error message:; ```; [70538:42503:0510/092746.969274:ERROR:trust_store_mac.cc(750)] Error parsing certificate:; ERROR: Failed parsing extensions; [70538:259:0510/092747.479455:ERROR:background_contents_service.cc(441)] No extension found for BackgroundContents - id = ejidjjhkpiekdjhfgtyshbnagldlkglhimk. $ ; -> Created TensorFlow Lite XNNPACK delegate for CPU.; ```; The last line is not a mistake: it really appears on my terminal. ## Faulty behaviour: Freeze; Now that chrome is loaded, if I re-launch the same script, everything stop before quitting as expected, the webcanvas window is displayed, however it's not responsive: whatever is clicked has no effect. ### Reproducer. ```py; import ROOT. ROOT.gROOT.SetWebDisplay(). c = ROOT.TCanvas(); h = ROOT.TH1D("""","""",64, -4,4); h.FillRandom(""gaus""); h.Draw(). input(""Press Enter to exit""); ```. ### ROOT version. 6.32 and master. ### Installation method. Sources. ### Operating system. MacOS 14. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15474:249,load,loaded,249,https://root.cern,https://github.com/root-project/root/issues/15474,3,['load'],['loaded']
Performance,### Check duplicate issues. - [X] Checked for duplicates. ### Description. ROOT_HEAD failed in the nightlies in centos7 platfom; The reported error estracted from the[ log file ](http://cdash.cern.ch/upload/43670d452f7f3ef813ce655ef9357e62800d1e7a/ROOT-HEAD-configure.log)is:; gnu/11.3.0/../../../../include/c++/11.3.0/x86_64-pc-linux-gnu:/cvmfs/sft.cern.ch/lcg/releases/gcc/11.3.0-ad0f5/x86_64-centos7/bin/../lib/gcc/x86_64-pc-linux-gnu/11.3.0/../../../../include/c++/11.3.0/backward' at runtime.; -- And then fallback to: 'g++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test found_arc4; -- Performing Test found_arc4 - Failed; -- Performing Test found_arc4_bsd; -- Performing Test found_arc4_bsd - Failed; -- Performing Test found_getrandom; -- Performing Test found_getrandom - Failed; CMake Error at core/unix/CMakeLists.txt:42 (message):; Fail to detect cryptographic random generator. ### Reproducer. [lcg_nightly_pipeline](https://lcgapp-services.cern.ch/spi-jenkins/view/LCG%20Nightlies/job/lcg_nightly_pipeline/). ### ROOT version. master. ### Installation method. build from source. ### Operating system. centos7. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14958:534,Perform,Performing,534,https://root.cern,https://github.com/root-project/root/issues/14958,8,['Perform'],['Performing']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Rootcling fails to load correctly std::filesystem::path. This is discussed in [this post](https://root-forum.cern.ch/t/rootcling-with-std-filesystem/55388), from which I am reproducing here the provided example. ### Reproducer. Create the following two files:. test.hh:; ```C++; #ifndef test_hh; #define test_hh; #include <iostream>; #include <filesystem>; namespace fs = std::filesystem;. class test; {; public:; test();; ~test();. private:; fs::path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ---------------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574:94,load,load,94,https://root.cern,https://github.com/root-project/root/issues/13574,2,['load'],['load']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. TTree has this data member:; ```; Long64_t fChainOffset; ///<! Offset of 1st entry of this Tree in a TChain; ```. The description seems to strongly imply that for sub-trees in a chain, fChainOffset is set to their offset in the chain. However a sub-tree's `fChainOffset` is never set: `TChain::LoadTree` only calls `SetChainOffset` on itself, rather than on the subtree. As a consequence `chain->GetTree()->GetChainOffset()` ""lies"" and always reports that the offset is 0. ### Reproducer. See description. ### ROOT version. any. ### Installation method. any. ### Operating system. any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13168:369,Load,LoadTree,369,https://root.cern,https://github.com/root-project/root/issues/13168,1,['Load'],['LoadTree']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The original report is available here:; https://root-forum.cern.ch/t/streamerinfo-is-not-stored-in-tfile-with-update-mode/57383. ```; We have an executable which loops over multiple TFiles (each containing 1 object of different classes not known to this application, though the problem is the same if all includes are added) , and for each file. opens it in the ""update"" mode (w/o explicitly loading the object stored in the file); writes some simple struct with metadata; closes the file.; Afterwards, in separate processes, these files are read by other executables (Consumers) which include headers for objects inside these files. The ClassVersion of the content for some of these files is lower than the current ClassVersion used by Consumers. Automatic schema evolution accounts for differences. The problem appears when two initial files contain objects of the same class (MyClass in the example below) of version A while the Consumer uses higher class version B because:. the 1st updated file happens to have StreamerInfo of its original object together with the StreamerInfo of the added metadata (as shown by gFile->GetStreamerInfoList()->Print() ); the 2nd updated file has StreamerInfo only for added metadata class, reading the object from these files leads to an error.; I am wondering if there is a way to enforce the presence of the original StreamerInfo in the updated file. The reproducer is attached:. tar xvzf tst.tar.gz ; cd tst; chmod +x runTest.sh;; ./runTest.sh; It produces (suppressing ACLIC output):. Creating library for MyClass version 1; Storing object of class version 1 in two identical files; Creating library for MyClass version 2; Updating files containing object of old class version 1 (by writing metadata object of unrelated class OtherClass). Reading 1st (updated) file; Processing testFile.C(""outv1.root"")...; printing GetStreamerInfoList()->Print() for outv1.root; Collection name='TLis",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14171:467,load,loading,467,https://root.cern,https://github.com/root-project/root/issues/14171,1,['load'],['loading']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The problem occurs when performing a fit of multiple added pdfs to a distribution sampled from the pdfs itself. ; The expected behaviour can be seen in the cpu backend, where the correct parameter values are obtained (2.5, 7.5, 12.5 for the mus and 1 for each sigma). The cuda backend, however, doesn't find the correct terms for the last mu and sigma. With more added pdfs this is seen as well that the first few parameters get fitted somewhat to the data while the other parameters end up with seemingly random values (sometimes just their start values as if it is never attempted to fit them). The problem only occurs with sufficiently large numbers of events (e.g. 1e6). The results from both backends are visualized in the following plot:; ![myPlot](https://github.com/root-project/root/assets/138122408/c3022fea-d074-443f-a623-d06132aeeaaf). The resulting parameters from the cpu backend are:; ```bash; mu_0	 = 2.50139	 +/- 0.00314009; mu_1	 = 7.50163	 +/- 0.00325436; mu_2	 = 12.4977	 +/- 0.00315695; sigma_0	 = 0.996218	 +/- 0.00238642; sigma_1	 = 1.0002	 +/- 0.00273205; sigma_2	 = 1.00092	 +/- 0.00240107; ```; The cuda backend arrives at the following values instead:; ```bash; mu_0	 = 2.44677	 +/- 0.00330185; mu_1	 = 7.38606	 +/- 0.00417768; mu_2	 = 9.94213	 +/- 0.0220406; sigma_0	 = 0.951877	 +/- 0.00256995; sigma_1	 = 0.805267	 +/- 0.00292966; sigma_2	 = 3.04442	 +/- 0.0171947; ```. ### Reproducer. ```python; # Content of file fit.py; import ROOT. def get_data(observable, n_events):; import numpy as np; np.random.seed(0). data_list = []; for i in range(3):; data_list.append(np.random.normal(loc=2.5+5*i, size=n_events//9)). data_np = np.array(data_list).flatten(); data = ROOT.RooDataSet.from_numpy({""x"": data_np}, [observable]); return data. def get_model(observable, suffix=""param""):; mu_list = []; sigma_list = []; gauss_list = []; frac_list = []; for i in range(3):; mu_list.append(ROOT.RooRealVar(f""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13603:99,perform,performing,99,https://root.cern,https://github.com/root-project/root/issues/13603,1,['perform'],['performing']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. The recent update to PyROOT, broke some existing code on our end. It's not entirely trivial but I have managed to put together a ""minimal"" reproducer that triggers the issue. I am fairly certain that the new behavior is wrong, but I am not completely certain. This might also be related to #15085, but I am not entirely sure, as that could also be a c++ standard issue(?). I am also pretty sure that this is an issue in PyROOT and not in cppyy (see at the very bottom). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; #include <memory>; #include <iostream>; #include <type_traits>. namespace repro {. struct Base {; virtual ~Base() = default;; virtual int func() const = 0;; };. struct Derived : public Base {; Derived(int i) : m_i(i) {}; ~Derived() = default;; Derived(const Derived&) = delete;; Derived& operator=(const Derived&) = delete;; Derived(Derived&&) = default;; Derived& operator=(Derived&&) = default;. int func() const final { return m_i; }; private:; int m_i{42};; };. void foo(std::unique_ptr<Base> basePtr) {; std::cout << ""via unique_ptr: "" << basePtr->func() << std::endl;; }. template<typename T, typename = std::enable_if_t<std::is_base_of_v<Base, T> &&; !std::is_lvalue_reference_v<T>>>; void foo(T&& t) {; std::cout << ""via template func: "" << t.func() << std::endl;; }. } // namespace repro; """"""; ). from ROOT import repro. c = repro.Derived(123); repro.foo(ROOT.std.move(c)); ```. ### ROOT version. This works with 6.30.04 (and previous) but starts to fail with the current ROOT master (via `dev3` on `ubuntu2204`). ### Installation method. 6.30.04 via spack, ROOT master via LCG `dev3` nightly build. ### Operating system. Ubuntu 22.04. ### Additional context. With 6.30.04 I get. ```console; $ python repro.py; via template func: 123; ```. However, with the updated cppyy I get:; ```console; $ python repro.py ; input_line_42:6:92: error: call to deleted constructor of 'st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:603,Load,LoadText,603,https://root.cern,https://github.com/root-project/root/issues/15117,1,['Load'],['LoadText']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. There seems to be a subtle bug in the way colors are registered, which in the case described below makes `TColor::GetFreeColorIndex()` return a color index that is already used by a user-defined color. . This happens when I load a canvas from a `.root` file where the canvas was saved in a separate ROOT session that defined a new fill color AND a palette using `gStyle->SetPalette()`. The bug appears in 6.32.00 and 6.32.02 but NOT in 6.30.08. ### Reproducer. 1. Download minimal reproducible example at https://gist.github.com/bgrube/a939a059fd397129efacb8f0643ae022; 2. `source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.32.02/x86_64-almalinux9.4-gcc114-opt/bin/thisroot.sh`; 3. `python3 ./TColorBug.py`; 4. Output; 	```; 	Creating test file in a separate process; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Info in <TCanvas::SaveAs>: ROOT file TColorBug.root has been created; 	Reading test file; 	ROOT.TColor.GetFreeColorIndex() = 1179; 	Color:1179 Red=1.000000 Green=1.000000 Blue=1.000000 Alpha=1.000000 Name=myColor; 	Wrong behavior: index 1179 returned by ROOT.TColor.GetFreeColorIndex() is already used; 	```. ### ROOT version. 6.32. ### Installation method. pre-built binary. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16051:299,load,load,299,https://root.cern,https://github.com/root-project/root/issues/16051,1,['load'],['load']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This is effectively a duplicate of https://github.com/wlav/cppyy/issues/230. I am reporting it here mainly because this is also a behavioral change for ROOT, and I am not entirely sure whether it was introduced as part of the larger cppyy update or later (in which case it could maybe be fixed). ### Reproducer. ```python; import ROOT. ROOT.gInterpreter.LoadText(; """"""; class Foo {; public:; void bar() { throw std::logic_error(""This is fine""); }; void bar() const { throw std::logic_error(""This is fine""); }; };; """"""; ); foo = ROOT.Foo(); try:; foo.bar(); except ROOT.std.logic_error:; print(""Caught""); pass; ```. ### ROOT version. The above worked up to root 6.30.06 and still works with the root version one gets when using a `dev4` release. It doesn't work with a `dev3` release at the moment. ### Installation method. various (spack, LCG releases). ### Operating system. various (verified on Ubuntu 22). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15375:429,Load,LoadText,429,https://root.cern,https://github.com/root-project/root/issues/15375,1,['Load'],['LoadText']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. This problem was discovered during a build through Spack that was using the Spack build cache. In this build cache Spack ; has elected to reset the modification time of ***all*** headers files to be 0 linux time. It turns out in that case, Cling/Clang/LLVM refused to actually uses any of the system headers coming from the spack-provided compiler build. So nothing is properly defined not even `__GLIBCXX__`. The visible consequence is:; ```; ... rootcling_stage1 ... G__Core.cxx ... ; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; In file included from input_line_2:1:; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:175:47: error: use of undeclared identifier 'std'; void copyArray(T* src, void* placement, std::size_t size) {; ^; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:176:14: error: use of undeclared identifier 'std'; for (std::size_t i = 0; i < size; ++i); ^; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; ninja: build stopped: subcommand failed.; ```. ### Reproducer. ```; cat /var/tmp/a.cxx ; void a(); {; fprintf(stdout, ""Running the script a.cxx\n"");; }. touch -m a -d '1969-12-31 18:00:00.000000000' /var/tmp/a.cxx . ls -l /var/tmp/a.cxx ; -rw-r--r-- 1 pcanal us_cms 63 Dec 31 1969 /var/tmp/a.cxx. root.exe -b -l -q /var/tmp/a.cxx . Processing /var/tmp/a.cxx...; input_line_8:1:10: fatal error: file '/var/tmp/a.cxx' modifi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372:163,cache,cache,163,https://root.cern,https://github.com/root-project/root/issues/14372,2,['cache'],['cache']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using `np.asarray()` to convert an existing `RVec` object into the numpy array as suggested in the Documentation [here](https://root.cern/doc/master/classROOT_1_1VecOps_1_1RVec.html#RVecdoxyref) takes memory which is never freed. Created `RVec` objects inside pyROOT are also not cleaned up by the garbage collector. ### Reproducer. ```bash; python --version; Python 3.9.12; # Run as; python3 reproducer.py; ```. ```python; #reproducer.py; import ROOT; import os, psutil; import gc; import numpy as np; import matplotlib.pyplot as plt; import tqdm; process = psutil.Process(). # to cache a lot of things; ROOT.RVec('double')(). def get_mem_usage():; gc.collect(); return process.memory_info().rss # in kbytes . ROOT.gInterpreter.Declare(""""""; auto create_rvec(unsigned int n) {; //return std::array<unsigned int, 3>({n, n, n});; return ROOT::RVec<unsigned int>({n, n, n});; }; """"""); df = ROOT.ROOT.RDataFrame(1000).Define(""my_rvecs"", ""create_rvec(rdfentry_)""). # To trigger the event loop before measuring memory; my_rvecs = df.AsNumpy([""my_rvecs""])[""my_rvecs""]. mem0 = get_mem_usage(); print(mem0). #my_data is gone at the end of the loop, nice!; for rvec in my_rvecs:; my_data = rvec; mem1 = get_mem_usage(); print(mem1). #Does not free memory at the end of the loop!; for rvec in my_rvecs:; my_data = np.asarray(rvec); mem2 = get_mem_usage(); print(mem2). #Creating RVecs in place also does not free memory!; for i in range(1000):; ROOT.RVec('double')((42., 42., 42.)); mem3 = get_mem_usage(); print(mem3); ```. #### Output:. ```; 510033920; 510033920; 552292352; 555728896; ```. #### Expected:; No increase in memory usage over time!. #### Workaround. I guess this should work as a workaround.; ```python; for rvec in my_rvecs:; my_data = np.array([x for x in rvec]); ```. P.S. Thanks, Jonas for the the nice reproducer!. ### ROOT version. ROOT Version: 6.31/01; Built for linuxx8664gcc on Mar 11 2024, 23:52:46; From heads",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14981:657,cache,cache,657,https://root.cern,https://github.com/root-project/root/issues/14981,1,['cache'],['cache']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. Using a docker container on M1, but not optimized for M1, thisroot.sh extracts the shell name as qemu-x86_64, and consequently produces; ```; ERROR: must ""cd where/root/is"" before calling "". bin/thisroot.sh"" for this version of ""qemu-x86_64""!; ```; Reason: ; `/proc/$$/cmdline` produces; ```; /usr/bin/qemu-x86_64; /usr/bin/bash; bash; --norc; ...; ```; and `cut -d '' -f1` picks up the emulator, not the shell. ### Reproducer. I don't know where to find a lighter image, this one isn't too bad at <10 GB. On a Silicon Mac:; ```; curl -L https://github.com/eic/eic-shell/raw/main/install.sh | bash; ./eic-shell; source /usr/local/bin/thisroot.sh; ```; I believe in linux the following also invokes the image with a qemu setting; ```; docker run --rm -it --platform linux/arm64 ghcr.io/eic/jug_dev:master-nightly; ```. ### ROOT version; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/04 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 08 2023, 02:44:07 |; | From tags/v6-28-04@v6-28-04 |; | With g++ (Debian 12.2.0-14) 12.2.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Installation method. spack. ### Operating system. Docker container on M1 Mac, inside uname -a = Linux 7163f573db33 5.15.49-linuxkit-pr #1 SMP PREEMPT Thu May 25 07:27:39 UTC 2023 x86_64 GNU/Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14085:115,optimiz,optimized,115,https://root.cern,https://github.com/root-project/root/issues/14085,1,['optimiz'],['optimized']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When a `TChain` is added as a friend to a `TTree` , branches coming from the `TChain` are no longer updated after switching to the second file in the chain. ### Reproducer. The [attached macro](https://github.com/user-attachments/files/17592119/bugDemo.txt) reproduces the issue. Save it `bugDemo.C` and run it. The correct behavior is to always print `true`, but we get some `false`. The code first constructs two trees with an `index` branch. The index is the entry number, going from 0 to 10 in the first file and 10 to 20 in the second one. Then, a longer tree is constructed with 20 empty entries. The two files containing the entry number as merged into a chain and attached as a friend to the empty tree. Iterating over the long tree yields the correct value of `index` until the 10th entry, than a constant 9 (the last value in the first file). Correct behavior is 0 to 20. This can be obtained by wrapping the long tree in a `TChain`. The underlying issue is that `TTree::LoadTree` lacks the following code present in `TChain::LoadTree`:; https://github.com/root-project/root/blob/2cc4b70d2e2bd89d9b639c894b4e0558be47c22b/tree/tree/src/TChain.cxx#L1407-L1434. ### ROOT version. Seen in:; * ROOT 6.30/04 (anaconda); * ROOT 6.28/04 (LCG 104). I couldn't find any code change in `master` in the relevant areas. ### Installation method. anaconda and LCG 104. ### Operating system. Linux (CentOS 9, Ubuntu 22.04, Ubuntu 24.04). ### Additional context. Possibly related to the following Jira tickets:; * https://its.cern.ch/jira/browse/ROOT-10778 (open); * https://its.cern.ch/jira/browse/ROOT-2935 (reportedly fixed in 6.04.00)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16804:1056,Load,LoadTree,1056,https://root.cern,https://github.com/root-project/root/issues/16804,2,['Load'],['LoadTree']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When building ROOT with gnuinstall=ON, the following happen when trying to`import ROOT` in Python, on macOS : . ```; Python 3.9.6 (default, Mar 29 2024, 10:51:09); [Clang 15.0.0 (clang-1500.3.9.4)] on darwin; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import ROOT; Traceback (most recent call last):; File ""<stdin>"", line 1, in <module>; File ""/Users/laurent/github.com/root-project/install-2/lib/root/ROOT/__init__.py"", line 25, in <module>; import cppyy; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/__init__.py"", line 81, in <module>; from ._cpython_cppyy import *; File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy/_cpython_cppyy.py"", line 21, in <module>; c = loader.load_cpp_backend(); File ""/Users/laurent/github.com/root-project/install-2/lib/root/cppyy_backend/loader.py"", line 79, in load_cpp_backend; raise RuntimeError(""could not load cppyy_backend library""); RuntimeError: could not load cppyy_backend library; >>> quit(); ```. resulting libraries are installed under `someinstalldir/lib/root`. . ### Reproducer. ```; git clone https://github.com/root-project/root; cd root; mkdir build; cmake ../root -DCMAKE_GENERATOR=Ninja -DCMAKE_INSTALL_PREFIX=../install-2 -Dxrootd=OFF -Dgnuinstall=ON; source ../install-2/thisroot.sh; python3 -c 'import ROOT'; ```. (by setting gnuinstall=OFF import ROOT does work). ### ROOT version. ```; ---------------------------------------------------------------------------; | Welcome to ROOT 6.33.01 https://root.cern |; | (c) 1995-2024, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for macosxarm64 on Jun 25 2024, 12:00:47 |; | From heads/macos-python-import-root-gnuinstall@v6-31-01-2416-gb4c9e549e1 |; | With Apple clang version 15.0.0 (clang-1500.3.9.4) |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; --------------------------------------------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15924:818,load,loader,818,https://root.cern,https://github.com/root-project/root/issues/15924,2,['load'],['loader']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When input files to `RDataFrame` are remote files, force caching of remote files does not work and the remote files will be downloaded every time. . ### Reproducer. ```; import os; import ROOT. user = os.environ['USER']; outdir = f""/eos/user/{user[0]}/{user}""; filename = os.path.join(outdir, ""test.root""); # create dummy root file; ROOT.RDataFrame(100).Define(""x"", ""1"").Snapshot(""test"", filename). ROOT.TFile.SetCacheFileDir(""/tmp"", True, True); # this does not trigger loading of cached root file; ROOT.RDataFrame(""test"", f""root://eosuser.cern.ch/{filename}"").Sum(""x"").GetValue(); ```. This is because internally RDataFrame will create a TChain using [`ROOT.Internal.TreeUtils.MakeChainForMT(treename)`](https://root.cern/doc/master/RLoopManager_8cxx_source.html#l01169), which creates a `TChain` object with the mode `ROOT.TChain.kWithoutGlobalRegistration`. This in turn forces the TFile open option to be [""READ_WITHOUT_GLOBALREGISTRATION""](https://root.cern/doc/master/TChain_8cxx_source.html#l00505). This causes the TFile to be opened without caching since it only checks the [fgCacheFileForce](https://root.cern/doc/master/classTFile.html#a04d17cde8f18d500653077fc7d7dc3ac) flag when option is [""READ""](https://root.cern/doc/master/TFile_8cxx_source.html#l04182). ### ROOT version. 6.30/04 (LCG105a). ### Installation method. LCG (Swan). ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15028:546,load,loading,546,https://root.cern,https://github.com/root-project/root/issues/15028,2,"['cache', 'load']","['cached', 'loading']"
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. When trying to build ROOT on Arch Linux RISC-V, the compile result always segfaults and is unable to perform any tasks. ### Reproducer. 1. Use PKGBUILD and other source from https://gitlab.archlinux.org/archlinux/packaging/packages/root/-/tree/6.30.02-2?ref_type=tags; 2. Apply RISC-V patch [here](https://gist.github.com/hack3ric/1fbfbf9770affb0523020de27e613037); 3. On a riscv64 machine with Arch Linux RISC-V, `makepkg -s`; 4. Fails on `[100%] Generating tutorials/hsimple.root`; 5. Manually calling `src/build/bin/root.exe` will result in segfault too. ### ROOT version. 6.30.02. ### Installation method. build from source. ### Operating system. Arch Linux RISC-V. ### Additional context. Stack trace:. ```; #0 0x0000003ff3f3c04c in wait4 () from /usr/lib/libc.so.6; #1 0x0000003ff3ecfeac in ?? () from /usr/lib/libc.so.6; #2 0x0000003ff44daf00 in TUnixSystem::StackTrace() () from /home/hacker/archrv/root/src/build/lib/libCore.so; #3 0x0000003ff44d8040 in TUnixSystem::DispatchSignals(ESignals) () from /home/hacker/archrv/root/src/build/lib/libCore.so; #4 <signal handler called>; #5 0x0000003ff091def4 in llvm::jitlink::ELFLinkGraphBuilder_riscv<llvm::object::ELFType<(llvm::support::endianness)1, true> >::addRelocations() () from /home/hacker/archrv/root/src/build/lib/libCling.so; #6 0x0000003ff091eb50 in llvm::jitlink::createLinkGraphFromELFObject_riscv(llvm::MemoryBufferRef) () from /home/hacker/archrv/root/src/build/lib/libCling.so; #7 0x0000003ff0915cd4 in llvm::jitlink::createLinkGraphFromELFObject(llvm::MemoryBufferRef) () from /home/hacker/archrv/root/src/build/lib/libCling.so; #8 0x0000003ff08fd652 in llvm::jitlink::createLinkGraphFromObject(llvm::MemoryBufferRef) () from /home/hacker/archrv/root/src/build/lib/libCling.so; #9 0x0000003ff08a3a64 in llvm::orc::ObjectLinkingLayer::emit(std::unique_ptr<llvm::orc::MaterializationResponsibility, std::default_delete<llvm::orc::MaterializationResponsib",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14509:176,perform,perform,176,https://root.cern,https://github.com/root-project/root/issues/14509,1,['perform'],['perform']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. [As reported on the forum](https://root-forum.cern.ch/t/compiled-shared-library-doesnt-catch-changes-made-in-cint/59787), ROOT seems to have merging issues with global variables between compiled and interpreted code since v6.28 coinciding with the upgrade to LLVM 13. ### Reproducer. ```c++; // calo.h; #ifndef __CALO__; #define __CALO__. namespace calo {; int nUnits = 0;; void setnUnits (int n) {; 	nUnits = n;; }; }. #endif. // insert.h; #ifndef _cali_; #define _cali_. void insert();; #endif. // insert.C; #include <iostream>; #include ""calo.h""; #include ""insert.h"". using namespace std;. void insert() {; cout << ""DEBUG\t"" << calo::nUnits << endl;; }; ```. ```; $ g++ -std=c++11 -fPIC --shared -o libinsert.so insert.C; ```. On the prompt:; ```; gSystem->Load(""libinsert.so""); #include ""calo.h""; #include ""insert.h""; insert(); calo::setnUnits(3); insert(); ```. The last call should print 3, but shows 0. ### ROOT version. `master`, reproduced with 6.28/00. ### Installation method. from source. ### Operating system. Linux (but likely general problem). ### Additional context. From Wile in the forum:. _I assume that if a “global variable” is defined in a “named namespace” then its value should be “shared”. But, if it is defined in an “unnamed namespace”, then it should be “local” (“static”) to every unit that includes the file with its definition. Maybe one should check what the current C++ standard says about it._",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15938:835,Load,Load,835,https://root.cern,https://github.com/root-project/root/issues/15938,1,['Load'],['Load']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. as in the description. the root process crashes somewhere in ctor of Interpreter.; Below the stack trace (plus some printouts of the interpreter args as I have no debug info in cling atm, build takes too many resources):; ````; [mkrzewic@hack ~/build/root]$ lldb bin/root.exe; (lldb) target create ""bin/root.exe""; Current executable set to '/home/mkrzewic/build/root/bin/root.exe' (x86_64).; (lldb) run; Process 35096 launched: '/home/mkrzewic/build/root/bin/root.exe' (x86_64); interpArgs.size(): 20; interpArgs[0]: cling4root; interpArgs[1]: -DNDEBUG; interpArgs[2]: -UDEBUG; interpArgs[3]: -U_DEBUG; interpArgs[4]: -I/usr/home/mkrzewic/build/root/etc/; interpArgs[5]: -I/usr/home/mkrzewic/build/root/etc//cling; interpArgs[6]: -I/usr/home/mkrzewic/build/root/etc//cling/plugins/include; interpArgs[7]: -I/usr/home/mkrzewic/build/root/include/; interpArgs[8]: -Wno-undefined-inline; interpArgs[9]: -fsigned-char; interpArgs[10]: -O1; interpArgs[11]: -mllvm; interpArgs[12]: -optimize-regalloc=0; interpArgs[13]: -fmodule-map-file=/usr/home/mkrzewic/build/root/include//module.modulemap; interpArgs[14]: -fmodules-cache-path=/usr/home/mkrzewic/build/root/lib; interpArgs[15]: -fmodules; interpArgs[16]: -fno-implicit-module-maps; interpArgs[17]: -Rmodule-build; interpArgs[18]: -fno-autolink; interpArgs[19]: --ptrcheck; Process 35096 stopped; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; libc.so.7`__sys_thr_kill:; -> 0x8279b9dca <+10>: jb 0x8279b7f28; 0x8279b9dd0 <+16>: retq; 0x8279b9dd1: int3; 0x8279b9dd2: int3; (lldb) bt; * thread #1, name = 'root.exe', stop reason = signal SIGABRT; * frame #0: 0x00000008279b9dca libc.so.7`__sys_thr_kill + 10; frame #1: 0x00000008279326f4 libc.so.7`__raise + 52; frame #2: 0x00000008279e3bc9 libc.so.7`abort + 73; frame #3: 0x00000008248c0e39 libcxxrt.so.1`___lldb_unnamed_symbol472 + 73; frame #4: 0x00000",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14075:1052,optimiz,optimize-regalloc,1052,https://root.cern,https://github.com/root-project/root/issues/14075,1,['optimiz'],['optimize-regalloc']
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. For some time now, ATLAS has had issues with dictionary operations; sometimes failing with clang assertions. When this happens, it is; of course only in the debug build; in the optimized build,; everything seems to work fine. The problem; is related to the ordering in which dictionaries are loaded --- we can; usually make the crashes go away by forcing a particular dictionary; loading order. This appears to be related to the traits-like class that we use to specify; the inheritance relations for our DataVector class. Schematically, it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaratio",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14186:258,optimiz,optimized,258,https://root.cern,https://github.com/root-project/root/issues/14186,3,"['load', 'optimiz']","['loaded', 'loading', 'optimized']"
Performance,"### Check duplicate issues. - [X] Checked for duplicates. ### Description. hi -. Recently, we had an ATLAS bug report (https://its.cern.ch/jira/browse/ATR-28411); in which a job that loaded many dictionaries was starting to fail with; errors like. ```; cling JIT session error: Cannot allocate memory; ```. Although the job in question was not small, it was also not close to hitting; any limit on the process virtual size, which made this error confusing.; It turned out that what was happening was that the job was hitting; the limit on the number of VMAs, which on lxplus is just about 64k. A simple script which demonstrates the issue is given below.; When i run this on lxplus, it fails after about 21600 iterations, at which; point we have. ```; 21600 vmsize 1.2G nvma 65469; ```. So the total vmsize still (relatively...) quite small, but the number; of VMAs has bumped up against the system limit. Looking at a small part of the memory map:. ```; 7fb2d892f000-7fb2d8930000 r-xp 00000000 00:00 0 ; 7fb2d8930000-7fb2d8931000 rw-p 00000000 00:00 0 ; 7fb2d8931000-7fb2d8932000 r--p 00000000 00:00 0 ; 7fb2d8932000-7fb2d8933000 r-xp 00000000 00:00 0 ; 7fb2d8933000-7fb2d8934000 rw-p 00000000 00:00 0 ; 7fb2d8934000-7fb2d8935000 r--p 00000000 00:00 0 ; 7fb2d8935000-7fb2d8936000 r-xp 00000000 00:00 0 ; ```. So each time the jitter runs, it is producing a section of executable; memory, a section of read-only memory, and a section of read-write memory.; This would also be a performance issue. The jitter should somehow be more intelligent about grouping together; regions of the same protection. This may however be in tension; with other requirements, such as this comment from IncrementalJit.cpp:. ```; // A memory manager for Cling that reserves memory for code and data sections; // to keep them contiguous for the emission of one module. This is required; // for working exception handling support since one .eh_frame section will; // refer to many separate .text sections. However, stack unw",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14156:183,load,loaded,183,https://root.cern,https://github.com/root-project/root/issues/14156,1,['load'],['loaded']
Performance,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. A minor note on warning message from HS3 suggest non-existing page,; https://github.com/root-project/root/blob/master/roofit/hs3/README.md. Full message; ```; unable to export class 'RooBreitWigner' - no export keys available!; there are several possible reasons for this:; 1. RooBreitWigner is a custom class that you or some package you are using added.; 2. RooBreitWigner is a ROOT class that nobody ever bothered to write a serialization definition for.; 3. something is wrong with your setup, e.g. you might have called RooFit::JSONIO::clearExportKeys() and/or never successfully read a file defining these keys with RooFit::JSONIO::loadExportKeys(filename); either way, please make sure that:; 3: you are reading a file with export keys - call RooFit::JSONIO::printExportKeys() to see what is available; 2 & 1: you might need to write a serialization definition yourself. check https://github.com/root-project/root/blob/master/roofit/hs3/README.md to see how to do this!; (int) 0; ```. ### Reproducer. 1. Use the latest root,; `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-el9-gcc13-opt/setup.sh`. 2. run a script, `root -l -b -q export_pdf.cxx++`; ```c++; #include ""RooRealVar.h""; #include ""RooBreitWigner.h""; #include ""RooWorkspace.h""; #include ""RooFitHS3/RooJSONFactoryWSTool.h"". int export_pdf(); {; RooRealVar x(""x"", ""x"", -10, 10);; RooRealVar mean(""mean"", ""mean of gaussian"", 1, -10, 10);; RooRealVar gamma(""gamma"", ""width of bw"", 1, 0.1, 10);; RooBreitWigner bw(""bw"", ""non-rel bw"", x, mean, gamma);. RooWorkspace w(""ws"");; w.import(bw);. RooJSONFactoryWSTool tool(w);; tool.exportJSON(""standard_pdf.json"");; return 0;; }; ```. ### ROOT version. ```; root --version; ROOT Version: 6.33/01; Built for linuxx8664gcc on Apr 26 2024, 23:06:35; From heads/master@v6-31-01-1819-gb5ad658677; ```. ### Installation method. LCG. ### Operating system. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15370:713,load,loadExportKeys,713,https://root.cern,https://github.com/root-project/root/issues/15370,1,['load'],['loadExportKeys']
Performance,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. Hello,; I am trying to load a GDML file using matrix and variables. Here in an extract from the gdml:. ```; <matrix name=""someNumbers"" coldim=""1"" values=""4 3 2 3""/>; <variable name=""testVariable"" value=""someNumbers[1]""/>; ```. ROOT complains when parsing the GDML, with the following error:. ```; input_line_155:2:81: error: subscripted value is not an array, pointer, or vector; Double_t TFormula____id2222353222929674449(Double_t *x,Double_t *p){ return p[0][1] ; }; ~~~~^~; Error in <prepareMethod>: Can't compile function TFormula____id2222353222929674449 prototype with arguments Double_t*,Double_t*; Error in <TFormula::InputFormulaIntoCling>: Error compiling formula expression in Cling; Error in <TFormula::ProcessFormula>: Formula ""[someNumbers][1]"" is invalid !; Error in <TFormula::Eval>: Formula is invalid and not ready to execute ; Fatal in <TGDMLParse::Value>: Got bad value nan from string 'someNumbers[1]'; aborting; ```. It seems that the parser fails in understanding how to access the matrix element. . Cheers,; Noemi. ### Reproducer. [geometry_test.gdml.txt](https://github.com/root-project/root/files/11833941/geometry_test.gdml.txt). Please note the attached file is `.txt`. To reproduce the issue, you can do:. ```; root -l; TGeoManager::Import(""geometry_test.gdml""); ```. ### ROOT version. ROOT Version: 6.26/10. ### Installation method. build from source using gcc 12.2.1. ### Operating system. Linux Fedora 38. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13074:98,load,load,98,https://root.cern,https://github.com/root-project/root/issues/13074,1,['load'],['load']
Performance,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. I need help to understand an issue which we have when running on Linux on ARM when reading a file which was serialised on x86. Notice that this platform is peculiar, because `char` (without specifier) is unsigned, and not signed (char sign-ess is implementation detail in the standard). This is important because `mPadSubset` that you will see below is an `enum PadSubset : char`. Running in valgrind, the issue appears as dumped below. What puzzles me and what I think is the culprit of the segmentation fault is the line:. ```; [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]; ```. as I would have expected it to be len=1. Can you explain me what is going on?. ```; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]: Creating StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version: 2; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=2, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData offset= 32 type=300 ,stl=1, ctype=61, internal CalArrays; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Pad subset granularity; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalDet<o2::tpc::PadFlags>, version=1, checksum=0x93700773; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365, name of the object; [1965517:tpc-tracker]: vector<o2::tpc::CalArray<o2::tpc::PadFlags> > mData o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312:684,optimiz,optimized,684,https://root.cern,https://github.com/root-project/root/issues/16312,1,['optimiz'],['optimized']
Performance,"### Check duplicate issues. - [x] Checked for duplicates. ### Description. ROOT crashes when performing the uncertainty correction in (Fitter::DoWeightMinimization) when doing a weighted likelihood fit. ; See https://root-forum.cern.ch/t/root-crashes-when-doing-a-weighted-likelihood-fit/57976. ### Reproducer. ```; void test(){ ; TH1F* h = new TH1F(""h"",""h"",3,0,3); ; for(int i = 0; i < 3; i++)h->Fill(0.5); ; for(int i = 0; i < 4; i++)h->Fill(1.5); ; for(int i = 0; i < 3; i++)h->Fill(2.5); ; ; //This works ; std::cout << ""Likelihood Fit:"" << std::endl; ; h->Fit(""pol0"",""L""); ; ; //This dosn't ; h->Sumw2(); ; h->Scale(10); ; std::cout << ""Weighted Likelihood Fit:"" << std::endl; ; h->Fit(""pol0"",""WL""); ; } ; ``` . ### ROOT version. 6.28, 6.30 and master. ### Installation method. all. ### Operating system. all. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14458:93,perform,performing,93,https://root.cern,https://github.com/root-project/root/issues/14458,1,['perform'],['performing']
Performance,"### Describe the bug. From https://lcgapp-services.cern.ch/root-jenkins/job/root-release-master/BUILDTYPE=Release,LABEL=ROOT-fedora29,V=master/353/parsed_console/; ```; CMakeFiles/RooFitCore.dir/src/InitUtils.cxx.o:InitUtils.cxx:function RooFit::InitUtils::loadComputeLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >): error: undefined reference to '__cpu_indicator_init'. CMakeFiles/RooFitCore.dir/src/InitUtils.cxx.o:InitUtils.cxx:function RooFit::InitUtils::loadComputeLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >): error: undefined reference to '__cpu_model'. collect2: error: ld returned 1 exit status; gmake[2]: *** [roofit/roofitcore/CMakeFiles/RooFitCore.dir/build.make:3264: lib/libRooFitCore.so.6.23.01] Error 1; gmake[1]: *** [CMakeFiles/Makefile2:33899: roofit/roofitcore/CMakeFiles/RooFitCore.dir/all] Error 2; ```. ### Expected behavior. No linker error. ### To Reproduce. Build ROOT on Fedora 29. Consider adding `-lgcc` *if* needed, i.e. in the case 'yes we want / can build arch-specific compute libraries we should check whether linking calls to `__cpu_indicator_init` and `__cpu_model` need `-lgcc`, and if so, provide it to the linker invocation of `libRooFitCore`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6855:257,load,loadComputeLibrary,257,https://root.cern,https://github.com/root-project/root/issues/6855,2,['load'],['loadComputeLibrary']
Performance,"### Describe the bug. ROOT libraries compiled with clang and high optimization level emit floating point exceptions in the simplest codes. ### Expected behavior; No FPEs. ### To Reproduce; Compile the code below using clang; ```; clang++ -D_FORTIFY_SOURCE=2 -O4 -pipe -g -Wall -D_REENTRANT -D_GLIBCXX_ASSERTIONS -std=c++1y -o color5.exe color5.cxx; ```; and run ; ```; ./color5.exe; ```; Output of the reproducer. ```; msum 0.300000 0.100000; Floating point exception (core dumped); ```. The same compilation with ``-O1`` produces a working executable. Please note that this code is a reproducer obtained from the TColor::RGB2HLS static function. ```; #include <iostream>; #include <stdlib.h>. #include <fenv.h>; #define Float_t float; #ifndef HAVE_FEENABLEEXCEPT; #if defined(__APPLE__) && defined(__MACH__). // Public domain polyfill for feenableexcept on OS X; // http://www-personal.umich.edu/~williams/archive/computation/fe-handling-example.c. inline int feenableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // unmask; fenv.__control &= ~new_excepts;; fenv.__mxcsr &= ~(new_excepts << 7);. return fesetenv(&fenv) ? -1 : old_excepts;; }. inline int fedisableexcept(unsigned int excepts); {; static fenv_t fenv;; unsigned int new_excepts = excepts & FE_ALL_EXCEPT;; // all previous masks; unsigned int old_excepts;. if (fegetenv(&fenv)) {; return -1;; }; old_excepts = fenv.__control & FE_ALL_EXCEPT;. // mask; fenv.__control |= new_excepts;; fenv.__mxcsr |= new_excepts << 7;. return fesetenv(&fenv) ? -1 : old_excepts;; }. #else; inline int feenableexcept(unsigned int excepts); {; #pragma STDC FENV_ACCESS ON; fexcept_t flags;; /* Save current exception flags. */; fegetexceptflag(&flags, FE_ALL_EXCEPT);. feclearexcept(FE_ALL_EXCEPT); /* clear all fp exception conditions */; return fesetexceptflag(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6677:66,optimiz,optimization,66,https://root.cern,https://github.com/root-project/root/issues/6677,1,['optimiz'],['optimization']
Performance,"### Describe the bug. The `RooFFTConvPdf` gives wrong results if one of the input PDFs is a `RooProdPdf`. ### To Reproduce. The issue can be reproduced by computing the convolution of two Gaussians, where one of the Gaussians is turned into a `RooFFTConvPdf` by multiplication with unity (`RooUniform`). ```C++; #include ""RooGaussian.h""; #include ""RooPlot.h""; #include ""RooRealSumPdf.h""; #include ""RooRealVar.h""; #include ""RooRealSumPdf.h""; #include ""RooUniform.h""; #include ""RooProdPdf.h""; #include ""RooFFTConvPdf.h""; #include ""TCanvas.h"". int main() {. // x variable with bins for convolution; RooRealVar x(""x"",""x"", -2000, 3000.);; x.setBins(1000, ""cache"");. // let's try to convolute two Gaussians; RooRealVar zero(""zero"", ""zero"", 0.0);; RooRealVar sigma(""sima"", ""sigma"", 100.);. RooRealVar mass(""mass"", ""mass"", 1000);; RooRealVar width(""width"", ""width"", 100.);. RooGaussian gaus1(""gaus1"", ""gaus1"", x, zero, sigma);; RooGaussian gaus2(""gaus2"", ""gaus2"", x, mass, width);. // multiply one Gaussian with unity to get a RooProdPdf; RooUniform uni(""uni"", ""uni"", RooArgList(x));; RooProdPdf prod(""prod"", ""prod"", RooArgList(gaus1, uni));. // add zero trick to ""convert"" the RooProdPdf into a RealSumPdf; RooUniform dummy_for_sum_pdf{""dummy_for_sum_pdf"", ""dummy_for_sum_pdf"", x};; RooRealVar unity_for_sum_pdf(""unity_for_sum_pdf"", ""unity_for_sum_pdf"", 1);; RooRealSumPdf prod_fixed( ""prod_fixed"", ""prod_fixed"",; RooArgList(prod, dummy_for_sum_pdf),; RooArgList(unity_for_sum_pdf) );. // convolute pdf (replace prod with prod_fixed to enable hotfix); RooFFTConvPdf conv(""conv"", ""conv"", x, prod, gaus2);. // make plot; TCanvas c(""convolution"", ""convolution"");; auto xframe = x.frame(RooFit::Title(""With RooProdPdf""));. gaus1.plotOn(xframe);; gaus2.plotOn(xframe);; prod.plotOn(xframe);; conv.plotOn(xframe);. xframe->Draw();; c.SaveAs(""convolution.png"");. // the result of the convolution is expected to be a wider Gaussian around 1000,; // but without the hotfix it is just a non-zero constant!; }; ```. The",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7157:651,cache,cache,651,https://root.cern,https://github.com/root-project/root/issues/7157,1,['cache'],['cache']
Performance,"### Describe the bug. The following tests fail:; ```; 428 - gtest-tree-ntuple-v7-test-ntuple-types (Failed); 1052 - tutorial-v7-concurrentfill.cxx (Failed); 1054 - tutorial-v7-histops.cxx (Failed); 1055 - tutorial-v7-perf.cxx (Failed); 1056 - tutorial-v7-perfcomp.cxx (Failed); 1057 - tutorial-v7-simple.cxx (Failed); 1060 - tutorial-rcanvas-rcanvas_mt.cxx (Failed); 1063 - tutorial-rcanvas-rh1.cxx (Failed); 1064 - tutorial-rcanvas-rh1_large.cxx (Failed); 1065 - tutorial-rcanvas-rh1_twoscales.cxx (Failed); 1066 - tutorial-rcanvas-rh2.cxx (Failed); 1067 - tutorial-rcanvas-rh2_colz.cxx (Failed); 1068 - tutorial-rcanvas-rh2_large.cxx (Failed); 1069 - tutorial-rcanvas-rh3.cxx (Failed); 1070 - tutorial-rcanvas-rh3_large.cxx (Failed); 1071 - tutorial-rcanvas-rlegend.cxx (Failed); 1082 - tutorial-rcanvas-subpads.cxx (Failed); 1577 - roottest-root-core-execStatusBitsCheck (Failed); ```. AFAICS most fail with `clang/lib/Serialization/ASTReaderDecl.cpp:1000: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl *): Assertion 'Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.`, except `gtest-tree-ntuple-v7-test-ntuple-types` and `roottest-root-core-execStatusBitsCheck` which cannot find data members. ### How to reproduce?. Build with `-DCMAKE_CXX_STANDARD=17 -Druntime_cxxmodules=OFF`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13058:128,concurren,concurrentfill,128,https://root.cern,https://github.com/root-project/root/issues/13058,1,['concurren'],['concurrentfill']
Performance,"### Describe the bug. Using:; [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz); we get:; ```; . ./go. StreamerInfo for class: Hep3Vec, version=1, checksum=0x0; Error in <TProtoClass::FindDataMember>: data member with index 0 is not found in class Hep3Vec; Error in <CreateRealData>: Cannot find data member # 0 of class Hep3Vec for parent Holder!; ```; which is cause by the `TClass` (for the class enclosing the anonymous enum) being created during the reading of the rootpcm **before** its own `TProtoClass` is fully loaded (actually during its loading).; ```; #7 0x00007ffff7784e29 in TClass::GetClass (name=0x7fffffff9ec0 ""Hep3Vec"", load=true, silent=false) at /nashome/p/pcanal/root/core/meta/src/TClass.cxx:2970; ...; #9 0x00007ffff77a7c80 in TEnum::GetEnum (enumName=0xf5c810 ""Hep3Vec::(unnamed)"", sa=TEnum::kInterpLookup) at /nashome/p/pcanal/root/core/meta/src/TEnum.cxx:310; #10 0x00007ffff77a0150 in TDataMember::Init (this=0xf5c6d0, afterReading=true) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:225; #11 0x00007ffff77a3606 in TDataMember::Streamer (this=0xf5c6d0, b=...) at /nashome/p/pcanal/root/core/meta/src/TDataMember.cxx:949; ....; #27 0x00007ffff763e5ed in TProtoClass::Streamer (this=0xf5c0e0, R__b=...) at core/G__Core.cxx:26439; ....; #38 0x00007fffeab11c72 in TCling::LoadPCM (this=0x738b90, pcmFileNameFullPath=...) at /nashome/p/pcanal/root/core/metacling/src/TCling.cxx:1906. ### What is the expected behaviour?. properly loading of the dictionary. ### How to reproduce?. Use [hep3vec.tar.gz](https://github.com/root-project/root/files/11658469/hep3vec.tar.gz); and run `go`. ### ROOT version. work in progress ... . ### How did you install ROOT?. local build. ### Which operating system are you using?. alll. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12953:555,load,loaded,555,https://root.cern,https://github.com/root-project/root/issues/12953,5,"['Load', 'load']","['LoadPCM', 'load', 'loaded', 'loading']"
Performance,"### Describe the bug. When building root 6.28.00 for RHEL+EPEL 8 on ppc64le there are build and test failures. Test failures happens in compiled unit tests (gtest), tests using interpreded root and tests using python. All tests fail with the error ""pure virtual method called"" and the backtrace all indicate the same line:. ~~~; #9 llvm::orc::ExecutionSession::lookup (this=0x1099d16e0, SearchOrder=std::vector of length 1, capacity 1 = {...}, Name=..., RequiredState=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp:2040; ~~~. https://github.com/root-project/root/blob/db1e83871f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () fro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:469,optimiz,optimized,469,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"### Describe the bug. When running the tests after compiling root 6.24.00 many of the root7 tests fail:; ```; The following tests FAILED:; 	972 - tutorial-v7-concurrentfill.cxx (Failed); 	973 - tutorial-v7-draw.cxx (Failed); 	975 - tutorial-v7-draw_frame.cxx (Failed); 	976 - tutorial-v7-draw_legend.cxx (Failed); 	977 - tutorial-v7-draw_mt.cxx (Failed); 	979 - tutorial-v7-draw_rh1.cxx (Failed); 	980 - tutorial-v7-draw_rh1_large.cxx (Failed); 	981 - tutorial-v7-draw_rh2.cxx (Failed); 	982 - tutorial-v7-draw_rh2_colz.cxx (Failed); 	983 - tutorial-v7-draw_rh2_large.cxx (Failed); 	984 - tutorial-v7-draw_rh3.cxx (Failed); 	985 - tutorial-v7-draw_rh3_large.cxx (Failed); 	986 - tutorial-v7-draw_subpads.cxx (Failed); 	989 - tutorial-v7-histops.cxx (Failed); 	996 - tutorial-v7-perf.cxx (Failed); 	997 - tutorial-v7-perfcomp.cxx (Failed); 	998 - tutorial-v7-simple.cxx (Failed); Errors while running CTest; ```; The error is the same for all of them:; ```; 973/1121 Test #972: tutorial-v7-concurrentfill.cxx ......................................***Failed 3.25 sec; Processing /builddir/build/BUILD/root-6.24.00/tutorials/v7/concurrentfill.cxx...; root.exe: /builddir/build/BUILD/root-6.24.00/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:976: void clang::ASTDeclReader::VisitFunctionDecl(clang::FunctionDecl*): Assertion `Reader.getContext().getLangOpts().Modules && ""already deserialized this template specialization""' failed.; CMake Error at /builddir/build/BUILD/root-6.24.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):; error code: Subprocess aborted; ```; This happens both with gcc 10 on Fedora 33 (defaults to C++ 14) and gcc 11 on Fedora 34 (defaults to C++ 17). ### Expected behavior; Successful tests. ### To Reproduce; Steps to reproduce the behavior:; 1. Build root with -Droot7:BOOL=ON; 2. Run make test. ### Setup; 1. ROOT version: 6.24.00; 2. Operating system: Fedora Linux 33 and 34; 3. Failures during ""make test"" run during RPM package build (",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8073:158,concurren,concurrentfill,158,https://root.cern,https://github.com/root-project/root/issues/8073,2,['concurren'],['concurrentfill']
Performance,"### Describe the bug. While investigating some test failures I found that even though a class is in a library's dictionary, and autoloading works in most cases, the autoloading fails if the first member function used is a new or delete and the class has non-standard new and delete operators. ### Expected behavior. Failures like these should not happen:. ```; 870/1231 Test #852: tutorial-roofit-rf509_wsinteractive .................................***Failed 1.39 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf509_wsinteractive.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN9RooArgSetdlEPv' unresolved while linking [cling interface function]!; You are probably missing the definition of RooArgSet::operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:995,load,load,995,https://root.cern,https://github.com/root-project/root/issues/10203,1,['load'],['load']
Performance,"### Describe the bug. ```; Processing /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C...; In file included from input_line_10:1:; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/root/tutorials/math/multivarGaus.C:12:15: error: no type named 'GSLRandomEngine' in namespace 'ROOT::Math'; ROOT::Math::GSLRandomEngine rnd;; ~~~~~~~~~~~~^; CMake Error at /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/RootTestDriver.cmake:237 (message):; error code: 1; ```. ```; Directory: /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/runtutorials; ""tutorial-math-exampleFunction-py"" start time: May 11 01:28 CEST; Output:; ----------------------------------------------------------. ****************************************; Minimizer is Minuit / Migrad; MinFCN = 1.687e-08; NDf = 0; Edm = 3.37793e-08; NCalls = 146; Par_0 = 0.999952 +/- 1.00372 ; Par_1 = 0.999892 +/- 2.00986 ; Error in <TUnixSystem::FindDynamicLibrary>: libMathMore[.so | .dll | .dylib | .sl | .dl | .a] does not exist in /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:.:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/build/lib:/lib64/tls/haswell/x86_64:/lib64/tls/haswell:/lib64/tls/x86_64:/lib64/tls:/lib64/haswell/x86_64:/lib64/haswell:/lib64/x86_64:/lib64:/usr/lib64/tls/haswell/x86_64:/usr/lib64/tls/haswell:/usr/lib64/tls/x86_64:/usr/lib64/tls:/usr/lib64/haswell/x86_64:/usr/lib64/haswell:/usr/lib64/x86_64:/usr/lib64:/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/defau",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8145:119,perform,performance-,119,https://root.cern,https://github.com/root-project/root/issues/8145,4,['perform'],['performance-']
Performance,"### Describe the bug. cling crashes when running some LHCb process involving using python within C++ code called from python; Here is the top of the stack trace :; ```; #11 0x00007f10460f38cc in clang::Sema::getTemplateDepth(clang::Scope*) const () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #12 0x00007f1045b8e15f in clang::Sema::EnterTemplatedContext(clang::Scope*, clang::DeclContext*) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; #13 0x00007f1045a8a95c in clang::Sema::ActOnCXXEnterDeclaratorScope(clang::Scope*, clang::CXXScopeSpec&) () from /cvmfs/lhcb.cern.ch/lib/lcg/releases/ROOT/6.28.00-a8528/x86_64-centos7-gcc11-dbg/lib/libCling.so; ```. ### Expected behavior. No crash obviously. ### To Reproduce. files lhcbRunEnv and test-XMLSummary-exception.py are attached to the report. I had to zip together into material.zip to please github... ```; source /cvmfs/lhcb.cern.ch/lib/LbEnv.sh; source lhcbRunEnv; python /tmp/test-XMLSummary-exception.py; ```. ### Setup; 1. ROOT version : LCG 103, hence ROOT 6.28.00-a8528; 2. Linux, centos7; 3. cvmfs. ### Additional context; The same is working under LCG 102. Also it seems to be related to using a complicated stack where python calls C++ which calls python which calls C++ again, with ROOT dictionary at pretty much all levels. Moreover, no LHCb code is used in the example, only Gaudi, but of course LHCb dictionaries are still loaded and a key point to the failure.; [material.zip](https://github.com/root-project/root/files/11397560/material.zip)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12758:1505,load,loaded,1505,https://root.cern,https://github.com/root-project/root/issues/12758,1,['load'],['loaded']
Performance,"### Describe the bug; - Some users may name their macro main.cpp or main.c, with content `int main() { return 0;}`, but this leads to a crash; ```; root -l main.cpp ; root [0] ; Processing main.cpp... *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f349a49845a in __GI___wait4 (pid=57745, stat_loc=stat_loc; entry=0x7ffe007656d8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f349a49841b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe007656d8, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f349a3febcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f349ac5bc22 in TUnixSystem::Exec (this=0x5620a717b800, shellcmd=0x5620a837aa50 ""/opt/root_bld/etc/gdb-backtrace.sh 57715 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2104; #4 0x00007f349ac5c4d3 in TUnixSystem::StackTrace (this=0x5620a717b800) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f349ac60174 in TUnixSystem::DispatchSignals (this=0x5620a717b800, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3615; #6 0x00007f349ac5790e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395; #7 0x00007f349ac60081 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3586; #8 0x00007f349ac509d0 in textinput::TerminalConfigUnix::HandleSignal (this=0x7f349b144ae0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #9 0x00007f349ac506ec in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #10 <signal handler called>; #11 __strc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707:686,optimiz,optimized,686,https://root.cern,https://github.com/root-project/root/issues/11707,2,['optimiz'],['optimized']
Performance,"### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. I get a segfault with the following program; ```cpp; #include <ROOT/RHist.hxx>; #include <TRandom.h>. int main(){; ROOT::Experimental::RH1D myhisto{};. for (auto i = 0; i < 1000; i++){; myhisto.Fill(gRandom->Gaus(10,1));; }; }; ```; ```; $: g++ -o create_rh1d create_rh1d.cpp `root-config --cflags --glibs`; $: ./create_rh1d . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fbb37f46c8a in __GI___wait4 (pid=74253, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007fbb37f46c4b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffe5f04fe8, options=options; entry=0) at waitpid.c:38; #2 0x00007fbb37ec2897 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fbb39c9ecdc in TUnixSystem::StackTrace() () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #4 0x00007fbb39c9c2d5 in TUnixSystem::DispatchSignals(ESignals) () from /home/vpadulan/Programs/rootproject/rootinstall/v6-24-00/lib/libCore.so; #5 <signal handler called>; #6 0x0000000000000000 in ?? (); #7 0x000000000040237c in ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty>::Fill(ROOT::Experimental::Hist::RCoordArray<1> const&, double) (); #8 0x00000000004021e4 in main (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7971:881,optimiz,optimized,881,https://root.cern,https://github.com/root-project/root/issues/7971,1,['optimiz'],['optimized']
Performance,"### Describe the bug; A reverted transaction due to a failed compilation ends up removing decls / JITed symbols that should be left untouched. Related issues: #6439, #7970, [ROOT-10848](https://sft.its.cern.ch/jira/browse/ROOT-10848), [ROOT-6254](https://sft.its.cern.ch/jira/browse/ROOT-6254), [ROOT-8084](https://sft.its.cern.ch/jira/browse/ROOT-8084), and [ROOT-8245](https://sft.its.cern.ch/jira/browse/ROOT-8245). ### Expected behavior; Clean unload. Reverting a transaction should probably not touch template instantiations / emitted symbols that correspond to deserialized decls. ### To Reproduce; ```c++; root [1] foo.size(); ROOT_prompt_1:1:4: error: no member named 'size' in 'std::unique_ptr<std::__cxx11::basic_string<char>, std::default_delete<std::__cxx11::basic_string<char> > >'; did you mean to use '->' instead of '.'?; foo.size(); ^; ->; root [2] foo->size(); ROOT_prompt_2:1:4: error: member reference type 'std::unique_ptr<std::string>' (aka 'unique_ptr<basic_string<char> >') is not a pointer; did you mean to use '.'?; foo->size(); ~~~^~; ```; or; ```c++; root [0] std::unique_ptr<TFile> foo{TFile::Open(""foo.root"", ""RECREATE"")};; root [1] foo.GetName(); ROOT_prompt_1:1:4: error: no member named 'GetName' in 'std::unique_ptr<TFile, std::default_delete<TFile> >'; did you mean to use '->' instead of '.'?; foo.GetName(); ^; ->; root [2] foo->GetName(); IncrementalExecutor::executeFunction: symbol '_ZSt3getILm0EJP5TFileSt14default_deleteIS0_EEERKNSt13tuple_elementIXT_ESt5tupleIJDpT0_EEE4typeERKS8_' unresolved while linking [cling interface function]!; You are probably missing the definition of std::tuple_element<0ul, std::tuple<TFile*, std::default_delete<TFile> > >::type const& std::get<0ul, TFile*, std::default_delete<TFile> >(std::tuple<TFile*, std::default_delete<TFile> > const&); Maybe you need to load the corresponding shared library?; ```. ### Setup; ROOT master, Arch Linux x86_64",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10049:1835,load,load,1835,https://root.cern,https://github.com/root-project/root/issues/10049,1,['load'],['load']
Performance,"### Describe the bug; According to https://root.cern.ch/root/htmldoc/guides/users-guide/WritingGUI.html#event-processing-signals-and-slots one can pass parameters by value to your slots. `Connect(myButton, ""Pressed()"",""TH1"",hist, ""Draw(=\""LEGO\"")"");`. For example, I was trying:; `myTGCheckBox->Connect(""Clicked()"",""TGTextButton"", myButton, ""SetText(=\""LEGOlegoemoryABCDEF\"")"");`. But when I click on my checkbox, ROOT crashes then with:; ```; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7c3b4d0457 in __GI___waitpid (pid=14103, stat_loc=stat_loc; entry=0x7ffcd65f6a98, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f7c3b43b177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f7c3c078960 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so; #3 0x00007f7c3c07b4d5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so; #4 <signal handler called>; #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65; #6 0x00007f7c3bf806be in StrDup(char const*) () from /opt/root_bld/lib/libCore.so; #7 0x00007f7c3c7c10ea in TGHotString::TGHotString(char const*) () from /opt/root_bld/lib/libGui.so; #8 0x00007f7c3c6967ad in TGTextButton::SetText(TString const&) () from /opt/root_bld/lib/libGui.so; #9 0x00007f7c2b3b903c in ?? (); #10 0x0000563f9e2c0f30 in ?? (); #11 0x0000563f9da66200 in ?? (); #12 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addit",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195:877,optimiz,optimized,877,https://root.cern,https://github.com/root-project/root/issues/7195,1,['optimiz'],['optimized']
Performance,"### Describe the bug; Because of #6563 and the fix in CMake we need to move from linking `${PYTHON_LIBRARIES}` to instead depend on `Python3::Python`. See https://gitlab.kitware.com/cmake/cmake/-/issues/21293. This fixes test failures:; ```; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so, 9): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; Referenced from: /Users/sftnight/build/night/LABEL/mac1015/SPEC/noimt/V/6-22/build/lib/libPyMVA.so; Reason: image not found; ```. ### Expected behavior; RPath correctly set. ### To Reproduce; Jenkins nightly master or 6.22 on macos15, https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-v6-22-00-patches/LABEL=mac1015,SPEC=noimt,V=6-22/. ### Setup. ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6753:272,load,loadLibrary,272,https://root.cern,https://github.com/root-project/root/issues/6753,2,['load'],"['loadLibrary', 'loaded']"
Performance,"### Describe the bug; I am experiencing strange behaviour with `RooAddPdf::fixCoefRange`. When I call `createIntegral` on a `RooAddPdf`, then call `fixCoefRange`, then call `createIntegral` again, the same value is returned (whilst the change of definition of the coefficients should change the integral). It seems to me the cache does not get cleared when calling `fixCoefRange`, as the behaviour is correct when calling `fixCoefRange` before any integral computation. ### To Reproduce; ```cpp; RooWorkspace w1;; w1.factory(""x[3., 0., 10.]"");; w1.var(""x"")->setRange(""range_int"", 0., 4.);; w1.factory(""AddPdf::sum(Gaussian(x, mean1[1.], sigma1[2.]), Gaussian(x, mean2[5.], sigma2[10.]), coef[0.3])"");; RooWorkspace w2(w1);. //Call createIntegral on workspace w1 only; cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;. w1.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w1.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. w2.var(""x"")->setRange(""fixCoefRange"", 0., 1.);; static_cast<RooAddPdf*>(w2.pdf(""sum""))->fixCoefRange(""fixCoefRange"");. cout << w1.pdf(""sum"")->createIntegral(RooArgSet(*w1.var(""x"")),RooFit::NormSet(RooArgSet(*w1.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; cout << w2.pdf(""sum"")->createIntegral(RooArgSet(*w2.var(""x"")),RooFit::NormSet(RooArgSet(*w2.var(""x""))), RooFit::Range(""range_int""))->getVal() << endl;; ```. This prints :; ```; 0.548209 //Before calling RooAddPdf::fixCoefRange; 0.548209 //After calling RooAddPdf::fixCoefRange but with a previous call to createIntegral; 0.463998 //After calling RooAddPdf::fixCoefRange without any previous call; ```; whilst I would expect : ; ```; 0.548209; 0.463998; 0.463998; ```. ### Setup; ROOT 6.26/02",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10988:325,cache,cache,325,https://root.cern,https://github.com/root-project/root/issues/10988,1,['cache'],['cache']
Performance,"### Describe the bug; I have a script drawing a TH2 histogram, which by default plots in Bird format.; Sometimes, I activate in the script also a TGLViewer (TEve window) on a separate window. When I do that, the palette of the TH2 histogram changes. I checked and someone else saw the same issue, see http://nuclear.korea.ac.kr/~lamps/kebi_doc/KBRun_8cc_source.html line 1595. ### Expected behavior; The default palette is not changed, or a warning is issued (or it's documented in the Doxygen-HTML code). ### To Reproduce; 1. Draw a TH2 using COLZ, with and without having a separate window with a TGLViewer / TEveWindow. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.25/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on May 17 2021, 10:49:42 |; | From heads/master@v6-25-01-861-g5ea261143f |; | With |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; My current workaround is to call gSytle->SetPalette(kBird) after I load the 3D viewer:. ```; TGLViewer* v = eM->GetDefaultGLViewer();; v->SetClearColor(kWhite);; v->SetGuideState(2,true,false,NULL);; v->SetResetCamerasOnUpdate(false);; eM->GetMainWindow()->MoveResize(1200,57,700,600);; eM->FullRedraw3D(kTRUE);. gStyle->SetPalette(kBird);; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8597:1164,load,load,1164,https://root.cern,https://github.com/root-project/root/issues/8597,1,['load'],['load']
Performance,"### Describe the bug; On Linux, ROOT reports most of the RAM is full, even if it is free. Probably because it reports:. `used = total - free`; instead of; `used = total - free - cached = total - available`. See: https://github.com/root-project/root/blob/4d2a8650ed0f47fbffed33488426aaa6b6dfc73b/core/unix/src/TUnixSystem.cxx#L5153. ```; /opt/root_bld/tutorials/gui $ root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 15933 15381 552; root [2] .q; /opt/root_bld/tutorials/gui $ free -h; total used free shared buff/cache available; Mem: 15G 5.6G 658M 439M 9.3G 9.2G; Swap: 1.0G 135M 888M; ```. ### Expected behavior; It should report the actual free memory, or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory, which is actually free to use. ### To Reproduce; ```; MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; ```; or; `/opt/root_bld/tutorials/gui $ root -l CPUMeter.C`. ### Setup; 1. ROOT version: 6.23/01; 2. Operating system: Ubuntu 18; 3. Self-built. ### Additional context; https://www.thegeekdiary.com/understanding-proc-meminfo-file-analyzing-memory-utilization-in-linux/. My suggestion to solve this would be to do:. if (s.BeginsWith(""MemAvailable"")) {; TPRegexp(""^.+: *([^ ]+).*"").Substitute(s, ""$1"");; meminfo->fMemAvailable = (s.Atoi() / 1024);; }. `meminfo->fMemUsed = meminfo->fMemTotal - meminfo->fMemAvailable; `. and then in https://root.cern/doc/master/structMemInfo__t.html#a62b63e5e24efd2e2b5d0f60456e239d6:. ` Int_t fMemAvailable; // available RAM in MB`. For the SWAP it's probably not necessary. Not sure if the same issue happens for other OS.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196:178,cache,cached,178,https://root.cern,https://github.com/root-project/root/issues/7196,3,['cache'],"['cache', 'cached']"
Performance,"### Describe the bug; Problems with loading dictionaries created with 6.22.06 by the 6.22.08.; This is quite a minor thing per se but could indicate a larger problem. ### Expected behavior; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. [user@localhost]# ; ```. Dictionaries are loaded. ### To Reproduce; Install ROOT and HepMC3-rootIO from default Fedora repositories.; ```; [user@localhost]# root -b -l -q -n -e '{return gSystem->Load(""/usr/lib64/root/libHepMC3rootIO.so"");}'. malloc(): invalid size (unsorted); [user@localhost]# ; ```; ### Setup; Fedora33 or Rawhide, root 6.22.08 HepMC3-rootIO from the default repositories. ### Additional context; Filled a request to rebuild against newest ROOT; https://bugzilla.redhat.com/show_bug.cgi?id=1945991",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7781:36,load,loading,36,https://root.cern,https://github.com/root-project/root/issues/7781,4,"['Load', 'load']","['Load', 'loaded', 'loading']"
Performance,"### Describe the bug; We have typedefs in ATLAS EDM that are not resolved immediately by TClass::GetClass() but only at the second call to it:; root [0] TClass::GetClass(""MissingETBase::Types::jetlink_t""); (TClass *) nullptr; root [1] TClass::GetClass(""MissingETBase::Types::jetlink_t""); (TClass *) 0x4d3eff0. I am tentatively calling it a bug - because the behavior is inconsistent, but it's also possible we are missing something in selection.xml files?. ### Expected behavior; Hopefully it would work at the first try! 😄 . ### To Reproduce; For ROOT 6.26.8 ATLAS setup, on lxplus:; % source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/V02-01-05/AtlasSetup/scripts/asetup.sh master,latest,Athena; % root. For ROOT master ATLAS setup (using LCG DEV3 nightly):; source /cvmfs/atlas.cern.ch/repo/ATLASLocalRootBase/x86_64/AtlasSetup/V02-01-05/AtlasSetup/scripts/asetup.sh master--dev3LCG,latest,Athena. ### Additional context; The typedef is defined in a different library than the actual class - I suspect the first call to GetClass() only loads the first library, gets the typedef definition but stops at this point. Only the second call loads the other library with the real class definition. This is not a stopper for us, but kind of annoying. ""Typedef package"" includes and selection.xml:; https://acode-browser1.usatlas.bnl.gov/lxr/source/athena/Event/xAOD/xAODMissingET/xAODMissingET/; ""Class package"" includes:; https://acode-browser1.usatlas.bnl.gov/lxr/source/athena/Event/xAOD/xAODJet/xAODJet/. Cheers, Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12378:1059,load,loads,1059,https://root.cern,https://github.com/root-project/root/issues/12378,2,['load'],['loads']
Performance,"### Describe the bug; When importing a TTree in a RooDataSet, if a RooCategory is filled from a tree branch of type Short_t, incorrect values are silently loaded. The category is always the same (it seems that it picks the first label in alphabetical order). The same problem appears for other types, only Int_t and UChar_t seem to work correctly. ### Expected behavior; Either correctly load the data set or fail with an error. ### To Reproduce; ```; TTree* tree = new TTree(""test_tree"", ""Test tree"");; Short_t cat_in;; tree->Branch(""cat"", &cat_in);. cat_in = 2; //category B; tree->Fill();. RooCategory cat(""cat"", ""Category"",{; {""B_cat"", 2},; {""A_cat"", 3}; });; RooDataSet data(""data"", ""RooDataSet"", RooArgSet(cat), RooFit::Import(*tree));. data.table(cat)->Print(""v"");; ```; We should get an event in category cat_B but instead we get an event in category cat_A. ### Setup; Latest ROOT from git, master branch, commit 8d87e2bb6e6a; Linux. ### Additional context; It seems to come from [RooAbsCategory::attachToTree](https://github.com/root-project/root/blob/943706c005c6723500e00061872d6eff4967d262/roofit/roofitcore/src/RooAbsCategory.cxx#L454) where there should probably be an error message if the type of branch is neither Int_t or UChar_t.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10278:155,load,loaded,155,https://root.cern,https://github.com/root-project/root/issues/10278,2,['load'],"['load', 'loaded']"
Performance,"### Describe the bug; ```; root -l; root [0] ; *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f0659a6f337 in __GI___waitpid (pid=9428, stat_loc=stat_loc; entry=0x7ffe370ff9b8, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f06599da047 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f065a771a08 in TUnixSystem::Exec (this=0x55b1312be7c0, shellcmd=0x55b13202b340 ""/opt/root_bld/etc/gdb-backtrace.sh 9396 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2108; #3 0x00007f065a7722b9 in TUnixSystem::StackTrace (this=0x55b1312be7c0) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2399; #4 0x00007f065a775f5a in TUnixSystem::DispatchSignals (this=0x55b1312be7c0, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3619; #5 0x00007f065a76d70e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395; #6 0x00007f065a775e67 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3590; #7 0x00007f065a76642a in textinput::TerminalConfigUnix::HandleSignal (this=0x7f065ac559a0 <textinput::TerminalConfigUnix::Get()::s>, signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #8 0x00007f065a766146 in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=11) at /opt/root_src/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; #10 0x00007f065a0b8a4e in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_assign(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; #11 0x00007f065a0b8e19 in std::__cxx11::basic_string<char, std::char_traits<char>, std",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10180:507,optimiz,optimized,507,https://root.cern,https://github.com/root-project/root/issues/10180,1,['optimiz'],['optimized']
Performance,"### Describe the bug; ```; root [1] .rawInput; root [2] std::vector<short> getV() { return {42}; }; root [3] .rawInput; root [4] getV()[0].foo(); ```; and that last line shows an error, good! But now:; ```; root [5] getV()[0]; IncrementalExecutor::executeFunction: symbol '_ZSt8_DestroyIPssEvT_S1_RSaIT0_E' unresolved while linking [cling interface function]!; You are probably missing the definition of void std::_Destroy<short*, short>(short*, short*, std::allocator<short>&); Maybe you need to load the corresponding shared library?; ```. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7970:497,load,load,497,https://root.cern,https://github.com/root-project/root/issues/7970,1,['load'],['load']
Performance,### Describe the bug; concurrent call to methods like `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` can cause segmentation violation. Even with `ROOT::EnableImplicitMT()` Set. ### Expected behavior; ROOT::EnableImplicitMT() should make TDatabasePDG::GetParticle(...) thread safe without user taking locks. ### To Reproduce; Any program calling `TDatabasePDG::Instance()->GetParticle(xxx)->GetName()` at different thread. ### Setup; ```; ROOT Version: 6.26/06; Platform: Fedora 37 Beta; Compiler: g++ (GCC) 12.2.1 20220819 (Red Hat 12.2.1-2); ```. ### Additional context; https://root-forum.cern.ch/t/tdatabasepdg-is-not-thread-safe-while-creating-multiple-thread-only-instance-cause-log-spam/51957,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11580:22,concurren,concurrent,22,https://root.cern,https://github.com/root-project/root/issues/11580,1,['concurren'],['concurrent']
Performance,"### Description. In some type-punned fields, we make assumptions that the alignment is smaller than `alignof(std::max_align_t)`. ### Reproducer. This breaks in certain combinations of types, for example a `std::vector` of an over-aligned type:; ```c++; #include <ROOT/RNTupleModel.hxx>; #include <ROOT/RNTupleReader.hxx>; #include <ROOT/RNTupleWriter.hxx>. #include <sstream>; #include <vector>. struct alignas(64) CacheLine {; int i = 0;; };. void ntuple_aligned() {; auto model = ROOT::Experimental::RNTupleModel::Create();; using Vector = std::vector<CacheLine>;; model->MakeField<Vector>(""v"");. {; auto writeModel = model->Clone();; auto vPtr = writeModel->GetDefaultEntry().GetPtr<Vector>(""v"");; auto writer = ROOT::Experimental::RNTupleWriter::Recreate(std::move(writeModel), ""ntuple"", ""ntuple_aligned.root"");. vPtr->push_back({});; writer->Fill();; }. auto readModel = model->Clone();; auto vPtr = readModel->GetDefaultEntry().GetPtr<Vector>(""v"");; auto reader = ROOT::Experimental::RNTupleReader::Open(std::move(readModel), ""ntuple"", ""ntuple_aligned.root"");; reader->LoadEntry(0);. auto ptr = &vPtr->at(0);; auto uptr = reinterpret_cast<std::uintptr_t>(ptr);; // Do a small dance to prevent the compiler from optimizing the alignment check...; std::stringstream ss;; ss << uptr;; ss >> uptr;; std::cout << ptr << "" ("" << uptr << "") % 64 = "" << (uptr % 64) << std::endl;; }; ```; possible output:; ```; 0x48c9230 (76321328) % 64 = 48; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16757:415,Cache,CacheLine,415,https://root.cern,https://github.com/root-project/root/issues/16757,4,"['Cache', 'Load', 'optimiz']","['CacheLine', 'LoadEntry', 'optimizing']"
Performance,"### Existing issues; On the forums we didn't find any existing issues, errors, bug or Jira ticket related to this.; @rpezzi . ### Describe the bug; We are creating an object of the type: e.g. `std::array<std::array<std::vector<std::vector<Int_t>>, 4>, 4>`; Then, we fill it in a loop and ensure all elements of a size different than 0 and we write it in a root file using `WriteObjectAny`.; However, later we are loading this object using functionalities from ROOT `GetObjectChecked`, and we are getting elements with size 0. We use exactly the same function to print the zero elements if existing, at the creation and loading level. ### Expected behavior; We expect that when loading later this object we fully recover it without empty elements (without size 0). ### To Reproduce; 1. Open root in a terminal, compile the macro: `.L example.C`; 2. Create the object, fill it, and print the elements with size zero if exisiting: `finderBinner()`; 3. Loading the object and print the elements with size zero if exisiting: `loadFinderBinning()`. ### Setup; 1. ROOT 6.26/04 ; 2. macOSx64 Monterey version 12.6; 3. ROOT built from `aliBuild build O2 --defaults o2`, on Nov 09 2022, alibuild software used for the ALICE experiment @CERN with all dependencies . ### Code ; You can download the code `example.C` which reproduce the bug here at this cernbox link:; https://cernbox.cern.ch/s/fbiqsIdjVUqYISe",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11722:413,load,loading,413,https://root.cern,https://github.com/root-project/root/issues/11722,5,"['Load', 'load']","['Loading', 'loadFinderBinning', 'loading']"
Performance,"### Explain what you would like to see improved and how. I checked various compiler optimizations like Profile-Guided Optimization (PGO) on many projects - all the results are available at https://github.com/zamazan4ik/awesome-pgo . Since such optimizations help with optimizing CPU-intensive apps, I think it can be an interesting idea to optimize the Root project with PGO since the project cares a lot about performance. I can suggest the following ideas:. * Perform PGO benchmarks with some typical for the project workloads. If it shows improvements - add a note to the documentation about possible improvements in Root's performance with PGO. E.g. for Cling I already proposed evaluating PGO: https://github.com/root-project/cling/issues/508; * Perform testing Post-Link Optimization techniques (like [LLVM BOLT](https://github.com/llvm/llvm-project/blob/main/bolt/README.md)) would be interesting too (Clang and Rustc already use BOLT as an addition to PGO). However, I recommend starting with the usual PGO since it's a much more stable technology with fewer limitations. ### ROOT version. Latest. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778:84,optimiz,optimizations,84,https://root.cern,https://github.com/root-project/root/issues/15778,10,"['Optimiz', 'Perform', 'optimiz', 'perform']","['Optimization', 'Perform', 'optimizations', 'optimize', 'optimizing', 'performance']"
Performance,"### Explain what you would like to see improved and how. In https://github.com/root-project/root/pull/15376#issuecomment-2099245931, in the ubuntu20 CI build, we saw a timeout of the Queue test, seemingly at the first test (FIFOQueue.TaskOrder), giving the following output:. ```; 2535/2551 Test #265: gtest-roofit-multiprocess-test-test-RooFit-MultiProcess-Queue .....................................***Timeout 1500.10 sec; Running main() from /build/googletest-j5yxiC/googletest-1.10.0/googletest/src/gtest_main.cc; [==========] Running 5 tests from 3 test suites.; [----------] Global test environment set-up.; [----------] 1 test from FIFOQueue; [ RUN ] FIFOQueue.TaskOrder; ```. It's unclear what is causing this. It seems to be spurious. We should investigate what is going on and then fix it. ### ROOT version. Master + PR https://github.com/root-project/root/pull/15376. ### Installation method. build from source. ### Operating system. Ubuntu20. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15494:183,Queue,Queue,183,https://root.cern,https://github.com/root-project/root/issues/15494,2,['Queue'],['Queue']
Performance,"### Explain what you would like to see improved and how. The RDataFrame JIT logic makes use of a series of controlled memory leaks between different functions to ensure lifetime of objects that are needed by the JIT until that actually happens. This is an optimization but has certain fragilities, that were already analysed in a recent [bug report](https://github.com/root-project/root/issues/15399). The same topic surfaced in the past (see [this issue moved from JIRA](https://github.com/root-project/root/issues/15076)). And the fact we rely on leaking objects is subtly error-prone (see a recent [PR](https://github.com/root-project/root/pull/15477)). We should investigate how to implement a different way to handle the JIT machinery so that it does not require leaking objects. ### ROOT version. Any. ### Installation method. Any. ### Operating system. Any. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15520:256,optimiz,optimization,256,https://root.cern,https://github.com/root-project/root/issues/15520,1,['optimiz'],['optimization']
Performance,### Explain what you would like to see improved and how. We can speed up the builds significantly by using the github actions cache system. More can be read here: https://docs.github.com/en/actions/using-workflows/caching-dependencies-to-speed-up-workflows . Essentially we need a `actions/cache/restore@v3`. This is done in the clad CI here: https://github.com/vgvassilev/clad/blob/d2df9008e071f7f78d1606a040b21149ade66eea/.github/workflows/ci.yml#L637-L678. The idea is to cache the builds of ROOT up to cling and make a hash that will invalidate the cache only if something in cling is touched. In that case the system will regenerate the caches. We need to figure out if the 10GB storage is enough per project or we can store these things locally. For the Clad project it has been working flawlessly for ~1 year now. . ### ROOT version. N/A. ### Installation method. N/A. ### Operating system. N/A. ### Additional context. _No response_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987:126,cache,cache,126,https://root.cern,https://github.com/root-project/root/issues/14987,5,['cache'],"['cache', 'caches']"
Performance,"### Explain what you would like to see improved and how. i am looking at speeding up some code that uses TMatrixDSym widely (for large matrices whose size is not known at compile time). One primary bottleneck is code used to set or get elements in the matrix like. ```; TMatrixDSym d(100);; for ( int i=0; i< 100; i++) d(i,i)=i;; ```. which is limited by the virtual function calls needed for the checks. . https://github.com/root-project/root/blob/master/math/matrix/inc/TMatrixT.h#L255. In the case I was looking at, the code to fill the matrix was slower than the code to invert it due to this... The only workaround I find is to use GetMatrixArray() to get access to the underlying array and then hope that the internals don't change (while already ignoring fRowLwb and fColLwb being potentially non-zero. Using [] is kinda 2x worse as there are two layers of these sanity checks instead of just one. I see this workaround is already in widespread use in math/matrix classes.. Is there a better approach currently possible? If not, would it be possible to provide the equivalent of ; ```; d.GetMatrixArray()[i*100+i] = i;; ```; via some more readable/safer interface (useful at least for both TMatrixT and TVectorT)?. ### ROOT version. any recent. ### Installation method. build from source. ### Operating system. linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15285:198,bottleneck,bottleneck,198,https://root.cern,https://github.com/root-project/root/issues/15285,1,['bottleneck'],['bottleneck']
Performance,"### Explain what you would like to see improved. After https://github.com/root-project/root/pull/10366 was merged, there were some further ideas to fine tune the GitHub issue templates. I leave them here for the record. - [ ] Backtrace. (For example, when ROOT crashes and prints the stacktrace, there could be an option to forward it to a specific textarea in the YML template.); - [x] Should we add three backquotes before and after GetSetup() so that it is formatted as monospace when filling ROOT version?; - [ ] Name of the build machine. (I don't know how else to figure out whether it's one of our binaries, a package, or built by the user? Iirc that's not available right now? Actually not related to build method, so not too useful); - [ ] OS name; - [ ] ROOT-version prepopulated textarea contains also information that might fit better in other textarea. Should we split? or remove the dupe textarea?; - [x] Update on web full list of commands, add .gh issue, do as in update help message https://github.com/root-project/web/pull/776 https://github.com/root-project/web/pull/864; - [ ] Recommend also on ROOT manual these commands; - [ ] Maybe add similar instruction on main ROOT webpage as https://www.kicad.org/help/report-an-issue/; - [x] Mention in the Forum --> Done by Bertrand; - [ ] Add aliases (see below)? ++ update web/manual to reflect this. ### Share how it could be improved. _No response_. ### How to reproduce?. The way to submit a bug report without opening ROOT by hand would be:. ```; root -b -e '.gh bug' -q; root -b -e '.gh feature' -q; root -b -e '.gh improvement' -q; root -b -e '.forum bug' -q; ```. Not sure if it's worth to define an alias to these commands, in a similar fashion to rootbrowse, etc. For example:. ```; rootbug; rootfeature; rootimprovement; rootforum; ```. ### ROOT version; ```; ROOT v6.29/01; Built for linuxx8664gcc on Jun 20 2023, 17:02:12; From heads/ghissue@v6-23-01-RF-binSampling-8983-g6aec26bfaf; With g++ (Ubuntu 11.3.0-1ubuntu1~22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13062:153,tune,tune,153,https://root.cern,https://github.com/root-project/root/issues/13062,1,['tune'],['tune']
Performance,"### Explain what you would like to see improved. In CMSSW we want to have dictionaries defined explicitly for all classes that are part of I/O. Occasionally some things slip through causing (sometimes?) ROOT to try to auto parse the header of the corresponding class. Many times the auto parsing works (but is not desirable), in some cases it fails with an unhelpful error message (in most cases so far this has been in conjunction with CUDA, by rootcling being unable to write to the `cuda.pcm` that is in cvmfs). With auto parsing disabled, we'd be able to emit an error message pointing to the class whose dictionary is missing. I gave a try on `TInterpreter::SetClassAutoparsing(false)` in https://github.com/cms-sw/cmssw/pull/41344, and while in specific cases I got the desired behavior (of CMSSW framework emitting a descriptive error message for a missing dictionary instead of ROOT trying to auto-parse the corresponding header), the fact that the `SetClassAutoparsing()` is a global setting makes it difficult to disable the auto parsing in a useful way in the concurrent setup of CMSSW. There are a few cases (like open ROOT file, set up a string cut parser that uses ROOT reflection underneath) where the auto-parsing needs to be enabled, and these activities may be running concurrently to activities where I'd like to have the auto-parsing disabled. ### Share how it could be improved. Make the auto parsing setting more fine grained, e.g. explicitly in the relevant API calls or as a `thread_local`. Being able to query the value of the setting could be useful as well. ### How to reproduce?. A recipe to reproduce can be cooked up if necessary based on https://github.com/cms-sw/cmssw/pull/41344. ### ROOT version. 6.26. ### How did you install ROOT?. Part of CMSSW stack. ### Which operating system are you using?. Linux. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13035:1071,concurren,concurrent,1071,https://root.cern,https://github.com/root-project/root/issues/13035,2,['concurren'],"['concurrent', 'concurrently']"
Performance,"### Explain what you would like to see improved. Reading [Delphes](https://github.com/delphes/delphes) trees (which use TClonesArray) with RDF is a bit complicated (see below) due to the need to cast elements to their concrete type, or convert the TClonesArray to a type-aware container (for reference: first brought up in https://root-forum.cern.ch/t/reading-tclonesarray-in-jitted-rdf/45784, thanks to @eguiraud for explaining why my naive code did not work). ### Optional: share how it could be improved. The type information is stored, so an automatic conversion could be done. ### To Reproduce. ```python; import ROOT as gbl; gbl.gSystem.Load(""/afs/cern.ch/user/p/piedavid/public/delphes_bamboo/DelphesIO/libDelphesIO.so""); gbl.Electron; f = gbl.TFile.Open(""/afs/cern.ch/user/a/atalierc/public/snowmass/delphes_lhe_file_47_14TeV.lhe.root""); tree = f.Get(""Delphes""); df = gbl.ROOT.RDataFrame(tree); df.Define(""leadElPT"", ""Electron[0]->PT""); ```; where the last statement needs this to work (the typedef to distinguish the column and type name):; ```python; gbl.gInterpreter.Declare(""using delphes_electron = Electron;""); df.Define(""leadElPT1"", ""static_cast<delphes_electron*>(Electron[0])->PT""); ```; but for integration in an analysis framework, converting the container is more convenient. What I came up with is this:; ```C++; #include <TObjArray.h>; #include <ROOT/RVec.hxx>. namespace rdfhelpers {; template<typename OBJ>; ROOT::VecOps::RVec<OBJ*> objArrayToRVec(const TObjArray& arr) {; ROOT::VecOps::RVec<OBJ*> out{reinterpret_cast<OBJ**>(arr.GetObjectRef()), static_cast<std::size_t>(arr.GetEntries())};; auto it = *dynamic_cast<TObjArrayIter*>(arr.MakeIterator());; std::size_t i = 0;; while ( ( i != out.size() ) && ( out[i] == *it ) ) {; it.Next();; ++i;; }; if ( i != out.size() ) { // not equal to contiguous array, copy pointers; it.Reset();; const auto n = out.size();; out = ROOT::VecOps::RVec<OBJ*>();; out.reserve(n);; do {; out.push_back(static_cast<OBJ*>(*it));; } while ( it.N",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8644:643,Load,Load,643,https://root.cern,https://github.com/root-project/root/issues/8644,1,['Load'],['Load']
Performance,"### Explain what you would like to see improved; <!-- ; Explain what isn't as good as it could be and why; --> ; In RooMCStudy, the parameter of interest should also be fitted with Gaussian in addition to its pull distribution. This is important to perform the linearity test.; ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; --> The details problem and solution are explained in, https://root-forum.cern.ch/t/why-the-fitgauss-true-doesnt-work-for-plotparam-in-roomcstudy/53706. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code: build it / `root myMacro.C` / ...; -->. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12387:249,perform,perform,249,https://root.cern,https://github.com/root-project/root/issues/12387,1,['perform'],['perform']
Performance,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. Currently we have a small paragraph titled ""Reading and manipulating collections"", but given users' feedback, we can do better in advertising and explaining how to deal with collections in RDF. ### Optional: share how it could be improved; <!--; If you already have an idea what we could improve, then please tell us.; -->. We should expand that paragraph and move it out of ""More features"" into its own section. Examples should show how to perform object selection with RVecs, and link to tutorials and other resources.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7086:552,perform,perform,552,https://root.cern,https://github.com/root-project/root/issues/7086,1,['perform'],['perform']
Performance,"### Explain what you would like to see improved; <!--; Explain what isn't as good as it could be and why; -->. During [PPP97](https://indico.cern.ch/event/1018696/) Josh brought up that xrootd checks the environment variable `XRD_PARALLELEVTLOOP` to decide how many event loops to spawn, and his multi-thread use-case benefited from setting it to a value higher than one. It was agreed that we should investigate whether this is something interesting for RDF/DistRDF or other multi-thread use cases in ROOT. . ### Additional context; <!--; Add any other context about the problem here.; -->. The variable is mentioned in the `xrdcp` man page, see e.g. [here](https://www.mankier.com/1/xrdcp).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7709:296,multi-thread,multi-thread,296,https://root.cern,https://github.com/root-project/root/issues/7709,2,['multi-thread'],['multi-thread']
Performance,"### Explain what you would like to see improved; As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved; In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:; ```; BUILD_DOCS [OFF]; BUILD_DOCS_CORE [ON]; BUILD_DOCS_GRAF2D [OFF]; BUILD_DOCS_QHP [OFF]; ...; ```; with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:; https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```; set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile); set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile); configure_file(${doxyfile_in} ${doxyfile} @ONLY); add_custom_command(; OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; DEPENDS ${doxyfile} ${HEADER_FILES}; WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}; COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -; COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp; COMMENT ""Generating API documentation with Doxygen""; VERBATIM); ```. ### To Reproduce; https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup; ```; ---------------------",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8950:406,tune,tune,406,https://root.cern,https://github.com/root-project/root/issues/8950,1,['tune'],['tune']
Performance,"### Explain what you would like to see improved; As per the [v1 binary format specification](https://github.com/root-project/root/blob/master/tree/ntuple/v7/doc/specifications.md#locators-and-envelope-links), the `RNTupleLocator` structure may have information for either: _(i)_ referencing on-disk data, _(ii)_ URI string, or _(iii) any other type-dependent data - see note [1]. In principle, that information should be stored as a `std::variant<...>`, and (de-)serialization routines updated. . [1] Object storage, e.g. Intel DAOS, deliver higher throughput for larger block sizes. In order to transfer larger blocks, a number of pages can be concatenated to be stored under the same key.; Therefore, such storage backends may need, besides a 64-bit object-ID, extra members that encode that the page is part of a larger block.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11758:549,throughput,throughput,549,https://root.cern,https://github.com/root-project/root/issues/11758,1,['throughput'],['throughput']
Performance,"### Explain what you would like to see improved; Cluster and page sizes are currently hardcoded in RNTuple as a `constexpr`. We should allow the user to tune these parameters., possibly via the `RNTupleWriteOptions` class. Allowing these parameters to be adjusted would allow backend-specific tuning. ### Optional: share how it could be improved; We plan to expose these parameters via the `RNTupleWriteOptions` class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7853:153,tune,tune,153,https://root.cern,https://github.com/root-project/root/issues/7853,1,['tune'],['tune']
Performance,"### Explain what you would like to see improved; Hi all,; It takes long time for loading rootlogon.C about(20s); I've test for the reason; It seems I've a line; ```; gROOT->ProcessLine(""#include <ROOT_cx.hh>"");; ```; [ROOT_cx.hh.zip](https://github.com/root-project/root/files/5453842/ROOT_cx.hh.zip); I include all of the header file I've used in this header; I cannot find a faster way doing this. ### Optional: share how it could be improved. precompile rootlogon.C; or other ways. . ### Setup. 1. ROOT version 6.22.02; 2. Operating system Mac OS X 10.15 lastest; 3. How you obtained ROOT, from homebrew. ### Additional context. see https://root-forum.cern.ch/t/groot-processline-include-slower-than-before/42031",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6719:81,load,loading,81,https://root.cern,https://github.com/root-project/root/issues/6719,1,['load'],['loading']
Performance,"### Explain what you would like to see improved; Installing a user-side cppyy (no virtualenv) breaks the python based ROOT tools.; So, i would like to be possible to have a user installed cppyy without this having an impact on ROOT installation. ### Optional: share how it could be improved; i was wondering if, given the special local only usage of a private/local version of cppyy, if this could be encapsulated somehow, so ROOT would use only it’s own version in such a way that is does not see any other cppyy version (even if discovered), and also the private cppyy modules are put in a place that would not be seen by anything outside ROOT as it’s not usable anyway:; ```; [Thursday 06.04.23 21:38 adrian@hal] ~ $; python3; Python 3.11.2 (main, Feb 8 2023, 00:00:00) [GCC 12.2.1 20221121 (Red Hat 12.2.1-4)] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import cppyy; /usr/lib64/python3.11/site-packages/cppyy_backend/loader.py:90: UserWarning: No precompiled header available (/usr/lib64/python3.11/site-packages/cppyy_backend/etc not writable); this may impact performance.; warnings.warn('No precompiled header available (%s); this may impact performance.' % msg); /usr/lib64/python3.11/site-packages/cppyy/__init__.py:266: UserWarning: CPyCppyy API path not found (tried: /usr/include); set CPPYY_API_PATH to fix; warnings.warn(""CPyCppyy API path not found (tried: %s); set CPPYY_API_PATH to fix"" % os.path.dirname(cpycppyy_path)); ```. ### To Reproduce; ```; rootls; usage: rootls [-h] [-1] [-l] [-t] FILE [FILE ...]; rootls: error: the following arguments are required: FILE. pip3 install --user cppyy. rootls; Traceback (most recent call last):; File ""/usr/bin/rootls"", line 12, in <module>; import cmdLineUtils; File ""/usr/share/root/cli/cmdLineUtils.py"", line 81, in <module>; import ROOT; File ""/usr/lib64/python3.11/site-packages/ROOT/__init__.py"", line 25, in <module>; cppyy.gbl.gROOT.SetBatch(False); ^^^^^^^^^^^^^^^^^^^^^^^^; AttributeError",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12635:964,load,loader,964,https://root.cern,https://github.com/root-project/root/issues/12635,1,['load'],['loader']
Performance,"### Explain what you would like to see improved; Mathjax2 is used by documentation. ### Optional: share how it could be improved; Mathjax3 brings some performance improvements. Maybe it can be even downloaded on the fly, rather than storing it as part of the ROOT source code?. ### To Reproduce; https://root.cern.ch/doc/master/. ### Setup; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2022, 10:17:19 |; | From heads/master@v6-25-01-2870-gdac9b6398d |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. ### Additional context; https://github.com/doxygen/doxygen/issues/9185#issuecomment-1059971803",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10067:151,perform,performance,151,https://root.cern,https://github.com/root-project/root/issues/10067,1,['perform'],['performance']
Performance,"### Explain what you would like to see improved; My students and myself often encounter the following situation. We are trying to make a fit of a histogram to a Gaussian. This works well and ROOT finds perfectly all parameters without having to set them initially by hand. ![image](https://user-images.githubusercontent.com/10653970/180315415-84720a1c-e52c-4d32-a7ab-bc86b319967c.png). ```; FCN=220.83 FROM MIGRAD STATUS=CONVERGED 70 CALLS 71 TOTAL; EDM=6.98482e-10 STRATEGY= 1 ERROR MATRIX ACCURATE ; EXT PARAMETER STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 Constant 3.92175e+02 4.99591e+00 2.81307e-02 6.15584e-06; 2 Mean 9.95290e-03 1.03175e-02 7.50080e-05 1.55399e-03; 3 Sigma 1.04566e+00 8.42889e-03 1.42471e-05 1.69822e-02; ```. Now, we decide it would be best to fine-tune the fit by also adding a pol0 constant. Thus we click on Add radio-button, pol0. (Results in gaus(0)+pol0(3)). Then, you click on Fit, and the fit completely fails. ![image](https://user-images.githubusercontent.com/10653970/180315692-d3b3f3de-e08d-49d7-9bbe-ddc01231bc00.png). ```; FCN=9324.48 FROM HESSE STATUS=FAILED 11 CALLS 179 TOTAL; EDM=3.13749e-15 STRATEGY= 1 ERROR MATRIX UNCERTAINTY 100.0 per cent; EXT PARAMETER APPROXIMATE STEP FIRST ; NO. NAME VALUE ERROR SIZE DERIVATIVE ; 1 p0 -2.89841e+05 4.24264e-01 -0.00000e+00 0.00000e+00; 2 p1 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 3 p2 0.00000e+00 1.41421e+00 -0.00000e+00 0.00000e+00; 4 p3 1.17552e+01 3.42858e-01 1.17552e+01 1.63372e-07; ```; So the manual workaround is to set by hand all the initial parameters of the first fit, so that it finally converges. ### Optional: share how it could be improved; After 'adding' a pol0, it would be nice that the initial values of the Gaussian parameters are not reset to zero, but are rescued from the previous fit where only the Gaussian was used. This is the parameter window just before adding pol0:. ![image](https://user-images.githubusercontent.com/10653970/180316740-e5f902e7-fde7-4404-893d",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11021:786,tune,tune,786,https://root.cern,https://github.com/root-project/root/issues/11021,1,['tune'],['tune']
Performance,"### Explain what you would like to see improved; Performance counters (e.g., total bytes written, wall clock spent writing, etc.) should be added to the `RPageSinkFile` and `RPageSinkDaos` classes. The bare minimum should allow to compute the write throughput. ### Optional: share how it could be improved; In particular, four new `RCounter`s will be added: szWritePayload, timeWallWrite, timeWallZip, timeCpuWrite, timeCpuZip.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8283:49,Perform,Performance,49,https://root.cern,https://github.com/root-project/root/issues/8283,2,"['Perform', 'throughput']","['Performance', 'throughput']"
Performance,"### Explain what you would like to see improved; Some performance counters are expected to be common among different; subclasses of `RPage{Sink,Source}`. These should be handled by the base; class instead.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8360:54,perform,performance,54,https://root.cern,https://github.com/root-project/root/issues/8360,1,['perform'],['performance']
Performance,"### Explain what you would like to see improved; The TGCommandPlugin has an internal TTimer that I think is redundant. I don't understand why the function CheckRemote needs to be checked every one second, which also calls frame->Layout(). Shouldn't it be better to just check in the beginning with a TTimer::SingleShot? Or if gROOT->GetApplication() changes during lifetime, with a signal/slot ?. ```; fTimer = new TTimer(this, 1000);; fTimer->Reset();; fTimer->TurnOn();; ...; ////////////////////////////////////////////////////////////////////////////////; /// Handle timer event. Bool_t TGCommandPlugin::HandleTimer(TTimer *t); {; if ((fTimer == 0) || (t != fTimer)) return kTRUE;; CheckRemote("""");; return kTRUE;; }; void TGCommandPlugin::CheckRemote(const char * /*str*/); {; Pixel_t pxl;; TApplication *app = gROOT->GetApplication();; if (!app->InheritsFrom(""TRint"")); return;; TString sPrompt = ((TRint*)app)->GetPrompt();; Int_t end = sPrompt.Index("":root ["", 0);; if (end > 0 && end != kNPOS) {; // remote session; sPrompt.Remove(end);; gClient->GetColorByName(""#ff0000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(Form(""Command (%s):"", sPrompt.Data()));; }; else {; // local session; gClient->GetColorByName(""#000000"", pxl);; fLabel->SetTextColor(pxl);; fLabel->SetText(""Command (local):"");; }; fHf->Layout();; }; ```; Alternatively, it would be nice to provide a function to stop the timer by the user, when performance is needed and you are sure that TApplication is always the same. ### Setup; 1. ROOT from git master; 2. Ubuntu 20; 3. Self-built. ### Additional context; https://root-forum.cern.ch/t/trentrantrwlock-thread-lock-program-freezes/45116",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8269:1428,perform,performance,1428,https://root.cern,https://github.com/root-project/root/issues/8269,1,['perform'],['performance']
Performance,"### Explain what you would like to see improved; The current Jenkins build matrix doesn't have any builds with `RooFit::MultiProcess` activated currently. PRs that touch anything related to this may silently break things, because it is too easy to forget to manually pass the build flags to the Jenkins bot to activate it. ### Optional: share how it could be improved; Ideally, all builds, except the Windows one, would build with `RooFit::MultiProcess`. To do this, currently, the easiest option is to add `-Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON` to the build matrix (except the Windows build, because `MultiProcess` is not supported on Windows). A more minimalistic alternative would be to add the build flags to the `ROOT-performance-centos8-multicore/default` build only. ### Additional context; Note that the builtin options are necessary to avoid having to install ZeroMQ on the CI system as a dependency while still having `fail-on-missing` activated as well, as is currently the case.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9430:751,perform,performance-,751,https://root.cern,https://github.com/root-project/root/issues/9430,1,['perform'],['performance-']
Performance,"### Explain what you would like to see improved; `-O1` for cling spends considerable time in stressGraphics:. test | opt | non-opt; -----|-----|--------; stressGraphics.cxx | 57.68 | 16.13. We need to; - verify that it's the optimizer taking so long; - find out which pass is causing it; - consider disabling that pass by default, or reproducing and discussing with upstream what we can do. See also https://github.com/root-project/root/pull/9301",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312:225,optimiz,optimizer,225,https://root.cern,https://github.com/root-project/root/issues/9312,1,['optimiz'],['optimizer']
Performance,"### Explain what you would like to see improved; ```; 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6; 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6; 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6; 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6; 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule; 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule; 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule; 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction; 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction; 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop; 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII; 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter; 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter; 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter; 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo; 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory; 16 0x00007ffff6b0e33e in TListOfDataMembers::Load; 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers; 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers; 19 0x00007ffff6ae3dd1 in TClass::GetDataMember; 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule; 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",; 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent; 23 0x00007ffff6adec40 in TClass::ReadRules; 24 0x00007fffecd0b3a0 in TCling::Initialize; ```. ### Optional: share how it could be improved. As discussed in root-project/root#7398, we should remove the `TClingMemberIter` iteration from the initialization phase as it causes a lot of deserialization resulting in redundant memory usage.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7724:1148,Load,Load,1148,https://root.cern,https://github.com/root-project/root/issues/7724,1,['Load'],['Load']
Performance,"### Explain what you would like to see improved; root executable emits a lot of non-requested output which:; 1. force the users to do workarounds just to make root print only what was instructed by user to do; 2. makes it harder to be used as interpreter (to be used in shebang). ### Optional: share how it could be improved; there should be NO output if it was not requested ... ; moreover, IMHO, it's kind of silly that there is a need for `root` and `root.exe`; and users that need to remove annoyances need to `alias root='root.exe -l'`; so, i would say, that all differences between non exe and exe should be removed and hidden under a flag; and all banners or any other text should be by default disabled (so `-l` in fact should enable the banner if requested); for compatibility the .exe files should be replaced with symlinks to the actual main executables. ### To Reproduce; just use it. ### Setup; any root version. ### Additional context; so, my argument is that, given the _interpreter_ profile of the root executable (the fact that it can execute a human text input make is an interpreter in the usage sense), there should be no actions performed that were not instructed by the user/developer; if so, there is a breach of contract like: `i told you to print a new line and this information and i got another newline and some other text beside what i wanted`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8446:1150,perform,performed,1150,https://root.cern,https://github.com/root-project/root/issues/8446,1,['perform'],['performed']
Performance,"### Feature description. As discussed in CHEP24, it would be useful to support Caching (e.g.; RDF.Cache) of a limited number of variables with the other variables; being still available in a lazy way. Example usage; ```; #suppose rdf has columns Jet_pt, Jet_eta; rdf=rdf.Define(""Jet_regressedPt"", ""slowRegression(Jet_pt)""); rdf=rdf.Cache([""Jet_regressedPt""]); rdf=rdf.Define(""Jet_discriminator"",""computeDiscriminator(Jet_regressedPt,; Jet_eta""); rdf=rdf.TH1F(""Jet_discriminator""); ```. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16741:98,Cache,Cache,98,https://root.cern,https://github.com/root-project/root/issues/16741,2,['Cache'],['Cache']
Performance,"### Feature description. Currently, ROOT loads fonts via the `Root.TTFontPath`. This makes a lot of sense from a ROOT maintainer perspective (simply ship all used fonts), but is a roadblock for a distribution maintainer (embedded files are usually not wished if not otherwise possible). Thus, it would be nice if ROOT would _additionally_ support [fontconfig](https://www.freedesktop.org/wiki/Software/fontconfig/), which is the default way to find fonts on Linux. In particular, the font interface should first look into `Root.TTFontPath` and then fallback to fontconfig. This means that the font-finding interface needs two parameters: the font file name and a fontconfig name as fallback. The current font interface is a bit all over the place. There is at least `graf2d/graf/src/TTF.cxx`, `graf3d/gl/src/TGLFontManager.cxx` and `graf3d/gl/src/TGLText.cxx` that handle font names, probably more. Fedora uses [this patch](https://src.fedoraproject.org/rpms/root/blob/rawhide/f/root-fontconfig.patch) from @ellert to get rid of the non-free MS fonts (see also https://github.com/root-project/root/issues/8357), which is a good start but the patch is not really feasible upstream due to Windows/OSX support. /cc @Axel-Naumann @dpiparo. ### Alternatives considered. _No response_. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16229:41,load,loads,41,https://root.cern,https://github.com/root-project/root/issues/16229,1,['load'],['loads']
Performance,"### Is your feature request related to a problem? Please describe. RooFit compute libraries are loaded at runtime, picking the best instruction set available. Some of our users (LHCb, for instance), need to pin down the specific library to be loaded, to make sure their results are specifically the same as the ones they validated. We need to; - [ ] have a mechanism for this; - [ ] expose the mechanism, for instance through documentation / release notes; - [ ] ensure that LHCb gets that flag enabled. This *must* happen by v6.24 for this release to be usable by LHCb. ### Describe the solution you'd like. Environment variable: `export ROOT_ARCH=avx2` etc. ### Describe alternatives you've considered. Preventing all LCG builds from using optimal libraries seems like overkill, so this should not be a cmake flag. ### Additional context. Calling in @pikacic to share additional constraints / comments / ideas!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7361:96,load,loaded,96,https://root.cern,https://github.com/root-project/root/issues/7361,2,['load'],['loaded']
Performance,"### Is your feature request related to a problem? Please describe.; In cling cmd prompt, `.x`, `.X` meta commands loads a `.C` script then invoke a function with the same name as the script file (stripped extension).; Every time the filename changes the entry function name needs to be changed too. This is not user friendly, or even error prone. P.S. In `interpreter/cling/lib/MetaProcessor/MetaSema.cpp` , there is a comment about plan to enabling using `__main__` as a filename independent entry function name. However identifier with two underscores is reserved by c++ standard (https://en.cppreference.com/w/cpp/language/identifiers). ### Describe the solution you'd like; A filename independent entry function like `clingmain`, `clingstart`, `clingrun`, `cling_on_load`, `cling_on_x`... etc.; Or function attribute like `[[cling::on_load]] int any_func_name(char c, int a) {...}` to let cling call `any_func_name` on meta cmd `.x`.; A `[[cling::on_unload]]` can be useful too, though not directly related to this feature request.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11299:114,load,loads,114,https://root.cern,https://github.com/root-project/root/issues/11299,1,['load'],['loads']
Performance,"### Is your feature request related to a problem? Please describe.; Instances of `RDataFrame` objects are meant to be treated like trees. Therefore there should be a function that allows us to merge them. Without this, we would do things like:. ```python; #-----------------------------------------; def get_tree(filepath, index):; df= ROOT.RDataFrame('tree', filepath); df= df.Define('identity', index); df.Snapshot('tree', '/tmp/{}.root'.format(index)). ifile = ROOT.TFile('/tmp/{}.root'.format(suf)); itree = ifile.tree. return (ifile, itree); #-----------------------------------------; def merge(filepath_1, filepath_2):; if_1, itree_1 = get_tree(file_path_1, '1'); if_2, itree_2 = get_tree(file_path_2, '2'). ofile = ROOT.TFile('file.root', 'recreate'); l_tree = ROOT.TList(); l_tree.Add(itree_1); l_tree.Add(itree_2). otree = ROOT.TTree.MergeTrees(l_tree); otree.Write(); ofile.Close(); ```. which requires opening each file and saving them. Then loading them again and merging, then saving again, this is all wasteful and time consuming. ### Describe the solution you'd like. ```python; df_1=ROOT.RDataFrame('tree', file_path_1); df_2=ROOT.RDataFrame('tree', file_path_2). df_1=df_1.Define('identity', '+1'); df_2=df_2.Define('identity', '+2'). df_3 = df_1.Merge(df_2); df_3.Snapshot('tree', 'file.root'); ```. ### Describe alternatives you've considered. I am currently using the `get_trees` and `merge` functions I wrote, but it's far from ideal, it takes ages to finish. ### Additional context; <!--; Add any other context or screenshots about the feature requested here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9030:954,load,loading,954,https://root.cern,https://github.com/root-project/root/issues/9030,1,['load'],['loading']
Performance,"### Is your feature request related to a problem? Please describe.; Not a problem but a usage of XRootD feature that is not used by TFile::Open. ### Describe the solution you'd like; It would be useful that .meta4 files in `TFile::Open(""whatever_name.meta4"")`; to be passed for processing to TNetXNGFile (XRootD). ### Describe alternatives you've considered; There are no alternatives, TFile::Open (TNetXNGFile::Open) does not know to pass; to XrdCl the meta file for processing. ### Additional context; XRootD (XrdCl) know to use a meta file (`.meta4`) which is a virtual redirector. This allows not only fallback through a list a replicas to the same file but (at least for xrdcp) concurrent access (with `-y | --sources <n> `). There would be 2 problems to be solved:; 1. Add a signature to TNetXNGFile to allow to process a call like `TNetXNGFile::Open(""whatever_name.meta4"")`; 2. Tell TFile to redirect an access to a `.meta4` file to TNetXNGFile. For reference, just in case the file type is identified by content (but from what i seen in TFile::GetType this is not the case) a meta4 file is an xml with the signature like:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <metalink xmlns=""urn:ietf:params:xml:ns:metalink"">. ... </metalink>; ```. I tried something on my own but i got entangled on my lack of knowledge of TFile mechanics, so i though to ask expert help here, maybe the solution is fast and simple (in expert eyes).; Adding here @simonmichal in case there are questions on XrdCl feature.; Thanks a lot!",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11653:683,concurren,concurrent,683,https://root.cern,https://github.com/root-project/root/issues/11653,1,['concurren'],['concurrent']
Performance,"### Version; ROOT version: 6.18/04; OS: Linux, SLC7; How you obtained ROOT: conda install; ### Describe the bug. When using pyROOT (might not necessarily be due to using pyROOT) with '-h' or '--help' in sys.argv, if a ROOT method is called, a root CLI help message will be wrongly printed out. In a lot of cases when designing a python package that uses ROOT with CLI support, this bug will make the CLI print out the root help instead of the intended help message from the python package. ### To reproduce the issue (e.g. using python interpreter):; ```; import sys; sys.argv.append('-h'); import ROOT; ROOT.Double(); ```; This will print out the following message:. """"""; usage: root [-b B] [-x X] [-e E] [-n N] [-t T] [-q Q] [-l L] [-config CONFIG]; [-memstat MEMSTAT] [-h HELP] [--version VERSION]; [--notebook NOTEBOOK] [--web WEB] [--web=<browser> WEB=<BROWSER>]; [dir] [file:data.root] [file1.C...fileN.C]. OPTIONS:; -b Run in batch mode without graphics; -x Exit on exceptions; -e Execute the command passed between single quotes; -n Do not execute logon and logoff macros as specified in .rootrc; -t Enable thread-safety and implicit multi-threading (IMT); -q Exit after processing command line macro files; -l Do not show splash screen; -config print ./configure options; -memstat run with memory usage monitoring; -h, -?, --help Show summary of options; --version Show the ROOT version; --notebook Execute ROOT notebook; --web Display graphics in a default web browser; --web=<browser> Display graphics in specified web browser; [dir] if dir is a valid directory cd to it before executing; [file:data.root] Open the ROOT file data.root; [file1.C...fileN.C] Execute the the ROOT macro file1.C ... fileN.C; """"""; And the program will terminate. ### Expected behaviour. No root CLI help message should be printed out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7161:1142,multi-thread,multi-threading,1142,https://root.cern,https://github.com/root-project/root/issues/7161,1,['multi-thread'],['multi-threading']
Performance,"#0 0x00007ffff7193cd6 in pthread_rwlock_rdlock () at /lib64/libpthread.so.0; #1 0x00007fffdc20be7f in XrdCl::Env::GetInt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&) (); at /lib64/libXrdCl.so.3; #2 0x00007fffdc2242a6 in XrdCl::PostMaster::PostMaster() () at /lib64/libXrdCl.so.3; #3 0x00007fffdc20f3d0 in XrdCl::DefaultEnv::GetPostMaster() () at /lib64/libXrdCl.so.3; #4 0x00007fffdc2749dd in XrdCl::FileStateHandler::~FileStateHandler() () at /lib64/libXrdCl.so.3; #5 0x00007fffdc26bdd2 in XrdCl::File::~File() () at /lib64/libXrdCl.so.3; #6 0x00007fffdc26be6d in XrdCl::File::~File() () at /lib64/libXrdCl.so.3; #7 0x00007fffdc857186 in TNetXNGFile::~TNetXNGFile() (this=0x55555ac21690, __in_chrg=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/net/netxng/src/TNetXNGFile.cxx:233; #8 0x00007fffdc8572b9 in TNetXNGFile::~TNetXNGFile() (this=0x55555ac21690, __in_chrg=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/net/netxng/src/TNetXNGFile.cxx:229; #9 0x00007ffff58222c8 in TList::Delete(char const*) (this=0x555555825ce0, option=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/core/cont/src/TList.cxx:508; #10 0x00007ffff576fcb0 in TROOT::~TROOT() (this=0x7ffff5c0c220 <ROOT::Internal::GetROOT1()::alloc>, __in_chrg=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/core/base/src/TROOT.cxx:889; #11 0x00007ffff6671b0c in __run_exit_handlers () at /lib64/libc.so.6; #12 0x00007ffff6671c40 in on_exit () at /lib64/libc.so.6; #13 0x00007ffff665b49a in __libc_start_main () at /lib64/libc.so.6; #14 0x0000555555554d1e in _start (); ```. I see `TNetXNGFile::Close(const char*)` being called (if that's what you were referring to @osschar ) by; ```; #0 0x00007fffdc856bb0 in TNetXNGFile::Close(char const*) (",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-891862419:1366,optimiz,optimized,1366,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-891862419,2,"['optimiz', 'perform']","['optimized', 'performance-']"
Performance,"#12 0x00007ffff705586d in TUnixSystem::DispatchOneEvent(bool) () from /opt/root/lib/libCore.so; #13 0x00007ffff6f6bf51 in TSystem::Run() () from /opt/root/lib/libCore.so; #14 0x00007ffff6f01a72 in TApplication::Run(bool) () from /opt/root/lib/libCore.so; #15 0x000055555555d755 in main (argc=3, argv=0x7fffffffded8) at /home/user/Desktop/zdt/gui/main.cxx:112; (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex; No symbol ""ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>"" in current context.; ```. And here in Debug mode:. ```; Thread 1 ""runGUI"" received signal SIGINT, Interrupt.; 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; 88	../sysdeps/unix/sysv/linux/futex-internal.h: No such file or directory.; (gdb) info threads; Id Target Id Frame ; * 1 Thread 0x7ffff7f8fb80 (LWP 23653) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x5555562dea58) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; 2 Thread 0x7fffa2a96700 (LWP 23702) ""runGUI"" 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; (gdb) thread apply all bt. Thread 2 (Thread 0x7fffa2a96700 (LWP 23702)):; #0 0x00007ffff693bad3 in futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x55555747c2c8) at ../sysdeps/unix/sysv/linux/futex-internal.h:88; #1 __pthread_cond_wait_common (abstime=0x0, mutex=0x55555747c350, cond=0x55555747c2a0) at pthread_cond_wait.c:502; #2 __pthread_cond_wait (cond=0x55555747c2a0, mutex=0x55555747c350) at pthread_cond_wait.c:655; #3 0x00007ffff4fd7227 in TPosixCondition::Wait (this=0x55555747c290) at /opt/root_src/core/thread/src/TPosixCondition.cxx:65; #4 0x00007ffff4fd4ec6 in TThread::XARequest (xact=0x7ffff4fe1260 ""PRTF"", n",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:4244,optimiz,optimized,4244,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['optimiz'],['optimized']
Performance,"#31 0x00007f2a5058c5ff in HandleInterpreterException (metaProcessor=metaProcessor; 2187: entry=0x60700007bb60, input_line=0x7f2a6338f0de "".L /home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", compRes=; 2187: 0x7f2a5e5cef40: cling::Interpreter::kSuccess, result=result; 2187: entry=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:2455; 2187: #32 0x00007f2a50595b52 in TCling::Load (this=<optimized out>, filename=<optimized out>, system=<optimized out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x617000000080, module=<optimized out>, entry=<optimized out>, system=false) at /home/jhahnfel/ROOT/src/core/base/src/TSystem.cxx:1945; 2187: #34 0x00007f2a47737140 in execInitOrder () at /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx:108; 2187: #35 0x00007f2a492f4029 in ?? (); 2187: #36 0x00007f2a5e77a0c0 in ?? (); 2187: #37 0x0000614000001840 in ?? (); 2187: #38 0x00007ffc0cd42e10 in ?? (); 2187: #39 0x00007f2a50a1db2e in cling::IncrementalExecutor::executeWrapper (this=<optimized out>, function=..., returnValue=0x7f2a5e77a0c0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:288; 2187: ===========================================================; 2187:; 2187:; 2187: The lines below might hint at the cause of the crash. If you see question; 2187: marks as part of the stack trace, try to recompile with debugging information; 2187: enabled and export CLING_DEBUG=1 environment variable before running.; 2187: You may get help by asking at the ROOT forum https://root.cern/forum; 2187: Only if you are really convinced it is a bug in ROOT then please submit a; 2187: report at https://root.cern/bugs Please post the ENTIRE stack trace; 2187: from above as an attachment in addition to anything else; 2187: that might help us fixing this issue.; 2187: ===========================================================; 2187: #5 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:6861,optimiz,optimized,6861,https://root.cern,https://github.com/root-project/root/issues/11867,1,['optimiz'],['optimized']
Performance,"#41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:7556,optimiz,optimized,7556,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"#48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:8862,optimiz,optimized,8862,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"#55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:10168,optimiz,optimized,10168,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"#62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:11474,optimiz,optimized,11474,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"#69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:12780,optimiz,optimized,12780,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"#76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:14086,optimiz,optimized,14086,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"#83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/cal",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:15392,optimiz,optimized,15392,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"#9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354; #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354; #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470; #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400; #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163; #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68; #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243; #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205; #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502; #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:7373; #19 0x00007f770e621ec7 in TPair::CheckTObjectHashConsistency (this=0x354b3b0) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/inc/TMap.h:124; #20 0x00007f770e619785 in TObject::CheckedHa",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13691:1721,optimiz,optimized,1721,https://root.cern,https://github.com/root-project/root/issues/13691,1,['optimiz'],['optimized']
Performance,"#90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #98 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:16698,optimiz,optimized,16698,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:6458,Load,Loading,6458,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:9787,Load,Loading,9787,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:5087,Load,Loading,5087,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=0DVPYYS02Z%2FWDinl5epoHThDnGOb4UCelc0w7lDZwVc%3D&reserved=0>,O=Grid,C=CA; >>> * 	start date: Apr 08 16:29:03 2021 GMT; >>> * 	expire date: May 08 16:29:03 2022 GMT; >>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>> * Peer's Certificate issuer is not recognized.; >>> * Closing connection 0; >>> curl: (60) Peer's Certificate issuer is not recognized.; >>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Cdqing%40triumf.ca%7C96f8066e53054f808afe08d9156b7b02%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564373643147501%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=NTi7%2BFO82QY6dKBp1en9fAODpFl%2FzZ0cHCZ3DsJzOIM%3D&reserved=0>; >>> ; >>> curl performs SSL certificate verification by default, using a ""bundle""; >>> of Certificate Authority (CA) public keys (CA certs). If the default; >>> bundle file isn't adequate, you can specify an alternate file; >>> using the --cacert option.; >>> If this HTTPS server uses a certificate signed by a CA represented in; >>> the bundle, the certificate verification probably failed due to a; >>> problem with the certificate (it might be expired, or the name might; >>> not match the domain name in the URL).; >>> If you'd like to turn off curl's verification of the certificate, use; >>> the -k (or --insecure) option.; >>> ***@***.*** t5]$ ; >> ; >> ; >> I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; >> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <https://can01.safelinks.protection.outlook.com/?url=https%3A",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-839972447:4559,perform,performs,4559,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-839972447,1,['perform'],['performs']
Performance,"&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #26 0x00007f174bd7152d in cling::Interpreter::process(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Value*, cling::Transaction**, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #27 0x00007f174be638ab in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) () from /home/blue/ROOT/relwithdebinfo-perf/cmake-build-foo/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:6645,optimiz,optimized,6645,https://root.cern,https://github.com/root-project/root/issues/12673,1,['optimiz'],['optimized']
Performance,' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' already loaded for 'PtEtaPhiE4D'; Module 'GenVector' already loaded for 'PtEtaPhiM4D'; Module 'Smatrix' already loaded for 'MatRepStd'; Module 'Smatrix' already loaded for 'MatRepSym'; Module 'Smatrix' already loaded for 'SVector'; Module 'MathCore' already loaded for 'R'; Module 'Smatrix' already loaded for 'SMatrix'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Core' already loaded for '_root_std_complex'; Module 'Core' already loaded for '_root_std_complex'; Module 'Core' already loaded for '_root_std_complex'; Loading 'Gpad' on demand for 'TPad'; Module 'Gpad' already loaded for 'TPad'; Module 'Gpad' already loaded for 'TPad'; Module 'MathCore' already loaded for 'TRandom'; Module 'MathCore' already loaded for 'TRandom'; Module 'MathCore' already loaded for 'TRandom'; Info in <TCling::__LoadModule>: Preloading module MathCore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:12851,load,loaded,12851,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,21,"['Load', 'load']","['Loading', 'loaded']"
Performance,' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32382,load,load,32382,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/14e86c33.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e02f50a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.signin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:53734,load,load,53734,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:57911,load,loaded,57911,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,"' is used before limits check.; [roofit/roofit/src/RooIntegralMorph.cxx:375]: (style) Array index 'igapHigh' is used before limits check. [core/winnt/src/TWinNTSystem.cxx:5035]: (style) Statements following return, break, continue, goto or throw will never be executed.; [tree/treeplayer/src/TSelectorDraw.cxx:380]: (style) Statements following return, break, continue, goto or throw will never be executed. [net/auth/src/TAuthenticate.cxx:4205]: (error) Resource leak: fd; [roofit/roofitcore/src/BidirMMapPipe.cxx:1880]: (error) Memory leak: s; [tree/tree/src/TLeaf.cxx:222]: (error) Memory leak: countname; [tree/tree/src/TLeaf.cxx:226]: (error) Memory leak: countname; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfS; [tmva/tmva/src/MethodBase.cxx:2783]: (error) Memory leak: pdfB. [roofit/roofitcore/src/RooAbsArg.cxx:280]: (style) Redundant checking of STL container element existence before removing it. [core/dictgen/src/rootcling_impl.cxx:457]: (performance) Possible inefficient checking for 'fieldSelRules' emptiness.; [core/dictgen/src/rootcling_impl.cxx:4573]: (performance) Possible inefficient checking for 'filesIncludedByLinkdef' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:322]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:374]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:419]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:475]: (performance) Possible inefficient checking for 'fWebConn' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:587]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [gui/canvaspainter/v7/src/TCanvasPainter.cxx:787]: (performance) Possible inefficient checking for 'fCmds' emptiness.; [html/src/TDocParser.cxx:684]: (performance) Possible inefficient checking for 'currentType' emptiness.;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1343:2236,perform,performance,2236,https://root.cern,https://github.com/root-project/root/pull/1343,1,['perform'],['performance']
Performance,"' not found; Failed to load module ROOT_Foundation_C; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module ROOT_Config; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module ROOT_Rtypes; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module ROOT_Foundation_Stage1_NoRTTI; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module Core; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module Rint; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module RIO; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module MathCore; fatal error: module map file '/usr/share/root/cling/module.modulemap' not found; Failed to load module Hist; input_line_4:37:17: warning: using directive refers to implicitly-defined namespace 'std'; using namespace std;; ^. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f69e399b3eb in waitpid () from /lib64/libc.so.6; #1 0x00007f69e38fcbaf in do_system () from /lib64/libc.so.6; #2 0x00007f69e8654040 in TUnixSystem::StackTrace() () from /usr/lib64/root/libCore.so.6.24; #3 0x00007f69e8656515 in TUnixSystem::DispatchSignals(ESignals) () from /usr/lib64/root/libCore.so.6.24; #4 <signal handler called>; #5 0x00007f69db7ba9ff in ROOT::TMetaUtils::TNormalizedCtxtImpl::keepTypedef(cling::LookupHelper const&, char const*, bool) () from /tmp/yuehshun/root_build_pr-9518_with-test/lib/libCling.so; #6 0x00007f69db7bad7e in ROOT::TMetaUtils::TNormalizedCtxtImpl::TNormalizedCtxtImpl(cling::LookupHelper const&) () from /tmp/yuehshun/root_build_pr-9518_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9518#issuecomment-1059973386:33181,load,load,33181,https://root.cern,https://github.com/root-project/root/pull/9518#issuecomment-1059973386,1,['load'],['load']
Performance,'/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; *,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:46261,load,load,46261,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,'/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:46720,load,load,46720,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,'/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/Hel,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:35247,load,load,35247,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,'/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1db3b27f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d3376,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:23514,load,load,23514,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,'/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:47918,load,load,47918,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,'/etc/grid-security/certificates/IHEP-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:58778,load,load,58778,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,'/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed t,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48553,load,load,48553,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,'/etc/grid-security/certificates/NorduGrid-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/522b8537.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/95b96af1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:58307,load,load,58307,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"'SMatrix'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Core' already loaded for '_root_std_complex'; Module 'Core' already loaded for '_root_std_complex'; Module 'Core' already loaded for '_root_std_complex'; Loading 'Gpad' on demand for 'TPad'; Module 'Gpad' already loaded for 'TPad'; Module 'Gpad' already loaded for 'TPad'; Module 'MathCore' already loaded for 'TRandom'; Module 'MathCore' already loaded for 'TRandom'; Module 'MathCore' already loaded for 'TRandom'; Info in <TCling::__LoadModule>: Preloading module MathCore. Module 'Core' already loaded for 'TUnixSystem'; Module 'Core' already loaded for 'TUnixSystem'; Module 'Core' already loaded for 'TUnixSystem'; Info in <TUnixSystem::Load>: loaded library /home/jun/dev/root/Debug/lib/libMathCore.so, status 0; Module 'Core' already loaded for 'TSignalHandler'; Module 'Core' already loaded for 'TSignalHandler'; Module 'Core' already loaded for 'TSignalHandler'; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TSignalHandler; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TSignalHandler. Module 'Core' already loaded for 'TSysEvtHandler'; Module 'Core' already loaded for 'TSysEvtHandler'; Module 'Core' already loaded for 'TSysEvtHandler'; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TSysEvtHandler; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TSysEvtHandler. Module 'Core' already loaded for 'TQObject'; Module 'MathCore' already loaded for 'Hash'; Module 'Core' already loaded for 'Hash'; Module 'MathCore' already loaded for 'Hash'; Module 'Core' already loaded for 'Hash'; Module 'MathCore' ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:13859,load,loaded,13859,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,5,"['Load', 'load']","['Load', 'loaded']"
Performance,"'__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faec0ef4860>, '__file__': '/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', '__cached__': None, 'ROOT': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=None, module=<module at remote 0x7faec0dce360>, __file__='/cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), start=0x101, filename='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', fp=0xc827e0) at Python/pythonrun.c:1140; #19 pyrun_simple_file (flags=0x7ffc080e6778, closeit=<optimized out>, filename='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', fp=0xc827e0) at Python/pythonrun.c:450; #20 PyRun_SimpleFileExFlags (fp=fp; entry=0xc827e0, filename=<optimized out>, closeit=closeit; entry=0x1, flags=flags; entry=0x7ffc080e6778) at Python/pythonrun.c:483; #21 0x00007faec09ae01c in PyRun_AnyFileExFlags (fp=fp; entry=0xc827e0, filename=<optimized out>, closeit=closeit; entry=0x1, flags=flags; entry=0x7ffc080e6778) at Python/pythonrun.c:92; #22 0x00007faec09cad68 in pymain_run_file (cf=0x7ffc080e6778, config=0xbfdd70) at Modules/main.c:373; #23 pymain_run_python (exitcode=0x7ffc080e6770) at Modules/main.c:598; #24 Py_RunMain () at Modules/main.c:677; #25 0x00007faec09cb227 in pymain_main (args=0x7ffc080e6860) at Modules/main.c:707; #26 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:731; #27 0x00007faebf6bd555 in __libc_start_main () from /lib64/libc.so.6; #28 0x000000000040100e in _start (); =========================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:36608,optimiz,optimized,36608,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,1,['optimiz'],['optimized']
Performance,'int64_t' (aka 'long long') [-Wformat] ; - [2020-08-22T08:38:35.230Z] /ec/build/workspace/root-pullrequests-build/root/tree/tree/src/TBranch.cxx:2639:15: warning: unused variable 'leaves' [-Wunused-variable] . ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.tree.tree.test.gtest_tree_tree_test_testTIOFeatures](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTIOFeatures/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execFileMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execFileMerger/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TestCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TestCache/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_mergeWithDir](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93610/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_mergeWithDir/); - [projectroot.roottest.root.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-678618866:1949,cache,cache,1949,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-678618866,1,['cache'],['cache']
Performance,( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_F,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:5772,Load,Loading,5772,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm; 0.0000,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:10608,Load,Loading,10608,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/H,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:3015,Load,Loading,3015,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROO,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:2328,Load,Loading,2328,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm; 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm; 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:1777,Load,Loading,1777,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"(""Events"")` (which works). This particular file was produced with `RNTupleImporter`, but I guess/hope it does not matter. . ```; $ root -l data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple; root [0]; Attaching file data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple as _file0...; (TFile *) 0x55fecfbb7140; root [1] _file0->ls(); TFile**		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; TFile*		data/Run2012BC_DoubleMuParked_Muons.zstd.ntuple	; KEY: ROOT::Experimental::RNTuple	Events;1	object title; root [2] Events<Enter>. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f17510ea707 in __GI___wait4 (pid=109605, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f17510ea6cb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffd9df79db8, options=options; entry=0) at waitpid.c:38; #2 0x00007f17510627fb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f1751960d69 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f17519606f4 in TUnixSystem::DispatchSignals (this=0x55fecde2a420, sig=kSigSegmentationViolation) at ../core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007f174bc8faac in TCling__GetObjectDecl (obj=0x55fed02b7470) at ../core/metacling/src/TCling.cxx:603; #8 0x00007f174bce6d72 in TClingCallbacks::tryFindROOTSpecialInternal (this=this; entry=0x55fece888730, R=..., S=S; entry=0x55fecdea0250) at ../core/metacling/src/TClingCallbacks.cxx:772; #9 0x00007f174bce8e51 in TClingCallbacks::LookupObject (this=0x55fece888730, R=..., S=0x55fecdea0250) at ../core/metacling/src/TClin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:1149,optimiz,optimized,1149,https://root.cern,https://github.com/root-project/root/issues/12673,1,['optimiz'],['optimized']
Performance,(*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 92 more. ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.core.imt.test.gtest_core_imt_test_coreimttestUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_coreimttestUnit/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.core.imt/test/gtest_core_imt_test_testTFuture/); - [projectroot.io.io.test.gtest_io_io_test_TROMemFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36586/testReport/projectroot.i,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-411701514:3298,cache,cache,3298,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-411701514,2,['cache'],['cache']
Performance,"(For context, this is important for multi-dimensional constant arrays as described in [ROOT-7016](https://sft.its.cern.ch/jira/browse/ROOT-7016) and tested in Cling's `Interfaces/evaluate.C` test. But for reasons unknown to me, the ROOT prompt now seems to have a different way of handling this case because just reverting commit https://github.com/root-project/root/commit/d97e4dca36370a1f036026cb6976416670882bc6 still works there...). Instead of using relying on recursive templated calls, perform the type cast in the `ValueExtractionSynthesizer`. This has the advantage of avoiding an ODR violation warning in `MultipleInterpreters.C` with LLVM 16 (while unclear if that one is correct or not).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13477:493,perform,perform,493,https://root.cern,https://github.com/root-project/root/pull/13477,1,['perform'],['perform']
Performance,"(I always post a comment before I see your latest comment...); I profiled pyroot few days ago and found `LookupCppEntity` is a hot function, and this is calling `CreateScopeProxy`, which is calling `Cppyy::GetNumMethods`. So I thought optimizing this part of code really make sense. . > also do not see the point of caching the value there since it is already cached in the list itself . Hmm but GetNumMethods is calling TClass::GetNmethods, which is invoking GetListOfMethods like this:; ```; 4385 Int_t TClass::GetNmethods() ; 4386 {; 4387 if (!HasInterpreterInfo()) return 0;; 4388 ; 4389 TList *lm = GetListOfMethods();; 4390 if (lm); 4391 return lm->GetSize();; 4392 else; 4393 return 0;; 4394 }; ```; Looks to me it's invoking GetListOfMethods(true) (because default is true) but are we using the cache you mentioned to make GetNumMethods?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1743#issuecomment-373177041:235,optimiz,optimizing,235,https://root.cern,https://github.com/root-project/root/pull/1743#issuecomment-373177041,3,"['cache', 'optimiz']","['cache', 'cached', 'optimizing']"
Performance,"(LWP 21632)]; [New Thread 0x7fffeb7fe700 (LWP 21633)]; [Switching to Thread 0x7fffeb7fe700 (LWP 21633)]. Thread 4 ""root.exe"" hit Breakpoint 1, clang::ASTWriter::WriteAST (this=this@entry=0x7fffdc023c70, SemaRef=..., OutputFile=""/tmp/org.llvm.clang.yuka/ModuleCache/sys_types.h.pcm"", WritingModule=0x7fffdc018480, ; isysroot=..., hasErrors=false) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:4470; 4470 bool hasErrors) {; (gdb) bt; #0 clang::ASTWriter::WriteAST (this=this@entry=0x7fffdc023c70, SemaRef=..., OutputFile=""/tmp/org.llvm.clang.yuka/ModuleCache/sys_types.h.pcm"", WritingModule=0x7fffdc018480, isysroot=..., hasErrors=false); at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp:4470; #1 0x00007ffff1fd2e6a in clang::PCHGenerator::HandleTranslationUnit (this=0x7fffdc023ba0, Ctx=...) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Serialization/GeneratePCH.cpp:61; #2 0x00007ffff1d96a58 in clang::MultiplexConsumer::HandleTranslationUnit (this=<optimized out>, Ctx=...) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/MultiplexConsumer.cpp:305; #3 0x00007ffff37bc16a in clang::ParseAST (S=..., PrintStats=<optimized out>, SkipFunctionBodies=<optimized out>) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Parse/ParseAST.cpp:159; #4 0x00007ffff1d67996 in clang::FrontendAction::Execute (this=this@entry=0x7fffeb7f9c00) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/FrontendAction.cpp:896; #5 0x00007ffff1d302f4 in clang::CompilerInstance::ExecuteAction (this=0x7fffebff7ed0, Act=...) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:984; #6 0x00007ffff1d309af in <lambda()>::operator() (__closure=0x7fffebff7db0) at /home/yuka/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1154; #7 llvm::function_ref<void()>::callback_fn<compileModuleImpl(clang::CompilerInstance&, clang::SourceLocation, llvm::StringRef,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1761#issuecomment-377492896:3865,optimiz,optimized,3865,https://root.cern,https://github.com/root-project/root/pull/1761#issuecomment-377492896,1,['optimiz'],['optimized']
Performance,"(another alternative is calling `reader.Restart()` after you perform non-read-only operations on the object returned by `reader.GetTree()`, before `TTreeReader` itself accesses the object).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6641#issuecomment-775097287:61,perform,perform,61,https://root.cern,https://github.com/root-project/root/issues/6641#issuecomment-775097287,1,['perform'],['perform']
Performance,"(assuming you haven't found it yet). Hm, looking at the code in `DynamicLibraryManager::loadLibrary()` this seems to (eventually) come from a call to the (platform) `dlopen` and `dlerror`. Since it mentions memory allocation and `mmap` in particular, are you maybe running out of memory or are there `ulimit`s that get into the way? Otherwise can you maybe push your (WIP) changes somewhere so I could have a look? Maybe I can spot something when I can run it myself...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12787#issuecomment-1554121388:88,load,loadLibrary,88,https://root.cern,https://github.com/root-project/root/issues/12787#issuecomment-1554121388,1,['load'],['loadLibrary']
Performance,"(const auto& element : test_map_){; std::cout << element.first[0] << "" "" << element.first[1] << "" "" << element.second << std::endl;; }; }; private:; std::map<std::array<std::string, 2>, std::string> test_map_{};; ClassDef(TestClass, 1);; };; ClassImp(TestClass); ; void test(){; auto* test_obj = new TestClass;; test_obj->Print();; ; auto* file = TFile::Open(""test.root"", ""recreate"");; test_obj->Write(""obj"");; file->Close();; ; delete file;; delete test_obj;; ; file = TFile::Open(""test.root"", ""read"");; test_obj = file->Get<TestClass>(""obj"");; test_obj->Print();; ; file->Close();; delete file;; }; ; int main(int argc, char* argv[]) {; test();; return 0;; }. ### Running the example. With a compiled code everything works as expected:. root -l; root [0] .L test.cpp+; root [1] test(). gives correct output:. aaaa bbbbbb cccc; aaaa bbbbbb cccc. But if I try to read again the same file:. root -l test.root; root [0] gSystem->Load(""test_cpp""); root [1] obj->Print(); Error in <TBufferFile::ReadVersion>: Could not find the StreamerInfo with a checksum of 0x6b3ba626 for the class ""string"" in test.root.; Error in <TBufferFile::CheckByteCount>: object of class string read too many bytes: 72 instead of 24; Warning in <TBufferFile::CheckByteCount>: string::Streamer() not in sync with data on file test.root, fix Streamer(); aaaabbbbbb@ cccc�i�� cccc. With an older version of ROOT (6.18), everything works as expected. ### Some additional information. I tried to compare StreamerInfo for 2 ROOT versions and they are different (last item):. **root 6.18**. root [2] _file0->ShowStreamerInfo(); OBJ: TList TList Doubly linked list : 0; ; StreamerInfo for class: TestClass, version=1, checksum=0x84f55819; TObject BASE offset= 0 type=66 Basic ROOT object; map<array<string,2>,string> test_map_ offset= 0 type=300 (nodelete) ,stl=4, ctype=61,; ; StreamerInfo for class: pair<array<string,2>,string>, version=1, checksum=0x64321048; string first [2] offset= 0 type=320 ,stl=365, ctype=365,; string second ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8268:1432,Load,Load,1432,https://root.cern,https://github.com/root-project/root/issues/8268,1,['Load'],['Load']
Performance,"(file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized out>, nsid=-2, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-open.c:837; #30 0x00007ffa51c5d34c in dlopen_doit (a=a; entry=0x7fff519cbc60) at dlopen.c:66; #31 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cbc00, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:208; #32 0x00007ffa51a6c903 in __GI__dl_catch_error (objname=objname; entry=0x55b06913d600, errstring=errstring; entry=0x55b06913d608, mallocedp=mallocedp; entry=0x55b06913d5f8, operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dl-error-skeleton.c:227; #33 0x00007ffa51c5db59 in _dlerror_run (operate=operate; entry=0x7ffa51c5d2f0 <dlopen_doit>, args=args; entry=0x7fff519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:5301,optimiz,optimized,5301,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,(http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6221-ROOT-fedora31-noimt&date=2020-08-24).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93665/console).; ### Warnings:; - [2020-08-24T09:15:25.111Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/tree/src/TBranch.cxx:2639:15: warning: unused variable ‘leaves’ [-Wunused-variable] . ### Failing tests:; - [projectroot.tree.tree.test.gtest_tree_tree_test_testTIOFeatures](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93665/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTIOFeatures/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execFileMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93665/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execFileMerger/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TestCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93665/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TestCache/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93665/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93665/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_mergeWithDir](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93665/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_mergeWithDir/); - [projectroot.roottest.root.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-679014524:1138,cache,cache,1138,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-679014524,1,['cache'],['cache']
Performance,(https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37792/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.tmva.tmva.test.DNN.CNN.TMVA_DNN_CNN_Backpropagation_CPU](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37792/testReport/projectroot.tmva.tmva.test.DNN/CNN/TMVA_DNN_CNN_Backpropagation_CPU/); - [projectroot.tmva.tmva.test.DNN.RNN.TMVA_DNN_RNN_FullRNN](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37792/testReport/projectroot.tmva.tmva.test.DNN/RNN/TMVA_DNN_RNN_FullRNN/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37792/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37792/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37792/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_baseClass_53410_v2/); - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDef](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37792/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDef/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_stlProxies](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37792/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_stlProxies/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_SimpleRootrm1Clean](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37792/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_Si,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2499#issuecomment-414960870:1215,cache,cache,1215,https://root.cern,https://github.com/root-project/root/pull/2499#issuecomment-414960870,1,['cache'],['cache']
Performance,"(https://github.com/root-project/root/files/8451196/files.zip). The problem seems to be at the level of TGenCollectionProxy: multiple threads end up sharing the same TGenCollectionProxy objects, which is not thread safe (e.g. because of https://github.com/root-project/root/blob/bce5777b8f479212babb7a8af5485d9a6bbd251e/io/io/src/TEmulatedCollectionProxy.cxx#L84-L85). In principle, however, as we use different TChains/TTreeReaders in each thread, they should also access different TGenCollectionProxy instances. Example backtraces at the point of crash (this is one of several failure modes, but it's the one where the problem is clear -- both threads, at frame 0, are accessing the same TGenCollectionProxy instance):. ```; >>> thread apply all bt 10. Thread 2 (Thread 0x7fffdc0e2640 (LWP 312745) ""repro_ttreeproc""):; #0 0x00007ffff767d973 in TGenCollectionProxy::PopProxy (this=0x7fffd4016090) at ../io/io/src/TGenCollectionProxy.cxx:1333; #1 0x00007ffff7d57a15 in TVirtualCollectionProxy::TPushPop::~TPushPop (this=0x7fffdc0dad20, __in_chrg=<optimized out>) at ../core/cont/inc/TVirtualCollectionProxy.h:65; #2 0x00007ffff76274b1 in TEmulatedCollectionProxy::Destructor (this=0x7fffd4016090, p=0x7fffd40156e0, dtorOnly=false) at ../io/io/src/TEmulatedCollectionProxy.cxx:87; #3 0x00007ffff7d4f8c2 in TClass::Destructor (this=0x7fffd40152c0, obj=0x7fffd40156e0, dtorOnly=false) at ../core/meta/src/TClass.cxx:5417; #4 0x00007ffff676afdb in TBranchElement::ReleaseObject (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4743; #5 0x00007ffff676b265 in TBranchElement::ResetAddress (this=0x7fffd4017590) at ../tree/tree/src/TBranchElement.cxx:4806; #6 0x00007ffff675b10b in TBranchElement::~TBranchElement (this=0x7fffd4017590, __in_chrg=<optimized out>) at ../tree/tree/src/TBranchElement.cxx:982; #7 0x00007ffff675b338 in TBranchElement::~TBranchElement (this=0x7fffd4017590, __in_chrg=<optimized out>) at ../tree/tree/src/TBranchElement.cxx:1003; #8 0x00007ffff7ceae9f in TCollection::",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10357:1540,optimiz,optimized,1540,https://root.cern,https://github.com/root-project/root/issues/10357,1,['optimiz'],['optimized']
Performance,"(mainframe, ""&Any Text"");; mainframe->AddFrame(myButton, new TGLayoutHints(kLHintsExpandX | kLHintsCenterY));; myTGCheckBox->Connect(""Clicked()"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");; myTGComboBox->Connect(""Selected(Int_t)"", ""TGTextButton"", myButton, ""ChangeText(=\""LEGOlegoemoryABCDEF\"")"");; mainframe->MapSubwindows();; mainframe->Layout();; mainframe->MapWindow();; }; ```; ```. root -l testSignalSlot.cpp+; root [0] ; Processing testSignalSlot.cpp+...; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/./testSignalSlot_cpp.so; root [1] ; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f49a0ab5457 in __GI___waitpid (pid=3907, stat_loc=stat_loc; entry=0x7ffe8def7918, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f49a0a20177 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f49a1660340 in TUnixSystem::StackTrace() () from /opt/root_bld/lib/libCore.so; #3 0x00007f49a1662eb5 in TUnixSystem::DispatchSignals(ESignals) () from /opt/root_bld/lib/libCore.so; #4 <signal handler called>; #5 __strlen_avx2 () at ../sysdeps/x86_64/multiarch/strlen-avx2.S:65; #6 0x00007f49a1561565 in TString::TString(char const*) () from /opt/root_bld/lib/libCore.so; #7 0x00007f499261ff70 in TGTextButton::SetTitle(char const*) () from /opt/root_bld/lib/libGui.so; #8 0x00007f4993663032 in ?? (); #9 0x0000000000000000 in ?? (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else;",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7195#issuecomment-779128525:1836,optimiz,optimized,1836,https://root.cern,https://github.com/root-project/root/issues/7195#issuecomment-779128525,1,['optimiz'],['optimized']
Performance,"(shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8bac1c8 in TUnixSystem::DispatchSignals (this=0x11eee5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa8ba308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 0x00007fffa8b9d428 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fffa8db70c0 <textinput::TerminalConfigUnix::Get()::s>, signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #8 0x00007fffa8b9d47c in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #10 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., this=0x7fffff156ce0) at /usr/include/c++/8/new:169; #11 llvm::orc::ExecutionSession::loo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:13750,optimiz,optimized,13750,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*)+24>, ; nsid=-2, argc=2, argv=<optimized out>, env=0x41d000) at dl-open.c:900; #35 0x00007ffff48011ea in dlopen_doit () from /lib64/libdl.so.2; #36 0x00007ffff59a6164 in _dl_catch_exception () from /lib64/libc.so.6; #37 0x00007ffff59a6223 in _dl_catch_error () from /lib64/libc.so.6; #38 0x00007ffff4801969 in _dlerror_run () from /lib64/libdl.so.2; #39 0x00007ffff480128a in dlopen@@GLIBC_2.2.5 () from /lib64/libdl.so.2; #40 0x00007fffeeb69fe8 in cling::utils::platform::DLOpen (Path=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", Err=Err@entry=0x7fffffffbf40) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; #41 0x00007fffeea4cc41 in cling::DynamicLibraryManager::loadLibrary (this=0x698e90, libStem=..., permanent=<optimized out>, resolved=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:373; #42 0x00007fffee9496fa in TCling::LibraryLoadingFailed (this=0x4f0e00, errmessage=..., libStem=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", permanent=false, resolved=false) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:6492; #43 0x00007fffeea69296 in cling::MultiplexInterpreterCallbacks::LibraryLoadingFailed (this=<optimized out>, errmessage=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so: undefined symbol: _Py_NoneStruct"", libStem=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", permanent=<optimized out>, resolved=<optimized out>); at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:102; #44 0x00007fffeea4ce05 in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Int",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:8264,optimiz,optimized,8264,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['optimiz'],['optimized']
Performance,"(this=0x00007b1000001340, name=""Root.ErrorIgnoreLevel"") const at TEnv.cxx:454:30 [opt]; frame #24: 0x000000011042fc2e libCore.6.22.06.so`TEnv::GetValue(this=<unavailable>, name=<unavailable>, dflt=""Print"") const at TEnv.cxx:537:27 [opt]; frame #25: 0x0000000110430b9d libCore.6.22.06.so`DefaultErrorHandler(level=4000, abort_bool=<unavailable>, location=""TUnixSystem::DispatchSignals"", msg=""segmentati; on violation"") at TError.cxx:132:33 [opt]; frame #26: 0x000000011043128a libCore.6.22.06.so`::ErrorHandler(level=4000, location=""TUnixSystem::DispatchSignals"", fmt=""%s"", ap=0x00007ffee94e0ff0) at TError.cxx; :0:7 [opt]; frame #27: 0x0000000110431667 libCore.6.22.06.so`Break(location=<unavailable>, fmt=<unavailable>) at TError.cxx:314:4 [opt]; frame #28: 0x0000000110549699 libCore.6.22.06.so`TUnixSystem::DispatchSignals(this=0x00007b5800000000, sig=kSigSegmentationViolation) at TUnixSystem.cxx:3645:10 [o; pt]; frame #29: 0x000000011095ac60 libclang_rt.tsan_osx_dynamic.dylib`__tsan::CallUserSignalHandler(__tsan::ThreadState*, bool, bool, bool, int, __sanitizer::__sanitize; r_siginfo*, void*) + 640; frame #30: 0x00000001109712ca libclang_rt.tsan_osx_dynamic.dylib`rtl_sighandler(int) + 378; frame #31: 0x00007fff2047fd7d libsystem_platform.dylib`_sigtramp + 29; frame #32: 0x00007fff2047d5d3 libsystem_platform.dylib`_platform_strlen + 19; frame #33: 0x000000011095b56d libclang_rt.tsan_osx_dynamic.dylib`wrap_strlen + 253; frame #34: 0x000000011481cae5 libO2DebugGUI.dylib`ImGui::TextEx(char const*, char const*, int) + 85; ```. ### Expected behavior. Terminate correctly. ### To Reproduce. I do not have a full reproducer, however I would say:. ```cpp; int; main() {; char *foo=0;; foo[10] = 1;; }; ```. exhibits a similar behaviour when compiled with:. ```bash; c++ -fsanitize=thread foo.cc $HOME/src/sw/osx_x86-64/ROOT/latest-dev-o2/lib/libCore.so; ```. I think the thread sanitiser adds some signal handling as well and some race condition occurs. ### Setup. v6-20-08; macOS; own build",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7418:5581,race condition,race condition,5581,https://root.cern,https://github.com/root-project/root/issues/7418,1,['race condition'],['race condition']
Performance,"(this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:3641; #64 0x00007ffff6c3cb46 in TClass::GetBaseClass (this=0x1e612e0, cl=0x160c7d0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:2681; #65 0x00007ffff6c43eb2 in TClass::InheritsFrom (this=0x1e612e0, cl=0x160c7d0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:4894; #66 0x00007ffff6c47ba7 in TClass::Property (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:6100; #67 0x00007ffff6c46dc7 in TClass::IsForeign (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5938; #68 0x00007ffff6c46e68 in TClass::PostLoadCheck (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5955; #69 0x00007ffff6c3e928 in TClass::GetClass (typeinfo=..., load=true, hint_pair_offset=0, hint_pair_size=0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:3284; #70 0x000000000058b9d1 in ROOT::Internal::TClassGetClassHelper<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> >::GetClass (load=true, silent=false) at /home/jhahnfel/ROOT/src/core/meta/inc/TClass.h:628; #71 0x000000000058b97f in ROOT::Internal::GetClassHelper<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> > (load=true, silent=false) at /home/jhahnfel/ROOT/src/core/meta/inc/TClass.h:644; #72 0x000000000058b93f in TClass::GetClass<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> > (load=true, silent=false) at /home/jhahnfel/ROOT/src/core/meta/inc/TClass.h:654; #73 0x000000000058a8e8 in TDirectory::WriteObject<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> > (this=0x7fffffffcfc8, obj=0x7fffffffd398, name=0x41b846 ""h1"", option=0x41f9ae """", bufsize=0) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:284; #74 0x00000000005878fc in IOTest_O",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1403351246:15889,load,load,15889,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1403351246,1,['load'],['load']
Performance,"(this=0x555555f70710, name=0x7ffff7af4b40 ""TSysEvtHandler"", cversion=0, info=..., ; isa=0x5555555bff60, dfil=0x7ffff7af6f65 ""TSysEvtHandler.h"", ; ifil=0x7ffff7adf928 ""/home/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx"", dl=28, il=22) at include/TQClass.h:47; #5 0x00007ffff7fa9eaa in ROOT::Internal::TQObjectInitBehavior::CreateClass (this=0x5555555bff80, ; cname=0x7ffff7af4b40 ""TSysEvtHandler"", id=0, info=..., isa=0x5555555bff60, dfil=0x7ffff7af6f65 ""TSysEvtHandler.h"", ; ifil=0x7ffff7adf928 ""/home/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx"", dl=28, il=22) at include/TQClass.h:70; #6 0x00007ffff7d3c467 in ROOT::TGenericClassInfo::GetClass (; this=0x7ffff7f7ce60 <ROOT::GenerateInitInstanceLocal(TSysEvtHandler const*)::instance>); at /home/axel/build/root/master/src/core/meta/src/TGenericClassInfo.cxx:250; #7 0x00007ffff7dcf596 in TSysEvtHandler::Dictionary () at core/G__Core.cxx:14387; #8 0x00007ffff7d1db76 in TClass::LoadClassDefault (requestedname=0x7fffffffb399 ""TSysEvtHandler""); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5769; #9 0x00007ffff7d1da90 in TClass::LoadClass (requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5740; #10 0x00007ffff7bdd915 in TROOT::LoadClass (this=0x7ffff7f53460 <ROOT::Internal::GetROOT1()::alloc>, ; requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false) at /home/axel/build/root/master/src/core/base/src/TROOT.cxx:2119; #11 0x00007ffff7d14d58 in TClass::GetClass (info=0x555556980ba0, load=true, silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:3323; #12 0x00007ffff7d07144 in TBaseClass::GetClassPointer (this=0x555556980c70, load=true); at /home/axel/build/root/master/src/core/meta/src/TBaseClass.cxx:66; #13 0x00007ffff7c4b6eb in TQObject::CollectClassSignalLists (this=0x555555d8eac0, list=..., cls=0x55555608c200); at /home/axel/build/root/master/src/core/base/src/TQObject.cxx:461; #14 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7123:2563,Load,LoadClassDefault,2563,https://root.cern,https://github.com/root-project/root/issues/7123,1,['Load'],['LoadClassDefault']
Performance,"(this=0x555555f70710, name=0x7ffff7af4b40 ""TSysEvtHandler"", cversion=0, info=..., ; isa=0x5555555bff60, dfil=0x7ffff7af6f65 ""TSysEvtHandler.h"", ; ifil=0x7ffff7adf928 ""/home/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx"", dl=28, il=22) at include/TQClass.h:47; #6 0x00007ffff7fa9eaa in ROOT::Internal::TQObjectInitBehavior::CreateClass (this=0x5555555bff80, ; cname=0x7ffff7af4b40 ""TSysEvtHandler"", id=0, info=..., isa=0x5555555bff60, dfil=0x7ffff7af6f65 ""TSysEvtHandler.h"", ; ifil=0x7ffff7adf928 ""/home/axel/build/root/master/src/core/base/src/TSysEvtHandler.cxx"", dl=28, il=22) at include/TQClass.h:70; #7 0x00007ffff7d3c467 in ROOT::TGenericClassInfo::GetClass (; this=0x7ffff7f7ce60 <ROOT::GenerateInitInstanceLocal(TSysEvtHandler const*)::instance>); at /home/axel/build/root/master/src/core/meta/src/TGenericClassInfo.cxx:250; #8 0x00007ffff7dcf596 in TSysEvtHandler::Dictionary () at core/G__Core.cxx:14387; #9 0x00007ffff7d1db76 in TClass::LoadClassDefault (requestedname=0x7fffffffb399 ""TSysEvtHandler""); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5769; #10 0x00007ffff7d1da90 in TClass::LoadClass (requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:5740; #11 0x00007ffff7bdd915 in TROOT::LoadClass (this=0x7ffff7f53460 <ROOT::Internal::GetROOT1()::alloc>, ; requestedname=0x7fffffffb399 ""TSysEvtHandler"", silent=false) at /home/axel/build/root/master/src/core/base/src/TROOT.cxx:2119; #12 0x00007ffff7d14d58 in TClass::GetClass (info=0x555556980ba0, load=true, silent=false); at /home/axel/build/root/master/src/core/meta/src/TClass.cxx:3323; #13 0x00007ffff7d07144 in TBaseClass::GetClassPointer (this=0x555556980c70, load=true); at /home/axel/build/root/master/src/core/meta/src/TBaseClass.cxx:66; #14 0x00007ffff7c4b6eb in TQObject::CollectClassSignalLists (this=0x555555d8eac0, list=..., cls=0x55555608c200); at /home/axel/build/root/master/src/core/base/src/TQObject.cxx:461; #15 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7123:7108,Load,LoadClassDefault,7108,https://root.cern,https://github.com/root-project/root/issues/7123,1,['Load'],['LoadClassDefault']
Performance,"(this=0x5555564e7640) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclCXX.h:833; #20 0x00007ffff07fa508 in clang::ASTReader::diagnoseOdrViolations (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:10053; #21 0x00007ffff0806ba3 in clang::ASTReader::FinishedDeserializing (this=0x555555609330) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:12155; #22 0x00007ffff0811ffc in clang::ExternalASTSource::Deserializing::~Deserializing (this=0x7ffffffe27d8) at /home/jun/dev/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:89; #23 0x00007ffff07e3cc0 in clang::ASTReader::ReadAST (this=0x555555609330, FileName=..., Type=clang::serialization::MK_PrebuiltModule, ImportLoc=..., ClientLoadCapabilities=0, Imported=0x0); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4379; #24 0x00007ffff0495e2e in clang::CompilerInstance::loadModule (this=0x55555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:9117,load,loadModule,9117,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,2,['load'],['loadModule']
Performance,"(this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TNtuple.cxx:270; #31 0xf7043ae5 in TKey::TKey (this=0x59097cb0, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261, motherDir=0x5822ab00) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TKey.cxx:249; #32 0xf700e052 in TFile::CreateKey (this=0x5822ab00, mother=0x5822ab00, obj=0x58ac5e90, name=0x58ac5ea1 ""ntuple"", bufsize=8261) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:1050; #33 0xf6ffcb25 in TDirectoryFile::WriteTObject (this=<optimized out>, obj=<optimized out>, name=<optimized out>, option=<optimized out>, bufsize=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1970; #34 0xf7bd847a in TObject::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/base/src/TObject.cxx:869; #35 0xe4203329 in TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9737; #36 TTree::Write (this=0x58ac5e90, name=0x0, option=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9746; #37 0xf6ffa511 in TDirectoryFile::Write (this=0x5822ab00, opt=0, bufsize=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TDirectoryFile.cxx:1849; #38 0xf701e667 in TFile::Write (this=0x5822ab00, opt=0, bufsiz=0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TFile.cxx:2455; #39 0xe4ba17e0 in ?? (); #40 0x",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:5998,optimiz,optimized,5998,https://root.cern,https://github.com/root-project/root/issues/15738,10,['optimiz'],['optimized']
Performance,"(this=0x7fffffffd9d0, sequence=..., obj=0x55555855a0c0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3580; #29 0x00007ffff76f1b94 in TBufferFile::ReadClassBuffer (this=0x7fffffffd9d0, cl=0x555558490b70, pointer=<optimized out>, onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3499; #30 0x00007ffff778a22e in TClass::Streamer (onfile_class=0x0, b=..., obj=0x55555855a0c0, this=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #31 TKey::ReadObjectAny (this=0x5555569f77a0, expectedClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:1108; #32 0x00007ffff774aa1b in TDirectoryFile::GetObjectChecked (this=0x555556a15ce0, namecycle=<optimized out>, expectedClass=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:1111; #33 0x00005555555551f6 in TDirectory::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectory.h:207; #34 TDirectoryFile::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectoryFile.h:84; #35 repro () at repro.C:10; ```. So the crash is here (https://github.com/root-project/root/blob/master/io/io/src/TBufferFile.cxx#L245):; ```c++; if (nwh == 255) {; *this >> nbig;; obj->resize(nbig,'\0');; ReadFastArray((char*)obj->data(),nbig);; }; ```; I have put some debug printouts. When it crashes, `nbig` is `-1`, and resize() expects and unsigned int. The -1 becomes a very large unsigned number that exceeds the maximum allowed length of a `std::string`. To me that looks more like a problem with IO than with HistFactory (the memory layout of the `HistFactory::Measurement` classes hasn't changed from 6.26 to 6.28. Is that something that makes sense to ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:7472,optimiz,optimized,7472,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,2,['optimiz'],['optimized']
Performance,"(unsigned int)>, unsigned int>, tbb::auto_partitioner const>, tbb::blocked_range<unsigned int> >(tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>&, tbb::blocked_range<unsigned int>&) (range=..., start=warning: RTTI symbol not found for class 'tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>'; #14 tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (this=0x7f161ab3bd40) at /home/zhe/buildimt/include/tbb/parallel_for.h:127; #15 0x00007f161adc854b in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::local_wait_for_all (this=0x7f161ab2fe00, parent=..., child=<optimized out>) at ../../src/tbb/custom_scheduler.h:501; #16 0x00007f161adc1522 in tbb::internal::arena::process (this=0x7f161ab4ed00, s=...) at ../../src/tbb/arena.cpp:159; #17 0x00007f161adbffa4 in tbb::internal::market::process (this=0x7f161ab57e80, j=...) at ../../src/tbb/market.cpp:677; #18 0x00007f161adbbbb6 in tbb::internal::rml::private_worker::run (this=0x7f161ab4fc00) at ../../src/tbb/private_server.cpp:271; #19 0x00007f161adbbe09 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:224; #20 0x00007f1624f3c6ba in start_thread (arg=0x7f16176f2700) at pthread_create.c:333; #21 0x00007f16258e741d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109. Thread 3 (Thread 0x7f1617af3700 (LWP 30316)):; #0 __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135; #1 0x00007f1624f3ee42 in __GI___pthread_mutex_lock (mutex=0x2e995b0) at ../nptl/pthread_mutex_lock.c:115; #2 0x00007f161a717930 in TLockGuard::TLock",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:4661,optimiz,optimized,4661,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,1,['optimiz'],['optimized']
Performance,"(unsigned int)>, unsigned int>, tbb::auto_partitioner const>, tbb::blocked_range<unsigned int> >(tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>&, tbb::blocked_range<unsigned int>&) (range=..., start=warning: RTTI symbol not found for class 'tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>'; #14 tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (this=0x7f161ab4b840) at /home/zhe/buildimt/include/tbb/parallel_for.h:127; #15 0x00007f161adc854b in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::local_wait_for_all (this=0x7f161ab37e00, parent=..., child=<optimized out>) at ../../src/tbb/custom_scheduler.h:501; #16 0x00007f161adc1522 in tbb::internal::arena::process (this=0x7f161ab4ed00, s=...) at ../../src/tbb/arena.cpp:159; #17 0x00007f161adbffa4 in tbb::internal::market::process (this=0x7f161ab57e80, j=...) at ../../src/tbb/market.cpp:677; #18 0x00007f161adbbbb6 in tbb::internal::rml::private_worker::run (this=0x7f161ab4fc80) at ../../src/tbb/private_server.cpp:271; #19 0x00007f161adbbe09 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:224; #20 0x00007f1624f3c6ba in start_thread (arg=0x7f1617ef4700) at pthread_create.c:333; #21 0x00007f16258e741d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109. Thread 1 (Thread 0x7f1626ed7a40 (LWP 30289)):; #0 0x00007f16258ac0cb in __GI___waitpid (pid=30320, stat_loc=stat_loc; entry=0x7ffdc1fcb5c0, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007f1625824fbb in do_system (line=<optimized out>) at ../",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:14139,optimiz,optimized,14139,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,1,['optimiz'],['optimized']
Performance,"(unsigned int)>, unsigned int>, tbb::auto_partitioner const>, tbb::blocked_range<unsigned int> >(tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>&, tbb::blocked_range<unsigned int>&) (range=..., start=warning: RTTI symbol not found for class 'tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>'; #14 tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (this=0x7f161ab4ba40) at /home/zhe/buildimt/include/tbb/parallel_for.h:127; #15 0x00007f161adc854b in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::local_wait_for_all (this=0x7f161ab3fe00, parent=..., child=<optimized out>) at ../../src/tbb/custom_scheduler.h:501; #16 0x00007f161adc1522 in tbb::internal::arena::process (this=0x7f161ab4ed00, s=...) at ../../src/tbb/arena.cpp:159; #17 0x00007f161adbffa4 in tbb::internal::market::process (this=0x7f161ab57e80, j=...) at ../../src/tbb/market.cpp:677; #18 0x00007f161adbbbb6 in tbb::internal::rml::private_worker::run (this=0x7f161ab4fd00) at ../../src/tbb/private_server.cpp:271; #19 0x00007f161adbbe09 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:224; #20 0x00007f1624f3c6ba in start_thread (arg=0x7f1617af3700) at pthread_create.c:333; #21 0x00007f16258e741d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109. Thread 2 (Thread 0x7f1617ef4700 (LWP 30315)):; #0 __lll_lock_wait () at ../sysdeps/unix/sysv/linux/x86_64/lowlevellock.S:135; #1 0x00007f1624f3ee42 in __GI___pthread_mutex_lock (mutex=0x2e995b0) at ../nptl/pthread_mutex_lock.c:115; #2 0x00007f161a717930 in TLockGuard::TLock",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:9399,optimiz,optimized,9399,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,1,['optimiz'],['optimized']
Performance,"(unsigned int)>, unsigned int>, tbb::auto_partitioner const>, tbb::blocked_range<unsigned int> >(tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>&, tbb::blocked_range<unsigned int>&) (range=..., start=warning: RTTI symbol not found for class 'tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>'; #20 tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::execute() (this=0x7f161ab4bd40) at /home/zhe/buildimt/include/tbb/parallel_for.h:127; #21 0x00007f161adc854b in tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::local_wait_for_all (this=0x7f161ab46600, parent=..., child=<optimized out>) at ../../src/tbb/custom_scheduler.h:501; #22 0x00007f161adc5450 in tbb::internal::generic_scheduler::local_spawn_root_and_wait (this=0x7f161ab46600, first=warning: RTTI symbol not found for class 'tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>'; #23 0x00007f161afe48b2 in tbb::task::spawn_root_and_wait (root=warning: RTTI symbol not found for class 'tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>'; #24 tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::run(tbb::blocked_range<unsigned int> const&, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:19716,optimiz,optimized,19716,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,2,['optimiz'],['optimized']
Performance,) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:11020,Load,Loading,11020,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,) ; - ../root/core/newdelete/src/NewDelete.cxx:214:27: warning: unused parameter ‘size’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:214:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:220:27: warning: unused parameter ‘size’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:220:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:300:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:300:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:304:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:304:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:344:11: warning: ‘operator new’ must not return NULL unless it is declared ‘throw()’ (or -fcheck-new is in effect) . And 8 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37575/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37575/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37575/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37575/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-414430770:1374,cache,cache,1374,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-414430770,2,['cache'],['cache']
Performance,) ; - ../root/core/newdelete/src/NewDelete.cxx:214:27: warning: unused parameter ‘size’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:214:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:220:27: warning: unused parameter ‘size’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:220:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:300:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:300:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:304:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:304:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:344:11: warning: ‘operator new’ must not return NULL unless it is declared ‘throw()’ (or -fcheck-new is in effect) . And 8 more. ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37858/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37858/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37858/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37858/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2492#issuecomment-415007377:1374,cache,cache,1374,https://root.cern,https://github.com/root-project/root/pull/2492#issuecomment-415007377,2,['cache'],['cache']
Performance,) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Th,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:8673,Load,Loading,8673,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,") at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977; #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202; #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:21279,optimiz,optimized,21279,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,") at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=0x1 <error: Cannot access memory at address 0x1>, alternate=0x7f2a491937c0 <error: Cannot access memory at address 0x7f2a491937c0>) at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:792; 2187: #8 0x00007f2a60081efb in _GLOBAL__sub_I_libInitOrder.cxx () at roottest/root/meta/tclass/libInitOrder.cxx:123; 2187: #9 0x00007f2a631f305a in call_init (l=<optimized out>, argc=argc; 2187: entry=37, argv=argv; 2187: entry=0x7ffc0cd45a68, env=env; 2187: entry=0x61600030f680) at dl-init.c:72; 2187: #10 0x00007f2a631f315a in call_init (env=0x61600030f680, argv=0x7ffc0cd45a68, argc=37, l=<optimized out>) at dl-init.c:30; 2187: #11 _dl_init (main_map=0x61a00008b280, argc=37, argv=0x7ffc0cd45a68, env=0x61600030f680) at dl-init.c:119; 2187: #12 0x00007f2a617509bc in _dl_catch_exception () from /lib64/libc.so.6; 2187: #13 0x00007f2a631fa88e in dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:794; 2187: #14 dl_open_worker (a=0x7ffc0cd41a20) at dl-open.c:757; 2187: #15 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #16 0x00007f2a631faa71 in _dl_open (file=0x6070000a18e0 ""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", mode=-2147483391, caller_dlopen=0x2ce7f6 <__interceptor_dlopen.part.267+102>, nsid=<optimized out>, argc=37, argv=<optimized out>, env=0x61600030f680) at dl-open.c:876; 2187: #17 0x00007f2a61bc5f8a in dlopen_doit () from /lib64/libdl.so.2; 2187: #18 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #19 0x00007f2a61750a23 in _dl_catch_error () fr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:2589,optimiz,optimized,2589,https://root.cern,https://github.com/root-project/root/issues/11867,1,['optimiz'],['optimized']
Performance,") at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:323; #29 0x00007f7ce9cac1dc in PyEval_EvalFrameEx (f=f; entry=0x7f7cea194200, throwflag=throwflag; entry=0) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/ceval.c:2559; #30 0x00007f7ce9cb2ab2 in PyEval_EvalCodeEx (co=co; entry=0x7f7ce8c8d7b0, globals=globals; entry=0x7f7cea140168, locals=locals; entry=0x7f7cea140168, args=args; entry=0x0, argcount=argcount; entry=0, kws=kws; entry=0x0, kwcount=0, defs=0x0, defcount=0, closure=0x0) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/ceval.c:3608; #31 0x00007f7ce9cb2d49 in PyEval_EvalCode (co=co; entry=0x7f7ce8c8d7b0, globals=globals; entry=0x7f7cea140168, locals=locals; entry=0x7f7cea140168) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/ceval.c:669; #32 0x00007f7ce9cd74a6 in run_mod (arena=0x1c94380, flags=0x7f7ce8c8d7b0, locals=0x7f7cea140168, globals=0x7f7cea140168, filename=0x7f7ce9d04875 ""<string>"", mod=<optimized out>) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/pythonrun.c:1385; #33 PyRun_StringFlags (str=str; entry=0x1c67010 ""from PyCool import cool; cool.FieldSelectionn"", start=start; entry=257, globals=0x7f7cea140168, locals=0x7f7cea140168, flags=flags; entry=0x7ffc3c9f58ec) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/pythonrun.c:1348; #34 0x00007f7ce9cd8a9b in PyRun_SimpleStringFlags (command=command; entry=0x1c67010 ""from PyCool import cool; cool.FieldSelectionn"", flags=flags; entry=0x7ffc3c9f58ec) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/pythonrun.c:983; #35 0x00007f7ce9cebe0f in Py_Main (argc=3, argv=<optimized out>) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Modules/main.c:589; #36 0x00007f7ce8ee1555 in __libc_start_main () from /lib64/libc.so.6; #37 0x00000000004006be in _start (); ===========================================================; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359#issuecomment-694290624:25174,optimiz,optimized,25174,https://root.cern,https://github.com/root-project/root/issues/6359#issuecomment-694290624,1,['optimiz'],['optimized']
Performance,")::MPPassManager::runOnModule (this=0xf6a4b0, M=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/IR/LegacyPassManager.cpp:1554; #63 llvm::legacy::PassManagerImpl::run (this=<optimized out>, M=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/IR/LegacyPassManager.cpp:542; #64 0x00007fffeeaccbee in cling::IncrementalExecutor::emitModule (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:253; #65 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:251; #66 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; #67 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; #68 0x00007fffeea6e410 in cling::IncrementalParser::Compile (this=0x4f6670, input=..., Opts=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:846; #69 0x00007fffeea62615 in cling::Interpreter::EvaluateInternal (this=0x4f17a0, input=..., CO=..., V=0x7fffffffcc70, wrapPoint=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1379; #70 0x00007fffee95d98f in TCling::Calc (this=0x4f0e00, line=0x1c224b0 ""ROOT::Internal::RDF::JitFilterHelper(R_rdf::lambda0, new const char*[1]{\""a\""}, 1, \""\"", reinterpret_cast<std::weak_ptr<ROOT::Detail::RDF::RJittedFilter>*>(0x21269a0), reinterpret_cast<std::shared_ptr<ROO""..., error=0x7fffffffcd0c) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3556; #71 0x00007ffff7fc97b3 in ROOT::Internal::RDF::InterpreterCalc(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocato",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:16091,optimiz,optimized,16091,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['optimiz'],['optimized']
Performance,); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62267/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62267/testReport/projectroot.roottest.cling/typedef_global/roottest_cling_typedef_global_scopeTest/); - [projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62267/testReport/projectroot.roottest.cling/typedef_global/roottest_cling_typedef_global_scopeTest2/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62267/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.io.abstractclass.roottest_root_io_abstractclass_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62267/testReport/projectroot.roottest.root.io/abstractclass/roottest_root_io_abstractclass_make/); - [projectroot.roottest.root.io.alloc.roottest_root_io_alloc_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62267/testReport/projectroot.roottest.root.io/alloc/roottest_root_io_alloc_make/); - [projectroot.roottest.cling.template.separateDict.roottest_cling_template_separateDict_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62267/testReport/projectroot.roottest.cling.template/separateDict/roottest_cling_template_separateDict_make/); - [projectroot.roottest.cling.template.separateDictNamespace.roottest_cling_template_separateDictNamespace_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/62267/testReport/projectroot.roottest.cling.template/separateDictNamespace/roottest_cling_templa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-507055005:1621,load,load,1621,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-507055005,1,['load'],['load']
Performance,); - [projectroot.roottest.root.io.event.roottest_root_io_event](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121338/testReport/projectroot.roottest.root.io/event/roottest_root_io_event/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121338/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make_CloneTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121338/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make_CloneTree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121338/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121338/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch_attr/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121338/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_ttree_branch](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121338/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_ttree_branch/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/121,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8429#issuecomment-870959546:1506,cache,cache,1506,https://root.cern,https://github.com/root-project/root/pull/8429#issuecomment-870959546,1,['cache'],['cache']
Performance,); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14281/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14281/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14281/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14281/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14281/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.roottest.root.collection.roottest_root_collection_runCATTreeClear_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14281/testReport/projectroot.roottest.root/collection/roottest_root_collection_runCATTreeClear_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14281/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_splitcoll_arrayview](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14281/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_splitcoll_arrayview/). A,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1468#issuecomment-352030199:1531,cache,cache,1531,https://root.cern,https://github.com/root-project/root/pull/1468#issuecomment-352030199,1,['cache'],['cache']
Performance,"); ==92602== by 0x441EF9B: TApplication::TApplication(char const*, int*, char**, void*, int) (TApplication.cxx:177); ==92602== by 0x40DC873: TRint::TRint(char const*, int*, char**, void*, int, bool) (TRint.cxx:147); ==92602== by 0x100011BF: main (rmain.cxx:80); ==92602== ; ==92602== Conditional jump or move depends on uninitialised value(s); ==92602== at 0x40E0FA8: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) (TStorage.h:132); ==92602== by 0x40E11A3: TObject::TObject() (TObject.h:245); ==92602== by 0x4438EB3: TNamed::TNamed() (TNamed.h:36); ==92602== by 0x44526DF: TDirectory::TDirectory() (TDirectory.cxx:47); ==92602== by 0x5FE37F3: TDirectoryFile::TDirectoryFile() (TDirectoryFile.cxx:61); ==92602== by 0x6005D3F: TFile::TFile(char const*, char const*, char const*, int) (TFile.cxx:317); ==92602== by 0x6066567: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) (TMemFile.cxx:114); ==92602== by 0x1134EF0F: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (TCling.cxx:1857); ==92602== by 0x11351253: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) (TCling.cxx:2308); ==92602== by 0x440DC1F: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) (TROOT.cxx:2558); ==92602== by 0x1BCD18FF: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() (G__Net.cxx:3623); ==92602",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:6551,Load,LoadPCM,6551,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['Load'],['LoadPCM']
Performance,"); at /home/vpadulan/Programs/rootproject/rootsrc/core/base/src/TSystem.cxx:737; #9 0x00007ffff7705827 in TUnixSystem::Unlink (this=0x45fa10, ; name=0x7fffc8034040 ""/home/vpadulan/Projects/rootcode/lock-tcling-unloadfile/load_unload_helpers_1_cpp_ACLiC_dict.h""); at /home/vpadulan/Programs/rootproject/rootsrc/core/unix/src/TUnixSystem.cxx:1674; #10 0x00007ffff7600b75 in TSystem::CompileMacro (this=0x45fa10, filename=0x7fffc8000ba0 ""load_unload_helpers_1.cpp"", opt=0x40909c ""g"", ; library_specified=0x40909b """", build_dir=0x40909b """", dirmode=0); ```; ```; (gdb) t 6; (gdb) bt; #12 0x00007ffff6e88301 in TFile::TFile (this=0x7fffce7f3370, ; fname1=0x7fffb8003ee0 ""/home/vpadulan/Projects/rootcode/lock-tcling-unloadfile/load_unload_helpers_4_cpp_ACLiC_dict_rdict.pcm"", ; option=0x7ffff120efbb ""READ"", ftitle=0x7ffff1209b59 """", compress=101) at /home/vpadulan/Programs/rootproject/rootsrc/io/io/src/TFile.cxx:380; #13 0x00007fffed25be48 in TCling::LoadPCM (this=0x54c9c0, ; pcmFileNameFullPath=""/home/vpadulan/Projects/rootcode/lock-tcling-unloadfile/load_unload_helpers_4_cpp_ACLiC_dict_rdict.pcm""); at /home/vpadulan/Programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1879; #14 0x00007fffed25db4e in TCling::RegisterModule (this=0x54c9c0, modulename=0x7ffff463b5a0 ""load_unload_helpers_4_cpp_ACLiC_dict"", ; headers=0x7ffff463d100 <(anonymous namespace)::TriggerDictionaryInitialization_load_unload_helpers_4_cpp_ACLiC_dict_Impl()::headers>, ; includePaths=0x7ffff463d120 <(anonymous namespace)::TriggerDictionaryInitialization_load_unload_helpers_4_cpp_ACLiC_dict_Impl()::includePaths>, ; payloadCode=0x7ffff463b498 ""\n#line 1 \""load_unload_helpers_4_cpp_ACLiC_dict dictionary payload\""\n\n#ifndef __ACLIC__\n #define __ACLIC__ 1\n#endif\n\n#define _BACKWARD_BACKWARD_WARNING_H\n// Inline headers\n#include \""load_unload_helpers""..., ; fwdDeclsCode=0x7ffff463b370 ""\n#line 1 \""load_unload_helpers_4_cpp_ACLiC_dict dictionary forward declarations' payload\""\n#pragma clang diagnostic ignored",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13348#issuecomment-1658918736:1698,Load,LoadPCM,1698,https://root.cern,https://github.com/root-project/root/pull/13348#issuecomment-1658918736,1,['Load'],['LoadPCM']
Performance,")>(this=0x0000000122753a28, __lock=0x00007fff5fbf5cf8, __pred=(anonymous class) @ 0x00007fff5fbf5e08)::'lambda'()) at condition_variable:211; frame #5: 0x0000000100f68857 libThread.so`ROOT::TReentrantRWLock<std::__1::mutex, ROOT::Internal::RecurseCounts>::ReadLock(this=0x00000001227539d8) at TReentrantRWLock.cxx:95; frame #6: 0x0000000100f5c719 libThread.so`ROOT::TRWMutexImp<std::__1::mutex, ROOT::Internal::RecurseCounts>::ReadLock(this=0x00000001227539d0) at TRWMutexImp.cxx:33; frame #7: 0x00000001000f52d1 libCore.so`ROOT::TReadLockGuard::TReadLockGuard(this=0x00007fff5fbf5f48, mutex=0x00000001227539d0) at TVirtualRWMutex.h:89; frame #8: 0x00000001000f275d libCore.so`ROOT::TReadLockGuard::TReadLockGuard(this=0x00007fff5fbf5f48, mutex=0x00000001227539d0) at TVirtualRWMutex.h:88; frame #9: 0x00000001002fcebf libCore.so`THashTable::FindObject(this=0x0000000100b0e120, name=""TGTextView"") const at THashTable.cxx:242; frame #10: 0x00000001003a67fd libCore.so`TClass::GetClass(name=""TGTextView"", load=true, silent=true) at TClass.cxx:2900; frame #11: 0x00000001003c9e16 libCore.so`TClass::InheritsFrom(this=0x0000000118fe1250, classname=""TGTextView"") const at TClass.cxx:4683; frame #12: 0x000000010024cb6e libCore.so`TObject::InheritsFrom(this=0x0000000126908de0, classname=""TGTextView"") const at TObject.cxx:445; frame #13: 0x000000011c03e47f libGCocoa.so`ROOT::MacOSX::X11::ViewIsTextView(viewID=116) at QuartzWindow.mm:899; frame #14: 0x000000011c03e518 libGCocoa.so`ROOT::MacOSX::X11::ViewIsTextView(view=0x0000000126908ee0) at QuartzWindow.mm:907; frame #15: 0x000000011c04706c libGCocoa.so`::-[QuartzView drawRect:](self=0x0000000126908ee0, _cmd=""drawRect:"", dirtyRect=(origin = (x = 0, y = 0), size = (width = 29, height = 21))) at QuartzWindow.mm:2728; frame #16: 0x00007fff934a4f99 AppKit`-[NSView _drawRect:clip:] + 2276; frame #17: 0x00007fff934f4f2f AppKit`-[NSView _recursiveDisplayAllDirtyWithLockFocus:visRect:] + 1753; frame #18: 0x00007fff934f539a AppKit`-[NSView _recursiveDi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573:4104,load,load,4104,https://root.cern,https://github.com/root-project/root/pull/1573,1,['load'],['load']
Performance,")’ [-Wsized-deallocation] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:367:6: warning: the program should also define ‘void operator delete [](void*, std::size_t)’ [-Wsized-deallocation] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30532/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30532/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30532/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30532/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30532/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30532/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30532/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-398616348:1715,cache,cache,1715,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-398616348,1,['cache'],['cache']
Performance,")’ [-Wsized-deallocation] ; - /mnt/build/jenkins/workspace/root-pullrequests-build/root/core/newdelete/src/NewDelete.cxx:367:6: warning: the program should also define ‘void operator delete [](void*, std::size_t)’ [-Wsized-deallocation] . ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31252/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31252/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31252/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31252/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31252/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_53410_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31252/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_53410_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/31252/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2217#issuecomment-400140098:1715,cache,cache,1715,https://root.cern,https://github.com/root-project/root/pull/2217#issuecomment-400140098,1,['cache'],['cache']
Performance,"* Decouple browsing and geometry drawing functionality; * Try to provide generic browsing module (server and client), using ui5 TreeTable; * Support partial and full loading of browsing structures (depending on size); * Support online and offline operations (later used for web snapshots); * Update JSROOT with latest three.js r102",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3648:166,load,loading,166,https://root.cern,https://github.com/root-project/root/pull/3648,1,['load'],['loading']
Performance,* I have refactored the existing methodDL tests to support testing various optimizers.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2379:75,optimiz,optimizers,75,https://root.cern,https://github.com/root-project/root/pull/2379,1,['optimiz'],['optimizers']
Performance,* Implement Adagrad Optimizer.; * Add Unit tests and MethodDL tests. Reference Implementation: [Tensorflow Adadelta Optimizer](https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/Adadelta),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2441:20,Optimiz,Optimizer,20,https://root.cern,https://github.com/root-project/root/pull/2441,3,"['Optimiz', 'optimiz']","['Optimizer', 'optimizers']"
Performance,* Implement Adagrad Optimizer.; * Add Unit tests and MethodDL tests. Reference Implementation: [Tensorflow Adagrad Optimizer](https://www.tensorflow.org/api_docs/python/tf/train/AdagradOptimizer),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2439:20,Optimiz,Optimizer,20,https://root.cern,https://github.com/root-project/root/pull/2439,2,['Optimiz'],['Optimizer']
Performance,* Implement Adam Optimizer.; * Add Unit tests and MethodDL tests. Reference Implementation: [Tensorflow Adam Optimizer](https://www.tensorflow.org/api_docs/python/tf/train/AdamOptimizer),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2438:17,Optimiz,Optimizer,17,https://root.cern,https://github.com/root-project/root/pull/2438,2,['Optimiz'],['Optimizer']
Performance,* Implement RMSProp Optimizer.; * Add Unit tests and MethodDL tests. Reference Implementation: [Tensorflow RMSProp Optimizer](https://www.tensorflow.org/api_docs/python/tf/train/RMSPropOptimizer),MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2440:20,Optimiz,Optimizer,20,https://root.cern,https://github.com/root-project/root/pull/2440,2,['Optimiz'],['Optimizer']
Performance,"* Mark (most) `RField` specializations as `final`; the only exception is `RField<std::array<ItemT, N>>` which is the base class of `RField<ItemT[N]>`.; * Mark (most) overriden functions in the `RFieldBase` hierarchy as final; the only exception is `RSimpleField::GenerateColumns` which is overriden by `RRealField`.; * Remove many duplicate implementations in the compile-time specialized classes: The reasoning is that we use the type-erased implementations with `RFieldBase::Create`, when reconstructing a model from disk, or when `Clone`ing a model. So if they are not performant, we have to fix them anyway. For completeness, there seems to be no performance change in the `iotools` benchmarks (with hot cache, to put emphasis on the RNTuple implementation).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16721:572,perform,performant,572,https://root.cern,https://github.com/root-project/root/pull/16721,3,"['cache', 'perform']","['cache', 'performance', 'performant']"
Performance,"* Optimize items height in SummaryView; * Use check boxes for fRnrSelf ; * Handle elements highlight in SummaryView in both directions; * Move GED functionality to separated controller and view file; * Provide ""Close"" button for GED; * Handle elements update also for SummaryView and GED",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4961:2,Optimiz,Optimize,2,https://root.cern,https://github.com/root-project/root/pull/4961,1,['Optimiz'],['Optimize']
Performance,"* Remove/hide unused items; * Provide commands to save ROOT, PS, C files; * Allow to perform TPad::Paint() for the case when TVirtualPS is used; * Include preliminary JSROOT 5.6.0 with bugfixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2822:85,perform,perform,85,https://root.cern,https://github.com/root-project/root/pull/2822,1,['perform'],['perform']
Performance,* This commit allows the compiler to potentially; inline/optimize construction of TObjects; * This is in particular important for data-objects; which are created billions of times and which inherit from; TObject,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/482:57,optimiz,optimize,57,https://root.cern,https://github.com/root-project/root/pull/482,1,['optimiz'],['optimize']
Performance,* failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e91bd360.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load ',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:26915,load,load,26915,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,* failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18789,load,load,18789,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,* failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18700496.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d33760ec.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e732ef10.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCAG2-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-securi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:22919,load,load,22919,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,* failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certific,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25746,load,load,25746,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"*) () from /home/rebrobles/root/lib/libCore.so.6.24; #16 0x00007ffa4ff0ba65 in TClass::AddRule(char const*) () from /home/rebrobles/root/lib/libCore.so.6.24; #17 0x00007ffa4ff0bd0f in (anonymous namespace)::ReadRulesContent(_IO_FILE*) () from /home/rebrobles/root/lib/libCore.so.6.24; #18 0x00007ffa4ff0c02c in TClass::ReadRules() () from /home/rebrobles/root/lib/libCore.so.6.24; #19 0x00007ffa4bf59475 in TCling::Initialize() () from /home/rebrobles/root/lib/libCling.so; #20 0x00007ffa50ab8c2f in TROOT::InitInterpreter() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #21 0x00007ffa50ab8ea0 in ROOT::Internal::GetROOT2() () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libCore.so.6.26; #22 0x00007ffa50dbacf0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /home/rebrobles/anaconda3/envs/my_root_env/bin/../lib/libcppyy_backend3_10.so.6.26; #23 0x00007ffa51cb6b8a in call_init (l=<optimized out>, argc=argc; entry=1, argv=argv; entry=0x7fff519cefe8, env=env; entry=0x55b069205280) at dl-init.c:72; #24 0x00007ffa51cb6c91 in call_init (env=0x55b069205280, argv=0x7fff519cefe8, argc=1, l=<optimized out>) at dl-init.c:30; #25 _dl_init (main_map=0x55b0692853c0, argc=1, argv=0x7fff519cefe8, env=0x55b069205280) at dl-init.c:119; #26 0x00007ffa51a6c895 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7ffa51cba2c0 <call_dl_init>, args=args; entry=0x7fff519cb890) at dl-error-skeleton.c:182; #27 0x00007ffa51cbb0bf in dl_open_worker (a=a; entry=0x7fff519cba40) at dl-open.c:758; #28 0x00007ffa51a6c838 in __GI__dl_catch_exception (exception=exception; entry=0x7fff519cba20, operate=operate; entry=0x7ffa51cbac10 <dl_open_worker>, args=args; entry=0x7fff519cba40) at dl-error-skeleton.c:208; #29 0x00007ffa51cba5fa in _dl_open (file=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", mode=-2147483646, caller_dlopen=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:3422,optimiz,optimized,3422,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"***********************************************************; Geant4 version Name: geant4-10-03-patch-03 [MT] (20-October-2017); << in Multi-threaded mode >> ; Copyright : Geant4 Collaboration; Reference : NIM A 506 (2003), 250-303; WWW : http://cern.ch/geant4; *************************************************************. Checking overlaps for volume NaI ... OK! ; Checking overlaps for volume collimator ... OK! ; Checking overlaps for volume glass ... OK! . *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f075f899687 in __GI___waitpid (pid=2927, stat_loc=stat_loc; entry=0x7ffd2902c628, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:30; #1 0x00007f075f804067 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:149; #2 0x00007f0765354577 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55935a0857c0) at /home/yasmin/root/root-6.12.06/core/unix/src/TUnixSystem.cxx:2118; #3 TUnixSystem::StackTrace (this=0x55935a0857c0) at /home/yasmin/root/root-6.12.06/core/unix/src/TUnixSystem.cxx:2412; #4 0x00007f0765356c9c in TUnixSystem::DispatchSignals (this=0x55935a0857c0, sig=kSigSegmentationViolation) at /home/yasmin/root/root-6.12.06/core/unix/src/TUnixSystem.cxx:3643; #5 <signal handler called>; #6 0x00007f0761bb4118 in G4RToEConvForGamma::BuildAbsorptionLengthVector(G4Material const*, G4PhysicsLogVector*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #7 0x00007f0761bb6c3f in G4VRangeToEnergyConverter::Convert(double, G4Material const*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #8 0x00007f0761bb0bee in G4ProductionCutsTable::UpdateCoupleTable(G4VPhysicalVolume*) () from /home/yasmin/CERN/geant4.10.03.p03-install/lib/libG4processes.so; #9 0x00007f0763b9c5e2 in G4RunManagerKernel::RunInitialization(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9952:1005,optimiz,optimized,1005,https://root.cern,https://github.com/root-project/root/issues/9952,1,['optimiz'],['optimized']
Performance,"********************; * 0 * 0 * 5 *; * 0 * 1 * 7 *; ***********************************; free(): invalid next size (fast); ```. ### Backtrace; ```; #0 0x00007ffff6674a4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6; #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6; #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6; #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 ; #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 ; #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 ; #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 ; #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 ; #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 ; #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 ; #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 ; #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 ; #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 ; #15 TROOT::EndOfProc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543:1562,optimiz,optimized,1562,https://root.cern,https://github.com/root-project/root/issues/9543,1,['optimiz'],['optimized']
Performance,"**Edit**: This patch fixes cxxmodule tests failure; GetListOfGlobalFunctions were fine, what failing modules test was GetListOfAllPublicMethods. Let's use GetMethodAny instead. Performance benchmark:; `rootbench-build/root/hist/hist/HistBenchmarks`; Release build, without modules, without this patch:; ```; ---------------------------------------------------------------; Benchmark Time CPU Iterations ; --------------------------------------------------------------- ; BM_TFormula_CreateEmpty 0 ns 0 ns 1000000000 ; BM_TFormula_Math_Sin 221061 ns 220326 ns 3118; BM_TFormula_Pow 19896 ns 19843 ns 34679 ; BM_TFormula_Std_Pow 262071 ns 261083 ns 2592 ; ```; Release build, without modules, with this patch:; ```; ---------------------------------------------------------------; Benchmark Time CPU Iterations; ---------------------------------------------------------------; BM_TFormula_CreateEmpty 0 ns 0 ns 1000000000; BM_TFormula_Math_Sin 197420 ns 196728 ns 3384; BM_TFormula_Pow 20003 ns 19949 ns 34502; BM_TFormula_Std_Pow 27867 ns 27778 ns 25631; ```; Memory benchmark:; `/usr/bin/time -v test/TFormulaTests 2>&1 | grep resident`; Release build, without modules, without this patch:; ```; Maximum resident set size (kbytes): 208144; ```; Release build, without modules, with this patch:; ```; Maximum resident set size (kbytes): 178772; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1821:177,Perform,Performance,177,https://root.cern,https://github.com/root-project/root/pull/1821,1,['Perform'],['Performance']
Performance,"**Edit:** After rebasing to current master, everything is fine (fixed the memory regulation). The port is rather straight forward, however, the tutorial `pyroot002_TTreeAsMatrix.py` fails during shutdown with following backtrace:. ```; #6 0x0000000004c6c270 in ?? (); #7 0x00007f958582abc0 in TClass::Destructor (this=0x4ae4ee0, obj=0x4c64ee0, dtorOnly=<optimized out>) at /home/stefan/root-dev/core/meta/src/TClass.cxx:5211; #8 0x00007f9579d01e7f in CPyCppyy::op_dealloc_nofree (pyobj=pyobj; entry=0x7f956c67acf8) at /home/stefan/root-dev/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPInstance.cxx:45; #9 0x00007f9579d01f69 in CPyCppyy::op_dealloc (pyobj=0x7f956c67acf8) at /home/stefan/root-dev/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPInstance.cxx:149; #10 0x00000000004f7592 in ?? (); #11 0x00000000004fc33a in _PyModule_Clear (); #12 0x00000000004fb9d3 in PyImport_Cleanup (); #13 0x00000000004f8e14 in Py_Finalize (); #14 0x00000000004938ec in Py_Main (); #15 0x00007f9586fd9830 in __libc_start_main (main=0x4934c0 <main>, argc=2, argv=0x7fffc2505518, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffc2505508) at ../csu/libc-start.c:291; #16 0x00000000004933e9 in _start (); ```. I've ported as well the tests, these are fine.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4293:354,optimiz,optimized,354,https://root.cern,https://github.com/root-project/root/pull/4293,4,['optimiz'],['optimized']
Performance,"**For reviewers**:; The most important commit is the first, and specifically the files; `RooAbsCategory.h, RooCategory.h`; The former is the base class of all categories, the latter the user-facing implementation. Here's what happened:; RooFit categories were using the class RooCatType (: public TObject); instead of an integer to represent category states.; This class contained an integer and a char[256] to store a category index; and a (possibly truncated) state name. This prevented fast batch access,; and increased the overhead for data storage and data loading. From now on, categories are represented as integers.; Every state can be denoted by index or name, but instead of storing; *both packed into an object* in each row of the dataset, only the index is stored, and the; mapping from index to state name is stored in the category instance. Since all the category classes were happily using the RooCatType, several; parts had to be touched to convert everything to using integers. This feature; has been cooking since March, and the interface for category classes was; discussed in the PPP, but nevertheless, have a double look at the above-mentioned; headers. In more detail:; - Replace RooCatType by an integer.; - Replace names saved in each row of dataset with RooCatType by a map in; RooAbsCategory that maps state names to numbers. This saves 64 bytes; + the size of TObject for each event, and makes loading strings in each; event unnecessary.; - Provide legacy iterator for iterating through states instances of; RooCatType, which will be created on the fly.; - Make RooVectorDataStore store integers instead of RooCatType instances.; - With this, also reduce the amount of unnecessary members in RooVectorDataStore.; - Outline functions that polluted the header of RooVectorDataStore. Updates for category interfaces:; - Provide new interfaces for categories to work without RooCatType.; - Add bracket operator and constructor arguments to define multiple; category states at on",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5502:562,load,loading,562,https://root.cern,https://github.com/root-project/root/pull/5502,1,['load'],['loading']
Performance,"**GitHub issue** that we still want to resolve before the v6.26.00 release:. - [x] https://github.com/root-project/root/issues/9372. **Other items** that still need to be done without any associated GitHub issue:. - [x] `Pythonizations`: write about new pythonizations in release notes; - [x] `RooFitHS3`: Write release notes; - [x] `RooFitHS3`: Put JSONInterface in `RooFit::Experimental` namespace; - [x] `Lagrangian morphing`: write about it in the release notes; - [x] `GlobalObservables`: write a tutorial about storing global observables in the datasets. **Other items** that are nice to have but can also be in **patch release**:. - [ ] `BatchMode`: Reduce overhead in RooFitDriver to achieve good evaluation time also for large computation graphs; - [ ] `BatchMode`: Implement the binned pdf optimization to speed up HistFactory fits; - [ ] `RooFitHS3`: Avoid having to import the default export keys from a file manually (e.g. like [here in the unit test](https://github.com/root-project/root/blob/master/roofit/hs3/test/testRooFitHS3.cxx#L47)). **Backports** that need to be made for the v6.26 branch (in this particular order from top to bottom, to not have a commit history too different from master):. - [x] https://github.com/root-project/root/pull/9478; - [x] https://github.com/root-project/root/pull/9504; - [x] https://github.com/root-project/root/pull/9458; - [x] https://github.com/root-project/root/pull/9553; - [x] https://github.com/root-project/root/pull/9447; - [x] https://github.com/root-project/root/pull/9552; - [x] https://github.com/root-project/root/pull/8784; - [x] https://github.com/root-project/root/pull/9177; - [x] https://github.com/root-project/root/pull/8595; - [x] https://github.com/root-project/root/pull/9444; - [x] https://github.com/root-project/root/pull/9456; - [x] https://github.com/root-project/root/pull/9640; - [x] https://github.com/root-project/root/pull/9482; - [x] https://github.com/root-project/root/pull/9690; - [x] https://github.com/root-",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9508:800,optimiz,optimization,800,https://root.cern,https://github.com/root-project/root/issues/9508,1,['optimiz'],['optimization']
Performance,"**Need**:. The need for a new evaluation metric for testing the convergence of the optimizer is essential. The already existing metric was maximumRelativeError() between two matrices which takes the maximum of all the relative errors between its individual elements. But the relative error between these elements depends on the element values. i.e. Relative error between a and b = abs(a-b)/(abs(a)+abs(b)). Let use consider 2 cases,. case a) If two values are a = 0.0001 , b = 0.0002, relative error = 0.3333; case b) If two values are a = 10.0001 b = 10.0002 relative error = 4.99992e-6 . Since the unit tests for optimizer is written in a way so that a sample 3 layer DNN will learn this function Y = K * X. So, If X = I ( Identity matrix ), then Y = K * I = K. This should be equivalent to the output of the trained DNN when I is feed as Input. Let Y' be the output of the trained DNN. So I need to compare the matrices K and Y' for approximate equality with a certain threshold. So If I use maximumRelativeError for comparing the approximate equality for two matrices, then even though the difference is small for two cases, the relative error is significantly different. So there is a need for a new evaluation metric.; ; **Goal**:. The goal of this PR is to implement new evaluation metric meanAbsoluteError() between two matrices which takes the mean of all the absolute errors of individual elements. Absolute error between a and b = abs(a-b). So both the cases described above will have the same absolute error. So I propose this would be a good choice of metric for comparing two matrices for approximate equality as needed for testing optimizers.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2376:83,optimiz,optimizer,83,https://root.cern,https://github.com/root-project/root/pull/2376,3,['optimiz'],"['optimizer', 'optimizers']"
Performance,**Performance results**; Ran all tests using ctest and compared the results of this PR and root master with -Druntime_cxxmodules=On and -Druntime_cxxmodules=Off. The results can be seen [here](https://docs.google.com/spreadsheets/d/12tZ_tmenR7fytcZpigfLOarNq1tIqPubTXWWMwz8lJg/edit?usp=sharing).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4016#issuecomment-512167496:2,Perform,Performance,2,https://root.cern,https://github.com/root-project/root/pull/4016#issuecomment-512167496,1,['Perform'],['Performance']
Performance,"**TLDR;** I repeated your tests with our environment, see below for the actual setup. Without the root file being opened, I get more preloaded dictionaries (119), but roughly the same memory footprint. Adding a ROOT file on the command line it adds an additional 60MB and I see SOFIE and PyMVA being loaded on demand (see also #13055). ### Long story:. You can set up the same environment by going to lxplus and doing:. ```bash; → ALIBUILD_ARCH_PREFIX=""Packages"" WORK_DIR=/cvmfs/alice.cern.ch/el7-x86_64 . /cvmfs/alice.cern.ch/el7-x86_64/Packages/ROOT/v6-28-04-9/etc/profile.d/init.sh; /cvmfs/alice.cern.ch/el7-x86_64/Packages/AliEn-Runtime/v2-19-le-136/etc/profile.d/init.sh:source:7: no such file or directory: /cvmfs/alice.cern.ch/el7-x86_64/Packages/ApMon-CPP/v2.2.8-alice5-40/etc/profile.d/init.sh; ```. You can safely ignore the ApMon message. Without the root file, I still see over one hundred preloaded, while ""on demand"" and the memory usage is roughly the same. ```bash; # eulisse at lxplus707.cern.ch in ~ [9:39:17]; → ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep Preloading | wc -l; 119. # eulisse at lxplus707.cern.ch in ~ [9:39:24]; → ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep 'on demand' | cut -d' ' -f 2 | sort | uniq | wc -l. 34. # eulisse at lxplus707.cern.ch in ~ [9:39:57]; → /usr/bin/time -v root.exe -l -b -q. Command being timed: ""root.exe -l -b -q""; User time (seconds): 0.22; System time (seconds): 0.26; Percent of CPU this job got: 62%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.78; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 139016; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 56647; Voluntary context switches: 5479; Involuntary context switches: 23; Swaps: 0; File system inputs: 0; File system outputs: 0; Socket messages sent: 0; Socket messages received:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1611006906:300,load,loaded,300,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1611006906,1,['load'],['loaded']
Performance,"**This migration is a great first issue for an enthusiastic open source contributor who wants to get started contributing to ROOT with a well-defined task!**. **This issue has already been addressed partially by many PRs, the only remaining iterator-creating function to look out for and replace is **`RooLinkedList::MakeIterator()`**!**. ## Introduction. RooFit needs to be migrated to use range-based loops to iterate over RooArgLists, RooArgSets, and RooLinkedLists. The [deprecated iterator-creating functions](https://github.com/root-project/root/blob/master/roofit/roofitcore/inc/RooAbsCollection.h#L178) `RooAbsCollection::createIterator()`, `RooAbsCollection::iterator()`, and `RooAbsCollection::fwdIterator()` have some overhead both is code verbosity and performance. For the RooLinkedList, the relevant function calls to replace are `RooLinkedList::MakeIterator()`, `RooLinkedList::iterator()`, and `RooLinkedList::fwdIterator()`. To do the migration, one could remove the deprecated functions from the code and try to recompile ROOT. From the compiler errors, one can see where a migration away from the legacy iterators is needed. Alternatively, one could mark the legacy functions as `[[deprecated]]` and get compiler warnings. If the iteration involved a type casting of each item, one can also use the `static_range_cast` and `dynamic_range_cast` functions in RooFit to make the code more compact (introduced in https://github.com/root-project/root/pull/8769). It is not expected that the full migration is done in one pull request, as these legacy iterations appear everywhere in RooFit. One can proceed with occasional PRs, migrating only one or a few RooFit classes at the time. ## Migration examples. Here are some examples on how the migration to range-based loops can look like. 1. Basic example:; ```C++; // with legacy iterator; TIterator* iter = comps->createIterator() ;; while((arg=(RooAbsArg*)iter->Next())) { ; // do something with arg; }; ```. ```C++; // with range-based",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8777:765,perform,performance,765,https://root.cern,https://github.com/root-project/root/issues/8777,1,['perform'],['performance']
Performance,**To do**. - [ ] gtest for support of non-copiable types in TDF+TDS; - [ ] gtest for support of non-default-constructible types in TDF+TDS; - [ ] gtests for multi-thread execution of TDF+TDS; - [x] add support for data-source columns in jitted actions,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/983#issuecomment-330487594:157,multi-thread,multi-thread,157,https://root.cern,https://github.com/root-project/root/pull/983#issuecomment-330487594,1,['multi-thread'],['multi-thread']
Performance,"*, %struct.dim3.463*, i64*, i8**); > ; > declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st.464*); > ; > ; Function Attrs: argmemonly nounwind; > declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1; > ; > define dso_local void @__cuda_register_globals(i8**) {; > %2 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void ()* @_Z7kernel2v to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null); > ret void; > }; > ; > declare dso_local i32 @__cudaRegisterFunction(i8**, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32*); > ; > declare dso_local i32 @__cudaRegisterVar(i8**, i8*, i8*, i8*, i32, i32, i32, i32); > ; > declare dso_local i8** @__cudaRegisterFatBinary(i8*); > ; > define dso_local void @__cuda_module_ctor_cling_module_6(i8*) {; > %2 = call i8** @__cudaRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__cuda_fatbin_wrapper to i8*)); > store i8** %2, i8*** @__cuda_gpubin_handle, align 8; > call void @__cuda_register_globals(i8** %2); > call void @__cudaRegisterFatBinaryEnd(i8** %2); > %3 = call i32 @atexit(void (i8*)* @__cuda_module_dtor_cling_module_6); > ret void; > }; > ; > declare dso_local void @__cudaRegisterFatBinaryEnd(i8**); > ; > declare dso_local void @__cudaUnregisterFatBinary(i8**); > ; > define dso_local void @__cuda_module_dtor_cling_module_6(i8*) {; > %2 = load i8**, i8*** @__cuda_gpubin_handle, align 8; > call void @__cudaUnregisterFatBinary(i8** %2); > ret void; > }; > ; > declare dso_local i32 @atexit(void (i8*)*); > ; > ; Function Attrs: nounwind; > declare void @llvm.stackprotector(i8*, i8**) #2; > ; > attributes #0 = { noinline uwtable ""correctly-rounded-divide-sqrt-fp-math""=""false"" ""disable-tail-calls""=""false"" ""less-precise-fpmad""=""false"" ""min-legal-vector-width""=""0"" ""no-frame-pointer-eli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164697687:23255,load,load,23255,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164697687,1,['load'],['load']
Performance,"+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:24221,optimiz,optimized,24221,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,", '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; The ROOT and GCC is from cvmfs (`juno.ihep.ac.cn`). ### Additional context; <!--; Add any other context about the problem here.; -->; <details>; <summary>GDB backtrace</summary>. ```; #0 0x00007ffff7f1e2c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2216c80) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #1 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2216c80) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #2 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x209f320, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #3 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #4 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #5 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x209f2f8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #6 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x209f2f8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #7 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:3015,optimiz,optimized,3015,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,", QTy=QTy; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:204; #9 0x00007f54c1df44cc in clang::CodeGen::CodeGenTBAA::getAccessInfo (this=0x55ed2cce0be0, AccessType=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:227; #10 0x00007f54c1d78b6b in clang::CodeGen::CodeGenModule::getTBAAAccessInfo (this=<optimized out>, AccessType=..., AccessType; entry=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:668; #11 0x00007f54c1f3a0aa in clang::CodeGen::CodeGenFunction::MakeAddrLValue (Source=clang::CodeGen::AlignmentSource::Type, T=..., Addr=..., this=0x7fffe1b042c0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenFunction.h:2126; #12 EmitDeclInit (DeclPtr=..., D=..., CGF=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:37; #13 clang::CodeGen::CodeGenFunction::EmitCXXGlobalVarDeclInit (this=0x7fffe1b042c0, D=..., DeclPtr=0x55ed2cd76b08, PerformInit=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:215; #14 0x00007f54c1f3ad90 in clang::CodeGen::CodeGenFunction::GenerateCXXGlobalVarDeclInitFunc (this=this; entry=0x7fffe1b042c0, Fn=0x55ed2cd76b78, D=0x55ed2ccd0f20, Addr=Addr; entry=0x55ed2cd76b08, PerformInit=PerformInit; entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:670; #15 0x00007f54c1f3b1c3 in clang::CodeGen::CodeGenModule::EmitCXXGlobalVarDeclInitFunc (this=this; entry=0x55ed2cce1280, D=<optimized out>, Addr=Addr; entry=0x55ed2cd76b08, PerformInit=PerformInit; entry=true) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481; #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this; entry=0x55ed2cce1280, D=<optimized out>, D; entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024; #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:3406,Perform,PerformInit,3406,https://root.cern,https://github.com/root-project/root/issues/9595,4,"['Perform', 'optimiz']","['PerformInit', 'optimized']"
Performance,", bufsize=1024, motherDir=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TKey.cxx:253; #25 0x00007ffff14842f5 in TFile::CreateKey (this=<optimized out>, mother=0x4305530, obj=0x4307c00, name=0x4307c19 ""T"", bufsize=1024); at /u/rlalik/hades/software/root-v5/io/io/src/TFile.cxx:960; --Type <RET> for more, q to quit, c to continue without paging--; #26 0x00007ffff147d464 in TDirectoryFile::WriteTObject (this=0x4305530, obj=0x4307c00, name=<optimized out>, option=<optimized out>, bufsize=0); at /u/rlalik/hades/software/root-v5/io/io/src/TDirectoryFile.cxx:1839; #27 0x00007fffefc092a2 in TTree::AutoSave (this=0x4307c00, option=<optimized out>) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:1249; #28 0x00007fffefc144fe in TTree::Fill (this=0x4307c00) at /u/rlalik/hades/software/root-v5/tree/tree/src/TTree.cxx:4262; #29 0x00007ffff37befd7 in Hades::eventLoop (this=0xee5c60, nEvents=nEvents@entry=1000000, firstEvent=firstEvent@entry=0, timeQuota=6e+21, timeQuota@entry=1e+20); at eventhandling/hades.cc:956; #30 0x0000000000406056 in analysisDST (inFile=..., outdir=..., nEvents=nEvents@entry=1000000, startEvt=startEvt@entry=0) at analysisDST.cc:512; #31 0x00000000004036ac in main (argc=<optimized out>, argv=0x7fffffffd178) at analysisDST.cc:547; (gdb); ```. ### To Reproduce; Custom code requires whole framework, hard to regenerate. ### Setup; 1. root@v5-34-00-patches (sorry that I still need to use root-5); 2. Operating system; ```; $ lsb_release -a; LSB Version: core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4.1-noarch; Distributor ID: Debian; Description: Debian GNU/Linux 8.11 (jessie); Release: 8.11; Codename: jessie; ```; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; From git as mentioned above.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:6735,optimiz,optimized,6735,https://root.cern,https://github.com/root-project/root/issues/9564,1,['optimiz'],['optimized']
Performance,", frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:27992,optimiz,optimized,27992,https://root.cern,https://github.com/root-project/root/issues/15970,8,['optimiz'],['optimized']
Performance,", in from_notebook_node; nb_copy, resources = self._preprocess(nb_copy, resources); File ""/usr/lib/python3/dist-packages/nbconvert/exporters/exporter.py"", line 316, in _preprocess; nbc, resc = preprocessor(nbc, resc); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 47, in __call__; return self.preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 405, in preprocess; nb, resources = super(ExecutePreprocessor, self).preprocess(nb, resources); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/base.py"", line 69, in preprocess; nb.cells[index], resources = self.preprocess_cell(cell, resources, index); File ""/usr/lib/python3/dist-packages/nbconvert/preprocessors/execute.py"", line 448, in preprocess_cell; raise CellExecutionError.from_cell_and_msg(cell, out); nbconvert.preprocessors.execute.CellExecutionError: An error occurred while executing the following cell:; ------------------; files = json.load(open(os.path.join(os.path.dirname(os.path.abspath(__file__)), ""df105_WBosonAnalysis.json""))); processes = files.keys(); df = {}; xsecs = {}; sumws = {}; samples = []; for p in processes:; for d in files[p]:; # Construct the dataframes; folder = d[0] # Folder name; sample = d[1] # Sample name; xsecs[sample] = d[2] # Cross-section; sumws[sample] = d[3] # Sum of weights; num_events = d[4] # Number of events; samples.append(sample); df[sample] = ROOT.RDataFrame(""mini"", ""{}/1lep/{}/{}.1lep.root"".format(dataset_path, folder, sample)). # Scale down the datasets if requested; if lumi_scale < 1.0:; df[sample] = df[sample].Range(int(num_events * lumi_scale)); ------------------. ---------------------------------------------------------------------------; NameError Traceback (most recent call last); <ipython-input-3-8b7fe3b1229a> in <module>; ----> 1 files = json.load(open(os.path.join(os.path.dirname(os.path.abspath(__file__)), ""df105_WBosonAnalysis.json""))); 2 processes = files.keys(); 3 df = {};",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10430#issuecomment-1106181358:2456,load,load,2456,https://root.cern,https://github.com/root-project/root/issues/10430#issuecomment-1106181358,1,['load'],['load']
Performance,", it looks; like this:. ```; struct NoBase {};. template <class T>; struct DataVectorBase; {; typedef NoBase Base;; };. // Specialized derived version.; template <class T, class BASE = typename DataVectorBase<T>::Base>; class DataVector : public BASE {...};. // Base class version.; template <class T>; class DataVector<T, NoBase> {...};; ```. where user classes then specialize the DataVectorBase class; (in practice, done via a macro). I've now finally bit the bullet and reduced one example of this such that; it does not depend on ATLAS software. The test case is attached. If github still isn't allowing be to attach; archives, i've also put a copy on lxplus at ~ssnyder/public/fwddict-crash.tar. The set up is against a nightly debug build of 6.28-patches:. ```; $ . ./setup; $ echo $ROOTSYS; /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sat/ROOT/v6-28-00-patches/x86_64-el9-gcc13-dbg; $ ./build.sh ; $ python -i test.py; python: /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-v6-28-00-patches/src/ROOT/v6-28-00-patches/interpreter/llvm/src/tools/clang/lib/Sema/SemaLookup.cpp:2165: bool clang::Sema::LookupQualifiedName(clang::LookupResult&, clang::DeclContext*, bool): Assertion `(!isa<TagDecl>(LookupCtx) || LookupCtx->isDependentContext() || cast<TagDecl>(LookupCtx)->isCompleteDefinition() || cast<TagDecl>(LookupCtx)->isBeingDefined()) && ""Declaration context must already be complete!""' failed.; *** Break *** abort; ```. The test script here is loading dictionaries from two separate libraries:. ```; getattr( ROOT, 'DataVector<TrackParticle_v1>', None ); getattr( ROOT, 'DataVector<Egamma_v1>', None ); ```. Either of these lines works by itself, but together they cause this crash. See https://its.cern.ch/jira/browse/ATEAM-942.; May also be related to https://sft.its.cern.ch/jira/browse/ROOT-10940. ### Reproducer. See above. ### ROOT version. v6-28-00-patches. ### Installation method. lcg. ### Operating system. lxplus9. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14186:2098,load,loading,2098,https://root.cern,https://github.com/root-project/root/issues/14186,1,['load'],['loading']
Performance,", it seems CI builds can not find the new file from graf2d/asimage/libAfterImage/:; ```; [ 86%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; Error: /github/home/ROOT-CI/src/graf2d/asimage/src/TASPngWriter.cxx:3:10: fatal error: afterrootpngwrite.h: No such file or directory; 3 | #include <afterrootpngwrite.h>; | ^~~~~~~~~~~~~~~~~~~~~; compilation terminated.; ```. I had to do `rm -rf AFTERIMAGE-prefix` in my build dir to have the cmake install the new files. Is it possible the CI builds do something different here?. The F39 CI build log only has [this](https://github.com/root-project/root/actions/runs/10090893760/job/27901286721?pr=15812#step:9:750):; ```; [ 0%] Built target AFTERIMAGE; ```; while mine has (grepped out AFTERIMAGE parts):; ```; [ 0%] Creating directories for 'AFTERIMAGE'; [ 2%] Performing download step for 'AFTERIMAGE'; [ 10%] No update step for 'AFTERIMAGE'; [ 12%] No patch step for 'AFTERIMAGE'; [ 16%] Performing configure step for 'AFTERIMAGE'; -- AFTERIMAGE configure command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-configure-*.log; [ 85%] Performing build step for 'AFTERIMAGE'; -- AFTERIMAGE build command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-build-*.log; [ 97%] Performing install step for 'AFTERIMAGE'; -- AFTERIMAGE install command succeeded. See also /home/matevz/root-dev/dev-1-bld/AFTERIMAGE-prefix/src/AFTERIMAGE-stamp/AFTERIMAGE-install-*.log; [ 97%] Completed 'AFTERIMAGE'; [ 97%] Built target AFTERIMAGE; [ 97%] Built target G__ASImage; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPluginGS.cxx.o; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASImage.cxx.o; [ 97%] Building CXX object graf2d/asimage/CMakeFiles/ASImage.dir/src/TASPngWriter.cxx.o; [ 97%] Linking CXX shared library ../../lib/libASImage.so; [ 97%] Built target ASImage; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2250921631:1177,Perform,Performing,1177,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2250921631,2,['Perform'],['Performing']
Performance,", libStem=..., permanent=<optimized out>, resolved=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:377; #45 0x00007fffee95d74a in TCling::Load (this=0x4f0e00, filename=0xa95fab0 ""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", system=true) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3477; #46 0x00007ffff67c18a2 in TSystem::Load (this=0x41b800, module=0xa95f920 ""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", entry=0x7fffedaa9527 """", system=true) at /home/jhahnfel/ROOT/llvm13/src/core/base/src/TSystem.cxx:1942; #47 0x00007fffee94ca44 in TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_3::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (LibName=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", this=<optimized out>); at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:6513; #48 TCling::LazyFunctionCreatorAutoload (this=<optimized out>, mangled_name=""_ZNSt11char_traitsIcE6lengthEPKc"") at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:6539; #49 0x00007fffeeacca15 in cling::IncrementalExecutor::NotifyLazyFunctionCreators (this=0x698d80, mangled_name=""_ZNSt11char_traitsIcE6lengthEPKc"") at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:195; #50 0x00007fffeead4997 in cling::HostLookupLazyFallbackGenerator::tryToGenerate (this=0x7fbc70, LS=..., K=<optimized out>, JD=..., JDLookupFlags=<optimized out>, Symbols=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:78; #51 0x00007fffefd8f246 in llvm::orc::ExecutionSession::OL_applyQueryPhase1 (this=this@entry=0xbcb8b0, IPLS=std::unique_ptr<llvm::orc::InProgressLookupState> = {...}, Err=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/C",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:10169,optimiz,optimized,10169,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['optimiz'],['optimized']
Performance,", name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:3500; #35 0x00007faf4b3ff88b in function_code_fastcall (co=<optimized out>, args=<optimized out>, nargs=2, globals=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/call.c:283; #36 0x00007faf4b430ef7 in _PyObject_Vectorcall (kwnames=0x0, nargsf=2, args=0x7ffdb628f800, callable=0x7faf298dbaf0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #37 method_vectorcall (method=<optimized out>, args=<optimized out>, nargsf=<optimized out>, kwnames=0x0); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/classobject.c:89; #38 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:9291,optimiz,optimized,9291,https://root.cern,https://github.com/root-project/root/issues/8578,1,['optimiz'],['optimized']
Performance,", self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:69; #23 CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(Cppyy::TCppMethod_t, Cppyy::TCppObject_t, CPyCppyy::CallContext*) (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:148; #24 0x00007f5b8deba4c9 in CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, this=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #25 0x00007f5b8debd3a8 in CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=0x55e75ccfd080, offset=0, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #26 0x00007f5b8debb6fa in CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=self entry=0x55e75ccfd080, offset=<optimized out>, ctxt=ctxt entry=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728; #27 0x00007f5b8debc46c in CPyCppyy::CPPMethod::Call(CPyCppyy::CPPInstance*&, _object*, _object*, CPyCppyy::CallContext*) (this=0x55e760617f50, self= 0x7f5b8080ef50: 0x7f5b808043c0, args=0x7f5b8e1ab040, kwds=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:783; #28 0x00007f5b8dec09fe in CPyCppyy::(anonymous namespace)::mp_call(CPyCppyy::CPPOverload*, PyObject*, PyObject*) (pymeth=0x7f5b8080ef40, args=0x7f5b8e1ab040, kwds=0x0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #29 0x00007f5b8e941333 in _PyObject_MakeTpCall () at /usr/lib/libpython3.9.so.1.0; #30 0x00007f5b8e93d218 in _PyEval_EvalFrameDefault () at /usr/lib/libpython3.9.so.1.0; #31 0x00007f5b8e936fd9 in () at /usr/lib/libpython3.9.so.1.0; #32 0x00007f5b8e948b8e in _PyFunction_Vectorcall () at /usr/lib/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:3154,optimiz,optimized,3154,https://root.cern,https://github.com/root-project/root/pull/9139,1,['optimiz'],['optimized']
Performance,", sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:2633,optimiz,optimized,2633,https://root.cern,https://github.com/root-project/root/issues/15799,3,['optimiz'],['optimized']
Performance,", sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:14947,optimiz,optimized,14947,https://root.cern,https://github.com/root-project/root/issues/15799,3,['optimiz'],['optimized']
Performance,", throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:26089,optimiz,optimized,26089,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,", tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f560, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #106 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594f560, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #107 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594f5f0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #108 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #109 0x000055f90878fbff in import_find_and_load (abs_name=0x7f1095149fb0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:26280,optimiz,optimized,26280,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,", version=0, isTransient=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/core/meta/src/TClass.cxx:4563; #14 0x00007f7919c70b29 in (anonymous namespace)::FixCollectionV5 (context=0x372fc40, oldClass=0x3a21c20, newClass=0x3a23a30) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1586; #15 0x00007f7919c76b47 in (anonymous namespace)::TMemberInfo::operator!= (this=0x7ffe32cab7e0, other=...) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:2690; #16 0x00007f7919c78fa0 in TStreamerInfo::CompareContent (this=0x30bc290, cl=0x372fc40, info=0x0, warn=false, complete=false, file=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:3058; #17 0x00007f7919c6ec4f in TStreamerInfo::BuildCheck (this=0x30bc290, file=0x2e19f80, load=true) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TStreamerInfo.cxx:1139; #18 0x00007f7919c2d155 in TFile::ReadStreamerInfo (this=0x2e19f80) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:3557; #19 0x00007f7919c20f28 in TFile::Init (this=0x2e19f80, create=false) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:823; #20 0x00007f7919c1f0ae in TFile::TFile (this=0x2e19f80, fname1=0x2a29630 ""simplest-53432.root"", option=0x7ffe32cac239 """", ftitle=0x7f791cfb8014 """", compress=101) at /build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.22.06/src/ROOT/v6.22.06/io/io/src/TFile.cxx:483; #21 0x00007f7919c2f8f4 in TFile::Open (url=0x7f791cfb8000 ""simplest-53432.root"", options=0x7f791cfb8014 """", ftitle=0x7f791cfb8014 """", compress=101, netopt=0) at /build/jenkins/workspace/lcg_r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7276:3278,load,load,3278,https://root.cern,https://github.com/root-project/root/issues/7276,1,['load'],['load']
Performance,- Added multi-class support for CUDA and CPU backend; - Added multi-class support to MethodDNN; - Switched floating point types to single precision for better performance; - Disabled log output in interactive mode; - Removed regularization contribution in loss computation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/282:159,perform,performance,159,https://root.cern,https://github.com/root-project/root/pull/282,1,['perform'],['performance']
Performance,"- Change implementation of next event. Simplify updates. Update summary tree on scene changes. - Optimize streaming. - Detect web-socket close and warn user (red rectangle in topbar). - Standalone THREE renderer:; - ortho camera, compositing, camera reset, key and mouse handling (own copy of OrbitController needed); - picking, highlight and tooltips; - selection and multiple selection. - Don't execute user input from main toolbar while scene changes are processing. - Add virtual function LocalModelChanges to controll model changes in the proxy builder. - Major cleanup of several JS classes. - New class REveEllipsod (error ellipse). - Support changing of outline colors for selection/highlight. - Review / improve REveData classes, esp. for selection and projections. - REveSelection, allow a list of selection upward propagation modes, not just a single one. - Validate expressions for table views, also, check TROOT::ProcessLine staus. - Cleanup some TEve-stlye change propagation / update functions. - Merge REveElement GetMaster() and ForwardSelection() through fSelectionMaster member. - Use REveAuntAsList in REveDataItem to communicate selection between proxy builders and REveDataItem. - Improve selection handling for compounds and multi-Objec3D representations.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4617:97,Optimiz,Optimize,97,https://root.cern,https://github.com/root-project/root/pull/4617,1,['Optimiz'],['Optimize']
Performance,- Code to support book multiple ml methods in the envelope class.; - A new class Classification to perform two class classification in the new architecture of TMVA.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1233:99,perform,perform,99,https://root.cern,https://github.com/root-project/root/pull/1233,1,['perform'],['perform']
Performance,- GetBranchNames is now a public method of RLoopManager; - fBranchNames is now RLoopManager::fValidBranchNames; - the first call to GetBranchNames evaluates the list of; valid branch names (expensive operation) and stores it; in fValidBranchNames. Subsequent calls simply return; the cached value; - code in RInterface has been simplified as a consequence. A test python application which booked O(100k) operations in situations where caching was not performed sees an improvement of the RDF setup time from 17s to 6s.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3025:284,cache,cached,284,https://root.cern,https://github.com/root-project/root/pull/3025,2,"['cache', 'perform']","['cached', 'performed']"
Performance,"- Move some RenderCore specific classes and all shaders into RenderCore source tree. - Implement all existing Three.js functionality with RenderCore. - In RenderCore, further improve on existing functionality:; - Textured points - arbitrary size and shape.; - Mesh lines - arbitrary thickness.; - Object and sub-object picking through color buffer with fragment depth detection.; - Camera handling like in TEve, with ability to pick rotation center. - The development branch has been squashed to hide redundant changes. Full history is available in PR osschar/root#41. ## C++ / Server Changes. - REveManager: Make RenderCore the default rendering engine. - Stream interpreter errors and show them in client log. - Add flag fIsRCore to REveManager. - Make REvePointSet secondary-selectable. - Add parameter for projection depth in REveDataCollection. ## JS / Client Changes. - Remove error MessageBox popup during client updates. - EveManager.js: Check change bits in ImportSceneBinary when scene changes are streamed. - EveScene.js: Optimize visibility changes. - EveScene.js: pass eve_element instead of object3d in cases where it simplifies the code. - EveScene.js, GlViewer classes: Cleamup highlite/selection management so it can be abstracted for RCore. - Separate viewer-side selection processing for Three / RCore. ## Tutorials / Demos Changes. - event_demo.C: secondary select points, jet title include pT. - Tune marker sizes, colors, visual parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11936:1033,Optimiz,Optimize,1033,https://root.cern,https://github.com/root-project/root/pull/11936,2,"['Optimiz', 'Tune']","['Optimize', 'Tune']"
Performance,"- Performing Test check_cxx_compiler_flag__mno_avx512bw - Success; -- Performing Test check_cxx_compiler_flag__mno_avx512ifma; -- Performing Test check_cxx_compiler_flag__mno_avx512ifma - Success; -- Performing Test check_cxx_compiler_flag__mno_avx512vbmi; -- Performing Test check_cxx_compiler_flag__mno_avx512vbmi - Success; -- Looking for VDT; -- Found Vdt: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/vdt/0.4.3/x86_64-centos7-gcc9-dbg/include (found suitable version ""0.4"", minimum required is ""0.4""); -- Cannot select cudnn without selecting cuda or tmva-gpu. Option is ignored; -- Looking for BLAS for optional parts of TMVA; -- Looking for Fortran sgemm; -- Looking for Fortran sgemm - not found; -- Looking for Fortran sgemm; -- Looking for Fortran sgemm - found; -- Found BLAS: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/blas/0.3.17.openblas/x86_64-centos7-gcc9-dbg/lib/libopenblas.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/bin/gcc; -- Could NOT find Z3: Found unsuitable version ""0.0.0"", but required is at least ""4.7.1"" (found Z3_LIBRARIES-NOTFOUND); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Could NOT find Python module pygments; -- Could NOT find Python module pygments.lexers.c_cpp; -- Could NOT find Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found PythonInterp: /build/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:15614,Perform,Performing,15614,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,2,['Perform'],['Performing']
Performance,"- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Failed; -- 315/786 tutorials have been vetoed for various reasons; -- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH.; -- Check for bitness: Found 64 bit architecture.; -- Scanning subdirectories for tests...; -- Configuring done; -- Generating done; -- Build files have been written to: /home/performance-test/build_master; performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx ; 103 warnings generated.; /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]; buffer.release();; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning; /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]; if (optmode == EMode::kRecreate) mode |= O_TRUNC;; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read; /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]; fD = SysOpen(path, O_RDWR | O_CREAT, 0644);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch; if (NeedsToWrite(optmode)) {; ^; /home/performance-test/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3891#issuecomment-502686211:2994,perform,performance-test,2994,https://root.cern,https://github.com/root-project/root/pull/3891#issuecomment-502686211,1,['perform'],['performance-test']
Performance,"- Success; -- Performing Test check_cxx_compiler_flag__fabi_version_0; -- Performing Test check_cxx_compiler_flag__fabi_version_0 - Success; -- Performing Test check_cxx_compiler_flag__fabi_compat_version_0; -- Performing Test check_cxx_compiler_flag__fabi_compat_version_0 - Success; -- Performing Test check_cxx_compiler_flag__ffp_contract_fast; -- Performing Test check_cxx_compiler_flag__ffp_contract_fast - Success; -- target changed from """" to ""auto""; -- Detected CPU: broadwell; -- Performing Test check_cxx_compiler_flag__march_broadwell; -- Performing Test check_cxx_compiler_flag__march_broadwell - Success; -- Performing Test check_cxx_compiler_flag__msse2; -- Performing Test check_cxx_compiler_flag__msse2 - Success; -- Performing Test check_cxx_compiler_flag__msse3; -- Performing Test check_cxx_compiler_flag__msse3 - Success; -- Looking for C++ include pmmintrin.h; -- Looking for C++ include pmmintrin.h - found; -- Performing Test check_cxx_compiler_flag__mssse3; -- Performing Test check_cxx_compiler_flag__mssse3 - Success; -- Looking for C++ include tmmintrin.h; -- Looking for C++ include tmmintrin.h - found; -- Performing Test check_cxx_compiler_flag__msse4_1; -- Performing Test check_cxx_compiler_flag__msse4_1 - Success; -- Looking for C++ include smmintrin.h; -- Looking for C++ include smmintrin.h - found; -- Performing Test check_cxx_compiler_flag__msse4_2; -- Performing Test check_cxx_compiler_flag__msse4_2 - Success; -- Performing Test check_cxx_compiler_flag__mavx; -- Performing Test check_cxx_compiler_flag__mavx - Success; -- Looking for C++ include immintrin.h; -- Looking for C++ include immintrin.h - found; -- Performing Test check_cxx_compiler_flag__mfma; -- Performing Test check_cxx_compiler_flag__mfma - Success; -- Performing Test check_cxx_compiler_flag__mbmi2; -- Performing Test check_cxx_compiler_flag__mbmi2 - Success; -- Performing Test check_cxx_compiler_flag__mavx2; -- Performing Test check_cxx_compiler_flag__mavx2 - Success; -- Performing Te",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:12467,Perform,Performing,12467,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,2,['Perform'],['Performing']
Performance,"- Toggles the use of the dynamic scopes; 				 and the late binding. .debug <level>		- Generates debug symbols (level is optional, 0 to disable). .printDebug [0|1]		- Toggles the printing of input's corresponding; 				 state changes. .storeState <filename>	- Store the interpreter's state to a given file. .compareState <filename>	- Compare the interpreter's state with the one; 				 saved in a given file. .stats [name]		- Show stats for internal data structures; 				 'ast' abstract syntax tree stats; 				 'asttree [filter]' abstract syntax tree layout; 				 'decl' dump ast declarations; 				 'undo' show undo stack. .T <filePath> <comment>	- Generate autoload map. .trace <repr> <id>		- Dump trace of requested respresentation; 				 (see .stats arguments for <repr>). .help			- Shows this information (also .?). .q				- Exit the program. ROOT special commands.; ===============================================================================; .L <filename>[flags]: load the given file with optional flags like; + to compile or ++ to force recompile.; Type .? TSystem::CompileMacro for a list of all flags.; .(x|X) <filename>[flags](args) :; same as .L <filename>[flags] and runs then a function; with signature: ret_type filename(args).; .credits : show credits; .demo : launch GUI demo; .help Class::Member : open reference guide for that class member (or .?).; Specifying '::Member' is optional.; .help edit : show line editing shortcuts (or .?); .license : show license; .ls : list contents of current TDirectory; .pwd : show current TDirectory, pad and style; .quit (or .exit) : quit ROOT (long form of .q); .R [user@]host[:dir] [-l user] [-d dbg] [script] :; launch process in a remote host; .qqq : quit ROOT - mandatory; .qqqqq : exit process immediately; .qqqqqqq : abort process; .which [file] : show path of macro file; .![OS_command] : execute OS-specific shell command; .!root -? : print ROOT usage (CLI options); ```. ```; root [1] .? edit. ROOT terminal keyboard shortcuts (GNU-readli",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10121#issuecomment-1084927674:2884,load,load,2884,https://root.cern,https://github.com/root-project/root/pull/10121#issuecomment-1084927674,2,['load'],['load']
Performance,- Upgrade builtin tbb to 2019 and require at least 2018; - Isolate work in TThreadedExecutor; - Add test for concurrency in RDF,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2955:109,concurren,concurrency,109,https://root.cern,https://github.com/root-project/root/pull/2955,1,['concurren'],['concurrency']
Performance,"- Using directly ROOTSYS for roottest.git is under deprecation, please add ROOT in PATH.; -- Check for bitness: Found 64 bit architecture.; -- Scanning subdirectories for tests...; -- Configuring done; -- Generating done; -- Build files have been written to: /home/performance-test/build_master; performance-test@vv-nuc ~/build_master $ clang-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx ; 103 warnings generated.; /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]; buffer.release();; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning; /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]; if (optmode == EMode::kRecreate) mode |= O_TRUNC;; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read; /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]; fD = SysOpen(path, O_RDWR | O_CREAT, 0644);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch; if (NeedsToWrite(optmode)) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch; if (optmode == EMode::kRecreate) mode |= O_TRUNC;; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called; fD = SysOpen(path, O_RDWR | O_CREAT, 0644);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction; /home/performance-test/src_master/io/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3891#issuecomment-502686211:3534,perform,performance-test,3534,https://root.cern,https://github.com/root-project/root/pull/3891#issuecomment-502686211,1,['perform'],['performance-test']
Performance,"- When the LLVM_BUILD_TYPE is Release, but the CXX_FLAGS are empty, a; warning is issued.; - When configuring, fix the order in which compiler flags are printed. This is the issue mentioned on mattermost. Axel proposed to issue a warning in this case. The question is if this warning catches all cases where build types might be set up wrongly or if the `CMAKE_CXX_FLAGS_${LLVM_BUILD_TYPE}` should be tested.; I also fixed the order in which the compiler flags are printed. I didn't get to this before cache-variable PR where I promised to do this got merged.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4243:502,cache,cache-variable,502,https://root.cern,https://github.com/root-project/root/pull/4243,1,['cache'],['cache-variable']
Performance,"- [ X] Checked for duplicates. ### Describe the bug. Right now JupyROOT/helpers/utils.py checks if it is in a jupyterlab environment by checking if requirejs exists. ; However, jupyterhub/jupyterlab 3.0 loads requirejs so that the check gets bypassed. ### Expected behavior. Jupyterhub/jupyterlab should load in the scripts/JSRoot.core.js file not does not. ### To Reproduce. Run jsroot in jupyterlab/jupyterhub 3.0. ### Setup. Root 6.22.08. ### Additional context; <!--; Add any other context about the problem here.; -->",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8459:203,load,loads,203,https://root.cern,https://github.com/root-project/root/issues/8459,2,['load'],"['load', 'loads']"
Performance,"- [ X] Checked for duplicates. Dear All,; as discussed in a previous [issue](https://github.com/root-project/root/issues/7890), we have observed an increase in the memory when method GetInterval of the HypoTestInverter is called (see for example this [slide](https://docs.google.com/presentation/d/1hpDIabM3pMOvooI2TH3hen0YpVy74YCg9XUNNw5prvk/edit?usp=sharing). I've prepared a small example using root 6.22/00 on centos 3.10.0-1160.42.2.el7.x86_64, where I've only one bkg and one dummy signal sample, and I've performed an upper-limit scan with 10k toys (the workspace and .C file used for this test can be found [here](https://cernbox.cern.ch/index.php/s/FOxntIggyp89tt0).; As you can see from the picture below (it's a vimdiff of 3 different outputs of pmap), the allocated memory is increasing with the time (from the left to the right). I've also checked that for pmap the majority of this memory is flagged as dirty. ; ![image](https://user-images.githubusercontent.com/80854397/139116392-29e8cadb-1f6d-4552-ba1b-c25d185f05d8.png); Is there any way to limit the increase in memory? . Best,; Luigi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9196:512,perform,performed,512,https://root.cern,https://github.com/root-project/root/issues/9196,1,['perform'],['performed']
Performance,"- [ ] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->; Trying to load the plugin for a module that was not compiled returns 0 (success value); ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; Return the failure value (-1 ?). ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->; ```; root [1] gROOT->GetPluginManager()->FindHandler(""TVirtualGeoConverter"")->LoadPlugin(); Module ConverterVG not found.; Error in <TCling::LoadPCM>: ROOT PCM /Users/agheata/root/root_install/lib/libConverterVG_rdict.pcm file does not exist; ... long list of PCM's tried by LoadPCM; (int) 0; ```. ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->; Tested with master branch on Monterey MacBook Air (M1, 2020), compiled from source. ### Additional context; <!--; Add any other context about the problem here.; -->; The same code on my Ubuntu 22.04 returns correctly -1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12326:468,load,load,468,https://root.cern,https://github.com/root-project/root/issues/12326,4,"['Load', 'load']","['LoadPCM', 'LoadPlugin', 'load']"
Performance,- [X] Checked for duplicates. ### Describe the bug; Setting `TChain::SetImplicitMT()` does not apply the setting to the underlying trees. ### Expected behavior; A call to `TChain::SetImplicitMT()` should influence current and future (`TChain::LoadTree`) backing trees. ### Additional context; Discussed in the I/O MM channel.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8720:243,Load,LoadTree,243,https://root.cern,https://github.com/root-project/root/issues/8720,1,['Load'],['LoadTree']
Performance,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; <!--; A clear and concise description of what the wrong behavior is.; -->. Calling `CompileMacro(""macro.C"", ""gO"")` only adds debug flags, not optimization flags. This is surprising as it is not the behavior of compilers (passing both `-g` and `-O2` is fine) and the lack of optimization is completely invisible to most users. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->. Compilers allow debug and optimization flags leaving side by side without issues, `CompileMacro` should do the same. . ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. Calling `CompileMacro(""macro.C"", ""fO"")` with a high enough `gDebug` value shows the problem. ### Additional context; <!--; Add any other context about the problem here.; -->. I found an [old jira ticket](https://sft.its.cern.ch/jira/browse/ROOT-5803) where @pcanal suggests to use this behavior as a feature, explicitly passing ""g"" to disable optimizations in a case where they were not desired.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7377:525,optimiz,optimization,525,https://root.cern,https://github.com/root-project/root/issues/7377,4,['optimiz'],"['optimization', 'optimizations']"
Performance,"- [X] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; See [forum post](https://root-forum.cern.ch/t/dictionary-generation-fails-for-partial-template-specialization/43922) for details and a reproducer. ### Expected behavior; Loading the dictionary in the ROOT prompt should not fail. ### To Reproduce; 1. Follow instructions in the forum post to build the dictionary.; 2. Open ROOT; 3. `.L libdict.so`. ### Setup; ROOT master build on Arch Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7470:553,Load,Loading,553,https://root.cern,https://github.com/root-project/root/issues/7470,1,['Load'],['Loading']
Performance,- [projectroot.roottest.root.meta.roottest_root_meta_assertVarOffset_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100455/testReport/projectroot.roottest.root/meta/roottest_root_meta_assertVarOffset_auto/); - [projectroot.roottest.root.meta.dictSelection.roottest_root_meta_dictSelection_execAtlasTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100455/testReport/projectroot.roottest.root.meta/dictSelection/roottest_root_meta_dictSelection_execAtlasTest2/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100455/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.dict.ROOT-9112.roottest_cling_dict_ROOT_9112_ROOT9112](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100455/testReport/projectroot.roottest.cling.dict/ROOT-9112/roottest_cling_dict_ROOT_9112_ROOT9112/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100455/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100455/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.selectorreader.roottest_root_tree_selectorreader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100455/testReport/projectroot.roottest.root.tree/selectorreader/roottest_root_tree_selectorreader_make/); - [projectroot.roottest.root.treeformula.evolution.roottest_root_treeformula_evolution_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/100455/testReport/projectroot.roottest.root.treeformula/evolution/roottest_root_treeformula_evolution_make/). And 8 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-718602251:3549,cache,cache,3549,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-718602251,2,['cache'],['cache']
Performance,"- [x] Checked for duplicates. ### Describe the bug. Having the environment variable `MACOSX_DEPLOYMENT_TARGET` set to a value of 11 or higher (suitable for macOS Big Sur or newer) causes `rootcling` to fail at runtime. Because rootcling is used as part of the installation process itself, the environment will cause a ROOT build to fail. See https://github.com/spack/spack/issues/28161 . ### Expected behavior. ```console; $ touch foo.h; $ rootcling -v2 -f foo.cxx foo.h; Warning: Unused class rule: foo; ```. ### To Reproduce. ```console; $ touch foo.h; $ export MACOSX_DEPLOYMENT_TARGET=11 # or 11.3 or ...; $ rootcling -v2 -f foo.cxx foo.h; error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'; error: invalid version number in 'MACOSX_DEPLOYMENT_TARGET=11'; Error: Parsing #pragma failed in memory; Warning: Unused class rule: foo; ```. ### Setup; ```; $ rootcling --version; LLVM (http://llvm.org/):; LLVM version 9.0.1; Optimized build with assertions.; Default target: x86_64-apple-darwin20.6.0; Host CPU: skylake; ```. Installed with Spack on macOS 11:; ```; ""Configure options : -Dcxxmodules:BOOL=OFF -Dexceptions:BOOL=ON -Dexplicitlink:BOOL=ON -Dfail-on-missing:BOOL=ON -Dfortran:BOOL=OFF -Dgminimal:BOOL=ON -Dgnuinstall:BOOL=OFF -Dlibcxx:BOOL=OFF -Dpch:BOOL=ON -Droottest:BOOL=OFF -Drpath:BOOL=ON -Druntime_cxxmodules:BOOL=OFF -Dshared:BOOL=ON -Dsoversion:BOOL=ON -Dtesting:BOOL=OFF -Dthread:BOOL=ON -DCLING_CXX_PATH:STRING=/usr/bin/clang++ -Dbuiltin_afterimage:BOOL=OFF -Dbuiltin_cfitsio:BOOL=OFF -Dbuiltin_davix:BOOL=OFF -Dbuiltin_fftw3:BOOL=OFF -Dbuiltin_freetype:BOOL=OFF -Dbuiltin_ftgl:BOOL=OFF -Dbuiltin_gl2ps:BOOL=OFF -Dbuiltin_glew:BOOL=OFF -Dbuiltin_gsl:BOOL=OFF -Dbuiltin_llvm:BOOL=ON -Dbuiltin_lz4:BOOL=OFF -Dbuiltin_lzma:BOOL=OFF -Dbuiltin_nlohmannjson:BOOL=OFF -Dbuiltin_openssl:BOOL=OFF -Dbuiltin_pcre:BOOL=OFF -Dbuiltin_tbb:BOOL=OFF -Dbuiltin_unuran:BOOL=OFF -Dbuiltin_vc:BOOL=OFF -Dbuiltin_vdt:BOOL=OFF -Dbuiltin_veccore:BOOL=OFF -Dbuiltin_xrootd:BOOL=OFF -Dbuilti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9524:936,Optimiz,Optimized,936,https://root.cern,https://github.com/root-project/root/issues/9524,1,['Optimiz'],['Optimized']
Performance,"- [x] Checked for duplicates. ### Describe the bug. SOFIE-converted models written out as `.hxx` header files do not have include guards. This causes problems when potentially loading the same model more than once, e.g. when creating several RDF graphs to process different samples in the same process.; While it is easy to add header guards manually (passing `#ifndef ...\n#define...\n#include...\n#endif` to `gInterpreter.Declare`), it would more user-friendly if they were directly included in the generated headers. ### To Reproduce; E.g. in [this tutorial](https://root.cern.ch/doc/master/TMVA__SOFIE__RDataFrame_8py.html), run `ROOT.gInterpreter.Declare('#include ""' + generatedFile + '""')` twice. ### Setup. 1. ROOT version: `master`; 2. Operating system: CentOS7; 3. How you obtained ROOT: LCG dev3 nightly. ### Additional context. I'm happy to try to make a PR with a fix if you think it makes sense.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10586:176,load,loading,176,https://root.cern,https://github.com/root-project/root/issues/10586,1,['load'],['loading']
Performance,"- [x] Checked for duplicates. ### Describe the bug. When I crash with `-fsanitize=thread` enabled at compile time, I get:. ```; ==1587==WARNING: Can't read from symbolizer at fd 28; ```. and then it hangs in:. ```; * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP; frame #0: 0x00007fff2040789e libsystem_kernel.dylib`read + 10; frame #1: 0x000000011093d155 libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::ReadFromFile(int, void*, unsigned long, unsigned long*, int*) + 21; frame #2: 0x000000011094797c libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::SymbolizerProcess::ReadFromSymbolizer(char*, unsigned long) + 60 frame #3: 0x0000000110947668 libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::SymbolizerProcess::SendCommand(char const*) + 232; frame #4: 0x0000000110947e9c libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::AtosSymbolizer::SymbolizePC(unsigned long, __sanitizer::SymbolizedStack*) + 92 frame #5: 0x00000001109464fa libclang_rt.tsan_osx_dynamic.dylib`__sanitizer::Symbolizer::SymbolizePC(unsigned long) + 138 frame #6: 0x0000000110992ece libclang_rt.tsan_osx_dynamic.dylib`__tsan::SymbolizeStack(__sanitizer::StackTrace) + 94; frame #7: 0x000000011099318e libclang_rt.tsan_osx_dynamic.dylib`__tsan::ScopedReportBase::AddStack(__sanitizer::StackTrace, bool) + 46 frame #8: 0x000000011097e64f libclang_rt.tsan_osx_dynamic.dylib`__tsan::SignalUnsafeCall(__tsan::ThreadState*, unsigned long) + 287 frame #9: 0x000000011097e76a libclang_rt.tsan_osx_dynamic.dylib`__tsan::user_free(__tsan::ThreadState*, unsigned long, void*, bool) + 234; frame #10: 0x000000011097c441 libclang_rt.tsan_osx_dynamic.dylib`wrap_free + 113 frame #11: 0x0000000134b3a45b libCling.6.22.06.so`clang::ASTReader::makeModuleVisible(clang::Module*, clang::Module::NameVisibilityKind, clang::SourceLocation) + 939; frame #12: 0x00000001348dc772 libCling.6.22.06.so`clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::__1::pair<clang::IdentifierInfo*, clang::SourceLocati",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7418:228,queue,queue,228,https://root.cern,https://github.com/root-project/root/issues/7418,1,['queue'],['queue']
Performance,"- [x] Checked for duplicates. ### Describe the bug. `TTreeCacheUnzip::GetUnzipBuffer()` does a binary search on `fSeekSort` and uses the return value in the loop that follows:. https://github.com/root-project/root/blob/412b2e8d829ee0a378b2aeb407505b2dcbb2595e/tree/tree/src/TTreeCacheUnzip.cxx#L694. This assumes that `fSeekSort` is sorted and stable. Neither assumption is safe in a multi-threaded program with prefetching enabled. This can lead to corruption of the `fSeekSort` array when prefetching calls the `sort()` method while `GetUnzipBuffer()` is searching for a block. The call paths to the `sort()` method go through `TTreeCacheUnzip::ReadBufferExt()`, which locks `fIOMutex`. To work with prefetching enabled, `TTreeCacheUnzip::UnzipBuffer()` needs to lock `fIOMutex` in the sections where it needs `fSeekSort` to be stable, and reacquire the block location after any sections where the mutex isn't held. This looks to be non-trivial. ### Expected behavior. `TTreeCacheUnzip` should work with prefetching without crashing. ### To Reproduce. Non-trivial, but I can supply a CMSSW recipe if necessary. ### Setup. 1. CMS ROOT6 master from CMSSW_12_3_ROOT6_X_2022-03-06-2300; 2. slc7_amd64_gcc10; 3. CMS CMSSW_12_3_ROOT6_X_2022-03-06-2300 in cvmfs. ### Additional context. We were hoping to use `TTreeCacheUnzip` as a way to increase parallelism in the CMS `PoolInputSource`, but this looks to be a blocker for that use.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10095:384,multi-thread,multi-threaded,384,https://root.cern,https://github.com/root-project/root/issues/10095,1,['multi-thread'],['multi-threaded']
Performance,"- [x] Checked for duplicates. ### Describe the bug; Calling `RNTupleReader::Show()` on an instance where the model is generated from ntuple metadata on storage yields an empty JSON output.; However, as can be seen below, calling `LoadEntry()` triggers model generation from the ntuple descriptor and the following `Show()` call produces the expected output. This results in surprising behaviour. ```c++; root [] auto ntuple = ROOT::Experimental::RNTupleReader::Open(“ntuple”, “/tmp/out.ntuple”);; root [] ntuple->Show(0);; {}; root [] ntuple->LoadEntry(0);; root [] ntuple->Show(0);; {; “i”: 42,; “f”: 12.2313; }; ```. ### Expected behavior; If `LoadEntry()` generates the model from the ntuple descriptor, most probably `Show()` should also do it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12031:230,Load,LoadEntry,230,https://root.cern,https://github.com/root-project/root/issues/12031,3,['Load'],['LoadEntry']
Performance,"- [x] Checked for duplicates. ### Describe the bug; Cling symbol `cling::runtime::internal::LifetimeHandler` may need to be explicitly exported from shared library on windows. Define a function with function call (`sqrt` in my scenario) in interactive mode.; Use it to initialize a `TF1`; nightly 6.27.01 outputs following:; (6.26.00 release crash immediately); ```; IncrementalExecutor::executeFunction: symbol '??0LifetimeHandler@internal@runtime@cling@@QAE@PAVDynamicExprInfo@123@PAVDeclContext@clang@@PBDPAVInterpreter@3@@Z' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'!; You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::LifetimeHandler(class cling::runtime::internal::DynamicExprInfo *,class clang::DeclContext *,char const *,class cling::Interpreter *); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '??1LifetimeHandler@internal@runtime@cling@@QAE@XZ' unresolved while linking function '_GLOBAL__sub_I_cling_module_16'!; You are probably missing the definition of public: __thiscall cling::runtime::internal::LifetimeHandler::~LifetimeHandler(void); Maybe you need to load the corresponding shared library?; ```; Then call `TF1::Draw()` on it (if 6.27.01), and see interpreter dump stacktrace. Problem not present in script mode. Compiling with `.L test.cpp+` fails, but that seems irrelevant. Without `sqrt` math function interpreter works (function returing 0 immediately).; ### Expected behavior; `TF1` initialized with function pointer. ### To Reproduce; Detailed in description section. ### Setup; root nightly 6.27.01 32 bit and 64 bit; root release 6.26.00 32 bit; windows 64 bit os; installed from [nightly repo](https://root.cern/download/nightly/) and the release page binary. ### Additional context; Should be enough.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10452:856,load,load,856,https://root.cern,https://github.com/root-project/root/issues/10452,2,['load'],['load']
Performance,"- [x] Checked for duplicates. ### Describe the bug; I have a PDF class implemented in C++ that I want to use in a python script through `ROOT.gSystem.CompileMacro()`. It is unreasonably slow to load each time, O(minutes). When running with `""kO""` option it is better, but still long - too long for normal usage - whereas it should be instantaneous, if I understand correctly. I have tested ROOT 6.22 and with nightlies, and nightlies are even slower. The time for a first compilation, so how long it's processing the line `Info in <TUnixSystem::ACLiC>: creating shared library /afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so`, for running a script and directly the CompileMacro command in ipython:; | Version | py file | ipython |; | --- | --- | --- |; |Nightlies | 3m25s | 1m55s |; |6.22 | 1m35s | 1m05s|. The run time with `""kO""` option for the 2nd iteration of running, once binaries are created:; | Version | py file |; | --- | --- | ; |Nightlies | 1m15s | ; |6.22 | 0m30s | . All above times are on same lxplus machine. Between different lxplus machines the timing changes, but at best e.g from 30s down to 20s. Another test for how much time has elapsed e.g.:; ```sh; for version in /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh ; do (; source $version;; echo $version;; root --version -q; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'fO')"" 2>&1 | grep user.*system;; /usr/bin/time python3 -c ""import ROOT; ROOT.gSystem.CompileMacro('~tnanut/public/Stephan/RooThreshold.cpp', 'O')"" 2>&1 | grep user.*system); done; ```. Output:; ```; /cvmfs/sft.cern.ch/lcg/views/LCG_99/x86_64-centos7-gcc10-opt/setup.sh; ROOT Version: 6.22/06; Built for linuxx8664gcc on Nov 27 2020,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774:194,load,load,194,https://root.cern,https://github.com/root-project/root/issues/7774,1,['load'],['load']
Performance,"- [x] Checked for duplicates. ### Describe the bug; When root fails to load the dictionary payload it used to give a clear message that a header file couldn't be included.; ```; In file included from G__DDG4 dictionary payload:445:; In file included from /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4Config.h:100:; /cvmfs/sft.cern.ch/lcg/views/LCG_97a_FCC_2/x86_64-centos7-gcc8-opt/include/DDG4/Geant4TrackingAction.h:18:10: fatal error: 'G4VUserTrackInformation.hh' file not found; #include ""G4VUserTrackInformation.hh""; ^~~~~~~~~~~~~~~~~~~~~~~~~~~~; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:; ```; See full [error.txt](https://github.com/root-project/root/files/5517699/error.txt). But with the root master or 6.22.00, there is only; ```; Error in <TInterpreter::AutoParse>: Error parsing payload code for class dd4hep::sim::KernelHandle with content:. #line 1 ""G__DDG4 dictionary payload""; ```; In both cases followed by the rest of the ""dictionary payload"", see attached . [error98.txt](https://github.com/root-project/root/files/5517700/error98.txt); [errorDev.txt](https://github.com/root-project/root/files/5517701/errorDev.txt). The solution to the parsing of the paylog in both cases is the same, adding the Geant4 header location to ROOT_INCLUDE_PATH, this is understood. But the message about the missing header file should still be printed, when it cannot be found, shouldn't it?; Running the command with `strace` let's one see that it fails to find the Geant4 headers. ### Expected behavior; Print the ""file not found"" message. ### To Reproduce; This gives the error message, but of course is nothing to see if the problem is solved:; ```; source /cvmfs/sft.cern.ch/lcg/views/LCG_98/x86_64-centos7-gcc8-opt/setup.sh; ddsim --compactFile ${DD4hepINSTALL}/DDDetectors/compact/SiD.xml -N 2 -G --gun.particle pi+ --outputFile my.root; ```. This is for the environment that still ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6791:71,load,load,71,https://root.cern,https://github.com/root-project/root/issues/6791,1,['load'],['load']
Performance,"- [x] Checked for duplicates. Maybe related: #7063. ### Describe the bug; ROOT fails to link TBB on Ubuntu 22.10. ### Expected behavior; Successful build. ### To Reproduce; 1. git clone ROOT; 2. `cmake`; 3. `make`. ### Setup; 1. ROOT master 487e1fcffb49242ee9029685435f67e610628a57; 2. Ubuntu 22.10; 3. installed all dependencies according to [here](https://root.cern/install/dependencies/); 4. installed `libtbb-dev`, which is not listed in the required dependencies.; ```; bgruber@graviola:~/dev/root$ apt list --installed | grep tbb. WARNING: apt does not have a stable CLI interface. Use with caution in scripts. libtbb-dev/kinetic,now 2021.5.0-15ubuntu1 amd64 [installed]; libtbb12/kinetic,now 2021.5.0-15ubuntu1 amd64 [installed,automatic]; libtbbbind-2-5/kinetic,now 2021.5.0-15ubuntu1 amd64 [installed,automatic]; libtbbmalloc2/kinetic,now 2021.5.0-15ubuntu1 amd64 [installed,automatic]; ```. ### cmake cache; ```; TBB_BINARY_DIR ; TBB_INCLUDE_DIR /usr/include ; TBB_LIBRARY /usr/local/lib/libtbb.so; TBB_LIBRARY_DEBUG TBB_LIBRARY_DEBUG-NOTFOUND ; TBB_LIBRARY_RELEASE /usr/local/lib/libtbb.so; TBB_ROOT_DIR /usr; ```. ### make output:; ```; [ 51%] Linking CXX shared library ../../lib/libImt.so; /usr/bin/ld: CMakeFiles/Imt.dir/src/TTaskGroup.cxx.o: in function `ROOT::Experimental::TTaskGroup::TTaskGroup()':; TTaskGroup.cxx:(.text+0x6b): undefined reference to `tbb::detail::r1::initialize(tbb::detail::d1::task_group_context&)'; /usr/bin/ld: CMakeFiles/Imt.dir/src/TTaskGroup.cxx.o: in function `ROOT::Experimental::TTaskGroup::Cancel()':; TTaskGroup.cxx:(.text+0xfa): undefined reference to `tbb::detail::r1::cancel_group_execution(tbb::detail::d1::task_group_context&)'; /usr/bin/ld: CMakeFiles/Imt.dir/src/TTaskGroup.cxx.o: in function `ROOT::Experimental::TTaskGroup::Run(std::function<void ()> const&)':; TTaskGroup.cxx:(.text+0x173): undefined reference to `tbb::detail::r1::allocate(tbb::detail::d1::small_object_pool*&, unsigned long)'; /usr/bin/ld: TTaskGroup.cxx:(.text+0x214): un",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11931:911,cache,cache,911,https://root.cern,https://github.com/root-project/root/issues/11931,1,['cache'],['cache']
Performance,"- [x] Checked for duplicates: No duplicated found. Issue also reported here:; https://root-forum.cern.ch/t/importing-and-visualizing-gdml-with-tessellated-solids/40903. ### Describe the bug; Exporting a GDML file from GEANT4 (10.5) containing a tessellated object. This tessellated object is defined via vertex1 vertex2 vertex3, but does not add the ""type"" (absolute/relative) attribute if its in absolute coordinates (not 100% percent sure about this).; Loading this *.gdml file which contains a tessellated object results in a problem since the `AddTriangularFacet(bool relative)`; is not called due to the missing ""type"" statement in the if-else statement from TGDMLParse::Tessellated(4247) resulting in invalid boxed (dX/dY/dZ < 0):. ```; Error in <TGeoVolume::SortNodes>: Bounding box not valid; Error in <TGeoVolume::Voxelize>: Bounding box not valid; Error in <TGeoVolume::FindOverlaps>: Bounding box not valid; ```. and a following crash:. ```; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fb46acdc46c in waitpid () from /lib64/libc.so.6; #1 0x00007fb46ac59f62 in do_system () from /lib64/libc.so.6; #2 0x00007fb46f5e9524 in TUnixSystem::StackTrace() () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libCore.so; #3 0x00007fb46f5eb1ba in TUnixSystem::DispatchSignals(ESignals) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libCore.so; #4 <signal handler called>; #5 0x00007fb46db2607d in TViewer3DPad::AddObject(TBuffer3D const&, bool*) () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGpad.so; #6 0x00007fb451224035 in TGeoPainter::PaintShape(TGeoShape const&, char const*) const () from /nfs/mnemosyne/sys/cc7/sw/root/x86-64/6.22.02/system/root/lib/libGeomPainter.so; #7 0x00007fb4512261ad in TGeoPainter::PaintVolume(TGeoVolume*, char const*, TGeoMatrix*) () from /nf",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6868:455,Load,Loading,455,https://root.cern,https://github.com/root-project/root/issues/6868,1,['Load'],['Loading']
Performance,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```; TGeoManager::Import(""mother.gdml"");; ```. `mother.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define />; <solids>; <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />; </solids>; <structure>; <volume name=""world"">; <physvol>; <file name=""child.gdml"" />; </physvol>; <materialref ref=""world_material"" />; <solidref ref=""world_solid"" />; </volume>; </structure>; <setup name=""Default"" version=""1.0"">; <world ref=""world"" />; </setup>; </gdml>; ```. `child.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""; xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define>; <position name=""cube_v0"" unit=""mm"" ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9744:861,load,load,861,https://root.cern,https://github.com/root-project/root/issues/9744,1,['load'],['load']
Performance,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; Using a `std::pair` for a custom class inside another custom class seems to somehow break the dictionary load mechanism. In the [attached reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz), `OtherClass` contains a `std::pair<int, MyClass>`; for both custom classes a dictionary is created. Manually loading the dictionary in the Root shell seems to lead to an incomplete type state for `MyClass`, such that some assertions fail. The failure disappear if the same assertion is tested before on a class from the same dictionary and not encompassed in the `std::pair`. It thus seems that the presence of the `std::pair` somehow interferes with loading the dictionary for the contained class. ### Expected behavior; <!--; A clear and concise description of what you expected to happen.; -->; The presence of `std:::pair` should not interfere with the dictionary of its contained classes. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. This [reproducer](https://github.com/root-project/root/files/8609137/reproducer.tar.gz) showcases the problem:; ```bash; $ rootcling -f dict.cpp MyClass.h OtherClass.h LinkDef.h; $ g++ -shared -std=c++14 -fPIC -I$ROOTSYS/include dict.cpp -o libDict.so ; $ root; root [0] .L libDict.so; root [1] std::is_copy_assignable<MyClass>::value; In module 'std' imported from input_line_1:1:; /usr/lib/gcc/x86_64-pc-linux-gnu/11.2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10512:488,load,load,488,https://root.cern,https://github.com/root-project/root/issues/10512,2,['load'],"['load', 'loading']"
Performance,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug; When I run the Python script I get a cling warning:. cling::DynamicLibraryManager::loadLibrary(): libGLU.so.1: cannot open shared object file: No such file or directory; Error in <AutoloadLibraryMU>: Failed to load library /home/grufoony/root/lib/libEve.so.6.28.00cling JIT session error: Failed to ; materialize symbols: { (main, { _ZeqRK7TStringRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE }) }. However, the code runs fine despite this error. ### To Reproduce; Run a python script from [this repository](https://github.com/SimonB00/WealthDistributionModel).; Also run a. make all. command in order to compile and bind the c++ library. ### Setup; ROOT 6.28/00; Windows 11 - WSL2 Ubuntu 22.04.1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12481:466,load,loadLibrary,466,https://root.cern,https://github.com/root-project/root/issues/12481,2,['load'],"['load', 'loadLibrary']"
Performance,"- [x] Checked for duplicates; <!--; Please search in; * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->; The bug is not reported. ### Describe the bug; <!--. -->; When I compile my code using TMVA reader, I got the following message. ld: warning: libguide.so, needed by /cvmfs/ams.cern.ch/Offline/root/Linux/root6-14-04-icc19/lib/libTMVA.so, not found (try using -rpath or -rpath-link). Then, I execute my .exe file, and get:; error while loading shared libraries: libguide.so: cannot open shared object file: No such file or directory. ### Expected behavior; <!--; -->; No warning during compiling. No error when running. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->; #include <cstdlib>; #include <iostream>; #include ""TString.h""; #include ""TTree.h""; #include ""TGraph.h""; #include ""TFile.h""; #include <TMVA/Reader.h>; #include ""TF1.h""; using namespace std;; int main(int argc, char *argv[]){; int t_i = 19;; float mu, Delta, Ng, Ec, h, epsilon_c, ng, Gamma, L_M_5;; TMVA::Reader *reader = new TMVA::Reader(""!Color:!Silent"");; reader->AddVariable( ""mu"", &mu );; reader->AddVariable( ""Delta"", &Delta );; reader->AddVariable( ""Ng"", &Ng );; reader->AddVariable( ""Ec"", &Ec );; reader->AddVariable( ""h"", &h );; reader->AddVariable( ""epsilon_c"", &epsilon_c );; reader->AddVariable( ""ng"", &ng );; reader->AddVariable( ""Gamma"", &Gamma );; reader->AddVariable( ""L-5"", &L_M_5 );; reader->BookMVA( ""MLP method"", Form(""/eos/user/j/jfeng5/work/quantum_computing/mc/tmva/weights/qc_MLP_%d.weights.xml"",t_i ));; TFile tf_fi(",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6904:695,load,loading,695,https://root.cern,https://github.com/root-project/root/issues/6904,1,['load'],['loading']
Performance,"- [x] Checked for duplicates; It might be somehow associated with #7182. ### Describe the bug; In the attached [archive](https://github.com/root-project/root/files/8690168/roofit-integral.tar.gz) there is a macro test.C showing the problem. The problem is that even though all user-created objects die when functions `Integral()` and `Plot()` finish, the integral value is different if `Plot()` is invoked before the second call to `Integral()`. Both removing the call to `Plot()` or using the same value of `delta` in `Integral()` and `Plot()` make the test pass. Looks like `ws.pdf(""signal"")->plotOn(frame);` creates some global cache of the integral which is used with newly created objects. ### Expected behavior; The integral value should not depend on the `Plot()` step - be equal before and after the `Plot()`. ### To Reproduce; Unpack the attached archive and run `root -b -l -q test.C` in the unpacked directory. ### Setup; The test passes for ROOT versions up to 6.22.00, fails in 6.22.06 and later (I didn't check between). It doesn't depend on the operating system nor machine. In the archive there is also a script test.sh that can be run on lxplus.cern.ch selecting different root versions. . ### Additional context",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10577:631,cache,cache,631,https://root.cern,https://github.com/root-project/root/issues/10577,1,['cache'],['cache']
Performance,"- better name for a variable, nNotRun -> nToRun; - substitute raw for loop with count_if (for readability); - substitute raw for loop with for_each (for consistency with the multi-thread version, which uses TThreadExecutor::Foreach)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11355:174,multi-thread,multi-thread,174,https://root.cern,https://github.com/root-project/root/pull/11355,1,['multi-thread'],['multi-thread']
Performance,- core/base: Since Visual Studio v16.5.0 the /O2 optimization flag makes most of the roofit/roostats tests failing; - hist/histv7/test: Using /O2 compiler flag prevent the followin error when building in debug mode:; axis.obj : fatal error LNK1179: invalid or corrupt file: duplicate COMDAT '??$?8DU?$char_traits@D@std@@@__ROOT@experimental@std@@YA_NV?$basic_string_view@DU?$char_traits@D@std@@@012@0@Z',MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5343:49,optimiz,optimization,49,https://root.cern,https://github.com/root-project/root/pull/5343,1,['optimiz'],['optimization']
Performance,"- gtest-tmva-pymva-test-TestRModelParserPyTorch (Failed); 1068 - tutorial-tmva-TMVA_CNN_Classification (Failed); 1069 - tutorial-tmva-TMVA_Higgs_Classification (Failed); 1070 - tutorial-tmva-TMVA_RNN_Classification (Failed); 1071 - tutorial-tmva-TMVA_SOFIE_PyTorch (Failed); 1203 - tutorial-dataframe-df102_NanoAODDimuonAnalysis-py (Failed); 1205 - tutorial-dataframe-df104_HiggsToTwoPhotons-py (Failed); 1261 - tutorial-rcanvas-df104-py (Failed); 1564 - roottest-python-JupyROOT-importROOT_notebook (Failed); 1565 - roottest-python-JupyROOT-simpleCppMagic_notebook (Failed); 1566 - roottest-python-JupyROOT-thread_local_notebook (Failed); 1567 - roottest-python-JupyROOT-ROOT_kernel_notebook (Failed); 1568 - roottest-python-JupyROOT-tpython_notebook (Failed); 1664 - roottest-python-distrdf-backends-test_all (Failed); ```; The specific run I references only failed the `TMapFile` test (which sometimes fails, sometimes succeed). The set of failure types is as follow:; ```; Warning in <TMVA_CNN_Classification>: TMVA is not build with GPU or CPU multi-thread support. Cannot use TMVA Deep Learning for CNN; Running with nthreads = 4; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Setup TMVA...; [37;41;1m<FATAL> : Can't import __main__[0m; ***> abort program execution; ```; ```; Generate PyTorch model...; Traceback (most recent call last):; File ""/github/home/ROOT-CI/build/tmva/pymva/test/generatePyTorchModelClassification.py"", line 1, in <module>; import torch; ModuleNotFoundError: No module named 'torch'; ```; ```; RDataFrame::Run: event loop was interrupted; Traceback (most recent call last):; File ""/github/home/ROOT-CI/src/tutorials/dataframe/df102_NanoAODDimuonAnalysis.py"", line 50, in <module>; h.SetTitle(""""); ^^^^^^^^^^; cppyy.gbl.std.bad_alloc: TH1D& ROOT::RDF::RResultPtr<TH1D>::operator*() =>; bad_alloc: std::bad_alloc; CMake Error at /github/home/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```; ```; Traceback ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16242:2428,multi-thread,multi-thread,2428,https://root.cern,https://github.com/root-project/root/issues/16242,1,['multi-thread'],['multi-thread']
Performance,"- make get_tty_size() returning 0 when called without terminal (e.g. when redirecting output); - check for nonzero return value of `_isatty()`. According to the doc, `_isatty` returns a nonzero value if the descriptor is associated with a character device. Otherwise, `_isatty` returns 0.; - in `dataframe_helpers.cxx`, don't use `f1.root` and `f2.root`, they are already used in `dataframe_nodes.cxx` and might conflict when running tests concurrently. This fixes the following errors on Windows:; ```; unknown file: error: C++ exception with description ""string too long"" thrown in the test body.; [ FAILED ] RDFHelpers.ProgressHelper_Existence_ST (5009 ms); [ RUN ] RDFHelpers.ProgressHelper_Existence_MT; C:\ROOT-CI\src\core\testsupport\src\TestSupport.cxx(77): error: Failed; Received unexpected diagnostic of severity 5000 at 'TFile::TFile' reading 'could not delete C:\ROOT-CI\build\tree\dataframe\test\f2.root (errno: 13) Permission denied'.; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13489:440,concurren,concurrently,440,https://root.cern,https://github.com/root-project/root/pull/13489,1,['concurren'],['concurrently']
Performance,"- move important functions (constructors,destructors,accessors) to header; to avoid overhead in creating and accessing these small objects; - optimize access to TLorentzVector by avoiding a double switch statement; (switch on direction in TLorentzVector followed by same switch in TVector3)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/166:142,optimiz,optimize,142,https://root.cern,https://github.com/root-project/root/pull/166,1,['optimiz'],['optimize']
Performance,"- move important functions (constructors,destructors,accessors) to header; to avoid overhead in creating and accessing these small objects; - optimize access to TLorentzVector by avoiding a double switch statement; (switch on direction in TLorentzVector followed by same switch in TVector3). This merge request is result of profiling work in the AliRoot framework where simple accesses to the mentioned objects are considerable (on the 2% level).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/165:142,optimiz,optimize,142,https://root.cern,https://github.com/root-project/root/pull/165,1,['optimiz'],['optimize']
Performance,"- removed nested template struct SimpleAction; - TDataFrameInterface::SimpleAction::BuildAndBook is now TDataFrameInterface::BuildAndBook; - BuildAndBook now only takes one template parameter instead of three; - the default type of histogram weights is now `void` (which signals that we are; not filling a weighted histogram); - `enum EActionType` has been replaced by `namespace ActionTypes`. With a few exceptions, actions are now created by calling `CreateAction`, which; in turn calls `BuildAndBook`. Two template overloads of `CreateAction` are used; to decide whether to perform runtime type guessing or not. Multiple overloads of; `BuildAndBook` take care of building the correct operation for each action.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/348:577,perform,perform,577,https://root.cern,https://github.com/root-project/root/pull/348,1,['perform'],['perform']
Performance,"- veccore; - x11; - xml; - xrootd; - Debian GNU/Linux ""sid"" ; - GCC 11.3.0. ## The problem . To see the problem first to . 	$ make test ; 	; This will generate the shared library `libFoo.so.1` and associated; files (`libFoo_rdict.pcm`, `libFoo.rootmap`, `libFoo.so`) in the; sub-directory `libs`, and execute the script `Test.C`. This all works; fine:. 	$ LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C. 	Processing Test.C...; 	this is a Foo; 	hello from a Foo; 	rm libs/Foo_dict.o libs/Foo.o. Next, clean up . 	$ make clean ; 	; so that we start afresh. Then, execute . 	$ make test LIBDIR=.libs ; 	; which will build the above mentioned library and associated files in; the sub-directory `.libs`. This fails somewhat with . 	$ LD_LIBRARY_PATH=.libs:<ROOTSYS>/lib -l -b -q Test.C. 	Processing Test.C...; 	Error in <TCling::RegisterModule>: Cannot open shared library <ROOTSYS>/root.exe for dictionary libFoo:; 	 <ROOTSYS>/root.exe: cannot dynamically load position-independent executable; 	Error in <TCling::LoadPCM>: ROOT PCM <ROOTSYS>/bin/libFoo_rdict.pcm file does not exist; 	this is a Foo; 	hello from a Foo; 	; 	; It does not matter if `LIBDIR` . - is an absolute path (e.g., ` ``pwd``/.libs`); - the end directory is below a directory starting with a dot (e.g.,; ` ``pwd``/.libs/foo`); - if the actual directory starts with a dot, but the library is loaded; via a symbolic link without the dot ; ; 		$ make clean; 		$ make LIBDIR=.libs ; 		$ ln -s .libs libs; 		$ make test LIBDIR=libs; 	 LD_LIBRARY_PATH=libs:<ROOTSYS>/lib root -l -b -q Test.C; 		 ; In all cases, ROOT complains as above. If the dot is _not_ at the; start of a path component (e.g., `LIBDIR=foo.libs`), then all is; fine. . So it seems that somewhere deep in the ROOT code, there is some; assumption about a dot (`.`) as the leading character of a; sub-directory name which shouldn't be there. As far as I can tell,; the dot makes the code think that the library loaded is the ROOT; executable (`<ROOTSYS>/bin/root.e",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:1730,load,load,1730,https://root.cern,https://github.com/root-project/root/issues/10704,2,"['Load', 'load']","['LoadPCM', 'load']"
Performance,"-- Found DCAP: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/Grid/dcap/2.47.7-1/x86_64-centos7-gcc9-dbg/include; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.7.6; -- Looking for TBB; -- Found TBB: /build/jenkins/workspace/lcg_nightly_pipeline/install/dev3/tbb/2020_U2/x86_64-centos7-gcc9-dbg (found suitable version ""2020.2"", minimum required is ""2018""); -- Performing Test tbb_exception_result; -- Performing Test tbb_exception_result - Success; -- Detected Compiler: GCC 9.2.0; -- Performing Test check_cxx_compiler_flag__Wabi; -- Performing Test check_cxx_compiler_flag__Wabi - Success; -- Performing Test check_cxx_compiler_flag__fabi_version_0; -- Performing Test check_cxx_compiler_flag__fabi_version_0 - Success; -- Performing Test check_cxx_compiler_flag__fabi_compat_version_0; -- Performing Test check_cxx_compiler_flag__fabi_compat_version_0 - Success; -- Performing Test check_cxx_compiler_flag__ffp_contract_fast; -- Performing Test check_cxx_compiler_flag__ffp_contract_fast - Success; -- target changed from """" to ""auto""; -- Detected CPU: broadwell; -- Performing Test check_cxx_compiler_flag__march_broadwell; -- Performing Test check_cxx_compiler_flag__march_broadwell - Success; -- Performing Test check_cxx_compiler_flag__msse2; -- Performing Test check_cxx_compiler_flag__msse2 - Success; -- Performing Test check_cxx_compiler_flag__msse3; -- Performing Test check_cxx_compiler_flag__msse3 - Success; -- Looking for C++ include pmmintrin.h; -- Looking for C++ include pmmintrin.h - found; -- Performing Test check_cxx_compiler_flag__mssse3; -- Performing Test check_cxx_compiler_flag__mssse3 - Success; -- Looking for C++ include tmmintrin.h; -- Looking for C++ include tmmintrin.h - found; -- Performing Test check_cxx_compiler_flag__msse4_1; -- Performing Test check_cxx_compiler_flag__msse4_1 - Success; -- Looking for C++ include smmintrin.h; -- Looking for C++ include smmintrin.h - found; -- Performing Test check_cxx_compiler_flag__msse4_2; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015634743:11438,Perform,Performing,11438,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015634743,14,['Perform'],['Performing']
Performance,-- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed; -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG; -- Perf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:3766,Perform,Performing,3766,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['Perform'],['Performing']
Performance,-- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Found ld64 - /Library/Developer/CommandLineTools/usr/bin/ld; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH) ; -- OCaml bindings disabled.; -- LLVM host triple: arm-apple-darwin23.2.0; -- LLVM default target triple: arm-apple-darwin23.2.0; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: unknown; -- Targeting AArch64; -- Targeting NVPTX; -- Clang version: 9.0.1; -- Cling version (from VERSION file): ROOT_1.0~dev; CMake Warning at interpreter/cling/lib/Interpreter/CMakeLists.txt:278 (MESSAGE):; Cannot determine location of C++ headers for runtime. -- Cling will look for C++ headers in '' at runtime.; -- And then fallback to: 'clang'; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Success; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Success; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- ROOT Configuration . System Darwin-23.2.0; Processor 10 core Apple M1 Max (arm64); Build type Release; Install path /Users/marcomeyer/Software/root/20240113; Compiler AppleClang 15.0.0.15000100; Compiler flags:; C -m64 -pipe -W -Wall -fsigned-char -fno-common -Qunused-arguments -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wc++11-narrowing -Wsign-compare -Wsometimes-uninitialized -Wconditional-uninitialized -Wheader-guard -Warray-bounds -Wcomment -Wtautological-compare -Wstrncat-size -Wloop-analysis -Wbool-conversion -m64 -pipe -W -Wall -Woverloaded-virtual -fsigned-char -fno-common -Qunused-arguments -pthread -stdlib=libc++ -O3 -DNDEBUG; Linker flags:; Executable -mmacosx-version-min=14.2; Module ; Shared . -- Enabled support for: asimage builtin_afterimage builtin_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14337:3605,Perform,Performing,3605,https://root.cern,https://github.com/root-project/root/issues/14337,10,['Perform'],['Performing']
Performance,"----------+----------; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; ```. Before this change, page allocations were performed every time a page; is flushed from a column:. ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); [dealloc] [dealloc] [dealloc]; [alloc] [alloc] [alloc]; 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. After this change, allocations are held onto and reused if possible; (up to a certain limit, which for now is hard-coded to be 32 pages). ```; Events | Column 0 | Column 1 | Column 2; -------+----------+----------+----------; [alloc] [alloc] [alloc]; 1-10 p0(40kB) p1(80kB) p2(80kB); 11-20 p3(40kB) p4(80kB) p5(80kB); ... ... ... ...; [dealloc] [dealloc] [dealloc]; ```. On SSD, the following serial results were obtained for the lhcb and cms; benchmarks (average of ten cold runs, 95% confidence interval):. ```; cms. Before: 105145us +- 1338us; After: 93669us +- 2077us; %diff: 10.9%. lhcb. Before: 2111977us +- 8371us; After: 1770781us +- 11185us; %diff: 16.2%; ```. Todo: ; - [x] Handle non-mappable case in `PopulatePage`; - [x] Investigate multi-threaded case. For multithreading, the current implementation just uses the existing `UnsealPage` mechanism and is unaffected by these changes -- deleted pages are returned to the cache which deallocates them properly. . I tried adding an internal mutex to `RPageCache` and bumping the number of cached pages to 128 on the benchmark machine but the runtime was about the same as the existing cache-less implementation. Further cache size increases did not show improvements, but as expected only having 32 cached pages for 128 threads was much slower. ```; ./lhcb -m (64-cores, 10 cold runs, 95% confidence interval); no cache: 776188us +- 9918us; cache (128): 780214us +- 11888us; %diff: -0.5%; cache (32): 1369689us +- 33365us; %diff: -76.46%; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8634:1582,multi-thread,multi-threaded,1582,https://root.cern,https://github.com/root-project/root/pull/8634,9,"['cache', 'multi-thread']","['cache', 'cache-less', 'cached', 'multi-threaded']"
Performance,-------------------------===; Clang front-end time report; ===-------------------------------------------------------------------------===; Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---; 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules; 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm; 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm; 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:1368,Load,Loading,1368,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"------------------------; add_custom_command(OUTPUT ${dictionary}.cxx ${pcm_name} ${rootmap_name} ${cpp_module_file}; - COMMAND ${command} -v2 -f ${dictionary}.cxx ${newargs} ${excludepathsargs} ${rootmapargs}; + COMMAND ${command} -v4 -f ${dictionary}.cxx ${newargs} ${excludepathsargs} ${rootmapargs}; ${ARG_OPTIONS}; ${definitions} ""$<$<BOOL:${module_defs}>:-D$<JOIN:${module_defs},;-D>>""; ${compIncPaths}; ```; ```.sh-session; [root@csresearch00 /scratch/root]# patch --verbose -p0 < ../tmp-products/root/v6_27_99f2/patch/rootcling-verbose.patch ; [root@csresearch00 /scratch/root]# cat ../tmp-products/root/v6_27_99f2/patch/fermi_root_6_27_99.patch ; ```; ```.diff; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp~	2023-01-10 11:09:06.666075151 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp	2023-01-10 11:34:45.644464781 -0600; @@ -105,6 +105,7 @@; #include <algorithm>; #include <cassert>; #include <cstdint>; +#include <cstdio>; #include <cstdlib>; #include <cstring>; #include <ctime>; @@ -2498,6 +2499,8 @@; // did not result in us loading a module file for that submodule. For; // instance, a cross-top-level-module 'conflict' declaration will hit this.; unsigned ID = getLocalOrImportedSubmoduleID(Mod);; + fprintf(stderr, ""Mod=%X\n"", Mod);; + fprintf(stderr, ""Submodule=%s\n"", Mod->Name.c_str());; assert((ID || !Mod) &&; ""asked for module ID for non-local, non-imported module"");; return ID;; --- interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp~	2023-01-06 05:04:43.000000000 -0600; +++ interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriterDecl.cpp	2023-01-10 13:21:47.554190854 -0600; @@ -26,6 +26,8 @@; using namespace clang;; using namespace serialization;; ; +#include <cstdio>; +; //===----------------------------------------------------------------------===//; // Declaration serialization; //===----------------------------------------------------------------------===//; @@ -361,6 +363,8 @@; Record.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1403723179:1596,load,loading,1596,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1403723179,1,['load'],['loading']
Performance,"-----------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2022, 13:52:01 |; | From heads/master@v6-25-01-4921-gdfd0f52391 |; | With c++ (Ubuntu 8.4.0-1ubuntu1~18.04) 8.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .q; /tmp$ root -l main.cpp ; root [0] ; Processing main.cpp... *** Break *** segmentation violation. ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7b9f49845a in __GI___wait4 (pid=95642, stat_loc=stat_loc; entry=0x7ffd4f13a298, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f7b9f49841b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffd4f13a298, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f7b9f3febcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f7b9fc5bc22 in TUnixSystem::Exec (this=0x55d680e3b800, shellcmd=0x55d681cbf580 ""/opt/root_bld/etc/gdb-backtrace.sh 95620 1>&2"") at /opt/root_src/core/unix/src/TUnixSystem.cxx:2104; #4 0x00007f7b9fc5c4d3 in TUnixSystem::StackTrace (this=0x55d680e3b800) at /opt/root_src/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007f7b9fc60174 in TUnixSystem::DispatchSignals (this=0x55d680e3b800, sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3615; #6 0x00007f7b9fc5790e in SigHandler (sig=kSigSegmentationViolation) at /opt/root_src/core/unix/src/TUnixSystem.cxx:395; #7 0x00007f7b9fc60081 in sighandler (sig=11) at /opt/root_src/core/unix/src/TUnixSystem.cxx:3586; #8 0x00007f7b9fc509d0 in textinput::TerminalConfigUnix::HandleSignal (this=0x7f7ba0144ae0 <textinput::TerminalConfigUnix::Get",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11707#issuecomment-1315454187:1992,optimiz,optimized,1992,https://root.cern,https://github.com/root-project/root/issues/11707#issuecomment-1315454187,1,['optimiz'],['optimized']
Performance,"-DINSTALL=1 | Enables an extra step to call make install; | -DCDASH=1 | Enables submission to CDash (needs CTestConfig.cmake). When enabling coverage, a report is generated by default in the `coverage/` directory inside the build directory. The results can be viewed by opening the file `html/coverage_details.html`. This step can be disabled by passing `-DGCOVR=0` to `ctest`. It is recommended to use a debug build to generate the coverage analysis. The configuration can be specified directly on the command line via the `-C` option. For example, to run a coverage build in debug mode, with less verbose output, and showing test output when a test failure happens, one can run:; ```sh; ctest -V --output-on-failure -C Debug -DCOVERAGE=1 -S test.cmake; ```; Some environment variables can also influence the behavior of the script, like `CC`, `CXX`, `CMAKE_GENERATOR`, `CTEST_CONFIGURATION_TYPE`, `CMAKE_BUILD_PARALLEL_LEVEL`, `CTEST_PARALLEL_LEVEL`, `CMAKE_ARGS`, `CDASH`, `DESTDIR`, `BASE_REF`, `HEAD_REF`, and GitHub Actions environment variables. These are mostly self-explanatory and can be used to override the provided defaults. For example, to build with the clang compiler and use Ninja as CMake generator, one can run:; ```sh; env CC=clang CXX=clang++ CMAKE_GENERATOR=Ninja ctest -V -S test.cmake; ```; Finally, the script tries to load configuration files from the `.ci/` subdirectory in the source directory. The default configuration is in `.ci/config.cmake`. It is used if no specific configuration is found for the detected OS. For example, on Ubuntu, a file named `ubuntu.cmake` will be used if present instead of `config.cmake`. The script also tries to detect a version, so, for example, on Alma, one could use `almalinux8.cmake` which would have higher precedence than `almalinux.cmake`. The default `config.cmake` tries to enable as many options as possible without failing if the dependencies are not installed. Sample `ubuntu.cmake` and `macos.cmake` are added in this commit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14999:1943,load,load,1943,https://root.cern,https://github.com/root-project/root/pull/14999,1,['load'],['load']
Performance,-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32650,load,load,32650,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,-Services.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30351739.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e7734335.signing_,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:55349,load,load,55349,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,-dataframe-df005_fillAnyObject; 473/1231 Test #449: tutorial-dataframe-df002_dataModel .................................. Passed 9.46 sec; Start 453: tutorial-dataframe-df006_ranges; 474/1231 Test #451: tutorial-dataframe-df004_cutFlowReport .............................. Passed 6.28 sec; Start 454: tutorial-dataframe-df007_snapshot; 475/1231 Test #448: tutorial-dataframe-df001_introduction ............................... Passed 13.89 sec; Start 455: tutorial-dataframe-df008_createDataSetFromScratch; 476/1231 Test #452: tutorial-dataframe-df005_fillAnyObject .............................. Passed 6.60 sec; Start 456: tutorial-dataframe-df009_FromScratchVSTTree; 477/1231 Test #453: tutorial-dataframe-df006_ranges ..................................... Passed 7.33 sec; Start 457: tutorial-dataframe-df010_trivialDataSource; 478/1231 Test #455: tutorial-dataframe-df008_createDataSetFromScratch ................... Passed 3.90 sec; Start 458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings; 479/1231 Test #394: gtest-tree-dataframe-test-dataframe-concurrency ..................... Passed 44.21 sec; Start 459: tutorial-dataframe-df014_CSVDataSource; 480/1231 Test #456: tutorial-dataframe-df009_FromScratchVSTTree ......................... Passed 4.16 sec; Start 460: tutorial-dataframe-df015_LazyDataSource; 481/1231 Test #454: tutorial-dataframe-df007_snapshot ................................... Passed 9.31 sec; Start 461: tutorial-dataframe-df016_vecOps; 482/1231 Test #457: tutorial-dataframe-df010_trivialDataSource .......................... Passed 3.32 sec; Start 462: tutorial-dataframe-df017_vecOpsHEP; 483/1231 Test #458: tutorial-dataframe-df012_DefinesAndFiltersAsStrings ................. Passed 5.07 sec; Start 463: tutorial-dataframe-df018_customActions; 484/1231 Test #461: tutorial-dataframe-df016_vecOps ..................................... Passed 3.80 sec; Start 464: tutorial-dataframe-df019_Cache; 485/1231 Test #462: tutorial-dataframe-df017_vecOpsHEP .............,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10300:8198,concurren,concurrency,8198,https://root.cern,https://github.com/root-project/root/pull/10300,1,['concurren'],['concurrency']
Performance,"-error-skeleton.c:208; #19 0x00007f1de3cc934e in _dl_open (file=<optimized out>, mode=-2147483647, caller_dlopen=0x7f1de3a01a07 <TROOT::InitInterpreter()+1031>, nsid=-2, argc=1, argv=<optimized out>, env=0x7ffc77af7128) at ./elf/dl-open.c:883; #20 0x00007f1de229063c in dlopen_doit (a=a; entry=0x7ffc77af6e90) at ./dlfcn/dlopen.c:56; #21 0x00007f1de23748a8 in __GI__dl_catch_exception (exception=exception; entry=0x7ffc77af6df0, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:208; #22 0x00007f1de2374973 in __GI__dl_catch_error (objname=0x7ffc77af6e48, errstring=0x7ffc77af6e50, mallocedp=0x7ffc77af6e47, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:227; #23 0x00007f1de229012e in _dlerror_run (operate=operate; entry=0x7f1de22905e0 <dlopen_doit>, args=args; entry=0x7ffc77af6e90) at ./dlfcn/dlerror.c:138; #24 0x00007f1de22906c8 in dlopen_implementation (dl_caller=<optimized out>, mode=<optimized out>, file=<optimized out>) at ./dlfcn/dlopen.c:71; #25 ___dlopen (file=<optimized out>, mode=<optimized out>) at ./dlfcn/dlopen.c:81; #26 0x00007f1de3a01a07 in TROOT::InitInterpreter() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #27 0x00007f1de3a01bcf in ROOT::Internal::GetROOT2() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #28 0x000055a9220122ec in main (); Aborted (core dumped); ```. ***************************************************************************************************************************************; With ""-lNew"" to compile the macro, the demo macro of TApplication works fine, but the demo macro of TMapFile shows the simiar error as before, i.e., ; ```; Error in <TMapFile::TMapFile>: no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; ```. This is the latest test with newer OS version and ROOT version. It would be highly appreciated you could have a look at this after Christmas holidays:-). Indeed, Merry Christmas and Happy New Year!. Huagen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:8538,optimiz,optimized,8538,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,2,['optimiz'],['optimized']
Performance,"-hepdata-lib/0.10.1-d5a65a50fc66bb6ceb2097b9bc30c480/log); ```; Processing ./v0.10.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/lib/libc.pcm' is out of date and needs to be rebuilt; Failed to load module libc; Failed to load module std; Failed to load module _Builtin_intrinsics; Failed to load module _Builtin_intrinsics; Failed to load module std; Failed to load module libc; python3: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.27.01-36c89006db8bc49d9c575f40a5e4973c/root-6.27.01/core/metacling/src/TCling.cxx:1320: void RegisterCxxModules(cling::Interpreter&): Assertion `clingInterp.getMacro(""gROOT"") && ""Couldn't load gROOT macro?""' failed.; error: subprocess-exited-with-error; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1324017853:1644,load,load,1644,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1324017853,7,['load'],['load']
Performance,"-monterey-m1; [+] ^libxml2@2.10.1%apple-clang@13.1.6~python arch=darwin-monterey-m1; [+] ^libiconv@1.16%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^xz@5.2.5%apple-clang@13.1.6~pic libs=shared,static arch=darwin-monterey-m1; [+] ^lz4@1.9.3%apple-clang@13.1.6 libs=shared,static arch=darwin-monterey-m1; [+] ^ncurses@5.7.20081102%apple-clang@13.1.6~symlinks+termlib abi=5 patches=f84b270 arch=darwin-monterey-m1; [+] ^nlohmann-json@3.11.2%apple-clang@13.1.6~ipo+multiple_headers build_type=RelWithDebInfo arch=darwin-monterey-m1; [+] ^openblas@0.3.20%apple-clang@13.1.6~bignuma~consistent_fpcsr~ilp64+locking+pic+shared symbol_suffix=none threads=none arch=darwin-monterey-m1; [+] ^perl@5.30.3%apple-clang@13.1.6~cpanm+shared+threads arch=darwin-monterey-m1; [+] ^pcre@8.45%apple-clang@13.1.6~jit+multibyte+utf arch=darwin-monterey-m1; [+] ^python@3.9.13%apple-clang@13.1.6+bz2+ctypes+dbm~debug+libxml2+lzma~nis~optimizations+pic+pyexpat+pythoncmd+readline+shared+sqlite3+ssl~tix~tkinter~ucs4+uuid+zlib patches=0d98e93,4c24573,f2fd060 arch=darwin-monterey-m1; [+] ^apple-libuuid@1353.100.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^expat@2.4.8%apple-clang@13.1.6~libbsd arch=darwin-monterey-m1; [+] ^gdbm@1.23%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^readline@8.1.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^gettext@0.21%apple-clang@13.1.6+bzip2+curses+git~libunistring+libxml2+tar+xz arch=darwin-monterey-m1; [+] ^libffi@3.4.2%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^openssl@1.1.1q%apple-clang@13.1.6~docs~shared certs=mozilla patches=3fdcf2d arch=darwin-monterey-m1; [+] ^ca-certificates-mozilla@2022-07-19%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^sqlite@3.39.2%apple-clang@13.1.6+column_metadata+dynamic_extensions+fts~functions+rtree arch=darwin-monterey-m1; [+] ^unuran@1.8.1%apple-clang@13.1.6~gsl+rngstreams+shared arch=darwin-monterey-m1; [+] ^rngstreams@1.0.1%apple-clang@13.1.6 arch=darwin-monterey-m1; [+] ^vdt@0.4.3%apple-clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11312:9239,optimiz,optimizations,9239,https://root.cern,https://github.com/root-project/root/issues/11312,1,['optimiz'],['optimizations']
Performance,-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:300:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:304:28: warning: unused parameter ‘ptr’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:304:50: warning: unused parameter ‘al’ [-Wunused-parameter] ; - ../root/core/newdelete/src/NewDelete.cxx:344:11: warning: ‘operator new’ must not return NULL unless it is declared ‘throw()’ (or -fcheck-new is in effect) . And 11 more. ### Failing tests:; - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34163/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408960510:1815,cache,cache,1815,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408960510,1,['cache'],['cache']
Performance,"-products/tbb/v2021_7_0/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/pythia/v6_4_28u/Linux64bit+3.10-2.17-c14-debug/include; /scratch/greenc/test-products/postgresql/v14_5/Linux64bit+3.10-2.17-p3913/include; /scratch/greenc/test-products/openblas/v0_3_21/Linux64bit+3.10-2.17-c14/include; /scratch/greenc/test-products/fftw/v3_3_10/Linux64bit+3.10-2.17/include; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/x86_64-unknown-linux-gnu/c++/v1; /scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1; /scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/lib/clang/13.0.0/include; /usr/local/include; /usr/include; End of search list.; '/usr/include/module.modulemap' does not exist. Mounting '/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/libc.modulemap' as '/usr/include/module.modulemap'; Loading '/scratch/greenc/test-products/clang/v14_0_6c/Linux64bit+3.10-2.17/bin/../include/c++/v1/module.modulemap'; '/usr/include/boost/module.modulemap' does not exist. Mounting '/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/boost.modulemap' as '/usr/include/boost/module.modulemap'; modulemap.overlay.yaml; {; 'version': 0,; 'roots': [; { 'name': '/usr/include', 'type': 'directory',; 'contents': [; { 'name': 'libc.modulemap', 'type': 'file',; 'external-contents': '/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/libc.modulemap'; }; ]; },; { 'name': '/usr/include/boost', 'type': 'directory',; 'contents': [; { 'name': 'boost.modulemap', 'type': 'file',; 'external-contents': '/scratch/greenc/test-products/root/v6_27_99f1/build/Linux64bit+3.10-2.17-c14-p3913-debug/etc/cling/boost.modulemap'; }; ]; }]; }; ]; }; Adding runtime include paths:; """"; Added include paths:; Setting up system headers with clang:; ignoring no",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1377607040:12030,Load,Loading,12030,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1377607040,1,['Load'],['Loading']
Performance,-pullrequests-build/14317/testReport/projectroot.roottest.root.treeformula/morrison/roottest_root_treeformula_morrison_make/); - [projectroot.roottest.root.treeformula.retobj.roottest_root_treeformula_retobj_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14317/testReport/projectroot.roottest.root.treeformula/retobj/roottest_root_treeformula_retobj_make/); - [projectroot.roottest.root.treeformula.stl.roottest_root_treeformula_stl_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14317/testReport/projectroot.roottest.root.treeformula/stl/roottest_root_treeformula_stl_make/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_testIMT](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14317/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_testIMT/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14317/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.test.test_stressmathcore](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14317/testReport/projectroot/test/test_stressmathcore/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14317/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14317/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14317/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/). And 35 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1468#issuecomment-352184786:2292,cache,cache,2292,https://root.cern,https://github.com/root-project/root/pull/1468#issuecomment-352184786,2,['cache'],['cache']
Performance,-pullrequests-build/28904/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28904/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28904/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28904/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28904/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28904/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28904/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28904/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28904/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/). And 157 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2142#issuecomment-394633853:2105,cache,cache,2105,https://root.cern,https://github.com/root-project/root/pull/2142#issuecomment-394633853,2,['cache'],['cache']
Performance,-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/37a553c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificat,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:50388,load,load,50388,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ba9a797.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:62685,load,load,62685,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-secur,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:16612,load,load,16612,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48464,load,load,48464,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,-security/certificates/MREN-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:63701,load,load,63701,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLO,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:34591,load,load,34591,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:45812,load,load,45812,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"-tidy-7 '-checks=-*,clang-analyzer-*,-clang-analyzer-alpha*,bugprone*' ../src_master/io/io/src/TMemFile.cxx ; 103 warnings generated.; /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: error: the value returned by this function should be used [bugprone-unused-return-value,-warnings-as-errors]; buffer.release();; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:152:4: note: cast the expression to void to silence this warning; /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: error: Value stored to 'mode' is never read [clang-analyzer-deadcode.DeadStores,-warnings-as-errors]; if (optmode == EMode::kRecreate) mode |= O_TRUNC;; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:40: note: Value stored to 'mode' is never read; /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]; fD = SysOpen(path, O_RDWR | O_CREAT, 0644);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking true branch; if (NeedsToWrite(optmode)) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:188:7: note: Taking false branch; if (optmode == EMode::kRecreate) mode |= O_TRUNC;; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: This constructor of an object of type 'TMemFile' has not returned when the virtual method was called; fD = SysOpen(path, O_RDWR | O_CREAT, 0644);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:190:12: note: Call to virtual function during construction; /home/performance-test/src_master/io/io/src/TMemFile.cxx:198:12: error: Call to virtual function during construction [clang-analyzer-optin.cplusplus.VirtualCall,-warnings-as-errors]; fD = SysOpen(path, O_RDONLY, 0644);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:186:4: note: Taking false branch; if (NeedsToWrite(optmode)) {; ^; /home/performance-test/src_master",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3891#issuecomment-502686211:3874,perform,performance-test,3874,https://root.cern,https://github.com/root-project/root/pull/3891#issuecomment-502686211,1,['perform'],['performance-test']
Performance,-v2:/usr/lib/x86_64-linux-gnu/tls/haswell/x86_64:/usr/lib/x86_64-linux-gnu/tls/haswell:/usr/lib/x86_64-linux-gnu/tls/x86_64:/usr/lib/x86_64-linux-gnu/tls:/usr/lib/x86_64-linux-gnu/haswell/x86_64:/usr/lib/x86_64-linux-gnu/haswell:/usr/lib/x86_64-linux-gnu/x86_64:/usr/lib/x86_64-linux-gnu:/lib/glibc-hwcaps/x86-64-v3:/lib/glibc-hwcaps/x86-64-v2:/lib/tls/haswell/x86_64:/lib/tls/haswell:/lib/tls/x86_64:/lib/tls:/lib/haswell/x86_64:/lib/haswell:/lib/x86_64:/lib:/usr/lib/glibc-hwcaps/x86-64-v3:/usr/lib/glibc-hwcaps/x86-64-v2:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' already loaded for 'PtEtaPhiE4D'; Module 'GenVector' already loaded for 'PtEtaPhiM4D'; Module 'Smatrix' already loaded for 'MatRepStd'; Module 'Smatrix' already loaded for 'MatRepSym'; Module 'Smatrix' alread,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:11845,load,loaded,11845,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['load'],['loaded']
Performance,". Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; The ROOT and GCC is from cvmfs (`juno.ihep.ac.cn`). ### Additional context; <!--; Add any other context about the problem here.; -->; <details>; <summary>GDB backtrace</summary>. ```; #0 0x00007ffff7f1e2c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2216c80) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #1 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2216c80) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #2 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x209f320, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #3 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #4 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #5 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x209f2f8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #6 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x209f2f8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #7 std::allocator_traits<std::allocator<std::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:2855,optimiz,optimized,2855,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,". Here the this pointer of `TString` seems incorrect. The _ZN7TStringC1EPKc (TString::TString(char const*)). The relevant llvm ir:. ```; define dso_local void @_ZN11__cling_N501fEv() #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {; %1 = alloca %class.TString, align 8; %2 = alloca i8, align 1; %3 = alloca i8*; %4 = alloca i32; %5 = call %class.TROOT* @_ZN4ROOT7GetROOTEv(); %6 = bitcast %class.TROOT* %5 to i8*; %7 = call i8* @cling_runtime_internal_throwIfInvalidPointer(i8* inttoptr (i64 269245360 to i8*), i8* inttoptr (i64 282929752 to i8*), i8* %6); %8 = bitcast i8* %7 to %class.TROOT*; %9 = call i8* @_ZNK5TROOT17GetConfigFeaturesEv(%class.TROOT* %8); call void @_ZN7TStringC1EPKc(%class.TString* %1, i8* %9); ```. Here, %9 is already wrong. The ir for `GetConfigFeatures`:. ```; define linkonce_odr dso_local i8* @_ZNK5TROOT17GetConfigFeaturesEv(%class.TROOT*) #0 comdat align 2 {; %2 = alloca %class.TROOT*, align 8; store %class.TROOT* %0, %class.TROOT** %2, align 8; %3 = load %class.TROOT*, %class.TROOT** %2, align 8; %4 = getelementptr inbounds %class.TROOT, %class.TROOT* %3, i32 0, i32 3; %5 = bitcast %class.TString* %4 to i8*; %6 = call i8* @llvm.ptr.annotation.p0i8(i8* %5, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2, i32 0, i32 0), i32 1); %7 = bitcast i8* %6 to %class.TString*; %8 = call i8* @_ZNK7TStringcvPKcEv(%class.TString* %7); ret i8* %8; }; ```. Here we load a string literal (`.str.1` and `.str.2`) and do a bunch of bitcasts none of which seem suspicious. The call to the TString conversion operator `_ZNK7TStringcvPKcEv` is the only candidate that can be problematic:. ```; define linkonce_odr dso_local i8* @_ZNK7TStringcvPKcEv(%class.TString*) #0 comdat align 2 {; %2 = alloca %class.TString*, align 8; store %class.TString* %0, %class.TString** %2, align 8; %3 = load %class.TString*, %class.TString** %2, align 8; %4 = call i8* @_ZNK7TString10GetPoin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-985890171:2050,load,load,2050,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-985890171,1,['load'],['load']
Performance,". my apologies, now slowly reducing amount of flags used for C++ modules build I see that modulemap.overlay file with libc and stl modulemap files is causing these problem. I think it is missing pthead modulemap file, I am testing it..; ```; -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml; ```; So somehow -vfsoverlay is triggering the false positive warning detection (it is not clear for me why, maybe it is clang bug):; ```; [sftnight@lcgapp-slc6-x86-64-32 civetweb]$ clang -DHTTP_WITHOUT_FASTCGI -DNO_SSL_DL -DUSE_WEBSOCKET -I/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include -I/cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/lib/cmake/VecCore/../../../include -isystem /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/include -Qunused-arguments -fcolor-diagnostics -pipe -m64 -Wall -W -pthread -fmodules -fmodules-cache-path=/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/pcms/ -fno-autolink -fdiagnostics-show-note-include-stack -Wno-module-import-in-extern-c -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml -Xclang -fmodules-local-submodule-visibility -g -fPIC -pthread civetweb.c example.c -ldl -o test; civetweb.c:2701:8: warning: implicit declaration of function 'pthread_setname_np' is invalid in C99 [-Wimplicit-function-declaration]; (void)pthread_setname_np(pthread_self(), threadName);; ^; 1 warning generated.; example.c:3:14: warning: unused parameter 'argc' [-Wunused-parameter]; int main(int argc, char **argv); ^; example.c:3:27: warning: unused parameter 'argv' [-Wunused-parameter]; int main(int argc, char **argv); ^; 2 warnings generated. ```. We will investigate why and my apologies again!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418769386:1054,cache,cache-path,1054,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418769386,2,['cache'],['cache-path']
Performance,"., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1609; #34 TBufferFile::ReadFastArray (this=0x7ffff83ea100, start=<optimized out>, cl=0x10a860aa0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1596; #35 0x00007fffa94a224c in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x10a395fa0, addr=<optimized out>, buf=...) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1362; #36 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x109986ba0, conf=0x10a395fa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1405; #37 0x00007fffa92d3130 in TStreamerInfoActions::TConfiguredAction::operator() (this=0x109f4d790, this=0x109f4d790, object=0x109986ba0, buffer=...) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TStreamerInfoActions.h:123; #38 TBufferFile::ApplySequence (obj=0x109986ba0, sequence=..., this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:3580; #39 TBufferFile::ApplySequence (this=0x7ffff83ea100, sequence=..., obj=0x109986ba0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:3562; #40 0x00007fffa92de27c in TBufferFile::ReadClassBuffer (this",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:8784,optimiz,optimized,8784,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; 615 {; (gdb) p tname.c_str(); $33 = 0x555556b67030 ""function<int(const Zyx*,const std::string&)>""; (gdb) bt; #0 ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling (this=0x55555616cc10, tname=..., result=..., dropstd=true); at /home/pcanal/root_working/code/root/core/clingutils/src/TClingUtils.cxx:615; #1 0x00007ffff7ce30ea in TClassEdit::TSplitType::ShortType (this=0x7fffffffa780, answ=..., mode=3618) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:437; #2 0x00007ffff7ce48e9 in TClassEdit::GetNormalizedName (norm_name=..., name=...) at /home/pcanal/root_working/code/root/core/foundation/src/TClassEdit.cxx:854; #3 0x00007ffff7d0a5a3 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false, hint_pair_offset=0, hint_pair_size=0); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:3041; #4 0x00007ffff7d0a221 in TClass::GetClass (name=0x7ffff78de000 ""vector<function<int(const Zyx*,const std::string&)> >"", load=true, silent=false); at /home/pcanal/root_working/code/root/core/meta/src/TClass.cxx:2957; #5 0x00007ffff78df048 in ?? (); #6 0x0000000000000000 in ?? (); (gdb) n; .....; 633 const cling::LookupHelper& lh = fInterpreter->getLookupHelper();; (gdb); 634 clang::QualType t = lh.findType(tname.c_str(), ToLHDS(WantDiags()));; (gdb); 639 if (!t.isNull()) {; (gdb) p t.dump(); TemplateSpecializationType 0x555556b681d0 'function<int (const int *, const std::string &)>' sugar function; |-TemplateArgument type 'int (const int *, const std::string &)'; `-RecordType 0x555556b67b20 'class std::function<int (const int *, const class std::__cxx11::basic_string<char> &)>'; `-ClassTemplateSpecialization 0x555556b67a18 'function'; $34 = void; ```. (This likely involves the fact that Clang's type printing routine spell unknown type as 'int' :) ).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8470:2170,load,load,2170,https://root.cern,https://github.com/root-project/root/issues/8470,1,['load'],['load']
Performance,".., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #15 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x11efcd4b0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #16 cling::IncrementalJIT::getSymbolAddress (this=0x11ef800c0, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #17 0x00007fffa2a50208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x11efca180) at /usr/include/c++/8/bits/unique_ptr.h:345; #18 cling::IncrementalExecutor::executeWrapper (this=0x11efca180, function=..., returnValue=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #19 0x00007fffa299b964 in cling::Interpreter::RunFunction (this=0x11ef4d780, FD=<optimized out>, res=res; entry=0x7fffff157520) at /usr/include/c++/8/bits/basic_string.h:2306; #20 0x00007fffa29a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffff157520, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #21 0x00007fffa2aecf60 in cling::MetaSema::<lambda(cling::Transaction*, std::__cxx11::string, llvm::StringRef, cling::Value*)>::operator() (__closure=<synthetic pointer>, ret=0x7fffff157520, args=..., func=""rf104_classfactory"", T=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/Support/raw_ostream.h:643; #22 cling::MetaSema::actOnxCommand (this=0x11f2601d0, file=..., args=..., result=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:158; #23 0x00007fffa2afed24 in cling::MetaParser::isXCommand (this=this; entry=0x7fffff1572b0, actionResult=; 0x7fffff15726",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:16319,optimiz,optimized,16319,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,".., this=0x174098770) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x174098770) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x17404b400, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #15 0x00007fff9a450208 in cling::IncrementalExecutor::jitInitOrWrapper<void (*)(void*)> (fun=<synthetic pointer>: <optimized out>, funcname=..., this=0x174094f70) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 cling::IncrementalExecutor::executeWrapper (this=0x174094f70, function=..., returnValue=0x7fffd51c7cb0) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:208; #17 0x00007fff9a39b964 in cling::Interpreter::RunFunction (this=0x1740192b0, FD=<optimized out>, res=res; entry=0x7fffd51c7cb0) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fff9a3a04d4 in cling::Interpreter::EvaluateInternal (this=<optimized out>, input=..., CO=..., V=0x7fffd51c7cb0, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/include/cling/Interpreter/Transaction.h:498; #19 0x00007fff9a24178c in TCling::Calc (this=0x174039100, line=0x174e16fa0 ""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., error=0x7fffd51c7de8) at /usr/include/c++/8/bits/basic_string.h:256; #20 0x00007fffa32551c8 in ROOT::Internal::RDF::<lambda(const string&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, codeSlice=""ROOT::Internal::RDF::CallBuildAction<ROOT::Internal::RDF::ActionTags::Mean, double>(reinterpret_cast<std::shared_ptr<ROOT::Detail::RDF::RNodeBase",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:22734,optimiz,optimized,22734,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"... if enabled in the `RNTupleWriteOptions`, which it is by default. This allows to use implicit multi-threading which can speed up the compression by a factor of 2x.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14616:97,multi-thread,multi-threading,97,https://root.cern,https://github.com/root-project/root/pull/14616,1,['multi-thread'],['multi-threading']
Performance,"... rootcling_stage1 ... G__Core.cxx ... ; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; In file included from input_line_2:1:; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:175:47: error: use of undeclared identifier 'std'; void copyArray(T* src, void* placement, std::size_t size) {; ^; /scratch/pcanal/spack-root-badter/tmp/spack-stage/spack-stage-root-develop-4gn6o5fpka65i75lxkr6h63al2u2hkmg/spack-build-4gn6o5f/etc/cling/Interpreter/RuntimeUniverse.h:176:14: error: use of undeclared identifier 'std'; for (std::size_t i = 0; i < size; ++i); ^; In file included from input_line_3:1:; In file included from /usr/include/assert.h:35:; In file included from /usr/include/features.h:514:; /usr/include/gnu/stubs.h:7:11: fatal error: 'gnu/stubs-32.h' file not found; # include <gnu/stubs-32.h>; ^~~~~~~~~~~~~~~~; Error: Error loading the default rootcling header files.; ninja: build stopped: subcommand failed.; ```. ### Reproducer. ```; cat /var/tmp/a.cxx ; void a(); {; fprintf(stdout, ""Running the script a.cxx\n"");; }. touch -m a -d '1969-12-31 18:00:00.000000000' /var/tmp/a.cxx . ls -l /var/tmp/a.cxx ; -rw-r--r-- 1 pcanal us_cms 63 Dec 31 1969 /var/tmp/a.cxx. root.exe -b -l -q /var/tmp/a.cxx . Processing /var/tmp/a.cxx...; input_line_8:1:10: fatal error: file '/var/tmp/a.cxx' modified since it was first processed; #include ""/var/tmp/a.cxx""; ^; ```. ### ROOT version. | Welcome to ROOT 6.31/01 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 12 2024, 21:36:24 |; | From heads/master@9645b3aa |; | With g++ (Spack GCC) 13.1.0 |. ### Installation method. SPACK with build Cache (but technically any). ### Operating system. Linux but likely any. ### Additional context. The problem was introduced during the upgrade to LLVM 16.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14372:1534,load,loading,1534,https://root.cern,https://github.com/root-project/root/issues/14372,2,"['Cache', 'load']","['Cache', 'loading']"
Performance,"..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #17 0x00007fffa2efea78 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fffa2f067e8 in TClingCallFunc::make_ctor_wrapper (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1215; #19 0x00007fffa2f07164 in TClingCallFunc::ExecDefaultConstructor (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name="""", address=0x0, nary=0) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1895; #20 0x00007fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:433; #23 0x00007fffa8f0fa14 in TClass::New (this=<optimized out>, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:4969; #24 0x00007fffa92e0724 in TBufferFile::ReadObjectAny (this=0x7ffff83ea100, clCast=0x10a861920) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:5967,optimiz,optimized,5967,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"..... Passed 5.07 sec; Start 2223: roottest-root-treeformula-formulaio-make; 7/19 Test #2223: roottest-root-treeformula-formulaio-make ......... Passed 0.47 sec; Start 2224: roottest-root-treeformula-function-make; 8/19 Test #2224: roottest-root-treeformula-function-make .......... Passed 11.54 sec; Start 2225: roottest-root-treeformula-morrison-make; 9/19 Test #2225: roottest-root-treeformula-morrison-make .......... Passed 6.49 sec; Start 2226: roottest-root-treeformula-ntuple-make; 10/19 Test #2226: roottest-root-treeformula-ntuple-make ............ Passed 0.52 sec; Start 2227: roottest-root-treeformula-operator-make; 11/19 Test #2227: roottest-root-treeformula-operator-make .......... Passed 0.88 sec; Start 2228: roottest-root-treeformula-parse-make; 12/19 Test #2228: roottest-root-treeformula-parse-make ............. Passed 17.10 sec; Start 2229: roottest-root-treeformula-references-make; 13/19 Test #2229: roottest-root-treeformula-references-make ........ Passed 7.84 sec; Start 2230: roottest-root-treeformula-retobj-make; 14/19 Test #2230: roottest-root-treeformula-retobj-make ............ Passed 6.25 sec; Start 2231: roottest-root-treeformula-scan-make; 15/19 Test #2231: roottest-root-treeformula-scan-make .............. Passed 1.08 sec; Start 2232: roottest-root-treeformula-schemaEvolution-make; 16/19 Test #2232: roottest-root-treeformula-schemaEvolution-make ... Passed 7.44 sec; Start 2233: roottest-root-treeformula-stl-make; 17/19 Test #2233: roottest-root-treeformula-stl-make ............... Passed 8.12 sec; Start 2234: roottest-root-treeformula-string-make; 18/19 Test #2234: roottest-root-treeformula-string-make ............ Passed 8.25 sec; Start 2235: roottest-root-treeformula-sync-make; 19/19 Test #2235: roottest-root-treeformula-sync-make ..............***Failed 4.13 sec; ```; </details>. That being said, it seems that performance-wise we are good. . PS: Let me know if I should re-introduce the enum optimization as it is currently reverted in the PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1252919323:9022,perform,performance-wise,9022,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1252919323,2,"['optimiz', 'perform']","['optimization', 'performance-wise']"
Performance,".......***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa13a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x173f45850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa13ac1c8 in TUnixSystem::DispatchSignals (this=0x173f45850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa13a308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:19604,optimiz,optimized,19604,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,..........................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_rh3.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-12T06:56:09.498Z] ghprbPullLongDescription=This addresses test failures like:\r\n```\r\n 998/1157 Test #997: tutorial-v7-draw_mt.cxx .............................................***Failed 8.47 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_mt.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1007/1157 Test #1007: tutorial-v7-draw_subpads.cxx ........................................***Failed 6.81 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/v7/draw_subpads.cxx...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT12Experimental7HistLogEv' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::Experimental::HistLog()\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n\r\n1017/1157 Test #1005: tutorial-v7-draw_rh3.cxx ............................................***Failed 28.52 sec\r\nProcessing /builddir/build/BUILD/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8417#issuecomment-860019280:2639,load,load,2639,https://root.cern,https://github.com/root-project/root/pull/8417#issuecomment-860019280,1,['load'],['load']
Performance,"...and add a test. The new argument is to make TTreeProcessorMT consistent with other; multi-threading interfaces, namely TThreadExecutor. This is the last; ingredient required to fix ROOT-10561.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5278:87,multi-thread,multi-threading,87,https://root.cern,https://github.com/root-project/root/pull/5278,1,['multi-thread'],['multi-threading']
Performance,"../root_dbg_includepaths/core/base/src/TROOT.cxx:2148; #26 0x00007fffefada682 in TCling::ShallowAutoLoadImpl (cls=0x555558cf04e0 ""vector<bool>"") at ../../../../root_dbg_includepaths/core/metacling/src/TCling.cxx:6052; #27 0x00007fffefada7c2 in TCling::DeepAutoLoadImpl (cls=0x555558cf04e0 ""vector<bool>"") at ../../../../root_dbg_includepaths/core/metacling/src/TCling.cxx:6075; #28 0x00007fffefadae02 in TCling::AutoLoad (this=0x555555958c90, cls=0x555558cf04e0 ""vector<bool>"", knowDictNotLoaded=true) at ../../../../root_dbg_includepaths/core/metacling/src/TCling.cxx:6191; #29 0x00007ffff70b1520 in TClass::LoadClassDefault (requestedname=0x555558cf04e0 ""vector<bool>"") at ../../../root_dbg_includepaths/core/meta/src/TClass.cxx:5763; #30 0x00007ffff70a7f0e in TClass::GetClass (name=0x555558cf3170 ""std::vector<bool>"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at ../../../root_dbg_includepaths/core/meta/src/TClass.cxx:3079; #31 0x00007ffff70a799d in TClass::GetClass (name=0x555558cf3170 ""std::vector<bool>"", load=true, silent=true) at ../../../root_dbg_includepaths/core/meta/src/TClass.cxx:2948; #32 0x00007ffff740a172 in Cppyy::GetScope (sname=""std::vector<bool>"") at ../../../../../root_dbg_includepaths/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:534; #33 0x00007ffff75602cb in CPyCppyy::Pythonize (pyclass=0x555558bf25d0, name=""std::vector<int>"") at ../../../../../root_dbg_includepaths/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:1106; #34 0x00007ffff7553f74 in CPyCppyy::CreateScopeProxy (name=""std::vector<int>"", parent=0x555556b95eb0) at ../../../../../root_dbg_includepaths/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:686; #35 0x00007ffff7553aae in CPyCppyy::CreateScopeProxy (name=""vector<int>"", parent=0x0) at ../../../../../root_dbg_includepaths/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:598; #36 0x00007ffff753146d in (anonymous namespace)::MakeCppTemplateClass (args=0x7fffeb472758) at ../../../../../root_dbg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-769679628:7362,load,load,7362,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-769679628,1,['load'],['load']
Performance,.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm; 0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:10881,Load,Loading,10881,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:7994,Load,Loading,7994,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:5364,Load,Loading,5364,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,".0.0-alice1-local2"" -DCMAKE_BUILD_TYPE=""RELWITHDEBINFO"" -DCMAKE_CXX_COMPILER=""clang++"" -DCMAKE_CXX_STANDARD=""17"" -DCMAKE_C_COMPILER=""clang"" -DCMAKE_INSTALL_PREFIX=""/Users/ktf/src/sw/osx_arm64/ROOT/alice-v6-28-00-local5"" -DCMAKE_LINKER=""clang"" -DCMAKE_PREFIX_PATH="";/opt/homebrew/opt/openssl@1.1;/opt/homebrew/opt/gsl;/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3;;/Users/ktf/src/sw/osx_arm64/Python-modules/1.0-local5;/opt/homebrew/opt/libpng;/Users/ktf/src/sw/osx_arm64/lzma/v5.2.3-local1;/Users/ktf/src/sw/osx_arm64/protobuf/v21.9-local1"" -DGSL_DIR=""/opt/homebrew/opt/gsl"" -DMONALISA_DIR=""/Users/ktf/src/sw/osx_arm64/AliEn-Runtime/v2-19-le-local3"" -DOPENSSL_INCLUDE_DIR=""/opt/homebrew/opt/openssl@1.1/include"" -DOPENSSL_ROOT=""/opt/homebrew/opt/openssl@1.1"" -DPNG_INCLUDE_DIRS=""/opt/homebrew/opt/libpng/include"" -DPNG_LIBRARY=""/opt/homebrew/opt/libpng/lib/libpng.dylib"" -DPYTHON_PREFER_VERSION=""3"" -DXROOTD_ROOT_DIR=""/Users/ktf/src/sw/osx_arm64/XRootD/v5.5.3-local7"" -Dalien=""OFF"" -Darrow=""ON"" -Dbuiltin_afterimage=""ON"" -Dbuiltin_davix=""OFF"" -Dbuiltin_freetype=""OFF"" -Dbuiltin_pcre=""ON"" -Dbuiltin_vdt=""ON"" -Dcocoa=""ON"" -Ddavix=""OFF"" -Dfortran=""OFF"" -Dfreetype=""ON"" -Dgviz=""OFF"" -Dhttp=""OFF"" -Dminuit2=""ON"" -Dmonalisa=""ON"" -Dmysql=""OFF"" -Dpcre=""OFF"" -Dpgsql=""OFF"" -Dpyroot=""ON"" -Dpythia6_nolink=""ON"" -Droofit=""ON"" -Droot7=""OFF"" -Dshadowpw=""OFF"" -Dsoversion=""ON"" -Dspectrum=""OFF"" -Dsqlite=""OFF"" -Dtmva-sofie=""OFF"" -Dvdt=""OFF"" -Dwebgui=""OFF"" -Dxrootd=""ON"" /Users/ktf/src/sw/SOURCES/ROOT/alice-v6-28-00/0; //Build TMVA with support for sofie - fast inference code generation; tmva-sofie:BOOL=OFF; tmva-sofie-CACHED:STRING=OFF; ```. ### What is the expected behaviour?. No sofie related libraries if `-Dtmva-sofie=OFF` is provided. ### How to reproduce?. Build with -Dtmva-sofie=OFF on macOS. ### ROOT version. 6.28.04. ### How did you install ROOT?. https://github.com/alisw/alidist/blob/master/root.sh. ### Which operating system are you using?. macOS. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13055:2182,CACHE,CACHED,2182,https://root.cern,https://github.com/root-project/root/issues/13055,1,['CACHE'],['CACHED']
Performance,.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm; 0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:10471,Load,Loading,10471,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:8128,Load,Loading,8128,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,".13.so.1.0; #51 0x00007f3f13e3c1c8 in __libc_start_call_main () from /lib64/libc.so.6; #52 0x00007f3f13e3c28b in __libc_start_main_impl () from /lib64/libc.so.6; #53 0x00005619b4d2b095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:7925,optimiz,optimized,7925,https://root.cern,https://github.com/root-project/root/issues/15799,2,['optimiz'],['optimized']
Performance,".2"" ""/home/jalopezg/CERN/build/lib/libRIO.so"" ""/home/jalopezg/CERN/build/lib/libThread.so"" ""/home/jalopezg/CERN/build/lib/libCling.so"" ""/usr/lib/librt.so.1"" ""/usr/lib/libncursesw.so.6"" ""/usr/lib/ld-2.33.so"" ""/home/jalopezg/CERN/build/lib/libMathCore.so"" ""/home/jalopezg/CERN/build/lib/libImt.so"" ""/home/jalopezg/CERN/build/lib/libMultiProc.so"" ""/home/jalopezg/CERN/build/lib/libNet.so"" ""/usr/lib/libtbb.so.2"" ""/usr/lib/libssl.so.1.1"" ""/usr/lib/libcrypto.so.1.1"" ""/usr/lib/libnss_systemd.so.2"" -o ""/home/jalopezg/CERN/build/roottest/root/dataframe/test_snapshot_C.so"" /home/jalopezg/CERN/build/lib/libROOTDataFrame.so /home/jalopezg/CERN/build/lib/libTreePlayer.so /home/jalopezg/CERN/build/lib/libTree.so /home/jalopezg/CERN/build/roottest/root/dataframe/test_readFcc /home/jalopezg/CERN/build/roottest/root/dataframe/par' failed!; 1369: terminate called after throwing an instance of 'std::logic_error'; 1369: what(): basic_string::_M_construct null not valid; ```. I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be `roottest-root-dataframe-test_snapshot_manytasks`. ### To Reproduce; <!--; Steps to reproduce the behavior:; 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves.; 2. Don't forget to attach the required input files!; 3. How to run your code and / or build it, e.g. `root myMacro.C`, ...; -->. The following repository provides a Dockerfile to reproduce the issue in a container https://gitlab.cern.ch/eguiraud/arch_aclic_bug . ### Setup; <!--; 1. ROOT version; 2. Operating system; 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.; -->. ROOT master (but 6.22 also has issues) and arch linux. I tried building from source (6.22 and master) as well as installing from the system repos -- failure modes are different but none can run all tests without problems. Gentoo seems to also be affected.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7366:3319,concurren,concurrently,3319,https://root.cern,https://github.com/root-project/root/issues/7366,1,['concurren'],['concurrently']
Performance,".2.0 (GCC)`; ```; ------------------------------------------------------------------; | Welcome to ROOT 6.26/06 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jul 28 2022, 18:08:51 |; | From tags/v6-26-06@v6-26-06 |; | With g++ (GCC) 11.2.0 |; | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```; The ROOT and GCC is from cvmfs (`juno.ihep.ac.cn`). ### Additional context; <!--; Add any other context about the problem here.; -->; <details>; <summary>GDB backtrace</summary>. ```; #0 0x00007ffff7f1e2c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2216c80) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #1 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2216c80) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #2 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x209f320, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #3 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #4 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x209f318, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #5 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x209f2f8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #6 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::sha",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:2663,optimiz,optimized,2663,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,".28.00/core/meta/src/TClass.cxx:6797; #45 0x00007fffa93abef0 in TClass::Streamer (onfile_class=0x0, b=..., obj=0x109986ba0, this=0x10a596170) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, expectedClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ======================================================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:11493,optimiz,optimized,11493,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,.; ### Failing tests:; - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17833/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibs/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execMTInit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17833/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execMTInit/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsAZ](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17833/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsAZ/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsZA](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17833/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsZA/); - [projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInf](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17833/testReport/projectroot.roottest.root.meta.tclass/regression/roottest_root_meta_tclass_regression_execNormalizationInf/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_runpairs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17833/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_runpairs/); - [projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execNormalizationInfPy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/17833/testReport/projectroot.roottest.root.meta.tclass/regression/roottest_root_meta_tclass_regression_execNormalizationInfPy/); - [projectroot.roottest.root.meta.tclass.regression.roottest_root_meta_tclass_regression_execROOT_6038](https://epsft-jenkins.cern.ch/job/root-pullrequ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1654#issuecomment-367098533:1092,load,loadAllLibs,1092,https://root.cern,https://github.com/root-project/root/pull/1654#issuecomment-367098533,1,['load'],['loadAllLibs']
Performance,.; ### Failing tests:; - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.arrayobject.roottest_root_io_arrayobject_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/arrayobject/roottest_root_io_arrayobject_make/); - [projectroot.roottest.root.io.alloc.roottest_root_io_alloc_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/alloc/roottest_root_io_alloc_make/); - [projectroot.roottest.root.io.buffer.roottest_root_io_buffer_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testReport/projectroot.roottest.root.io/buffer/roottest_root_io_buffer_make/); - [projectroot.roottest.root.io.customCollection.roottest_root_io_customCollection_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58692/testRe,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3769#issuecomment-489463224:1122,cache,cache,1122,https://root.cern,https://github.com/root-project/root/pull/3769#issuecomment-489463224,1,['cache'],['cache']
Performance,.; hsimple : Real Time = 0.12 seconds Cpu Time = 0.12 seconds; (TFile *) 0x37430c0; ===-------------------------------------------------------------------------===; Clang front-end time report; ===-------------------------------------------------------------------------===; Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---; 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules; 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm; 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm; 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:1232,Load,Loading,1232,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,".c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #9 0x00007af5858a404a in ?? (); #10 0x00007af5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:17145,optimiz,optimized,17145,https://root.cern,https://github.com/root-project/root/issues/15117,3,['optimiz'],['optimized']
Performance,".c:456; #36 0x00007af58740ec10 in _PyRun_AnyFileObject (fp=fp; entry=0x5fe0e477c7f0, filename=filename; entry=0x7af5865a5e30, closeit=closeit; entry=1, flags=flags; entry=0x7ffea3a92318) at Python/pythonrun.c:90; #37 0x00007af58742f688 in pymain_run_file_obj (skip_source_first_line=0, filename=0x7af5865a5e30, program_name=0x7af586553cb0) at Modules/main.c:353; #38 pymain_run_file (config=0x5fe0e4731230) at Modules/main.c:372; #39 pymain_run_python (exitcode=0x7ffea3a92310) at Modules/main.c:587; #40 Py_RunMain () at Modules/main.c:666; #41 0x00007af58742fc4e in pymain_main (args=0x7ffea3a92400) at Modules/main.c:696; #42 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:720; #43 0x00007af586e29d90 in __libc_start_call_main (main=main; entry=0x5fe0e3303060 <main>, argc=argc; entry=2, argv=argv; entry=0x7ffea3a92588) at ../sysdeps/nptl/libc_start_call_main.h:58; #44 0x00007af586e29e40 in __libc_start_main_impl (main=0x5fe0e3303060 <main>, argc=2, argv=0x7ffea3a92588, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffea3a92578) at ../csu/libc-start.c:392; #45 0x00005fe0e3303095 in _start (); ===========================================================. Traceback (most recent call last):; File ""/home/tmadlener/work/playground/python/pyroot_update_issue/repro.py"", line 52, in <module>; repro.foo(cppyy.gbl.std.move(c)); TypeError: Template method resolution failed:; void repro::foo(unique_ptr<repro::Base,default_delete<repro::Base> >&& basePtr) =>; SegmentationViolation: segfault in C++; program state was reset; Failed to instantiate ""foo(repro::Derived&)""; Failed to instantiate ""foo(repro::Derived*)""; void repro::foo(repro::Derived&& t) =>; ValueError: could not convert argument 1 (object is not an rvalue); ```; </details>. Finally, I have checked this with ""pure"" `cppyy` (3.1.2). There I observe the following:; - If I have `void foo(std::unique_ptr<Base>)` (the original), then cppyy calls the templated version",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:24099,optimiz,optimized,24099,https://root.cern,https://github.com/root-project/root/issues/15117,3,['optimiz'],['optimized']
Performance,.cern.ch/job/root-pullrequests-build/66752/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_merged_zstd/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_classes_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66752/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_classes_libgen_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66752/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66752/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66752/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66752/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_classWithComplex_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66752/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_classWithComplex_libgen_build/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/66752/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList_libgen_build/); - ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3947#issuecomment-526603145:1616,load,load,1616,https://root.cern,https://github.com/root-project/root/pull/3947#issuecomment-526603145,1,['load'],['load']
Performance,.ch/job/root-pullrequests-build/29004/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29004/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29004/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29004/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29004/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29004/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29004/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29004/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.math.mathcore.test.mathcore_testBinarySearch](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29004/testReport/projectroot.math.mathcore/test/mathcore_testBinarySearch/). And 147 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2146#issuecomment-394800691:1575,cache,cache,1575,https://root.cern,https://github.com/root-project/root/pull/2146#issuecomment-394800691,1,['cache'],['cache']
Performance,.ch/job/root-pullrequests-build/45457/console).; ### Warnings:; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/scalar/../common/../sse/intrinsics.h:616:16: warning: variable 'f' may be uninitialized when used here [-Wconditional-uninitialized] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/scalar/../common/memorybase.h:463:83: warning: unused parameter 'flags' [-Wunused-parameter] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/scalar/../common/memorybase.h:478:89: warning: unused parameter 'flags' [-Wunused-parameter] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/common/simdize.h:913:1: warning: 'tuple_size' defined as a class template here but previously declared as a struct template [-Wmismatched-tags] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/common/simdize.h:920:1: warning: 'tuple_element' defined as a class template here but previously declared as a struct template [-Wmismatched-tags] . ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45457/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45457/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45457/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2806#issuecomment-432803626:1653,cache,cache,1653,https://root.cern,https://github.com/root-project/root/pull/2806#issuecomment-432803626,2,['cache'],['cache']
Performance,.ch/job/root-pullrequests-build/45635/console).; ### Warnings:; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/scalar/../common/../sse/intrinsics.h:616:16: warning: variable 'f' may be uninitialized when used here [-Wconditional-uninitialized] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/scalar/../common/memorybase.h:463:83: warning: unused parameter 'flags' [-Wunused-parameter] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/scalar/../common/memorybase.h:478:89: warning: unused parameter 'flags' [-Wunused-parameter] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/common/simdize.h:913:1: warning: 'tuple_size' defined as a class template here but previously declared as a struct template [-Wmismatched-tags] ; - /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-centos7-clang39-opt/lib/cmake/VecCore/../../../include/Vc/common/simdize.h:920:1: warning: 'tuple_element' defined as a class template here but previously declared as a struct template [-Wmismatched-tags] . ### Failing tests:; - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45635/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45635/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/45635/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2806#issuecomment-433141420:1653,cache,cache,1653,https://root.cern,https://github.com/root-project/root/pull/2806#issuecomment-433141420,2,['cache'],['cache']
Performance,".ch/root-jenkins/job/root-pullrequests-build/173912/console).; ### Warnings:; - [2023-05-04T16:30:20.780Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-04T16:30:20.780Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-04T16:30:20.780Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-04T16:30:20.780Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-04T16:30:38.652Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-04T16:30:43.474Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-04T16:30:43.474Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263#issuecomment-1535115664:1127,perform,performing,1127,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1535115664,1,['perform'],['performing']
Performance,".ch/root-jenkins/job/root-pullrequests-build/174115/console).; ### Warnings:; - [2023-05-07T13:50:12.568Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-07T13:50:12.568Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-07T13:50:12.568Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-07T13:50:12.568Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-05-07T13:50:17.945Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-07T13:50:23.320Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:289:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-05-07T13:50:23.320Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/base/src/TTimeStamp.cxx:335:4: warning: 'sprintf' is deprecated: This function is provided",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12780#issuecomment-1537456868:1127,perform,performing,1127,https://root.cern,https://github.com/root-project/root/pull/12780#issuecomment-1537456868,1,['perform'],['performing']
Performance,.ch/root-jenkins/job/root-pullrequests-build/85591/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data5_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data6_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85591/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data6_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data1_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85591/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data1_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data3_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85591/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data3_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data4_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85591/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data4_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data2_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85591/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data2_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85591/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85591/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/). And 524 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5806#issuecomment-639974684:2603,load,load,2603,https://root.cern,https://github.com/root-project/root/pull/5806#issuecomment-639974684,2,['load'],['load']
Performance,.concurrentResetRestoreSpin; 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStd; 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStd14; 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStd17; 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestore; 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms); 76: [ RUN ] RWLock.concurrentResetRestoreTL; 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL; 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms); 76: [ RUN ] RWLock.concurrentReadsAndWrites; 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin; 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd; 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14; 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17; 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites; 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3106 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3107 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (310 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWrites; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWrites (16427 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesStd; 76: [ OK ] RWLock.V,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:8535,concurren,concurrentReadsAndWritesStd,8535,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,1,['concurren'],['concurrentReadsAndWritesStd']
Performance,.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/37a553c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/24c3ccde.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3f638905.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:51057,load,load,51057,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGRID-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UGR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:36109,load,load,36109,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,".cxx#L1203). Here is the full stacktrace after the segfault:. ```; #8 TDirectory::RecursiveRemove (this=0x7ffd338cef30, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TDirectory.cxx:1203; #9 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0a40, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354; #10 0x00007f770e616bfc in THashList::RecursiveRemove (this=0x18d0b90, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/cont/src/THashList.cxx:354; #11 0x00007f770e5b3a41 in TROOT::RecursiveRemove (this=0x7f770e8a3ac0 <ROOT::Internal::GetROOT1()::alloc>, obj=0x7ffd338cd750) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TROOT.cxx:2470; #12 0x00007f770ed3bb51 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at /home/vpadulan/programs/rootproject/rootsrc/core/base/inc/TROOT.h:400; #13 0x00007f770e58f5c4 in TObject::~TObject (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TObject.cxx:163; #14 0x00007f770e679bec in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::~TCheckHashRecursiveRemoveConsistency (this=0x7ffd338cd750, __in_chrg=<optimized out>) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:68; #15 0x00007f770e67a607 in ROOT::Internal::TCheckHashRecursiveRemoveConsistency::Check (classRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TCheckHashRecursiveRemoveConsistency.h:243; #16 0x00007f770e675af2 in TClass::SetRuntimeProperties (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/src/TClass.cxx:6205; #17 0x00007f770e6795fb in TClass::HasConsistentHashMember (this=0x31c5950) at /home/vpadulan/programs/rootproject/rootsrc/core/meta/inc/TClass.h:502; #18 0x00007f770e678e1a in ROOT::Internal::HasConsistentHashMember (clRef=...) at /home/vpadulan/programs/rootproject/rootsrc/core/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13691:1476,optimiz,optimized,1476,https://root.cern,https://github.com/root-project/root/issues/13691,1,['optimiz'],['optimized']
Performance,.cxx:155:21: 'newpytc' initialized here; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156:21: Assuming the condition is true; /usr/include/python2.7/object.h:774:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156:21: Taking true branch; /usr/include/python2.7/object.h:773:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:156:21: Loop condition is false. Exiting loop; /usr/include/python2.7/object.h:772:5: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:157:21: Value assigned to 'pytc'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158:25: Assuming 'pytc' is null; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:158:21: Taking false branch; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:163:17: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'pytc'); /usr/include/python2.7/object.h:774:9: expanded from macro 'Py_DECREF'; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:163:17: warning: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'pytc') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: Assuming 'nArgs' is not equal to 0 in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:128; 3: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:128; 4: Assuming 'i' is < 'nArgs' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:130; 5: Loop condition is true. Entering loop body in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:130; 6: Assuming 'pytc' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:137; 7: Taking false branch in /opt/root_src/bindin,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-792738257:24500,load,loaded,24500,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-792738257,1,['load'],['loaded']
Performance,".cxx:1608; #126 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x555557625580, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #127 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x5555575cfe78, conf=0x555557625580); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #128 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x5555575cfe78, buffer=..., ; this=0x555557624830) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #129 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x5555575cfe78); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #130 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556b015f0, pointer=0x5555575cfe78, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #131 0x00007ffff7a84dd9 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555556b015f0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #132 TStreamerInfo::ReadBuffer<char**> (this=0x555556977820, b=..., arr=@0x7fffffffcd20: 0x7fffffffcd18, compinfo=0x555557621438, ; first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1316; #133 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #134 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x5555575cfe30, buffer=..., ; this=0x5555574e8d10) at /home/rembserj/spaces/master/root/src/root/i",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:29086,optimiz,optimized,29086,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,".cxx:1608; #162 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x55555700e030, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #163 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x555556982270, conf=0x55555700e030); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #164 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555556982270, buffer=..., ; this=0x55555701cfa0) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #165 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555556982270); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #166 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556a0eca0, pointer=0x555556982270, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #167 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x555556965f40, b=..., ; pointer=0x555556982270 ""\220\335\023\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #168 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x555556965d70, b=..., arr=@0x7fffffffd8b0: 0x7fffffffd8a8, ; compinfo=0x55555701e3e8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #169 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #170 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555556982270, buffer=..., ; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:37077,optimiz,optimized,37077,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,".cxx:566; #40 0x00007faec0888a78 in _PyObject_MakeTpCall (tstate=0x389e880, callable=<cppyy.CPPOverload at remote 0x7faea81be7c0>, args=<optimized out>, nargs=0x0, keywords=0x0) at Objects/call.c:191; #41 0x00007faec083e709 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=0x8000000000000000, args=0x7faea8293840, callable=<cppyy.CPPOverload at remote 0x7faea81be7c0>, tstate=<optimized out>) at ./Include/cpython/abstract.h:116; #42 _PyObject_VectorcallTstate (kwnames=0x0, nargsf=0x8000000000000000, args=0x7faea8293840, callable=<cppyy.CPPOverload at remote 0x7faea81be7c0>, tstate=<optimized out>) at ./Include/cpython/abstract.h:103; #43 PyObject_Vectorcall (kwnames=0x0, nargsf=0x8000000000000000, args=0x7faea8293840, callable=<cppyy.CPPOverload at remote 0x7faea81be7c0>) at ./Include/cpython/abstract.h:127; #44 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x389e880) at Python/ceval.c:5077; #45 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3489; #46 0x00007faec096bb0e in _PyEval_EvalFrame (throwflag=0x0, f=Frame 0x7faea82936c0, for file /cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/_application.py, line 91, in _process_root_events (self=<PyROOTApplication(_is_ipython=False, keep_polling=True, process_root_events=<Thread(_target=<function at remote 0x7faea81bb8b0>, _name='Thread-1', _args=(<...>,), _kwargs={}, _daemonic=True, _ident=140388121413376, _native_id=34896, _tstate_lock=<_thread.lock at remote 0x7faea82355d0>, _started=<Event(_cond=<Condition(_lock=<_thread.lock at remote 0x7faec0dc70f0>, acquire=<built-in method acquire of _thread.lock object at remote 0x7faec0dc70f0>, release=<built-in method release of _thread.lock object at remote 0x7faec0dc70f0>, _waiters=<collections.deque at remote 0x7faec0dcd340>) at remote 0x7faec0dc7250>, _flag=True) at remote 0x7faec0dc7fa0>, _is_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:9592,optimiz,optimized,9592,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,6,['optimiz'],['optimized']
Performance,".cxx:648; #14 0x00007f5b3e7f536b in TGClient::HandleInput() (this=0x55e768de2290) at ../gui/gui/src/TGClient.cxx:703; #15 0x00007f5b8dcb0ff8 in TUnixSystem::DispatchOneEvent(bool) (this=0x55e75ccfd080, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1067; #16 0x00007f5b8dbd0dca in TSystem::ProcessEvents() (this=0x55e75ccfd080) at ../core/base/src/TSystem.cxx:424; #17 0x00007f5b8130600d in (); #18 0x00007f5b79ae0450 in (); #19 0x00007f5b8de5215f in WrapperCall(Cppyy::TCppMethod_t, size_t, void*, void*, void*) (method=94452242807424, nargs=0, args_=0x7f5b79ae01d7, self=0x55e75ccfd080, result=0x7f5b79ae01d7) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #20 0x00007f5b8de527cf in CallT<unsigned char> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #21 Cppyy::CallB(long, void*, unsigned long, void*) (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833; #22 0x00007f5b8decdc0f in GILCallB (ctxt=0x7f5b79ae0430, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:69; #23 CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(Cppyy::TCppMethod_t, Cppyy::TCppObject_t, CPyCppyy::CallContext*) (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:148; #24 0x00007f5b8deba4c9 in CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, this=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #25 0x00007f5b8debd3a8 in CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:1874,optimiz,optimized,1874,https://root.cern,https://github.com/root-project/root/pull/9139,4,['optimiz'],['optimized']
Performance,".cxx:860; #7 0x00007fea7e92acd1 in TObject::Fatal (this=0x7ffcad78f2b0, location=0x7fea7f1cb532 ""RecursiveRemove"", fmt=0x7fea7f1cb4c8 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at ../core/base/src/TObject.cxx:925; #8 0x00007fea7ef90e56 in TFileMerger::RecursiveRemove (this=0x7ffcad78f2b0, obj=0x559367a40820) at ../io/io/src/TFileMerger.cxx:1081; #9 0x00007fea7e9ad0bf in THashList::RecursiveRemove (this=0x5593666f1840, obj=0x559367a40820) at ../core/cont/src/THashList.cxx:354; #10 0x00007fea7e8d4e14 in TROOT::RecursiveRemove (this=0x7fea7ec46740 <ROOT::Internal::GetROOT1()::alloc>, obj=0x559367a40820) at ../core/base/src/TROOT.cxx:2455; #11 0x00007fea80417f82 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at ../core/base/inc/TROOT.h:398; #12 0x00007fea7e927b18 in TNamed::~TNamed (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TNamed.cxx:45; #13 0x00007fea7e9081d5 in TDirectory::~TDirectory (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TDirectory.cxx:117; #14 0x00007fea7ef7c856 in TDirectoryFile::~TDirectoryFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TDirectoryFile.cxx:202; #15 0x00007fea7ef9673f in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #16 0x00007fea7ef96776 in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #17 0x00007fea7e9288d9 in TObject::Delete (this=0x559367a40820) at ../core/base/src/TObject.cxx:178; #18 0x00007fea802bbf82 in TTree::ChangeFile (this=0x559368ca6c20, file=0x559367a40820) at ../tree/tree/src/TTree.cxx:2813; #19 0x00007fea802bf66e in TTree::CopyEntries (this=0x559368ca6c20, tree=0x559368ca7a30, nentries=53446198, option=0x7ffcad78e7a1 "" fast"", needCopyAddresses=true) at ../tree/tree/src/TTree.cxx:3567; #20 0x00007fea802c825a in TTree::Merge (this=0x559368ca6c20, li=0x7ffcad78e560, info=0x7ffcad78e780)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10102:4042,optimiz,optimized,4042,https://root.cern,https://github.com/root-project/root/issues/10102,1,['optimiz'],['optimized']
Performance,.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); > ; > * [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); > ; > * [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); > ; > * [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); > ; > * [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); > ; > * [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); > ; > * [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_ioreadrulesfailonwarning/); > ; > * [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_vectorOfTStar](https://lcgapp-services.cern.ch/root-jen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10457#issuecomment-1110847529:1030,load,load,1030,https://root.cern,https://github.com/root-project/root/pull/10457#issuecomment-1110847529,1,['load'],['load']
Performance,.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28914/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28914/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28914/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28914/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28914/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28914/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28914/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28914/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_array_interface](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28914/testRep,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394553626:1175,cache,cache,1175,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394553626,1,['cache'],['cache']
Performance,.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29865/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29865/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29865/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29865/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29865/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29865/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29865/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.core.imt.test.gtest_core_imt_test_testTFuture](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29865/testReport/projectroot.core.imt/test/gtest_core_imt_test_testTFuture/); - [projectroot.core.meta.test.gtest_core_meta_test_testStatusBitsChecker](https://epsft-jen,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2097#issuecomment-396551669:1175,cache,cache,1175,https://root.cern,https://github.com/root-project/root/pull/2097#issuecomment-396551669,1,['cache'],['cache']
Performance,.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29907/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29907/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29907/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29907/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29907/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29907/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29907/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29907/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2185#issuecomment-396761248:1175,cache,cache,1175,https://root.cern,https://github.com/root-project/root/pull/2185#issuecomment-396761248,1,['cache'],['cache']
Performance,.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28894/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28894/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28894/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28894/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28894/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28894/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28894/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28894/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2141#issuecomment-394490546:1431,cache,cache,1431,https://root.cern,https://github.com/root-project/root/pull/2141#issuecomment-394490546,1,['cache'],['cache']
Performance,".exe -l -b -q ~/public/AO2D.root. Attaching file /afs/cern.ch/user/e/eulisse/public/AO2D.root as _file0...; (TFile *) 0x3910f20; Command exited with non-zero status 255; Command being timed: ""root.exe -l -b -q /afs/cern.ch/user/e/eulisse/public/AO2D.root""; User time (seconds): 0.42; System time (seconds): 0.30; Percent of CPU this job got: 72%; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:01.01; Average shared text size (kbytes): 0; Average unshared data size (kbytes): 0; Average stack size (kbytes): 0; Average total size (kbytes): 0; Maximum resident set size (kbytes): 207928; Average resident set size (kbytes): 0; Major (requiring I/O) page faults: 0; Minor (reclaiming a frame) page faults: 76766; Voluntary context switches: 9921; Involuntary context switches: 28; Swaps: 0; File system inputs: 0; File system outputs: 0; Socket messages sent: 0; Socket messages received: 0; Signals delivered: 0; Page size (bytes): 4096; Exit status: 255; ```. The difference indeed seems to come from loading SOFIE and PyMVA on demand (why?). ```bash; → diff -Naur =(ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep Preloading) =(ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep Preloading); --- /tmp/zsh3krahi 2023-06-28 09:47:35.214307973 +0200; +++ /tmp/zshDEGUqN 2023-06-28 09:47:35.843315522 +0200; @@ -117,4 +117,3 @@; Info in <TCling::__LoadModule>: Preloading module MultiProc.; Info in <TCling::__LoadModule>: Preloading module Imt.; Info in <TCling::__LoadModule>: Preloading module MathCore.; -Info in <TCling::__LoadModule>: Preloading module Tree.; ```. ```bash; → diff -Naur =(ROOTDEBUG=7 root.exe -l -b -q ~/public/AO2D.root 2>&1 | grep 'on demand' | cut -d' ' -f 2 | sort | uniq) =(ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep 'on demand' | cut -d' ' -f 2 | sort | uniq); --- /tmp/zshD2FXJ0 2023-06-28 09:48:55.414270426 +0200; +++ /tmp/zsh1jCtJt 2023-06-28 09:48:56.293280974 +0200; @@ -1,5 +1,4 @@; 'Cling_Runtime'; -'Cling_Runtime_Extra'; 'Core'; 'Foam'; 'Genetic'; @@ -9,7 +8,6 @",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1611006906:3459,load,loading,3459,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1611006906,1,['load'],['loading']
Performance,".global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* bitcast (void (i8*)* @__cuda_module_ctor_cling_module_6 to void ()*), i8* null }]; > ; > ; Function Attrs: noinline uwtable; > define dso_local void @_Z7kernel2v() #0 {; > %1 = alloca %struct.dim3.463, align 8; > %2 = alloca %struct.dim3.463, align 8; > %3 = alloca i64, align 8; > %4 = alloca i8*, align 8; > %5 = alloca { i64, i32 }, align 8; > %6 = alloca { i64, i32 }, align 8; > %7 = alloca i8*, i64 1, align 16; > %8 = call i32 @__cudaPopCallConfiguration(%struct.dim3.463* %1, %struct.dim3.463* %2, i64* %3, i8** %4); > %9 = load i64, i64* %3, align 8; > %10 = load i8*, i8** %4, align 8; > %11 = bitcast { i64, i32 }* %5 to i8*; > %12 = bitcast %struct.dim3.463* %1 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false); > %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 0; > %14 = load i64, i64* %13, align 8; > %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 1; > %16 = load i32, i32* %15, align 8; > %17 = bitcast { i64, i32 }* %6 to i8*; > %18 = bitcast %struct.dim3.463* %2 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false); > %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0; > %20 = load i64, i64* %19, align 8; > %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1; > %22 = load i32, i32* %21, align 8; > %23 = bitcast i8* %10 to %struct.CUstream_st.464*; > %24 = call i32 @cudaLaunchKernel(i8* bitcast (void ()* @_Z7kernel2v to i8*), i64 %14, i32 %16, i64 %20, i32 %22, i8** %7, i64 %9, %struct.CUstream_st.464* %23); > br label %25; > ; > 25: ; preds = %0; > ret void; > }; > ; > declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3.463*, %struct.dim3.463*, i64*, i8**); > ; > declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st.46",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164697687:20807,load,load,20807,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164697687,2,['load'],['load']
Performance,".h:2109:48; frame #19: 0x000000011acaf043 libCling.so`clang::ASTReader::diagnoseOdrViolations(this=0x0000000102887a00) at ASTReader.cpp:9545:40; frame #20: 0x000000011acbdf09 libCling.so`clang::ASTReader::FinishedDeserializing(this=0x0000000102887a00) at ASTReader.cpp:11674:5; frame #21: 0x0000000119cd953d libCling.so`cling::ExternalASTSourceWrapper::FinishedDeserializing(this=0x000060000022bac0) at InterpreterCallbacks.cpp:198:17; frame #22: 0x000000011af4d3ee libCling.so`clang::MultiplexExternalSemaSource::FinishedDeserializing(this=0x0000600000c34900) at MultiplexExternalSemaSource.cpp:154:17; frame #23: 0x000000011e9e417c libCling.so`clang::ExternalASTSource::Deserializing::~Deserializing(this=0x00007ff7bfef9898) at ExternalASTSource.h:86:15; frame #24: 0x000000011e9df2d5 libCling.so`clang::ExternalASTSource::Deserializing::~Deserializing(this=0x00007ff7bfef9898) at ExternalASTSource.h:85:22; frame #25: 0x000000011e9df0ba libCling.so`clang::DeclContext::LoadLexicalDeclsFromExternalStorage(this=0x0000000110b3b5c0) const at DeclBase.cpp:1377:1; frame #26: 0x000000011e9df87f libCling.so`clang::DeclContext::decls_begin(this=0x0000000110b3b5c0) const at DeclBase.cpp:1412:5; frame #27: 0x000000011964a849 libCling.so`clang::DeclContext::decls(this=0x0000000110b3b5c0) const at DeclBase.h:2109:48; frame #28: 0x0000000119645dc5 libCling.so`clang::RecursiveASTVisitor<ROOT::Internal::DictSelectionReader>::TraverseDeclContextHelper(this=0x00007ff7bfefb208, DC=0x0000000110b3b5c0) at RecursiveASTVisitor.h:1393:26; frame #29: 0x00000001195c8ddf libCling.so`clang::RecursiveASTVisitor<ROOT::Internal::DictSelectionReader>::TraverseClassTemplateSpecializationDecl(this=0x00007ff7bfefb208, D=0x0000000110b3b580) at RecursiveASTVisitor.h:1933:1; frame #30: 0x00000001195b62c0 libCling.so`clang::RecursiveASTVisitor<ROOT::Internal::DictSelectionReader>::TraverseDecl(this=0x00007ff7bfefb208, D=0x0000000110b3b580) at DeclNodes.inc:287:1; frame #31: 0x0000000119687a74 libCling.so`clang::Recu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12788#issuecomment-1538921951:3937,Load,LoadLexicalDeclsFromExternalStorage,3937,https://root.cern,https://github.com/root-project/root/issues/12788#issuecomment-1538921951,1,['Load'],['LoadLexicalDeclsFromExternalStorage']
Performance,.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:28:07.141Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/externals/Users/sftnight/build/jenkins/workspace/root-pullrequests-build/install/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:28:07.141Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/externals/Users/sftnight/build/jenkins/workspace/root-pullrequests-build/install/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:28:07.702Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/externals/Users/sftnight/build/jenkins/workspace/root-pullrequests-build/install/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:28:07.968Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/externals/Users/sftnight/build/jenkins/workspace/root-pullrequests-build/install/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] . And 349 more. ### Failing tests:; - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertmyfun](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142524/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertmyfun/); - [projectroot.roottest.root.hist.formula.roottest_root_hist_formula_runconstargs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142524/testReport/projectroot.roottest.root.hist/formula/roottest_root_hist_formula_runconstargs/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10391#issuecomment-1098228197:2611,perform,performing,2611,https://root.cern,https://github.com/root-project/root/pull/10391#issuecomment-1098228197,2,['perform'],['performing']
Performance,.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14286/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14286/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14286/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14286/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.math.mathcore.test.gtest_math_mathcore_test_stressMathCoreUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14286/testReport/projectroot.math.mathcore/test/gtest_math_mathcore_test_stressMathCoreUnit/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14286/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.collection.roottest_root_collection_runCATTreeClear_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14286/testReport/projectroot.roottest.root/collection/roottest_root_collection_runCATTreeClear_auto/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/14286/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/). And 36 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1468#issuecomment-352024639:1532,cache,cache,1532,https://root.cern,https://github.com/root-project/root/pull/1468#issuecomment-352024639,1,['cache'],['cache']
Performance,.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-sec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:15334,load,load,15334,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/14e86c33.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87250dfa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e02f50a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Services.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DCAROOT-G1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IHEP-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NERSC-SLCS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b93d6240.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/39d30eba.name,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:54776,load,load,54776,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6999cae3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:35919,load,load,35919,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30374,load,load,30374,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,.test.gtest_roofit_roofit_test_testRooBernstein](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82126/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooBernstein/); - [projectroot.roofit.roofit.test.gtest_roofit_roofit_test_testRooExponential](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82126/testReport/projectroot.roofit.roofit/test/gtest_roofit_roofit_test_testRooExponential/); - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testRooWrapperPdf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82126/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testRooWrapperPdf/); - [projectroot.roofit.roostats.test.gtest_roofit_roostats_test_testSPlot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82126/testReport/projectroot.roofit.roostats/test/gtest_roofit_roostats_test_testSPlot/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82126/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibs/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsAZ](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82126/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsAZ/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsZA](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82126/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsZA/); - [projectroot.roottest.root.roofitstats.gtesttest_root_roofitstats_stabilityTests](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82126/testReport/projectroot.roottest.root/roofitstats/gtesttest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-628667527:1909,load,loadAllLibs,1909,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-628667527,1,['load'],['loadAllLibs']
Performance,.tree.dataframe/test/gtest_tree_dataframe_test_datasource_sqlite/); - [projectroot.roottest.cling.staticinit.roottest_cling_staticinit_ROOT_7775](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146678/testReport/projectroot.roottest.cling/staticinit/roottest_cling_staticinit_ROOT_7775/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146678/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146678/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleRead/); - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146678/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146678/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146678/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146678/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146678/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/). And 9 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1145329774:2946,load,load,2946,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1145329774,2,['load'],['load']
Performance,/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/36185/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.tmva.tm,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2453#issuecomment-411168090:1993,cache,cache,1993,https://root.cern,https://github.com/root-project/root/pull/2453#issuecomment-411168090,1,['cache'],['cache']
Performance,/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86429/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86429/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86429/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86429/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86429/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86429/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.root.io.clones.roottest_root_io_clones_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86429/testReport/projectroot.roottest.root.io/clones/roottest_root_io_clones_make/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_merge1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86429/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_ev,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5798#issuecomment-642507741:1913,cache,cache,1913,https://root.cern,https://github.com/root-project/root/pull/5798#issuecomment-642507741,1,['cache'],['cache']
Performance,/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89457/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89457/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89457/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89457/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89457/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_53410_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89457/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_baseClass_53410_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_mixedBase_merge1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/89457/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_mixedBase_merge1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_baseClass_merge1](https://lcgapp-services.cern.ch/root-jenkins/job/root-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6017#issuecomment-656325795:1642,cache,cache,1642,https://root.cern,https://github.com/root-project/root/pull/6017#issuecomment-656325795,1,['cache'],['cache']
Performance,/); - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_nodes/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68997/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4446#issuecomment-537446729:1657,load,load,1657,https://root.cern,https://github.com/root-project/root/pull/4446#issuecomment-537446729,2,['load'],['load']
Performance,/); - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_nodes](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_nodes/); - [projectroot.roottest.cling.autoauto.roottest_cling_autoauto_ROOT8442](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.cling/autoauto/roottest_cling_autoauto_ROOT8442/); - [projectroot.roottest.cling.function.roottest_cling_function_runstaticfunc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.cling/function/roottest_cling_function_runstaticfunc/); - [projectroot.roottest.cling.other.roottest_cling_other_assertDirWithParen](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.cling/other/roottest_cling_other_assertDirWithParen/); - [projectroot.roottest.cling.specialobj.roottest_cling_specialobj_unhappy](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.cling/specialobj/roottest_cling_specialobj_unhappy/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/); - [projectroot.roottest.root.meta.callfunc.roottest_root_meta_callfunc_assertUnload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/68998/testReport/projectroot.roottest.root.meta/callfunc/roottest_root_meta_callfunc_assertUnload_auto/). And 6 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4446#issuecomment-537447310:1659,load,load,1659,https://root.cern,https://github.com/root-project/root/pull/4446#issuecomment-537447310,2,['load'],['load']
Performance,"/../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:255:10: note: FWCorePluginManager.PluginInfo.h defined here; module ""PluginInfo.h"" { header ""../../../src/FWCore/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:8059,Cache,CacheParser,8059,https://root.cern,https://github.com/root-project/root/issues/11765,1,['Cache'],['CacheParser']
Performance,//lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92279/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92279/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92279/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92279/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92279/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92279/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92279/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92279/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/). And 1631 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5847#issuecomment-672082157:2796,cache,cache,2796,https://root.cern,https://github.com/root-project/root/pull/5847#issuecomment-672082157,2,['cache'],['cache']
Performance,/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.info' from C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:8820,load,load,8820,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/e,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:41539,load,load,41539,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/GeneticPopulation.cxx;src/GeneticRange.cxx;src/GiniIndex.cxx;src/GiniIndexWithLaplace.cxx;src/HyperParameterOptimisation.cxx;src/IFitterTarget.cxx;src/IMethod.cxx;src/Interval.cxx;src/KDEKernel.cxx;src/LDA.cxx;src/LogInterval.cxx;src/LossFunction.cxx;src/MCFitter.cxx;src/MethodANNBase.cxx;src/MethodBase.cxx;src/MethodBayesClassifier.cxx;src/MethodBDT.cxx;src/MethodBoost.cxx;src/MethodCategory.cxx;src/MethodCFMlpANN.cxx;src/MethodCFMlpANN_Utils.cxx;src/MethodCompositeBase.cxx;src/MethodCrossValidation.cxx;src/MethodCuts.cxx;src/MethodDL.cxx;src/MethodDNN.cxx;src/MethodDT.cxx;src/MethodFDA.cxx;src/MethodFisher.cxx;src/MethodHMatrix.cxx;src/MethodKNN.cxx;src/MethodLD.cxx;src/MethodLikelihood.cxx;src/MethodMLP.cxx;src/MethodPDEFoam.cxx;src/MethodPDERS.cxx;src/MethodPlugins.cxx;src/MethodRuleFit.cxx;src/MethodSVM.cxx;src/MethodTMlpANN.cxx;src/MinuitFitter.cxx;src/MinuitWrapper.cxx;src/MisClassificationError.cxx;src/ModulekNN.cxx;src/MsgLogger.cxx;src/NeuralNet.cxx;src/Node.cxx;src/OptimizeConfigParameters.cxx;src/Option.cxx;src/OptionMap.cxx;src/PDEFoamCell.cxx;src/PDEFoam.cxx;src/PDEFoamDecisionTree.cxx;src/PDEFoamDecisionTreeDensity.cxx;src/PDEFoamDensityBase.cxx;src/PDEFoamDiscriminant.cxx;src/PDEFoamDiscriminantDensity.cxx;src/PDEFoamEvent.cxx;src/PDEFoamEventDensity.cxx;src/PDEFoamKernelBase.cxx;src/PDEFoamKernelGauss.cxx;src/PDEFoamKernelLinN.cxx;src/PDEFoamKernelTrivial.cxx;src/PDEFoamMultiTarget.cxx;src/PDEFoamTarget.cxx;src/PDEFoamTargetDensity.cxx;src/PDEFoamVect.cxx;src/PDF.cxx;src/QuickMVAProbEstimator.cxx;src/Ranking.cxx;src/Reader.cxx;src/RegressionVariance.cxx;src/ResultsClassification.cxx;src/Results.cxx;src/ResultsMulticlass.cxx;src/ResultsRegression.cxx;src/ROCCalc.cxx;src/ROCCurve.cxx;src/RootFinder.cxx;src/RuleCut.cxx;src/Rule.cxx;src/RuleEnsemble.cxx;src/RuleFitAPI.cxx;src/RuleFit.cxx;src/RuleFitParams.cxx;src/SdivSqrtSplusB.cxx;src/SeparationBase.cxx;src/SimulatedAnnealing.cxx;src/SimulatedAnnealingFitter.cxx;src/SVEvent.cxx;src/SVKernelFunction.cxx,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5598#issuecomment-627404942:11602,Optimiz,OptimizeConfigParameters,11602,https://root.cern,https://github.com/root-project/root/pull/5598#issuecomment-627404942,1,['Optimiz'],['OptimizeConfigParameters']
Performance,"/MetaParser.cpp:135; #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this; entry=0x55ed255fe680, input_line=..., compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result; entry=0x0, disableValuePrinting=disableValuePrinting; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442; #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCl",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:13124,Load,Load,13124,https://root.cern,https://github.com/root-project/root/issues/9595,1,['Load'],['Load']
Performance,"/MetaParser.cpp:135; #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success, resultValue=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this; entry=0x55ed255fe680, input_line=..., compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result; entry=0x0, disableValuePrinting=disableValuePrinting; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442; #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; =============================",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:27446,Load,Load,27446,https://root.cern,https://github.com/root-project/root/issues/9595,1,['Load'],['Load']
Performance,"/Orc/LLJIT.h:132; #58 llvm::orc::LLJIT::lookup (this=0x8eb360, UnmangledName=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #59 cling::IncrementalJIT::getSymbolAddress (this=0x500650, Name=..., IncludeHostSymbols=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:230; #60 0x00007fffeead65bd in (anonymous namespace)::ReuseExistingWeakSymbols::runOnGlobal (this=this@entry=0xffe5d0, GV=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/BackendPasses.cpp:150; #61 0x00007fffeead6523 in (anonymous namespace)::ReuseExistingWeakSymbols::runOnModule (this=0xffe5d0, M=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/BackendPasses.cpp:173; #62 0x00007ffff1be31f8 in (anonymous namespace)::MPPassManager::runOnModule (this=0xf6a4b0, M=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/IR/LegacyPassManager.cpp:1554; #63 llvm::legacy::PassManagerImpl::run (this=<optimized out>, M=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/IR/LegacyPassManager.cpp:542; #64 0x00007fffeeaccbee in cling::IncrementalExecutor::emitModule (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.h:253; #65 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:251; #66 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; #67 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; #68 0x00007fffeea6e410 in cling::IncrementalParser::Compile (this=0x4f6670, input=..., Opts=...) at /",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:15321,optimiz,optimized,15321,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['optimiz'],['optimized']
Performance,"/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:2473:14; #15 0x7f8857bc179d in TObjArray::Streamer(TBuffer&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/cont/src/TObjArray.cxx:468:29; #16 0x7f8851b7c3bd in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/inc/TClass.h:610:7; #17 0x7f8851b7c3bd in TKey::ReadObjectAny(TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TKey.cxx:1108:11; #18 0x7f8851a61884 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TDirectoryFile.cxx:1111:25; #19 0x7f88400d8d51 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TDirectory.h:214:18; #20 0x7f88400d8d51 in TCling::LoadPCMImpl(TFile&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1769:12; #21 0x7f88400dbc28 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1874:4; #22 0x7f88400e2139 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:2299:7; #23 0x7f8857aa5a33 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_trai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:15243,Load,LoadPCMImpl,15243,https://root.cern,https://github.com/root-project/root/issues/12715,1,['Load'],['LoadPCMImpl']
Performance,/Transaction.cpp:173:23: warning: ISO C++20 considers use of overloaded operator '!=' (with operand types 'cling::Transaction::DelayCallInfo' and 'cling::Transaction::DelayCallInfo') to be ambiguous despite there being a unique best viable function with non-reversed arguments [-Wambiguous-reversed-operator] ; - [2024-02-08T09:28:16.251Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/Transaction.cpp:218:21: warning: ISO C++20 considers use of overloaded operator '==' (with operand types 'cling::Transaction::MacroDirectiveInfo' and 'cling::Transaction::MacroDirectiveInfo') to be ambiguous despite there being a unique best viable function [-Wambiguous-reversed-operator] ; - [2024-02-08T09:30:56.131Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:133:12: warning: compound assignment to object of volatile-qualified type 'volatile UInt_t' (aka 'volatile unsigned int') is deprecated [-Wdeprecated-volatile] ; - [2024-02-08T09:30:56.131Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/base/inc/TStorage.h:135:12: warning: compound assignment to object of volatile-qualified type 'volatile UInt_t' (aka 'volatile unsigned int') is deprecated [-Wdeprecated-volatile] ; - [2024-02-08T09:30:58.908Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2024-02-08T09:30:59.230Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2024-02-08T09:30:59.230Z] /Users/sftnight/build/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] . And 303 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14626#issuecomment-1933679438:4237,perform,performing,4237,https://root.cern,https://github.com/root-project/root/pull/14626#issuecomment-1933679438,3,['perform'],['performing']
Performance,"/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 878: Environment variables:; 878: ROOT_HIST=0; 878: Test timeout computed to be: 1500; 878: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 878: error code: -529697949; 878:; 878:; 1/16 Test #878: tutorial-dataframe-df001_introduction-py .................***Failed 5.63 sec; test 879; Start 879: tutorial-dataframe-df002_dataModel-py. 879: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df002_dataModel.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 879: Environment variables:; 879: ROOT_HIST=0; 879: Test timeout computed to be: 1500; 879: Error in <TChain::LoadTree>: Cannot find tree with name in file df002_dataModel_py.root; 879: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 879: error code: -529697949; 879:; 879:; 2/16 Test #879: tutorial-dataframe-df002_dataModel-py ....................***Failed Error regular expression found in output. Regex=[Error in] 8.04 sec; test 880; Start 880: tutorial-dataframe-df003_profiles-py. 880: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df003_profiles.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 880: Environment variables:; 880: ROOT_HIST=0; 880: Test timeout computed to be: 1500; 880: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:1459,Load,LoadTree,1459,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['Load'],['LoadTree']
Performance,/Versions/A/CoreGraphics.tbd and library file /System/Library/Frameworks//CoreGraphics.framework/Versions/A/CoreGraphics are out of sync. Falling back to library file for linking. . And 77 more. ### Failing tests:; - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46712/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46712/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46712/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_multiTree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46712/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_multiTree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46712/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46712/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46712/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TooSmall/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2902#issuecomment-435347884:3503,cache,cache,3503,https://root.cern,https://github.com/root-project/root/pull/2902#issuecomment-435347884,1,['cache'],['cache']
Performance,"/builddir/etc/cling/Interpreter/RuntimeUniverse.h:27:10: fatal error: could not build module 'std'; #include <new>; ~~~~~~~~^; /private/tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/etc/cling/Interpreter/DynamicExprInfo.h:13:10: fatal error: could not build module 'std'; #include <string>; ~~~~~~~~^; While building module 'Core':; While building module 'ROOT_Rtypes' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/RtypesCore.h:28:10: fatal error: could not build module 'std'; #include <cstddef> // size_t, NULL; ~~~~~~~~^; In file included from input_line_3:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:23:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_C' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:29:; In file included from <module-includes>:1:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ThreadLocalStorage.h:61:10: fatal error: could not build module 'ROOT_Rtypes'; #include ""RtypesCore.h""; ~~~~~~~~^~~~~~~~~~~~~~; While building module 'Core':; While building module 'ROOT_Foundation_Stage1_NoRTTI' imported from /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/Rtypes.h:195:; In file included from <module-includes>:2:; /tmp/root-20210414-13675-19zg57u/root-6.24.00/builddir/include/ROOT/RStringView.hxx:19:10: fatal error: could not build module 'std'; #include <string_view>; ~~~~~~~~^; Error: Error loading the default rootcling header files.; [7241/9610] Building CXX object core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o; ninja: build stopped: subcommand failed.; ```. Note there have been signbit issues before, https://github.com/Homebrew/homebrew-core/pull/75166/files#r613512702",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7881:4831,load,loading,4831,https://root.cern,https://github.com/root-project/root/issues/7881,1,['load'],['loading']
Performance,"/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365; #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60; #15 std::__invoke_r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:8068,optimiz,optimized,8068,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CUR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:60083,load,load,60083,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/3d5be7bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/94b468c6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1ac0d46.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ce1cf99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b54708e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1e4f9475.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MaGrid.namespaces' from CURLOPT_CAPATH; * failed to ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:45167,load,load,45167,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.in,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:64261,load,load,64261,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HellasGrid-CA-2016.signing_policy' from CURLOPT_CAPATH; * failed to load '/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:35615,load,load,35615,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.info' from CURLOPT_CAPA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:61293,load,load,61293,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7aa2b7bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0a49430a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ad9d1b74.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:40319,load,load,40319,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:60555,load,load,60555,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RomanianGRID.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:33673,load,load,33673,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:4031,load,load,4031,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/a2dbd20c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ca9677b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/01b5d333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PolishGrid-2019.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3232b9bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/56084620.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/10718cba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.crl_url' from CUR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:61107,load,load,61107,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/certificates/cilogon-silver.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4ba9a797.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BG-ACAD-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MREN-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cilogon-silver.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3fb4d8a6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8c74f281.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ArmeSFo.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4c3ad332.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/63699217.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:63154,load,load,63154,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"/clang_packages-9.0.1/lib/CodeGen/CGDeclCXX.cpp:481; #16 0x00007f54c1da144c in clang::CodeGen::CodeGenModule::EmitGlobalVarDefinition (this=this; entry=0x55ed2cce1280, D=<optimized out>, D; entry=0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024; #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this; entry=0x55ed2cce1280, GD=..., GV=GV; entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793; #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this; entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540; #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168; #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346; #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394; #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344; #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271; #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230; #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x5",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:5078,optimiz,optimized,5078,https://root.cern,https://github.com/root-project/root/issues/9595,2,['optimiz'],['optimized']
Performance,/cont/src/TBtree.cxx:1363; 5: Assuming 'p' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:546; 6: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:546; 7: 't' is equal to null in /opt/root_src/core/cont/src/TBtree.cxx:547; 8: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 9: Taking true branch in /opt/root_src/core/cont/src/TBtree.cxx:547; 10: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:124; 11: Loop condition is false. Exiting loop in /opt/root_src/core/cont/src/TBtree.cxx:547; 12: expanded from macro 'R__CHECK' in /opt/root_src/core/foundation/inc/TError.h:123; 13: Null pointer value stored to field 'fTree' in /opt/root_src/core/cont/src/TBtree.cxx:548; 14: Returning from constructor for 'TBtNode' in /opt/root_src/core/cont/src/TBtree.cxx:1363; 15: Calling 'TBtLeafNode::MaxIndex' in /opt/root_src/core/cont/src/TBtree.cxx:1365; 16: Access to field 'fLeafMaxIndex' results in a dereference of a null pointer (loaded from field 'fTree') in /opt/root_src/core/cont/inc/TBtree.h:314; /opt/root_src/core/cont/src/TArrayC.cxx:114:13: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]; 1: Null pointer value stored to field 'fArray' in /opt/root_src/core/cont/src/TArrayC.cxx:36; 2: Assuming 'n' is > 0 in /opt/root_src/core/cont/src/TArrayC.cxx:37; 3: Taking true branch in /opt/root_src/core/cont/src/TArrayC.cxx:37; 4: Calling 'TArrayC::Set' in /opt/root_src/core/cont/src/TArrayC.cxx:37; 5: 'n' is >= 0 in /opt/root_src/core/cont/src/TArrayC.cxx:107; 6: Taking false branch in /opt/root_src/core/cont/src/TArrayC.cxx:107; 7: 'n' is not equal to field 'fN' in /opt/root_src/core/cont/src/TArrayC.cxx:108; 8: Taking true branch in /opt/root_src/core/cont/src/TArrayC.cxx:108; 9: 'temp' initialized to a null pointer value in /opt/root_src/core/cont/src/TArrayC.cxx:109; 10: 'n' is not equal to 0 in /opt/root_src/core/cont/src/TArrayC.cxx:110;,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:3367,load,loaded,3367,https://root.cern,https://github.com/root-project/root/issues/7424,1,['load'],['loaded']
Performance,"/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:20445,optimiz,optimized,20445,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:21758,optimiz,optimized,21758,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:23071,optimiz,optimized,23071,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:24384,optimiz,optimized,24384,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:29093,optimiz,optimized,29093,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:30406,optimiz,optimized,30406,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/pyth",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:31719,optimiz,optimized,31719,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:33032,optimiz,optimized,33032,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"/d/dudarboh/analysis/misc/test.py') at remote 0x7faec0f08c10>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faec0ef4860>, '__file__': '/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', '__cached__': None, 'ROOT': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=None, module=<module at remote 0x7faec0dce360>, __file__='/cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), co=0x7faec0dc55b0, tstate=0xbea650) at Python/pythonrun.c:1221; #17 run_mod (mod=<optimized out>, filename=filename; entry='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', globals=globals; entry={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py') at remote 0x7faec0f08c10>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faec0ef4860>, '__file__': '/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', '__cached__': None, 'ROOT': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=None, module=<module at remote 0x7faec0dce360>, __file__='/cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:31940,optimiz,optimized,31940,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,1,['optimiz'],['optimized']
Performance,/d0c2a341.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/072977ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58435df6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIIF-Root-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16da7552.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MD-Grid-CA-T.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/13ba0088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IRAN-GRID-GCG,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:65018,load,load,65018,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"/elf/dl-init.c:33; 15: _dl_init in ./elf/./elf/dl-init.c:117; 16: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182; 17: dl_open_worker in ./elf/./elf/dl-open.c:808; 18: dl_open_worker in ./elf/./elf/dl-open.c:771; 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 20: _dl_open in ./elf/./elf/dl-open.c:883; 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56; 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227; 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138; 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71; 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81; 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4; in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120; 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120; 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129; 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405; 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646; 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829; 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335; 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463; 8: ROOT::CallRecur",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:8712,load,loadLibrary,8712,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['load'],['loadLibrary']
Performance,/epsft-jenkins.cern.ch/job/root-pullrequests-build/65055/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stressgraphics_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65055/testReport/projectroot/test/test_stressgraphics_interpreted/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_TreeRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65055/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_TreeRootls1/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65055/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65055/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65055/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execReadOldCSC](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65055/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execReadOldCSC/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65055/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibs/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsAZ](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65055/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsAZ/). And 7 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4205#issuecomment-521241979:1905,load,loadAllLibs,1905,https://root.cern,https://github.com/root-project/root/pull/4205#issuecomment-521241979,4,['load'],['loadAllLibs']
Performance,/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2694e4f2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:5215,load,load,5215,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/368bc755.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/72aa436d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/80df9b28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:38546,load,load,38546,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:34968,load,load,34968,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:17321,load,load,17321,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_C,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:49652,load,load,49652,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:17413,load,load,17413,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to lo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:4127,load,load,4127,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/HKU-CA-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c36f6349.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HKU-CA-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a7b21b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/72aa436d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9cd75e87.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/80df9b28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ASGCCA-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b459ca48.namespaces' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:38642,load,load,38642,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/NCSA-slcs-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DZeScience.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fdf90b95.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/da213f5b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:41884,load,load,41884,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e13e0fcf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:48645,load,load,48645,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/etc/grid-security/certificates/e442e424.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/393f7863.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7c27c6a1.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ecb2657.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AEGIS.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1691b9ba.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/cc5645bd.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4cf8fb6.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b3f5558.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.s,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:34872,load,load,34872,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"/github.com/root-project/root/issues?q=is%3Aissue); * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT); for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"".; -->. ### Describe the bug. This issue report follows my post in the ROOT forums https://root-forum.cern.ch/t/gdml-multiple-files-error-with-define/48581. Please refer to the forum post for additional details. In summary, when using the GDML modules feature as described on the manual (or so I think), the `<define/>` section of the child file is not being accessed correctly when the volume is a tessellated solid. This does not happen with a simple volume such as a box. On top of that I have managed to load the problematic GDML into Geant4 without problems, so that lead me to believe it is a ROOT bug. ### Expected behavior. Geometry should load without throwing an exception. ### To Reproduce. I load the GDML the following way:. ```; TGeoManager::Import(""mother.gdml"");; ```. `mother.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define />; <solids>; <box name=""world_solid"" x=""100"" y=""100"" z=""100"" />; </solids>; <structure>; <volume name=""world"">; <physvol>; <file name=""child.gdml"" />; </physvol>; <materialref ref=""world_material"" />; <solidref ref=""world_solid"" />; </volume>; </structure>; <setup name=""Default"" version=""1.0"">; <world ref=""world"" />; </setup>; </gdml>; ```. `child.gdml`:; ```; <?xml version=""1.0"" encoding=""UTF-8""?>; <gdml xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""; xsi:noNamespaceSchemaLocation=""https://service-spi.web.cern.ch/service-spi/app/releases/GDML/schema/gdml.xsd"">; <define>; <position name=""cube_v0"" unit=""mm"" x=""10.0"" y=""-10.0"" z=""10.0""/>; <position name=""cube_v1"" unit=""mm"" x=""10",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9744:1057,load,load,1057,https://root.cern,https://github.com/root-project/root/issues/9744,1,['load'],['load']
Performance,/grid-security/certificates/7d0d064a.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d674a88.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7d0d064a.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SiGNET-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GridCanada.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bffbd7d0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/709bed08.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/11b4a5a2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MARGI.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/LIPCA.namespaces' from CURLOPT_CAPATH; * fail,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:47549,load,load,47549,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/grid-security/certificates/BYGCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be87b272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e21dc0c0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/064e0aa9.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/036b3363.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/HPCI.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/126f0acf.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f58a078.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/BYGCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ANSPGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/20b7db76.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2G3.namesp,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:50017,load,load,50017,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CUR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:19216,load,load,19216,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/grid-security/certificates/KISTIv3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KISTIv3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ead666c8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/77637f58.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c1e29225.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2e0e6e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NorduGrid-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NIKHEF.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a3e2dbca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f8598272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/16054abd.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2418a3f3.namespaces' from CURLOP,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:58966,load,load,58966,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,/haswell/x86_64:/usr/lib/x86_64-linux-gnu/haswell:/usr/lib/x86_64-linux-gnu/x86_64:/usr/lib/x86_64-linux-gnu:/lib/glibc-hwcaps/x86-64-v3:/lib/glibc-hwcaps/x86-64-v2:/lib/tls/haswell/x86_64:/lib/tls/haswell:/lib/tls/x86_64:/lib/tls:/lib/haswell/x86_64:/lib/haswell:/lib/x86_64:/lib:/usr/lib/glibc-hwcaps/x86-64-v3:/usr/lib/glibc-hwcaps/x86-64-v2:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' already loaded for 'PtEtaPhiE4D'; Module 'GenVector' already loaded for 'PtEtaPhiM4D'; Module 'Smatrix' already loaded for 'MatRepStd'; Module 'Smatrix' already loaded for 'MatRepSym'; Module 'Smatrix' already loaded for 'SVector'; Module 'MathCore' already loaded for 'R'; Module 'Smatrix' already loaded for 'SMatrix'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' al,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:12024,load,loaded,12024,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['load'],['loaded']
Performance,"/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", mode=-2147483391, caller_dlopen=0x2ce7f6 <__interceptor_dlopen.part.267+102>, nsid=<optimized out>, argc=37, argv=<optimized out>, env=0x61600030f680) at dl-open.c:876; 2187: #17 0x00007f2a61bc5f8a in dlopen_doit () from /lib64/libdl.so.2; 2187: #18 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #19 0x00007f2a61750a23 in _dl_catch_error () from /lib64/libc.so.6; 2187: #20 0x00007f2a61bc652e in _dlerror_run () from /lib64/libdl.so.2; 2187: #21 0x00007f2a61bc602a in dlopen; 2187:; 2187: GLIBC_2.2.5 () from /lib64/libdl.so.2; 2187: #22 0x00000000002ce7f6 in __interceptor_dlopen.part.267 (); 2187: #23 0x00007f2a50c02ffb in cling::utils::platform::DLOpen (Path=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", Err=0x7f2a5e651200) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; 2187: #24 0x00007f2a5087994c in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:375; 2187: #25 0x00007f2a508d6dce in cling::Interpreter::loadLibrary (this=0x614000001840, filename=..., lookup=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1469; 2187: #26 0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:4114,load,loadLibrary,4114,https://root.cern,https://github.com/root-project/root/issues/11867,4,"['load', 'optimiz']","['loadLibrary', 'optimized']"
Performance,/home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Quadp.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Postscript.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreeViewer.pcm; 0.0007 ( 0.0%) 0.0001 ( 0.2%) 0.0008 ( 0.0%) 0.0009 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMyS,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:3848,Load,Loading,3848,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365; #14 std::__invoke_impl<std",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:7589,optimiz,optimized,7589,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"/install/lib/libCling.so; #28 0x00007f174bc85e4d in HandleInterpreterException (metaProcessor=0x55fecea7b020, input_line=0x55fecfb58800 ""#line 1 \""ROOT_prompt_2\""\nEvents"", compRes=; 0x7ffd9df7f23c: cling::Interpreter::kSuccess, result=result; entry=0x7ffd9df7f250) at ../core/metacling/src/TCling.cxx:2428; #29 0x00007f174bca2557 in TCling::ProcessLine (this=0x55fecde8e9d0, line=<optimized out>, error=0x7ffd9df7f60c) at /usr/include/c++/12.2.1/bits/unique_ptr.h:191; #30 0x00007f1751c052e5 in TRint::ProcessLineNr (this=this; entry=0x55fecde5ddd0, filestem=filestem; entry=0x7f1751c163f8 ""ROOT_prompt_"", line=0x7ffd9df7f6c9 ""Events"", error=0x7ffd9df7f60c, error; entry=0x0) at ../core/rint/src/TRint.cxx:801; #31 0x00007f1751c056ba in TRint::HandleTermInput (this=0x55fecde5ddd0) at ../core/rint/src/TRint.cxx:648; #32 0x00007f175195d0b5 in TUnixSystem::CheckDescriptors (this=this; entry=0x55fecde2a420) at ../core/unix/src/TUnixSystem.cxx:1306; #33 0x00007f17519604b8 in TUnixSystem::DispatchOneEvent (this=0x55fecde2a420, pendingOnly=<optimized out>) at ../core/unix/src/TUnixSystem.cxx:1061; #34 0x00007f175187fa88 in TSystem::InnerLoop (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:406; #35 TSystem::Run (this=0x55fecde2a420) at ../core/base/src/TSystem.cxx:356; #36 0x00007f17518098cb in TApplication::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/base/src/TApplication.cxx:1677; #37 0x00007f1751c07062 in TRint::Run (this=this; entry=0x55fecde5ddd0, retrn=retrn; entry=false) at ../core/rint/src/TRint.cxx:501; #38 0x000055feccf191cf in main (argc=<optimized out>, argv=0x7ffd9df81ae8) at ../main/src/rmain.cxx:84; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12673:7304,optimiz,optimized,7304,https://root.cern,https://github.com/root-project/root/issues/12673,1,['optimiz'],['optimized']
Performance,/interpreter/cling/include -I/mnt/build/workspace/root-pullrequests-build/root/core/metacling/res -I/mnt/build/workspace/root-pullrequests-build/root/core/clingutils/res -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/res -I/mnt/build/workspace/root-pullrequests-build/root/core/zip/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/res -I/mnt/build/workspace/root-pullrequests-build/root/core/base/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/meta/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/clib/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/foundation/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/thread/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/cont/inc -I/mnt/build/workspace/root-pullrequests-build/root/core/gui/inc -I/mnt/build/workspace/root-pullrequests-build/root/io/io/inc -Iginclude -isystem /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/tools/clang/include -isystem interpreter/llvm/src/tools/clang/include -isystem /mnt/build/workspace/root-pullrequests-build/root/interpreter/llvm/src/include -isystem interpreter/llvm/src/include -fdiagnostics-color=always -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -D_GNU_SOURCE -D_DEBUG -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -fvisibility=hidden -fno-strict-aliasing -Wwrite-strings -Wno-shadow -Wno-unused-parameter -Wno-deprecated-declarations -O3 -fPIC -std=c++11 -MD -MT core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o -MF core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o.d -o core/metacling/src/CMakeFiles/MetaCling.dir/TCling.cxx.o -c /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx ; - [2021-04-27T16:51:56.108Z] /mnt/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:7209:31: error: no matching function for call to ‘TSystem::Load(std::__cxx11::string&)’,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8017#issuecomment-827758221:2336,Load,Load,2336,https://root.cern,https://github.com/root-project/root/pull/8017#issuecomment-827758221,1,['Load'],['Load']
Performance,/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:67:52: warning: unused typedef 'DeclLink_t' [-Wunused-local-typedef] ; - [2021-02-16T22:18:49.656Z] /build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:67:52: warning: unused typedef 'DeclLink_t' [-Wunused-local-typedef] ; - [2021-02-16T22:18:49.656Z] /build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:67:52: warning: unused typedef 'DeclLink_t' [-Wunused-local-typedef] ; - [2021-02-16T22:18:49.656Z] /build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:67:52: warning: unused typedef 'DeclLink_t' [-Wunused-local-typedef] ; - [2021-02-16T22:18:49.656Z] /build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/lib/Interpreter/DeclUnloader.cpp:67:52: warning: unused typedef 'DeclLink_t' [-Wunused-local-typedef] . ### Failing tests:; - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106927/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.io.cpp11Containers.roottest_root_io_cpp11Containers_forwardList](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106927/testReport/projectroot.roottest.root.io/cpp11Containers/roottest_root_io_cpp11Containers_forwardList/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_escapedQuotesRootmapGen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106927/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_escapedQuotesRootmapGen/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/106927/testReport/projectroot.roottest.root.io/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-780161672:1533,load,load,1533,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-780161672,1,['load'],['load']
Performance,"/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609; #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849; #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,; input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin; g,unsigned lo""..., CO=..., T=T@entry=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1369; #21 0x00007fffeaac7599 in cling::Interpreter::declare (this=0x555555803e60,; input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = new tuple<strin; g,unsigned lo""..., T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1001; #22 0x00007fffea9b4595 in TCling::LoadText (this=this@entry=0x555555b29730,; text=text@entry=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\; n self = new tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:7513; #23 0x00007fffea9b43a8 in TCling::Declare (this=0x555555b29730,; code=0x55555b5ea750 ""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n self = n; ew tuple<string,unsigned lo""...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3110; #24 0x00007fffd791d557 in CPyCppyy::Pythonize (pyclass=pyclass@entry=0x55555b20f290, name=""tuple<string,unsigned long>""); at /home/jhahnfel/ROOT/src/bindings/pyroot/cppyy/CPyCppyy/src/Pythonize.cxx:1778; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338#issuecomment-2370776890:4348,Load,LoadText,4348,https://root.cern,https://github.com/root-project/root/pull/16338#issuecomment-2370776890,1,['Load'],['LoadText']
Performance,"/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<optimized out>, result=0x33f, disableValuePrinting=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; 2187: #31 0x00007f2a5058c5ff in HandleInterpreterException (metaProcessor=metaProcessor; 2187: entry=0x60700007bb60, input_line=0x7f2a6338f0de "".L /home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", compRes=; 2187: 0x7f2a5e5cef40: cling::Interpreter::kSuccess, result=result; 2187: entry=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:2455; 2187: #32 0x00007f2a50595b52 in TCling::Load (this=<optimized out>, filename=<optimized out>, system=<optimized out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x617000000080, module=<optimized out>, entry=<optimized out>, system=false) at /home/jhahnfel/ROOT/src/core/base/src/TSystem.cxx:1945; 2187: #34 0x00007f2a47737140 in execInitOrder () at /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx:108; 2187: #35 0x00007f2a492f4029 in ?? (); 2187: #36 0x00007f2a5e77a0c0 in ?? (); 2187: #37 0x0000614000001840 in ?? (); 2187: #38 0x00007ffc0cd42e10 in ?? (); 2187: #39 0x00007f2a50a1db2e in cling::IncrementalExecutor::executeWrapper (this=<optimized out>, function=..., returnValue=0x7f2a5e77a0c0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:288; 2187: ===========================================================; 2187:; 2187:; 2187: The lines below might hint at the cause of the crash. If you see question; 2187: marks as part of the stack trace,",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:6169,Load,Load,6169,https://root.cern,https://github.com/root-project/root/issues/11867,4,"['Load', 'optimiz']","['Load', 'optimized']"
Performance,/job/root-pullrequests-build/149284/console).; ### Warnings:; - [2022-07-06T09:43:50.748Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Core: ; - [2022-07-06T09:44:10.490Z] Warning in &lt;CheckModuleValid&gt;: warning: Couldn't find in the following specified headers in the module Thread: . ### Failing tests:; - [projectroot.test.test_stressinterpreter](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149284/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149284/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.staticinit.ROOT-10426.roottest_cling_staticinit_ROOT_10426_ROOT_10426](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149284/testReport/projectroot.roottest.cling.staticinit/ROOT-10426/roottest_cling_staticinit_ROOT_10426_ROOT_10426/); - [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149284/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149284/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149284/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/149284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1176036373:2003,load,load,2003,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1176036373,2,['load'],['load']
Performance,"/lib/ExecutionEngine/Orc/LLJIT.cpp:384; > #10 (anonymous namespace)::GenericLLVMIRPlatformSupport::getInitializers (this=0x8ea890, JD=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/LLJIT.cpp:262; > #11 (anonymous namespace)::GenericLLVMIRPlatformSupport::initialize (this=0x8ea890, JD=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/LLJIT.cpp:215; > #12 0x00007fffeeace5f9 in llvm::orc::LLJIT::initialize (this=0x8eb360, JD=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:155; > #13 0x00007fffeeaccc6c in cling::IncrementalJIT::runCtors (this=0xfffffffffffffe00) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalJIT.h:74; > #14 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:260; > #15 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; > #16 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; > #17 0x00007fffeea5dd71 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffb0c0) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:116; > #18 cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffb0c0) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:106; > #19 0x00007fffee9f9d90 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffffb140, DC=<optimized out>, interp=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingMemberIter.cxx:33; > #20 0x00007fffee9f649b in TClingMemberIter::TClingMem",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098026446:4223,optimiz,optimized,4223,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098026446,1,['optimiz'],['optimized']
Performance,/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm; 2.9808 (100.0%) 0.0843 (100.0%) 3.0650 (100.0%) 3.0786 (100.0%) Total; ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:11296,Load,Loading,11296,https://root.cern,https://github.com/root-project/root/pull/2867,7,['Load'],['Loading']
Performance,"/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<optimized out>, result=0x33f, disableValuePrinting=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; 2187: #31 0x00007f2a5058c5ff in HandleInterpreterException (metaProcessor=metaProcessor; 2187: entry=0x60700007bb60, input_line=0x7f2a6338f0de "".L /home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", compRes=; 2187: 0x7f2a5e5cef40: cling::Interpreter::kSuccess, result=result; 2187: entry=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:2455; 2187: #32 0x00007f2a50595b52 in TCling::Load (this=<optimized out>, filename=<optimized out>, system=<optimized out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x617000000080, module=<optimized out>, entry=<optimized out>, system=false) at /home/jhahnfel/ROOT/src/core/base/src/TSystem.cxx:1945; 2187: #34 0x00007f2a47737140 in execInitOrder () at /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx:108; 2187: #35 0x00007f2a492f4029 in ??",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:5590,optimiz,optimized,5590,https://root.cern,https://github.com/root-project/root/issues/11867,4,['optimiz'],['optimized']
Performance,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:54523,load,loaded,54523,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kShort_t:' at line 175 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176:35: warning: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:51131,load,loaded,51131,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,/opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUChar_t:' at line 182 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:182; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:183:35: warning: Access to field 'u_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:62994,load,loaded,62994,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,/root-pullrequests-build/146270/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146270/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146270/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146270/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146270/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146270/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.meta.roottest_root_meta_drawing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146270/testReport/projectroot.roottest.root/meta/roottest_root_meta_drawing/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146270/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146270/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/). And 8 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1141695409:2117,load,load,2117,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1141695409,2,['load'],['load']
Performance,/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_list_initialization](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_list_initialization/); - [projectroot.bindings.pyroot.test.pyunittests_pyroot_conversions](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/35970/testReport/projectroot.bindings.pyroot/test/pyunittests_pyroot_conversions/). And 164 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2442#issuecomment-410966153:4388,cache,cache,4388,https://root.cern,https://github.com/root-project/root/pull/2442#issuecomment-410966153,4,['cache'],['cache']
Performance,"/root/files/9735187/0001-Print-statements-for-DistRDF-Cling-failure.txt). The following is a Python script with the test; ```py; import os. import pyspark; from dask.distributed import Client, LocalCluster. import ROOT; RunGraphs = ROOT.RDF.Experimental.Distributed.RunGraphs; SparkDF = ROOT.RDF.Experimental.Distributed.Spark.RDataFrame; DaskDF = ROOT.RDF.Experimental.Distributed.Dask.RDataFrame; # verbosity = ROOT.Experimental.RLogScopedVerbosity(ROOT.Detail.RDF.RDFLogChannel(), ROOT.Experimental.ELogLevel.kDebug+10). def connection():; daskconn = Client(LocalCluster(n_workers=2, threads_per_worker=1, processes=True, memory_limit=""2GiB"")). conf = {""spark.master"": ""local[2]"", ""spark.driver.memory"": ""4g"", ""spark.app.name"": ""roottest-distrdf-common""}; sparkconf = pyspark.SparkConf().setAll(conf.items()); sparkconn = pyspark.SparkContext(conf=sparkconf). return daskconn, sparkconn. def test_rungraphs_sparkanddask_3histos(daskconn, sparkconn):; """"""; Submit three different RDF graphs concurrently to Spark and Dask; """"""; # Create a test file for processing; treename = ""myTree""; filename = ""2clusters.root""; nentries = 10000; opts = ROOT.RDF.RSnapshotOptions(); opts.fAutoFlush = 5000; ROOT.RDataFrame(nentries).Define(""b1"", ""42"")\; .Define(""b2"", ""42"")\; .Define(""b3"", ""42"")\; .Snapshot(treename, filename, [""b1"", ""b2"", ""b3""], opts). histoproxies_spark = [; SparkDF(treename, filename, sparkcontext=sparkconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies_dask = [; DaskDF(treename, filename, daskclient=daskconn, npartitions=2); .Histo1D((col, col, 1, 40, 45), col); for col in [""b1"", ""b2"", ""b3""]; ]. histoproxies = histoproxies_spark + histoproxies_dask. # Before triggering the computation graphs values are None; for proxy in histoproxies:; assert proxy.proxied_node.value is None. RunGraphs(histoproxies). # After RunGraphs all histograms are correctly assigned to the; # node objects; for proxy in histoproxies:; histo = proxy.pro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:13030,concurren,concurrently,13030,https://root.cern,https://github.com/root-project/root/issues/11515,1,['concurren'],['concurrently']
Performance,/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kULong64_t:' at line 186 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_longlong' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:186; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:187:41: warning: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:69784,load,loaded,69784,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,/sessionviewer/src/TSessionViewer.cxx:2628; 10: Left side of '&&' is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2628; 11: Assuming 'total' is >= 0 in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2640; 12: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2640; 13: Assuming 'processed' is not equal to field 'fPrevProcessed' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2646; 14: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2646; 15: Assuming 'total' is equal to field 'fEntries' in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2651; 16: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2651; 17: Assuming the condition is false in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2667; 18: Taking false branch in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2667; 19: Access to field 'fStatus' results in a dereference of a null pointer (loaded from field 'fActQuery') in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:2673; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3788:13: warning: Value stored to 's' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' is never read in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3788; /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3841:13: warning: Value stored to 's' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 's' is never read in /opt/root_src/gui/sessionviewer/src/TSessionViewer.cxx:3841; /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:337:10: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is false in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:280; 2: Left side of '&&' is true in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:284; 3: Assuming 'version' is <= 0 in /opt/root_src/gui/webgui6/src/TWebCanvas.cxx:284; 4: '?' condition is false i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:98855,load,loaded,98855,https://root.cern,https://github.com/root-project/root/issues/7533,1,['load'],['loaded']
Performance,/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T13:52:30.329Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T14:01:57.252Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-11T14:02:37.698Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:37.698Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:37.698Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:37.956Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:49.360Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-11-11T14:03:06.027Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/bindings/pyroot/cppyy,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11690#issuecomment-1311772207:1475,perform,performing,1475,https://root.cern,https://github.com/root-project/root/pull/11690#issuecomment-1311772207,1,['perform'],['performing']
Performance,/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T22:51:07.411Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T22:55:33.998Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-11T22:55:34.781Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T22:55:34.781Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T22:55:34.781Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T22:55:34.782Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T22:55:42.457Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:302:44: warning: parameter 'pymeth' set but not used [-Wunused-but-set-pa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11693#issuecomment-1312259746:1475,perform,performing,1475,https://root.cern,https://github.com/root-project/root/pull/11693#issuecomment-1312259746,1,['perform'],['performing']
Performance,/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-12-19T11:24:30.207Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-12-19T11:34:37.662Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-12-19T11:34:40.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-19T11:34:40.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-19T11:34:40.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-19T11:34:40.389Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-12-19T11:35:06.691Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:302:44: warning: parameter 'pymeth' set but not used [-Wunused-but-set-pa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11928#issuecomment-1357568395:1239,perform,performing,1239,https://root.cern,https://github.com/root-project/root/pull/11928#issuecomment-1357568395,1,['perform'],['performing']
Performance,"/site-packages/tensorflow/python/platform/../../../../.././libzstd.so.1; #8 0x00007f101a764032 in llvm::compression::zstd::decompress(llvm::ArrayRef<unsigned char>, unsigned char*, unsigned long&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #9 0x00007f101a7641a1 in llvm::compression::decompress(llvm::compression::Format, llvm::ArrayRef<unsigned char>, llvm::SmallVectorImpl<unsigned char>&, unsigned long) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #10 0x00007f10162f9d38 in clang::ASTReader::ReadSLocEntry(int)::{lambda(llvm::BitstreamCursor&, llvm::StringRef)#1}::operator()(llvm::BitstreamCursor&, llvm::StringRef) const () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #11 0x00007f101630a1a3 in clang::ASTReader::ReadSLocEntry(int) [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #12 0x00007f101a4932e0 in clang::SourceManager::loadSLocEntry(unsigned int, bool*) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #13 0x00007f101a494238 in clang::SourceManager::getFileIDLoaded(unsigned int) const [clone .part.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #14 0x00007f101a494421 in clang::SourceManager::getFileIDSlow(unsigned int) const [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #15 0x00007f10162e7c8a in clang::ASTReader::ReadPragmaDiagnosticMappings(clang::DiagnosticsEngine&) [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #16 0x00007f1016328e45 in clang::ASTReader::InitializeContext() [clone .localalias] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #17 0x00007f101633dbef in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:8203,load,loadSLocEntry,8203,https://root.cern,https://github.com/root-project/root/issues/15970,2,['load'],['loadSLocEntry']
Performance,/src/CPPMethod.cxx:240; 17: 'errtype' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 18: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:258; 19: Assuming 'pyname' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:261; 20: '?' condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:261; 21: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:263; 22: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:263; 23: Access to field 'fTopMessage' results in a dereference of a null pointer (loaded from variable 'evalue') in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:276; 24: expanded from macro 'Py_XDECREF' in /usr/include/python2.7/object.h:825; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:176:9: warning: Access to field 'ob_refcnt' results in a dereference of a null pointer (loaded from variable 'ctmod') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_DECREF' in /usr/include/python2.7/object.h:774; 2: 'pyobj' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2082; 4: Calling 'IsPyCArgObject' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:2087; 5: 'pycarg_type' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 6: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:164; 7: 'ctmod' initialized here in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:165; 8: Assuming 'ctmod' is null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 9: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:166; 10: Access to field 'ob_refcnt' results in a dereference of a ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-824715675:2961,load,loaded,2961,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-824715675,1,['load'],['loaded']
Performance,/src/FWCore/Framework/interface/EventSetupRecordImpl.h:45:; While building module 'FWCoreParameterSet' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/ServiceRegistry/interface/ServiceRegistry.h:22:; While building module 'FWCorePluginManager' imported from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/ParameterSet/interface/ParameterSetDescriptionFillerPluginFactory.h:24:; In file included from <module-includes>:1:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/../../../src/FWCore/PluginManager/interface/CacheParser.h:33:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/src/FWCore/PluginManager/interface/PluginInfo.h:22:; In file included from /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../i,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:6392,Cache,CacheParser,6392,https://root.cern,https://github.com/root-project/root/issues/11765,1,['Cache'],['CacheParser']
Performance,"/src/root/io/io/src/TBufferFile.cxx:2472; #158 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=306702, b=..., ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #159 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x555556982288, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #160 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #161 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #162 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x55555700e030, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #163 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x555556982270, conf=0x55555700e030); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #164 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555556982270, buffer=..., ; this=0x55555701cfa0) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #165 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555556982270); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #166 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556a0eca0, pointer=0x555556982270, ; onFileClass=<optimized out>) at /home/rembserj/space",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:36162,optimiz,optimized,36162,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,"/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #44 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #45 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x55555767cdb0, buffer=..., this=0x5555572ec0c0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #46 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x55555767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #47 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556597160, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #48 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555556597160); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #49 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #50 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=54, b=..., onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #51 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x5555576460a0, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #52 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #53 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized ou",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:10977,optimiz,optimized,10977,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,"/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #80 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #81 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557646050, buffer=..., this=0x55555767aba0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #82 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557646050); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #83 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555571ee160, pointer=0x555557646050, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #84 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x5555571ee160); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #85 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #86 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=143, b=..., onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #87 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x555557627870, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #88 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #89 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized o",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:18931,optimiz,optimized,18931,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,/test/test_stressmathcore_interpreted/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_TreeRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65178/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_TreeRootls1/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65178/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_stringfiltercolumn](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65178/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_stringfiltercolumn/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65178/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execReadOldCSC](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65178/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execReadOldCSC/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibs](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65178/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibs/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsAZ](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65178/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsAZ/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsZA](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/65178/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsZA/). And 20 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4126#issuecomment-521687738:1725,load,loadAllLibs,1725,https://root.cern,https://github.com/root-project/root/pull/4126#issuecomment-521687738,6,['load'],['loadAllLibs']
Performance,/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.test.test_stress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24507/testReport/projectroot/test/test_stress/); - [projectroot.runtutorials.tutorial_tmva_envelope_classification](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24507/testReport/projectroot/runtutorials/tutorial_tmva_envelope_classification/); - [projectroot.roottest.cling.offset.roottest_cling_offset_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24507/testReport/projectroot.roottest.cling/offset/roottest_cling_offset_interpreted/); - [projectroot.roottest.cling.reflex.roottest_cling_reflex_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24507/testReport/projectroot.roottest.cling/reflex/roottest_cling_reflex_make/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24507/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24507/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24507/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24507/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24507/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/). And 20 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-386397082:1644,load,load,1644,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-386397082,2,['load'],['load']
Performance,/tls/haswell/x86_64:/lib/tls/haswell:/lib/tls/x86_64:/lib/tls:/lib/haswell/x86_64:/lib/haswell:/lib/x86_64:/lib:/usr/lib/glibc-hwcaps/x86-64-v3:/usr/lib/glibc-hwcaps/x86-64-v2:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' already loaded for 'PtEtaPhiE4D'; Module 'GenVector' already loaded for 'PtEtaPhiM4D'; Module 'Smatrix' already loaded for 'MatRepStd'; Module 'Smatrix' already loaded for 'MatRepSym'; Module 'Smatrix' already loaded for 'SVector'; Module 'MathCore' already loaded for 'R'; Module 'Smatrix' already loaded for 'SMatrix'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:12193,load,loaded,12193,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['load'],['loaded']
Performance,"/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3633; 14: _GLOBAL__sub_I_G__Net.cxx in /home/userf/build/build-root-Desktop-Debug/net/net/G__Net.cxx:3637; 15: call_init.part.0 in ./elf/./elf/dl-init.c:70; 16: call_init in ./elf/./elf/dl-init.c:33; 17: _dl_init in ./elf/./elf/dl-init.c:117; 18: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:182; 19: dl_open_worker in ./elf/./elf/dl-open.c:808; 20: dl_open_worker in ./elf/./elf/dl-open.c:771; 21: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 22: _dl_open in ./elf/./elf/dl-open.c:883; 23: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56; 24: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 25: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227; 26: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138; 27: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71; 28: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81; Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Conditional jump or move depends on uninitialised value(s); in TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 1: TStorage::UpdateIsOnHeap(unsigned int const volatile&, unsigned int volatile&) in /opt/root_src/core/base/inc/TStorage.h:124; 2: TObject::TObject() in /opt/root_src/core/base/inc/TObject.h:260; 3: TUrl::TUrl(char const*, bool) in /opt/root_src/core/base/src/TUrl.cxx:76; 4: TFile::TFile(char const*, char const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:331; 5: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:114; 6: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852; 7: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:5439,Load,LoadPCM,5439,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['Load'],['LoadPCM']
Performance,/usr/lib/x86_64-linux-gnu/tls/haswell:/usr/lib/x86_64-linux-gnu/tls/x86_64:/usr/lib/x86_64-linux-gnu/tls:/usr/lib/x86_64-linux-gnu/haswell/x86_64:/usr/lib/x86_64-linux-gnu/haswell:/usr/lib/x86_64-linux-gnu/x86_64:/usr/lib/x86_64-linux-gnu:/lib/glibc-hwcaps/x86-64-v3:/lib/glibc-hwcaps/x86-64-v2:/lib/tls/haswell/x86_64:/lib/tls/haswell:/lib/tls/x86_64:/lib/tls:/lib/haswell/x86_64:/lib/haswell:/lib/x86_64:/lib:/usr/lib/glibc-hwcaps/x86-64-v3:/usr/lib/glibc-hwcaps/x86-64-v2:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' already loaded for 'PtEtaPhiE4D'; Module 'GenVector' already loaded for 'PtEtaPhiM4D'; Module 'Smatrix' already loaded for 'MatRepStd'; Module 'Smatrix' already loaded for 'MatRepSym'; Module 'Smatrix' already loaded for 'SVector'; Module 'MathCore' already,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:11894,load,loaded,11894,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['load'],['loaded']
Performance,/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' already loaded for 'PtEtaPhiE4D'; Module 'GenVector' already loaded for 'PtEtaPhiM4D'; Module 'Smatrix' already loaded for 'MatRepStd'; Module 'Smatrix' already loaded for 'MatRepSym'; Module 'Smatrix' already loaded for 'SVector'; Module 'MathCore' already loaded for 'R'; Module 'Smatrix' already loaded for 'SMatrix'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Core' already loaded for '_root_std_complex'; Module 'Core' already loaded for '_root_std_complex'; Module 'Core' already loaded for '_r,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:12492,load,loaded,12492,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['load'],['loaded']
Performance,"/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720; #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157; #36 fair::mq::fsm::Machine_::ProcessWork (this=this; entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205; #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373; #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364; #39 fair::mq::DeviceRunner::Run (this=this; entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182; #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predef",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:35734,optimiz,optimized,35734,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,"/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/libCling.so; #14 0x00007f72cf99b1bf in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) () from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/libCling.so; #15 0x00007f72d01e8bc2 in clang::Sema::ActOnModuleImport(clang::SourceLocation, clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >) () from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/libCling.so; #16 0x00007f72cf4cfbd7 in cling::Interpreter::loadModule(clang::Module*, bool) () from /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT-HEAD-build/lib/libCling.so; #17 0x00007f72cf2aa7d3 in LoadModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Interpreter&) (ModuleName=..., interp=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/metacling/src/TCling.cxx:1053; #18 0x00007f72cf2c60e6 in LoadModules(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&, cling::Interpreter&) (modules=..., interp=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/metacling/src/TCling.cxx:1062; #19 0x00007f72cf2a247c in RegisterCxxModules(cling::Interpreter&) (clingInterp=...) at /build/jenkins/workspace/lcg_nightly_pipeline/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/metacling/src/TCling.cxx:1231; #20 0x00007f72cf2a13ef in TCling::TCling(char const*, char const*, char const* const*) (this=0x10a0370, name=0x7f72d2c43a33 ""C++"", title=0x7f72d1f99311 ""cling C++",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1015623529:3022,Load,LoadModule,3022,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1015623529,1,['Load'],['LoadModule']
Performance,"/workspace/root-pullrequests-build/root/core/base/src/TDirectory.cxx:1292:7: warning: 'sprintf' is deprecated: This function is provided for compatibility reasons only. Due to security concerns inherent in the design of sprintf(3), it is highly recommended that you use snprintf(3) instead. [-Wdeprecated-declarations] ; - [2023-04-13T21:36:27.731Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-13T21:36:28.000Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-13T21:36:28.000Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2023-04-13T21:36:28.000Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] . And 71 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/172551/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v1/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/172551/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v1/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://lcgapp-services.cern.ch/root-jenki",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12604#issuecomment-1507678411:3137,perform,performing,3137,https://root.cern,https://github.com/root-project/root/pull/12604#issuecomment-1507678411,1,['perform'],['performing']
Performance,/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' already loaded for 'PtEtaPhiE4D'; Module 'GenVector' already loaded for 'PtEtaPhiM4D'; Module 'Smatrix' already loaded for 'MatRepStd'; Module 'Smatrix' already loaded for 'MatRepSym'; Module 'Smatrix' already loaded for 'SVector'; Module 'MathCore' already loaded for 'R'; Module 'Smatrix' already loaded for 'SMatrix'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Core' already loaded for '_root_std_complex'; Module 'Core' already loaded,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:12430,load,loaded,12430,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['load'],['loaded']
Performance,"0 0x00007faebf799b0d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7faec0f64740 (LWP 34876) ""python3""):; #0 0x00007faec017dde2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007faec096a8d7 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7faec0d7e030 <_PyRuntime+432>, cond=0x7faec0d7e000 <_PyRuntime+384>) at Python/condvar.h:73; #2 take_gil (tstate=tstate; entry=0xbea650) at Python/ceval_gil.h:247; #3 0x00007faec083bfd3 in eval_frame_handle_pending (tstate=0xbea650) at Python/ceval.c:888; #4 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:1404; #5 0x00007faec08360ab in _PyEval_EvalFrame (throwflag=0x0, f=Frame 0x7faec0dc69a0, for file /afs/desy.de/user/d/dudarboh/analysis/misc/test.py, line 9, in test_function (test=<CPyCppyy_NoneType at remote 0x7faea81d14c0>), tstate=0xbea650) at ./Include/internal/pycore_ceval.h:40; #6 function_code_fastcall (tstate=0xbea650, co=<optimized out>, args=<optimized out>, nargs=0x0, globals=<optimized out>) at Objects/call.c:330; #7 0x00007faec083c713 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0xca6100, callable=<function at remote 0x7faec0e64550>, tstate=0xbea650) at ./Include/cpython/abstract.h:118; #8 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0xca6100, callable=<function at remote 0x7faec0e64550>) at ./Include/cpython/abstract.h:127; #9 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0xbea650) at Python/ceval.c:5077; #10 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3520; #11 0x00007faec096bb0e in _PyEval_EvalFrame (throwflag=0x0, f=Frame 0xca5f90, for file /afs/desy.de/user/d/dudarboh/analysis/misc/test.py, line 12, in <module> (), tstate=0xbea650) at ./Include/internal/pycore_ceval.h:40; #12 _PyEval_EvalCode (tstate=0xbea650, _co=_co; entry=<code at remote 0x7faec0dc55b0>,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:19327,optimiz,optimized,19327,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,3,['optimiz'],['optimized']
Performance,"0) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #10 0x00007ffff7b4e4bb in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0; #11 0x00007ffff7b4984e in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #12 0x00007ffff7b55099 in _PyFunction_Vectorcall () from /usr/lib/libpython3.10.so.1.0; #13 0x00007ffff7c19568 in ?? () from /usr/lib/libpython3.10.so.1.0; #14 0x00007ffff7c18ae2 in Py_FinalizeEx () from /usr/lib/libpython3.10.so.1.0; #15 0x00007ffff7c11498 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0; #16 0x00007ffff7be719b in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0; #17 0x00007ffff7629290 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:58; #18 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #19 0x0000555555555045 in _start (); ```. ```; #0 TROOT::EndOfProcessCleanups (this=0x7ffff6e43ee0 <ROOT::Internal::GetROOT1()::alloc>) at ../core/base/src/TROOT.cxx:1206; #1 0x00007ffff6ac722e in CallEndOfProcessCleanups () at ../core/base/src/TApplication.cxx:90; #2 0x00007ffff7640ef5 in __run_exit_handlers (status=0, listp=0x7ffff77fe778 <__exit_funcs>, run_list_atexit=run_list_atexit@entry=true, run_dtors=run_dtors@entry=true) at exit.c:113; #3 0x00007ffff7641070 in __GI_exit (status=<optimized out>) at exit.c:143; #4 0x00007ffff7629297 in __libc_start_call_main (main=main@entry=0x555555555120, argc=argc@entry=2, argv=argv@entry=0x7fffffffe258) at ../sysdeps/nptl/libc_start_call_main.h:74; #5 0x00007ffff762934a in __libc_start_main_impl (main=0x555555555120, argc=2, argv=0x7fffffffe258, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fffffffe248) at ../csu/libc-start.c:392; #6 0x0000555555555045 in _start (); ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10743:4043,optimiz,optimized,4043,https://root.cern,https://github.com/root-project/root/issues/10743,4,['optimiz'],['optimized']
Performance,"0) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1895; #20 0x00007fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:433; #23 0x00007fffa8f0fa14 in TClass::New (this=<optimized out>, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:4969; #24 0x00007fffa92e0724 in TBufferFile::ReadObjectAny (this=0x7ffff83ea100, clCast=0x10a861920) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFacto",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:6706,optimiz,optimized,6706,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<optimized out>, result=0x33f, disableValuePrinting=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; 2187: #31 0x00007f2a5058c5ff in HandleInterpreterException (metaProcessor=metaProcessor; 2187: entry=0x60700007bb60, input_line=0x7f2a6338f0de "".L /home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", compRes=; 2187: 0x7f2a5e5cef40: cling::Interpreter::kSuccess, result=result; 2187: entry=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:2455; 2187: #32 0x00007f2a50595b52 in TCling::Load (this=<optimized out>, filename=<optimized out>, system=<optimized out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x617000000080, module=<optimized out>, entry=<optimized out>, system=false) at /home/jhahnfel/ROOT/src/core/base/src/TSystem.cxx:1945; 2187: #34 0x00007f2a47737140 in execInitOrder () at /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx:108; 2187: #35 0x00007f2a492f4029 in ?? (); 2187: #36 0x00007f2a5e77a0c0 in ?? (); 2187: #37 0x0000614000001840 in ?? (); 2187: #38 0x00007ffc0cd42e10 in ?? (); 2187: #39 0x00007f2a50a1db2e in cling::IncrementalExecutor::executeWrapper (this=<optimized out>, function=..., returnValue=0x7f2a5e77a0c0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:288; 2187: ===========================================================; 2187:; 2187:; 2187: The lines below might hint at the cause of the crash. If you see question; 2187: marks as part of the stack trace, try to recompile with debugging information; 2187: enabled and export CLING_DEBUG=1 environment variable before running.; 2187: You may get help by asking at the ROOT forum https://ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:6351,Load,Load,6351,https://root.cern,https://github.com/root-project/root/issues/11867,3,"['Load', 'optimiz']","['Load', 'optimized']"
Performance,"0, __x=; 0x7ffd74585880: 0x5f009c0) at /cvmfs/sft.cern.ch/lcg/releases/gcc/9.2.0-afc57/x86_64-centos7/lib/gcc/x86_64-pc-linux-gnu/9.2.0/../../../../include/c++/9.2.0/bits/stl_vector.h:1189; #12 0x00007f09d1f1409f in CPyCppyy::CPPOverload::AdoptMethod (this=0x7f09d21b7ed8 <CPyCppyy::CPPOverload_Type>, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:945; #13 0x00007f09d1f5b7f0 in CPyCppyy::TemplateProxy::AdoptMethod (this=0x7f09c568c490, pc=0x5f009c0) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:111; #14 0x00007f09d1f4bd8c in CPyCppyy::BuildScopeProxyDict (scope=8, pyclass=0x5f31f60) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:254; #15 0x00007f09d1f4a3de in CPyCppyy::CreateScopeProxy (name=..., parent=0x7f09d223a590) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:676; #16 0x00007f09d1f248d8 in (anonymous namespace)::MakeCppTemplateClass (args=0x7f09d2237380) at /work/wunsch/root_rvec/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyyModule.cxx:368; #17 0x00007f09d9bf9d1a in cfunction_call_varargs (func=0x7f09d21fe360, args=0x7f09d2237380, kwargs=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:757; #18 0x00007f09d9bfa834 in PyCFunction_Call (func=0x7ffd74585880, args=0x5f746f6f722f6863, kwargs=0x7ffd74585880) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Objects/call.c:772; #19 0x00007f09d9cc4b0c in do_call_core (tstate=0x23ba020, func=0x7f09d21fe360, callargs=0x7f09d2237380, kwdict=0x0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:4983; #20 _PyEval_EvalFrameDefault (f=0x7f09da1609f0, throwflag=<optimized out>) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:3559; #21 0x00007f09d9cc8863 in PyEval_EvalFrameEx (f=0x7f09da1609f0, throwflag=0) at /workspace/build/externals/Python-3.8.6/src/Python/3.8.6/Python/ceval.c:741; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-805694356:3006,optimiz,optimized,3006,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-805694356,2,['optimiz'],['optimized']
Performance,"0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290; #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201; #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this; entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403; #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422; #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745; #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80; #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0; #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:4486,optimiz,optimized,4486,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiBld.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:7854,Load,Loading,7854,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/EG.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Thread.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime_Extra.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Hist.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RGL.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:10337,Load,Loading,10337,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVAGui.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistPainter.pcm; 0.0011 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:3153,Load,Loading,3153,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gdml.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0011 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_C.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0010 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/li,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:2874,Load,Loading,2874,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:2194,Load,Loading,2194,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"0/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a18d in ROOT::Experimental::Detail::RFieldBase::Flush (this=0xda3d4040) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RField.cxx:370; #11 0xf7e2c3e0 in ROOT::Experimental::RNTupleWriter::CommitCluster (this=0xd7486120, commitClusterGroup=true) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:370; #12 0xf7e2c674 in ROOT::Experimental::RNTupleWriter::~RNTupleWriter (this=0xd7486120, __in_chrg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RNTuple.cxx:327; #13 0x56560f58 in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=0xd7486120, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:100; #14 0x565606cf in std::default_delete<ROOT::Experimental::RNTupleWriter>::operator() (__ptr=<optimized out>, this=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:94; #15 std::unique_ptr<ROOT::Experimental::RNTupleWriter, std::default_delete<ROOT::Experimental::RNTupleWriter> >::~unique_ptr (this=0xffde8b50, __in_chrg=<optimized out>) at /usr/include/c++/13/bits/unique_ptr.h:405; #16 RNTuple_LargeFile2_Test::TestBody (this=0x57246b80) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/test/ntuple_extended.cxx:260; #17 0xf7d7159c in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) [clone .constprop.0] ()",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:10677,optimiz,optimized,10677,https://root.cern,https://github.com/root-project/root/issues/12427,1,['optimiz'],['optimized']
Performance,"0/v5-34-30-alice10/cint/cint/src/func.cxx:2660; #14 0x00007fba332cc07c in G__getstructmem (store_var_type=store_var_type; entry=112, varname=..., membername=membername; entry=0xe73375 ""InitAnalysis()"", memnamesize=memnamesize; entry=2147483647, tagname=tagname; entry=0xfa35e0 ""mgr"", known2=0x7ffcac8ce1a4, varglobal=0x7fba33a89180 <G__global>, objptr=2) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/var.cxx:6821; #15 0x00007fba332c51b5 in G__getvariable (item=item; entry=0xe73370 ""mgr->InitAnalysis()"", known=known; entry=0x7ffcac8ce1a4, varglobal=0x7fba33a89180 <G__global>, varlocal=0x7ffcac8d1aa0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/var.cxx:5407; #16 0x00007fba331e12f1 in G__getitem (item=0xe73370 ""mgr->InitAnalysis()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1906; #17 0x00007fba331e5c70 in G__getexpr (expression=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #18 0x00007fba331f2003 in G__test (expr=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1998; #19 0x00007fba33256ef4 in G__exec_if () at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/parse.cxx:1381; #20 G__exec_statement (mparen=mparen; entry=0x7ffcac8d188c) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/parse.cxx:7285; #21 0x00007fba3321462a in G__interpret_func (result7=result7; entry=0x7ffcac8d2400, funcname=<optimized out>, libp=libp; entry=0x7ffcac8d2440, hash=<optimized out>, p_ifunc=0x2243ac0, funcmatch=funcmatch; entry=1, memfunc_flag=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/ifunc.cxx:6710; #22 0x00007fba33204c22 in G__getfunction (item=item; entry=0xe65770 ""RunEtaC()"", known3=kn",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:4524,optimiz,optimized,4524,https://root.cern,https://github.com/root-project/root/issues/6977,1,['optimiz'],['optimized']
Performance,000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gpad.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Physics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFitCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Net.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MultiProc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTP.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Rtypes.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Geom.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Tree.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLParser.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MathCore.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TreePlayer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Imt.pcm; 2.9,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:11155,Load,Loading,11155,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:786; #21 0x00007af5870b0eff in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7af5722cc820, args=0x7af5722a9750, kwds=0x7af5722d6280) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:12406,optimiz,optimized,12406,https://root.cern,https://github.com/root-project/root/issues/15117,8,['optimiz'],['optimized']
Performance,"00001479042d0) at thread:284:5; frame #6: 0x00007fff2032f950 libsystem_pthread.dylib`_pthread_start + 224; frame #7: 0x00007fff2032b47b libsystem_pthread.dylib`thread_start + 15; ```; specifically at:; ```; frame #0: 0x000000010095d80f libROOTNTuple.6.23.so`ROOT::Experimental::Detail::RPageSourceFile::UnzipClusterImpl(this=0x00000001058ed770, cluster=0x0000000104f098a0) at RPageStorageFile.cxx:652:26; 649 }, nullptr));; 650 };; 651 ; -> 652 fTaskScheduler->AddTask(taskFunc);; 653 ; 654 firstInPage += pi.fNElements;; 655 pageNo++;; ```; and indeed:; ```; (lldb) p fTaskScheduler; (ROOT::Experimental::Detail::RPageStorage::RTaskScheduler *) $24 = 0x0000000000000000; ```. All other threads are idle either with (for most of them):; ```; thread #8; frame #0: 0x00007fff202faf86 libsystem_kernel.dylib`swtch_pri + 10; frame #1: 0x00007fff2032d07c libsystem_pthread.dylib`cthread_yield + 11; frame #2: 0x0000000104e57bcc libtbb.dylib`tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::receive_or_steal_task(this=0x0000000147c93e00, completion_ref_count=0x0000000147c97f28, isolation=0) at custom_scheduler.h:313:13 [opt]; frame #3: 0x0000000104e57646 libtbb.dylib`tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::local_wait_for_all(this=0x0000000147c93e00, parent=0x0000000147c97f40, child=<unavailable>) at custom_scheduler.h:708:13 [opt]; frame #4: 0x0000000104e4f435 libtbb.dylib`tbb::internal::arena::process(this=0x0000000147cdb100, s=0x0000000147c93e00) at arena.cpp:152:15 [opt]; ```; or (thread 1):; ```; thread #1, queue = 'com.apple.main-thread'; frame #0: 0x00007fff202fadbe libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap + 10; frame #1: 0x00007fff202fc409 libsystem_kernel.dylib`mach_vm_deallocate + 64; frame #2: 0x00007fff2032f4e4 libsystem_pthread.dylib`_pthread_deallocate + 69; frame #3: 0x00007fff2033114f libsystem_pthread.dylib`_pthread_join + 798; frame #4: 0x00007fff202cd806 libc++.1.dylib`std::__1::thread::join() + 24; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7076:3435,queue,queue,3435,https://root.cern,https://github.com/root-project/root/issues/7076,1,['queue'],['queue']
Performance,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #84 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51039ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #85 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb410, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #86 _PyFunction_Vectorcall (func=0x7ffa512fb400, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #87 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:14759,optimiz,optimized,14759,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #70 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284840, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #71 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #72 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #73 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:12147,optimiz,optimized,12147,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #74 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c7650, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #75 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc990, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #77 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c74c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #78 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #79 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #80 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #81 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5103a020, callable=0x7ffa512fb370) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #82 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccb50, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #83 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:13453,optimiz,optimized,13453,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #63 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51356510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #64 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #65 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #66 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #67 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512849f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #68 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc7d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #69 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:10841,optimiz,optimized,10841,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #56 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa513506c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #57 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9eb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #58 _PyFunction_Vectorcall (func=0x7ffa512f9ea0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #59 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #60 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51356690, callable=0x7ffa512f9ea0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #61 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc610, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #62 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:9535,optimiz,optimized,9535,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #88 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510753f8, callable=0x7ffa512fb400) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #89 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ccd10, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #90 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #91 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075260, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #92 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa51072de0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #93 _PyFunction_Vectorcall (func=0x7ffa51072dd0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #94 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #95 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51075200, callable=0x7ffa51072dd0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #96 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cced0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #97 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:16065,optimiz,optimized,16065,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #51 _PyFunction_Vectorcall (func=0x7ffa5137e560, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #52 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #53 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51350838, callable=0x7ffa5137e560) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #54 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc450, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #55 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:8229,optimiz,optimized,8229,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511b7d in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:208; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:14381,optimiz,optimized,14381,https://root.cern,https://github.com/root-project/root/issues/15799,1,['optimiz'],['optimized']
Performance,"00007f3f13322cf0 in TUnixSystem::Exec (this=0x5619b6bb82b0, shellcmd=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2151; #3 TUnixSystem::StackTrace (this=0x5619b6bb82b0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:2442; #4 0x00007f3f13511c5f in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:189; #5 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:202; #6 0x00007f3f133203b9 in TUnixSystem::DispatchSignals (this=0x5619b6bb82b0, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/unix/src/TUnixSystem.cxx:3657; #7 <signal handler called>; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/b",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:2067,optimiz,optimized,2067,https://root.cern,https://github.com/root-project/root/issues/15799,1,['optimiz'],['optimized']
Performance,"00007fffea9c66da in TCling::DataMemberInfo_Factory (this=0x555555b29730, clinfo=0x55555a9b6510, selection=TDictionary::EMemberSelection::kNoUsingDecls); at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:8599; #12 0x00007ffff09982d1 in TListOfDataMembers::Load (this=0x55555a9a6d40) at /home/jhahnfel/ROOT/src/core/meta/src/TListOfDataMembers.cxx:469; #13 0x00007ffff098162e in TClass::CreateListOfDataMembers (this=0x55555a9df5b0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=true); at /opt/rh/gcc-toolset-13/root/usr/lib/gcc/x86_64-redhat-linux/13/../../../../include/c++/13/bits/atomic_base.h:837; #14 0x00007fffea9c2cce in TCling::InvalidateCachedDecl (this=0x555555b29730, Lists=..., D=0x55555b60ad18) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6928; #15 0x00007fffea9a161f in TCling::UpdateListsOnUnloaded (this=0x555555b29730, T=...) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:6866; #16 0x00007fffeaacfd7c in cling::MultiplexInterpreterCallbacks::TransactionUnloaded (this=<optimized out>, T=...); at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:109; #17 0x00007fffeaacc901 in cling::Interpreter::unload (this=0x555555803e60, T=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1543; #18 0x00007fffeaad3f97 in cling::IncrementalParser::commitTransaction (this=0x555555c3bee0, PRT=..., ClearDiagClient=true); at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:609; #19 0x00007fffeaad4ab1 in cling::IncrementalParser::Compile (this=0x555555c3bee0, input=..., Opts=...) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:849; #20 0x00007fffeaac91af in cling::Interpreter::DeclareInternal (this=this@entry=0x555555803e60,; input=""namespace __cppyy_internal {\nvoid init_tuple_string_unsigned_long_(tuple<string,unsigned long>*& self, const unsigned long& _1 = 0, const string& _0 = string{}) {\n ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16338#issuecomment-2370776890:2823,optimiz,optimized,2823,https://root.cern,https://github.com/root-project/root/pull/16338#issuecomment-2370776890,1,['optimiz'],['optimized']
Performance,"00007ffff7f7a2df in std::vector<void const*, std::allocator<void const*> >::resize (this=0x13ff4df8, __new_size=18446744073692016332, __x=@0x7fffffff9320: 0x0) at /data2/alja/fwWeb/cmsBetaBld/slc7_amd64_gcc900/external/gcc/9.3.0/include/c++/9.3.0/bits/stl_vector.h:957; #5 0x00007fffd599ae1c in ROOT::read_recocLcLPFCandidate_2 (target=0x13ff4c40 ""\250\373\245\325\377\177"", oldObj=0x7fffffff9380) at DataFormatsParticleFlowCandidate/a/DataFormatsParticleFlowCandidate_xr.cc:2669; #6 0x00007ffff472c4e5 in TStreamerInfo::ReadBufferArtificial<char**> (this=this@entry=0x33e2c20, b=..., arr=@0x7fffffff9530: 0x14259120, aElement=aElement@entry=0x85f9470, narr=narr@entry=1529, eoffset=eoffset@entry=0); at /data2/alja/fwWeb/cmsBetaBld/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/io/io/src/TStreamerInfoReadBuffer.cxx:550; #7 0x00007ffff47f483c in TStreamerInfo::ReadBuffer<char**> (this=0x33e2c20, b=..., arr=<optimized out>, compinfo=0x13c373a8, first=<optimized out>, last=1, narr=1529, eoffset=0, arrayMode=1); at /data2/alja/fwWeb/cmsBetaBld/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/io/io/src/TStreamerInfoReadBuffer.cxx:1672; #8 0x00007ffff469259d in TStreamerInfoActions::VectorLooper::GenericRead (buf=..., start=0x13ff4c40, end=0x140b0e78, loopconfig=0x13385580, config=0x13c37390) at /data2/alja/fwWeb/cmsBetaBld/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/io/io/src/TStreamerInfoActions.cxx:1878; #9 0x00007ffff4586baf in TStreamerInfoActions::TConfiguredAction::operator() (this=0xe3d1670, buffer=..., start_collection=0x13ff4c40, end_collection=0x140b0e78, loopconf=0x13385580) at /data2/alja/fwWeb/cmsBetaBld/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/io/io/inc/TStreamerInfoActions.h:131; #10 0x00007ffff4584ca0 in TBufferFile::ApplySequence (this=0x7fffffff9620, sequence=..., start_collection=0x13ff4c40, end_collection=0x140b0e78) at /data2/alja/fwWeb/cmsBetaBld/BUILD/slc7_amd64_gcc900/lcg/root/6.25.01/root-6.25.01/io/io/src/TBufferFile.cx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-930310107:2242,optimiz,optimized,2242,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-930310107,2,['optimiz'],['optimized']
Performance,0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_intrinsics.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Proof.pcm; 0.0001 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodul,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:8540,Load,Loading,8540,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"0007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:5749,optimiz,optimized,5749,https://root.cern,https://github.com/root-project/root/issues/15117,3,['optimiz'],['optimized']
Performance,"0007f690730267c in cling::ExternalASTSourceWrapper::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6917ca84a0, ; DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:170; #15 0x00007f69083873b4 in clang::MultiplexExternalSemaSource::FindExternalLexicalDecls(clang::DeclContext const*, llvm::function_ref<bool (clang::Decl::Kind)>, llvm::SmallVectorImpl<clang::Decl*>&) (this=0x7f6918df92d0, ; DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121; #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185; #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356; #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412; #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109; #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393; #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908; #2",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845#issuecomment-1791689926:12087,Load,LoadLexicalDeclsFromExternalStorage,12087,https://root.cern,https://github.com/root-project/root/issues/13845#issuecomment-1791689926,1,['Load'],['LoadLexicalDeclsFromExternalStorage']
Performance,"0007fffeec4347b in clang::ASTReader::ReadDeclRecord (this=0xea4670, ID=402293) at /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReaderDecl.cpp:4155; #17 0x00007fffeeb60800 in clang::ASTReader::GetDecl (this=0xea4670, ID=402293) at /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7531; #18 0x00007fffeeb665bb in clang::ASTReader::GetExternalDecl (this=0xea4670, ID=402293) at /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:7240; #19 0x00007fffedb6c480 in cling::ExternalASTSourceWrapper::GetExternalDecl (this=0xe70300, ID=402293) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:115; #20 0x00007fffeed8d884 in clang::MultiplexExternalSemaSource::GetExternalDecl (this=0x7370d0, ID=402293) at /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:45; #21 0x00007ffff2481278 in clang::RedeclarableTemplateDecl::loadLazySpecializationImpl (this=0x1c08370, LazySpecInfo=...) at /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp:310; #22 0x00007ffff2481364 in clang::RedeclarableTemplateDecl::loadLazySpecializationsImpl (this=0x1c08370, Args=..., TPL=0x0) at /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp:323; #23 0x00007ffff2486ad6 in clang::RedeclarableTemplateDecl::findSpecializationImpl<clang::FunctionTemplateSpecializationInfo, llvm::ArrayRef<clang::TemplateArgument>&> (this=0x1c08370, Specs=..., InsertPos=@0x7fffffff8488: 0x0, ProfileArgs=...) at /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp:335; #24 0x00007ffff2481792 in clang::FunctionTemplateDecl::findSpecialization (this=0x1c08370, Args=..., InsertPos=@0x7fffffff8488: 0x0) at /home/jhahnfel/ROOT/src/interpreter/llvm/src/tools/clang/lib/AST/DeclTemplate.cpp:416; #25 0x00007fffefe57c77 in clang::TemplateDeclInstantiator::VisitFunctionDe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1403351246:3930,load,loadLazySpecializationImpl,3930,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1403351246,1,['load'],['loadLazySpecializationImpl']
Performance,0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pcm; 0.0024 ( 0.1%) 0.0000 ( 0.0%) 0.0024 ( 0.1%) 0.0020 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FitPanel.pcm; 0.0015 ( 0.1%) 0.0000 ( 0.0%) 0.0015 ( 0.0%) 0.0016 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RHTTPSniff.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0015 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTVecOps.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0014 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Html.pcm; 0.0013 ( 0.0%) 0.0000 ( 0.0%) 0.0013 ( 0.0%) 0.0013 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/G,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:2597,Load,Loading,2597,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"007f770e5f2af5 in TUrl::ParseOptions (this=0x7ffd338cde30) at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:645; #25 0x00007f770e5f2e78 in TUrl::HasOption (this=0x7ffd338cde30, key=0x7f770e08fcb0 ""reproducible"") at /home/vpadulan/programs/rootproject/rootsrc/core/base/src/TUrl.cxx:686; #26 0x00007f770de70701 in TFile::TFile (this=0x7ffd338cdc20, fname1=0x354aec0 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"", option=0x7f770e09587f ""WEB"", ftitle=0x7f770e09586c ""read-only TMemFile"", compress=0) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TFile.cxx:380; #27 0x00007f770deb3d34 in TMemFile::TMemFile (this=0x7ffd338cdc20, path=0x25e1170 ""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm?filetype=pcm"", datarange=...) at /home/vpadulan/programs/rootproject/rootsrc/io/io/src/TMemFile.cxx:114; #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850; #29 0x00007f770426c5d7 in TCling::RegisterModule (this=0x19ecfe0, modulename=0x7f770e9c96a9 ""libNet"", headers=0x7f770e9fb4c8 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::headers>, includePaths=0x7f770e9fb4d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::includePaths>, payloadCode=0x7f770e9c9064 """", fwdDeclsCode=0x7f770e9c9064 """", triggerFunc=0x7f770e9828af <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()>, fwdDeclsArgToSkip=std::vector of length 0, capacity 0, classesHeaders=0x7f770e9f84d0 <(anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl()::classesHeaders>, lateRegistration=true, hasCxxModule=true) at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:2307; #30 0x00007f770e5b2787 in TROOT::InitInter",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13691:4237,Load,LoadPCM,4237,https://root.cern,https://github.com/root-project/root/issues/13691,1,['Load'],['LoadPCM']
Performance,"01. ... [106/527] Performing download step (download, verify and extract) for 'BUILTIN_cppzmq'; -- Downloading...; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; timeout='none'; inactivity timeout='none'; -- Using src='http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/sources/cppzmq-4.8.1.tar.gz'; -- [download 100% complete]; -- verifying file...; file='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; -- Downloading... done; -- extracting...; src='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/BUILTIN_cppzmq'; -- extracting... [tar xfz]; -- extracting... [analysis]; -- extracting... [rename]; -- extracting... [clean up]; -- extracting... done; [287/527] Generating G__ROOTHist.cxx, ../../lib/ROOTHist.pcm. ... [106/527] Performing download step (download, verify and extract) for 'BUILTIN_cppzmq'; -- Downloading...; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; timeout='none'; inactivity timeout='none'; -- Using src='http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/sources/cppzmq-4.8.1.tar.gz'; -- [download 100% complete]; -- verifying file...; file='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; -- Downloading... done; -- extracting...; src='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/BUILTIN_cppzmq'; -- extracting... [tar xfz]; -- extracting... [analysis]; -- extracting... [rename]; -- extracting... [clean up]; -- extracting... done; [526/527] Generating lib/modules.idx. [527/527] Generating tutorials/hsimple.root. Processing hsimple.C...; hsimple : Real Time = 0.10 seconds Cpu Time = 0.10 seconds; (TFile *",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16227#issuecomment-2288847307:1606,Perform,Performing,1606,https://root.cern,https://github.com/root-project/root/issues/16227#issuecomment-2288847307,1,['Perform'],['Performing']
Performance,"011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227; #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6; #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6; #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. /bin/sh: lin",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:7904,optimiz,optimized,7904,https://root.cern,https://github.com/root-project/root/issues/12957,1,['optimiz'],['optimized']
Performance,"011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __p=0x1, __n=18446744073709551615) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:354; #12 0x0000152ece696eac in std::_Vector_base<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227; #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6; #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6; #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. The lines be",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:4375,optimiz,optimized,4375,https://root.cern,https://github.com/root-project/root/issues/12957,1,['optimiz'],['optimized']
Performance,013.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNIC.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:43108,load,load,43108,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,014-python3&date=2020-06-05).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85311/console).; ### Failing tests:; - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85311/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85311/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85311/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85311/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85311/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85311/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tfile_attrsyntax_get_writeobject_open/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tdirectoryfile_attrsyntax_get](https://lcgapp-services.cern.ch/root-jenkins/job/root-pul,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-639280968:1236,cache,cache,1236,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-639280968,1,['cache'],['cache']
Performance,"02 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:18897,optimiz,optimized,18897,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"02; #23 0x0000150891ebad31 in TDataMember::TDataMember (this=0xb2bc560, info=0xb2bf6c0, cl=0xb2befa0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TDataMember.cxx:187; #24 0x0000150891ecd995 in TListOfDataMembers::Get (this=0xb2b4e70, info=0x98a51d0, skipChecks=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TListOfDataMembers.cxx:307; #25 0x0000150891ece0ac in TListOfDataMembers::Load (this=0xb2b4e70) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TListOfDataMembers.cxx:474; #26 0x0000150891ea0d5d in TClass::CreateListOfDataMembers (this=0xb2befa0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:3761; #27 0x0000150891ea0e9c in TClass::GetListOfDataMembers (this=0xb2befa0, load=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:3780; #28 0x0000150891e9fa81 in TClass::GetDataMember (this=0xb2befa0, datamember=0x7ffeced6d2d0 ""elements_"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:3456; #29 0x0000150891e94447 in TBuildRealData::Inspect (this=0x7ffeced6daa0, cl=0xb2befa0, pname=0xb2ab830 """", mname=0x7ffeced6d2d0 ""elements_"", add=0x0, isTransient=true) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2331366418:11844,load,load,11844,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2331366418,1,['load'],['load']
Performance,"04_classfactory.C"", compRes=; 0x7fffff15750c: cling::Interpreter::kSuccess, result=result; entry=0x7fffff157520) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ADT/StringRef.h:86; ===========================================================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running a compiles unit test (gtest):. ~~~; 314/1192 Test #204: gtest-roofit-RDataFrameHelpers-test-testActionHelpers ...............***Failed 111.03 sec; Running main() from gtest_main.cc; Note: Google Test filter = -RCsvDS.Remote:RRawFile.Remote:RSqliteDS.Davix:TFile.ReadWithoutGlobalRegistrationWeb:TFile.ReadWithoutGlobalRegistrationNet:RNTuple.TClassEBO; [==========] Running 2 tests from 1 test case.; [----------] Global test environment set-up.; [----------] 2 tests from RooAbsDataHelper; [ RUN ] RooAbsDataHelper.MTConstruction; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa08f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa085a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa13a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x173f45850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa13ac1c8 in TUnixSystem::DispatchSignals (this=0x173f45850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa13ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:19184,optimiz,optimized,19184,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,06 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/X3d.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImageGui.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/FFTW.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SPlot.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofBench.pcm; 0.0005 ( 0.0%) 0.0000 ( 0.0%) 0.0005 ( 0.0%) 0.0005 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Rint.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0004 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GX11TTF.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Config.pcm; 0.0002 ( 0.0%) 0.0000 ( 0.0%) 0.0002 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/libc.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gui.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0001 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_Builtin_stddef_max_align_t.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Matrix.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Graf3d.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Ged.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/_B,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:8265,Load,Loading,8265,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"063d libGCocoa.so`ROOT::MacOSX::X11::CommandBuffer::Flush(this=0x0000000100dbb080, impl=0x0000000100dbb000) at X11Buffer.mm:550; frame #6: 0x000000011c04e9c4 libGCocoa.so`TGCocoa::Update(this=0x0000000100ad1bc0, mode=1) at TGCocoa.mm:536; frame #7: 0x000000011c04ff3e libGCocoa.so`TGCocoa::UpdateWindow(this=0x0000000100ad1bc0, (null)=1) at TGCocoa.mm:776; frame #8: 0x000000011ad70827 libGpad.so`TCanvas::Flush(this=0x000000012274e740) at TCanvas.cxx:1096; frame #9: 0x000000011ad7830f libGpad.so`TCanvas::Update(this=0x000000012274e740) at TCanvas.cxx:2287; frame #10: 0x0000000100fe4e86 threadsh2_C.so`handle2((null)=0x0000000000000001) at threadsh2.C:105; frame #11: 0x0000000100f55680 libThread.so`TThread::Function(ptr=0x0000000122753b00) at TThread.cxx:821; frame #12: 0x00007fffab1f493b libsystem_pthread.dylib`_pthread_body + 180; frame #13: 0x00007fffab1f4887 libsystem_pthread.dylib`_pthread_start + 286; frame #14: 0x00007fffab1f408d libsystem_pthread.dylib`thread_start + 13. thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP; frame #0: 0x00007fffab109bf2 libsystem_kernel.dylib`__psynch_cvwait + 10; frame #1: 0x00007fffab1f57fa libsystem_pthread.dylib`_pthread_cond_wait + 712; frame #2: 0x00007fffa9b734cd libc++.1.dylib`std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 47; frame #3: 0x0000000100f76b6f libThread.so`void std::__1::condition_variable_any::wait<std::__1::unique_lock<std::__1::mutex> >(this=0x0000000122753a28, __lock=0x00007fff5fbf5cf8) at condition_variable:202; frame #4: 0x0000000100f6887e libThread.so`ROOT::TReentrantRWLock<std::__1::mutex, ROOT::Internal::RecurseCounts>::ReadLock() [inlined] void std::__1::condition_variable_any::wait<std::__1::unique_lock<std::__1::mutex>, ROOT::TReentrantRWLock<std::__1::mutex, ROOT::Internal::RecurseCounts>::ReadLock()::'lambda'()>(this=0x0000000122753a28, __lock=0x00007fff5fbf5cf8, __pred=(anonymous class) @ 0x00007fff5fbf5e08)::'lambda'()) at condition_variable:211;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1573:2241,queue,queue,2241,https://root.cern,https://github.com/root-project/root/pull/1573,1,['queue'],['queue']
Performance,"067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/wo",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:9656,optimiz,optimized,9656,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,07:f8f0:660:3::40) port 2880 (#0); * Initializing NSS with certpath: sql:/etc/pki/nssdb; * failed to load '/etc/grid-security/certificates/7022e3c4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/69105f4f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certific,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:1631,load,load,1631,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"07f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so; #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70; #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:13120,optimiz,optimized,13120,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"07f54bf61f24b in (anonymous namespace)::TriggerDictionaryInitialization_test_cpp_ACLiC_dict_Impl () at /scratch2/root-debug2/test_cpp_ACLiC_dict.cxx:88; #36 0x00007f54c9246973 in _dl_init_internal () from /lib64/ld-linux-x86-64.so.2; #37 0x00007f54c924b54e in dl_open_worker () from /lib64/ld-linux-x86-64.so.2; #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2; #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2; #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err; entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this; entry=0x55ed24bf4fb0, libStem=..., permanent=permanent; entry=false, resolved=resolved; entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372; #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940; #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581; #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction; entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #49 0x00007f54c1c271ca in c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:10724,load,loadLibrary,10724,https://root.cern,https://github.com/root-project/root/issues/9595,2,['load'],['loadLibrary']
Performance,"07faf49952db6 in Cppyy::GetScope (sname=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510; #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541; #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:8336,optimiz,optimized,8336,https://root.cern,https://github.com/root-project/root/issues/8578,3,['optimiz'],['optimized']
Performance,"07fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:433; #23 0x00007fffa8f0fa14 in TClass::New (this=<optimized out>, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:4969; #24 0x00007fffa92e0724 in TBufferFile::ReadObjectAny (this=0x7ffff83ea100, clCast=0x10a861920) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:2458; #25 0x00007fffa9389c44 in TGenCollectionStreamer::ReadObjects (this=0x10a861070, nElements=<optimized out>, b=..., onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:395; #26 0x00007fffa938a6f8 in TGenCollectionStreamer::ReadBufferGeneric (this=<optimized out>, b=..., obj=0x109986cc0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1368; #27 0x00007fffa93850a8 in TGenCollectionStreamer::ReadBufferDefault (this=0x10a861070, b=..., obj=0x109986cc0, onFileClass=0x0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1302; #28 0x00007fffa9384f00 in TGenCollectionStreamer::ReadBuffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:6742,optimiz,optimized,6742,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"07ffff4ca01ca in std::__throw_length_error (__s=__s@entry=0x7ffff79711aa ""basic_string::_M_replace_aux""); at /usr/src/debug/gcc/gcc/libstdc++-v3/src/c++11/functexcept.cc:82; #8 0x00007ffff76f2ae8 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_check_length (__s=<optimized out>,; __n2=<optimized out>, __n1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.h:403; #9 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_replace_aux (__c=<optimized out>, __n2=<optimized out>,; __n1=<optimized out>, __pos1=<optimized out>, this=<optimized out>) at /usr/include/c++/13.1.1/bits/basic_string.tcc:450; #10 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::append (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.h:1489; #11 std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::resize (__c=<optimized out>, __n=<optimized out>, this=<optimized out>); at /usr/include/c++/13.1.1/bits/basic_string.tcc:401; #12 TBufferFile::ReadStdString (this=0x7fffffffd9d0, obj=0x7fffa8bd2d68) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:247; #13 0x00007ffff76eb1f1 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555555cc34b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #14 TBufferFile::ReadFastArray (this=0x7fffffffd9d0, start=<optimized out>, cl=0x555555cc34b0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1609; #15 0x00007ffff7931e28 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555558509890, b=..., arr=..., compinfo=0x5555585140d0,; first=first@entry=0, last=4, narr=16777216, eoffset=0, arrayMode=1); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1297; #16",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:2267,optimiz,optimized,2267,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,6,['optimiz'],['optimized']
Performance,"07ffff76eb1f1 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555555cc34b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #14 TBufferFile::ReadFastArray (this=0x7fffffffd9d0, start=<optimized out>, cl=0x555555cc34b0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1609; #15 0x00007ffff7931e28 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555558509890, b=..., arr=..., compinfo=0x5555585140d0,; first=first@entry=0, last=4, narr=16777216, eoffset=0, arrayMode=1); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1297; #16 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #17 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #18 0x00007ffff7931b46 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555556c6f630, b=..., arr=..., compinfo=0x55555864f9a0,; first=first@entry=0, last=16, narr=2, eoffset=0, arrayMode=1) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #19 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #20 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:3556,optimiz,optimized,3556,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,2,['optimiz'],['optimized']
Performance,"08be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:23889,optimiz,optimized,23889,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,09 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/XMLIO.pcm; 0.0010 ( 0.0%) 0.0000 ( 0.0%) 0.0010 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Spectrum.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RMySQL.pcm; 0.0008 ( 0.0%) 0.0000 ( 0.0%) 0.0008 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ASImage.pcm; 0.0009 ( 0.0%) 0.0000 ( 0.0%) 0.0009 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomBuilder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0008 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionV,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:5498,Load,Loading,5498,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"0aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1609; #34 TBufferFile::ReadFastArray (this=0x7ffff83ea100, start=<optimized out>, cl=0x10a860aa0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1596; #35 0x00007fffa94a224c in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x10a395fa0, addr=<optimized out>, buf=...) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1362; #36 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x109986ba0, conf=0x10a395fa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1405; #37 0x00007fffa92d3130 in TStreamerInfoActions::TConfiguredAction::operator() (this=0x109f4d790, this=0x109f4d790, object=0x109986ba0, buffer=...) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TStreamerInfoActions.h:123; #38 TBufferFile::ApplySequence (obj=0x109986ba0, sequence=..., this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:3580; #39 TBufferFile::A",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:8512,optimiz,optimized,8512,https://root.cern,https://github.com/root-project/root/issues/12372,3,['optimiz'],['optimized']
Performance,0c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:31511,load,load,31511,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"0x0, DC=0x80) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingMemberIter.h:145; #21 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffffb128, interp=0x0, DC=0x80, selection=TDictionary::EMemberSelection::kAlsoUsingDecls) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingDataMemberInfo.h:66; #22 TClingDataMemberInfo::TClingDataMemberInfo (this=0xa1b5350, interp=0x4f17a0, ci=0xaacabd0, selection=TDictionary::EMemberSelection::kAlsoUsingDecls) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingDataMemberInfo.cxx:115; #23 0x00007fffee96cf5b in TCling::DataMemberInfo_Factory (this=0x4f0e00, clinfo=0xaacabd0, selection=TDictionary::EMemberSelection::kAlsoUsingDecls) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:8508; #24 0x00007ffff685869f in TListOfDataMembers::Load (this=0x16a61c0) at /home/jhahnfel/ROOT/llvm13/src/core/meta/src/TListOfDataMembers.cxx:469; #25 0x00007ffff675c6f7 in TROOT::GetListOfGlobals (this=0x7ffff6932358 <ROOT::Internal::GetROOT1()::alloc>, load=true) at /home/jhahnfel/ROOT/llvm13/src/core/base/src/TROOT.cxx:1760; #26 0x00007fffebd32f70 in _GLOBAL__sub_I_clingwrapper.cxx () at /home/jhahnfel/ROOT/llvm13/src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:289; #27 0x00007ffff7de3e0a in call_init (l=<optimized out>, argc=argc@entry=2, argv=argv@entry=0x7fffffffddf8, env=env@entry=0x41d000) at dl-init.c:72; #28 0x00007ffff7de3f0a in call_init (env=0x41d000, argv=0x7fffffffddf8, argc=2, l=<optimized out>) at dl-init.c:30; #29 _dl_init (main_map=0xaaed240, argc=2, argv=0x7fffffffddf8, env=0x41d000) at dl-init.c:119; #30 0x00007ffff59a61bc in _dl_catch_exception () from /lib64/libc.so.6; #31 0x00007ffff7de7b2e in dl_open_worker (a=0x7fffffffbc10) at dl-open.c:819; #32 dl_open_worker (a=0x7fffffffbc10) at dl-open.c:782; #33 0x00007ffff59a6164 in _dl_catch_exception () from /lib64/libc.so.6; #34 0x00007ffff7de7d11 in _dl_open (file=0xaaee820 ""/home/jhahnfel/ROOT/llvm13/build-cling-c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:6236,load,load,6236,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['load'],['load']
Performance,"0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<optimized out>, result=0x33f, disableValuePrinting=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; 2187: #31 0x00007f2a5058c5ff in HandleInterpreterException (metaProcessor=metaProcessor; 2187: entry=0x60700007bb60, input_line=0x7f2a6338f0de "".L /home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", compRes=; 2187: 0x7f2a5e5cef40: cling::Interpreter::kSuccess, result=result; 2187: entry=0x0) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:2455; 2187: #32 0x00007f2a50595b52 in TCling::Load (this=<optimized out>, filename=<optimized out>, system=<optimized out>) at /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:3503; 2187: #33 0x00007f2a62daf8c5 in TSystem::Load (this=0x617000000080, module=<optimized out>, entry=<optimized out>, system=false) at /home/jhahnfel/ROOT/src/core/base/src/TSystem.cxx:1945; 2187: #34 0x00007f2a477371",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:5549,optimiz,optimized,5549,https://root.cern,https://github.com/root-project/root/issues/11867,2,['optimiz'],['optimized']
Performance,"0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this; entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540; #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168; #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346; #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394; #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344; #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271; #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230; #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317; #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this; entry=0x55ed24c47160, DirectiveLoc=..., Mod=0x55ed24c921b0) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:431; #27 0x00007f54c2939a40 in clang::Sema::ActOnModuleInclude (this=this; entry=0x55ed24c47160, DirectiveLoc=..., Mod=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/Sema/SemaModule.cpp:406; #28 0x00007f54c2344859 in clang::Parse",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:5631,optimiz,optimized,5631,https://root.cern,https://github.com/root-project/root/issues/9595,2,['optimiz'],['optimized']
Performance,"0x00007faf49952302 in Cppyy::ResolveName (cppitem_name=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:410; #25 0x00007faf49952db6 in Cppyy::GetScope (sname=...); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:510; #26 0x00007faf49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541; #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:8118,optimiz,optimized,8118,https://root.cern,https://github.com/root-project/root/issues/8578,1,['optimiz'],['optimized']
Performance,"0x00007ffff57dff2c in tcmalloc::ThreadCache::ListTooLong (this=0x45a040, list=0x45a0a0, cl=<optimized out>) at src/thread_cache.cc:164; #5 0x00007ffff6dc2465 in TString::UnLink (this=0xcbb820) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/inc/TString.h:265; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007ffff68a2266 in TString::~TString (this=0xcbb820, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TString.cxx:249; #7 0x00007ffff68ac37f in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TStyle.cxx:478; #8 0x00007ffff68ac46c in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TStyle.cxx:483; #9 0x00007ffff68fa74e in TCollection::GarbageCollect (obj=0xcbb500) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/cont/src/TCollection.cxx:736; #10 0x00007ffff6902c6f in TList::Delete (this=0xcb8070, option=0x7ffff69efd24 """") at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/cont/src/TList.cxx:537; #11 0x00007ffff689635c in TROOT::EndOfProcessCleanups (this=0x7ffff6b34040 <ROOT::Internal::GetROOT1()::alloc>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TROOT.cxx:1235; #12 0x00007ffff682ef46 in CallEndOfProcessCleanups () at /data/cmsbld/jen",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429:2879,optimiz,optimized,2879,https://root.cern,https://github.com/root-project/root/issues/13429,1,['optimiz'],['optimized']
Performance,"0x432d290, R__b=...) at /u/rlalik/hades/software/root-v5/tree/tree/src/TBranchElement.cxx:5345; #10 0x00007ffff144caaf in TClass::Streamer (onfile_class=0x0, b=..., obj=0x432d290, this=0x97b0bf0) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451; #11 TBufferFile::WriteObjectClass (this=0xb5bea80, actualObjectStart=0x432d290, actualClass=0x97b0bf0) at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2645; #12 0x00007ffff1446e23 in TBufferFile::WriteObjectAny (this=this@entry=0xb5bea80, obj=obj@entry=0x432d290, ptrClass=0xc84340); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2699; #13 0x00007ffff239d6e4 in operator<< (obj=0x432d290, buf=...) at /u/rlalik/hades/software/root-v5/build_cmake/include/TBuffer.h:407; #14 TObjArray::Streamer (this=0x4307d50, b=...) at /u/rlalik/hades/software/root-v5/core/cont/src/TObjArray.cxx:460; #15 0x00007ffff1448149 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x1a5db20) at /u/rlalik/hades/software/root-v5/build_cmake/include/TClass.h:451; #16 TBufferFile::WriteFastArray (this=0xb5bea80, start=<optimized out>, cl=0x1a5db20, n=<optimized out>, streamer=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TBufferFile.cxx:2352; #17 0x00007ffff15f318b in TStreamerInfo::WriteBufferAux<char**> (this=0x97dc950, b=..., arr=@0x7fffffffc178: 0x7fffffffc170, compinfo=0x0, first=first@entry=0, last=159251232, ; last@entry=1, narr=1, eoffset=0, arrayMode=27646752) at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoWriteBuffer.cxx:599; #18 0x00007ffff14d664d in TStreamerInfoActions::GenericWriteAction (buf=..., addr=<optimized out>, config=<optimized out>); at /u/rlalik/hades/software/root-v5/io/io/src/TStreamerInfoActions.cxx:174; #19 0x00007ffff1446af5 in TStreamerInfoActions::TConfiguredAction::operator() (this=<optimized out>, this=<optimized out>, object=0x4307c00, buffer=...); at /u/rlalik/hades/software/root-v5/build_cmake/include/TStreamerInfoActions.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9564:3772,optimiz,optimized,3772,https://root.cern,https://github.com/root-project/root/issues/9564,1,['optimiz'],['optimized']
Performance,"0x555557649e60) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #118 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557627820); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #119 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x55555631fd20, pointer=0x555557627820, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #120 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x55555631fd20); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #121 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #122 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=297, b=..., ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #123 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x5555575cfe80, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #124 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #125 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #126 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x555557625580, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #127 TStreamerInfoActions::ReadSTL<&TStreamerI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:27291,optimiz,optimized,27291,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,"0x55ed2ccd0f20, IsTentative=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:4024; #17 0x00007f54c1dbd03c in clang::CodeGen::CodeGenModule::EmitGlobalDefinition (this=this; entry=0x55ed2cce1280, GD=..., GV=GV; entry=0x0) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2793; #18 0x00007f54c1dbd7e5 in clang::CodeGen::CodeGenModule::EmitGlobal (this=this; entry=0x55ed2cce1280, GD=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:2540; #19 0x00007f54c1dc4a2a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=0x55ed2ccd0f20) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5168; #20 0x00007f54c1dc530a in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=0x55ed2cce1280, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5346; #21 0x00007f54c1dc588c in clang::CodeGen::CodeGenModule::EmitTopLevelDecl (this=<optimized out>, D=<optimized out>) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenModule.cpp:5394; #22 0x00007f54c1cc4882 in clang::CodeGeneratorImpl::HandleTopLevelDecl (this=0x55ed24bf4880, DG=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/ModuleBuilder.cpp:344; #23 0x00007f54c212ea20 in clang::MultiplexConsumer::HandleTopLevelDecl (this=<optimized out>, D=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:271; #24 0x00007f54c1c04987 in cling::DeclCollector::HandleTopLevelDecl (this=0x55ed24bb4dd0, DGR=...) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DeclCollector.cpp:230; #25 0x00007f54c212ec98 in clang::MultiplexConsumer::HandleImplicitImportDecl (this=<optimized out>, D=0x55ed2ccd0ed8) at /usr/local/src/conda/clang_packages-9.0.1/lib/Frontend/MultiplexConsumer.cpp:317; #26 0x00007f54c2935433 in clang::Sema::BuildModuleInclude (this=this; entry=0x55ed24c47160, Directi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:5256,optimiz,optimized,5256,https://root.cern,https://github.com/root-project/root/issues/9595,4,['optimiz'],['optimized']
Performance,"0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #21 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #22 0xe4213daf in TTree::Streamer (this=0x58ac5e90, b=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/tree/tree/src/TTree.cxx:9626; #23 0xe42319ec in ROOT::streamer_TTree (buf=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/redhat-linux-build/tree/tree/G__Tree.cxx:4359; #24 0xf7ced0ad in TStreamerBase::WriteBuffer (this=0x590a9640, b=..., pointer=0x58ac5e90 ""\260\360"", <incomplete sequence \344>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/core/meta/src/TStreamerElement.cxx:859; #25 0xf7231bc8 in TStreamerInfo::WriteBufferAux<char**> (this=0x590a94b0, b=..., arr=; 0xffefce18: 0xffefce14, compinfo=0x59354f6c, first=<optimized out>, last=1, narr=1, eoffset=0, arrayMode=2) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoWriteBuffer.cxx:660; #26 0xf7071540 in TStreamerInfoActions::GenericWriteAction (buf=..., addr=0x58ac5e90, config=0x59354f60) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TStreamerInfoActions.cxx:202; #27 0xf6f9f36b in TStreamerInfoActions::TConfiguredAction::operator() (this=0x594d4bc0, buffer=..., object=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x58d8e800, sequence=..., obj=0x58ac5e90) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3679; #29 0xf6fa6058 in TBufferFile::WriteClassBuffer (this=<optimized out>, cl=<optimized out>, pointer=<optimized out>) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/io/io/src/TBufferFile.cxx:3648; #30 0xe41e2ac5 in TNtuple::Streamer (this=0x58ac5e90, b=...) at /bui",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15738:4432,optimiz,optimized,4432,https://root.cern,https://github.com/root-project/root/issues/15738,1,['optimiz'],['optimized']
Performance,"0x7f133827b950, fd=33) at ../sysdeps/unix/sysv/linux/read.c:26; 18 Thread 0x7f132a120640 (LWP 34585) ""python"" __futex_abstimed_wait_common64 (private=0, cancel=true, abstime=0x7f132a11f330, op=137, ; expected=0, futex_word=0x7f1370d85acc <_PyRuntime+428>) at futex-internal.c:57; 19 Thread 0x7f132991f640 (LWP 34586) ""python"" __GI___libc_read (nbytes=4, buf=0x7f13382bf140, fd=31) at ../sysdeps/unix/sysv/linux/read.c:26; 20 Thread 0x7f132911e640 (LWP 34587) ""python"" __futex_abstimed_wait_common64 (private=<optimized out>, cancel=true, abstime=0x0, op=393, ; expected=0, futex_word=0x562911e622b0) at futex-internal.c:57; * 21 Thread 0x7f131ad44640 (LWP 34739) ""python"" 0x00007f1332cbafdc in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const () from /home/vpadulan/programs/rootproject/rootbuild/master-distrdf-debug/lib/libCling.so; ```. The two most interesting ones are threads `1` and `21`:; Thread1; ```; #6 std::__condvar::wait (__m=..., this=<optimized out>); at /usr/src/debug/gcc-12.2.1-2.fc36.x86_64/obj-x86_64-redhat-linux/x86_64-redhat-linux/libstdc++-v3/include/bits/std_mutex.h:155; #7 std::condition_variable::wait (this=<optimized out>, __lock=...) at ../../../../../libstdc++-v3/src/c++11/condition_variable.cc:41; #8 0x00007f133726f0aa in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex> > (this=0x7f1310200730, __lock=...); at /usr/include/c++/12/condition_variable:312; #9 0x00007f133726df05 in std::_V2::condition_variable_any::wait<std::unique_lock<std::mutex>, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock()::{lambda()#1}) (this=0x7f1310200730, __lock=..., __p=...) at /usr/include/c++/12/condition_variable:321; #10 0x00007f1337269c3e in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::WriteLock (this=0x7f13102006f8); at",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11515:7617,optimiz,optimized,7617,https://root.cern,https://github.com/root-project/root/issues/11515,1,['optimiz'],['optimized']
Performance,"0x8c0fb0) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:345; #1 0x00007fffeebc7899 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffcb00) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:111; #2 0x00007fffeebc785e in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffcb00, __in_chrg=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/Interpreter.cpp:106; #3 0x00007fffeebeb659 in cling::LookupHelper::findScope (this=0x4a9dd0, className=..., diagOnOff=cling::LookupHelper::NoDiagnostics, resultType=0x7fffffffcd08, instantiateTemplate=false); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/interpreter/cling/lib/Interpreter/LookupHelper.cpp:466; #4 0x00007fffeeabe0df in TCling::CheckClassInfo (this=0x4a0550, name=<optimized out>, autoload=<optimized out>, isClassOrNamespaceOnly=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/metacling/src/TCling.cxx:3630; #5 0x00007ffff7c3040d in TClass::Init (this=this@entry=0xdafd20, name=name@entry=0x7ffff7cb7638 ""TGlobal"", cversion=cversion@entry=2, typeinfo=typeinfo@entry=0x7ffff7d8b6d8 <typeinfo for TGlobal>, isa=isa@entry=0x477430,; dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"", ifil=<optimized out>, dl=<optimized out>, il=<optimized out>, givenInfo=<optimized out>, silent=<optimized out>); at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1431; #6 0x00007ffff7c3a1b8 in TClass::TClass (this=0xdafd20, name=0x7ffff7cb7638 ""TGlobal"", cversion=<optimized out>, info=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",; ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273; #7 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:2795,optimiz,optimized,2795,https://root.cern,https://github.com/root-project/root/pull/2776,6,['optimiz'],['optimized']
Performance,"0xbea650) at Python/ceval.c:888; #4 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:1404; #5 0x00007faec08360ab in _PyEval_EvalFrame (throwflag=0x0, f=Frame 0x7faec0dc69a0, for file /afs/desy.de/user/d/dudarboh/analysis/misc/test.py, line 9, in test_function (test=<CPyCppyy_NoneType at remote 0x7faea81d14c0>), tstate=0xbea650) at ./Include/internal/pycore_ceval.h:40; #6 function_code_fastcall (tstate=0xbea650, co=<optimized out>, args=<optimized out>, nargs=0x0, globals=<optimized out>) at Objects/call.c:330; #7 0x00007faec083c713 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0xca6100, callable=<function at remote 0x7faec0e64550>, tstate=0xbea650) at ./Include/cpython/abstract.h:118; #8 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0xca6100, callable=<function at remote 0x7faec0e64550>) at ./Include/cpython/abstract.h:127; #9 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0xbea650) at Python/ceval.c:5077; #10 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3520; #11 0x00007faec096bb0e in _PyEval_EvalFrame (throwflag=0x0, f=Frame 0xca5f90, for file /afs/desy.de/user/d/dudarboh/analysis/misc/test.py, line 12, in <module> (), tstate=0xbea650) at ./Include/internal/pycore_ceval.h:40; #12 _PyEval_EvalCode (tstate=0xbea650, _co=_co; entry=<code at remote 0x7faec0dc55b0>, globals=globals; entry={'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <SourceFileLoader(name='__main__', path='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py') at remote 0x7faec0f08c10>, '__spec__': None, '__annotations__': {}, '__builtins__': <module at remote 0x7faec0ef4860>, '__file__': '/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', '__cached__': None, 'ROOT': <ROOTFacade(__name__='ROOT', __doc__=None, __package__=None, __loader__=None, __spec__=Non",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:19826,optimiz,optimized,19826,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,1,['optimiz'],['optimized']
Performance,"0xe300cb40 (LWP 117255) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 2 (Thread 0xe320db40 (LWP 117254) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf69239bb in syscall () from /lib/libc.so.6; #2 0xf7338c73 in tbb::internal::rml::private_worker::thread_routine(void*) () from /lib/libtbb.so.2; #3 0xf689f47d in start_thread () from /lib/libc.so.6; #4 0xf6927d6c in clone3 () from /lib/libc.so.6; Thread 1 (Thread 0xf73179c0 (LWP 117207) ""ntuple_extended""):; #0 0xf7ef1559 in __kernel_vsyscall (); #1 0xf68e3e1a in __wait4_time64 () from /lib/libc.so.6; #2 0xf68e3c3a in waitpid () from /lib/libc.so.6; #3 0xf6862810 in do_system () from /lib/libc.so.6; #4 0xf70c9ebb in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x565f30c0) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #5 TUnixSystem::StackTrace (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #6 0xf6f77e71 in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/base/src/TErrorDefaultHandler.cxx:177; #7 0xf70489cc in ErrorHandler (level=6000, location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"", ap=0xffde8958 ""\304\305\352\367R"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:153; #8 0xf704919a in Fatal (location=0xf7eba607 """", fmt=0xf71600ac ""%s violated at line %d of `%s'"") at /builddir/build/BUILD/root-6.28.00/core/foundation/src/TError.cxx:251; #9 0xf7e04248 in ROOT::Experimental::Detail::RColumn::Flush (this=0x652beb90) at /builddir/build/BUILD/root-6.28.00/tree/ntuple/v7/src/RColumn.cxx:82; #10 0xf7e0a1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12427:9245,optimiz,optimized,9245,https://root.cern,https://github.com/root-project/root/issues/12427,1,['optimiz'],['optimized']
Performance,"1%) 0.2021 ( 2.1%) Simple Register Coalescing; 0.1759 ( 1.9%) 0.0000 ( 0.0%) 0.1759 ( 1.8%) 0.1761 ( 1.8%) Live Variable Analysis; 0.1414 ( 1.5%) 0.0000 ( 0.0%) 0.1414 ( 1.5%) 0.1416 ( 1.5%) Combine redundant instructions #6; 0.1413 ( 1.5%) 0.0000 ( 0.0%) 0.1413 ( 1.5%) 0.1415 ( 1.5%) Combine redundant instructions #7; 0.1411 ( 1.5%) 0.0000 ( 0.0%) 0.1411 ( 1.5%) 0.1413 ( 1.5%) Combine redundant instructions #4; 0.1410 ( 1.5%) 0.0000 ( 0.0%) 0.1410 ( 1.5%) 0.1412 ( 1.5%) Combine redundant instructions #3; 0.1408 ( 1.5%) 0.0000 ( 0.0%) 0.1408 ( 1.5%) 0.1410 ( 1.5%) Combine redundant instructions #5; 0.1406 ( 1.5%) 0.0000 ( 0.0%) 0.1406 ( 1.5%) 0.1407 ( 1.5%) Combine redundant instructions #2; 0.1359 ( 1.5%) 0.0000 ( 0.0%) 0.1359 ( 1.4%) 0.1360 ( 1.4%) Branch Probability Basic Block Placement; 0.1342 ( 1.4%) 0.0000 ( 0.0%) 0.1342 ( 1.4%) 0.1343 ( 1.4%) Machine Common Subexpression Elimination; 0.1065 ( 1.1%) 0.0000 ( 0.0%) 0.1065 ( 1.1%) 0.1066 ( 1.1%) MemCpy Optimization; ```; -> mostly register allocation and `instcombine`. A similar picture for `jitted_code.cpp`:; ```; 8.6377 ( 81.7%) 0.0066 ( 0.7%) 8.6444 ( 75.4%) 8.6522 ( 75.4%) Fast Register Allocator; 0.7586 ( 7.2%) 0.7869 ( 87.4%) 1.5455 ( 13.5%) 1.5470 ( 13.5%) X86 Assembly Printer; 0.5620 ( 5.3%) 0.0794 ( 8.8%) 0.6414 ( 5.6%) 0.6424 ( 5.6%) X86 DAG->DAG Instruction Selection; 0.1600 ( 1.5%) 0.0031 ( 0.3%) 0.1632 ( 1.4%) 0.1633 ( 1.4%) Prologue/Epilogue Insertion & Frame Finalization; 0.1125 ( 1.1%) 0.0071 ( 0.8%) 0.1195 ( 1.0%) 0.1197 ( 1.0%) Two-Address instruction pass; ```; for `-O0`, while for `-O1`:; ```; 115.8049 ( 89.6%) 0.0191 ( 2.1%) 115.8240 ( 89.0%) 115.9569 ( 89.0%) Combine redundant instructions; 4.2064 ( 3.3%) 0.1518 ( 16.6%) 4.3582 ( 3.3%) 4.3642 ( 3.3%) X86 DAG->DAG Instruction Selection; 0.5607 ( 0.4%) 0.5501 ( 60.0%) 1.1108 ( 0.9%) 1.1122 ( 0.9%) X86 Assembly Printer; 0.8415 ( 0.7%) 0.0053 ( 0.6%) 0.8468 ( 0.7%) 0.8477 ( 0.7%) Machine Instruction Scheduler; 0.7902 ( 0.6%) 0.0112 ( 1.2%) 0.8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-976463242:2454,Optimiz,Optimization,2454,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-976463242,1,['Optimiz'],['Optimization']
Performance,1&field1=buildname/string&compare1=65&value1=PR-5806-ROOT-fedora31-noimt&date=2020-06-06).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85593/console).; ### Failing tests:; - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execMergeMulti](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85593/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execMergeMulti/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_simpleWriteRead](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85593/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_simpleWriteRead/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85593/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_examples](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85593/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_examples/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data2_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85593/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data2_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data1_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85593/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data1_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_escapedQuotesRootmapGen](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/85593/testReport/projec,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5806#issuecomment-639861622:1154,load,load,1154,https://root.cern,https://github.com/root-project/root/pull/5806#issuecomment-639861622,1,['load'],['load']
Performance,1) Match only the custom columns of the node and not all when using regexpressions; 2) Prompt an understandable compile time error in case a cache of columns the type of which is non copyable is requested; 3) Test the ability of the data source to serve non copyable items,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1078:141,cache,cache,141,https://root.cern,https://github.com/root-project/root/pull/1078,1,['cache'],['cache']
Performance,"1, i8* getelementptr inbounds ([249 x i8], [249 x i8]* @1, i64 0, i64 0), i8* null }, section "".nvFatBinSegment"", align 8; @__cuda_gpubin_handle = available_externally dso_local global i8** null, align 8. ; Function Attrs: noinline norecurse uwtable; define dso_local void @_Z22__device_stub__kernel2v() #0 {; %1 = alloca %struct.dim3.191, align 8; %2 = alloca %struct.dim3.191, align 8; %3 = alloca i64, align 8; %4 = alloca i8*, align 8; %5 = alloca { i64, i32 }, align 8; %6 = alloca { i64, i32 }, align 8; %7 = alloca i8*, i64 1, align 16; %8 = call i32 @__cudaPopCallConfiguration(%struct.dim3.191* %1, %struct.dim3.191* %2, i64* %3, i8** %4); %9 = load i64, i64* %3, align 8; %10 = load i8*, i8** %4, align 8; %11 = bitcast { i64, i32 }* %5 to i8*; %12 = bitcast %struct.dim3.191* %1 to i8*; call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false); %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 0; %14 = load i64, i64* %13, align 8; %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 1; %16 = load i32, i32* %15, align 8; %17 = bitcast { i64, i32 }* %6 to i8*; %18 = bitcast %struct.dim3.191* %2 to i8*; call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false); %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0; %20 = load i64, i64* %19, align 8; %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1; %22 = load i32, i32* %21, align 8; %23 = bitcast i8* %10 to %struct.CUstream_st.192*; %24 = call i32 @cudaLaunchKernel(i8* bitcast (void ()* @_Z22__device_stub__kernel2v to i8*), i64 %14, i32 %16, i64 %20, i32 %22, i8** %7, i64 %9, %struct.CUstream_st.192* %23); br label %25. 25: ; preds = %0; ret void; }. declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3.191*, %struct.dim3.191*, i64*, i8**). declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st.192*). ; Function Attrs: argme",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1156850209:8691,load,load,8691,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1156850209,2,['load'],['load']
Performance,"1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 3, offset= 56, len=1, method=0; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: ====>Rebuilding TStreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version: 1; [1965517:tpc-tracker]:; [1965517:tpc-tracker]: StreamerInfo for class: o2::tpc::CalArray<o2::tpc::PadFlags>, version=1, checksum=0xb03d18c2; [1965517:tpc-tracker]: string mName offset= 0 type=300 ,stl=365, ctype=365,; [1965517:tpc-tracker]: vector<o2::tpc::PadFlags> mData offset= 32 type=300 ,stl=1, ctype=3, calibration data; [1965517:tpc-tracker]: o2::tpc::PadSubset mPadSubset offset= 56 type= 3 Subset type; [1965517:tpc-tracker]: int mPadSubsetNumber offset= 60 type= 3 Number of the pad subset, e.g. ROC 0 is IROC A00; [1965517:tpc-tracker]: i= 0, mName type=300, offset= 0, len=1, method=0; [1965517:tpc-tracker]: i= 1, mData type=300, offset= 32, len=1, method=0; [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]; [1965517:tpc-tracker]: ==1965517== Invalid write of size 1; [1965517:tpc-tracker]: ==1965517== at 0xF36E7A0: frombuf (Bytes.h:313); [1965517:tpc-tracker]: ==1965517== by 0xF36E7A0: frombuf (Bytes.h:442); [1965517:tpc-tracker]: ==1965517== by 0xF36E7A0: ReadFastArray (TBufferFile.cxx:1338); [1965517:tpc-tracker]: ==1965517== by 0xF36E7A0: TBufferFile::ReadFastArray(int*, int) (TBufferFile.cxx:1327); [1965517:tpc-tracker]: ==1965517== by 0xF3E580B: void TGenCollectionStreamer::ReadBufferVectorPrimitives<int>(TBuffer&, void*, TClass const*) (TGenCollectionStreamer.cxx:1183); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: Streamer (TClass.h:614); [1965517:tpc-tracker]: ==1965517== by 0xF36EC7B: TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) (TBufferFile.cxx:1616); [1965517:tpc-tracker]: ==1965517== by 0xF58C84B: int TStreamerInfo::ReadBuffer<char**>(TBuffer&, char** const&, TStreame",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312:3269,optimiz,optimized,3269,https://root.cern,https://github.com/root-project/root/issues/16312,1,['optimiz'],['optimized']
Performance,1. Add several extra classes and code to implement full-functional `TWebCanvas`; Functionality disabled by default - one has to set `WebGui.FullCanvas: 1` in rootrc file. 2. Provide `qt5web` tutorial which shows how any ROOT web-based widget can be embed into Qt5-based application.; As demo `RCanvas` and `TWebCanvas` are used. One probably can add more widgets like geometry viewer or `RBrowser`. 3. Provide possibility to use RCanvas without openui5 case - useful exactly for such case when pure graphics should be embed.; But even without ui5 for canvas itself one still can optionally use GED - ; in this case ui5 only loaded on demand and used only for GED.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7036:624,load,loaded,624,https://root.cern,https://github.com/root-project/root/pull/7036,1,['load'],['loaded']
Performance,1. Adjust several tutorials from `graphics` folder to work with TWebCanvas; 2. Optimize openui5-based code - avoid direct import of JSROOT modules; 3. Fix zooming update problem on lego plots; 4. Fix GED visibility update problem,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11737:79,Optimiz,Optimize,79,https://root.cern,https://github.com/root-project/root/pull/11737,1,['Optimiz'],['Optimize']
Performance,1. Detect OpenSSL version and activate v1.1 API when required; 2. Do not let load ssl libraries by civetweb - they already linked to libRHTTP.so; 3. Suppress compiler warnings in civetweb.c; 4. Use upper case for OPENSSL_VERSION variable - same as in standard FindOpenSSL.cmake script,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1836:77,load,load,77,https://root.cern,https://github.com/root-project/root/pull/1836,1,['load'],['load']
Performance,"1. Fix - TGraph Y range selection, do not cross 0; 2. Fix - correctly handle `#font[id]` in latex; 3. Fix - store canvas with embed geometry drawing; 4. Fix - upgrade rollup and exclude import.meta polyfill; 5. Fix - correctly handle in I/O empty std::map; 6. Fix - reading of small (<1KB) ROOT files; 7. Fix - race condition in zstd initialization #318",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16561:311,race condition,race condition,311,https://root.cern,https://github.com/root-project/root/pull/16561,1,['race condition'],['race condition']
Performance,"1. Fix problem with fragmented websocket messages - some browsers can split messages on 120KB chunks. Now message merged together before delivered to the user.; 2. Solve problem with Google Chrome run in headless mode. ; Now chrome browser can run in headless mode without any special debugging flags, which opens some http ports. Now THttpServer provides special ""dummy"" script, which timedout until batch job is not finished.; 3. Try to correctly handle situation when browser hangs and does not reply for a long time. After pre-configured timeout (default 50 sec) such browser application will be closed.; 4. Let identify connecting websocket at the very beginning - with the first connect request. Allows to reject not allowed connection. Also for the future simplifies re-connection.; 5. In TWebWindow clearly identify batch job connection, let reuse if for consequent jobs, close it after 20 sec of idle time; 6. Use std::recursive_mutex in WebWindowsManager to protect methods which creates THttpServer / creates new window / starts new web browser. Comment out special manager guard - useless without special threading functionality; 7. Correspondent changes in JSROOT. ; 8. Special handling of 2d/3d canvas when producing PNG images - now is more consistent, no need to use THREE.SVGRenderer for that; 9. Add canvas size to the RPadDisplayItem class, used only in batch mode to configure image size; 10. Use workaround with static mutex to protect I/O in canvas painter in multi-threaded environment.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2603:1482,multi-thread,multi-threaded,1482,https://root.cern,https://github.com/root-project/root/pull/2603,1,['multi-thread'],['multi-threaded']
Performance,"1. Get information for client (`Browsable::RItem` instance) directly from `Browsable::RElement`. This unifies handling of different classes in browser; before one uses extra logic to guess class functionality without creating of dedicated `Browsable::RElement` instance; 2. Fix problem with `TObject`-derived classes where `TObject` is not direct parent - like `TQClass`. Improve browsing of top ROOT folder.; 3. Provide in `RBrowser` size/modification time information for `TKey`/`TFile` instances; 4. Significantly improve `RTreeViewer` functionality. Better handle special branches like `@size`. Double-click on branch element either involves `TTree::Draw` or add proposed expression to tree viewer. Handle special symbols in branch names like `\` or `#`.; 5. Fix several bugs in usage of `GED` inside canvas. After JSROOT v7 loading of custom code is more tricky, therefore it is better to load it directly from JSROOT components - not try to select some parts from outside.; 6. Fix several bugs in JSROOT (see changelog)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11618:829,load,loading,829,https://root.cern,https://github.com/root-project/root/pull/11618,2,['load'],"['load', 'loading']"
Performance,"1. Improve/fix problems with TKey/TDirectory handling.; In some cases objects were deleted, but still used in RBrowsable classes; 2. Fix bug with RBrowsable cache usage. ; Logic was not working when more than 1 levels of sub-directories in the TFile was there; 3. Empty RBrowser cache when top-level path is reloaded. Avoids holding of too many objects which are no longer used",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8101:157,cache,cache,157,https://root.cern,https://github.com/root-project/root/pull/8101,2,['cache'],['cache']
Performance,"1. Improve/fix problems with TKey/TDirectory handling.; In some cases objects were deleted, but still used in RBrowsable classes; 2. Fix bug with RBrowsable cache usage. ; Logic was not working when more than 1 levels of sub-directories in the TFile was there; 3. Fix statbox handling for empty histograms in JSROOT",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8100:157,cache,cache,157,https://root.cern,https://github.com/root-project/root/pull/8100,1,['cache'],['cache']
Performance,"1. Introduce central class registry in `RBrowsable` classes. It is the place which describes how class can be handled. Let avoid hardcoded class names in many other places of RBrowser. Registry also includes icons.; 2. Introduce internal `RBrowsable` objects cache. When any object read from the file, it preserved in the cache and provided again if same path is requested from browser. ; 3. Define/handle `actions` for `Browsable::RElement` class. Actions are: draw, browse, edit, image, .... Action are handled with double click on the browser item. Now when image is clicked, it automatically displayed in the image viewer.; 4. When object clicked with CodeEditor active - JSON will be shown for the object.; 5. Handle `CodeEditor` and `ImageViewer` content on server side. When web browser is reloaded, all correspondent tabs are recreated properly; 6. Update openui5 tarball - include missing CodeEditor snippets; 7. Lots of layout and code improvements in the RBrowser client-side.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7074:259,cache,cache,259,https://root.cern,https://github.com/root-project/root/pull/7074,2,['cache'],['cache']
Performance,"1. Let load and directly draw `TGeoVolume` object in geometry viewer - disregard of `TGeoManager` state; 2. Let draw `TGeoVolumeAssembly` from `RBrowser`; 3. Functionality to produce JSON from geometry viewer data, such JSON can be used on JSROOT for three.js model generation; 4. Update JSROOT; 5. Remove dependency from EVE7 components in geometry viewer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11449:7,load,load,7,https://root.cern,https://github.com/root-project/root/pull/11449,1,['load'],['load']
Performance,"1. Let run batch job without creating temporary HTML files. File content preserved in memory and just loaded directly into browser.; - in CEF one need special resource handler; - in QWebEngine HTML code can be directly loaded into browser; 2. Support PDF file creation in CEF and QWebEngine; 3. Simplify custom http handling in CEF, no need to use custom scheme handler singleton. Now many THttpServer instances can be used with CEF.; 4. Update JSROOT with latest fixes",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6275:102,load,loaded,102,https://root.cern,https://github.com/root-project/root/pull/6275,2,['load'],['loaded']
Performance,"1. Let use ""static"" folder correctly in `jupyter lab`; 2. If local JSROOT not found, correctly load remote version; 3. Let use produced notebooks in nbviewer; 4. Includes JSROOT bugfix",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8544:95,load,load,95,https://root.cern,https://github.com/root-project/root/pull/8544,1,['load'],['load']
Performance,"1. Move all JS/CSS files to `js/mva/` folder which can be accessed via `/static/mva/` URL from Jupyter Notebook. This allows to use JsMVA code directly from ROOT without need to rely on `https://root.cern/js/jsmva/latest` ; 2. Remove minified scripts - no real gain in performance, only extra step in deployment; 3. Adjust `JsMVA.js` code to JSROOT v7. Use bundle provided in `build/jsroot.js`. ; 4. Adjust `OutputTransformer.py` to work with python3, probably other scripts should be improved as well; 5. Adjust `NetworkDesigner.js` to use d3 v6, load d3 from external source. Still to do: ; 1. Fix more problems with `python3` - see attached image from my notebook; ![python3_error](https://user-images.githubusercontent.com/4936580/225002768-225789c5-6638-43eb-8bbc-9f3397a8fd17.png); 2. Fix `NeuralNetwork.js` to be usable with latest d3.js. I need working example for it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12484:269,perform,performance,269,https://root.cern,https://github.com/root-project/root/pull/12484,2,"['load', 'perform']","['load', 'performance']"
Performance,"1. Process active pad `TExec` when pad click/mouse move event is produced. JSROOT client deliver such events only when execs are configured. Good example is `hist/DynamicSlice.C` tutorial; 2. Process `TExec` from histogram list of functions. Here execs processed when client confirms drawing and returns applied ranges. Working example is `hist/htproj.C` tutorial; 3. Analyze modification of sub-pads, only data for modified pads send to the client. Improve performance when canvas with many sub-pads, but only few of them are modified. Good example is `hist/tprofile2polyRealistic.C` tutorial, which currently working very slow. ; 4. Optimize server/client communication. If canvas marked modified without real change of data, no extra message will be send to client. Also allows break self-triggered Modify/Update loops with `TExec` ; 5. Adjust several `TExec` tutorials.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11727:458,perform,performance,458,https://root.cern,https://github.com/root-project/root/pull/11727,2,"['Optimiz', 'perform']","['Optimize', 'performance']"
Performance,"1. Shrink sealed page in `RPageSinkBuf`, https://github.com/root-project/root/issues/16752; 2. Free uncompressed page after compression, https://github.com/root-project/root/issues/16753; 3. Delay buffer allocation in `RPageSinkBuf`. For the non-IMT case, the memory overhead is reduced to around the zipped cluster size. With parallel compression using IMT, all uncompressed pages need to be buffered first. The actual memory overhead is a function of how quickly these are consumed in the background (the slower, the later they are freed after compression) on the one hand and on the other hand how many tasks are running concurrently (each of them needs a temporary compression buffer). Closes #16752, closes #16753",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16781:624,concurren,concurrently,624,https://root.cern,https://github.com/root-project/root/pull/16781,1,['concurren'],['concurrently']
Performance,"1. Support `TBox`, `TLatex`, `TLine`, `TMarker` drawing on ""frame"", support drawing on swapped axes; 2. Improve performance of TH3/RH3 drawing by using THREE.InstancedMesh; 3. Implement batch mode with '&batch' URL parameter to create SVG/PNG images with default GUI; 4. Adjust node.js implementation to produce identical output with normal browser; 5. Create necessary infrastructure for testing with 'puppeteer'; 6. Support inject of ES6 modules via '&inject=path.mjs'; 7. Using importmap for 'jsroot' in all major HTML files and in demos; 8. Implement `settings.CutAxisLabels` flag to remove labels which may exceed graphical range; 9. Let save canvas as JSON file from context menu, object as JSON from inspector; 10. Upgrade three.js r162 -> r168, use r162 only in node.js because of ""gl"" module; 11. Create unified svg2pdf/jspdf ES6 module, works both in browsers and node.js; 12. Internals - upgrade to eslint 9; 13. Fix - correctly handle in I/O empty std::map; 14. Fix - reading of small (<1KB) ROOT files; 15. Fix - race condition in zstd initialization [#318](https://github.com/root-project/jsroot/issues/318); 16. Fix - deployment with zstd [#317](https://github.com/root-project/jsroot/issues/317); 17. Remove unused md5.mjs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16416:112,perform,performance,112,https://root.cern,https://github.com/root-project/root/pull/16416,2,"['perform', 'race condition']","['performance', 'race condition']"
Performance,1. Support drawing of `TGeoVolume`; 2. Correctly browse and draw `TBranchBrowsable` object (appears when browsing TBranch); 3. Provide title for items in the RBrowser ; 4. Load RCanvas/TCanvas code on client side only when required; 5. Several API adjustments in `RBrowsable`,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7135:172,Load,Load,172,https://root.cern,https://github.com/root-project/root/pull/7135,1,['Load'],['Load']
Performance,"1. Support web-based geometry viewer. When clicking TGeoManager from the file, new tab with geometry viewer will be shown; 2. Make RBrowserWidget class - entity to handle different views in modular way; - RCanvas; - TCanvas; - Geometry viewer; - Code editor; - Image viewer; 3. Functionality of each RBrowserWidget loaded only when required. When RBrowser started neither TCanvas nor RCanvas is loaded. Only when any object is clicked, small internal plugin is loaded and canvas is instantiated. Same with geometry viewer.; 4. Small JSROOT optimization for generic embeding of web widgets; 5. Always handle mouse double-click on server side. Only `RBrowsable` class can provide necessary information that is the best way to handle double-click. It either display object in current editor/viewer/canvas or will start new widget.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7088:315,load,loaded,315,https://root.cern,https://github.com/root-project/root/pull/7088,4,"['load', 'optimiz']","['loaded', 'optimization']"
Performance,"1. Use scalable line width for all 'above' symbols like `#check` or `#vector` or `#slash`. Line width is at least as much as configured for TLatex before.; 2. Fix position of `#grave` and `#acute` symbols; 3. Use small filled rectangle to draw `#dot` and `#ddot` symbols, otherwise short lines appeared when scaled up; 4. ~~Use polyline for `#tilde` instead of workaround with special tilde symbols scaling which was inperfectly placed.~~ Unfortunately, on such small pixels size poly line drawing works not nice, therefore I removed new tilde rendering for now. Here small macro which was used for testing:; ```; void latex() {; TCanvas *c1 = new TCanvas(""c1"",""test"",1600,400);; TLatex l;; l.SetTextAlign(12);; l.SetTextSize(0.8);; l.DrawLatex(0.01,0.5,""#hat{b}#dot{b}#ddot{c}#grave{A}#acute{f}#slash{m}#tilde{x}#check{U}"");; }; ```. Here is old output:; ![c1](https://github.com/root-project/root/assets/4936580/fdcf76dd-7009-40d2-9b14-2399c36242e0). Here is new output:; ![c1](https://github.com/root-project/root/assets/4936580/0e9ace65-f632-45fc-a9e9-da5f9854aebd). Also similar latex with normal size 0.07:; ![latex_old](https://github.com/root-project/root/assets/4936580/fcd982af-eada-4c75-bd02-74528c1e68b3); ![latex_new](https://github.com/root-project/root/assets/4936580/01b1c97a-b2d4-4081-9a98-9fb52dd8c2a2)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14045:7,scalab,scalable,7,https://root.cern,https://github.com/root-project/root/pull/14045,1,['scalab'],['scalable']
Performance,"1. When `root --web=off` started, do not try to load `libROOTWebGUI`; 2. Switch back to default `TBrowser` implementation; 3. Prevent `RWebWindow::Show` and starting correspondent `THttpServer`; 4. Fix problem with newest chromium 95 - `--app` no longer work with incognito mode; 5. Update JSROOT with fully redesigned TLatex parser",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9249:48,load,load,48,https://root.cern,https://github.com/root-project/root/pull/9249,1,['load'],['load']
Performance,"1. With the CEF instead of http/https local scheme handler is used. Means, THttpServer used without opening real HTTP port. ; 2. Use provided CEF messaging for direct communication between ROOT application and JS code. This channel if bidirectional and replaces websocket, used with normal browser. Longpoll remains as fallback solution.; 3. Enable batch mode with the CEF. When root started with ""root -b"" flag, rendering performed in memory - no any window is created. Not really clear which graphical libraries required - seems to be Xorg is still need to be linked. ; 4. First draft for Canvas::SaveAs() method for image creation. Both SVG and PNG are supported, several others (BMP/JPEG) can be provided. Worked in the same way for batch and gui mode. ; 5. draw_v6.cxx macro from tutorial works both in gui and batch mode and show usage of new Canvas::SaveAs() method",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/797:423,perform,performed,423,https://root.cern,https://github.com/root-project/root/pull/797,1,['perform'],['performed']
Performance,"1. `libceleritas_root.so` doesn't exist anymore, I think that's now `libceleritas_io.so` since https://github.com/celeritas-project/celeritas/commit/4bafeac9f78bf4800d59c79b38f9be86e12e37f7; 2. Both of them load just fine in a PowerPC build of ROOT.; 3. When trying to run `app/loop-demo` with `testem3-flat.root`, I get (both on x86 and PowerPC); ```; Error in <TObjArray::At>: index 100 out of bounds (size: 100, this: 0x179fb60); ```. Since I didn't get a reply within a week to my first comment above, I'm going to remove the priority label.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1079004541:207,load,load,207,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1079004541,1,['load'],['load']
Performance,1.0~dev; -- Cling will look for C++ headers in '/usr/include/c++/9:/usr/include/x86_64-linux-gnu/c++/9:/usr/include/c++/9/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-9'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Failed; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview; -- Performing Test found_stdexpstringview - Success; -- Performing Test found_stod_stringview; -- Performing Test found_stod_stringview - Failed; -- Performing Test found_opplusequal_stringview; -- Performing Test found_opplusequal_stringview - Failed; -- Performing Test found_stdapply; -- Performing Test found_stdapply - Failed; -- Performing Test found_stdinvoke; -- Performing Test found_stdinvoke - Failed; -- Performing Test found_stdindexsequence; -- Performing Test found_stdindexsequence - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /home/ubuntu/git/root/build/unix/compiledata.sh; Making /home/ubuntu/git/root/builddir/ginclude/compiledata.h; -- ROOT Configuration. System Linux-5.4.0-139-generic; Processor 16 core Inte,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1504751163:5833,Perform,Performing,5833,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1504751163,32,['Perform'],['Performing']
Performance,"1.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:28932,optimiz,optimized,28932,https://root.cern,https://github.com/root-project/root/issues/15970,1,['optimiz'],['optimized']
Performance,1/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37811/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37811/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37811/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37811/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37811/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_4/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37811/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37811/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37811/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/). And 84 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414969010:2358,cache,cache,2358,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414969010,2,['cache'],['cache']
Performance,"10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/cond",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:6615,optimiz,optimized,6615,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #5 0x00007f586584fb23 in ErrorHandler () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #6 0x00007f58657aa2cc in TObject::Warning(char const*, char const*, ...) const () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #7 0x00007f584695be33 in TCling::ReadRootmapFile(char const*, TCling::TUniqueString*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so); #8 0x00007f5846990471 in TCling::LoadLibraryMap(char const*) () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so); #9 0x00007f584699135f in TCling::Initialize() () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCling.so); #10 0x00007f586576cfdd in TROOT::InitInterpreter() () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so); #11 0x00007f586576d33f in ROOT::Internal::GetROOT2() () from /cvmfs/[cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd64_gcc10/lib/libCore.so](http://cms.cern.ch/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_4_8/external/slc7_amd6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11383:2064,Load,LoadLibraryMap,2064,https://root.cern,https://github.com/root-project/root/issues/11383,1,['Load'],['LoadLibraryMap']
Performance,1014/cxx17.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58544/console).; ### Failing tests:; - [projectroot.math.mathmore.test.mathmore_testChebyshev](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58544/testReport/projectroot.math.mathmore/test/mathmore_testChebyshev/); - [projectroot.math.mathmore.test.mathmore_testGSLIntegration](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58544/testReport/projectroot.math.mathmore/test/mathmore_testGSLIntegration/); - [projectroot.math.mathmore.test.gtest_math_mathmore_test_stressMathMoreUnit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58544/testReport/projectroot.math.mathmore/test/gtest_math_mathmore_test_stressMathMoreUnit/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_Activation_Functions_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58544/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_Activation_Functions_Cpu/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58544/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.python.cling.roottest_python_cling_class](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58544/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_LongRootls4](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58544/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_LongRootls4/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRootls1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/58544/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_WebRootls1/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_WebRoo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3763#issuecomment-488645001:1016,cache,cache,1016,https://root.cern,https://github.com/root-project/root/pull/3763#issuecomment-488645001,1,['cache'],['cache']
Performance,"1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #100 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f1095956658, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #101 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f1095a07900, callargs=0x7f1095956640, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #102 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:5376; #103 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012078, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #104 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594f560, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #105 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594f",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:24699,optimiz,optimized,24699,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,11.076Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:116:12: warning: 'OSAtomicAdd64Barrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_fetch_add() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T12:59:11.076Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:339:31: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T12:59:11.076Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:608:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T12:59:11.076Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T12:59:11.076Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T12:59:11.334Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 40 more. ### Failing tests:; - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159679/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1325057992:3360,load,load,3360,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1325057992,2,['load'],['load']
Performance,"11: note: Calling 'TMemFile::SysWriteImpl'; return SysWriteImpl(fd,buf,len);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:610:4: note: Taking false branch; if (fExternalData) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:8: note: Assuming the condition is false; if (fBlockList.fBuffer == 0) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:615:4: note: Taking false branch; if (fBlockList.fBuffer == 0) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:11: note: Assuming the condition is false; if (fBlockOffset+len <= fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:620:7: note: Taking false branch; if (fBlockOffset+len <= fBlockSeek->fSize) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:14: note: Assuming the condition is true; if (!fBlockSeek->fNext) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:636:10: note: Taking true branch; if (!fBlockSeek->fNext) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Calling 'TMemBlock::CreateNext'; fBlockSeek->CreateNext(fDefaultBlockSize);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Calling constructor for 'TMemBlock'; fNext = new TMemBlock(size,this);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:60:35: note: Null pointer value stored to field 'fBuffer'; fPrevious(previous), fNext(0), fBuffer(0), fSize(0); ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:8: note: Assuming the condition is false; if (size != -1) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:63:4: note: Taking false branch; if (size != -1) {; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:90:16: note: Returning from constructor for 'TMemBlock'; fNext = new TMemBlock(size,this);; ^; /home/performance-test/src_master/io/io/src/TMemFile.cxx:637:13: note: Returning from 'TMemBlock::CreateNext'; fBlockSeek->CreateNext(fDe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3891#issuecomment-502686211:6478,perform,performance-test,6478,https://root.cern,https://github.com/root-project/root/pull/3891#issuecomment-502686211,2,['perform'],['performance-test']
Performance,121; 35: Assuming 'gRotatedDebug' is 0 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 36: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 37: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1160; 38: expanded from macro 'DEBUG_PRINT4' in /opt/root_src/graf2d/x11/src/Rotated.cxx:99; 39: Assuming the condition is false in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 40: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1164; 41: Assuming 'i1' is non-null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 42: Left side of '&&' is true in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 43: Loop condition is false. Execution continues on line 1198 in /opt/root_src/graf2d/x11/src/Rotated.cxx:1171; 44: 'gFirstTextItem' is not equal to null in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 45: Taking false branch in /opt/root_src/graf2d/x11/src/Rotated.cxx:1198; 46: Access to field 'fNext' results in a dereference of a null pointer (loaded from variable 'last') in /opt/root_src/graf2d/x11/src/Rotated.cxx:1205; /opt/root_src/graf2d/x11/src/TGX11.cxx:2280:4: warning: Maybe you meant to call TVirtualX::SetLineColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:2385:4: warning: Maybe you meant to call TVirtualX::SetMarkerColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3119:4: warning: Maybe you meant to call TVirtualX::SetTextAlign() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/TGX11.cxx:3129:4: warning: Maybe you meant to call TVirtualX::SetTextColor() instead [clazy-skipped-base-method]; /opt/root_src/graf2d/x11/src/gifencode.c:246:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrU,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7432:95568,load,loaded,95568,https://root.cern,https://github.com/root-project/root/issues/7432,1,['load'],['loaded']
Performance,"123f0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #86 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594ee00, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #87 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594ee00, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #88 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594ee00, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #89 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRun",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:22722,optimiz,optimized,22722,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51075090, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #99 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #100 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa50ee45b0, globals=0x7ffa50ee0500, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #101 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa50ee0500, globals=0x7ffa50ee0500, source=0x7ffa50ee45b0) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #102 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #103 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa510c5cd8, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #104 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:18221,optimiz,optimized,18221,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"12788, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #68 _PyEval_Vector (kwnames=<optimized out>, argcount=2, args=0x7ffc2594e6a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #69 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e6a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #70 0x000055f908869d76 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=2, args=0x7ffc2594e6a0, callable=0x7f1095b4fce0, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_call.h:92; #71 object_vacall (tstate=0x55f908be5998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594e730) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #72 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #73 0x000055f90878fbff in import_find_and_load (abs_name=0x7f101f5dbd70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #74 PyImport_ImportModuleLevelObject (name=0x7f101f5ff730, globals=<optimized out>, locals=<optimized out>, fromlist=0x7f109593fb50, level=1) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #75 0x000055f90885d817 in import_name (level=0x55f908bbd348 <_PyRuntime+872>, fromlist=0x7f109593fb50, name=0x7f101f5ff730, frame=0x7f10960126e8, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #76 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #77 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f10960126e8, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:19207,optimiz,optimized,19207,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,12: warning: variable 'litLengthSum' set but not used [-Wunused-but-set-variable] ; - [2022-04-13T15:24:14.944Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4926:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-04-13T15:25:43.103Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:27:58.229Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:27:58.229Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:27:59.620Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:28:07.141Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/externals/Users/sftnight/build/jenkins/workspace/root-pullrequests-build/install/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:28:07.141Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/externals/Users/sftnight/build/jenkins/workspace/root-pullrequests-build/install/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:28:07.702,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10391#issuecomment-1098228197:1356,perform,performing,1356,https://root.cern,https://github.com/root-project/root/pull/10391#issuecomment-1098228197,1,['perform'],['performing']
Performance,"12c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/con",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:15872,optimiz,optimized,15872,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x109984c70, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:583; #15 0x00007fffa3050770 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x1099ceb50, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 0x00007fffa2f9fee4 in cling::Interpreter::compileFunction (this=0x10994ea90, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #17 0x00007fffa2efea78 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fffa2f067e8 in TClingCallFunc::make_ctor_wrapper (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1215; #19 0x00007fffa2f07164 in TClingCallFunc::ExecDefaultConstructor (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name="""", address=0x0, nary=0) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1895; #20 0x00007fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:433; #23 0x00007fffa8f0fa14 in TClass::New (this=<optimized out>, defConstructor=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:5392,optimiz,optimized,5392,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"14 0x00007f55cc6f98c4 in clang::ASTReader::ReadControlBlock(clang::serialization::ModuleFile&, llvm::SmallVectorImpl<clang::ASTReader::ImportedModule>&, clang::serialization::ModuleFile const*, unsigned int) () from /home/moneta/rootgit/root-build-debug/lib/libCling.so; #15 0x00007f55cc6fab74 in clang::ASTReader::ReadASTCore(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, clang::serialization::ModuleFile*, llvm::SmallVectorImpl<clang::ASTReader::ImportedModule>&, long, long, clang::ASTFileSignature, unsigned int) () from /home/moneta/rootgit/root-build-debug/lib/libCling.so; #16 0x00007f55cc73983b in clang::ASTReader::ReadAST(llvm::StringRef, clang::serialization::ModuleKind, clang::SourceLocation, unsigned int, llvm::SmallVectorImpl<clang::ASTReader::ImportedSubmodule>*) () from /home/moneta/rootgit/root-build-debug/lib/libCling.so; #17 0x00007f55cc489440 in clang::CompilerInstance::loadModule(clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >, clang::Module::NameVisibilityKind, bool) () from /home/moneta/rootgit/root-build-debug/lib/libCling.so; #18 0x00007f55cc91b69c in clang::Sema::ActOnModuleImport(clang::SourceLocation, clang::SourceLocation, llvm::ArrayRef<std::pair<clang::IdentifierInfo*, clang::SourceLocation> >) () from /home/moneta/rootgit/root-build-debug/lib/libCling.so; #19 0x00007f55cbf9f82d in cling::Interpreter::loadModule(clang::Module*, bool) () from /home/moneta/rootgit/root-build-debug/lib/libCling.so; #20 0x00007f55cbdc07b8 in LoadModule (ModuleName=""Genetic"", interp=...) at /home/moneta/rootgit/root/core/metacling/src/TCling.cxx:1053; #21 0x00007f55cbdc1d4b in RegisterCxxModules (clingInterp=...) at /home/moneta/rootgit/root/core/metacling/src/TCling.cxx:1294; #22 0x00007f55cbdc4238 in TCling::TCling (this=0x560a89be2100, name=0x7f55ce7c1596 ""C++"", title=0x7f55ce7c1580 ""cling C++ Interpreter"", argv=0x7ffff97ab630) at /home/moneta/rootgit/root/core/metacling/src/TCling.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6999#issuecomment-756878096:3941,load,loadModule,3941,https://root.cern,https://github.com/root-project/root/pull/6999#issuecomment-756878096,2,['load'],['loadModule']
Performance,"14.10.1.2; See ""; Performance Benchmarks""; \- redundant newline; 14.10.2; If you are creating a branch with an object and in general you want the data members to be split, but you want to exempt a data member from the split. You can specify this in the comment field of the data member:; \- When you create a branch with an object, in general you want the data members to be split. But if you want to exempt a data member from the split, you can specify this in the comment field of the data member:; 14.12; the entry in the collection becomes in turn top level branches, etc.; \- a top level branch; IMPORTANT NOTE1: This function should not be called if splitlevel<1. IMPORTANT NOTE2:; \- reconsider formatting.; 14.14.1.1 Creating Branches with A single Variable; \- a single variable; 14.14.1.2; the number of existing entries is null.; \- is zero.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7284#issuecomment-785791789:18,Perform,Performance,18,https://root.cern,https://github.com/root-project/root/issues/7284#issuecomment-785791789,1,['Perform'],['Performance']
Performance,"1435d9bfb in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7fffc08d2908, options=options; entry=0) at waitpid.c:38; #2 0x00007fd143548f67 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007fd1444a57e0 in TUnixSystem::StackTrace() () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #4 0x00007fd1444a8244 in TUnixSystem::DispatchSignals(ESignals) () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #5 <signal handler called>; #6 0x00007fd13fdbd1d8 in TCling::CallFunc_Factory() const () from /home/huagen/root/6.20.00.bin/lib/libCling.so; #7 0x00007fd14446e452 in TMethodCall::Init(TFunction const*) () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #8 0x00007fd144397703 in TPluginHandler::SetupCallEnv() () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #9 0x00007fd144397b93 in TPluginHandler::CheckForExecPlugin(int) () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #10 0x00007fd14435c0c4 in TApplication::LoadGraphicsLibs() () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #11 0x00007fd14435b67a in TApplication::InitializeGraphics() () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #12 0x00007fd144361088 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #13 0x0000558ef4e6f2cc in main (); ===========================================================; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fd13fdbd1d8 in TCling::CallFunc_Factory() const () from /home/huagen/root/6.20.00.bin/lib/libCling.so; #7 0x00007fd1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1710747993:2391,Load,LoadGraphicsLibs,2391,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1710747993,1,['Load'],['LoadGraphicsLibs']
Performance,"15dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, arg",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:6046,optimiz,optimized,6046,https://root.cern,https://github.com/root-project/root/issues/15117,4,['optimiz'],['optimized']
Performance,163af95c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f4401b90.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/09ff08b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * faile,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:7585,load,load,7585,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,176; 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176; 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185; 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185; 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189; 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189; 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193; 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214; 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216; 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219; 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223; 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373; /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]; 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172; 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176; 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176; 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223; 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373; 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375; 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375; 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378; 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378; 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403; 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489; 12: Calling 'getfile' in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7410:31209,load,loaded,31209,https://root.cern,https://github.com/root-project/root/issues/7410,1,['load'],['loaded']
Performance,17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-18T15:29:01.995Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-18T15:29:01.996Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-18T15:29:01.996Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-18T15:29:01.996Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-18T15:29:03.619Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-18T15:29:05.636Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-18T15:30:19.417Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:302:44: warning: parameter 'pymeth' set but not used [-Wunused-but-set-parameter] ; - [2022-11-18T15:30:49.307Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11742#issuecomment-1320224545:1337,perform,performing,1337,https://root.cern,https://github.com/root-project/root/pull/11742#issuecomment-1320224545,1,['perform'],['performing']
Performance,"17ef4700) at pthread_create.c:333; #21 0x00007f16258e741d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109. Thread 1 (Thread 0x7f1626ed7a40 (LWP 30289)):; #0 0x00007f16258ac0cb in __GI___waitpid (pid=30320, stat_loc=stat_loc; entry=0x7ffdc1fcb5c0, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007f1625824fbb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f162696e21d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x15da570) at /home/zhe/root/core/unix/src/TUnixSystem.cxx:2118; #3 TUnixSystem::StackTrace (this=0x15da570) at /home/zhe/root/core/unix/src/TUnixSystem.cxx:2412; #4 0x00007f162697085c in TUnixSystem::DispatchSignals (this=0x15da570, sig=kSigSegmentationViolation) at /home/zhe/root/core/unix/src/TUnixSystem.cxx:3643; #5 <signal handler called>; #6 __memcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:37; #7 0x00007f1626206eb4 in memcpy (__len=1234974, __src=<optimized out>, __dest=0x7f1616858010) at /usr/include/x86_64-linux-gnu/bits/string3.h:53; #8 TFileCacheRead::ReadBufferExtNormal (this=0x2e97a30, buf=0x7f1616858010 <error: Cannot access memory at address 0x7f1616858010>, pos=286, len=1234974, loc=; 0x7ffdc1fcdf44: 0) at /home/zhe/root/io/io/src/TFileCacheRead.cxx:531; #9 0x00007f161a71794a in TTreeCacheUnzip::ReadBufferExt (this=0x2e97a30, buf=<optimized out>, pos=<optimized out>, len=<optimized out>, loc=<optimized out>) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:979; #10 0x00007f161a716b3c in TTreeCacheUnzip::GetUnzipBuffer (this=0x2e97a30, buf=0x7ffdc1fcdfe0, pos=286, len=1234974, free=0x7ffdc1fcdfdc) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:810; #11 0x00007f161a6a7d97 in TBasket::ReadBasketBuffers (this=this; entry=0x2e9b770, pos=286, len=1234974, file=file; entry=0x1e41b90) at /home/zhe/root/tree/tree/src/TBasket.cxx:474; #12 0x00007f161a6b22d0 in TBranch::GetBasket (this=this; entry=0x2f7f180, basketnumber=0) at /home/z",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:15739,optimiz,optimized,15739,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,1,['optimiz'],['optimized']
Performance,1819:22: warning: the specified comparator type does not provide a const call operator [-Wuser-defined-warnings] ; - /Library/Developer/CommandLineTools/usr/include/c++/v1/__tree:1819:22: warning: the specified comparator type does not provide a const call operator [-Wuser-defined-warnings] ; - /Library/Developer/CommandLineTools/usr/include/c++/v1/__tree:1819:22: warning: the specified comparator type does not provide a const call operator [-Wuser-defined-warnings] . ### Failing tests:; - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_assertBranchCount](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34166/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_assertBranchCount/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34166/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34166/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34166/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34166/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34166/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshotNFiles](h,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408952517:1205,cache,cache,1205,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408952517,1,['cache'],['cache']
Performance,"1::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x209f2f8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #7 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x209f2f8, __a=...) at /usr/include/c++/12/bits/alloc_traits.h:535; #8 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x209f2f0, this=<optimized out>) at /usr/include/c++/12/bits/hashtable_policy.h:1984; #9 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x209f250) at /usr/include/c++/12/bits/hashtable_policy.h:2006; #10 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:4504,optimiz,optimized,4504,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"1` in the environment. I've only seen the crash on both CentOS 7 however the compilers and sysroot used should be coming from conda-forge so I'm not sure why the host system is relavent. I don't know if it's related but this is was built using `-Dbuiltin_llvm=OFF -Dbuiltin_clang=OFF`. <details><summary>Click for full stack trace</summary>; <p>. ```cpp; (/scratch2/root-debug2/env1) [root@31cdf387b2f5 root-debug2]# EXTRA_CLING_ARGS='-O1' root.exe -l -b -q -x test.cpp++. Processing test.cpp++...; Info in <TUnixSystem::ACLiC>: creating shared library /scratch2/root-debug2/./test_cpp.so. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f54c8af741c in waitpid () from /lib64/libc.so.6; #1 0x00007f54c8a74f12 in do_system () from /lib64/libc.so.6; #2 0x00007f54c9097e78 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2108; #3 TUnixSystem::StackTrace (this=0x55ed24b27570) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:2399; #4 0x00007f54c9095257 in TUnixSystem::DispatchSignals (this=0x55ed24b27570, sig=kSigSegmentationViolation) at /usr/local/src/conda/root_base-6.25.2/root-source/core/unix/src/TUnixSystem.cxx:3619; #5 <signal handler called>; #6 0x00007f54c1df2cc6 in clang::CodeGen::CodeGenTBAA::getBaseTypeInfoHelper (this=this; entry=0x55ed2cce0be0, Ty=<optimized out>, Ty; entry=0x55ed2ccd12c0) at /usr/local/src/conda-prefix/include/llvm/ADT/PointerIntPair.h:174; #7 0x00007f54c1df343b in clang::CodeGen::CodeGenTBAA::getBaseTypeInfo (this=0x55ed2cce0be0, QTy=...) at /usr/local/src/conda/clang_packages-9.0.1/lib/CodeGen/CodeGenTBAA.cpp:354; #8 0x00007f54c1df3edc in clang::CodeGen::CodeGenTBAA::getTypeInfo (this=this; entry=0x55ed2cce0be0, QTy=QTy; entry=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:1437,optimiz,optimized,1437,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:15050,optimiz,optimized,15050,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"1e612e0, cl=0x160c7d0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:4894; #66 0x00007ffff6c47ba7 in TClass::Property (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:6100; #67 0x00007ffff6c46dc7 in TClass::IsForeign (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5938; #68 0x00007ffff6c46e68 in TClass::PostLoadCheck (this=0x1e612e0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5955; #69 0x00007ffff6c3e928 in TClass::GetClass (typeinfo=..., load=true, hint_pair_offset=0, hint_pair_size=0) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:3284; #70 0x000000000058b9d1 in ROOT::Internal::TClassGetClassHelper<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> >::GetClass (load=true, silent=false) at /home/jhahnfel/ROOT/src/core/meta/inc/TClass.h:628; #71 0x000000000058b97f in ROOT::Internal::GetClassHelper<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> > (load=true, silent=false) at /home/jhahnfel/ROOT/src/core/meta/inc/TClass.h:644; #72 0x000000000058b93f in TClass::GetClass<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> > (load=true, silent=false) at /home/jhahnfel/ROOT/src/core/meta/inc/TClass.h:654; #73 0x000000000058a8e8 in TDirectory::WriteObject<ROOT::Experimental::RHist<1, double, ROOT::Experimental::RHistStatContent, ROOT::Experimental::RHistStatUncertainty> > (this=0x7fffffffcfc8, obj=0x7fffffffd398, name=0x41b846 ""h1"", option=0x41f9ae """", bufsize=0) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:284; #74 0x00000000005878fc in IOTest_OneD_Test::TestBody (this=0x69e1f0) at /home/jhahnfel/ROOT/src/hist/histdrawv7/test/io.cxx:20; #75 0x00000000005dd396 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #76 0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1403351246:16146,load,load,16146,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1403351246,1,['load'],['load']
Performance,"1e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1312; #195 0x000055b0680520f7 in PyRun_InteractiveOneObjectEx (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:277; #196 0x000055b06805228f in _PyRun_InteractiveLoopObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:148; #197 0x000055b067fd156e in _PyRun_AnyFileObject (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=0x7ffa511ec370, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:84; #198 0x000055b068052408 in PyRun_AnyFileExFlags (fp=0x7ffa51af8980 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7fff519cedd8) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:116; #199 0x000055b067fce9c0 in pymain_run_stdin (config=0x55b06913dc60) at /usr/local/src/conda/python-3.10.4/Modules/main.c:506; #200 pymain_run_python (exitcode=0x7fff519cedd0) at /usr/local/src/conda/python-3.10.4/Modules/main.c:594; #201 Py_RunMain () at /usr/local/src/conda/python-3.10.4/Modules/main.c:670; #202 0x000055b068117e09 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.10.4/Modules/main.c:1090; #203 0x00007ffa519300b3 in __libc_start_main (main=0x55b068117dc0 <main>, argc=1, argv=0x7fff519cefe8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7fff519cefd8) at ../csu/libc-start.c:308; #204 0x000055b068117d11 in _start () at /usr/local/src/conda/python-3.10.4/Objects/longobject.c:39; ===========================================================; I'm not sure how to fix this bug.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:36183,optimiz,optimized,36183,https://root.cern,https://github.com/root-project/root/issues/10676,6,['optimiz'],['optimized']
Performance,"1f8a34574c4980d94c5e5ab667fa8672/interpreter/llvm/src/lib/ExecutionEngine/Orc/Core.cpp#L2031-L2043. 187 tests fail with the error ""pure virtual method called"". Most of them are related to dataframe or roofit, but not exclusively. These errors do not happen on the other RHEL+EPEL 8 architecture (x86_64).; These errors do not happen on ppc64le on other systems: RHEL+EPEL 9, Fedora 36, 37, 38, 39. It is specific to ppc64le on RHEL+EPEL 8. ### Expected behaviour. Root should behave the same on RHEL+EPEL 8 ppc64le and RHEL+EPEL 8 x86_64. ### To Reproduce. Steps to reproduce the behavior:; 1. Build root 6.28.00 for RHEL+EPEL 8 on ppc64le using the default compiler -- g++ (GCC) 8.5.0 20210514 (Red Hat 8.5.0-16); 2. Run tests. ### Setup; 1. ROOT version 6.28.00; 2. Operating system RHEL+EPEL 8 ppc64le; 3. Built from source. ### Additional context. How the build crashes with the SOFIE parser option enabled:. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8fa9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x1098e5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8fac1c8 in TUnixSystem::DispatchSignals (this=0x1098e5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:1678,optimiz,optimized,1678,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"2, i8*, i8* } { i32 1180844977, i32 1, i8* getelementptr inbounds ([249 x i8], [249 x i8]* @1, i64 0, i64 0), i8* null }, section "".nvFatBinSegment"", align 8; @__cuda_gpubin_handle = weak dso_local global i8** null, align 8. ; Function Attrs: noinline norecurse uwtable; define dso_local void @_Z22__device_stub__kernel1v() #0 {; %1 = alloca %struct.dim3, align 8; %2 = alloca %struct.dim3, align 8; %3 = alloca i64, align 8; %4 = alloca i8*, align 8; %5 = alloca { i64, i32 }, align 8; %6 = alloca { i64, i32 }, align 8; %7 = alloca i8*, i64 1, align 16; %8 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %1, %struct.dim3* %2, i64* %3, i8** %4); %9 = load i64, i64* %3, align 8; %10 = load i8*, i8** %4, align 8; %11 = bitcast { i64, i32 }* %5 to i8*; %12 = bitcast %struct.dim3* %1 to i8*; call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false); %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 0; %14 = load i64, i64* %13, align 8; %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 1; %16 = load i32, i32* %15, align 8; %17 = bitcast { i64, i32 }* %6 to i8*; %18 = bitcast %struct.dim3* %2 to i8*; call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false); %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0; %20 = load i64, i64* %19, align 8; %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1; %22 = load i32, i32* %21, align 8; %23 = bitcast i8* %10 to %struct.CUstream_st*; %24 = call i32 @cudaLaunchKernel(i8* bitcast (void ()* @_Z22__device_stub__kernel1v to i8*), i64 %14, i32 %16, i64 %20, i32 %22, i8** %7, i64 %9, %struct.CUstream_st* %23); br label %25. 25: ; preds = %0; ret void; }. declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3*, %struct.dim3*, i64*, i8**). declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st*). ; Function Attrs: argmemonly nofree nounwind wi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1156850209:3197,load,load,3197,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1156850209,2,['load'],['load']
Performance,"2. testLikelihoodSerial; 3. testRooRealL; 3. RooFitZMQ:; 1. test_RooFitZMQ; 2. test_RooFitZMQ_polling; 3. test_RooFitZMQ_HWM; 4. test_RooFitZMQ_load_balancing; 4. RooFitCore:; 1. testRooGradMinimizer; 2. testBidirMMapPipe; 3. testMPFEnll. From my side (and that of the NL eScience Center), the project has ended and time has run out to make any further major contributions to it, except, of course finishing this PR and providing help to get it working and to possibly hand over further development :). Here are some notes for possible future work:; - RooFitZMQ includes an extension of ZeroMQ itself: a ppoll function. This function should ideally be contributed to ZeroMQ, but I have had no time for this. The motivation behind ppoll is given in this [blog post](https://blog.esciencecenter.nl/combining-zeromq-posix-signals-b754f6f29cd6).; - At the last moment, I decided to reimplement part of the Queue functionality. The task distribution and parameter updating functionalities are now done directly using appropriate ZeroMQ sockets instead of indirectly through the Queue. The old-style Queue functionality, however, has not been cleaned up yet. Doing so will clean up the ""plumbing"" of the MultiProcess functions quite a bit.; - Benchmarking and optimization still has to be done for this version as well. The scaling results of the proof of concept (see references above) should be reproducible with this reimplementation, but this possibly still needs some tuning.; - After the most recent merging in of master, the RooGradMinimizer tests no longer pass, because the numbers are no longer floating point exactly the same. We have not looked into why, but one possible source is the reworked Kahan summation class. This was applied in RooMinimizerFcn, but not yet in our external-gradient classes.; - The proof-of-concept version classes are also still present in the source tree (`roofitcore/MultiProcess`), but have only been partially maintained since we started with the final version. Pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8294:5318,Queue,Queue,5318,https://root.cern,https://github.com/root-project/root/pull/8294,1,['Queue'],['Queue']
Performance,"2.0/bits/invoke.h:113; #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292; #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622; #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564; #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0; #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700; #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__futu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:10521,optimiz,optimized,10521,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules; 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm; 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm; 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:1644,Load,Loading,1644,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"2.17.so); ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so); ==92602== by 0x401CA4B: _dl_open (in /usr/lib64/ld-2.17.so); ==92602== by 0x5091127: dlopen_doit (in /usr/lib64/libdl-2.17.so); ==92602== by 0x401712F: _dl_catch_error (in /usr/lib64/ld-2.17.so); ==92602== by 0x5091C07: _dlerror_run (in /usr/lib64/libdl-2.17.so); ==92602== by 0x5091227: dlopen@@GLIBC_2.17 (in /usr/lib64/libdl-2.17.so); ==92602== by 0x11A5D3CB: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (PlatformPosix.cpp:118); ==92602== by 0x116731DB: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) (DynamicLibraryManager.cpp:372); ==92602== by 0x11356EE7: TCling::Load(char const*, bool) (TCling.cxx:3464); ==92602== by 0x44DAFA7: TSystem::Load(char const*, char const*, bool) (TSystem.cxx:1942); ==92602== by 0x46896FF: TUnixSystem::Load(char const*, char const*, bool) (TUnixSystem.cxx:2777); ==92602== by 0x113665A7: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&)::{lambda(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)#1}::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (TCling.cxx:6488); ==92602== by 0x11366763: LazyFunctionCreatorAutoloadForModule(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::DynamicLibraryManager const&) (TCling.cxx:6514); ==92602== by 0x1136688B: TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:6526); ==92602== by 0x113463EB: llvmLazyFunctionCreator(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) (TCling.cxx:689);",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9297#issuecomment-979895686:24215,Load,Load,24215,https://root.cern,https://github.com/root-project/root/issues/9297#issuecomment-979895686,1,['Load'],['Load']
Performance,2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/Visibility.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.return.roottest_cling_return_constRetrunTest_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.cling.stl/vector/roottest_cling_stl_vector_Run_WILL_FAIL/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_runforeign](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_runforeign/); - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest2](https://epsft-jenkins.cern.c,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343735053:3449,cache,cache,3449,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343735053,1,['cache'],['cache']
Performance,2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:7878,load,load,7878,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/cor",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:14189,optimiz,optimized,14189,https://root.cern,https://github.com/root-project/root/issues/9595,1,['optimiz'],['optimized']
Performance,"20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458; #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400; #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45; #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91; #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178; #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503; #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542; #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178; #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792; #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539; #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:6875; #22 0x00007fb64bc79085 in ROOT::merge_TTree (obj=0x3c045e0, coll=0x7ffcc0390e10, info=0x7ffcc0390f00) at tree/tree/G__Tree.cxx:4109; #23 0x00007fb64cb1fa1a in TFileMerger::MergeRecursive (this=0x7ffcc0391e90, target=0x3c283e0, sourcelist=0x7ffcc0391ee8, type=12)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:5877,optimiz,optimized,5877,https://root.cern,https://github.com/root-project/root/issues/6640,1,['optimiz'],['optimized']
Performance,"20); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #121 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #122 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=297, b=..., ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #123 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x5555575cfe80, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #124 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #125 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #126 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x555557625580, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #127 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x5555575cfe78, conf=0x555557625580); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #128 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x5555575cfe78, buffer=..., ; this=0x555557624830) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #129 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x5555575cfe78); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBuffe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:27879,optimiz,optimized,27879,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,3,['optimiz'],['optimized']
Performance,2147483649] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1770:96: warning: cast between incompatible function types from ‘TVirtualPad*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1774:94: warning: cast between incompatible function types from ‘TVirtualX*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] ; - /mnt/build/workspace/root-pullrequests-build/root/core/base/src/TROOT.cxx:1776:95: warning: cast between incompatible function types from ‘TDirectory*& (*)()’ to ‘TGlobalMappedFunction::GlobalFunc_t’ {aka ‘void* (*)()’} [-Wcast-function-type] . And 91 more. ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.io.io.test.gtest_io_io_test_test_io](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.io.io/test/gtest_io_io_test_test_io/); - [projectroot.test.test_stressHistFactory_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot/test/test_stressHistFactory_interpreted/); - [projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_snapshot/); - [projectroot.roottest.root.io.recover.roottest_root_io_recover_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/30062/testReport/projectroot.roottest.root.io/recover/roottest_root_io_recover_mak,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2188#issuecomment-396924388:2834,cache,cache,2834,https://root.cern,https://github.com/root-project/root/pull/2188#issuecomment-396924388,2,['cache'],['cache']
Performance,"2187: #17 0x00007f2a61bc5f8a in dlopen_doit () from /lib64/libdl.so.2; 2187: #18 0x00007f2a61750964 in _dl_catch_exception () from /lib64/libc.so.6; 2187: #19 0x00007f2a61750a23 in _dl_catch_error () from /lib64/libc.so.6; 2187: #20 0x00007f2a61bc652e in _dlerror_run () from /lib64/libdl.so.2; 2187: #21 0x00007f2a61bc602a in dlopen; 2187:; 2187: GLIBC_2.2.5 () from /lib64/libdl.so.2; 2187: #22 0x00000000002ce7f6 in __interceptor_dlopen.part.267 (); 2187: #23 0x00007f2a50c02ffb in cling::utils::platform::DLOpen (Path=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", Err=0x7f2a5e651200) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; 2187: #24 0x00007f2a5087994c in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:375; 2187: #25 0x00007f2a508d6dce in cling::Interpreter::loadLibrary (this=0x614000001840, filename=..., lookup=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1469; 2187: #26 0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, a",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:4359,load,loadLibrary,4359,https://root.cern,https://github.com/root-project/root/issues/11867,2,['load'],['loadLibrary']
Performance,"23; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:20644,optimiz,optimized,20644,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"23; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:21957,optimiz,optimized,21957,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"23; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:23270,optimiz,optimized,23270,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"23; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:24583,optimiz,optimized,24583,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"23; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:29292,optimiz,optimized,29292,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"23; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:30605,optimiz,optimized,30605,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"23; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:31918,optimiz,optimized,31918,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"23; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:33231,optimiz,optimized,33231,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,24.969Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/machine/macos_common.h:116:12: warning: 'OSAtomicAdd64Barrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_fetch_add() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T13:00:24.969Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:339:31: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T13:00:24.969Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:608:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T13:00:24.969Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:612:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T13:00:24.970Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:635:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] ; - [2022-11-23T13:00:24.970Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/ginclude/tbb/tbb_machine.h:645:9: warning: 'OSMemoryBarrier' is deprecated: first deprecated in macOS 10.12 - Use std::atomic_thread_fence() from &lt;atomic&gt; instead [-Wdeprecated-declarations] . And 40 more. ### Failing tests:; - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/159677/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1325060922:3360,load,load,3360,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1325060922,2,['load'],['load']
Performance,"240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; -- The C compiler identification is AppleClang 16.0.0.16000022; -- The CXX compiler identification is AppleClang 16.0.0.16000022; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/clang - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/clang++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Building ROOT version 6.32.04; -- Checking internet connectivity; -- Checking internet connectivity - found; -- The default C++ standard in use by the detected compiler (/usr/bin/clang++) is lower than C++17. Setting C++17 as the minimum standard.; -- Performing Test HAS_LIBCXX11; -- Performing Test HAS_LIBCXX11 - Success; -- Found a macOS system 15.0; -- Found an AArch64 system; -- ROOT default compression algorithm: zlib; -- Cannot enable cudnn without enabling cuda or tmva-gpu: cudnn is disabled.; -- Looking for ZLib; -- Building freetype version 2.12.1 included in ROOT itself; -- Looking for PCRE; -- Looking for LZMA; -- Looking for ZSTD; -- Looking for LZ4; -- Building AfterImage library included in ROOT itself; -- Looking for Python; -- Found Python3: /opt/homebrew/bin/python3.12 (found suitable version ""3.12.6"", minimum required is ""3.8"") found components: Interpreter Development NumPy Development.Module Development.Embed ; -- Looking for OpenGL; -- Looking for LibXml2; -- Looking for SQLite; -- Looking for XROOTD; -- Checking for module 'davix>=0.6.4'; -- Found davix, version 0.8.7; -- Looking for BLAS for optional parts of TMVA; -- PyROOT: development package found. Building for version 3.12.6; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is Cl",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428#issuecomment-2350895635:1524,Perform,Performing,1524,https://root.cern,https://github.com/root-project/root/issues/16428#issuecomment-2350895635,2,['Perform'],['Performing']
Performance,"240914/lib/libRint.so] TRint::ProcessLineNr(char const*, char const*, int*) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::HandleTermInput() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TUnixSystem::CheckDescriptors() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TMacOSXSystem::DispatchOneEvent(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::InnerLoop() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TSystem::Run() (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libCore.so] TApplication::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/lib/libRint.so] TRint::Run(bool) (no debug info); [/Users/marcomeyer/Software/root/20240914/bin/root.exe] main (no debug info); [/usr/lib/dyld] start (no debug info); ```. I can't get any graphics due to issue with cocoa. So I also tried to disable cocoa, but then it loads x11 and compilation crash due to `char*` assigned with `unsigned char*`.; ```; [ 54%] Built target ClangAttrHasAttributeImpl; /Users/marcomeyer/Software/root/20240710-src/graf3d/ftgl/src/FTVectoriser.cxx:143:15: error: cannot initialize a variable of type 'char *' with an rvalue of type 'unsigned char *'; 143 | char* tagList = &outline.tags[startIndex];; | ^ ~~~~~~~~~~~~~~~~~~~~~~~~~; 1 error generated.; ```. Would you have any idea how to fix that ?. ### Reproducer. ```; cmake ../20240914-src -Dmathmore=ON -Dbuiltin_vdt=ON -Dbuiltin_glew=ON -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 -Dccache=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang && make -j8; ```. or . ```; cmake ../20240914-src -DCMAKE_INSTALL_PREFIX=/Users/marcomeyer/Software/root/20240914 && make -j8; ```. ### ROOT version. v6.32.00-patches. ### Installation method. build from source. ### Operating system. MacOSX Sequoia 15.0 Beta (24A5320a). ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16428:6106,load,loads,6106,https://root.cern,https://github.com/root-project/root/issues/16428,1,['load'],['loads']
Performance,"24ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2; #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2; #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err; entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this; entry=0x55ed24bf4fb0, libStem=..., permanent=permanent; entry=false, resolved=resolved; entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372; #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940; #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581; #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction; entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:11069,optimiz,optimized,11069,https://root.cern,https://github.com/root-project/root/issues/9595,2,['optimiz'],['optimized']
Performance,"24b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:26869,optimiz,optimized,26869,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"250 in art::detail::Filter::doEvent (this=0x316dba0, ep=..., mc=..., counts_run=..., counts_passed=..., counts_failed=...); at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/art/v3_06_03-buildFW/src/art/Framework/Core/detail/Filter.cc:126; #7 0x00007fffe9a17bf4 in art::WorkerT<art::EDFilter>::implDoProcess (this=0x775e00, ep=..., mc=...) at /products/art/v3_06_03/include/art/Framework/Core/WorkerT.h:181; #8 0x00007ffff63e5271 in art::Worker::runWorker (this=0x775e00, p=..., mc=...); at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/art/v3_06_03-buildFW/src/art/Framework/Principal/Worker.cc:549; #9 0x00007ffff63e4fb4 in art::(anonymous namespace)::RunWorkerFunctor::operator() (this=0x3167128); at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/art/v3_06_03-buildFW/src/art/Framework/Principal/Worker.cc:527; #10 0x00007ffff63e88f3 in hep::concurrency::SerialTaskQueueChain::runFunc<art::(anonymous namespace)::RunWorkerFunctor> (this=0x337e350, func=...); at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueueChain.h:83; #11 0x00007ffff63e8ce6 in hep::concurrency::SerialTaskQueueChain::<lambda()>::operator()(void) (this=0x337e350); at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueueChain.h:69; #12 0x00007ffff63e9939 in hep::concurrency::QueuedTask<hep::concurrency::SerialTaskQueueChain::passDown(unsigned int, const T&) [with T = art::(anonymous namespace)::RunWorkerFunctor]::<lambda()> >::execute(void); (this=0x7fffe8ec7940) at /scratch/workspace/critic-slf/BUILDTYPE/debug/QUAL/e19/label1/swarm/label2/SLF7/build/hep_concurrency/v1_05_00/slf7.x86_64.e19.debug/include/hep_concurrency/SerialTaskQueue.h:86; #13 0x00007ffff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6939:4698,concurren,concurrency,4698,https://root.cern,https://github.com/root-project/root/issues/6939,1,['concurren'],['concurrency']
Performance,"256 wouldn't have helped in the mentioned GGUS ticket. There was an input set of 133 files, of which more than 24 were on a single pool with a limit of 24 concurrent transfers. Another approach could be to detect this situation in hadd and then suggest the use of `-n`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11276#issuecomment-1235182039:155,concurren,concurrent,155,https://root.cern,https://github.com/root-project/root/issues/11276#issuecomment-1235182039,1,['concurren'],['concurrent']
Performance,"26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, __a=...) at /usr/in",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:14111,optimiz,optimized,14111,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"27820); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #107 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x55555624ea80, pointer=0x555557627820, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #108 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555697ff60, b=..., ; pointer=0x555557627820 ""\200q\025\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #109 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555697fd90, b=..., arr=@0x7fffffffc670: 0x7fffffffc668, ; compinfo=0x55555761ab08, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #110 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #111 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557627820, buffer=..., ; this=0x55555761b130) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #112 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557627820); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #113 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x555557627820, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #114 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x555556983c10, b=..., ; pointer=0x555557627820 ""\200q\025\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #115 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x555556983a4",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:24706,optimiz,optimized,24706,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,2,['optimiz'],['optimized']
Performance,"27820); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #113 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x555557627820, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #114 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x555556983c10, b=..., ; pointer=0x555557627820 ""\200q\025\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #115 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x555556983a40, b=..., arr=@0x7fffffffc8a0: 0x7fffffffc898, ; compinfo=0x555557649b28, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #116 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #117 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557627820, buffer=..., ; this=0x555557649e60) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #118 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557627820); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #119 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x55555631fd20, pointer=0x555557627820, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #120 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x55555631fd20); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #121 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:26081,optimiz,optimized,26081,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,2,['optimiz'],['optimized']
Performance,"28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282; #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110; #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33; #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120; #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242; #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973; #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957; #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871; #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447; #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141; #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275; #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146; #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x555557972600, now=...) at /opt/root_src/core/base/src/TTimer.cxx:132; #18 0x00007ffff773c635 in TUnixSystem::DispatchTimers (this=0x5555555c3800, mode=true) at /opt/root_sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:19191,load,load,19191,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['load'],['load']
Performance,29ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1f3834d0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.namespaces' from CURLOPT,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:32178,load,load,32178,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"2d00) at /home/b/bendavid/rootdev19/root/core/unix/src/TUnixSystem.cxx:2108; #3 TUnixSystem::StackTrace (this=0x55fe35ea2d00) at /home/b/bendavid/rootdev19/root/core/unix/src/TUnixSystem.cxx:2399; #4 0x00007f233e3d7c28 in cling::MultiplexInterpreterCallbacks::PrintStackTrace() () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #5 0x00007f233e3cbe0c in cling_runtime_internal_throwIfInvalidPointer () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #6 0x00007f233324203a in ?? (); #7 0x00007fff669129b0 in ?? (); #8 0x00007fff66912be0 in ?? (); #9 0x00007f233e3cbdb0 in ?? () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #10 0x00007f234368a20f in WrapperCall (method=94550400788944, nargs=0, args_=0x7fff66912be0, self=0x0, result=0x7fff669129b0) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #11 0x00007f234368ad50 in CallT<double> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #12 Cppyy::CallD (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:840; #13 0x00007f23437038df in GILCallD (ctxt=0x7fff66912bc0, self=<optimized out>, method=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:76; #14 CPyCppyy::(anonymous namespace)::DoubleExecutor::Execute (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7fff66912bc0) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:307; #15 0x00007f23436f2269 in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, this=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1011105337:3447,optimiz,optimized,3447,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1011105337,4,['optimiz'],['optimized']
Performance,3&date=2020-09-14).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95683/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95683/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95683/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95683/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95683/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runabstract_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95683/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runabstract_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_runoutoforder_datageneration](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95683/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_runoutoforder_datageneration/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make_CloneTree](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/95683/testReport/projectroot,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6346#issuecomment-691986382:1246,cache,cache,1246,https://root.cern,https://github.com/root-project/root/pull/6346#issuecomment-691986382,1,['cache'],['cache']
Performance,3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CUR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28775,load,load,28775,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b2771d44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SRCE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/NCSA-slcs-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e2023333.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2fc6b233.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8fa17d52.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/0e635db3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/IGCA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/RDIG.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Personnels.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/156a0f0f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/seegrid-ca-2013.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ff94d436.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3d5be7bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/55994d72.signing_policy,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:43296,load,load,43296,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"30-alice10/cint/cint/src/expr.cxx:1071; #26 0x00007fba33262efe in G__process_cmd (line=line; entry=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", prompt=prompt; entry=0xe550a8 """", more=more; entry=0xe550a0, err=err; entry=0x7ffcac8e070c, rslt=rslt; entry=0x7ffcac8e0710) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/pause.cxx:2331; #27 0x00007fba37e4b1c0 in TCint::ProcessLine (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:549; #28 0x00007fba37e46687 in TCint::ProcessLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:959; #31 0x00007fba37817692 in TRint::Run (this=this; entry=0x1464300, retrn=retrn; entry=false) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/rint/src/TRint.cxx:417; #32 0x0000000000401ee2 in main (argc=<optimized out>, argv=0x7ffcac8e3658) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ALIROOT/aliroot.cxx:152; ===========================================================. The lines below might hint at the cause of the crash.; If they do not help you then please submit a bug report at; http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to any",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:7186,optimiz,optimized,7186,https://root.cern,https://github.com/root-project/root/issues/6977,2,['optimiz'],['optimized']
Performance,"30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #18 0x00007fba331f2003 in G__test (expr=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1998; #19 0x00007fba33256ef4 in G__exec_if () at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/parse.cxx:1381; #20 G__exec_statement (mparen=mparen; entry=0x7ffcac8d188c) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/parse.cxx:7285; #21 0x00007fba3321462a in G__interpret_func (result7=result7; entry=0x7ffcac8d2400, funcname=<optimized out>, libp=libp; entry=0x7ffcac8d2440, hash=<optimized out>, p_ifunc=0x2243ac0, funcmatch=funcmatch; entry=1, memfunc_flag=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/ifunc.cxx:6710; #22 0x00007fba33204c22 in G__getfunction (item=item; entry=0xe65770 ""RunEtaC()"", known3=known3; entry=0x7ffcac8dcee4, memfunc_flag=<optimized out>, memfunc_flag; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/func.cxx:2901; #23 0x00007fba331e1752 in G__getitem (item=0xe65770 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1918; #24 0x00007fba331e5c70 in G__getexpr (expression=expression; entry=0x2315180 ""RunEtaC()"") at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1488; #25 0x00007fba331f090c in G__calc_internal (exprwithspace=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/expr.cxx:1071; #26 0x00007fba33262efe in G__process_cmd (line=line; entry=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", prompt=prompt; entry=0xe550a8 """", more=more; entry=0xe550a0, err=err; entry=0x7ffcac8e070c, rslt=rslt; entry=0x7ffcac8e0710) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alic",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:5591,optimiz,optimized,5591,https://root.cern,https://github.com/root-project/root/issues/6977,1,['optimiz'],['optimized']
Performance,"3030b0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1403; #8 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557688140, buffer=..., this=0x555557685ea0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #9 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557688140); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #10 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555571443e0, pointer=0x555557688140, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #11 0x00007ffff5e5fff1 in RooRealVar::Streamer (this=0x5555566050f0, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooRealVar.cxx:1272; #12 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x5555571ca9b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #13 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #14 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=7, b=..., onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #15 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x55555767ce00, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #16 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #17 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:3033,optimiz,optimized,3033,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,"33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TDataMember.cxx:607; #22 0x0000150891ebae36 in TDataMember::Init (this=0xb2bc560, afterReading=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TDataMember.cxx:202; #23 0x0000150891ebad31 in TDataMember::TDataMember (this=0xb2bc560, info=0xb2bf6c0, cl=0xb2befa0) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TDataMember.cxx:187; #24 0x0000150891ecd995 in TListOfDataMembers::Get (this=0xb2b4e70, info=0x98a51d0, skipChecks=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TListOfDataMembers.cxx:307; #25 0x0000150891ece0ac in TListOfDataMembers::Load (this=0xb2b4e70) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TListOfDataMembers.cxx:474; #26 0x0000150891ea0d5d in TClass::CreateListOfDataMembers (this=0xb2befa0, data=..., selection=TDictionary::EMemberSelection::kNoUsingDecls, load=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:3761; #27 0x0000150891ea0e9c in TClass::GetListOfDataMembers (this=0xb2befa0, load=false) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f87499c5ca7bf90/root-6.33.01/core/meta/src/TClass.cxx:3780; #28 0x0000150891e9fa81 in TClass::GetDataMember (this=0xb2befa0, datamember=0x7ffeced6d2d0 ""elements_"") at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc12/lcg/root/6.33.01-48fd78c793bc73bd3f8",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16232#issuecomment-2331366418:11491,Load,Load,11491,https://root.cern,https://github.com/root-project/root/pull/16232#issuecomment-2331366418,1,['Load'],['Load']
Performance,33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.name,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30274,load,load,30274,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"34368ad50 in CallT<double> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #12 Cppyy::CallD (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:840; #13 0x00007f23437038df in GILCallD (ctxt=0x7fff66912bc0, self=<optimized out>, method=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:76; #14 CPyCppyy::(anonymous namespace)::DoubleExecutor::Execute (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7fff66912bc0) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:307; #15 0x00007f23436f2269 in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, this=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #16 0x00007f23436f5148 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x55fe3b0d6ce0, self=0x0, offset=0, ctxt=0x7fff66912bc0) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #17 0x00007f23436f349a in CPyCppyy::CPPMethod::Execute (this=0x55fe3b0d6ce0, self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728; #18 0x00007f23436f878e in CPyCppyy::(anonymous namespace)::mp_call (pymeth=0x7f2328323760, args=0x7f2343980070, kwds=0x7f2328330380) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:566; #19 0x00007f234371ecc6 in CPyCppyy::CallMethodImp (pytmpl=pytmpl; entry=0x7f232832a980, pymeth=; 0x7fff66912de8: 0x7f2328323760, args=args; entry=0x7f2343980070, kwds=kwds; ent",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1011105337:4358,optimiz,optimized,4358,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1011105337,5,['optimiz'],['optimized']
Performance,3800/console).; ### Failing tests:; - [projectroot.roofit.roofitcore.test.gtest_roofit_roofitcore_test_testProxiesAndCategories](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83800/testReport/projectroot.roofit.roofitcore/test/gtest_roofit_roofitcore_test_testProxiesAndCategories/); - [projectroot.test.test_stressmathcore_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83800/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stresshistofit_interpreted](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83800/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83800/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/); - [projectroot.roottest.root.meta.cmsUnload.roottest_root_meta_cmsUnload_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83800/testReport/projectroot.roottest.root.meta/cmsUnload/roottest_root_meta_cmsUnload_make/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83800/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibs/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsAZ](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83800/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsAZ/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsZA](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/83800/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsZA/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-634793276:1592,load,loadAllLibs,1592,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-634793276,6,['load'],['loadAllLibs']
Performance,"392068. ttreeTBufferMerger 20000000 16; User time (seconds): 404.52; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:30.24; Maximum resident set size (kbytes): 3631212. ttreeTBufferMerger 20000000 16; User time (seconds): 407.27; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:29.89; Maximum resident set size (kbytes): 2579396. ttreeTBufferMerger 20000000 128; User time (seconds): 6726.12; Elapsed (wall clock) time (h:mm:ss or m:ss): 2:11.26; Maximum resident set size (kbytes): 90232780. ttreeTBufferMerger 20000000 128; User time (seconds): 4558.00; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:50.53; Maximum resident set size (kbytes): 34501092. ttreeTBufferMerger 20000000 128; User time (seconds): 4089.10; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:40.39; Maximum resident set size (kbytes): 19870924. ntpl-perf01:/data/hddext4/jonas/20231113; ttreeTBufferMerger 20000000 16; User time (seconds): 406.02; Elapsed (wall clock) time (h:mm:ss or m:ss): 0:59.20; Maximum resident set size (kbytes): 3479780. ttreeTBufferMerger 20000000 16; User time (seconds): 405.00; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.22; Maximum resident set size (kbytes): 4285016. ttreeTBufferMerger 20000000 16; User time (seconds): 406.67; Elapsed (wall clock) time (h:mm:ss or m:ss): 1:00.26; Maximum resident set size (kbytes): 2565488. ttreeTBufferMerger 20000000 128; User time (seconds): 6967.42; Elapsed (wall clock) time (h:mm:ss or m:ss): 4:35.79; Maximum resident set size (kbytes): 89252804. ttreeTBufferMerger 20000000 128; User time (seconds): 4209.07; Elapsed (wall clock) time (h:mm:ss or m:ss): 4:37.90; Maximum resident set size (kbytes): 39543736. ttreeTBufferMerger 20000000 128; User time (seconds): 3700.49; Elapsed (wall clock) time (h:mm:ss or m:ss): 4:34.74; Maximum resident set size (kbytes): 20422848; ```; </details>. My conclusion would be that memory goes down everywhere (as expected) and, especially for higher thread counts and faster storage, we even gain performance",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1808248792:2492,perform,performance,2492,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1808248792,2,['perform'],['performance']
Performance,"3:14; #11 0x7fa0de6150ef in TObjArray::Streamer(TBuffer&) /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:468:29; #12 0x7fa0de6ebc39 in TClass::StreamerTObjectInitialized(TClass const*, void*, TBuffer&, TClass const*) /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:6817:10; #13 0x7fa0d8ac492a in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/jhahnfel/ROOT/src/core/meta/inc/TClass.h:610:7; #14 0x7fa0d8ce588f in TKey::ReadObjectAny(TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TKey.cxx:1108:11; #15 0x7fa0d8bf00b8 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TDirectoryFile.cxx:1111:25; #16 0x7fa0c3f32221 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:214:18; #17 0x7fa0c3aff24d in TCling::LoadPCMImpl(TFile&) /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:1769:12; #18 0x7fa0c3b00ff9 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>) /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:1874:4; #19 0x7fa0c3b06517 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int>>> const&, char const**, bool, bool) /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:2299:7; #20 0x7fa0de4e718a in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int>>> const&, char const**, bool) /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:2557:15; #21 0x7fa0b8baac25 in (anonymo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715#issuecomment-1554235372:3178,Load,LoadPCM,3178,https://root.cern,https://github.com/root-project/root/issues/12715#issuecomment-1554235372,1,['Load'],['LoadPCM']
Performance,"3:14; #19 0x7fa0de6150ef in TObjArray::Streamer(TBuffer&) /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:468:29; #20 0x7fa0de6ebc39 in TClass::StreamerTObjectInitialized(TClass const*, void*, TBuffer&, TClass const*) /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:6817:10; #21 0x7fa0d8ac492a in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/jhahnfel/ROOT/src/core/meta/inc/TClass.h:610:7; #22 0x7fa0d8ce588f in TKey::ReadObjectAny(TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TKey.cxx:1108:11; #23 0x7fa0d8bf00b8 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/jhahnfel/ROOT/src/io/io/src/TDirectoryFile.cxx:1111:25; #24 0x7fa0c3f32221 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:214:18; #25 0x7fa0c3aff24d in TCling::LoadPCMImpl(TFile&) /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:1769:12; #26 0x7fa0c3b00ff9 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>) /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:1874:4; #27 0x7fa0c3b06517 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int>>> const&, char const**, bool, bool) /home/jhahnfel/ROOT/src/core/metacling/src/TCling.cxx:2299:7; #28 0x7fa0de4e718a in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char>>, int>>> const&, char const**, bool) /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:2557:15; #29 0x7fa0b8baac25 in (anonymo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715#issuecomment-1554235372:13879,Load,LoadPCM,13879,https://root.cern,https://github.com/root-project/root/issues/12715#issuecomment-1554235372,1,['Load'],['LoadPCM']
Performance,"3ac in do_call_core (kwdict=0x7ffa50ee05c0, callargs=0x7ffa510c5cc0, func=0x7ffa5132ca90, trace_info=0x7fff519cd190, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #105 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #106 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512df130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #107 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #108 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #109 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:19331,optimiz,optimized,19331,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"3ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/co",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:27979,optimiz,optimized,27979,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,3ac.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4b2783ac.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f4db168.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/089450c2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA3G3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/368bc755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url',MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:30562,load,load,30562,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354; #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458; #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400; #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45; #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91; #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178; #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503; #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542; #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178; #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:2792; #20 0x00007fb64bd2d2ce in TTree::CopyEntries (this=0x3c045e0, tree=0x3c0cc10, nentries=7983, option=0x7ffcc0390f21 "" fast"") at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:3539; #21 0x00007fb64bd35246 in TTree::Merge (this=0x3c045e0, li=0x7ffcc0390e10, info=0x7ffcc0390f00) at /home/vpadulan/Programs/rootproject/root/tree/tree/src/TTree.cxx:6875; #22 0x00007fb64bc79085 in ROOT::merge_TTree (obj=0x3c045e0, coll=0x7ffcc0390e10, info=0x7ffcc0390f00) at tree",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:5724,optimiz,optimized,5724,https://root.cern,https://github.com/root-project/root/issues/6640,1,['optimiz'],['optimized']
Performance,3f638905.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SDG-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/AC-GRID-FR-Robots.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7a819ef2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNAMgrid-ca.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UNLPGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Root-CA2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d71343e8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d7e8dc79.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/SlovakGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/728fa56d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/Slova,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:52483,load,load,52483,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"4 = alloca i8*, align 8; > %5 = alloca { i64, i32 }, align 8; > %6 = alloca { i64, i32 }, align 8; > %7 = alloca i8*, i64 1, align 16; > %8 = call i32 @__cudaPopCallConfiguration(%struct.dim3.191* %1, %struct.dim3.191* %2, i64* %3, i8** %4); > %9 = load i64, i64* %3, align 8; > %10 = load i8*, i8** %4, align 8; > %11 = bitcast { i64, i32 }* %5 to i8*; > %12 = bitcast %struct.dim3.191* %1 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false); > %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 0; > %14 = load i64, i64* %13, align 8; > %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 1; > %16 = load i32, i32* %15, align 8; > %17 = bitcast { i64, i32 }* %6 to i8*; > %18 = bitcast %struct.dim3.191* %2 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false); > %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0; > %20 = load i64, i64* %19, align 8; > %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1; > %22 = load i32, i32* %21, align 8; > %23 = bitcast i8* %10 to %struct.CUstream_st.192*; > %24 = call i32 @cudaLaunchKernel(i8* bitcast (void ()* @_Z22__device_stub__kernel2v to i8*), i64 %14, i32 %16, i64 %20, i32 %22, i8** %7, i64 %9, %struct.CUstream_st.192* %23); > br label %25; > ; > 25: ; preds = %0; > ret void; > }; > ; > declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3.191*, %struct.dim3.191*, i64*, i8**); > ; > declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st.192*); > ; > ; Function Attrs: argmemonly nofree nounwind willreturn; > declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1; > ; > define available_externally dso_local void @__cuda_register_globals(i8** %0) {; > %2 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void ()* @_Z22__device_stub__ker",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164697687:9484,load,load,9484,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164697687,2,['load'],['load']
Performance,"4 = alloca i8*, align 8; > %5 = alloca { i64, i32 }, align 8; > %6 = alloca { i64, i32 }, align 8; > %7 = alloca i8*, i64 1, align 16; > %8 = call i32 @__cudaPopCallConfiguration(%struct.dim3.463* %1, %struct.dim3.463* %2, i64* %3, i8** %4); > %9 = load i64, i64* %3, align 8; > %10 = load i8*, i8** %4, align 8; > %11 = bitcast { i64, i32 }* %5 to i8*; > %12 = bitcast %struct.dim3.463* %1 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false); > %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 0; > %14 = load i64, i64* %13, align 8; > %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 1; > %16 = load i32, i32* %15, align 8; > %17 = bitcast { i64, i32 }* %6 to i8*; > %18 = bitcast %struct.dim3.463* %2 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false); > %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0; > %20 = load i64, i64* %19, align 8; > %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1; > %22 = load i32, i32* %21, align 8; > %23 = bitcast i8* %10 to %struct.CUstream_st.464*; > %24 = call i32 @cudaLaunchKernel(i8* bitcast (void ()* @_Z7kernel2v to i8*), i64 %14, i32 %16, i64 %20, i32 %22, i8** %7, i64 %9, %struct.CUstream_st.464* %23); > br label %25; > ; > 25: ; preds = %0; > ret void; > }; > ; > declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3.463*, %struct.dim3.463*, i64*, i8**); > ; > declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st.464*); > ; > ; Function Attrs: argmemonly nounwind; > declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1; > ; > define dso_local void @__cuda_register_globals(i8**) {; > %2 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void ()* @_Z7kernel2v to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0), i8* ge",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164697687:21213,load,load,21213,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164697687,2,['load'],['load']
Performance,"4,29 @@; 1548: Bit 13 declared in TObject as kInvalidObject; 1548: Bit 14 declared in TStreamerElement as kWholeObject; 1548: Bit 21 declared in TStreamerElement as kWarned; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initialization routine.; 1548: +Error in <TClass::LoadClassInfo>: no interpreter information for class ROOT::Experimental::RBrowserDataCleanup is available even though it has a TClass initializat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638467226:2587,Load,LoadClassInfo,2587,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638467226,1,['Load'],['LoadClassInfo']
Performance,"4-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/ROOT/__init__.py', gROOT=<TROOT at remote 0x7faeaa0648c0>, _cppyy_exports=['nullptr', 'bind_object', 'as_cobject', 'addressof', 'SetMemoryPolicy', 'kMemoryHeuristics', 'kMemoryStrict', 'SetOwnership'], nullptr=<nullptr_t at remote 0x7faebf1583a0>, bind_object=<built-in method bind_object of module object at remote 0x7faebf168f40>, as_cobject=<built-in method as_cobject of modu...(truncated), start=0x101, filename='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', fp=0xc827e0) at Python/pythonrun.c:1140; #19 pyrun_simple_file (flags=0x7ffc080e6778, closeit=<optimized out>, filename='/afs/desy.de/user/d/dudarboh/analysis/misc/test.py', fp=0xc827e0) at Python/pythonrun.c:450; #20 PyRun_SimpleFileExFlags (fp=fp; entry=0xc827e0, filename=<optimized out>, closeit=closeit; entry=0x1, flags=flags; entry=0x7ffc080e6778) at Python/pythonrun.c:483; #21 0x00007faec09ae01c in PyRun_AnyFileExFlags (fp=fp; entry=0xc827e0, filename=<optimized out>, closeit=closeit; entry=0x1, flags=flags; entry=0x7ffc080e6778) at Python/pythonrun.c:92; #22 0x00007faec09cad68 in pymain_run_file (cf=0x7ffc080e6778, config=0xbfdd70) at Modules/main.c:373; #23 pymain_run_python (exitcode=0x7ffc080e6770) at Modules/main.c:598; #24 Py_RunMain () at Modules/main.c:677; #25 0x00007faec09cb227 in pymain_main (args=0x7ffc080e6860) at Modules/main.c:707; #26 Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at Modules/main.c:731; #27 0x00007faebf6bd555 in __libc_start_main () from /lib64/libc.so.6; #28 0x000000000040100e in _start (); ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixin",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:36976,optimiz,optimized,36976,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,1,['optimiz'],['optimized']
Performance,"4.00/core/base/inc/TNamed.h:37; #13 TH1::TH1 (this=0x7fffaa058c00 <std::_Function_handler<void(llvm::Expected<llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol> > >), llvm::orc::JITSymbolResolverAdapter::lookup(const LookupSet&, llvm::JITSymbolResolver::OnResolvedFunction)::<lambda(llvm::Expected<llvm::DenseMap<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol, llvm::DenseMapInfo<llvm::orc::SymbolStringPtr>, llvm::detail::DenseMapPair<llvm::orc::SymbolStringPtr, llvm::JITEvaluatedSymbol> > >)> >::_M_manager(std::_Any_data &, const std::_Any_data &, std::_Manager_operation)>, name=0x7fff9d900168 ""hpx"", title=0x7fff9d90016c ""This is the px distribution"", nbins=100, xlow=-4, xup=4) at /builddir/build/BUILD/root-6.24.00/hist/hist/src/TH1.cxx:685; #14 0x00007fff9cb0a3c8 in TH1F::TH1F (this=<optimized out>, name=<optimized out>, title=<optimized out>, nbins=<optimized out>, xlow=<optimized out>, xup=<optimized out>) at /builddir/build/BUILD/root-6.24.00/hist/hist/src/TH1.cxx:9873; #15 0x00007fff9d57071c in ?? (); #16 0x00007fff9d570050 in ?? (); #17 0x00007fffa8b0c810 in cling::IncrementalExecutor::executeWrapper (this=0x1366e8cf0, function=..., returnValue=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376; #18 0x00007fffa8a45a50 in cling::Interpreter::RunFunction (this=0x1366e76e0, FD=0x1379d9920, res=0x7fffc5bcba10) at /usr/include/c++/10/bits/basic_string.h:907; #19 0x00007fffa8a4f2b4 in cling::Interpreter::EvaluateInternal (this=0x1366e76e0, input=..., CO=..., V=0x7fffc5bcba10, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391; #20 0x00007fffa8a4fd74 in cling::Interpreter::echo (this=0x1366e76e0, input=""hsimple() /* '.x' tries to invoke a function with the same name as the macro */"", V=0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-844784432:3213,optimiz,optimized,3213,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-844784432,6,['optimiz'],['optimized']
Performance,"4.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:145; #22 0x00007fffa8bb2c10 in cling::MetaParser::isXCommand (this=0x137036da0, actionResult=; 0x7fffc5bcb810: cling::MetaSema::AR_Success, resultValue=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:319; #23 0x00007fffa8bb50b0 in cling::MetaParser::isCommand (this=0x137036da0, actionResult=; 0x7fffc5bcb810: cling::MetaSema::AR_Success, resultValue=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:124; #24 0x00007fffa8bb5360 in cling::MetaParser::isMetaCommand (this=0x137036da0, actionResult=; 0x7fffc5bcb810: cling::MetaSema::AR_Success, resultValue=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101; #25 0x00007fffa8b98d10 in cling::MetaProcessor::process (this=0x1370789b0, input_line=..., compRes=; 0x7fffc5bcb9fc: cling::Interpreter::kSuccess, result=0x7fffc5bcba10, disableValuePrinting=<optimized out>) at /usr/include/c++/10/bits/unique_ptr.h:173; #26 0x00007fffa890e840 in HandleInterpreterException (metaProcessor=0x1370789b0, input_line=0x13739f0e0 "".X /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/tutorials/./hsimple.C"", compRes=; 0x7fffc5bcb9fc: cling::Interpreter::kSuccess, result=result; entry=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/core/metacling/src/TCling.cxx:2427; ===========================================================; ```. However, sometimes it just stops with:; ```; cd /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/tutorials && LD_LIBRARY_PATH=/builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/lib: ROOTIGNOREPREFIX=1 ROOT_HIST=0 /builddir/build/BUILD/root-6.24.00/ppc64le-redhat-linux-gnu/bin/root.exe -l -q -b -n -x hsimple.C -e return; Processing hsimple.C...; malloc(): invalid next size (unsorted); ```; In this case there is no backtrace. Occasionally it fails like this, though t",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-844784432:5551,optimiz,optimized,5551,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-844784432,1,['optimiz'],['optimized']
Performance,"4.40/fairmq/StateMachine.cxx:364; #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422; #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717; #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73; #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95; #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264; #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271; #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365; #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:7836,optimiz,optimized,7836,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,"4/ld-linux-x86-64.so.2; #38 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #39 0x00007f54c924ab3b in _dl_open () from /lib64/ld-linux-x86-64.so.2; #40 0x00007f54c86a6eeb in dlopen_doit () from /lib64/libdl.so.2; #41 0x00007f54c9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2; #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err; entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this; entry=0x55ed24bf4fb0, libStem=..., permanent=permanent; entry=false, resolved=resolved; entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372; #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940; #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581; #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction; entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:11012,load,loadLibrary,11012,https://root.cern,https://github.com/root-project/root/issues/9595,4,"['load', 'optimiz']","['loadLibrary', 'optimized']"
Performance,40/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53740/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53740/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_periodic_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53740/testReport/projectroot/test/test_periodic_build/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53740/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53740/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53740/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53740/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_mergeWithDir](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53740/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_mergeWithDir/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_treeCloneTest],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3404#issuecomment-463291011:1296,cache,cache,1296,https://root.cern,https://github.com/root-project/root/pull/3404#issuecomment-463291011,1,['cache'],['cache']
Performance,"400>, 0xffff9d374de4 <TCling::AutoParse(char const*)+340>,; 0xffff9d355204 <TClingLookupHelper__AutoParse(char const*)+36>, 0xffff9d2c8b44; <ROOT::TMetaUtils::TClingLookupHelper::GetPartiallyDesugaredNameWithScopeHandling(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, bool)+116>, 0xffffa7acf42c; <TClassEdit::GetNormalizedName(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::basic_string_view<char, std::char_traits<char> >)+540>, 0xffffa7aeab58; <TClass::GetClass(char const*, bool, bool, unsigned long, unsigned long)+1144>, 0xffffa7f852b4 <TStreamerInfo::BuildCheck(TFile*, bool)+148>, 0xffffa7f4751c <TFile::ReadStreamerInfo()+700>,; 0xffffa7f4fc40 <TFile::Init(bool)+1056>, 0xffffa7f74a60 <TMemFile::TMemFile(char const*, char*, long long, char const*, char const*, int, long long)+268>, 0xffffac4515b4; <o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char> >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const+900>,; 0xffffac451f68 <o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::less<std::__cxx11::basic_st",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2312464532:2203,load,loadFileToMemory,2203,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2312464532,1,['load'],['loadFileToMemory']
Performance,"40; #14 0x00007f0a3488a1f7 in TPluginHandler::LoadPlugin (this=this@entry=0x563dc5dcf2c0) at /home/b/bendavid/rootdev25/root/core/base/src/TPluginManager.cxx:261; #15 0x00007f0a342e14d3 in TFile::Open (url=<optimized out>, options=options@entry=0x7f0a1a224b68 ""READ_WITHOUT_GLOBALREGISTRATION"", ftitle=<optimized out>, ftitle@entry=0x7f0a1a226b82 """", compress=<optimized out>, compress@entry=101, netopt=<optimized out>, netopt@entry=0) at /home/b/bendavid/rootdev25/root/io/io/src/TFile.cxx:4164; #16 0x00007f0a1a1b56fb in TChain::LoadTree (this=0x7f055c0090d0, entry=0) at /home/b/bendavid/rootdev25/root/tree/tree/src/TChain.cxx:1499; ```. and. ```; #11 0x00007f0a342e49c8 in ROOT::TVirtualRWMutex::Lock (this=0x563dbbbec820) at /home/b/bendavid/rootdev25/root/core/base/inc/TVirtualRWMutex.h:79; #12 TLockGuard::TLockGuard (mutex=0x563dbbbec820, this=0x7f09113f2b28) at /home/b/bendavid/rootdev25/root/core/base/inc/TVirtualMutex.h:80; #13 TPluginHandler::ExecPluginImpl<char const*, char const*, char const*, int, int> (this=this@entry=0x563dc5dcf2c0) at /home/b/bendavid/rootdev25/root/core/base/inc/TPluginManager.h:156; #14 0x00007f0a342e109b in TPluginHandler::ExecPlugin<char const*, char const*, char const*, int, int> (nargs=5, this=0x563dc5dcf2c0) at /home/b/bendavid/rootdev25/root/core/base/inc/TPluginManager.h:172; #15 TFile::Open (url=<optimized out>, options=options@entry=0x7f0a1a224b68 ""READ_WITHOUT_GLOBALREGISTRATION"", ftitle=<optimized out>, ftitle@entry=0x7f0a1a226b82 """", compress=<optimized out>, compress@entry=101, netopt=<optimized out>, netopt@entry=0) at /home/b/bendavid/rootdev25/root/io/io/src/TFile.cxx:4196; #16 0x00007f0a1a1b56fb in TChain::LoadTree (this=0x7f0614025d80, entry=0) at /home/b/bendavid/rootdev25/root/tree/tree/src/TChain.cxx:1499; #17 0x00007f0a12345963 in TTreeReader::SetEntryBase (this=this@entry=0x7f083494ded0, entry=0, local=<optimized out>, local@entry=false) at /home/b/bendavid/rootdev25/root/tree/treeplayer/src/TTreeReader.cxx:546; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7710#issuecomment-1286316399:2197,optimiz,optimized,2197,https://root.cern,https://github.com/root-project/root/issues/7710#issuecomment-1286316399,6,"['Load', 'optimiz']","['LoadTree', 'optimized']"
Performance,"40>) at remote 0x7faec0dc7250>, _flag=True) at remote 0x7faec0dc7fa0>, _is_stopped=False, _initialized=True, _stderr=<_io.TextIOWrapper at remote 0x7faec0ecfe10>, _invoke_excepthook=<function at remote 0x7faea81bb940>)...(truncated), tstate=0x389e880) at ./Include/internal/pycore_ceval.h:40; #52 function_code_fastcall (tstate=0x389e880, co=<optimized out>, args=<optimized out>, nargs=0x1, globals=<optimized out>) at Objects/call.c:330; #53 0x00007faec083dc70 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7faea820a7b8, callable=<function at remote 0x7faeaa8ac040>, tstate=0x389e880) at ./Include/cpython/abstract.h:118; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7faea820a7b8, callable=<function at remote 0x7faeaa8ac040>) at ./Include/cpython/abstract.h:127; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x389e880) at Python/ceval.c:5077; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3506; #57 0x00007faec08360ab in _PyEval_EvalFrame (throwflag=0x0, f=Frame 0x7faea820a640, for file /cvmfs/ilc.desy.de/key4hep/spackages/python/3.9.10/x86_64-centos7-gcc11.2.0-opt/7j5vqgmqodwjxxe2ssf42zxb2uqxi374/lib/python3.9/threading.py, line 973, in _bootstrap_inner (self=<Thread(_target=<function at remote 0x7faea81bb8b0>, _name='Thread-1', _args=(<PyROOTApplication(_is_ipython=False, keep_polling=True, process_root_events=<...>) at remote 0x7faec0dc7280>,), _kwargs={}, _daemonic=True, _ident=140388121413376, _native_id=34896, _tstate_lock=<_thread.lock at remote 0x7faea82355d0>, _started=<Event(_cond=<Condition(_lock=<_thread.lock at remote 0x7faec0dc70f0>, acquire=<built-in method acquire of _thread.lock object at remote 0x7faec0dc70f0>, release=<built-in method release of _thread.lock object at remote 0x7faec0dc70f0>, _waiters=<collections.deque at remote 0x7faec0dcd340>) at remote 0x7faec0dc7250>, _flag=True) at re",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:14409,optimiz,optimized,14409,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,6,['optimiz'],['optimized']
Performance,444Z] /Users/sftnight/build/workspace/root-pullrequests-build/build/include/Vc/scalar/../common/../sse/../common/bitscanintrinsics.h:44:13: warning: '_bit_scan_reverse' macro redefined [-Wmacro-redefined] . And 551 more. ### Failing tests:; - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data1_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77839/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data1_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data2_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77839/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data2_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77839/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77839/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data3_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77839/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data3_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data5_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77839/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data5_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data4_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77839/testReport/projectroot.roottest.roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5427#issuecomment-617669933:3469,load,load,3469,https://root.cern,https://github.com/root-project/root/pull/5427#issuecomment-617669933,1,['load'],['load']
Performance,450/testReport/projectroot/test/test_stressmathcore/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53450/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53450/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.test.test_stressIOPlugins_xroot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53450/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.test.test_stressIOPlugins_http](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53450/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.test.test_periodic_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53450/testReport/projectroot/test/test_periodic_build/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53450/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53450/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53450/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53450/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/). And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3404#issuecomment-462050658:1798,cache,cache,1798,https://root.cern,https://github.com/root-project/root/pull/3404#issuecomment-462050658,2,['cache'],['cache']
Performance,452/testReport/projectroot/test/test_stressmathcore/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53452/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53452/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.test.test_stressIOPlugins_http](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53452/testReport/projectroot/test/test_stressIOPlugins_http/); - [projectroot.test.test_stressmathcore_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53452/testReport/projectroot/test/test_stressmathcore_interpreted/); - [projectroot.test.test_stressIOPlugins_xroot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53452/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.test.test_periodic_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53452/testReport/projectroot/test/test_periodic_build/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53452/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53452/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/53452/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/). And 11 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3404#issuecomment-462049337:1790,cache,cache,1790,https://root.cern,https://github.com/root-project/root/pull/3404#issuecomment-462049337,2,['cache'],['cache']
Performance,46354/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/); - [projectroot.roottest.cling.template.roottest_cling_template_runtemplatefriend](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.cling/template/roottest_cling_template_runtemplatefriend/); - [projectroot.roottest.python.cmdLineUtils.roottest_python_cmdLineUtils_ROOT_8197](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.python/cmdLineUtils/roottest_python_cmdLineUtils_ROOT_8197/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.io.interface.roottest_root_io_interface_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/146354/testReport/projectroot.roottest.root.io/interface/roottest_root_io_interface_make/). And 3 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1142372934:1903,load,load,1903,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1142372934,2,['load'],['load']
Performance,4657/console).; ### Failing tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24657/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.test.test_stress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24657/testReport/projectroot/test/test_stress/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24657/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.reflex.roottest_cling_reflex_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24657/testReport/projectroot.roottest.cling/reflex/roottest_cling_reflex_make/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24657/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24657/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24657/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24657/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24657/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_aut,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-386684856:1085,load,load,1085,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-386684856,1,['load'],['load']
Performance,"46fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556a0e300, pointer=0x555556982270, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #173 0x00007ffff7a846e4 in TStreamerInfo::ReadBuffer<char**> (this=0x555556944f10, b=..., arr=@0x7fffffffdab0: 0x7fffffffdaa8, ; compinfo=0x5555575ca9e8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1304; #174 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #175 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555556982160, buffer=..., ; this=0x5555575c9540) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #176 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555556982160); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #177 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=this@entry=0x7fffffffdd60, cl=0x5555569a2760, ; pointer=pointer@entry=0x555556982160, onFileClass=onFileClass@entry=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #178 0x00007ffff5ebeb8c in RooWorkspace::Streamer (this=0x555556982160, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooWorkspace.cxx:2585; #179 0x00007ffff78d6cbe in TKey::ReadObj (this=0x55555672bc50) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:834; #180 0x00007ffff789b550 in TDirectoryFile::Get (this=0x555556710ec0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:975; #181 0x0000555555555221 in repro () at repro.C:18; #182 0x00005555555551d9 in main () at /tmp/root-compile/repro/main.cpp:4; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:40112,optimiz,optimized,40112,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,4746/console).; ### Failing tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24746/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.test.test_stress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24746/testReport/projectroot/test/test_stress/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24746/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.reflex.roottest_cling_reflex_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24746/testReport/projectroot.roottest.cling/reflex/roottest_cling_reflex_make/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24746/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24746/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24746/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24746/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24746/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.newClassDef.roottest_root_io_newClassDef_make](https://,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-386875328:1085,load,load,1085,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-386875328,1,['load'],['load']
Performance,4759/console).; ### Failing tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24759/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.test.test_stress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24759/testReport/projectroot/test/test_stress/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24759/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.reflex.roottest_cling_reflex_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24759/testReport/projectroot.roottest.cling/reflex/roottest_cling_reflex_make/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24759/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24759/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24759/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24759/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24759/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.newClassDef.roottest_root_io_newClassDef_make](https://,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-387161766:1085,load,load,1085,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-387161766,1,['load'],['load']
Performance,"48 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/bltinmodule.c.h:371; #149 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa5132ca90, args=0x7ffa5124b098, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #150 0x000055b0680733ac in do_call_core (kwdict=0x7ffa511ecf00, callargs=0x7ffa5124b080, func=0x7ffa5132ca90, trace_info=0x7fff519cdf80, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #151 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #152 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51038c10, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #153 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #154 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #155 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:27545,optimiz,optimized,27545,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,4905/console).; ### Failing tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24905/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.test.test_stress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24905/testReport/projectroot/test/test_stress/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24905/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.reflex.roottest_cling_reflex_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24905/testReport/projectroot.roottest.cling/reflex/roottest_cling_reflex_make/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24905/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24905/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24905/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24905/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24905/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.newClassDef.roottest_root_io_newClassDef_make](https://,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-387435804:1085,load,load,1085,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-387435804,1,['load'],['load']
Performance,4983/console).; ### Failing tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24983/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.test.test_stress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24983/testReport/projectroot/test/test_stress/); - [projectroot.test.test_stressinterpreter](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24983/testReport/projectroot/test/test_stressinterpreter/); - [projectroot.roottest.cling.reflex.roottest_cling_reflex_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24983/testReport/projectroot.roottest.cling/reflex/roottest_cling_reflex_make/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24983/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_snapshot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24983/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_test_snapshot/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24983/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24983/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.io.newClassDef.roottest_root_io_newClassDef_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/24983/testReport/projectroot.roottest.root.io/newClassDef/roottest_root_io_newClassDef_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoloa,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-387559452:1085,load,load,1085,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-387559452,1,['load'],['load']
Performance,"49893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/clinic/bltinmodule.c.h:465; #64 0x000055f908863fbf in cfunction_vectorcall_FASTCALL_KEYWORDS (func=0x7f1095b88f90, args=0x7f101f610dd8, nargsf=<optimized out>, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Include/cpython/methodobject.h:52; #65 0x000055f90885f8d4 in do_call_core (use_tracing=<optimized out>, kwdict=0x7f10202aa0c0, callargs=0x7f101f610dc0, func=0x7f1095b88f90, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7321; #66 _PyEval_EvalFrameDefault (tstate=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:17006,optimiz,optimized,17006,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"49cac9bc in CPyCppyy::CreateScopeProxy (name=..., parent=0x31c9c90); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:541; #27 0x00007faf49c84ccf in CPyCppyy::meta_getattro (pyclass=0x31c9c90, pyname=0x7faf03154b20); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/ROOT/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:324; #28 0x00007faf4b479097 in _PyObject_LookupAttr (v=0x31c9c90, name=<optimized out>, result=result@entry=0x7ffdb628f638); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/object.c:978; #29 0x00007faf4b510d49 in builtin_hasattr_impl (module=<optimized out>, name=<optimized out>, obj=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/bltinmodule.c:1140; #30 builtin_hasattr (module=<optimized out>, args=0x7faf298e3388, nargs=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/clinic/bltinmodule.c.h:449; #31 0x00007faf4b473fe4 in cfunction_vectorcall_FASTCALL (func=0x7faf4baac6d0, args=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Objects/methodobject.c:422; #32 0x00007faf4b40432d in _PyObject_Vectorcall (kwnames=<optimized out>, nargsf=<optimized out>, args=<optimized out>, callable=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Include/cpython/abstract.h:127; #33 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x125f820); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseExternals/src/Python/Python/ceval.c:4963; #34 _PyEval_EvalFrameDefault (f=<optimized out>, throwflag=<optimized out>); at /data/hdd-4tb/projects/ATLASG-1602/externals/build/AnalysisBaseE",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8578:8539,optimiz,optimized,8539,https://root.cern,https://github.com/root-project/root/issues/8578,2,['optimiz'],['optimized']
Performance,4_compress’ is deprecated: use LZ4_compress_default() instead [-Wdeprecated-declarations] ; - [2020-08-22T07:57:39.475Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/zip/src/Bitshuffle_iochain.c:24:29: warning: unused parameter ‘C’ [-Wunused-parameter] ; - [2020-08-22T07:58:52.962Z] /home/sftnight/build/workspace/root-pullrequests-build/root/tree/tree/src/TBranch.cxx:2639:15: warning: unused variable ‘leaves’ [-Wunused-variable] . ### Failing tests:; - [projectroot.tree.tree.test.gtest_tree_tree_test_testTIOFeatures](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93608/testReport/projectroot.tree.tree/test/gtest_tree_tree_test_testTIOFeatures/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_execFileMerger](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93608/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_execFileMerger/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TestCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93608/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TestCache/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_runtreeCloneTest2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93608/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_runtreeCloneTest2/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93608/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_mergeWithDir](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/93608/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_mergeWithDir/); - [projectroot.roottest.root.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6221#issuecomment-678611653:1546,cache,cache,1546,https://root.cern,https://github.com/root-project/root/pull/6221#issuecomment-678611653,1,['cache'],['cache']
Performance,"4_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClJobManager.cc:33; #5 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #6 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7f9331141700 (LWP 8835)):; #0 0x00007f9369a57e9d in nanosleep () from /lib64/libpthread.so.0; #1 0x00007f9331b1dded in XrdSysTimer::Wait (mills=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/XrdSysTimer.cc:239; #2 0x00007f93319b2118 in XrdCl::TaskManager::RunTasks (this=0x7ee9660) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:244; #3 0x00007f93319b2269 in RunRunnerThread (arg=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdCl/XrdClTaskManager.cc:37; #4 0x00007f9369a50ea5 in start_thread () from /lib64/libpthread.so.0; #5 0x00007f93697799fd in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7f9331942700 (LWP 8834)):; #0 0x00007f9369779fd3 in epoll_wait () from /lib64/libc.so.6; #1 0x00007f9331b22c17 in XrdSys::IOEvents::PollE::Begin (this=0x7efc120, syncsem=<optimized out>, retcode=<optimized out>, eTxt=<optimized out>) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/./XrdSys/XrdSysIOEventsPollE.icc:213; #2 0x00007f9331b1f4f5 in XrdSys::IOEvents::BootStrap::Start (parg=0x7ffe2f5220d0) at /build/cmsbld/auto-builds/CMSSW_10_2_0_pre6-slc7_amd64_gcc700/build/CMSSW_10_2_0_pre6-build/BUILD/slc7_amd64_gcc700/external/xrootd/4.8.3-gnimlf/xrootd-4.8.3/src/XrdSys/X",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7496:4507,optimiz,optimized,4507,https://root.cern,https://github.com/root-project/root/issues/7496,1,['optimiz'],['optimized']
Performance,"4f in raise () from /lib64/libc.so.6; #1 0x00007ffff6647db5 in abort () from /lib64/libc.so.6; #2 0x00007ffff66b7057 in __libc_message () from /lib64/libc.so.6; #3 0x00007ffff66be1bc in malloc_printerr () from /lib64/libc.so.6; #4 0x00007ffff66bfb58 in _int_free () from /lib64/libc.so.6; #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 ; #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 ; #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 ; #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 ; #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 ; #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 ; #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 ; #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 ; #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 ; #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 ; #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 ; #16 0x00007ffff781166f in TUnixSystem::E",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543:1729,optimiz,optimized,1729,https://root.cern,https://github.com/root-project/root/issues/9543,1,['optimiz'],['optimized']
Performance,4hep::sim::Geant4Random;; #pragma link C++ class dd4hep::sim::Geant4ParticleHandler;; #pragma link C++ class dd4hep::sim::Geant4UIManager;; #pragma link C++ class dd4hep::sim::Geant4UserParticleHandler;. // somehow the symbol Geometry moved into global namespace. Redeclare it here; //namespace detail {}; //#pragma link C++ namespace detail;. #endif. // CLHEP stuff; #include <CLHEP/Random/Random.h>; #if defined(__CINT__) || defined(__MAKECINT__) || defined(__CLING__) || defined(__ROOTCLING__). #pragma link C++ namespace CLHEP;; #pragma link C++ class CLHEP::HepRandom;; #pragma link C++ class CLHEP::HepRandomEngine;; #endif. #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4Action is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class dd4hep::sim::Geant4ActionPhase is available even though it has a TClass initialization routine.; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15221#issuecomment-2053701039:54645,Load,LoadClassInfo,54645,https://root.cern,https://github.com/root-project/root/issues/15221#issuecomment-2053701039,6,['Load'],['LoadClassInfo']
Performance,5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm; 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0.0029 ( 0.1%) 0.0000 ( 0.0%) 0.0029 ( 0.1%) 0.0029 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooStats.pcm; 0.0026 ( 0.1%) 0.0000 ( 0.0%) 0.0026 ( 0.1%) 0.0028 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GenVector.pcm; 0.0025 ( 0.1%) 0.0000 ( 0.0%) 0.0025 ( 0.1%) 0.0021 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofPlayer.pc,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:1916,Load,Loading,1916,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"519cbc60) at dlerror.c:170; #34 0x00007ffa51c5d3da in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #35 0x000055b06815ee8d in _PyImport_FindSharedFuncptr (prefix=0x55b0681b5398 ""PyInit"", shortname=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/l",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:6251,optimiz,optimized,6251,https://root.cern,https://github.com/root-project/root/issues/10676,2,['optimiz'],['optimized']
Performance,"5555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMatchOnly=false) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:339; #29 0x00007fffef85f7ca in TClingCallbacks::LookupObject (this=0x5555563ffde0, DC=0x5555564f80b8, Name=...) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:376; #30 0x00007fffef9735b7 in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x5555556b8b30, DC=0x5555564f80b8, DN=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:70; #31 0x00007fffef97e8f5 in cling::InterpreterExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8040, DC=0x5555564f80b8, Name=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/InterpreterCallbacks.cpp:278; #32 0x00007ffff09e4a0a in clang::MultiplexExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8130, DC=0x5555564f80b8, Name=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:107; #33 0x00007ffff39450f6 in clang::DeclContext::lookup (this=0x5555564f80b8, Nam",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:10097,load,loadFirstMatchOnly,10097,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,2,['load'],['loadFirstMatchOnly']
Performance,"55557610f40) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #154 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x5555575cfe30); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #155 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556551b10, pointer=0x5555575cfe30, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #156 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555556551b10); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #157 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #158 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=306702, b=..., ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #159 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x555556982288, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #160 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #161 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #162 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x55555700e030, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #163 TStreamerInfoActions::ReadSTL<&TStreamerI",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:35282,optimiz,optimized,35282,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,"55571ca9b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #13 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #14 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=7, b=..., onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #15 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x55555767ce00, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #16 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #17 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #18 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x555557625580, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #19 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x55555767cdf8, conf=0x555557625580); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #20 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x55555767cdf8, buffer=..., this=0x555557624830); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #21 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x55555767cdf8); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:4003,optimiz,optimized,4003,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,3,['optimiz'],['optimized']
Performance,"556597160); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #49 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #50 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=54, b=..., onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #51 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x5555576460a0, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #52 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #53 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #54 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x555557625580, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #55 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x555557646098, conf=0x555557625580); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #56 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557646098, buffer=..., this=0x555557624830); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #57 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557646098); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:11948,optimiz,optimized,11948,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,3,['optimiz'],['optimized']
Performance,"55767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #35 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x55555624ea80, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #36 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555697ff60, b=..., ; pointer=0x55555767cdb0 ""\030F\333\344\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #37 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555697fd90, b=..., arr=@0x7fffffffafb0: 0x7fffffffafa8, ; compinfo=0x55555761ab08, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #38 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #39 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x55555767cdb0, buffer=..., this=0x55555761b130); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #40 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x55555767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #41 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #42 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x5555572eb940, b=..., ; pointer=0x55555767cdb0 ""\030F\333\344\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #43 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x5555572eb800, b=.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:8794,optimiz,optimized,8794,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,2,['optimiz'],['optimized']
Performance,"55767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #41 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #42 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x5555572eb940, b=..., ; pointer=0x55555767cdb0 ""\030F\333\344\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #43 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x5555572eb800, b=..., arr=@0x7fffffffb1e0: 0x7fffffffb1d8, ; compinfo=0x5555572ebae8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #44 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #45 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x55555767cdb0, buffer=..., this=0x5555572ec0c0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #46 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x55555767cdb0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #47 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556597160, pointer=0x55555767cdb0, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #48 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555556597160); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #49 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:10162,optimiz,optimized,10162,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,2,['optimiz'],['optimized']
Performance,"55b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:33640,optimiz,optimized,33640,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"55b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Inc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:24992,optimiz,optimized,24992,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,563/testReport/projectroot/test/test_stresshistofit_interpreted/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_zlib_compr_level6](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82563/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_zlib_compr_level6/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplex2_zlib_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82563/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplex2_zlib_compr_level9/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simple_lz4_compr_level1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82563/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simple_lz4_compr_level1/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_simplef_default_compr_level9](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82563/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_simplef_default_compr_level9/); - [projectroot.roottest.root.meta.roottest_root_meta_execTypedefList_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82563/testReport/projectroot.roottest.root/meta/roottest_root_meta_execTypedefList_auto/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82563/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibs/); - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsAZ](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82563/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsAZ/). And 1 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-629989102:2487,load,loadAllLibs,2487,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-629989102,4,['load'],['loadAllLibs']
Performance,"571ee160); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #85 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #86 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=143, b=..., onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #87 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x555557627870, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #88 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #89 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #90 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x555557625580, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #91 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x555557627868, conf=0x555557625580); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #92 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557627868, buffer=..., this=0x555557624830); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #93 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557627868); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:19903,optimiz,optimized,19903,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,3,['optimiz'],['optimized']
Performance,"584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #16 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x16584c2e0) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #17 cling::IncrementalJIT::getSymbolAddress (this=0x1657ff820, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #18 0x00007fff76a50690 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x165848f30, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #19 0x00007fff7699fe04 in cling::Interpreter::compileFunction (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /buildd",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:30635,optimiz,optimized,30635,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #110 PyImport_ImportModuleLevelObject (name=0x7f1095149fb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #111 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f1095149fb0, frame=0x7f1096012020, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #113 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012020, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #114 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1095a18860, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #115 0x000055f90890e11f in PyEval_EvalCode (co=0x7f1095bfe250, globals=<optimized out>, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #116 0x000055f90892d08a in run_eval_code_obj (tstate=0x55f908be5998 <_PyRuntime+166328>, co=0x7f1095bfe250, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1741; #117 0x000055f908928c13 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7f1095bfabc0, locals=0x7f1095bfabc0, flags=<optimized out>, arena=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:1762; #118 0x000055f90882b4b0 in PyRun_InteractiveOneObjectEx (fp=fp; entry=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=filename; entry=0x7f1095bfad30, flags=flags; entry=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:261; #119 0x000055f9",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:27453,optimiz,optimized,27453,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"5; #2 0x7fffea190bd5 in cling::MetaParser::consumeToken() src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:49:5; #3 0x7fffea191d4d in cling::MetaParser::isLCommand(cling::MetaSema::ActionResult&) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147:9; #4 0x7fffea1914dd in cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:123:12; #5 0x7fffea191216 in cling::MetaParser::isMetaCommand(cling::MetaSema::ActionResult&, cling::Value*) src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:101:33; #6 0x7fffea14e5aa in cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317:24; #7 0x7fffe99b67b7 in HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) src/core/metacling/src/TCling.cxx:2431:29; #8 0x7fffe99bde30 in TCling::Load(char const*, bool) src/core/metacling/src/TCling.cxx:3454:10; #9 0x7ffff7865f11 in TSystem::Load(char const*, char const*, bool) src/core/base/src/TSystem.cxx:1941:27; #10 0x7ffff7b8a0e3 in TUnixSystem::Load(char const*, char const*, bool) src/core/unix/src/TUnixSystem.cxx:2789:20; #11 0x7fffd78dd08b (<unknown module>); #12 0x7fffe9f8a5d9 in cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376:3; #13 0x7fffe9d73dc2 in cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1141:20; #14 0x7fffe9d6e317 in cling::Interpreter::EvaluateInternal(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391:29; #15 0x7fffe9d6c1fe in cling::Interpreter::process(std::__c",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8041:2030,Load,Load,2030,https://root.cern,https://github.com/root-project/root/pull/8041,1,['Load'],['Load']
Performance,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #180 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa510a0400, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #181 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #182 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #183 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519ce7d0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:32797,optimiz,optimized,32797,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #127 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51284440, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #128 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #129 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #130 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:22836,optimiz,optimized,22836,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #173 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51285a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #174 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb2f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #175 _PyFunction_Vectorcall (func=0x7ffa512fb2e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #176 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #177 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa510a0590, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #178 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce680, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #179 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:31484,optimiz,optimized,31484,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"5b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #131 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c70b0, callable=0x7ffa512fb2e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #132 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd890, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #133 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4213; #134 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c6f20, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #135 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fb380, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #136 _PyFunction_Vectorcall (func=0x7ffa512fb370, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #137 0x000055b06807db35 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7fff519cd9e0, callable=0x7ffa512fb370, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Pytho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:24149,optimiz,optimized,24149,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"5b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #120 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51355d50, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #121 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #122 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #123 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #124 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512845f0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #125 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd6d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #126 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:21523,optimiz,optimized,21523,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"5b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4198; #166 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51357870, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #167 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512fa0f0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #168 _PyFunction_Vectorcall (func=0x7ffa512fa0e0, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #169 0x000055b06806dbcc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #170 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51285bf0, callable=0x7ffa512fa0e0) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #171 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce4c0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #172 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:30171,optimiz,optimized,30171,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"5b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #156 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51025888, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #157 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce140, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #158 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #159 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa51025700, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #160 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #161 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #162 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #163 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa513579f0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #164 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519ce300, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #165 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:28858,optimiz,optimized,28858,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"5b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #110 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa5135d188, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #111 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd350, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #112 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #113 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa5135d000, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #114 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137d640, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #115 _PyFunction_Vectorcall (func=0x7ffa5137d630, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #116 0x000055b06806df2f in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #117 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa51355ed0, callable=0x7ffa5137d630) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #118 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cd510, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #119 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimize",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:20210,optimiz,optimized,20210,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwname",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:7621,optimiz,optimized,7621,https://root.cern,https://github.com/root-project/root/issues/15117,4,['optimiz'],['optimized']
Performance,"5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysde",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:8565,optimiz,optimized,8565,https://root.cern,https://github.com/root-project/root/issues/15117,4,['optimiz'],['optimized']
Performance,"6-24-02/core/unix/src/TUnixSystem.cxx:2411; [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174; [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186; [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location; [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249; [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523; [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316; ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6520#issuecomment-913117485:1951,optimiz,optimized,1951,https://root.cern,https://github.com/root-project/root/issues/6520#issuecomment-913117485,4,['optimiz'],['optimized']
Performance,6.28: [DF] Remove performance overhead in construction of RSampleInfo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12195:18,perform,performance,18,https://root.cern,https://github.com/root-project/root/pull/12195,1,['perform'],['performance']
Performance,"6.so"", Err=Err@entry=0x7fffffffbf40) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; > #41 0x00007fffeea4cc41 in cling::DynamicLibraryManager::loadLibrary (this=0x698e90, libStem=..., permanent=<optimized out>, resolved=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:373; > #42 0x00007fffee9496fa in TCling::LibraryLoadingFailed (this=0x4f0e00, errmessage=..., libStem=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", permanent=false, resolved=false) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:6492; > #43 0x00007fffeea69296 in cling::MultiplexInterpreterCallbacks::LibraryLoadingFailed (this=<optimized out>, errmessage=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so: undefined symbol: _Py_NoneStruct"", libStem=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", permanent=<optimized out>, resolved=<optimized out>); > at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:102; > #44 0x00007fffeea4ce05 in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:377; > #45 0x00007fffee95d74a in TCling::Load (this=0x4f0e00, filename=0xa95fab0 ""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", system=true) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3477; > #46 0x00007ffff67c18a2 in TSystem::Load (this=0x41b800, module=0xa95f920 ""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", entry=0x7fffedaa9527 """", system=true) at /home/jhahnfel/ROOT/llvm13/src/core/base/src/TSystem.cxx:1942; > #47 0x00007fffee94ca44 in TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_3::operator()(std::__cxx11::basic_string",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098026446:9031,optimiz,optimized,9031,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098026446,2,['optimiz'],['optimized']
Performance,6/gcc49.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/console).; ### Failing tests:; - [projectroot.test.test_tstring](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot/test/test_tstring/); - [projectroot.test.test_tcollex](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot/test/test_tcollex/); - [projectroot.test.test_stresstmva_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot/test/test_stresstmva_interpreted/); - [projectroot.test.test_stressentrylist_interpreted](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot/test/test_stressentrylist_interpreted/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_Optimization_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_Optimization_Cpu/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_Minimization_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_Minimization_Cpu/); - [projectroot.test.test_periodic_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot/test/test_periodic_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_MethodDL_Adadelta_Optimization_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37756/testReport/projectroot.tmva.tmva.test/DNN/TMV,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2496#issuecomment-414704766:988,cache,cache,988,https://root.cern,https://github.com/root-project/root/pull/2496#issuecomment-414704766,1,['cache'],['cache']
Performance,"61; #119 0x000055f90882b807 in _PyRun_InteractiveLoopObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:138; #120 0x000055f9087a6a7b in _PyRun_AnyFileObject (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=0x7f1095bfad30, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:73; #121 0x000055f90882b929 in PyRun_AnyFileExFlags (fp=0x7f1095dfaaa0 <_IO_2_1_stdin_>, filename=<optimized out>, closeit=0, flags=0x7ffc2594fb78) at /usr/local/src/conda/python-3.11.9/Python/pythonrun.c:105; #122 0x000055f9087a0505 in pymain_run_stdin (config=0x55f908bcb9e0 <_PyRuntime+59904>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:509; #123 pymain_run_python (exitcode=0x7ffc2594fb74) at /usr/local/src/conda/python-3.11.9/Modules/main.c:604; #124 Py_RunMain () at /usr/local/src/conda/python-3.11.9/Modules/main.c:680; #125 0x000055f9088fe027 in Py_BytesMain (argc=<optimized out>, argv=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/main.c:734; #126 0x00007f1095c29590 in __libc_start_call_main () from /lib64/libc.so.6; #127 0x00007f1095c29640 in __libc_start_main_impl () from /lib64/libc.so.6; #128 0x000055f9088fdecd in _start () at /usr/local/src/conda/python-3.11.9/Python/getplatform.c:9; ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; preferably using the command (.forum bug) in the ROOT prompt.; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in add",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:29419,optimiz,optimized,29419,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"61a6cb094 in ROOT::TThreadExecutor::Foreach<TTree::GetEntry(Long64_t, Int_t)::<lambda()> > (nTimes=<optimized out>, func=..., this=0x7ffdc1fce720) at /home/zhe/buildimt/include/ROOT/TThreadExecutor.hxx:115; #31 TTree::GetEntry (this=0x2c85d30, entry=0, getall=0) at /home/zhe/root/tree/tree/src/TTree.cxx:5489; #32 0x00000000004012fd in main (); //===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum.; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; //===========================================================; #6 __memcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:37; #7 0x00007f1626206eb4 in memcpy (__len=1234974, __src=<optimized out>, __dest=0x7f1616858010) at /usr/include/x86_64-linux-gnu/bits/string3.h:53; #8 TFileCacheRead::ReadBufferExtNormal (this=0x2e97a30, buf=0x7f1616858010 <error: Cannot access memory at address 0x7f1616858010>, pos=286, len=1234974, loc=; 0x7ffdc1fcdf44: 0) at /home/zhe/root/io/io/src/TFileCacheRead.cxx:531; #9 0x00007f161a71794a in TTreeCacheUnzip::ReadBufferExt (this=0x2e97a30, buf=<optimized out>, pos=<optimized out>, len=<optimized out>, loc=<optimized out>) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:979; #10 0x00007f161a716b3c in TTreeCacheUnzip::GetUnzipBuffer (this=0x2e97a30, buf=0x7ffdc1fcdfe0, pos=286, len=1234974, free=0x7ffdc1fcdfdc) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:810; #11 0x00007f161a6a7d97 in TBasket::ReadBasketBuffers (this=this; entry=0x2e9b770, pos=286, len=1234974, file=file; entry=0x1e41b90) at /home/zhe/root/tree/tree/src/TBasket.cxx:474; #12 0x00007f161a6b22d0 in TBranch::GetBasket (this=this; entry=0x2f7f180, basketnumber=0) at /home/z",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:23593,optimiz,optimized,23593,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,1,['optimiz'],['optimized']
Performance,"61ab37e00, parent=..., child=<optimized out>) at ../../src/tbb/custom_scheduler.h:501; #16 0x00007f161adc1522 in tbb::internal::arena::process (this=0x7f161ab4ed00, s=...) at ../../src/tbb/arena.cpp:159; #17 0x00007f161adbffa4 in tbb::internal::market::process (this=0x7f161ab57e80, j=...) at ../../src/tbb/market.cpp:677; #18 0x00007f161adbbbb6 in tbb::internal::rml::private_worker::run (this=0x7f161ab4fc80) at ../../src/tbb/private_server.cpp:271; #19 0x00007f161adbbe09 in tbb::internal::rml::private_worker::thread_routine (arg=<optimized out>) at ../../src/tbb/private_server.cpp:224; #20 0x00007f1624f3c6ba in start_thread (arg=0x7f1617ef4700) at pthread_create.c:333; #21 0x00007f16258e741d in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:109. Thread 1 (Thread 0x7f1626ed7a40 (LWP 30289)):; #0 0x00007f16258ac0cb in __GI___waitpid (pid=30320, stat_loc=stat_loc; entry=0x7ffdc1fcb5c0, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007f1625824fbb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f162696e21d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x15da570) at /home/zhe/root/core/unix/src/TUnixSystem.cxx:2118; #3 TUnixSystem::StackTrace (this=0x15da570) at /home/zhe/root/core/unix/src/TUnixSystem.cxx:2412; #4 0x00007f162697085c in TUnixSystem::DispatchSignals (this=0x15da570, sig=kSigSegmentationViolation) at /home/zhe/root/core/unix/src/TUnixSystem.cxx:3643; #5 <signal handler called>; #6 __memcpy_sse2_unaligned () at ../sysdeps/x86_64/multiarch/memcpy-sse2-unaligned.S:37; #7 0x00007f1626206eb4 in memcpy (__len=1234974, __src=<optimized out>, __dest=0x7f1616858010) at /usr/include/x86_64-linux-gnu/bits/string3.h:53; #8 TFileCacheRead::ReadBufferExtNormal (this=0x2e97a30, buf=0x7f1616858010 <error: Cannot access memory at address 0x7f1616858010>, pos=286, len=1234974, loc=; 0x7ffdc1fcdf44: 0) at /home/zhe/root/io/io/src/TFileCacheRead.cxx:531; #9 0x00007f161a71794a in TTreeCacheUnzip::ReadBu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:15123,optimiz,optimized,15123,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,1,['optimiz'],['optimized']
Performance,"61bc652e in _dlerror_run () from /lib64/libdl.so.2; 2187: #21 0x00007f2a61bc602a in dlopen; 2187:; 2187: GLIBC_2.2.5 () from /lib64/libdl.so.2; 2187: #22 0x00000000002ce7f6 in __interceptor_dlopen.part.267 (); 2187: #23 0x00007f2a50c02ffb in cling::utils::platform::DLOpen (Path=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", Err=0x7f2a5e651200) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; 2187: #24 0x00007f2a5087994c in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:375; 2187: #25 0x00007f2a508d6dce in cling::Interpreter::loadLibrary (this=0x614000001840, filename=..., lookup=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1469; 2187: #26 0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:4566,load,loadFile,4566,https://root.cern,https://github.com/root-project/root/issues/11867,2,['load'],['loadFile']
Performance,"64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null); ret void; }. declare dso_local i32 @__cudaRegisterFunction(i8**, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32*). declare dso_local i32 @__cudaRegisterVar(i8**, i8*, i8*, i8*, i32, i32, i32, i32). declare dso_local i8** @__cudaRegisterFatBinary(i8*). define dso_local void @__cuda_module_ctor_cling_module_4(i8*) {; %2 = call i8** @__cudaRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__cuda_fatbin_wrapper to i8*)); store i8** %2, i8*** @__cuda_gpubin_handle, align 8; call void @__cuda_register_globals(i8** %2); call void @__cudaRegisterFatBinaryEnd(i8** %2); %3 = call i32 @atexit(void (i8*)* @__cuda_module_dtor_cling_module_4); ret void; }. declare dso_local void @__cudaRegisterFatBinaryEnd(i8**). declare dso_local void @__cudaUnregisterFatBinary(i8**). define dso_local void @__cuda_module_dtor_cling_module_4(i8*) {; %2 = load i8**, i8*** @__cuda_gpubin_handle, align 8; call void @__cudaUnregisterFatBinary(i8** %2); ret void; }. declare dso_local i32 @atexit(void (i8*)*). ; Function Attrs: nounwind; declare void @llvm.stackprotector(i8*, i8**) #2. attributes #0 = { noinline uwtable ""correctly-rounded-divide-sqrt-fp-math""=""false"" ""disable-tail-calls""=""false"" ""less-precise-fpmad""=""false"" ""min-legal-vector-width""=""0"" ""no-frame-pointer-elim""=""false"" ""no-frame-pointer-elim-non-leaf"" ""no-infs-fp-math""=""false"" ""no-jump-tables""=""false"" ""no-nans-fp-math""=""false"" ""no-signed-zeros-fp-math""=""false"" ""no-trapping-math""=""false"" ""stack-protector-buffer-size""=""8"" ""target-cpu""=""x86-64"" ""target-features""=""+cx8,+fxsr,+mmx,+sse,+sse2,+x87"" ""unsafe-fp-math""=""false"" ""use-soft-float""=""false"" }; attributes #1 = { argmemonly nounwind }; attributes #2 = { nounwind }. !llvm.module.flags = !{!0, !1}; !llvm.ident = !{!2}. !0 = !{i32 2, !""SDK Version"", [2 x i32] [i32 10, i32 1]}; !1 = !{i32 1, !""wchar_size"", i32 4}; !2 = !{!""clang version 9.0.1 (http:/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1156850209:16595,load,load,16595,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1156850209,1,['load'],['load']
Performance,"64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null); ret void; }. declare dso_local i32 @__cudaRegisterFunction(i8**, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32*). declare dso_local i32 @__cudaRegisterVar(i8**, i8*, i8*, i8*, i32, i32, i32, i32). declare dso_local i8** @__cudaRegisterFatBinary(i8*). define dso_local void @__cuda_module_ctor_cling_module_6(i8*) {; %2 = call i8** @__cudaRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__cuda_fatbin_wrapper to i8*)); store i8** %2, i8*** @__cuda_gpubin_handle, align 8; call void @__cuda_register_globals(i8** %2); call void @__cudaRegisterFatBinaryEnd(i8** %2); %3 = call i32 @atexit(void (i8*)* @__cuda_module_dtor_cling_module_6); ret void; }. declare dso_local void @__cudaRegisterFatBinaryEnd(i8**). declare dso_local void @__cudaUnregisterFatBinary(i8**). define dso_local void @__cuda_module_dtor_cling_module_6(i8*) {; %2 = load i8**, i8*** @__cuda_gpubin_handle, align 8; call void @__cudaUnregisterFatBinary(i8** %2); ret void; }. declare dso_local i32 @atexit(void (i8*)*). ; Function Attrs: nounwind; declare void @llvm.stackprotector(i8*, i8**) #2. attributes #0 = { noinline uwtable ""correctly-rounded-divide-sqrt-fp-math""=""false"" ""disable-tail-calls""=""false"" ""less-precise-fpmad""=""false"" ""min-legal-vector-width""=""0"" ""no-frame-pointer-elim""=""false"" ""no-frame-pointer-elim-non-leaf"" ""no-infs-fp-math""=""false"" ""no-jump-tables""=""false"" ""no-nans-fp-math""=""false"" ""no-signed-zeros-fp-math""=""false"" ""no-trapping-math""=""false"" ""stack-protector-buffer-size""=""8"" ""target-cpu""=""x86-64"" ""target-features""=""+cx8,+fxsr,+mmx,+sse,+sse2,+x87"" ""unsafe-fp-math""=""false"" ""use-soft-float""=""false"" }; attributes #1 = { argmemonly nounwind }; attributes #2 = { nounwind }. !llvm.module.flags = !{!0, !1}; !llvm.ident = !{!2}. !0 = !{i32 2, !""SDK Version"", [2 x i32] [i32 10, i32 1]}; !1 = !{i32 1, !""wchar_size"", i32 4}; !2 = !{!""clang version 9.0.1 (http:/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1156850209:22218,load,load,22218,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1156850209,1,['load'],['load']
Performance,"64, align 8; > %4 = alloca i8*, align 8; > %5 = alloca { i64, i32 }, align 8; > %6 = alloca { i64, i32 }, align 8; > %7 = alloca i8*, i64 1, align 16; > %8 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %1, %struct.dim3* %2, i64* %3, i8** %4); > %9 = load i64, i64* %3, align 8; > %10 = load i8*, i8** %4, align 8; > %11 = bitcast { i64, i32 }* %5 to i8*; > %12 = bitcast %struct.dim3* %1 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false); > %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 0; > %14 = load i64, i64* %13, align 8; > %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 1; > %16 = load i32, i32* %15, align 8; > %17 = bitcast { i64, i32 }* %6 to i8*; > %18 = bitcast %struct.dim3* %2 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false); > %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0; > %20 = load i64, i64* %19, align 8; > %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1; > %22 = load i32, i32* %21, align 8; > %23 = bitcast i8* %10 to %struct.CUstream_st*; > %24 = call i32 @cudaLaunchKernel(i8* bitcast (void ()* @_Z22__device_stub__kernel1v to i8*), i64 %14, i32 %16, i64 %20, i32 %22, i8** %7, i64 %9, %struct.CUstream_st* %23); > br label %25; > ; > 25: ; preds = %0; > ret void; > }; > ; > declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3*, %struct.dim3*, i64*, i8**); > ; > declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st*); > ; > ; Function Attrs: argmemonly nofree nounwind willreturn; > declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1; > ; > define weak dso_local void @__cuda_register_globals(i8** %0) {; > %2 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void ()* @_Z22__device_stub__kernel1v to i8*), i8* getelementptr inb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164697687:3713,load,load,3713,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164697687,2,['load'],['load']
Performance,"64, align 8; > %4 = alloca i8*, align 8; > %5 = alloca { i64, i32 }, align 8; > %6 = alloca { i64, i32 }, align 8; > %7 = alloca i8*, i64 1, align 16; > %8 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %1, %struct.dim3* %2, i64* %3, i8** %4); > %9 = load i64, i64* %3, align 8; > %10 = load i8*, i8** %4, align 8; > %11 = bitcast { i64, i32 }* %5 to i8*; > %12 = bitcast %struct.dim3* %1 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false); > %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 0; > %14 = load i64, i64* %13, align 8; > %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 1; > %16 = load i32, i32* %15, align 8; > %17 = bitcast { i64, i32 }* %6 to i8*; > %18 = bitcast %struct.dim3* %2 to i8*; > call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false); > %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0; > %20 = load i64, i64* %19, align 8; > %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1; > %22 = load i32, i32* %21, align 8; > %23 = bitcast i8* %10 to %struct.CUstream_st*; > %24 = call i32 @cudaLaunchKernel(i8* bitcast (void ()* @_Z7kernel1v to i8*), i64 %14, i32 %16, i64 %20, i32 %22, i8** %7, i64 %9, %struct.CUstream_st* %23); > br label %25; > ; > 25: ; preds = %0; > ret void; > }; > ; > declare dso_local i32 @__cudaPopCallConfiguration(%struct.dim3*, %struct.dim3*, i64*, i8**); > ; > declare dso_local i32 @cudaLaunchKernel(i8*, i64, i32, i64, i32, i8**, i64, %struct.CUstream_st*); > ; > ; Function Attrs: argmemonly nounwind; > declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1; > ; > define dso_local void @__cuda_register_globals(i8**) {; > %2 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void ()* @_Z7kernel1v to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164697687:15359,load,load,15359,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164697687,2,['load'],['load']
Performance,"64-1.0~dev-8759abf/bin/cling"" -std=c++17; > 1.	/usr/lib/gcc/x86_64-pc-linux-gnu/12.1.0/../../../../include/c++/12.1.0/bits/fs_dir.h:43:1: parsing namespace 'std'; > Aborted (core dumped); > ```; > ; > I did have some failing tests, so perhaps they culminate into this issue.; > ; > ```; > Failed Tests (14):; > Cling :: CodeUnloading/AtExit.C; > Cling :: CodeUnloading/PCH/VTables.C; > Cling :: CodeUnloading/PCH/VTablesClingPCH.C; > Cling :: CodeUnloading/RereadFile.C; > Cling :: CodeUnloading/RunAgainstClangTestSuite/RunAgainstClangTestSuite.C; > Cling :: DynamicLibraryManager/cached_realpath.C; > Cling :: DynamicLibraryManager/callable_lib_L_AB_abs.C; > Cling :: DynamicLibraryManager/callable_lib_L_AB_order1.C; > Cling :: ErrorRecovery/Lamda.C; > Cling :: ErrorRecovery/StoredState.C; > Cling :: MultipleInterpreters/MultipleInterpreters.C; > Cling :: Pragmas/opt.C; > Cling :: Prompt/MetaProcessor/DotO.C; > Cling :: Prompt/ValuePrinter/Collections.C; > ; > ; > Testing Time: 158.54s; > Unsupported : 14; > Passed : 144; > Expectedly Failed: 13; > Failed : 14; > make[3]: *** [tools/cling/test/CMakeFiles/check-cling.dir/build.make:71: tools/cling/test/CMakeFiles/check-cling] Error 1; > make[2]: *** [CMakeFiles/Makefile2:67946: tools/cling/test/CMakeFiles/check-cling.dir/all] Error 2; > make[1]: *** [CMakeFiles/Makefile2:67953: tools/cling/test/CMakeFiles/check-cling.dir/rule] Error 2; > make: *** [Makefile:14580: check-cling] Error 2; > subprocess.CalledProcessError: Command 'make -j 4 check-cling' returned non-zero exit status 2; > ```; > ; > If this sort of thing is known, that's ok. I will hold off until things are more stable. Otherwise, if this is unexpected, let me know if you need any additional info, since the reproduction is 100% (as long as I've set -std=c++17 or higher). This assert that you hit is just to detect performance issues. It prevents from calling CodeGen with the same declaration more than once. I think you can comment it temporarily - it is harmless.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1192249515:12933,perform,performance,12933,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1192249515,1,['perform'],['performance']
Performance,64-v2:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' already loaded for 'PtEtaPhiE4D'; Module 'GenVector' already loaded for 'PtEtaPhiM4D'; Module 'Smatrix' already loaded for 'MatRepStd'; Module 'Smatrix' already loaded for 'MatRepSym'; Module 'Smatrix' already loaded for 'SVector'; Module 'MathCore' already loaded for 'R'; Module 'Smatrix' already loaded for 'SMatrix'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Core' a,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:12363,load,loaded,12363,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['load'],['loaded']
Performance,"64/libXrdCl.so.3; #2 0x00007fffdc2242a6 in XrdCl::PostMaster::PostMaster() () at /lib64/libXrdCl.so.3; #3 0x00007fffdc20f3d0 in XrdCl::DefaultEnv::GetPostMaster() () at /lib64/libXrdCl.so.3; #4 0x00007fffdc2749dd in XrdCl::FileStateHandler::~FileStateHandler() () at /lib64/libXrdCl.so.3; #5 0x00007fffdc26bdd2 in XrdCl::File::~File() () at /lib64/libXrdCl.so.3; #6 0x00007fffdc26be6d in XrdCl::File::~File() () at /lib64/libXrdCl.so.3; #7 0x00007fffdc857186 in TNetXNGFile::~TNetXNGFile() (this=0x55555ac21690, __in_chrg=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/net/netxng/src/TNetXNGFile.cxx:233; #8 0x00007fffdc8572b9 in TNetXNGFile::~TNetXNGFile() (this=0x55555ac21690, __in_chrg=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/net/netxng/src/TNetXNGFile.cxx:229; #9 0x00007ffff58222c8 in TList::Delete(char const*) (this=0x555555825ce0, option=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/core/cont/src/TList.cxx:508; #10 0x00007ffff576fcb0 in TROOT::~TROOT() (this=0x7ffff5c0c220 <ROOT::Internal::GetROOT1()::alloc>, __in_chrg=<optimized out>); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/core/base/src/TROOT.cxx:889; #11 0x00007ffff6671b0c in __run_exit_handlers () at /lib64/libc.so.6; #12 0x00007ffff6671c40 in on_exit () at /lib64/libc.so.6; #13 0x00007ffff665b49a in __libc_start_main () at /lib64/libc.so.6; #14 0x0000555555554d1e in _start (); ```. I see `TNetXNGFile::Close(const char*)` being called (if that's what you were referring to @osschar ) by; ```; #0 0x00007fffdc856bb0 in TNetXNGFile::Close(char const*) (this=0x55555ac21690); at /data/sftnight/night/LABEL/ROOT-performance-centos8-multicore/SPEC/default/V/master/root/net/netxng/src/TNetXNGFile.cxx:327; #1 0x00007ffff57707b9 in (anonymous namespace)::R__ListSlowClose(TList*) (f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767#issuecomment-891862419:1593,optimiz,optimized,1593,https://root.cern,https://github.com/root-project/root/issues/8767#issuecomment-891862419,2,"['optimiz', 'perform']","['optimized', 'performance-']"
Performance,"6434; #52 _PyFunction_Vectorcall (func=<optimized out>, stack=0x7ffc2594e0a0, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:393; #53 0x000055f908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:16240,optimiz,optimized,16240,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"646050); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #71 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x55555624ea80, pointer=0x555557646050, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #72 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555697ff60, b=..., ; pointer=0x555557646050 ""\030\320\023\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #73 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555697fd90, b=..., arr=@0x7fffffffbb10: 0x7fffffffbb08, ; compinfo=0x55555761ab08, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #74 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #75 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557646050, buffer=..., this=0x55555761b130); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #76 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557646050); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #77 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x555557646050, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #78 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555690bff0, b=..., ; pointer=0x555557646050 ""\030\320\023\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #79 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555690be20, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:16745,optimiz,optimized,16745,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,2,['optimiz'],['optimized']
Performance,"646050); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #77 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555563cff10, pointer=0x555557646050, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #78 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x55555690bff0, b=..., ; pointer=0x555557646050 ""\030\320\023\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #79 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x55555690be20, b=..., arr=@0x7fffffffbd40: 0x7fffffffbd38, ; compinfo=0x55555767aad8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #80 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #81 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555557646050, buffer=..., this=0x55555767aba0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #82 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555557646050); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #83 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555571ee160, pointer=0x555557646050, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #84 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x5555571ee160); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #85 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:18116,optimiz,optimized,18116,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,2,['optimiz'],['optimized']
Performance,"6492; > #43 0x00007fffeea69296 in cling::MultiplexInterpreterCallbacks::LibraryLoadingFailed (this=<optimized out>, errmessage=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so: undefined symbol: _Py_NoneStruct"", libStem=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", permanent=<optimized out>, resolved=<optimized out>); > at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:102; > #44 0x00007fffeea4ce05 in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:377; > #45 0x00007fffee95d74a in TCling::Load (this=0x4f0e00, filename=0xa95fab0 ""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", system=true) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3477; > #46 0x00007ffff67c18a2 in TSystem::Load (this=0x41b800, module=0xa95f920 ""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", entry=0x7fffedaa9527 """", system=true) at /home/jhahnfel/ROOT/llvm13/src/core/base/src/TSystem.cxx:1942; > #47 0x00007fffee94ca44 in TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_3::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (LibName=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", this=<optimized out>); > at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:6513; > #48 TCling::LazyFunctionCreatorAutoload (this=<optimized out>, mangled_name=""_ZNSt11char_traitsIcE6lengthEPKc"") at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:6539; > #49 0x00007fffeeacca15 in cling::IncrementalExecutor::NotifyLazyFunctionCreators (this=0x698d80, mangled_name=""_ZNSt11char_traitsIcE6lengthEPKc"") at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098026446:9691,Load,Load,9691,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098026446,1,['Load'],['Load']
Performance,64:/lib:/usr/lib/glibc-hwcaps/x86-64-v3:/usr/lib/glibc-hwcaps/x86-64-v2:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' already loaded for 'PtEtaPhiE4D'; Module 'GenVector' already loaded for 'PtEtaPhiM4D'; Module 'Smatrix' already loaded for 'MatRepStd'; Module 'Smatrix' already loaded for 'MatRepSym'; Module 'Smatrix' already loaded for 'SVector'; Module 'MathCore' already loaded for 'R'; Module 'Smatrix' already loaded for 'SMatrix'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:12297,load,loaded,12297,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['load'],['loaded']
Performance,"64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h:76:27: error: redefinition of '__is_encoded_char<char>'; inline constexpr bool __is_encoded_char<char> = true;; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.CacheParser.h'; #include <bits/fs_path.h>; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/8111f4777df89fbcfd3398ad239ef48c/opt/cmssw/el8_amd64_gcc11/cms/cmssw/CMSSW_12_6_CXXMODULE_X_2022-11-22-2300/include/el8_amd64_gcc11/cxxmodules/module.modulemap:249:10: note: FWCorePluginManager.CacheParser.h defined here; module ""CacheParser.h"" { header ""../../../src/FWCore/PluginManager/interface/CacheParser.h"" export * }; ^; /data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/filesystem:45:10: note: '/data/cmsbld/jenkins/workspace/build-any-ib/w/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/bin/../lib/gcc/x86_64-redhat-linux-gnu/11.2.1/../../../../include/c++/11.2.1/bits/fs_path.h' included multiple times, additional include site in header from module 'FWCorePluginManager.PluginInfo.h'; #include <bits/fs_path.h>; ^; /data/cms",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11765:7723,Cache,CacheParser,7723,https://root.cern,https://github.com/root-project/root/issues/11765,1,['Cache'],['CacheParser']
Performance,"64a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007af58760c5a4 in (anonymous namespace)::do_trace (sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:183; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=1) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:9806,optimiz,optimized,9806,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"68,9): error G08EB1F86: expected member name or ';' after declaration specifiers [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(268,9): error GC66A3811: expected ')' [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,5): error G28325FEB: non-static data member cannot be constexpr; did you intend to make it const? [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,24): error G68D9A705: member '_Tuple_conditional_explicit_v' declared as a template [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; [trimmed...]\tuple(302,79): error GC66A3811: expected ';' at end of declaration list [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; CUSTOMBUILD : error : Error loading the default rootcling header files. [F:\gitP\root-project\root\build_amd64\core\G__Core.vcxproj]; ```. ### Expected behavior; ROOT should build successfully, even when MSVC's STL uses Future Technology (i.e. C++20 `explicit(bool)` in C++14/17 modes). Upstream Clang has supported this scenario (with a suppressible warning) since Clang 10.0.0 shipped on 2020-03-24. Example on Compiler Explorer: https://godbolt.org/z/a75ooK6cz. The comment in `CIFactory.cpp` indicates that this was a known issue (although I was unable to find anything filed in GitHub or Jira) - is ROOT planning to upgrade its Clang/LLVM dependency, which would resolve this?. ### To Reproduce; Build ROOT with the latest MSVC STL from https://github.com/microsoft/STL, or wait for VS 2022 17.4 Preview 1 to ship (we can't provide an ETA yet, but it'll be some time). ### Setup; 1. ROOT version: `master`; 2. Operating system: Windows 11; 3. How you obtained ROOT: Built it ourselves (or tried to). ### Additional context; Supporting `explicit(bool)` will also improve build throughput, as `std::pair`, `std::tuple`, and `std::optional`'s constructor sets were nearly twice the size with the `_HAS_CONDITIONAL_EXPLICIT=0` workaround.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10875:2889,throughput,throughput,2889,https://root.cern,https://github.com/root-project/root/issues/10875,1,['throughput'],['throughput']
Performance,"6918df92d0, ; DC=0x7f68fdb16850, IsKindWeWant=..., Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/lib/Sema/MultiplexExternalSemaSource.cpp:121; #16 0x00007f690b4f0ed4 in clang::ExternalASTSource::FindExternalLexicalDecls (this=0x7f6918df92d0, DC=0x7f68fdb16850, Result=...) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/ExternalASTSource.h:185; #17 0x00007f690b4ee6e0 in clang::DeclContext::LoadLexicalDeclsFromExternalStorage (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1356; #18 0x00007f690b4ee9a0 in clang::DeclContext::decls_begin (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/lib/AST/DeclBase.cpp:1412; #19 0x00007f6906ea3bdc in clang::DeclContext::decls (this=0x7f68fdb16850) at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/DeclBase.h:2109; #20 0x00007f69070727e4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393; #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908; #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810); at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283; #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8); at /mnt/root/interpreter/llvm/src/tools/c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845#issuecomment-1791689926:12579,load,loadGlobalModuleIndex,12579,https://root.cern,https://github.com/root-project/root/issues/13845#issuecomment-1791689926,1,['load'],['loadGlobalModuleIndex']
Performance,6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kInt_t:' at line 176 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:176; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177:35: warning: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:52612,load,loaded,52612,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,6: [ OK ] RWLock.ResetRestoreStd17 (0 ms); 76: [ RUN ] RWLock.ResetRestoreSpin; 76: [ OK ] RWLock.ResetRestoreSpin (0 ms); 76: [ RUN ] RWLock.ResetRestore; 76: [ OK ] RWLock.ResetRestore (0 ms); 76: [ RUN ] RWLock.ResetRestoreTLSpin; 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms); 76: [ RUN ] RWLock.ResetRestoreTL; 76: [ OK ] RWLock.ResetRestoreTL (0 ms); 76: [ RUN ] RWLock.concurrentResetRestore; 76: [ OK ] RWLock.concurrentResetRestore (88 ms); 76: [ RUN ] RWLock.concurrentResetRestoreSpin; 76: [ OK ] RWLock.concurrentResetRestoreSpin (65 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStd; 76: [ OK ] RWLock.concurrentResetRestoreStd (79 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStd14; 76: [ OK ] RWLock.concurrentResetRestoreStd14 (67 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStd17; 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestore; 76: [ OK ] RWLock.LargeconcurrentResetRestore (5264 ms); 76: [ RUN ] RWLock.concurrentResetRestoreTL; 76: [ OK ] RWLock.concurrentResetRestoreTL (61 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL; 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4643 ms); 76: [ RUN ] RWLock.concurrentReadsAndWrites; 76: [ OK ] RWLock.concurrentReadsAndWrites (3095 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin; 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3098 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd; 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3103 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14; 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3105 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17; 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3098 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites; 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3104 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3101 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14; 76: [ OK ] RWLock.Largeconc,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:8076,concurren,concurrentResetRestoreTL,8076,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,1,['concurren'],['concurrentResetRestoreTL']
Performance,6: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestore; 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms); 76: [ RUN ] RWLock.concurrentResetRestoreTL; 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL; 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms); 76: [ RUN ] RWLock.concurrentReadsAndWrites; 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin; 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd; 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14; 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17; 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB; 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique; 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites; 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3128 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBB; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBB (3100 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique (3117 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (315 ms); 76: [ RUN ] RWLock.VeryLargeconcur,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-742071485:9979,concurren,concurrentReadsAndWritesStdTBB,9979,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-742071485,1,['concurren'],['concurrentReadsAndWritesStdTBB']
Performance,6: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique; 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestore; 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms); 76: [ RUN ] RWLock.concurrentResetRestoreTL; 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL; 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms); 76: [ RUN ] RWLock.concurrentReadsAndWrites; 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin; 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd; 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14; 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17; 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB; 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique; 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites; 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3128 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBB; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBB (3100 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique (3117 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin; 76: [ OK ] RWLock.LargeconcurrentReadsAn,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-742071485:9929,concurren,concurrentReadsAndWritesStdTBB,9929,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-742071485,1,['concurren'],['concurrentReadsAndWritesStdTBB']
Performance,"6; 4: Taking true branch in /opt/root_src/graf3d/eve7/src/REveManager.cxx:286; 5: Called C++ object pointer is null in /opt/root_src/graf3d/eve7/src/REveManager.cxx:290; /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:219:39: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: 'c' initialized here in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:315; 2: Passing value via 1st parameter 'el' in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:316; 3: Calling 'REveProjectionManager::ImportElementsRecurse' in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:316; 4: Calling 'REveProjectionManager::ShouldImport' in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:204; 5: Assuming field 'fImportEmpty' is true in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:151; 6: Taking true branch in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:151; 7: Returning the value 1 (loaded from 'kTRUE'), which participates in a condition later in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:152; 8: Returning from 'REveProjectionManager::ShouldImport' in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:204; 9: Taking true branch in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:204; 10: Assuming 'pble' is null in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:208; 11: Taking false branch in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:208; 12: Called C++ object pointer is null in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:219; /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:355:19: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming the condition is true in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:321; 2: Taking true branch in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:321; 3: 'nel' initialized here in /opt/root_src/graf3d/eve7/src/REveProjectionManager.cxx:324; 4: Passi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7531:41225,load,loaded,41225,https://root.cern,https://github.com/root-project/root/issues/7531,1,['load'],['loaded']
Performance,6_64-linux-gnu/haswell/x86_64:/lib/x86_64-linux-gnu/haswell:/lib/x86_64-linux-gnu/x86_64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu/glibc-hwcaps/x86-64-v3:/usr/lib/x86_64-linux-gnu/glibc-hwcaps/x86-64-v2:/usr/lib/x86_64-linux-gnu/tls/haswell/x86_64:/usr/lib/x86_64-linux-gnu/tls/haswell:/usr/lib/x86_64-linux-gnu/tls/x86_64:/usr/lib/x86_64-linux-gnu/tls:/usr/lib/x86_64-linux-gnu/haswell/x86_64:/usr/lib/x86_64-linux-gnu/haswell:/usr/lib/x86_64-linux-gnu/x86_64:/usr/lib/x86_64-linux-gnu:/lib/glibc-hwcaps/x86-64-v3:/lib/glibc-hwcaps/x86-64-v2:/lib/tls/haswell/x86_64:/lib/tls/haswell:/lib/tls/x86_64:/lib/tls:/lib/haswell/x86_64:/lib/haswell:/lib/x86_64:/lib:/usr/lib/glibc-hwcaps/x86-64-v3:/usr/lib/glibc-hwcaps/x86-64-v2:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded for 'PxPyPzM4D'; Module 'GenVector' al,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:11639,Load,Loading,11639,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['Load'],['Loading']
Performance,6_64:/lib/x86_64-linux-gnu/tls:/lib/x86_64-linux-gnu/haswell/x86_64:/lib/x86_64-linux-gnu/haswell:/lib/x86_64-linux-gnu/x86_64:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu/glibc-hwcaps/x86-64-v3:/usr/lib/x86_64-linux-gnu/glibc-hwcaps/x86-64-v2:/usr/lib/x86_64-linux-gnu/tls/haswell/x86_64:/usr/lib/x86_64-linux-gnu/tls/haswell:/usr/lib/x86_64-linux-gnu/tls/x86_64:/usr/lib/x86_64-linux-gnu/tls:/usr/lib/x86_64-linux-gnu/haswell/x86_64:/usr/lib/x86_64-linux-gnu/haswell:/usr/lib/x86_64-linux-gnu/x86_64:/usr/lib/x86_64-linux-gnu:/lib/glibc-hwcaps/x86-64-v3:/lib/glibc-hwcaps/x86-64-v2:/lib/tls/haswell/x86_64:/lib/tls/haswell:/lib/tls/x86_64:/lib/tls:/lib/haswell/x86_64:/lib/haswell:/lib/x86_64:/lib:/usr/lib/glibc-hwcaps/x86-64-v3:/usr/lib/glibc-hwcaps/x86-64-v2:/usr/lib/tls/haswell/x86_64:/usr/lib/tls/haswell:/usr/lib/tls/x86_64:/usr/lib/tls:/usr/lib/haswell/x86_64:/usr/lib/haswell:/usr/lib/x86_64:/usr/lib; Loading 'Smatrix' on demand for 'T'; Loading 'Cling_Runtime' on demand for 'T'; Loading 'MathCore' on demand for 'T'; Loading 'GenVector' on demand for 'Cartesian2D'; Module 'Smatrix' already loaded for 'T'; Module 'Cling_Runtime' already loaded for 'T'; Module 'MathCore' already loaded for 'T'; Module 'GenVector' already loaded for 'Polar2D'; Module 'GenVector' already loaded for 'DefaultCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector2D'; Module 'GenVector' already loaded for 'Cartesian3D'; Module 'GenVector' already loaded for 'PositionVector3D'; Module 'GenVector' already loaded for 'CylindricalEta3D'; Module 'GenVector' already loaded for 'Polar3D'; Module 'GenVector' already loaded for 'Cylindrical3D'; Module 'GenVector' already loaded for 'LocalCoordinateSystemTag'; Module 'GenVector' already loaded for 'GlobalCoordinateSystemTag'; Module 'GenVector' already loaded for 'DisplacementVector3D'; Module 'GenVector' already loaded for 'PxPyPzE4D'; Module 'GenVector' already loaded for 'LorentzVector'; Module 'GenVector' already loaded ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:11601,Load,Loading,11601,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,1,['Load'],['Loading']
Performance,"6a8f70, attrs=..., DS=0x0) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:984; #19 0x00007fffeba38af9 in clang::Parser::ParseTopLevelDecl (this=0x6a8f70, Result=..., IsFirstDecl=false) at /local2/pcanal/cint_working/rootcling/root/interpreter/llvm/src/tools/clang/lib/Parse/Parser.cpp:729; #20 0x00007fffead8c986 in cling::IncrementalParser::ParseInternal (this=0x4c5c20, input=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:930; #21 0x00007fffead8c401 in cling::IncrementalParser::Compile (this=0x4c5c20, input=..., Opts=...) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:840; #22 0x00007fffeac0cb09 in cling::Interpreter::DeclareInternal (this=0x4c22e0, input=..., CO=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1357; #23 0x00007fffeac0d647 in cling::Interpreter::loadHeader (this=0x4c22e0, filename=..., T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1495; #24 0x00007fffeac0dc30 in cling::Interpreter::loadFile (this=0x4c22e0, filename=..., allowSharedLib=true, T=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:1589; #25 0x00007fffeaea2dc4 in cling::MetaSema::actOnLCommand (this=0x532780, file=..., transaction=0x7fffffffa030) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #26 0x00007fffeaea3377 in cling::MetaSema::actOnxCommand (this=0x532780, file=..., args=..., result=0x7fffffffa810) at /local2/pcanal/cint_working/rootcling/root/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:146; #27 0x00007fffeaeb4ac7 in cling::MetaParser::isXCommand (this=0x7fffffffa350, actionResult=@0x7fffffffa34c: cling::MetaSema::AR_Success, resultValue=0x7fffffffa810); at /local2/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:9995,load,loadHeader,9995,https://root.cern,https://github.com/root-project/root/issues/13034,1,['load'],['loadHeader']
Performance,7 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int)\r\nMaybe you need to load the corresponding shared library?\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*)\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n ; - [2021-06-08T05:13:23.652Z] ghprbPullLongDescription=This fixes test failure:\r\n```\r\n 745/1157 Test #729: tutorial-multicore-mp102_readNtuplesFillHistosAndFit ................***Failed 1.55 sec\r\nProcessing /builddir/build/BUILD/root-6.25.01/tutorials/multicore/mp102_readNtuplesFillHistosAndFit.C...\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMPC1Ej' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::TTreeProcessorMP(unsigned int)\r\nMaybe you need to load the corresponding shared library?\r\nIncrementalExecutor::executeFunction: symbol '_ZN4ROOT16TTreeProcessorMP11ReplyToIdleEP7TSocket' unresolved while linking [cling interface function]!\r\nYou are probably missing the definition of ROOT::TTreeProcessorMP::ReplyToIdle(TSocket*)\r\nMaybe you need to load the corresponding shared library?\r\nCMake Error at /builddir/build/BUILD/root-6.25.01/x86_64-redhat-linux-gnu/RootTestDriver.cmake:237 (message):\r\n error code: 1\r\n```\r\n,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8366#issuecomment-856508685:1831,load,load,1831,https://root.cern,https://github.com/root-project/root/pull/8366#issuecomment-856508685,2,['load'],['load']
Performance,"70); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #166 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556a0eca0, pointer=0x555556982270, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #167 0x00007ffff7e0d00c in TStreamerBase::ReadBuffer (this=this@entry=0x555556965f40, b=..., ; pointer=0x555556982270 ""\220\335\023\366\377\177""); at /home/rembserj/spaces/master/root/src/root/core/meta/src/TStreamerElement.cxx:787; #168 0x00007ffff7a84f2e in TStreamerInfo::ReadBuffer<char**> (this=0x555556965d70, b=..., arr=@0x7fffffffd8b0: 0x7fffffffd8a8, ; compinfo=0x55555701e3e8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1343; #169 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #170 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555556982270, buffer=..., ; this=0x55555700e330) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #171 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555556982270); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #172 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556a0e300, pointer=0x555556982270, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #173 0x00007ffff7a846e4 in TStreamerInfo::ReadBuffer<char**> (this=0x555556944f10, b=..., arr=@0x7fffffffdab0: 0x7fffffffdaa8, ; compinfo=0x5555575ca9e8, first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:37803,optimiz,optimized,37803,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,2,['optimiz'],['optimized']
Performance,"705/commits/365bd46563c025a5341b48e6d199b2aa4be76c4e. I think we need to collect the prefix stack if we want to be able to filter out, for example, messages from MnLineSearch that happen inside MnMigrad, but not those that happen inside MnHesse. That's why I think the prefix stack should stay. It is also fast, since only a couple of pointers are copied around. However, there is no need to show the full stack of prefixes. By default, MnPrint could just show the prefix from the innermost scope. I added the static method `MnPrint::ShowPrefixStack(bool yes)` to toggle showing the full prefix or not. The default is off so that the messages are not too long. I also now implemented filtering of messages based on the value of the prefix stack. When no filters are set, all messages are shown. Once a filter is set, only messages that match the filter are shown. This is done with strings, using `MnPrint::AddFilter` and `MnPrint::ClearFilter` to reset the filters. Filtering works like `grep` on the full prefix, the message is shown if any of the filter strings match. To only see messages from `MnHesse`, one can do:; ```c++; MnPrint::AddFilter(""MnHesse"");; ```; To only see messages from `MnHesse` called from VariableMetrixBuilder, one can do:; ```c++; MnPrint::AddFilter(""VariableMetricBuilder:MnHesse"");; ```; To only match the beginning of the prefix string, use ""^"". For example,; ```c++; MnPrint::AddFilter(""^MnHesse"");; ```; only matches direct execution of MnHesse, but not MnHesse called by MnMigrad. It also works with substrings. To see all messages from any Gradient calculator, one can do:; ```c++; MnPrint::AddFilter(""Gradient"");; ```; to match AnalyticalGradientCalculator, Numerical2PGradientCalculator, and InitialGradientCalculator. Filtering is not implemented in a very efficient way to keep the code simple, but the performance drop is opt-in. If no filters are used, then there is no performance loss. The filters work correctly whether or not the full prefix is displayed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6705#issuecomment-733046580:2026,perform,performance,2026,https://root.cern,https://github.com/root-project/root/pull/6705#issuecomment-733046580,4,['perform'],['performance']
Performance,"74 0x00000000005878fc in IOTest_OneD_Test::TestBody (this=0x69e1f0) at /home/jhahnfel/ROOT/src/hist/histdrawv7/test/io.cxx:20; #75 0x00000000005dd396 in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) (); #76 0x00000000005c2438 in testing::Test::Run() (); #77 0x00000000005c3881 in testing::TestInfo::Run() (); #78 0x00000000005c429f in testing::TestSuite::Run() (); #79 0x00000000005d4e1c in testing::internal::UnitTestImpl::RunAllTests() (); #80 0x00000000005de156 in bool testing::internal::HandleExceptionsInMethodIfSupported<testing::internal::UnitTestImpl, bool>(testing::internal::UnitTestImpl*, bool (testing::internal::UnitTestImpl::*)(), char const*) (); #81 0x00000000005d468c in testing::UnitTest::Run() (); #82 0x00000000005e8dc7 in main (); ```; </details>. This is my current understanding of what is happening:; 1. The test wants to write a `RH1D` into a `TMemFile` (frame 74) so Cling has to load the `TClassInfo` (frame 60) and calls `RequireCompleteDeclContext` (frame 58).; 2. This ends up in `RequireCompleteType` looking for `RHist<1, double, RHistStatContent, RHistStatUncertainty>` (frames 56-59).; 3. Because it's not yet complete, Clang starts `InstantiateClassTemplateSpecialization` (frame 48), which visits the `friend` declaration for `HistFromImpl<1, double, RHistStatContent, RHistStatUncertainty>` (around frame 45).; 4. Clang does some magic for deducing the template arguments and eventually decides to ask `FunctionTemplateDecl::findSpecialization` (frame 24), that in turn begins to `loadLazySpecializationsImpl` (frame 22). *Note* that this is the place where this PR ""fixes"" lazy loading / deserialization!; 5. The `ASTReader` kicks in with `ReadDeclRecord` (frame 16).; 6. After deserlization, the `ASTReader` performs the `diagnoseOdrViolations` (frame 13), which eventually trys to `getODRHash` of `RHist::GetNDim`. Do I interpret this correctly that we are instantiati",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12062#issuecomment-1403351246:17789,load,load,17789,https://root.cern,https://github.com/root-project/root/pull/12062#issuecomment-1403351246,1,['load'],['load']
Performance,"740131/job/20963073314?pr=14472. ```; Test #951: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.06 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __cdecl ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; Fatal: (typedValue->size() % fItemSize) == 0 violated at line 1986 of `C:\ROOT-CI\src\tree\ntuple\v7\src\RField.cxx'; aborting; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Exit code 0xc0000374; ```. ```; 1258/2174 Test #960: tutorial-v7-concurrentfill.cxx ............................................................***Failed 6.42 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Windows 32bit . https://github.com/root-project/root/actions/runs/7693740131/job/20963073797?pr=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx .....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:1643,concurren,concurrentfill,1643,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,2,['concurren'],['concurrentfill']
Performance,"749:12: error: cannot bind rvalue reference of type ‘const string&&’ {aka ‘const std::__cxx11::basic_string&lt;char&gt;&&’} to lvalue of type ‘const std::__cxx11::basic_string&lt;char&gt;’ ; - [2021-04-30T14:42:55.519Z] /usr/include/c++/9/bits/stl_algo.h:749:12: error: cannot bind rvalue reference of type ‘const string&&’ {aka ‘const std::__cxx11::basic_string&lt;char&gt;&&’} to lvalue of type ‘const std::__cxx11::basic_string&lt;char&gt;’ ; - [2021-04-30T14:42:58.377Z] FAILED: tree/dataframe/test/CMakeFiles/dataframe_concurrency.dir/dataframe_concurrency.cxx.o ; - [2021-04-30T14:42:58.947Z] /usr/include/c++/9/bits/stl_algo.h:749:12: error: no match for call to ‘(ROOT::RDF::RInterface&lt;T, V&gt;::Cache(std::string_view) [with Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; std::string_view = std::experimental::fundamentals_v1::basic_string_view&lt;char&gt;]::&lt;lambda(const string&&)&gt;) (const std::__cxx11::basic_string&lt;char&gt;&)’ ; - [2021-04-30T14:42:58.947Z] /usr/include/c++/9/bits/stl_algo.h:749:12: error: cannot bind rvalue reference of type ‘const string&&’ {aka ‘const std::__cxx11::basic_string&lt;char&gt;&&’} to lvalue of type ‘const std::__cxx11::basic_string&lt;char&gt;’ ; - [2021-04-30T14:42:58.947Z] /usr/include/c++/9/bits/stl_algo.h:749:12: error: cannot bind rvalue reference of type ‘const string&&’ {aka ‘const std::__cxx11::basic_string&lt;char&gt;&&’} to lvalue of type ‘const std::__cxx11::basic_string&lt;char&gt;’ ; - [2021-04-30T14:42:59.208Z] FAILED: tree/dataframe/test/CMakeFiles/datasource_more.dir/datasource_more.cxx.o ; - [2021-04-30T14:42:59.791Z] /usr/include/c++/9/bits/stl_algo.h:749:12: error: no match for call to ‘(ROOT::RDF::RInterface&lt;T, V&gt;::Cache(std::string_view) [with Proxied = ROOT::Detail::RDF::RLoopManager; DataSource = void; std::string_view = std::experimental::fundamentals_v1::basic_string_view&lt;char&gt;]::&lt;lambda(const string&&)&gt;) (const std::__cxx11::basic_string&lt;char&gt;&)’ . And 2 more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7354#issuecomment-830143760:2563,Cache,Cache,2563,https://root.cern,https://github.com/root-project/root/pull/7354#issuecomment-830143760,1,['Cache'],['Cache']
Performance,755.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PSC-Myproxy-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' f,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:31795,load,load,31795,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesStd14; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesStd14 (9737 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesStd17; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesStd17 (9956 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesSpin; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesSpin (4470 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReads; 76: [ OK ] RWLock.VeryLargeconcurrentReads (1074 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd; 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1076 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14; 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1068 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17; 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1073 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin; 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (407 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesTL; 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3087 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3096 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (5982 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1068 ms); 76: [----------] 88 tests from RWLock (169985 ms total); 76: ; 76: [----------] 10 tests from TThreadedObject; 76: [ RUN ] TThreadedObject.CreateAndDestroy; 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms); 76: [ RUN ] TThreadedObject.Get; 76: [ OK ] TThreadedObject.Get (8 ms); 76: [ RUN ] TThreadedObject.GetAtSlot; 76: [ OK ] TThreadedObject.GetAtSlot (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked; 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotRaw; 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms); 76: [ RUN ] TThreadedObject.SetAtSlot; 76: [ OK ] TThreadedObject.SetAtSlot (0 ms); 76: [ RUN ] T,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-741456188:10584,concurren,concurrentReadsAndWritesTL,10584,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-741456188,1,['concurren'],['concurrentReadsAndWritesTL']
Performance,"7; #16 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #17 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #18 0x00007ffff7931b46 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555556c6f630, b=..., arr=..., compinfo=0x55555864f9a0,; first=first@entry=0, last=16, narr=2, eoffset=0, arrayMode=1) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #19 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #20 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #21 0x00007ffff793f598 in TStreamerInfo::ReadBuffer<char**> (this=0x555558602630, b=..., arr=@0x7fffffffd740: 0x55555862ab20,; compinfo=compinfo@entry=0x55555862ab08, first=first@entry=0, last=last@entry=1, narr=2, eoffset=0, arrayMode=3); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #22 0x00007ffff77f92ac in TStreamerInfoActions::VectorLooper::GenericRead (buf=..., start=<optimized out>, end=0x555556a3aaa0, loopconfig=<optimized out>,; config=0x55555862aaf0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1883; #23 0x00007ffff76e978c in TStreamerInfoActions::TConfiguredAction::operator() (loopconf=0x55555862a9e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:4207,optimiz,optimized,4207,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,2,['optimiz'],['optimized']
Performance,"7; 28: Returning from 'TObject::TestBit' in /opt/root_src/core/cont/src/TRefArray.cxx:213; 29: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:213; 30: Assuming the condition is false in /opt/root_src/core/cont/src/TRefArray.cxx:214; 31: 'valid' is false in /opt/root_src/core/cont/src/TRefArray.cxx:215; 32: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:215; 33: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:218; 34: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:218; 35: Assuming 'gDebug' is <= 3 in /opt/root_src/core/cont/src/TRefArray.cxx:222; 36: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:222; 37: 'valid' is true in /opt/root_src/core/cont/src/TRefArray.cxx:254; 38: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:254; 39: Returning without writing to 'uid' in /opt/root_src/core/cont/src/TRefArray.cxx:258; 40: Returning the value 1 (loaded from 'valid'), which participates in a condition later in /opt/root_src/core/cont/src/TRefArray.cxx:258; 41: Returning from 'TRefArray::GetObjectUID' in /opt/root_src/core/cont/src/TRefArray.cxx:347; 42: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:347; 43: Assigned value is garbage or undefined in /opt/root_src/core/cont/src/TRefArray.cxx:348; /opt/root_src/core/cont/src/TRefArray.cxx:386:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]; 1: Assuming 'obj' is non-null in /opt/root_src/core/cont/src/TRefArray.cxx:378; 2: Taking false branch in /opt/root_src/core/cont/src/TRefArray.cxx:378; 3: Assuming the condition is true in /opt/root_src/core/cont/src/TRefArray.cxx:379; 4: Taking true branch in /opt/root_src/core/cont/src/TRefArray.cxx:379; 5: Assuming 'i' is < field 'fSize' in /opt/root_src/core/cont/src/TRefArray.cxx:381; 6: Loop condition is true. Entering loop body in /opt/root_src/core/cont/src/TRefArray.cxx:381; 7: Assuming the condition is ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7424:19780,load,loaded,19780,https://root.cern,https://github.com/root-project/root/issues/7424,1,['load'],['loaded']
Performance,"7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267; #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977; #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=; 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902; #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326; #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528; #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522; #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343; #14 0x00007ff44814af14 in TFile::Init (this=this; entry=0x5dfd960, create=create; entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602; #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=1",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:20930,optimiz,optimized,20930,https://root.cern,https://github.com/root-project/root/issues/8931,2,['optimiz'],['optimized']
Performance,"7af5721fe520) at ./nptl/pthread_cond_wait.c:652; #5 0x00007af5873c5420 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7af5875bf870 <_PyRuntime+432>, cond=0x7af5875bf840 <_PyRuntime+384>) at Python/condvar.h:73; #6 take_gil (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval_gil.h:256; #7 0x00007af5873c59a2 in PyEval_RestoreThread (tstate=tstate; entry=0x5fe0e89423b0) at Python/ceval.c:547; #8 0x00007af58747886a in pysleep (secs=<optimized out>) at ./Modules/timemodule.c:2077; #9 time_sleep (self=<optimized out>, obj=<optimized out>) at ./Modules/timemodule.c:370; #10 0x00007af587315dcd in cfunction_vectorcall_O (func=0x7af58650bc40, args=0x7af5723a2d98, nargsf=<optimized out>, kwnames=<optimized out>) at Objects/methodobject.c:516; #11 0x00007af5872750af in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723a2d98, callable=0x7af58650bc40, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #12 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af58650bc40) at ./Include/cpython/abstract.h:123; #13 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fe6f0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #14 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4181; #15 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723a2c20, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #16 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af586cd8050, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #17 0x00007af58726d6f0 in do_call_core (kwdict=0x7af5722c2680, callargs=0x7af586cc3be0, func=0x7af586cd8040, trace_info=0x7af5721fe8d0, tstate=0x5fe0e89423b0) at Python/ceval.c:5945; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:5488,optimiz,optimized,5488,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"7f1de3cc8f60 <dl_open_worker>, args=args; entry=0x7ffc77af6c20) at ./elf/dl-error-skeleton.c:208; #19 0x00007f1de3cc934e in _dl_open (file=<optimized out>, mode=-2147483647, caller_dlopen=0x7f1de3a01a07 <TROOT::InitInterpreter()+1031>, nsid=-2, argc=1, argv=<optimized out>, env=0x7ffc77af7128) at ./elf/dl-open.c:883; #20 0x00007f1de229063c in dlopen_doit (a=a; entry=0x7ffc77af6e90) at ./dlfcn/dlopen.c:56; #21 0x00007f1de23748a8 in __GI__dl_catch_exception (exception=exception; entry=0x7ffc77af6df0, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:208; #22 0x00007f1de2374973 in __GI__dl_catch_error (objname=0x7ffc77af6e48, errstring=0x7ffc77af6e50, mallocedp=0x7ffc77af6e47, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:227; #23 0x00007f1de229012e in _dlerror_run (operate=operate; entry=0x7f1de22905e0 <dlopen_doit>, args=args; entry=0x7ffc77af6e90) at ./dlfcn/dlerror.c:138; #24 0x00007f1de22906c8 in dlopen_implementation (dl_caller=<optimized out>, mode=<optimized out>, file=<optimized out>) at ./dlfcn/dlopen.c:71; #25 ___dlopen (file=<optimized out>, mode=<optimized out>) at ./dlfcn/dlopen.c:81; #26 0x00007f1de3a01a07 in TROOT::InitInterpreter() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #27 0x00007f1de3a01bcf in ROOT::Internal::GetROOT2() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #28 0x000055a9220122ec in main (); Aborted (core dumped); ```. ***************************************************************************************************************************************; With ""-lNew"" to compile the macro, the demo macro of TApplication works fine, but the demo macro of TMapFile shows the simiar error as before, i.e., ; ```; Error in <TMapFile::TMapFile>: no memory mapped file capability available; Use rootn.exe or link application against ""-lNew""; ```. This is the latest test with newer OS version and ROOT version. It would be highly appreciated you could have a look at this after ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:8433,optimiz,optimized,8433,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,3,['optimiz'],['optimized']
Performance,"7f5b79ae0450 in (); #19 0x00007f5b8de5215f in WrapperCall(Cppyy::TCppMethod_t, size_t, void*, void*, void*) (method=94452242807424, nargs=0, args_=0x7f5b79ae01d7, self=0x55e75ccfd080, result=0x7f5b79ae01d7) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:778; #20 0x00007f5b8de527cf in CallT<unsigned char> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #21 Cppyy::CallB(long, void*, unsigned long, void*) (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at ../bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833; #22 0x00007f5b8decdc0f in GILCallB (ctxt=0x7f5b79ae0430, self=<optimized out>, method=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:69; #23 CPyCppyy::(anonymous namespace)::BoolExecutor::Execute(Cppyy::TCppMethod_t, Cppyy::TCppObject_t, CPyCppyy::CallContext*) (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:148; #24 0x00007f5b8deba4c9 in CPyCppyy::CPPMethod::ExecuteFast(void*, long, CPyCppyy::CallContext*) (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, this=<optimized out>) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #25 0x00007f5b8debd3a8 in CPyCppyy::CPPMethod::ExecuteProtected(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=0x55e75ccfd080, offset=0, ctxt=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #26 0x00007f5b8debb6fa in CPyCppyy::CPPMethod::Execute(void*, long, CPyCppyy::CallContext*) (this=this entry=0x55e760617f50, self=self entry=0x55e75ccfd080, offset=<optimized out>, ctxt=ctxt entry=0x7f5b79ae0430) at ../bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:728; #27 0x00007f5b8debc46c in CPyCppyy::CPPMetho",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9139:2332,optimiz,optimized,2332,https://root.cern,https://github.com/root-project/root/pull/9139,3,['optimiz'],['optimized']
Performance,"7f7902d71f60 <dl_open_worker>, args=args; entry=0x7ffeb2a746f0) at ./elf/dl-error-skeleton.c:208; #19 0x00007f7902d7234e in _dl_open (file=<optimized out>, mode=-2147483647, caller_dlopen=0x7f7902a01a07 <TROOT::InitInterpreter()+1031>, nsid=-2, argc=1, argv=<optimized out>, env=0x7ffeb2a74d08) at ./elf/dl-open.c:883; #20 0x00007f7901a9063c in dlopen_doit (a=a; entry=0x7ffeb2a74960) at ./dlfcn/dlopen.c:56; #21 0x00007f7901b748a8 in __GI__dl_catch_exception (exception=exception; entry=0x7ffeb2a748c0, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:208; #22 0x00007f7901b74973 in __GI__dl_catch_error (objname=0x7ffeb2a74918, errstring=0x7ffeb2a74920, mallocedp=0x7ffeb2a74917, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:227; #23 0x00007f7901a9012e in _dlerror_run (operate=operate; entry=0x7f7901a905e0 <dlopen_doit>, args=args; entry=0x7ffeb2a74960) at ./dlfcn/dlerror.c:138; #24 0x00007f7901a906c8 in dlopen_implementation (dl_caller=<optimized out>, mode=<optimized out>, file=<optimized out>) at ./dlfcn/dlopen.c:71; #25 ___dlopen (file=<optimized out>, mode=<optimized out>) at ./dlfcn/dlopen.c:81; #26 0x00007f7902a01a07 in TROOT::InitInterpreter() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #27 0x00007f7902a01bcf in ROOT::Internal::GetROOT2() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #28 0x00007f79029ae41d in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #29 0x00005572a86f2327 in main ; Aborted (core dumped); ```. *****************************************************************************************************************************; run the demo macro of TMapFile, similar error appears,; ```; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; #0 0x00007f1de22ea3ea in __GI___wait4 (pid=10442, stat_loc=stat_loc; entry=0x7ffc77af3ad8, options=options; entry=0, usage=usage; entry=0x0) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:3970,optimiz,optimized,3970,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,3,['optimiz'],['optimized']
Performance,"7f83256 in dlopen_doit (a=a@entry=0x7fffffffc8e0) at dlopen.c:66; #16 0x00007ffff7b4fb2f in __GI__dl_catch_exception (exception=exception@entry=0x7fffffffc880, operate=<optimized out>, args=<optimized out>) at dl-error-skeleton.c:196; #17 0x00007ffff7b4fbbf in __GI__dl_catch_error (objname=0x5555559ab150, errstring=0x5555559ab158, mallocedp=0x5555559ab148, operate=<optimized out>, args=<optimized out>) at dl-error-skeleton.c:215; #18 0x00007ffff7f83975 in _dlerror_run (operate=operate@entry=0x7ffff7f83200 <dlopen_doit>, args=args@entry=0x7fffffffc8e0) at dlerror.c:163; #19 0x00007ffff7f832e6 in __dlopen (file=<optimized out>, mode=<optimized out>) at dlopen.c:87; #20 0x00007fffefed6582 in cling::utils::platform::DLOpen (Path=""/home/eguiraud/ROOT/install_dbg_includepaths/lib/libvectorDict.so"", Err=0x7fffffffc990) at ../../../../../../../../root_dbg_includepaths/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; #21 0x00007fffefca7d0d in cling::DynamicLibraryManager::loadLibrary (this=0x555555a6e340, libStem=""/home/eguiraud/ROOT/install_dbg_includepaths/lib/libvectorDict.so"", permanent=true, resolved=false) at ../../../../../../../../root_dbg_includepaths/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:184; #22 0x00007fffefacfb91 in TCling::Load (this=0x555555958c90, filename=0x555558d06590 ""/home/eguiraud/ROOT/install_dbg_includepaths/lib/libvectorDict.so"", system=true) at ../../../../root_dbg_includepaths/core/metacling/src/TCling.cxx:3448; #23 0x00007ffff700d7c1 in TSystem::Load (this=0x55555597b4d0, module=0x555558d064f0 ""/home/eguiraud/ROOT/install_dbg_includepaths/lib/libvectorDict.so"", entry=0x0, system=true) at ../../../root_dbg_includepaths/core/base/src/TSystem.cxx:1940; #24 0x00007ffff711f8a1 in TUnixSystem::Load (this=0x55555597b4d0, module=0x555558d064f0 ""/home/eguiraud/ROOT/install_dbg_includepaths/lib/libvectorDict.so"", entry=0x0, system=true) at ../../../root_dbg_includepaths/core/unix/src/TUnixSystem.cxx:2789; #25 0x00007ffff6f86764 in TROO",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-769679628:5174,load,loadLibrary,5174,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-769679628,1,['load'],['loadLibrary']
Performance,"7ffcac8e070c, rslt=rslt; entry=0x7ffcac8e0710) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/pause.cxx:2331; #27 0x00007fba37e4b1c0 in TCint::ProcessLine (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:549; #28 0x00007fba37e46687 in TCint::ProcessLineSynch (this=0xe55060, line=0x2314690 "".X /home/gnp78160/18r.296691_co4_1/./RunEtaC.C"", error=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/meta/src/TCint.cxx:631; #29 0x00007fba37e91c05 in TApplication::ExecuteFile (file=<optimized out>, error=0x7ffcac8e1474, keep=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:1110; #30 0x00007fba37e92ef7 in TApplication::ProcessLine (this=0x1464300, line=<optimized out>, sync=<optimized out>, err=0x7ffcac8e1474) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/base/src/TApplication.cxx:959; #31 0x00007fba37817692 in TRint::Run (this=this; entry=0x1464300, retrn=retrn; entry=false) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/core/rint/src/TRint.cxx:417; #32 0x0000000000401ee2 in main (argc=<optimized out>, argv=0x7ffcac8e3658) at /home/gnp78160/alice/sw/SOURCES/AliRoot/aliroot5/0/ALIROOT/aliroot.cxx:152; ===========================================================. The lines below might hint at the cause of the crash.; If they do not help you then please submit a bug report at; http://root.cern.ch/bugs. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fba36ddb793 in AliAnalysisTask::SetUsed (this=0x27a9980, flag=flag; entry=true) at /home/gnp78160/alice/sw/SOURCES",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:7432,optimiz,optimized,7432,https://root.cern,https://github.com/root-project/root/issues/6977,2,['optimiz'],['optimized']
Performance,"7fffeea4cc41 in cling::DynamicLibraryManager::loadLibrary (this=0x698e90, libStem=..., permanent=<optimized out>, resolved=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:373; > #42 0x00007fffee9496fa in TCling::LibraryLoadingFailed (this=0x4f0e00, errmessage=..., libStem=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", permanent=false, resolved=false) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:6492; > #43 0x00007fffeea69296 in cling::MultiplexInterpreterCallbacks::LibraryLoadingFailed (this=<optimized out>, errmessage=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so: undefined symbol: _Py_NoneStruct"", libStem=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", permanent=<optimized out>, resolved=<optimized out>); > at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:102; > #44 0x00007fffeea4ce05 in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=true) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:377; > #45 0x00007fffee95d74a in TCling::Load (this=0x4f0e00, filename=0xa95fab0 ""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", system=true) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TCling.cxx:3477; > #46 0x00007ffff67c18a2 in TSystem::Load (this=0x41b800, module=0xa95f920 ""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppyy3_6.so"", entry=0x7fffedaa9527 """", system=true) at /home/jhahnfel/ROOT/llvm13/src/core/base/src/TSystem.cxx:1942; > #47 0x00007fffee94ca44 in TCling::LazyFunctionCreatorAutoload(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)::$_3::operator()(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const (LibName=""/home/jhahnfel/ROOT/llvm13/build-cling-clang/lib/libcppy",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1098026446:9239,load,loadLibrary,9239,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1098026446,2,"['load', 'optimiz']","['loadLibrary', 'optimized']"
Performance,"7ffff07e3cc0 in clang::ASTReader::ReadAST (this=0x555555609330, FileName=..., Type=clang::serialization::MK_PrebuiltModule, ImportLoc=..., ClientLoadCapabilities=0, Imported=0x0); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Serialization/ASTReader.cpp:4379; #24 0x00007ffff0495e2e in clang::CompilerInstance::loadModule (this=0x55555562fb60, ImportLoc=..., Path=..., Visibility=clang::Module::AllVisible, IsInclusionDirective=false); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Frontend/CompilerInstance.cpp:1710; #25 0x00007ffff117e1dd in clang::Sema::ActOnModuleImport (this=0x5555556b5680, StartLoc=..., ExportLoc=..., ImportLoc=..., Path=...); at /home/jun/dev/root/interpreter/llvm/src/tools/clang/lib/Sema/SemaModule.cpp:325; #26 0x00007fffef9655fa in cling::Interpreter::loadModule (this=0x5555555ef460, M=0x555555956a90, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:908; #27 0x00007fffef965326 in cling::Interpreter::loadModule (this=0x5555555ef460, Python Exception <class 'gdb.error'>: There is no member named _M_p.; moduleName=, complain=true) at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interpreter.cpp:872; #28 0x00007fffef85f5f6 in TClingCallbacks::findInGlobalModuleIndex (this=0x5555563ffde0, Name=..., loadFirstMatchOnly=false) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:339; #29 0x00007fffef85f7ca in TClingCallbacks::LookupObject (this=0x5555563ffde0, DC=0x5555564f80b8, Name=...) at /home/jun/dev/root/core/metacling/src/TClingCallbacks.cxx:376; #30 0x00007fffef9735b7 in cling::MultiplexInterpreterCallbacks::LookupObject (this=0x5555556b8b30, DC=0x5555564f80b8, DN=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/MultiplexInterpreterCallbacks.h:70; #31 0x00007fffef97e8f5 in cling::InterpreterExternalSemaSource::FindExternalVisibleDeclsByName (this=0x5555556b8040, DC=0x5555564f80b8, Name=...); at /home/jun/dev/root/interpreter/cling/lib/Interpreter/Interprete",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1253760320:9790,load,loadModule,9790,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1253760320,2,['load'],['loadModule']
Performance,8 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Minuit.pcm; 0.0014 ( 0.0%) 0.0000 ( 0.0%) 0.0014 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Foam.pcm; 0.0012 ( 0.0%) 0.0000 ( 0.0%) 0.0012 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/MLP.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GeomPainter.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/GuiHtml.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Genetic.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0007 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Recorder.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RootAuth.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Gviz3d.pcm; 0.0007 ( 0.0%) 0.0000 ( 0.0%) 0.0007 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SessionViewer.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SQLIO.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOT_Foundation_Stage1_NoRTTI.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Fumili.pcm; 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/SpectrumPainter.pcm; 0.0006 ( 0.0%) 0.0000 ( 0.0%) 0.0006 ( 0.0%) 0.0006 ( 0.0%) Loading /home/vagrant/workspace/root/runtim,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:6184,Load,Loading,6184,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"8 0x00007fea7ef90e56 in TFileMerger::RecursiveRemove (this=0x7ffcad78f2b0, obj=0x559367a40820) at ../io/io/src/TFileMerger.cxx:1081; #9 0x00007fea7e9ad0bf in THashList::RecursiveRemove (this=0x5593666f1840, obj=0x559367a40820) at ../core/cont/src/THashList.cxx:354; #10 0x00007fea7e8d4e14 in TROOT::RecursiveRemove (this=0x7fea7ec46740 <ROOT::Internal::GetROOT1()::alloc>, obj=0x559367a40820) at ../core/base/src/TROOT.cxx:2455; #11 0x00007fea80417f82 in ROOT::CallRecursiveRemoveIfNeeded (obj=(TObject) = {...}) at ../core/base/inc/TROOT.h:398; #12 0x00007fea7e927b18 in TNamed::~TNamed (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TNamed.cxx:45; #13 0x00007fea7e9081d5 in TDirectory::~TDirectory (this=0x559367a40820, __in_chrg=<optimized out>) at ../core/base/src/TDirectory.cxx:117; #14 0x00007fea7ef7c856 in TDirectoryFile::~TDirectoryFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TDirectoryFile.cxx:202; #15 0x00007fea7ef9673f in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #16 0x00007fea7ef96776 in TFile::~TFile (this=0x559367a40820, __in_chrg=<optimized out>) at ../io/io/src/TFile.cxx:566; #17 0x00007fea7e9288d9 in TObject::Delete (this=0x559367a40820) at ../core/base/src/TObject.cxx:178; #18 0x00007fea802bbf82 in TTree::ChangeFile (this=0x559368ca6c20, file=0x559367a40820) at ../tree/tree/src/TTree.cxx:2813; #19 0x00007fea802bf66e in TTree::CopyEntries (this=0x559368ca6c20, tree=0x559368ca7a30, nentries=53446198, option=0x7ffcad78e7a1 "" fast"", needCopyAddresses=true) at ../tree/tree/src/TTree.cxx:3567; #20 0x00007fea802c825a in TTree::Merge (this=0x559368ca6c20, li=0x7ffcad78e560, info=0x7ffcad78e780) at ../tree/tree/src/TTree.cxx:6940; #21 0x00007fea8020066b in ROOT::merge_TTree (obj=0x559368ca6c20, coll=0x7ffcad78e560, info=0x7ffcad78e780) at tree/tree/G__Tree.cxx:4209; #22 0x00007fea7ef8e60d in TFileMerger::MergeOne (this=0x7ffcad78f2b0, target=0x559367a40820, sourcelist=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10102:4318,optimiz,optimized,4318,https://root.cern,https://github.com/root-project/root/issues/10102,1,['optimiz'],['optimized']
Performance,"8, options=options; entry=0) at waitpid.c:38; #2 0x00007ff0e8a7035b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007ff0e930771d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007ff0e9305774 in TUnixSystem::DispatchSignals (this=0x691200, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:13509,optimiz,optimized,13509,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"8,24): error G08EB1F86: expected member name or ';' after declaration specifiers [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ~~~~~~~~~~~~~~~~~~ ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility(218,24): error GC66A3811: expected ')' [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\utility:218:23: note: to match this '('; constexpr explicit(!is_convertible_v<const _Other1&, _Ty1> || !is_convertible_v<const _Other2&, _Ty2>); ^; In file included from input_line_5:1:; In file included from C:/Users/sftnight/build/release/include\Rtypes.h:191:; In file included from C:/Users/sftnight/build/release/include/TGenericClassInfo.h:21:; In file included from C:/Users/sftnight/build/release/include/TSchemaHelper.h:17:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\string:11:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xstring:14:; In file included from C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xmemory:16:; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility(63,31): error G959205E0: '_To' does not refer to a value [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; return __builtin_bit_cast(_To, _Val);; ^; C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.27.29110\\include\xutility:51:17: note: declared here; template <class _To, class _From,; ^; CUSTOMBUILD : error : Error loading the default header files. [C:\Users\sftnight\build\release\core\G__Core.vcxproj]; ```; To be checked/removed after the upgrade of LLVM & Clang",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6143:3681,load,loading,3681,https://root.cern,https://github.com/root-project/root/pull/6143,2,['load'],['loading']
Performance,8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f23888f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ffc3d59b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certi,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:12548,load,load,12548,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:2473:14; #9 0x7f8857bc179d in TObjArray::Streamer(TBuffer&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/cont/src/TObjArray.cxx:468:29; #10 0x7f8851b7c3bd in TClass::Streamer(void*, TBuffer&, TClass const*) const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/inc/TClass.h:610:7; #11 0x7f8851b7c3bd in TKey::ReadObjectAny(TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TKey.cxx:1108:11; #12 0x7f8851a61884 in TDirectoryFile::GetObjectChecked(char const*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TDirectoryFile.cxx:1111:25; #13 0x7f88400d8d51 in void TDirectory::GetObject<TObjArray>(char const*, TObjArray*&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/base/inc/TDirectory.h:214:18; #14 0x7f88400d8d51 in TCling::LoadPCMImpl(TFile&) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1769:12; #15 0x7f88400dbc28 in TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:1874:4; #16 0x7f88400e2139 in TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/metacling/src/TCling.cxx:2299:7; #17 0x7f8857aa5a33 in TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_trai",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:3799,Load,LoadPCMImpl,3799,https://root.cern,https://github.com/root-project/root/issues/12715,1,['Load'],['LoadPCMImpl']
Performance,"8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime.; -- And then fallback to: 'c++'; -- Performing Test CXX_HAS_fno_rtti; -- Performing Test CXX_HAS_fno_rtti - Success; -- Performing Test C_HAS_Wno_strict_overflow; -- Performing Test C_HAS_Wno_strict_overflow - Success; -- Performing Test C_HAS_Wno_maybe_uninitialized; -- Performing Test C_HAS_Wno_maybe_uninitialized - Success; -- Performing Test C_HAS_Wno_parentheses_equality; -- Performing Test C_HAS_Wno_parentheses_equality - Success; -- Looking for m; -- Looking for m - not found; -- Use SSL API VERSION 1.1 for civetweb; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG; -- Performing Test GCC_HAS_BIDI_CHARS_FLAG - Success; -- Distributed RDataFrame enabled; -- Looking for RapidYAML (used by RooFit); -- Could NOT find ryml (missing: RYML_LIBRARY RYML_INCLUDE_DIR); -- RapidYAML not found, only compiling RooFit with nlohmann-json parser; -- Performing Test found_setresuid; -- Performing Test found_setresuid - Success; -- Performing Test found_attribute_always_inline; -- Performing Test found_attribute_always_inline - Success; -- Performing Test has_found_attribute_noinline; -- Performing Test has_found_attribute_noinline - Success; -- Performing Test found_hardware_interference_size; -- Performing Test found_hardware_interference_size - Failed; Running /afs/cern.ch/user/b/bellenot/temp/root/build/unix/compiledata.sh; Making /afs/cern.ch/user/b/bellenot/temp/root-build.foo/ginclude/compiledata.h; -- ROOT Configuration. System Linux-4.18.0-513.5.1.el8_9.x86_64; Processor 10 core Intel Core Processor (Broadwell, no TSX, IBRS) (x86_64); Build type Release; Install path /usr/local; Compiler GNU 8.5.0; Compiler flags:; C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -O3 -DNDEBUG; C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -O3 -DNDEBUG; Linker flags:; Executable -rdynamic; Module; Shared -",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14159#issuecomment-1838972446:10515,Perform,Performing,10515,https://root.cern,https://github.com/root-project/root/issues/14159#issuecomment-1838972446,10,['Perform'],['Performing']
Performance,"80733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4181; #49 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c1a40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #50 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa5137e570, tstate=0x55b069159680) at /usr/local/src/conda/p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:7355,optimiz,optimized,7355,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"80796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):; #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872; #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232; #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141; #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158; #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185; #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this; entry=0x162d700, durationInMs=durationInMs; entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:5765,optimiz,optimized,5765,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,816/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37816/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.multicore.roottest_root_multicore_generate_imt_tree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37816/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_generate_imt_tree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37816/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37816/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.multicore.roottest_root_multicore_ttree_read_imt](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37816/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_ttree_read_imt/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37816/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_3](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37816/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_3/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/37816/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/). And 58 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2495#issuecomment-414958726:1542,cache,cache,1542,https://root.cern,https://github.com/root-project/root/pull/2495#issuecomment-414958726,3,['cache'],['cache']
Performance,"82355d0>, _started=<Event(_cond=<Condition(_lock=<_thread.lock at remote 0x7faec0dc70f0>, acquire=<built-in method acquire of _thread.lock object at remote 0x7faec0dc70f0>, release=<built-in method release of _thread.lock object at remote 0x7faec0dc70f0>, _waiters=<collections.deque at remote 0x7faec0dcd340>) at remote 0x7faec0dc7250>, _flag=True) at remote 0x7faec0dc7fa0>, _is_stopped=False, _initialized=True, _stderr=<_io.TextIOWrapper at remote 0x7faec0ecfe10>, _invoke_excepthook=<function at remote 0x7faea81...(truncated), tstate=0x389e880) at ./Include/internal/pycore_ceval.h:40; #64 function_code_fastcall (tstate=0x389e880, co=<optimized out>, args=<optimized out>, nargs=0x1, globals=<optimized out>) at Objects/call.c:330; #65 0x00007faec088b68c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=0x1, args=0x7faea81b7e68, callable=<function at remote 0x7faeaa8ac0d0>, tstate=0x389e880) at ./Include/cpython/abstract.h:118; #66 method_vectorcall (method=<optimized out>, args=0x7faec0f28058, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #67 0x00007faec0a12809 in t_bootstrap (boot_raw=0x7faea8235510) at ./Modules/_threadmodule.c:1040; #68 0x00007faec09b9e27 in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:245; #69 0x00007faec0179ea5 in start_thread () from /lib64/libpthread.so.0; #70 0x00007faebf799b0d in clone () from /lib64/libc.so.6. ===========================================================. Second canvas has been created, but I should have gotten seg. fault at this point.Exception in thread Thread-1:; Traceback (most recent call last):; File ""/cvmfs/ilc.desy.de/key4hep/spackages/python/3.9.10/x86_64-centos7-gcc11.2.0-opt/7j5vqgmqodwjxxe2ssf42zxb2uqxi374/lib/python3.9/threading.py"", line 973, in _bootstrap_inner; self.run(); File ""/cvmfs/ilc.desy.de/key4hep/spackages/python/3.9.10/x86_64-centos7-gcc11.2.0-opt/7j5vqgmqodwjxxe2ssf42zxb2uqxi374/lib/python3.9/threading.py"", line 910, in run; self._target(*self._args, **self._k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:52758,optimiz,optimized,52758,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,2,['optimiz'],['optimized']
Performance,"82355d0>, _started=<Event(_cond=<Condition(_lock=<_thread.lock at remote 0x7faec0dc70f0>, acquire=<built-in method acquire of _thread.lock object at remote 0x7faec0dc70f0>, release=<built-in method release of _thread.lock object at remote 0x7faec0dc70f0>, _waiters=<collections.deque at remote 0x7faec0dcd340>) at remote 0x7faec0dc7250>, _flag=True) at remote 0x7faec0dc7fa0>, _is_stopped=False, _initialized=True, _stderr=<_io.TextIOWrapper at remote 0x7faec0ecfe10>, _invoke_excepthook=<function at remote 0x7faea81...(truncated), tstate=0x389e880) at ./Include/internal/pycore_ceval.h:40; #64 function_code_fastcall (tstate=0x389e880, co=<optimized out>, args=<optimized out>, nargs=0x1, globals=<optimized out>) at Objects/call.c:330; #65 0x00007faec088b68c in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=0x1, args=0x7faea81b7e68, callable=<function at remote 0x7faeaa8ac0d0>, tstate=0x389e880) at ./Include/cpython/abstract.h:118; #66 method_vectorcall (method=<optimized out>, args=0x7faec0f28058, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #67 0x00007faec0a12809 in t_bootstrap (boot_raw=0x7faea8235510) at ./Modules/_threadmodule.c:1040; #68 0x00007faec09b9e27 in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:245; #69 0x00007faec0179ea5 in start_thread () from /lib64/libpthread.so.0; #70 0x00007faebf799b0d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7faec0f64740 (LWP 34876) ""python3""):; #0 0x00007faec017dde2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0; #1 0x00007faec096a8d7 in PyCOND_TIMEDWAIT (us=<optimized out>, mut=0x7faec0d7e030 <_PyRuntime+432>, cond=0x7faec0d7e000 <_PyRuntime+384>) at Python/condvar.h:73; #2 take_gil (tstate=tstate; entry=0xbea650) at Python/ceval_gil.h:247; #3 0x00007faec083bfd3 in eval_frame_handle_pending (tstate=0xbea650) at Python/ceval.c:888; #4 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:1404; #5 0",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:17973,optimiz,optimized,17973,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,2,['optimiz'],['optimized']
Performance,"8270) at /home/b/bendavid/rootdev19/root/core/metacling/src/TClingCallFunc.cxx:1120; #11 0x00007fb1c5635ce0 in TClingCallFunc::IFacePtr (this=0x555ecdd48270) at /home/b/bendavid/rootdev19/root/core/metacling/src/TClingCallFunc.cxx:2304; #12 0x00007fb1ca95d7ab in GetCallFunc (method=93865664483216) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:727; #13 WrapperCall (method=93865664483216, nargs=1, args_=0x7ffd174f83d0, self=0x7fb1ca9130a0 <ROOT::Internal::GetROOT1()::alloc>, result=0x7ffd174f8140); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:769; #14 0x00007fb1ca95ded0 in Cppyy::CallR (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:846; #15 0x00007fb1ca9d9cc8 in GILCallR (ctxt=0x7ffd174f83b0, self=<optimized out>, method=<optimized out>); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:78; #16 CPyCppyy::(anonymous namespace)::InstancePtrExecutor::Execute (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7ffd174f83b0); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:579; #17 0x00007fb1ca9c5269 in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, ; this=<optimized out>) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #18 0x00007fb1ca9c8148 in CPyCppyy::CPPMethod::ExecuteProtected (this=this@entry=0x555ecd969460, self=0x7fb1ca9130a0 <ROOT::Internal::GetROOT1()::alloc>, offset=0, ; ctxt=0x7ffd174f83b0) at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #19 0x00007fb1ca9c649a in CPyCppyy::CPPMethod::Execute (this=this@entry=0x555ecd969460, self=self@entry=0x7fb1ca",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010779015:6050,optimiz,optimized,6050,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010779015,2,['optimiz'],['optimized']
Performance,82; 54: Called C++ object pointer is null in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:276; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445:4: warning: Value stored to 'type' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'type' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:445; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446:4: warning: Value stored to 'is_link' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'is_link' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:446; /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741:10: warning: Value stored to 'item' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'item' is never read in /opt/root_src/gui/gui/src/TGFileBrowser.cxx:741; /opt/root_src/gui/gui/src/TGFileDialog.cxx:63:1: warning: non-POD static (TGFileInfo) [clazy-non-pod-global-static]; /opt/root_src/gui/gui/src/TGFont.cxx:849:11: warning: Access to field 'fY' results in a dereference of a null pointer (loaded from variable 'chunk') [clang-analyzer-core.NullDereference]; 1: Assuming 'numChars' is >= 0 in /opt/root_src/gui/gui/src/TGFont.cxx:681; 2: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:681; 3: Loop condition is true. Entering loop body in /opt/root_src/gui/gui/src/TGFont.cxx:706; 4: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:707; 5: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:707; 6: Loop condition is false. Execution continues on line 727 in /opt/root_src/gui/gui/src/TGFont.cxx:710; 7: 'start' is >= 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:728; 8: Taking false branch in /opt/root_src/gui/gui/src/TGFont.cxx:728; 9: 'start' is equal to 'special' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 10: Left side of '&&' is true in /opt/root_src/gui/gui/src/TGFont.cxx:741; 11: Assuming 'special' is < 'end' in /opt/root_src/gui/gui/src/TGFont.cxx:741; 12: Taking true branch in /opt/root_src/gui/gui/src/TGFont.cxx:,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7533:18761,load,loaded,18761,https://root.cern,https://github.com/root-project/root/issues/7533,1,['load'],['loaded']
Performance,"8510). The inital check for the compiler was. enable_language(Fortran OPTIONAL). This does not set the the CMAKE_Fortran_COMPILER variable (or sets it to; NOTFOUND) if a Fortran compiler is not found, but still marks the; Fortran language as being enabled for the current project. This broke; the settings for BLAS/LAPACK. The second attempt (bb40ede3941d0b4f2db4e23d5f9c32b221eb5fac) was to use. check_language(Fortran); if(CMAKE_Fortran_COMPILER); enable_language(Fortran); endif(). This does not find the Fortran compiler corresponding to the used C++; compiler. Cmake has some mechanism that if the C++ compiler is a GNU; compiler, it would also prefer GNU Fortran compilers. However, as the; check_language test is running in a separate process it would not know; about the C++ compiler. This is a problem in a set-up with executables; like:. /opt/newgcc/g++; /opt/newgcc/gfortran; /usr/bin/f95 (link to gfortran); /usr/bin/g++; /usr/bin/gfortran. Two versions of GCC are installed, one by the system, and one more; recent version in a separate directory. The directory to the newer; version is in the environment variable PATH before /usr/bin. In this; case the test from above (second attempt) would use /usr/bin/f95 as the; Fortran compiler, because Cmake usually prefers the executable f95 over; gfortran. This causes problems in case the two Fortran compilers are not; ABI compatible, i.e., gfortran 4.4 installed by the system vs. 4.9 as a; slightly more recent version. A simple enable_language (as in the; initial version) would correctly use /opt/newgcc/gfortran in this case.; This had to be worked around by setting the environment variable; FC=gfortran before running Cmake. To fix this, check_language is only used to determine whether a Fortran; compiler exists at all. If a compiler is found, then the; CMAKE_Fortran_COMPILER variable is reset, and enable_language again; performs a search of the compiler, this time prefering a compiler from; the same vendor as the C++ compiler.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/891:2303,perform,performs,2303,https://root.cern,https://github.com/root-project/root/pull/891,1,['perform'],['performs']
Performance,"86f4-3679424e4d17.png). ### To Reproduce; - `TGeoManager* myGeo = new TGeoManager();`; - `myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml"")`; - `myGeo->CheckOverlaps()`; - `myGeo->PrintOverlaps()`. ```; 14:51:08 wdconinc@menelaos ~/EIC/detectors/epic (testcase *$%=) $ root -l ; root [0] TGeoManager* myGeo = new TGeoManager();; root [1] myGeo->Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Info in <TGeoManager::SetTopVolume>: Top volume is worldVOL. Master volume is worldVOL; Info in <TGeoNavigator::BuildCache>: --- Maximum geometry depth set to 100; Info in <TGeoManager::CheckGeometry>: Fixing runtime shapes...; Info in <TGeoManager::CheckGeometry>: ...Nothing to fix; Info in <TGeoManager::CloseGeometry>: Counting nodes...; Info in <TGeoManager::Voxelize>: Voxelizing...; Info in <TGeoManager::CloseGeometry>: Building cache...; Info in <TGeoManager::CountLevels>: max level = 1, max placements = 2; Info in <TGeoManager::CloseGeometry>: 3 nodes/ 2 volume UID's in Geometry imported from GDML; Info in <TGeoManager::CloseGeometry>: ----------------modeler ready----------------; (TGeoManager *) 0x556b33e2bc60; root [2] myGeo->CheckOverlaps(); Info in <TGeoNodeMatrix::CheckOverlaps>: Checking overlaps for worldVOL and daughters within 0.1; Check overlaps: [==========] 3 [100.00 %] 00:00 ; Info in <TGeoNodeMatrix::CheckOverlaps>: Number of illegal overlaps/extrusions : 1. root [3] myGeo->PrintOverlaps(); === Overlaps for Default ===; = Overlap ov00000: worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_0 overlapping worldVOL/PV-LV_HCAL_Chimney_Sector_Half_Plate__Meshed_1 ovlp=7.60311; ```. ### Setup; ROOT 6.26.06 on linux ubuntu 22.10, but using spack installer with following features enabled (i.e. no vecgeom):; ```; cxx17 asimage builtin_afterimage builtin_clang builtin_cling builti",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11781:1654,cache,cache,1654,https://root.cern,https://github.com/root-project/root/issues/11781,1,['cache'],['cache']
Performance,8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:102; 12: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 13: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:104; 14: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:105; 15: Null pointer value stored to 'helper' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:106; 16: Control jumps to 'case kIsEnum:' at line 110 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:108; 17: Control jumps to 'case kDouble32_t:' at line 127 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:111; 18: Access to field 'dbl' results in a dereference of a null pointer (loaded from variable 'helper') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:128; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:139:13: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 3: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:243; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:246; 6: Calling 'TEmulatedMapProxy::ReadMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:247; 7: Assuming the condition is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 8: Left side of '&&' is false in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:94; 9: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:96; 10: 'idx' is < 'nElements' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:39265,load,loaded,39265,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,8b7.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/163af95c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-Root-2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_po,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:7782,load,load,7782,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2/root-debug2/./test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:3520; #60 0x00007f54c8f55d48 in TApplication::ExecuteFile (file=<optimized out>, error=0x7fffe1b0c04c, keep=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1591; #61 0x00007f54c8f56a7d in TApplication::ProcessFile (keep=<optimized out>, error=0x7fffe1b0c04c, file=0x7fffe1b0c053 ""test.cpp++"", this=0x55ed24b82e70) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1463; #62 TApplication::ProcessLine (this=0x55ed24b82e70, line=<optimized out>, sync=<optimized out>, err=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TApplication.cxx:1436; #63 0x00007f54c943d752 in TRint::ProcessLineNr (this=0x55ed24b82e70, filestem=<optimized out>, line=0x7fffe1b0c050 "".x test.cpp++"", error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:795; #64 0x00007f54c943fe5e in TRint::Run (this=this; entry=0x55ed24b82e70, retrn=retrn; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/rint/src/TRint.cxx:446; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:14620,optimiz,optimized,14620,https://root.cern,https://github.com/root-project/root/issues/9595,2,['optimiz'],['optimized']
Performance,"908881d3c in _PyObject_FastCallDictTstate (kwargs=0x0, nargsf=3, args=0x7ffc2594e0a0, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:141; #54 _PyObject_Call_Prepend (kwargs=0x0, args=<optimized out>, obj=<optimized out>, callable=0x7f1094a5e840, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:482; #55 slot_tp_init (self=<optimized out>, args=<optimized out>, kwds=0x0) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:7855; #56 0x000055f908849893 in type_call (kwds=0x0, args=0x7f101f610e40, type=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/typeobject.c:1103; #57 _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x55f90adab070, args=<optimized out>, nargs=<optimized out>, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #58 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #59 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012a80, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #60 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f101f5fad40, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #61 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e164d50, globals=<optimized out>, locals=0x7f10202aa000) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #62 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f10202aa000, globals=0x7f10202aa000, source=0x55f90e164d50) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #63 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:16411,optimiz,optimized,16411,https://root.cern,https://github.com/root-project/root/issues/15970,6,['optimiz'],['optimized']
Performance,92/testReport/projectroot.tree.dataframe/test/gtest_tree_dataframe_test_dataframe_helpers/); - [projectroot.roottest.cling.dict.ROOT-9112.roottest_cling_dict_ROOT_9112_ROOT9112](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97392/testReport/projectroot.roottest.cling.dict/ROOT-9112/roottest_cling_dict_ROOT_9112_ROOT9112/); - [projectroot.roottest.python.cpp.roottest_python_cpp_cpp](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97392/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_cpp/); - [projectroot.roottest.python.cpp.roottest_python_cpp_advanced](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97392/testReport/projectroot.roottest.python/cpp/roottest_python_cpp_advanced/); - [projectroot.roottest.root.core.roottest_root_core_execStatusBitsCheck](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97392/testReport/projectroot.roottest.root/core/roottest_root_core_execStatusBitsCheck/); - [projectroot.roottest.root.html.roottest_root_html_runMakeIndex](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97392/testReport/projectroot.roottest.root/html/roottest_root_html_runMakeIndex/); - [projectroot.roottest.root.io.emulated.roottest_root_io_emulated_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97392/testReport/projectroot.roottest.root.io/emulated/roottest_root_io_emulated_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97392/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.selectorreader.roottest_root_tree_selectorreader_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97392/testReport/projectroot.roottest.root.tree/selectorreader/roottest_root_tree_selectorreader_make/). And 10 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-701086776:4278,cache,cache,4278,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-701086776,2,['cache'],['cache']
Performance,9214e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/1149214e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/87429ba3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/30ffc224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/295adc19.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/6f071272.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DFN-GridGermany-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/REUNA-ca.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/18bc5b05.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TRGrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e18bfb83.signing_policy' from CU,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:31985,load,load,31985,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"9246784 in _dl_catch_error () from /lib64/ld-linux-x86-64.so.2; #42 0x00007f54c86a74ed in _dlerror_run () from /lib64/libdl.so.2; #43 0x00007f54c86a6f81 in dlopen. GLIBC_2.2.5 () from /lib64/libdl.so.2; #44 0x00007f54c1c340c8 in cling::utils::platform::DLOpen (Path=..., Err=Err; entry=0x7fffe1b099d0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; #45 0x00007f54c1b107fa in cling::DynamicLibraryManager::loadLibrary (this=this; entry=0x55ed24bf4fb0, libStem=..., permanent=permanent; entry=false, resolved=resolved; entry=true) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:372; #46 0x00007f54c1b246d4 in cling::Interpreter::loadLibrary (this=<optimized out>, filename=..., lookup=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/basic_string.h:940; #47 0x00007f54c1b285ec in cling::Interpreter::loadFile (this=0x55ed24bb2ca0, filename=..., allowSharedLib=<optimized out>, T=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/Interpreter/Interpreter.cpp:1581; #48 0x00007f54c1c1a340 in cling::MetaSema::actOnLCommand (this=0x55ed255f9100, file=..., transaction=transaction; entry=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; #49 0x00007f54c1c271ca in cling::MetaParser::isLCommand (actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success, this=0x7fffe1b09d30) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; #50 cling::MetaParser::isLCommand (this=0x7fffe1b09d30, actionResult=; 0x7fffe1b09ce0: cling::MetaSema::AR_Success) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:135; #51 0x00007f54c1c28f04 in cling::MetaParser::isCommand (this=0x7fffe1b09d30, actionResult=; 0x7fff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:11268,load,loadFile,11268,https://root.cern,https://github.com/root-project/root/issues/9595,2,['load'],['loadFile']
Performance,"95] [-Wrestrict] ; - /mnt/build/workspace/root-pullrequests-build/root/net/rootd/src/rootd.cxx:761:21: warning: ‘%lu’ directive writing between 1 and 20 bytes into a region of size between 0 and 8191 [-Wformat-overflow=] ; - /mnt/build/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:696:48: warning: ‘%s’ directive output may be truncated writing up to 1024 bytes into a region of size 64 [-Wformat-truncation=] ; - /mnt/build/workspace/root-pullrequests-build/root/proof/proofd/src/XrdProofdProtocol.cxx:527:45: warning: ‘void* memset(void*, int, size_t)’ clearing an object of non-trivial type ‘class XrdSecEntity’; use assignment or value-initialization instead [-Wclass-memaccess] . And 179 more. ### Failing tests:; - [projectroot.roottest.root.dataframe.roottest_root_dataframe_writeFcc](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_writeFcc/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.cling.dict.ROOT-9185.roottest_cling_dict_ROOT_9185_ROOT9185](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.cling.dict/ROOT-9185/roottest_cling_dict_ROOT_9185_ROOT9185/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_templateRecursionLimit](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_templateRecursionLimit/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_missingBranches](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/34164/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_missingBranches/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_test_listFilesCtor](ht",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1851#issuecomment-408947574:2724,cache,cache,2724,https://root.cern,https://github.com/root-project/root/pull/1851#issuecomment-408947574,2,['cache'],['cache']
Performance,"96170, pointer=0x109986ba0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TStreamerInfo.h:209; #41 0x00007fffa8f0d858 in TClass::ReadBuffer (this=<optimized out>, b=..., pointer=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6758; #42 0x00007fffa98ea688 in TMVA::Experimental::SOFIE::RModel::Streamer (R(bool)=..., this=0x109986ba0) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:646; #43 TMVA::Experimental::SOFIE::RModel::Streamer (this=0x109986ba0, R(bool)=...) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:644; #44 0x00007fffa8f0aa30 in TClass::StreamerTObject (pThis=0x10a596170, object=0x109986ba0, b=...) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6797; #45 0x00007fffa93abef0 in TClass::Streamer (onfile_class=0x0, b=..., obj=0x109986ba0, this=0x10a596170) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, expectedClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /builddir/build/BUILD/root-6.28.00/io/io/src/TDirectoryFile.cxx:1111; #48 0x0000000108cd56c0 in TDirectory::GetObject<TMVA::Experimental::SOFIE::RModel> (ptr=<synthetic pointer>: <optimized out>, namecycle=0x108cd6d08 ""model"", this=0x7ffff83eb1c8) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:10775,optimiz,optimized,10775,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:132; #13 llvm::orc::LLJIT::lookup (UnmangledName=..., this=0x10993f430) at /builddir/build/BUILD/root-6.28.00/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:137; #14 cling::IncrementalJIT::getSymbolAddress (this=0x109984c70, Name=..., IncludeHostSymbols=<optimized out>) at /builddir/build/BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:583; #15 0x00007fffa3050770 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x1099ceb50, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #16 0x00007fffa2f9fee4 in cling::Interpreter::compileFunction (this=0x10994ea90, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #17 0x00007fffa2efea78 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #18 0x00007fffa2f067e8 in TClingCallFunc::make_ctor_wrapper (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1215; #19 0x00007fffa2f07164 in TClingCallFunc::ExecDefaultConstructor (this=0x7ffff83e96e0, info=0x10a9e3870, kind=<optimized out>, type_name="""", address=0x0, nary=0) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1895; #20 0x00007fffa2f1838c in TClingClassInfo::New (this=0x10a9e3870, normCtxt=...) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingClassInfo.cxx:1098; #21 0x00007fffa2e2cdf4 in TCling::ClassInfo_New (this=<optimized out>, cinfo=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:8290; #22 0x00007fffa8f0be24 in TClass::NewObject (this=0x10a9218e0, defConstructor=<optimized out>, quiet=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:5222,optimiz,optimized,5222,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"998 <_PyRuntime+166328>, base=<optimized out>, callable=0x7f1095b4fce0, vargs=0x7ffc2594ee90) at /usr/local/src/conda/python-3.11.9/Objects/call.c:819; #90 0x000055f90889837a in PyObject_CallMethodObjArgs (obj=0x0, name=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/call.c:878; #91 0x000055f90878fbff in import_find_and_load (abs_name=0x7f10202a9e70, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Python/import.c:1748; #92 PyImport_ImportModuleLevelObject (name=0x7f10202a9e70, globals=<optimized out>, locals=<optimized out>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.11.9/Python/import.c:1847; #93 0x000055f90885d817 in import_name (level=0x55f908bbd328 <_PyRuntime+840>, fromlist=0x55f908ba80c0 <_Py_NoneStruct>, name=0x7f10202a9e70, frame=0x7f1096012370, tstate=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:7422; #94 _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:3946; #95 0x000055f90890ea8d in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012370, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #96 _PyEval_Vector (tstate=0x55f908be5998 <_PyRuntime+166328>, func=0x7f1020253600, locals=<optimized out>, args=0x0, argcount=0, kwnames=0x0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:6434; #97 0x000055f90890e11f in PyEval_EvalCode (co=0x55f90e695260, globals=<optimized out>, locals=0x7f1095bfacc0) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:1148; #98 0x000055f9089256ee in builtin_exec_impl (module=<optimized out>, closure=<optimized out>, locals=0x7f1095bfacc0, globals=0x7f1095bfacc0, source=0x55f90e695260) at /usr/local/src/conda/python-3.11.9/Python/bltinmodule.c:1077; #99 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>, kwnames=<optimized",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:23475,optimiz,optimized,23475,https://root.cern,https://github.com/root-project/root/issues/15970,6,['optimiz'],['optimized']
Performance,"99; #138 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #139 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519cdb70, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #140 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa510cbbb0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #141 PyImport_ImportModuleLevelObject (name=0x7ffa510cbbb0, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #142 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa510cbbb0, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #143 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #144 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c2040, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #145 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #146 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa51255160, globals=0x7ffa51237840, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #147 0x000055b06812bc1f in builtin_exec_impl (module=<optimized out>, locals=0x7ffa51237840, globals=0x7ffa51237840, source=0x7ffa51255160) at /usr/local/src/conda/python-3.10.4/Python/bltinmodule.c:1003; #148 builtin_exec (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:25709,optimiz,optimized,25709,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"99; #184 object_vacall (tstate=0x55b069159680, base=<optimized out>, callable=0x7ffa512fb370, vargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:734; #185 0x000055b06808e5e8 in _PyObject_CallMethodIdObjArgs (obj=0x7fff519ce960, name=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:825; #186 0x000055b06808deab in import_find_and_load (abs_name=0x7ffa5125c130, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/import.c:1521; #187 PyImport_ImportModuleLevelObject (name=0x7ffa5125c130, globals=<optimized out>, locals=<optimized out>, fromlist=0x55b0682d3800 <_Py_NoneStruct>, level=0) at /usr/local/src/conda/python-3.10.4/Python/import.c:1622; #188 0x000055b068071980 in import_name (level=0x7ffa512980d0, fromlist=0x55b0682d3800 <_Py_NoneStruct>, name=0x7ffa5125c130, f=<optimized out>, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5992; #189 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:3695; #190 0x000055b068124b92 in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512c65c0, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/internal/pycore_ceval.h:46; #191 _PyEval_Vector (tstate=0x55b069159680, con=<optimized out>, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #192 0x000055b068124ad7 in PyEval_EvalCode (co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:1134; #193 0x000055b068157709 in run_eval_code_obj (tstate=0x55b069159680, co=0x7ffa5124d790, globals=0x7ffa511e9700, locals=0x7ffa511e9700) at /usr/local/src/conda/python-3.10.4/Python/pythonrun.c:1291; #194 0x000055b0681523f4 in run_mod (mod=<optimized out>, filename=<optimized out>, globals=0x7ffa511e9700, locals=0x7ffa511e9700, flags=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:34357,optimiz,optimized,34357,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,": #22 0x00000000002ce7f6 in __interceptor_dlopen.part.267 (); 2187: #23 0x00007f2a50c02ffb in cling::utils::platform::DLOpen (Path=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", Err=0x7f2a5e651200) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Utils/PlatformPosix.cpp:118; 2187: #24 0x00007f2a5087994c in cling::DynamicLibraryManager::loadLibrary (this=<optimized out>, libStem=..., permanent=<optimized out>, resolved=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/DynamicLibraryManager.cpp:375; 2187: #25 0x00007f2a508d6dce in cling::Interpreter::loadLibrary (this=0x614000001840, filename=..., lookup=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1469; 2187: #26 0x00007f2a508d8d67 in cling::Interpreter::loadFile (this=0x614000001840, filename=""/home/jhahnfel/ROOT/build-asan-clang/roottest/root/meta/tclass/libInitOrder.so"", allowSharedLib=<optimized out>, T=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1585; 2187: #27 0x00007f2a50bbe9cd in cling::MetaSema::actOnLCommand (this=<optimized out>, file=..., transaction=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:79; 2187: #28 0x00007f2a50bb2dc8 in cling::MetaParser::isLCommand (this=this; 2187: entry=0x7f2a5e5cf670, actionResult=; 2187: 0x7f2a5e5cf780: cling::MetaSema::AR_Success) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:147; 2187: #29 0x00007f2a50bb2833 in cling::MetaParser::isCommand (this=<optimized out>, actionResult=<optimized out>, resultValue=0x0) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:118; 2187: #30 0x00007f2a50baaf05 in cling::MetaProcessor::process (this=<optimized out>, input_line=..., compRes=<optimized out>, result=0x33f, disableValuePrinting=<optimized out>) at /home/jhahnfel/ROOT/src/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:4704,optimiz,optimized,4704,https://root.cern,https://github.com/root-project/root/issues/11867,2,['optimiz'],['optimized']
Performance,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kChar_t:' at line 174 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_char' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:174; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:175:35: warning: Access to field 's_short' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:49222,load,loaded,49222,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kFloat_t:' at line 179 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:179; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:180:41: warning: Access to field 'flt' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:57702,load,loaded,57702,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kLong_t:' at line 177 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 's_long' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:177; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:178:35: warning: Access to field 's_longlong' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:54307,load,loaded,54307,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 10: The value 0 is assigned to 'loop' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 11: Loop condition is true. Entering loop body in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:165; 12: Null pointer value stored to 'addr' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:166; 13: Null pointer value stored to 'i' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:167; 14: Control jumps to 'case kIsEnum:' at line 171 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:169; 15: Control jumps to 'case kUInt_t:' at line 184 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:172; 16: Access to field 'u_int' results in a dereference of a null pointer (loaded from variable 'i') in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:184; /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:185:35: warning: Access to field 'u_long' results in a dereference of a null pointer (loaded from variable 'i') [clang-analyzer-core.NullDereference]; 1: Taking false branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:240; 2: Assuming field 'fObject' is non-null in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 3: '?' condition is true in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:251; 4: Assuming 'nElements' is > 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 5: Taking true branch in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:253; 6: Calling 'TEmulatedMapProxy::WriteMap' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:254; 7: Initializing to 0 in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:159; 8: 'idx' is < 'nElements' in /opt/root_src/io/io/src/TEmulatedMapProxy.cxx:163; 9: Loop condition is true. Entering loop body in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7431:66173,load,loaded,66173,https://root.cern,https://github.com/root-project/root/issues/7431,1,['load'],['loaded']
Performance,": TClass::HasConsistentHashMember() in /opt/root_src/core/meta/inc/TClass.h:502; 7: ROOT::Internal::HasConsistentHashMember(TClass&) in /opt/root_src/core/meta/src/TClass.cxx:7373; 8: TKey::CheckTObjectHashConsistency() const in /opt/root_src/io/io/inc/TKey.h:116; 9: TObject::CheckedHash() in /opt/root_src/core/base/inc/TObject.h:341; 10: THashTable::GetCheckedHashValue(TObject*) const in /opt/root_src/core/cont/inc/THashTable.h:95; 11: THashTable::Add(TObject*) in /opt/root_src/core/cont/src/THashTable.cxx:96; 12: THashList::AddLast(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:100; 13: TList::Add(TObject*) in /opt/root_src/core/cont/inc/TList.h:81; 14: TDirectoryFile::ReadKeys(bool) in /opt/root_src/io/io/src/TDirectoryFile.cxx:1448; 15: TFile::Init(bool) in /opt/root_src/io/io/src/TFile.cxx:823; 16: TMemFile::TMemFile(char const*, TMemFile::ZeroCopyView_t const&) in /opt/root_src/io/io/src/TMemFile.cxx:127; 17: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1852; 18: TCling::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool, bool) in /opt/root_src/core/metacling/src/TCling.cxx:2309; 19: TROOT::RegisterModule(char const*, char const**, char const**, char const*, char const*, void (*)(), std::vector<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, int> > > const&, char const**, bool) in /opt/root_src/core/base/src/TROOT.cxx:2566; 20: (anonymous namespace)::TriggerDictionaryInitialization_libNet_Impl() in /home/userf/build",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:18762,Load,LoadPCM,18762,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['Load'],['LoadPCM']
Performance,: [ RUN ] RWLock.ResetRestoreStdTBBUnique; 76: [ OK ] RWLock.ResetRestoreStdTBBUnique (0 ms); 76: [ RUN ] RWLock.ResetRestoreSpin; 76: [ OK ] RWLock.ResetRestoreSpin (0 ms); 76: [ RUN ] RWLock.ResetRestore; 76: [ OK ] RWLock.ResetRestore (0 ms); 76: [ RUN ] RWLock.ResetRestoreTLSpin; 76: [ OK ] RWLock.ResetRestoreTLSpin (0 ms); 76: [ RUN ] RWLock.ResetRestoreTL; 76: [ OK ] RWLock.ResetRestoreTL (0 ms); 76: [ RUN ] RWLock.concurrentResetRestore; 76: [ OK ] RWLock.concurrentResetRestore (61 ms); 76: [ RUN ] RWLock.concurrentResetRestoreSpin; 76: [ OK ] RWLock.concurrentResetRestoreSpin (40 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStd; 76: [ OK ] RWLock.concurrentResetRestoreStd (53 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStd14; 76: [ OK ] RWLock.concurrentResetRestoreStd14 (62 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStd17; 76: [ OK ] RWLock.concurrentResetRestoreStd17 (64 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStdTBB; 76: [ OK ] RWLock.concurrentResetRestoreStdTBB (45 ms); 76: [ RUN ] RWLock.concurrentResetRestoreStdTBBUnique; 76: [ OK ] RWLock.concurrentResetRestoreStdTBBUnique (33 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestore; 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms); 76: [ RUN ] RWLock.concurrentResetRestoreTL; 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL; 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms); 76: [ RUN ] RWLock.concurrentReadsAndWrites; 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin; 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd; 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14; 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17; 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms); 76: [ RUN ] RWLock.concurrentReads,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-742071485:8915,concurren,concurrentResetRestoreStdTBB,8915,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-742071485,1,['concurren'],['concurrentResetRestoreStdTBB']
Performance,: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:5855; /opt/root_src/math/mathcore/src/triangle.c:6363:42: warning: Value stored to 'finother' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'finother' is never read in /opt/root_src/math/mathcore/src/triangle.c:6363; /opt/root_src/math/mathcore/src/triangle.c:9471:7: warning: Value stored to 'farrightapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farrightapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9471; /opt/root_src/math/mathcore/src/triangle.c:9570:11: warning: Value stored to 'farleftapex' is never read [clang-analyzer-deadcode.DeadStores]; 1: Value stored to 'farleftapex' is never read in /opt/root_src/math/mathcore/src/triangle.c:9570; /opt/root_src/math/mathcore/src/triangle.c:14976:7: warning: Dereference of null pointer (loaded from variable 'vpointlist') [clang-analyzer-core.NullDereference]; 1: Calling 'parsecommandline' in /opt/root_src/math/mathcore/src/triangle.c:15695; 2: Loop condition is true. Entering loop body in /opt/root_src/math/mathcore/src/triangle.c:3300; 3: Assuming the condition is false in /opt/root_src/math/mathcore/src/triangle.c:3304; 4: Loop condition is false. Execution continues on line 3300 in /opt/root_src/math/mathcore/src/triangle.c:3304; 5: Loop condition is false. Execution continues on line 3496 in /opt/root_src/math/mathcore/src/triangle.c:3300; 6: Field 'poly' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 7: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 8: Field 'refine' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 9: Left side of '||' is false in /opt/root_src/math/mathcore/src/triangle.c:3496; 10: Field 'quality' is 0 in /opt/root_src/math/mathcore/src/triangle.c:3496; 11: Left side of '||' is false in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7458:109189,load,loaded,109189,https://root.cern,https://github.com/root-project/root/issues/7458,1,['load'],['loaded']
Performance,: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T13:52:30.329Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/interpreter/cling/include/cling/MetaProcessor/MetaLexer.h:60:5: warning: definition of implicit copy assignment operator for 'Token' is deprecated because it has a user-declared copy constructor [-Wdeprecated-copy] ; - [2022-11-11T14:01:57.252Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4922:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-11-11T14:02:37.698Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmemalign.c:37:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:37.698Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:51:9: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:37.698Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mmalloc.c:200:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:37.956Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/clib/src/mfree.c:194:13: warning: performing pointer subtraction with a null pointer has undefined behavior [-Wnull-pointer-subtraction] ; - [2022-11-11T14:02:49.360Z] ld: warning: -undefined dynamic_lookup may not work with chained fixups ; - [2022-11-11T14:03:06.027Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:302:44: warning: parameter 'pymeth' set but not used [-Wunused-but-set-parameter] . And 70 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11690#issuecomment-1311772207:1717,perform,performing,1717,https://root.cern,https://github.com/root-project/root/pull/11690#issuecomment-1311772207,3,['perform'],['performing']
Performance,":+1: perfect for concurrent histogram filling, where the merging happens from fill buffers handed over from the filling threads to the merging thread, which flushes them into the target histogram. IIUC that's a use case for exactly this kind of queue, right?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8715#issuecomment-884796407:17,concurren,concurrent,17,https://root.cern,https://github.com/root-project/root/pull/8715#issuecomment-884796407,2,"['concurren', 'queue']","['concurrent', 'queue']"
Performance,":. ~~~; ===========================================================; There was a crash (#5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa84f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa845a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8fa9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x1098e5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8fac1c8 in TUnixSystem::DispatchSignals (this=0x1098e5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8fac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa8fa308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 llvm::Expected<llvm::JITEvaluatedSymbol>::Expected<llvm::JITEvaluatedSymbol> (Val=..., t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:2550,optimiz,optimized,2550,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,://epsft-jenkins.cern.ch/job/root-pullrequests-build/28498/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.roottest.cling.dict.ROOT-8096.roottest_cling_dict_ROOT_8096_load](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28498/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_load/); - [projectroot.roottest.cling.stl.dicts.roottest_cling_stl_dicts_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28498/testReport/projectroot.roottest.cling.stl/dicts/roottest_cling_stl_dicts_build/); - [projectroot.test.test_stressIOPlugins_xroot](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28498/testReport/projectroot/test/test_stressIOPlugins_xroot/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28498/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stl_makeproject_test_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28498/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stl_makeproject_test_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28498/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28498/testReport/projectroot.roottest.root/dataframe/roottest_root_dataframe_read_leaves_build/); - [projectroot.roottest.root.dataframe.roottest_root_dataframe_read_leaves](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/28498/testReport/projectroot.roottest.root/dataframe/roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2126#issuecomment-393855314:1456,cache,cache,1456,https://root.cern,https://github.com/root-project/root/pull/2126#issuecomment-393855314,1,['cache'],['cache']
Performance,://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/142524/console).; ### Warnings:; - [2022-04-13T15:08:06.840Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/builtins/zstd/compress/zstd_compress_superblock.c:412:12: warning: variable 'litLengthSum' set but not used [-Wunused-but-set-variable] ; - [2022-04-13T15:24:14.944Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/root/core/unix/src/TUnixSystem.cxx:4926:17: warning: variable 'vsize' set but not used [-Wunused-but-set-variable] ; - [2022-04-13T15:25:43.103Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:27:58.229Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:27:58.229Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:27:59.620Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:28:07.141Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/externals/Users/sftnight/build/jenkins/workspace/root-pullrequests-build/install/include/Vc/common/memory.h:299:25: warning: performing pointer subtraction with a null pointer may have undefined behavior [-Wnull-pointer-subtraction] ; - [2022-04-13T15:28:07.141Z] /Users/sftnight/build/jenkins/workspace/root-pullrequests-build/build/external,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10391#issuecomment-1098228197:1103,perform,performing,1103,https://root.cern,https://github.com/root-project/root/pull/10391#issuecomment-1098228197,1,['perform'],['performing']
Performance,://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.roottest.cling.dict/ROOT-8096/roottest_cling_dict_ROOT_8096_build/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_array_interface](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_array_interface/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_pretty_printing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_pretty_printing/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_root_module](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_root_module/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest_libevent_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest_libevent_build/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_contains](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_contains/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tobject_comparisonops](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings.pyroot.pythonizations/test/pyunittests_pyroot_pyz_tobject_comparisonops/); - [projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_tclass_dynamiccast](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86059/testReport/projectroot.bindings,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5833#issuecomment-641293165:1485,cache,cache,1485,https://root.cern,https://github.com/root-project/root/pull/5833#issuecomment-641293165,1,['cache'],['cache']
Performance,://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92338/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92338/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92338/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92338/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92338/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92338/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92338/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92338/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/). And 916 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5847#issuecomment-672268844:2750,cache,cache,2750,https://root.cern,https://github.com/root-project/root/pull/5847#issuecomment-672268844,2,['cache'],['cache']
Performance,://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92824/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_readPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92824/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_readPtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92824/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execBaseClass_v2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_execMixedBaseClass_v2](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92824/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_execMixedBaseClass_v2/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_RunMyClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92824/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_RunMyClass/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92824/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD/); - [projectroot.roottest.root.meta.tclass.roottest_root_meta_tclass_execTmpltD32](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92824/testReport/projectroot.roottest.root.meta/tclass/roottest_root_meta_tclass_execTmpltD32/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/92824/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/). And 917 more,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6194#issuecomment-674047641:2750,cache,cache,2750,https://root.cern,https://github.com/root-project/root/pull/6194#issuecomment-674047641,2,['cache'],['cache']
Performance,":118; #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this; entry=0x55ed255fe680, input_line=..., compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result; entry=0x0, disableValuePrinting=disableValuePrinting; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442; #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; #58 0x00007f54c1a3320a in TCling::ProcessLine (this=0x55ed24bb1eb0, line=<optimized out>, error=0x7fffe1b0c04c) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2542; #59 0x00007f54c1a33942 in TCling::ProcessLineSynch (this=0x55ed24bb1eb0, line=0x55ed262c0650 "".X /scratch2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:13406,Load,Load,13406,https://root.cern,https://github.com/root-project/root/issues/9595,1,['Load'],['Load']
Performance,":118; #52 0x00007f54c1c14331 in cling::MetaProcessor::process (this=this; entry=0x55ed255fe680, input_line=..., compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=result; entry=0x0, disableValuePrinting=disableValuePrinting; entry=false) at /usr/local/src/conda/root_base-6.25.2/root-source/interpreter/cling/lib/MetaProcessor/MetaProcessor.cpp:317; #53 0x00007f54c1a1762e in HandleInterpreterException (metaProcessor=0x55ed255fe680, input_line=0x7f54c7f78ff7 "".L /scratch2/root-debug2/test_cpp.so"", compRes=; 0x7fffe1b09e94: cling::Interpreter::kSuccess, result=0x0) at /usr/local/src/conda/root_base-6.25.2/root-source/core/metacling/src/TCling.cxx:2442; #54 0x00007f54c1a21c47 in TCling::Load (this=0x55ed24bb1eb0, filename=0x55ed27ac6db0 ""/scratch2/root-debug2/test_cpp.so"", system=<optimized out>) at /home/cburr/mambaforge/conda-bld/root_base_1642194100205/_build_env/x86_64-conda-linux-gnu/include/c++/9.4.0/bits/unique_ptr.h:154; #55 0x00007f54c8fbe177 in TSystem::Load (this=0x55ed24b27570, module=0x55ed262bfe60 ""/scratch2/root-debug2/./test_cpp.so"", entry=0x7f54c912f665 """", system=false) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:1942; #56 0x00007f54c8fc7a69 in TSystem::<lambda(const TString&)>::operator() (__closure=<synthetic pointer>, __closure=<synthetic pointer>, lib=...) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3364; #57 TSystem::CompileMacro (this=<optimized out>, filename=<optimized out>, opt=<optimized out>, library_specified=<optimized out>, build_dir=<optimized out>, dirmode=<optimized out>) at /usr/local/src/conda/root_base-6.25.2/root-source/core/base/src/TSystem.cxx:3813; ===========================================================. Root > pure virtual method called; terminate called without an active exception; Aborted (core dumped); ```. </p>; </details>. ### Expected behavior. No crash? 😄. ### To Reproduce. This reproducer should work on any machine with docker once you r",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9595:27728,Load,Load,27728,https://root.cern,https://github.com/root-project/root/issues/9595,1,['Load'],['Load']
Performance,":402; 10: Returning pointer (loaded from 'method'), which participates in a condition later in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 11: Returning pointer (loaded from 'method') in /opt/root_src/tmva/tmva/src/Reader.cxx:424; 12: Returning from 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 13: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 14: 'method' is non-null in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 15: Left side of '&&' is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 16: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 17: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:380; 18: 'methCat' initialized to a null pointer value in /opt/root_src/tmva/tmva/src/Reader.cxx:381; 19: 'methCat' is null in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 20: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:382; 21: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') in /opt/root_src/tmva/tmva/src/Reader.cxx:384; /opt/root_src/tmva/tmva/src/Reader.cxx:406:32: warning: Access to field 'fDataSetManager' results in a dereference of a null pointer (loaded from variable 'methCat') [clang-analyzer-core.NullDereference]; 1: Assuming the condition is false in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 2: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:371; 3: Calling 'Reader::BookMVA' in /opt/root_src/tmva/tmva/src/Reader.cxx:378; 4: 'im' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:395; 5: 'method' initialized here in /opt/root_src/tmva/tmva/src/Reader.cxx:398; 6: Assuming 'method' is not equal to null in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 7: Taking false branch in /opt/root_src/tmva/tmva/src/Reader.cxx:400; 8: Assuming the condition is true in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 9: Taking true branch in /opt/root_src/tmva/tmva/src/Reader.cxx:402; 10: 'methCat' initial",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:111827,load,loaded,111827,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,":808; 18: dl_open_worker in ./elf/./elf/dl-open.c:771; 19: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 20: _dl_open in ./elf/./elf/dl-open.c:883; 21: dlopen_doit in ./dlfcn/./dlfcn/dlopen.c:56; 22: _dl_catch_exception in ./elf/./elf/dl-error-skeleton.c:208; 23: _dl_catch_error in ./elf/./elf/dl-error-skeleton.c:227; 24: _dlerror_run in ./dlfcn/./dlfcn/dlerror.c:138; 25: dlopen_implementation in ./dlfcn/./dlfcn/dlopen.c:71; 26: dlopen@@GLIBC_2.34 in ./dlfcn/./dlfcn/dlopen.c:81; 27: cling::utils::platform::DLOpen(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; 28: cling::DynamicLibraryManager::loadLibrary(llvm::StringRef, bool, bool) in /home/userf/build/build-root-Desktop-Debug/lib/libCling.so; Uninitialised value was created by a stack allocation 1: TCling::LoadPCM(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) in /opt/root_src/core/metacling/src/TCling.cxx:1821. Invalid read of size 4; in ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120; 1: ROOT::Internal::DeleteChangesMemoryImpl() in /opt/root_src/core/base/src/TObject.cxx:120; 2: ROOT::Internal::DeleteChangesMemory() in /opt/root_src/core/base/src/TObject.cxx:129; 3: HasBeenDeleted in /opt/root_src/core/base/inc/TObject.h:405; 4: TList::FindLink(TObject const*, int&) const in /opt/root_src/core/cont/src/TList.cxx:646; 5: TList::Remove(TObject*) in /opt/root_src/core/cont/src/TList.cxx:829; 6: THashList::RecursiveRemove(TObject*) in /opt/root_src/core/cont/src/THashList.cxx:335; 7: TROOT::RecursiveRemove(TObject*) in /opt/root_src/core/base/src/TROOT.cxx:2463; 8: ROOT::CallRecursiveRemoveIfNeeded(TObject&) in /opt/root_src/core/base/inc/TROOT.h:400; 9: TObject::~TObject() in /opt/root_src/core/base/src/TObject.cxx:163; 10: ROOT::Internal::TCheck",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:8881,Load,LoadPCM,8881,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['Load'],['LoadPCM']
Performance,:9: warning: implicit declaration of function 'close' is invalid in C99 [-Wimplicit-function-declaration] ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/root/core/zip/src/gzread.c:30:15: warning: implicit declaration of function 'read' is invalid in C99 [-Wimplicit-function-declaration] ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/root/core/zip/src/gzread.c:591:11: warning: implicit declaration of function 'close' is invalid in C99 [-Wimplicit-function-declaration] ; - /Volumes/MacintoshHD2/ec/build/workspace/root-pullrequests-build/root/core/zip/src/inflate.c:1507:61: warning: shifting a negative signed value is undefined [-Wshift-negative-value] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R.h:40:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/R_ext/RS.h:29:10: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/include/Rinternals.h:60:11: warning: non-portable path to file '&lt;RConfig.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] ; - /cvmfs/sft.cern.ch/lcg/releases/R/3.2.5-c8cca/x86_64-mac1012-clang81-opt/lib/R/library/Rcpp/include/Rcpp/r/headers.h:57:10: warning: non-portable path to file '&lt;RVersion.h&gt;'; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 16 more. ### Failing tests:; - [projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsZA](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/10127/testReport/projectroot.roottest.root.meta/loadAllLibs/roottest_root_meta_loadAllLibs_LoadAllLibsZA/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1253#issuecomment-340497930:2431,load,loadAllLibs,2431,https://root.cern,https://github.com/root-project/root/pull/1253#issuecomment-340497930,2,['load'],['loadAllLibs']
Performance,"::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x5555575cfe78); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #130 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x555556b015f0, pointer=0x5555575cfe78, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #131 0x00007ffff7a84dd9 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x555556b015f0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #132 TStreamerInfo::ReadBuffer<char**> (this=0x555556977820, b=..., arr=@0x7fffffffcd20: 0x7fffffffcd18, compinfo=0x555557621438, ; first=first@entry=0, last=last@entry=1, narr=1, eoffset=0, arrayMode=2); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1316; #133 0x00007ffff7900d10 in TStreamerInfoActions::GenericReadAction (buf=..., addr=<optimized out>, config=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:194; #134 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x5555575cfe30, buffer=..., ; this=0x5555574e8d10) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #135 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x5555575cfe30); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #136 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=this@entry=0x7fffffffdd60, cl=0x555555ea1490, ; pointer=pointer@entry=0x5555575cfe30, onFileClass=onFileClass@entry=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #137 0x00007ffff5c3a4e9 in RooAbsArg::Streamer (this=0x5555575cfe30, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooAbsArg.cxx:2429; #138 0x00007ffff7e0cee8 in TStreamerBase::ReadBuffer (this=this@entry=0x555556b94bc0, b=..., ; pointer=0x55555",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:29744,optimiz,optimized,29744,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,2,['optimiz'],['optimized']
Performance,"::Interpreter const*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #29 0x00007f10156ad338 in TCling::TCling(char const*, char const*, char const* const*, void*) () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #30 0x00007f10156aef45 in CreateInterpreter () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/libCling.so; #31 0x00007f101f123963 in TROOT::InitInterpreter() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #32 0x00007f101f123e00 in ROOT::Internal::GetROOT2() () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../.././libCore.so.6.32; #33 0x00007f101f407146 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] () from /afs/cern.ch/work/i/ikrommyd/miniforge3/envs/root-bug/lib/python3.11/lib-dynload/../../libcppyy_backend.so; #34 0x00007f109602407e in call_init (env=0x55f90e6d77e0, argv=0x7ffc2594fdc8, argc=1, l=<optimized out>) at dl-init.c:70; #35 call_init (l=<optimized out>, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:13069,optimiz,optimized,13069,https://root.cern,https://github.com/root-project/root/issues/15970,2,['optimiz'],['optimized']
Performance,"::ReadSTLObjectWiseFastArray> (buf=..., addr=0x109986ba0, conf=0x10a395fa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1405; #37 0x00007fffa92d3130 in TStreamerInfoActions::TConfiguredAction::operator() (this=0x109f4d790, this=0x109f4d790, object=0x109986ba0, buffer=...) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TStreamerInfoActions.h:123; #38 TBufferFile::ApplySequence (obj=0x109986ba0, sequence=..., this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:3580; #39 TBufferFile::ApplySequence (this=0x7ffff83ea100, sequence=..., obj=0x109986ba0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:3562; #40 0x00007fffa92de27c in TBufferFile::ReadClassBuffer (this=0x7ffff83ea100, cl=0x10a596170, pointer=0x109986ba0, onFileClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TStreamerInfo.h:209; #41 0x00007fffa8f0d858 in TClass::ReadBuffer (this=<optimized out>, b=..., pointer=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6758; #42 0x00007fffa98ea688 in TMVA::Experimental::SOFIE::RModel::Streamer (R(bool)=..., this=0x109986ba0) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:646; #43 TMVA::Experimental::SOFIE::RModel::Streamer (this=0x109986ba0, R(bool)=...) at /builddir/build/BUILD/root-6.28.00/tmva/sofie/src/RModel.cxx:644; #44 0x00007fffa8f0aa30 in TClass::StreamerTObject (pThis=0x10a596170, object=0x109986ba0, b=...) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6797; #45 0x00007fffa93abef0 in TClass::Streamer (onfile_class=0x0, b=..., obj=0x109986ba0, this=0x10a596170) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #46 TKey::ReadObjectAny (this=0x10aa98220, expectedClass=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TKey.cxx:1102; #47 0x00007fffa934c51c in TDirectoryFile::GetObjectChecked (this=0x7ffff83eb1c8, namecycle=<optimized out>, expectedClass=0x10a596170) at /bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:9976,optimiz,optimized,9976,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #20 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #21 ROOT::Internal::RDF::RColumnRegister::~RColumnRegister (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RColumnRegister.hxx:43; #22 ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::~RInterface (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RInterface.hxx:104; #23 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ```; </details>. <details>; <summary>ROOT backtrace</summary>. ```; *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; rax 0xfffffffffffffe00 rbx 0x00007ffe6d80d638 rcx 0x00007ff0e8af95c7; rdx 0x0000000000000000 rsi 0x00007ffe6d80d638 rdi 0x00000000000d979c; rbp 0x00007ffe6d80d6a0 rsp 0x00007ffe6d80d628 r8 0x0000000000000001; r9 0x0000000000000000 r10 0x0000000000000000 r11 0x0000000000000202; r12 0x0000000000000000 r13 0x00007ffe6d80d660 r14 0x00007ffe6d80df50; r15 0x0000000000691200 rip 0x00007ff0e8af95c7 eflags [ IF ] ; cs 0x00000033 ss 0x0000002b ds 0x00000000 ; es 0x00000000 fs 0x00000000 gs 0x00000000 ; #0 0x00007ff",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:11220,optimiz,optimized,11220,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"::_Lock_policy)2>::~__shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #27 std::shared_ptr<std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::shared_ptr<ROOT::Detail::RDF::RDefineBase>, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > > const>::~shared_ptr (this=<optimized out>, this=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #28 ROOT::Internal::RDF::RColumnRegister::~RColumnRegister (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RColumnRegister.hxx:43; #29 ROOT::RDF::RInterface<ROOT::Detail::RDF::RNodeBase, void>::~RInterface (this=<optimized out>, this=<optimized out>) at /usr/include/root/ROOT/RDF/RInterface.hxx:104; #30 main (argc=<optimized out>, argv=<optimized out>) at /home/yan/codes/RDF_bug_report/main.cxx:82; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:22073,optimiz,optimized,22073,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, __a=...) at /usr/include/c++/12/bits/alloc_traits.h:535; #15 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_node (__n=0x22dedd0, this=<optimized out>) at /usr/include/c++/12/bits/hashtable_policy.h:1984; #16 std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> > >::_M_deallocate_nodes (this=<optimized out>, __n=0x22ded30) at /usr/include/c++/12/bits/hashtable_policy.h:2006; #17 std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basi",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:15356,optimiz,optimized,15356,https://root.cern,https://github.com/root-project/root/issues/12023,2,['optimiz'],['optimized']
Performance,"::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL24make_ROperator_TransposeERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Transpose(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::SOFIE::ETensorType> > >&); Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4TMVA12Experimental5SOFIE8INTERNAL19make_ROperator_SeluERKN4onnx9NodeProtoERKNS3_10GraphProtoERSt13unordered_mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEENS1_11ETensorTypeESt4hashISG_ESt8equal_toISG_ESaISt4pairIKSG_SH_EEE' unresolved while linking function '_GLOBAL__sub_I_cling_module_0'!; You are probably missing the definition of TMVA::Experimental::SOFIE::INTERNAL::make_ROperator_Selu(onnx::NodeProto const&, onnx::GraphProto const&, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, TMVA::Experimental::SOFIE::ETensorType, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, TMVA::Experimental::S",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10877#issuecomment-1187667192:4446,load,load,4446,https://root.cern,https://github.com/root-project/root/issues/10877#issuecomment-1187667192,1,['load'],['load']
Performance,"::initialize (this=0x8ea890, JD=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/lib/ExecutionEngine/Orc/LLJIT.cpp:215; #12 0x00007fffeeace5f9 in llvm::orc::LLJIT::initialize (this=0x8eb360, JD=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/llvm/src/include/llvm/ExecutionEngine/Orc/LLJIT.h:155; #13 0x00007fffeeaccc6c in cling::IncrementalJIT::runCtors (this=0xfffffffffffffe00) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalJIT.h:74; #14 cling::IncrementalExecutor::runStaticInitializersOnce (this=0x698d80, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:260; #15 0x00007fffeea63d43 in cling::Interpreter::executeTransaction (this=<optimized out>, T=...) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:1714; #16 0x00007fffeea6da53 in cling::IncrementalParser::commitTransaction (this=0x4f6670, PRT=..., ClearDiagClient=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/IncrementalParser.cpp:675; #17 0x00007fffeea5dd71 in cling::Interpreter::PushTransactionRAII::pop (this=0x7fffffffb0c0) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:116; #18 cling::Interpreter::PushTransactionRAII::~PushTransactionRAII (this=0x7fffffffb0c0) at /home/jhahnfel/ROOT/llvm13/src/interpreter/cling/lib/Interpreter/Interpreter.cpp:106; #19 0x00007fffee9f9d90 in ClingMemberIterInternal::DCIter::DCIter (this=0x7fffffffb140, DC=<optimized out>, interp=<optimized out>) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingMemberIter.cxx:33; #20 0x00007fffee9f649b in TClingMemberIter::TClingMemberIter (this=0x7fffffffb128, interp=0x0, DC=0x80) at /home/jhahnfel/ROOT/llvm13/src/core/metacling/src/TClingMemberIter.h:145; #21 TClingDataMemberIter::TClingDataMemberIter (this=0x7fffffffb128, interp=0x0, DC=0x80, selection=TDictionary::EMemberSelection::kAlsoUsingDecls) at /home/jhahnfel/ROOT/llvm13/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1097659822:4440,optimiz,optimized,4440,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1097659822,1,['optimiz'],['optimized']
Performance,:; - [projectroot.roottest.root.meta.roottest_root_meta_execUnloading_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29451/testReport/projectroot.roottest.root/meta/roottest_root_meta_execUnloading_auto/); - [projectroot.roottest.root.meta.ROOT-7462.roottest_root_meta_ROOT_7462_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29451/testReport/projectroot.roottest.root.meta/ROOT-7462/roottest_root_meta_ROOT_7462_make/); - [projectroot.roottest.cling.dict.fwd-decl-stdless.roottest_cling_dict_fwd_decl_stdless_execLessyTest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29451/testReport/projectroot.roottest.cling.dict/fwd-decl-stdless/roottest_cling_dict_fwd_decl_stdless_execLessyTest/); - [projectroot.roottest.cling.parsing.roottest_cling_parsing_runTTestClass](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29451/testReport/projectroot.roottest.cling/parsing/roottest_cling_parsing_runTTestClass/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29451/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.meta.roottest_root_meta_runautoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29451/testReport/projectroot.roottest.root/meta/roottest_root_meta_runautoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoload_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29451/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoload_auto/); - [projectroot.roottest.root.meta.roottest_root_meta_runtemplateAutoloadInclude_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/29451/testReport/projectroot.roottest.root/meta/roottest_root_meta_runtemplateAutoloadInclude_auto/); - [projectroot.roottest.root.meta.rootcling.roottest_root_meta_rootcling_includeInLinkdef](https://eps,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-395618243:2835,load,load,2835,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-395618243,1,['load'],['load']
Performance,:; - [projectroot.tmva.tmva.test.DNN.TMVA_DNN_Activation_Functions_Cpu](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46578/testReport/projectroot.tmva.tmva.test/DNN/TMVA_DNN_Activation_Functions_Cpu/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46578/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46578/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46578/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_multiTree](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46578/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_multiTree/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46578/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46578/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/46578/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TooSmall/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-p,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2902#issuecomment-435158802:2359,cache,cache,2359,https://root.cern,https://github.com/root-project/root/pull/2902#issuecomment-435158802,1,['cache'],['cache']
Performance,":InitStreaming() and BuildOld for BeamFlux; in BuildOld look at base User::TrackerVtxBase (and record pointer value in baseclass); calls Init on the TStreamerElement base; this triggers the creation of the TClass for User::TrackerVtxBase; but BuildOld kept a stale pointer to the old TClass (was baseclass variable).; ```. Solution: replace raw pointer by a TClassRef. TCompInfo::Update did a TClass::GetClass for all type that were not classes :(; Usually it is just a waste of time.; In this case, one such type is User::TContext::Time (an enum) use as part; of User::TContext .. Consequently, before the dictionary TClass for User::TContext was constructed,; another class requested the update of the emulated StreamerInfo for the (still); emulated User::TContext, this in turn provoked the (unnecessary) call to; TClass::GetClass on ‘User::TContext::Time’ which provoked the creation of; the TClass for User::TContext … one of the steps is to absorb the existing; StreamerInfo (including the one being updated) and clear them (i.e. delete; the TCompInfo array) … upon return the result of the TClass::GetClass (a nullptr); is stored in deleted memory. Solution: Don’t call TClass::GetClass on non-type. ```; User::TDatum is loaded; provokes update of a StreamerInfo with a TTrueParticle; *spurrious* InitStreaming provoke need for TTrueParticle TClass; start consuming the TTrueParticle TProtoClass; needs the TTrueVertex TClass; provokes update of a StreamerInfo with a TBaseObject; *spurrious* InitStreaming provoke need for TBaseObject TClass; needs the TTrueParticle TClass; Consumes the TTrueParticle TProtoClass; return fine with a good TTrueVertex TClass; continue using the already “cleared” TTrueParticle TProtoClass; ```. Solution: significant update of TStreamerElement::Update and TStreamerBase::Update; to call TStreamerBase::InitStreamer if and only if there was a change in the base; class pointer, and to call TClass::GetClass only if there is a chance of finding; a new TClass ….",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4389:1849,load,loaded,1849,https://root.cern,https://github.com/root-project/root/pull/4389,2,['load'],['loaded']
Performance,":PeepholeOptimizer::runOnMachineFunction; 0.89% -0.27% libCling.so [.] llvm::ScheduleDAGSDNodes::BuildSchedUnits; 0.03% +0.26% libCling.so [.] llvm::ValueHandleBase::AddToUseList; 0.74% -0.24% libCling.so [.] AddNodeIDNode; 0.80% -0.24% libCling.so [.] llvm::SelectionDAGISel::SelectCodeCommon; +0.24% libCling.so [.] (anonymous namespace)::MachineCopyPropagation::CopyPropagateBlock; +0.23% libCling.so [.] llvm::LivePhysRegs::removeDefs; +0.22% libCling.so [.] llvm::ReachingDefAnalysis::processDefs; 0.79% -0.22% libpcre.so.1.2.10 [.] 0x0000000000001f72; 0.09% +0.20% libCling.so [.] llvm::hashing::detail::hash_short; 0.58% -0.20% libCling.so [.] llvm::FoldingSetNodeID::AddString; +0.20% libCling.so [.] llvm::Value::stripPointerCasts; +0.19% libCling.so [.] llvm::PointerMayBeCaptured; +0.19% libCling.so [.] llvm::InstCombiner::visitGetElementPtrInst; +0.18% libCling.so [.] getCalledFunction; +0.18% libCling.so [.] (anonymous namespace)::MachineCSE::ProcessBlockCSE; 0.77% -0.18% libCling.so [.] clang::UsingDirectiveDecl::getNominatedNamespace; +0.17% libCling.so [.] llvm::SelectionDAGISel::ComputeLiveOutVRegInfo; +0.17% libCling.so [.] llvm::InstCombiner::visitCallBase; 0.51% -0.16% libCling.so [.] llvm::ScheduleDAGSDNodes::EmitSchedule; +0.16% libCling.so [.] llvm::SlotIndexes::runOnMachineFunction; 0.03% +0.16% libCling.so [.] llvm::Value::getName; 0.53% -0.16% libCling.so [.] clang::NamedDecl::getUnderlyingDecl; 0.02% +0.16% libCling.so [.] llvm::AttributeList::hasFnAttribute; +0.16% libCling.so [.] llvm::AAResults::pointsToConstantMemory; 1.23% -0.16% libc-2.28.so [.] malloc; ```. Most of this makes sense to me:; * optimization passes check function and parameter attributes that analyses put there; * `instcombine` combines IR instructions, instead of SelectionDAG; * and some other optimizations and analyses. I don't see anything obvious to go faster here. I propose we close this after disabling optimizations in the graphics code (@couet are you taking care of this?).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-984765945:4168,optimiz,optimization,4168,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-984765945,3,['optimiz'],"['optimization', 'optimizations']"
Performance,":RNodeBase>*>(0x174b8a810), new const char*[1]{""x""}, 1, 4, reinte""..., context=""RLoopManager::Run"") at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RDFUtils.cxx:357; #22 0x00007fffa326c338 in ROOT::Detail::RDF::RLoopManager::Jit (this=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; #23 0x00007fffa3276608 in ROOT::Detail::RDF::RLoopManager::Run (this=0x173fa4a90, jit=<optimized out>) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/src/RLoopManager.cxx:826; #24 0x000000013a4e034c in ROOT::RDF::RResultPtr<double>::TriggerRun (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:360; #25 ROOT::RDF::RResultPtr<double>::Get (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:154; #26 ROOT::RDF::RResultPtr<double>::GetValue (this=0x7fffd51c8a38) at /builddir/build/BUILD/root-6.28.00/tree/dataframe/inc/ROOT/RResultPtr.hxx:196; #27 RooAbsDataHelper_MTConstruction_Test::TestBody (this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/roofit/RDataFrameHelpers/test/testActionHelpers.cxx:66; #28 0x00007fffa3390cbc in void testing::internal::HandleExceptionsInMethodIfSupported<testing::Test, void>(testing::Test*, void (testing::Test::*)(), char const*) () from /lib64/libgtest.so.1.8.0; #29 0x00007fffa3381374 in testing::Test::Run() () from /lib64/libgtest.so.1.8.0; #30 0x00007fffa3381578 in testing::TestInfo::Run() () from /lib64/libgtest.so.1.8.0; #31 0x00007fffa33816b4 in testing::TestCase::Run() () from /lib64/libgtest.so.1.8.0; #32 0x00007fffa3381da8 in testing::internal::UnitTestImpl::RunAllTests() () from /lib64/libgtest.so.1.8.0; #33 0x00007fffa3382004 in testing::UnitTest::Run() () from /lib64/libgtest.so.1.8.0; #34 0x00007fffa3310988 in main () from /lib64/libgtest_main.so.1.8.0; #35 0x00007fffa0829f5c in generic_start_main.isra () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #36 0x00007fffa082a0f4 in __libc_start_main () from /lib64/glibc-hwcaps/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:25035,optimiz,optimized,25035,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,":RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f68fdb16850); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1393; #21 0x00007f6907051440 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseCXXRecordDecl(clang::CXXRecordDecl *) (this=0x7f6918c66d10, D=0x7f68fdb16810); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1908; #22 0x00007f6907048fe4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb16810); at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:283; #23 0x00007f69070500a8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785; #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8); at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227; #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395; #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718); at /mnt/root/interpreter/llvm/s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845#issuecomment-1791689926:13468,load,loadGlobalModuleIndex,13468,https://root.cern,https://github.com/root-project/root/issues/13845#issuecomment-1791689926,1,['load'],['loadGlobalModuleIndex']
Performance,":TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227; #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6; #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6; #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. /bin/sh: line 1: 1509407 Segmentation fault (core dumped) edmWriteConfigs -p /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_13_2_ROOT628_X_2023-06-04-2300/tmp/el8_amd64_gcc11/src/SimG4Core/SaveSimTrackAction/src/SimG4CoreSaveSimTrackAction/libSimG4CoreSaveSimTrackAction.so; gmake: *** [lib/el8_amd64_gcc11/SimG4CoreSaveSimTrackAction.edmplugin] Error 1; ```. ### What is the expected behaviour?. Not to crash. ### How to reproduce?. ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:8310,optimiz,optimized,8310,https://root.cern,https://github.com/root-project/root/issues/12957,1,['optimiz'],['optimized']
Performance,":TClassAlt*> >::~_Vector_base (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:335; #13 0x0000152ece696efd in std::vector<ROOT::TClassAlt*, std::allocator<ROOT::TClassAlt*> >::~vector (this=0x152ecc011420 <guard variable for ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc11/external/gcc/11.2.1-f9b9dfdd886f71cd63f5538223d8f161/include/c++/11.2.1/bits/stl_vector.h:683; #14 0x0000152ece69536b in ROOT::TGenericClassInfo::~TGenericClassInfo (this=0x152ecc011320 <ROOT::GenerateInitInstanceLocal(std::vector<EncodedEventId, std::allocator<EncodedEventId> > const*)::instance>, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc11/lcg/root/6.28.05-e7deaecb5e40f02a68a0fd8a7c036f40/root-6.28.05/core/meta/src/TGenericClassInfo.cxx:227; #15 0x0000152eccfd926c in __run_exit_handlers () from /lib64/libc.so.6; #16 0x0000152eccfd93a0 in exit () from /lib64/libc.so.6; #17 0x0000152eccfc2d8c in __libc_start_main () from /lib64/libc.so.6; #18 0x0000000000406e5e in _start (); ===========================================================. The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12957:4781,optimiz,optimized,4781,https://root.cern,https://github.com/root-project/root/issues/12957,1,['optimiz'],['optimized']
Performance,:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143100/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143100/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143100/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143100/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143100/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143100/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143100/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143100/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10444#issuecomment-1108837998:1049,load,load,1049,https://root.cern,https://github.com/root-project/root/pull/10444#issuecomment-1108837998,1,['load'],['load']
Performance,:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143262/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143262/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143262/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143262/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143262/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143262/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143262/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143262/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9655#issuecomment-1109908871:1049,load,load,1049,https://root.cern,https://github.com/root-project/root/pull/9655#issuecomment-1109908871,1,['load'],['load']
Performance,:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143269/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143269/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143269/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143269/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143269/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143269/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143269/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143269/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1109893882:1049,load,load,1049,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1109893882,1,['load'],['load']
Performance,:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143270/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143270/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143270/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143270/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143270/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143270/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143270/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_twoTypedefsOneClass](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143270/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10445#issuecomment-1109896948:1049,load,load,1049,https://root.cern,https://github.com/root-project/root/pull/10445#issuecomment-1109896948,1,['load'],['load']
Performance,:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143277/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143277/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143277/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143277/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143277/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143277/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143277/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_privateClassXMLSelection](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143277/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10402#issuecomment-1109975555:1049,load,load,1049,https://root.cern,https://github.com/root-project/root/pull/10402#issuecomment-1109975555,1,['load'],['load']
Performance,:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143284/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143284/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143284/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143284/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143284/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143284/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143284/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_vectorOfTStar](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143284/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_vecto,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10455#issuecomment-1110043794:1049,load,load,1049,https://root.cern,https://github.com/root-project/root/pull/10455#issuecomment-1110043794,1,['load'],['load']
Performance,:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143291/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143291/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143291/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143291/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143291/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143291/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143291/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143291/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10456#issuecomment-1110017005:1049,load,load,1049,https://root.cern,https://github.com/root-project/root/pull/10456#issuecomment-1110017005,1,['load'],['load']
Performance,:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10457#issuecomment-1110012297:1049,load,load,1049,https://root.cern,https://github.com/root-project/root/pull/10457#issuecomment-1110012297,1,['load'],['load']
Performance,:\build\workspace\root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143312/console).; ### Failing tests:; - [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143312/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143312/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143312/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143312/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143312/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143312/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143312/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genr,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10458#issuecomment-1110140603:1049,load,load,1049,https://root.cern,https://github.com/root-project/root/pull/10458#issuecomment-1110140603,1,['load'],['load']
Performance,":__cxx11::basic_s; tring<char, std::char_traits<char>, std::allocator<char> > const, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >*) const; [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::getFromSnapshot(bool, std::__cxx11::basic_string<char, std::char_traits<char>, std::; allocator<char> > const&, long, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >,; std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > con; st, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >&, std::vector<char, boost::con; tainer::pmr::polymorphic_allocator<char> >&, int&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) const; [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::navigateSourcesAndLoadFile(o2::ccdb::CcdbApi::RequestContext&, int&, unsigned long*); const; [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::vectoredLoadFileToMemory(std::vector<o2::ccdb::CcdbApi::RequestContext, std::allocat; or<o2::ccdb::CcdbApi::RequestContext> >&) const; [1500611:internal-dpl-ccdb-backend]: /root/src/sw/slc9_aarch64/O2/dev-local1/lib/libO2CCDB.so: o2::ccdb::CcdbApi::loadFileToMemory(std::vector<char, boost::container::pmr::polymorphic_allocator<char; > >&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::bas$; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2312460179:5309,load,loadFileToMemory,5309,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2312460179,1,['load'],['loadFileToMemory']
Performance,":basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #14 0x00007fffefbd7838 in cling::DynamicLibraryManager::loadLibrary(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, bool, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #15 0x00007fffefb06b14 in TCling::Load(char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #16 0x00007ffff55908e6 in TSystem::Load(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #17 0x00007ffff551c9e3 in TROOT::LoadClass(char const*, char const*, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCore.so; #18 0x00007fffefb05a65 in TCling::ShallowAutoLoadImpl(char const*) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #19 0x00007fffefb1acd2 in TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) (); from /cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev4/Sun/ROOT/v6-24-00-patches/x86_64-centos7-gcc8-opt/lib/libCling.so; #20 0x00007fffefb1b377 in TCling::AutoLoad(char const*, bool) (); from /cvmfs",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7657:4080,Load,LoadClass,4080,https://root.cern,https://github.com/root-project/root/issues/7657,1,['Load'],['LoadClass']
Performance,":operator delete(void*); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/redhat-linux-build/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/redhat-linux-build/RootTestDriver.cmake:227 (message):; error code: 1. 833/1153 Test #804: tutorial-roofit-rf408_RDataFrameToRooFit ............................***Failed 3.01 sec; Processing /builddir/build/BUILD/root-6.26.00/tutorials/roofit/rf408_RDataFrameToRooFit.C...; RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby ; Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University; All rights reserved, please read http://roofit.sourceforge.net/license.txt; IncrementalExecutor::executeFunction: symbol '_ZN10RooDataSetnwEm' unresolved while linking [cling interface function]!; You are probably missing the definition of RooDataSet::operator new(unsigned long); Maybe you need to load the corresponding shared library?; Symbol found in '/builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'; did you mean to load it with '.L /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/lib/libRooFitCore.so.6.26.00'?; CMake Error at /builddir/build/BUILD/root-6.26.00/x86_64-redhat-linux-gnu/RootTestDriver.cmake:227 (message):; error code: 1; ```. ### To Reproduce. Steps to reproduce the behavior:. The test failures don't happen every time the tests are run, so it is not a good reproducer.; However, you can see the problem this way:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.26/00 https://root.cern |; | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Jan 28 2022, 00:00:00 |; | From tag , 3 March 2022 |; | With g++ (GCC) 12.0.1 20220308 (Red Hat 12.0.1-0) |; |",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10203:2023,load,load,2023,https://root.cern,https://github.com/root-project/root/issues/10203,1,['load'],['load']
Performance,":path path;; };. #endif; ```. test.cpp:; ```C++; #include ""test.hh""; test::test(); {; std::cout << ""test constructor"" << std::endl;; this->path = ""."";; }. test::~test(); {; std::cout << ""test destructor"" << std::endl;; }; ```. Then load with ACLiC:; ```; $ root; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. root [0] .L test.cpp+; Info in <TUnixSystem::ACLiC>: creating shared library /data/giraudpf/tmp/./test_cpp.so; input_line_11:6:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl_deleter _1;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; input_line_11:7:22: error: '_List' is a private member of 'std::filesystem::path'; filesystem::path::_List::_Impl* _0;; ^; /usr/include/c++/11/bits/fs_path.h:636:12: note: declared private here; struct _List; ^; Error in <Load>: Could not declare TEmulatedTuple<filesystem::path::_List::_Impl*,filesystem::path::_List::_Impl_deleter>; ```. ### ROOT version. ```; ------------------------------------------------------------------; | Welcome to ROOT 6.28/06 https://root.cern |; | (c) 1995-2023, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Aug 30 2023, 16:45:00 |; | From tags/v6-28-06@v6-28-06 |; | With c++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. ```. ### Installation method. Built from source. ### Operating system. Ubuntu 22.04. ### Additional context. _No response_",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13574:1797,Load,Load,1797,https://root.cern,https://github.com/root-project/root/issues/13574,1,['Load'],['Load']
Performance,":thinking: My approach here may be wrong... Looking more at the `CMakeCache.txt` file generated for my build on ARM, I see these values when I set up the build of ROOT 6.18/04 with the system's GCC 6.3:. ```cmake; //Test HAVE_CXX_ATOMICS64_WITHOUT_LIB; HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=1; //Test HAVE_CXX_ATOMICS_WITHOUT_LIB; HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1; ```. While in my GCC 8 build of the master branch I see this:. ```cmake; //Test HAVE_CXX_ATOMICS64_WITHOUT_LIB; HAVE_CXX_ATOMICS64_WITHOUT_LIB:INTERNAL=; //Test HAVE_CXX_ATOMICS64_WITH_LIB; HAVE_CXX_ATOMICS64_WITH_LIB:INTERNAL=1; //Test HAVE_CXX_ATOMICS_WITHOUT_LIB; HAVE_CXX_ATOMICS_WITHOUT_LIB:INTERNAL=1; //Have library atomic; HAVE_CXX_LIBATOMICS64:INTERNAL=1; ```. The number of internal CMake variables actually differs between the two cases. In the first case, with the system's GCC 6.3 it does seem to detect things correctly. Since there is no `libatomic.so` file anywhere under `/usr/lib`. But in the second case, with GCC 8, CMake seems to falter. It seems that since only for the 64-bit atomic operations is a library needed, CMake gets confused about how to compile the code. Mind you, I'm pretty sure that the Raspberry Pi has a 32-bit ARM CPU. So I have no clue what the 64-bit atomic operations are doing. :confused:. I also tried to google these cache variables, but surprisingly I didn't find much useful. Still, I can't help but think now that this linking issue in ROOT should rather be attacked by fixing CMake somehow, and not by linking against `libatomic` ourselves. Then again, doing this is definitely getting the job done...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4561#issuecomment-544677066:1337,cache,cache,1337,https://root.cern,https://github.com/root-project/root/pull/4561#issuecomment-544677066,1,['cache'],['cache']
Performance,":{lambda()#1}>(std::unique_lock<std::mutex>&, ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock()::{lambda()#1}) (this=0x555556a28e70, __lock=..., __p=...) at /usr/include/c++/9/condition_variable:282; #6 0x00007ffff66ab912 in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e38) at /opt/root_src/core/thread/src/TReentrantRWLock.cxx:110; #7 0x00007ffff66ba786 in ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>::ReadLock (this=0x555556a28e30) at /opt/root_src/core/thread/src/TRWMutexImp.cxx:33; #8 0x00007ffff7589bea in ROOT::TReadLockGuard::TReadLockGuard (this=0x7ffffffdcbf0, mutex=0x555556a28e30) at /opt/root_src/core/base/inc/TVirtualRWMutex.h:120; #9 0x00007ffff7662143 in THashTable::FindObject (this=0x5555555ca010, name=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/cont/src/THashTable.cxx:242; #10 0x00007ffff76baf03 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true, hint_pair_offset=0, hint_pair_size=0) at /opt/root_src/core/meta/src/TClass.cxx:2973; #11 0x00007ffff76badd7 in TClass::GetClass (name=0x7ffff7e8d9dd ""TRint"", load=true, silent=true) at /opt/root_src/core/meta/src/TClass.cxx:2957; #12 0x00007ffff76c1e04 in TClass::InheritsFrom (this=0x555557ad69e0, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/meta/src/TClass.cxx:4871; #13 0x00007ffff75da92c in TObject::InheritsFrom (this=0x7ffffffdd280, classname=0x7ffff7e8d9dd ""TRint"") at /opt/root_src/core/base/src/TObject.cxx:447; #14 0x00007ffff7cd58f1 in TGCommandPlugin::CheckRemote (this=0x5555572a3120) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:141; #15 0x00007ffff7cd66c7 in TGCommandPlugin::HandleTimer (this=0x5555572a3120, t=0x555557972600) at /opt/root_src/gui/gui/src/TGCommandPlugin.cxx:275; #16 0x00007ffff7626f0d in TTimer::Notify (this=0x555557972600) at /opt/root_src/core/base/src/TTimer.cxx:146; #17 0x00007ffff7626ea0 in TTimer::CheckTimer (this=0x55555797",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:19008,load,load,19008,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['load'],['load']
Performance,; ### Failing tests:; - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_WriteFile](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25593/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_WriteFile/); - [projectroot.test.test_stress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25593/testReport/projectroot/test/test_stress/); - [projectroot.test.test_TFormulaTests](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25593/testReport/projectroot/test/test_TFormulaTests/); - [projectroot.runtutorials.tutorial_roostats_rs_numberCountingCombination](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25593/testReport/projectroot/runtutorials/tutorial_roostats_rs_numberCountingCombination/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25593/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); - [projectroot.roottest.root.io.filemerger.roottest_root_io_filemerger_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25593/testReport/projectroot.roottest.root.io/filemerger/roottest_root_io_filemerger_make/); - [projectroot.roottest.root.io.transient.base.roottest_root_io_transient_base_hadd_autoload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25593/testReport/projectroot.roottest.root.io.transient/base/roottest_root_io_transient_base_hadd_autoload/); - [projectroot.roottest.root.meta.roottest_root_meta_loadernotapp](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25593/testReport/projectroot.roottest.root/meta/roottest_root_meta_loadernotapp/); - [projectroot.roottest.root.meta.naming.roottest_root_meta_naming_execParamPack_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/25593/testReport/projectroot.roottest.root.meta/naming/roottest_root_meta_naming_execParamPack_auto/); - [projectroot.roottest.root.multicore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1814#issuecomment-388554181:1099,load,load,1099,https://root.cern,https://github.com/root-project/root/pull/1814#issuecomment-388554181,1,['load'],['load']
Performance,"; #10 0x00007f060a30402f in TCling::GetFunction (this=0x55db68f2e200, opaque_cl=0x7ffd5e11dc60, method=0x55db6da621c0 ""templateTest<double>""); at /home/b/bendavid/rootdev19/root/core/metacling/src/TCling.cxx:4942; #11 0x00007f060f49a226 in TListOfFunctions::FindObject (this=0x55db6af20ca0, name=0x55db6da621c0 ""templateTest<double>""); at /home/b/bendavid/rootdev19/root/core/meta/src/TListOfFunctions.cxx:181; #12 0x00007f060f6739df in Cppyy::GetMethodIndicesFromName (scope=<optimized out>, name=""templateTest<double>""); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1450; #13 0x00007f060f6e40e4 in CPyCppyy::meta_getattro (pyclass=0x55db68e88b00, pyname=0x7f05f4312ab0); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/CPPScope.cxx:339; #14 0x00007f06101ce662 in PyObject_GetAttr () from /usr/lib/libpython3.10.so.1.0; #15 0x00007f060f706e93 in CPyCppyy::tpp_call (pytmpl=<optimized out>, args=<optimized out>, kwds=0x7f05f430bdc0); at /home/b/bendavid/rootdev19/root/bindings/pyroot/cppyy/CPyCppyy/src/TemplateProxy.cxx:545; #16 0x00007f06101cb6b3 in _PyObject_MakeTpCall () from /usr/lib/libpython3.10.so.1.0; #17 0x00007f06101c6816 in _PyEval_EvalFrameDefault () from /usr/lib/libpython3.10.so.1.0; #18 0x00007f06101c0602 in ?? () from /usr/lib/libpython3.10.so.1.0; #19 0x00007f06102748a0 in PyEval_EvalCode () from /usr/lib/libpython3.10.so.1.0; #20 0x00007f0610285484 in ?? () from /usr/lib/libpython3.10.so.1.0; #21 0x00007f0610280f5b in ?? () from /usr/lib/libpython3.10.so.1.0; #22 0x00007f0610123443 in ?? () from /usr/lib/libpython3.10.so.1.0; #23 0x00007f06101230c7 in _PyRun_SimpleFileObject () from /usr/lib/libpython3.10.so.1.0; #24 0x00007f0610123a50 in _PyRun_AnyFileObject () from /usr/lib/libpython3.10.so.1.0; #25 0x00007f0610291247 in Py_RunMain () from /usr/lib/libpython3.10.so.1.0; #26 0x00007f06102659f9 in Py_BytesMain () from /usr/lib/libpython3.10.so.1.0; #27 0x00007f060fee7b25 in __libc_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010786248:6267,optimiz,optimized,6267,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010786248,2,['optimiz'],['optimized']
Performance,"; #18 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4277; #19 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5722543c0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #20 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a55b0, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #21 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af586cb1130, callable=0x7af5864a55a0, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #22 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a55a0) at ./Include/cpython/abstract.h:123; #23 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721feab0, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:7324,optimiz,optimized,7324,https://root.cern,https://github.com/root-project/root/issues/15117,3,['optimiz'],['optimized']
Performance,"; #21 0x00007faec0d8fdee in _dl_fixup () from /lib64/ld-linux-x86-64.so.2; #22 0x00007faea8293848 in ?? (); #23 0x000000000389e880 in ?? (); #24 0x00007faec0d8fdee in _dl_fixup () from /lib64/ld-linux-x86-64.so.2; #25 0x00007faea81b7600 in ?? (); #26 0x00007faebf15a400 in CPyCppyy::op_str_internal(_object*, _object*, bool)::sOStringStreamID () from /cvmfs/ilc.desy.de/key4hep/spackages/root/6.26.06/x86_64-centos7-gcc11.2.0-opt/dctcyvzmo7xg4dehiooyfl24oevtaids/lib/libcppyy3_9.so; #27 0x00007faec0f28040 in ?? (); #28 0x00007faea81b7600 in ?? (); #29 0x0000000000000003 in ?? (); #30 0x0000000000ccec00 in ?? (); #31 0x00007faebec9209f in CallT<unsigned char> (args=<optimized out>, nargs=<optimized out>, self=<optimized out>, method=<optimized out>) at /tmp/madlener/spack-stage/spack-stage-root-6.26.06-dctcyvzmo7xg4dehiooyfl24oevtaids/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:816; #32 Cppyy::CallB (method=<optimized out>, self=<optimized out>, nargs=<optimized out>, args=<optimized out>) at /tmp/madlener/spack-stage/spack-stage-root-6.26.06-dctcyvzmo7xg4dehiooyfl24oevtaids/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:833; #33 0x00007faebef0bd7f in GILCallB (ctxt=0x7faea81b7720, self=<optimized out>, method=<optimized out>) at /tmp/madlener/spack-stage/spack-stage-root-6.26.06-dctcyvzmo7xg4dehiooyfl24oevtaids/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:69; #34 CPyCppyy::(anonymous namespace)::BoolExecutor::Execute (this=<optimized out>, method=<optimized out>, self=<optimized out>, ctxt=0x7faea81b7720) at /tmp/madlener/spack-stage/spack-stage-root-6.26.06-dctcyvzmo7xg4dehiooyfl24oevtaids/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:148; #35 0x00007faebeef8e16 in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>, this=<optimized out>) at /tmp/madlener/spack-stage/spack-stage-root-6.26.06-dctcyvzmo7xg4d",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:6306,optimiz,optimized,6306,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,8,['optimiz'],['optimized']
Performance,"; #24 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #25 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af586cb0fc0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #26 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5880, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #27 0x00007af5872729fc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=9223372036854775809, args=0x7af5723f1950, callable=0x7af5864a5870, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #28 PyObject_Vectorcall (kwnames=0x0, nargsf=9223372036854775809, args=<optimized out>, callable=0x7af5864a5870) at ./Include/cpython/abstract.h:123; #29 call_function (kwnames=0x0, oparg=1, pp_stack=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:8268,optimiz,optimized,8268,https://root.cern,https://github.com/root-project/root/issues/15117,3,['optimiz'],['optimized']
Performance,"; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:114; #46 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510) at /usr/local/src/conda/python-3.10.4/Include/cpython/abstract.h:123; #47 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, trace_info=0x7fff519cc290, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5867; #48 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:6923,optimiz,optimized,6923,https://root.cern,https://github.com/root-project/root/issues/10676,3,['optimiz'],['optimized']
Performance,"; #5 0x00007ffff77bb30f in TClass::Destructor (this=this@entry=0x20ee770, obj=<optimized out>, dtorOnly=dtorOnly@entry=false) at /home/jhahnfel/ROOT/src/core/meta/src/TClass.cxx:5460 ; #6 0x00007fffe03c2cf3 in TBranchElement::ReleaseObject (this=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4671 ; #7 0x00007fffe03c539b in TBranchElement::ResetAddress (this=this@entry=0x26cebe0) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:4734 ; #8 0x00007fffe03c5411 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:982 ; #9 0x00007fffe03c5949 in TBranchElement::~TBranchElement (this=0x26cebe0, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TBranchElement.cxx:975 ; #10 0x00007ffff778b8f8 in TObjArray::Delete (this=this@entry=0x1e683a8) at /home/jhahnfel/ROOT/src/core/cont/src/TObjArray.cxx:376 ; #11 0x00007fffe04281c0 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:969 ; #12 0x00007fffe04287d9 in TTree::~TTree (this=0x1e68250, __in_chrg=<optimized out>) at /home/jhahnfel/ROOT/src/tree/tree/src/TTree.cxx:920 ; #13 0x00007ffff777c508 in THashList::Delete (this=0x21288b0, option=<optimized out>) at /home/jhahnfel/ROOT/src/core/cont/src/THashList.cxx:234 ; #14 0x00007ffff76d402b in (anonymous namespace)::R__ListSlowDeleteContent (files=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/inc/TDirectory.h:213 ; #15 TROOT::EndOfProcessCleanups (this=0x7ffff7b73200 <ROOT::Internal::GetROOT1()::alloc>) at /home/jhahnfel/ROOT/src/core/base/src/TROOT.cxx:1222 ; #16 0x00007ffff781166f in TUnixSystem::Exit (this=<optimized out>, code=0, mode=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2142 ; #17 0x00007ffff76dfcc7 in TApplication::Terminate (this=0x680190, status=<optimized out>) at /home/jhahnfel/ROOT/src/core/base/src/TApplication.cxx:1675 ; #18 0x00007",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9543:2012,optimiz,optimized,2012,https://root.cern,https://github.com/root-project/root/issues/9543,1,['optimiz'],['optimized']
Performance,; * failed to load '/etc/grid-security/certificates/7022e3c4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Projets.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceRoot-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:8285,load,load,8285,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18105,load,load,18105,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7f2388,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11796,load,load,11796,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2f2f573f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENAeSciencePersonalCA3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dbf09133.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8f016f43.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GermanGrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TSU-GE.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d0a33f8e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/dd4b34ea.namespaces' from CURLOPT_CA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:28503,load,load,28503,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,; * failed to load '/etc/grid-security/certificates/d41ec82f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/bd43b60c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7b384752.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/598b583e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:16316,load,load,16316,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,; * failed to load '/etc/grid-security/certificates/d4c339cb.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11604,load,load,11604,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,; * failed to load '/etc/grid-security/certificates/d6325660.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/82c2b224.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/InCommon-IGTF-Server-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d11f973e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ba240aa8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5f0dfc2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/4339b4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3cc00941.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/68aa9d51.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5168735f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CERN-GridCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETCA-ICA-2015.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:11700,load,load,11700,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"; +++ b/tree/treeplayer/src/TTreeProcessorMT.cxx; @@ -492,7 +492,8 @@ void TTreeProcessorMT::Process(std::function<void(TTreeReader &)> func); const auto &clusters = clustersAndEntries.first[0];; const auto &entries = clustersAndEntries.second[0];; auto processCluster = [&](const EntryRange &c) {; - auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; + gDirectory = nullptr; // TDirectory::TContext ctxt(nullptr);; + auto r = fTreeView->GetTreeReader(c.first, c.second, treeNames, fileNames, fFriendInfo, fEntryList, {entries});; func(*r);; };; fPool.Foreach(processCluster, clusters);; ```; Some might require some redesign:; ```; // Avoid spin lock inside GetThisSlotNumber just to get a thread local value ... but is this value; // really the same for the life of the thread ... and if so why is the next bottleneck then in: ROOT::Internal::RSlotStack::ReturnSlot; diff --git a/core/thread/inc/ROOT/TThreadedObject.hxx b/core/thread/inc/ROOT/TThreadedObject.hxx; index b3d73228e3..cff216e67f 100644; --- a/core/thread/inc/ROOT/TThreadedObject.hxx; +++ b/core/thread/inc/ROOT/TThreadedObject.hxx; @@ -279,7 +279,8 @@ namespace ROOT {; /// ~~~; std::shared_ptr<T> Get(); {; - return GetAtSlot(GetThisSlotNumber());; + static thread_local unsigned thisSlotNumber = GetThisSlotNumber();; + return GetAtSlot(thisSlotNumber);; }; ; /// Access the wrapped object and allow to call its methods.; ```; The next bottleneck after that might be:; ```; #5 0x00007ffff01a8c69 in std::unique_lock<std::mutex>::unique_lock (this=0x7ffedfffd910, __m=...) at /usr/include/c++/11/bits/unique_lock.h:69; #6 0x00007ffff01ca1e9 in TClingClassInfo::GetBaseOffset (this=0x555558a126a0, base=0x555555c8b500, address=0x0, isDerivedObject=true) at /home/pcanal/root_working/code/root/core/metacling/src/TClingClassInfo.cxx:616; ```. Note: that those in themselves are not sufficient to improve performance (which could also be bottlenecked by the posix system).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12761:4175,bottleneck,bottleneck,4175,https://root.cern,https://github.com/root-project/root/issues/12761,3,"['bottleneck', 'perform']","['bottleneck', 'bottlenecked', 'performance']"
Performance,"; 0x00007ffff74b1a66 in pthread_rwlock_rdlock () from /lib64/libpthread.so.0; (gdb) bt; #0 0x00007ffff74b1a66 in pthread_rwlock_rdlock () from /lib64/libpthread.so.0; #1 0x00007fffe91ecd62 in XrdCl::Env::GetInt(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, int&) (); from /lib64/libXrdCl.so.3; #2 0x00007fffe9207a39 in XrdCl::PostMaster::PostMaster() () from /lib64/libXrdCl.so.3; #3 0x00007fffe91fed5e in XrdCl::DefaultEnv::GetPostMaster() () from /lib64/libXrdCl.so.3; #4 0x00007fffe9245fc5 in XrdCl::FileStateHandler::~FileStateHandler() () from /lib64/libXrdCl.so.3; #5 0x00007fffe9243bd0 in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #6 0x00007fffe9243c6d in XrdCl::File::~File() () from /lib64/libXrdCl.so.3; #7 0x00007fffef69630f in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:233; #8 0x00007fffef696396 in TNetXNGFile::~TNetXNGFile (this=0x2019f20, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/net/netxng/src/TNetXNGFile.cxx:236; #9 0x00007ffff7bc5ad3 in TCollection::GarbageCollect (obj=0x2019f20) at /home/matevz/root-dev/dev-1/core/cont/src/TCollection.cxx:736; #10 0x00007ffff7bcdbe5 in TList::Delete (this=0x4307c0, option=0x7ffff7e1726b ""slow"") at /home/matevz/root-dev/dev-1/core/cont/src/TList.cxx:508; #11 0x00007ffff7af756b in TROOT::~TROOT (this=0x7ffff7f5a900 <ROOT::Internal::GetROOT1()::alloc>, __in_chrg=<optimized out>); at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:889; #12 0x00007ffff7af4f5f in at_exit_of_TROOT () at /home/matevz/root-dev/dev-1/core/base/src/TROOT.cxx:290; #13 0x00007ffff7317247 in __run_exit_handlers () from /lib64/libc.so.6; #14 0x00007ffff73173f0 in exit () from /lib64/libc.so.6; #15 0x00007ffff7c91627 in TUnixSystem::Exit (this=0x42a800, code=0, mode=true) at /home/matevz/root-dev/dev-1/core/unix/src/TUnixSystem.cxx:2157; #16 0x00007ffff7b0cc16 in TApplication::Terminate (this=0x4820",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8767:1131,optimiz,optimized,1131,https://root.cern,https://github.com/root-project/root/issues/8767,1,['optimiz'],['optimized']
Performance,; 17: Value assigned to 'h1' in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:199; 18: Assuming 'h1' is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 19: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:201; 20: Assuming 'cell_value' is not equal to kValue in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 21: Taking false branch in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:202; 22: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamDiscriminant.cxx:208; /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86:36: warning: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') [clang-analyzer-core.NullDereference]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:81; 3: Access to field 'fLastCe' results in a dereference of a null pointer (loaded from variable 'foam') in /opt/root_src/tmva/tmva/src/PDEFoamKernelGauss.cxx:86; /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112:31: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 2: Taking true branch in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:79; 3: Passing null pointer value via 1st parameter 'foam' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 4: Calling 'PDEFoamKernelLinN::WeightLinNeighbors' in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:82; 5: Called C++ object pointer is null in /opt/root_src/tmva/tmva/src/PDEFoamKernelLinN.cxx:112; /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:80:30: warning: Called C++ object pointer is null [clang-analyzer-core.CallAndMessage]; 1: Assuming 'foam' is equal to NULL in /opt/root_src/tmva/tmva/src/PDEFoamKernelTrivial.cxx:77; 2: Taking true branch in /opt/root_src/tmva/tmva/,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7526:108293,load,loaded,108293,https://root.cern,https://github.com/root-project/root/issues/7526,1,['load'],['loaded']
Performance,; 76: [ RUN ] RWLock.LargeconcurrentResetRestore; 76: [ OK ] RWLock.LargeconcurrentResetRestore (5534 ms); 76: [ RUN ] RWLock.concurrentResetRestoreTL; 76: [ OK ] RWLock.concurrentResetRestoreTL (59 ms); 76: [ RUN ] RWLock.LargeconcurrentResetRestoreTL; 76: [ OK ] RWLock.LargeconcurrentResetRestoreTL (4693 ms); 76: [ RUN ] RWLock.concurrentReadsAndWrites; 76: [ OK ] RWLock.concurrentReadsAndWrites (3099 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesSpin; 76: [ OK ] RWLock.concurrentReadsAndWritesSpin (3097 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd; 76: [ OK ] RWLock.concurrentReadsAndWritesStd (3129 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd14; 76: [ OK ] RWLock.concurrentReadsAndWritesStd14 (3210 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStd17; 76: [ OK ] RWLock.concurrentReadsAndWritesStd17 (3105 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBB; 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBB (3168 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesStdTBBUnique; 76: [ OK ] RWLock.concurrentReadsAndWritesStdTBBUnique (3112 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWrites; 76: [ OK ] RWLock.LargeconcurrentReadsAndWrites (3128 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd (3111 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd14; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd14 (3121 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStd17; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStd17 (3128 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBB; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBB (3100 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesStdTBBUnique (3117 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesSpin; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesSpin (315 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWrites; 76: [ OK ] RWLock.VeryLargeconcurrentR,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-742071485:10040,concurren,concurrentReadsAndWritesStdTBBUnique,10040,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-742071485,1,['concurren'],['concurrentReadsAndWritesStdTBBUnique']
Performance,"; 7: TCling::GetClassSharedLibs(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:7057; 8: TCling::ShallowAutoLoadImpl(char const*) in /opt/root_src/core/metacling/src/TCling.cxx:6113; 9: TCling::DeepAutoLoadImpl(char const*, std::unordered_set<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >&, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6166; 10: TCling::AutoLoad(char const*, bool) in /opt/root_src/core/metacling/src/TCling.cxx:6278; 11: TClass::LoadClassDefault(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5779; 12: TClass::LoadClass(char const*, bool) in /opt/root_src/core/meta/src/TClass.cxx:5756; 13: TROOT::LoadClass(char const*, bool) const in /opt/root_src/core/base/src/TROOT.cxx:2130; 14: TClass::GetClass(ClassInfo_t*, bool, bool) in /opt/root_src/core/meta/src/TClass.cxx:3379; 15: TBaseClass::GetClassPointer(bool) in /opt/root_src/core/meta/src/TBaseClass.cxx:66; 16: TClass::GetBaseClass(TClass const*) in /opt/root_src/core/meta/src/TClass.cxx:2687; 17: TClass::InheritsFrom(TClass const*) const in /opt/root_src/core/meta/src/TClass.cxx:4905; 18: TClass::Property() const in /opt/root_src/core/meta/src/TClass.cxx:6111; 19: TClass::ClassProperty() const in /opt/root_src/core/meta/src/TClass.cxx:2398; 20: TIsAProxy::operator()(void const*) in /opt/root_src/core/meta/src/TIsAProxy.cxx:93; 21: TClass::GetActualClass(void const*) const in /opt/root_src/core/meta/src/TClass.cxx:2612; 22: TKey::TKey(void const*, TClass const*, char const*, int, TDirectory*) in /opt/root_src/io/io/src/TKey.cxx:312; 23: TFile::CreateKey(TDirectory*, void const*, TClass const*, char const*, int) in /opt/root_src/io/io/src/TFile.cxx:1039; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7236#issuecomment-1949072327:73097,Load,LoadClass,73097,https://root.cern,https://github.com/root-project/root/issues/7236#issuecomment-1949072327,1,['Load'],['LoadClass']
Performance,"; 886: CMake Error at C:/Users/sftnight/build/release/RootTestDriver.cmake:237 (message):; 886: error code: -529697949; 886:; 886:; 9/16 Test #886: tutorial-dataframe-df012_DefinesAndFiltersAsStrings-py ...***Failed 4.43 sec; test 887; Start 887: tutorial-dataframe-df014_CSVDataSource-py. 887: Test command: ""C:\Program Files\CMake\bin\cmake.exe"" ""-DCMD=C:/Python38-32/python.exe^C:/Users/sftnight/git/master/tutorials/launcher.py^C:/Users/sftnight/git/master/tutorials/dataframe/df014_CSVDataSource.py"" ""-DSYS=C:/Users/sftnight/build/release"" ""-DENV=ROOTSYS=C:/Users/sftnight/build/release#PYTHONPATH=C:/Users/sftnight/build/release/bin"" ""-P"" ""C:/Users/sftnight/build/release/RootTestDriver.cmake""; 887: Environment variables:; 887: ROOT_HIST=0; 887: Test timeout computed to be: 1500; [TFile::Cp] Total 14.46 MB |====================| 100.00 % [57.6 MB/s]; 887: Traceback (most recent call last):; 887: File ""C:/Users/sftnight/git/master/tutorials/launcher.py"", line 33, in <module>; 887: spec.loader.exec_module(module); 887: File ""<frozen importlib._bootstrap_external>"", line 783, in exec_module; 887: File ""<frozen importlib._bootstrap>"", line 219, in _call_with_frames_removed; 887: File ""C:/Users/sftnight/git/master/tutorials/dataframe/df014_CSVDataSource.py"", line 43, in <module>; 887: invMass = filteredEvents.Histo1D((""invMass"", ""CMS Opendata: #mu#mu mass;#mu#mu mass [GeV];Events"", 512, 2, 110), ""m""); 887: File ""C:\Users\sftnight\build\release\bin\ROOT\pythonization\_rdataframe.py"", line 114, in _histo_profile; 887: res = original_method(model, *args[1:]); 887: TypeError: Template method resolution failed:; 887: none of the 4 overloaded methods succeeded. Full details:; 887: ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RJittedFilter,void>::Histo1D(experimental::__ROOT::basic_string_view<char,char_traits<char> > vName) =>; 887: TypeError: takes at most 1 arguments (2 given); 887: ROOT::RDF::RResultPtr<TH1D> ROOT::RDF::RInterface<ROOT::Detail::RDF::RJit",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6083#issuecomment-665456331:8733,load,loader,8733,https://root.cern,https://github.com/root-project/root/pull/6083#issuecomment-665456331,1,['load'],['loader']
Performance,; >Failed to load module Imt; >Failed to load module HistPainter; >Failed to load module PyMVA; >Failed to load module RDAVIX; >Failed to load module RHTTP; >Failed to load module FitPanel; >Failed to load module ROOTVecOps; >Failed to load module ProofDraw; >Failed to load module Quadp; >Failed to load module ROOTNTuple; >Failed to load module ROOT_Foundation_Stage1_NoRTTI; >Failed to load module Genetic; >Failed to load module Eve; >Failed to load module GeomPainter; >Failed to load module TreeViewer; >Failed to load module Physics; >Failed to load module EG; >Failed to load module Tree; >Failed to load module HistFactory; >Failed to load module Spectrum; >Failed to load module Matrix; >Failed to load module Html; >Failed to load module Hist; >Failed to load module GuiHtml; >Failed to load module _Builtin_intrinsics; >Failed to load module Gpad; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:4528,load,load,4528,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPython; >Failed to load module ROOTHist; >Failed to load module TreePlayer; >Failed to load module Gviz; >Failed to load module ROOTGraphicsPrimitives; >Failed to load module ROOTFitPanelv7; >Failed to load module Smatrix; >Failed to load module SessionViewer; >Failed to load module Thread; >input_line_4:1:2: error: unknown type name 'ifdef'; >#ifdef complex; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_5:1:2: error: unknown type name 'ifdef'; >#ifdef PI; > ^; ><<< cling interactive line includer >>>:1:1: error: expected unqualified-id; >input_line_6:1:2: error: unknown type name 'ifdef'; >#ifdef ERROR; > ^; ><<< cling interactive line includer >>>:1:1: error: expec,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:6209,load,load,6209,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,; >Failed to load module TMVAGui; >Failed to load module Postscript; >Failed to load module ROOTEve; >Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module Ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5386,load,load,5386,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer; RunTest: /buil,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1029801305:2905,load,load,2905,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1029801305,2,['load'],['load']
Performance,; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to load module MathCore; Failed to load module Gviz3d; Failed to load module WebGui6; Failed to load module ROOTTPython; Failed to load module ROOTHist; Failed to load module TreePlayer; Failed to load module ROOTGraphicsPrimitives; Failed to load module ROOTFitPanelv7; Failed to load module Smatrix; Failed to load module SessionViewer,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4599,load,load,4599,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,; Failed to load module Html; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module Vc; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ROOTTMVASofie; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module NetxNG; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module RootAuth; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ASImageGui; Failed to load module Graf; Failed to load module GX11; Failed to load module Gdml; Failed to load module ProofBench; Failed to load module Cling_Runtime_Extra; Failed to lo,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11901:4267,load,load,4267,https://root.cern,https://github.com/root-project/root/issues/11901,1,['load'],['load']
Performance,; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Failed to load module ROOTNTupleUti,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:1980,load,load,1980,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,; Failed to load module ROOTNTuple; Failed to load module ROOT_Foundation_Stage1_NoRTTI; Failed to load module Genetic; Failed to load module Eve; Failed to load module GeomPainter; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module _Builtin_intrinsics; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Net; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module ROOTGpadv7; Failed to load module X3d; Failed to load module Cling_Runtime; Failed to load module SPlot; Failed to load module EGPythia8; Failed to load module RooFit; Failed to load module RCsg; Failed to load module Rint; Failed to load module XMLParser; Failed to load module MultiProc; Failed to load module RooStats; Failed to load module GeomBuilder; Failed to load module Proof; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module GuiBld; Failed to load module ROOTWebDisplay; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module SQLIO; Failed to load module XMLIO; Failed to load module ROOT_Rtypes; Failed to load module std; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module RIO; Failed to load module ProofPlayer; Failed to load module ASImage; Failed to load module libc; Failed to load module ROOT_Foundation_C; Failed to load module MathMore; Failed to load module Foam; Failed to load module RSQLite; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module Core; Failed to l,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-752250076:3554,load,load,3554,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-752250076,2,['load'],['load']
Performance,; Failed to load module Unfold; Failed to load module RHTTPSniff; Failed to load module HistPainter; Failed to load module PyMVA; Failed to load module FitPanel; Failed to load module Unuran; Failed to load module Quadp; Failed to load module GeomPainter; Failed to load module Genetic; Failed to load module Eve; Failed to load module TreeViewer; Failed to load module Physics; Failed to load module ROOTTMVASofieParser; Failed to load module EG; Failed to load module Tree; Failed to load module HistFactory; Failed to load module Spectrum; Failed to load module Matrix; Failed to load module Html; Failed to load module Hist; Failed to load module GuiHtml; Failed to load module Gpad; Failed to load module TMVAGui; Failed to load module Postscript; Failed to load module ROOTEve; Failed to load module RGL; Failed to load module Fumili; Failed to load module Geom; Failed to load module RooFitMore; Failed to load module X3d; Failed to load module SPlot; Failed to load module Hbook; Failed to load module RooFit; Failed to load module RCsg; Failed to load module RooStats; Failed to load module RooFitRDataFrameHelpers; Failed to load module GeomBuilder; Failed to load module FITSIO; Failed to load module Ged; Failed to load module Recorder; Failed to load module FFTW; Failed to load module ROOTWebDisplay; Failed to load module GuiBld; Failed to load module RooFitCore; Failed to load module Gui; Failed to load module ROOTHistDraw; Failed to load module GX11TTF; Failed to load module ROOTTMVASofie; Failed to load module TMVAUtils; Failed to load module ASImage; Failed to load module MathMore; Failed to load module RooFitXRooFit; Failed to load module RooFitHS3; Failed to load module Foam; Failed to load module SpectrumPainter; Failed to load module Minuit2; Failed to load module MLP; Failed to load module ROOTDataFrame; Failed to load module GenVector; Failed to load module ROOTBrowserv7; Failed to load module Minuit; Failed to load module Graf3d; Failed to load module TMVA; Faile,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14964:1950,load,load,1950,https://root.cern,https://github.com/root-project/root/issues/14964,1,['load'],['load']
Performance,; Module 'Core' already loaded for 'Hash'; Module 'Core' already loaded for 'TQObject'; Module 'Core' already loaded for 'TQObject'; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TQObject; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TQObject. Module 'Core' already loaded for 'TFileHandler'; Module 'Core' already loaded for 'TFileHandler'; Module 'Core' already loaded for 'TFileHandler'; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for TFileHandler; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for TFileHandler. Processing Demo.C...; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for Demo; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for Demo; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for Demo. Loading 'Minuit2' on demand for 'vec'; Module 'Minuit2' already loaded for 'vec'; Module 'Minuit2' already loaded for 'vec'; Info in <TInterpreter::TCling::AutoParse>: Trying to autoparse for vec; Info in <TInterpreter::TCling::AutoLoad>: Trying to autoload for vec; Info in <TInterpreter::TCling::AutoParse>: Starting autoparse for vec. Loading 'std' on demand for '__alloc_traits'; Module 'std' already loaded for 'new_allocator'; Module 'std' already loaded for 'rebind'; Module 'std' already loaded for 'rebind'; Module 'std' already loaded for '_Lock_policy'; Module 'std' already loaded for 'param_type'; Module 'std' already loaded for 'char_traits'; Module 'std' already loaded for 'id'; Module 'MathCore' already loaded for 'ParameterSettings'; Module 'Minuit2' already loaded for 'MinuitParameter'; Module 'std' already loaded for 'rebind'; Module 'std' already loaded for '_Vector_impl'; Module 'std' already loaded for '_Vector_impl_data'; Module 'Smatrix' already loaded for 'type'; Module 'std' already loaded for 'type'; Module 'Core' already loaded for 'type'; Loading 'Hist' on demand for 'type'; Loading 'ROOTDataFrame' on demand for 'type'; Loading ,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1268084280:15808,Load,Loading,15808,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1268084280,3,"['Load', 'load']","['Loading', 'loaded']"
Performance,"; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs or (preferably) using the command (.gh bug) in; the ROOT prompt. Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #8 CPyCppyy::VoidArrayConverter::SetArg (this=0x5619bcb4fd10, pyobject=<optimized out>, para=..., ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/Converters.cxx:1513; #9 0x00007f3f00e7a068 in CPyCppyy::CPPMethod::ConvertAndSetArgs (this=this; entry=0x5619bc8a1b80, args=0x7f3f00328a98, nargsf=<optimized out>, ctxt=ctxt; entry=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:934; #10 0x00007f3f00e7a23c in CPyCppyy::CPPMethod::Call (this=0x5619bc8a1b80, self=; 0x7fffe41c52d8: 0x7f3eff3870d0, args=<optimized out>, nargsf=<optimized out>, kwds=<optimized out>, ctxt=0x7fffe41c5300) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:991; #11 0x00007f3f00e7f540 in CPyCppyy::(anonymous namespace)::mp_vectorcall (pymeth=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPPOverload.cxx:699; #12 0x00007f3f00eb7cde in CPyCppyy_tp_call (cb=0x7f3e9b952140, args=0x7f3f00328a98, nargsf=3, kwds=0x0) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyroot/cppyy/CPyCppyy/src/CPyCppyy.h:321; #13 CPyCppyy::SelectAndForward (pytmpl=pytmpl; entry=0x7f3e9b93ef70, pymeth=0x7f3f1384ce80, args=args; entry=0x7f3f00328a98, nargsf=nargsf; entry=3, kwds=kwds; entry=0x0, implicitOkay=implicitOkay; entry=true, use_targs=false, sighash=9465071328407200440, errors=...) at /builddir/build/BUILD/root-6.32.00-build/root-6.32.00/bindings/pyr",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15799:8491,optimiz,optimized,8491,https://root.cern,https://github.com/root-project/root/issues/15799,6,['optimiz'],['optimized']
Performance,; Total Execution Time: 3.0650 seconds (3.0786 wall clock). ---User Time--- --System Time-- --User+System-- ---Wall Time--- --- Name ---; 2.1559 ( 72.3%) 0.0469 ( 55.7%) 2.2028 ( 71.9%) 2.2163 ( 72.0%) Reading modules; 0.6367 ( 21.4%) 0.0087 ( 10.4%) 0.6455 ( 21.1%) 0.6461 ( 21.0%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/TMVA.pcm; 0.0604 ( 2.0%) 0.0161 ( 19.1%) 0.0765 ( 2.5%) 0.0767 ( 2.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/stl.pcm; 0.0210 ( 0.7%) 0.0000 ( 0.0%) 0.0210 ( 0.7%) 0.0213 ( 0.7%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Cling_Runtime.pcm; 0.0195 ( 0.7%) 0.0000 ( 0.0%) 0.0195 ( 0.6%) 0.0193 ( 0.6%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RooFit.pcm; 0.0122 ( 0.4%) 0.0041 ( 4.8%) 0.0163 ( 0.5%) 0.0163 ( 0.5%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/VMC.pcm; 0.0111 ( 0.4%) 0.0000 ( 0.0%) 0.0111 ( 0.4%) 0.0109 ( 0.4%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ROOTDataFrame.pcm; 0.0064 ( 0.2%) 0.0000 ( 0.0%) 0.0064 ( 0.2%) 0.0061 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Eve.pcm; 0.0053 ( 0.2%) 0.0000 ( 0.0%) 0.0053 ( 0.2%) 0.0056 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/ProofDraw.pcm; 0.0057 ( 0.2%) 0.0000 ( 0.0%) 0.0057 ( 0.2%) 0.0053 ( 0.2%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/HistFactory.pcm; 0.0005 ( 0.0%) 0.0040 ( 4.7%) 0.0044 ( 0.1%) 0.0045 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Smatrix.pcm; 0.0029 ( 0.1%) 0.0005 ( 0.6%) 0.0034 ( 0.1%) 0.0044 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Core.pcm; 0.0033 ( 0.1%) 0.0000 ( 0.0%) 0.0033 ( 0.1%) 0.0031 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/RIO.pcm; 0.0000 ( 0.0%) 0.0038 ( 4.5%) 0.0038 ( 0.1%) 0.0030 ( 0.1%) Loading /home/vagrant/workspace/root/runtime_cxxmodules_obj/lib/Unfold.pcm; 0,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2867:1501,Load,Loading,1501,https://root.cern,https://github.com/root-project/root/pull/2867,1,['Load'],['Loading']
Performance,"; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib/libthread_db.so.1"".; warning: File ""/home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [Detaching after vfork from child process 1453]; [Detaching after vfork from child process 1455]; [Detaching after vfork from child process 1457]; [Detaching after vfork from child process 1459]; [Detaching after vfork from child process 1461]; [Detaching after vfork from child process 1465]; [Detaching after vfork from child process 1467]; [New Thread 0x7fb1af5b6640 (LWP 1469)]; sleep; ^C; Thread 1 ""python"" received signal SIGINT, Interrupt.; 0x00007fb1cb2a1201 in select () from /usr/lib/libc.so.6; (gdb) break cling::NullDerefProtectionTransformer::Transform; Breakpoint 1 at 0x7fb1c5732850; (gdb) continue; Continuing.; instantiating template; [Thread 0x7fb1af5b6640 (LWP 1469) exited]. Thread 1 ""python"" hit Breakpoint 1, 0x00007fb1c5732850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; (gdb) bt; #0 0x00007fb1c5732850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #1 0x00007fb1c575c9c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #2 0x00007fb1c575cb",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010779015:2167,load,loading,2167,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010779015,1,['load'],['loading']
Performance,"; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib/libthread_db.so.1"".; warning: File ""/home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; add-auto-load-safe-path /home/b/bendavid/rootdev19/install/lib/libCore.so-gdb.py; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; To completely disable this security protection add; set auto-load safe-path /; line to your configuration file ""/home/b/bendavid/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; info ""(gdb)Auto-loading safe path""; [Detaching after vfork from child process 2333]; [Detaching after vfork from child process 2335]; [Detaching after vfork from child process 2337]; [Detaching after vfork from child process 2339]; [Detaching after vfork from child process 2341]; [Detaching after vfork from child process 2345]; [Detaching after vfork from child process 2347]; [New Thread 0x7f05f42cb640 (LWP 2349)]; sleep; ^C; Thread 1 ""python"" received signal SIGINT, Interrupt.; 0x00007f060ffb6201 in select () from /usr/lib/libc.so.6; (gdb) break cling::NullDerefProtectionTransformer::Transform; Breakpoint 1 at 0x7f060a447850; (gdb) continue; Continuing.; instantiating template. Thread 1 ""python"" hit Breakpoint 1, 0x00007f060a447850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; (gdb) bt; #0 0x00007f060a447850 in cling::NullDerefProtectionTransformer::Transform(clang::Decl*) () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #1 0x00007f060a4719c2 in cling::DeclCollector::TransformDecl(clang::Decl*) const () from /home/b/bendavid/rootdev19/install/lib/libCling.so; #2 0x00007f060a471b6f in cling::DeclCollector::Transform(clang",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9112#issuecomment-1010786248:2143,load,loading,2143,https://root.cern,https://github.com/root-project/root/issues/9112#issuecomment-1010786248,1,['load'],['loading']
Performance,"; ```. Loading A.sl. Processing macro.cc...; In file included from ADictUX dictionary payload:6:; ./B.h:5:18: error: base class has incomplete type; class B : public A {; ~~~~~~~^; ./A.h:5:7: note: definition of 'A' is not complete until the closing '}'; class A {; ^; In file included from ADictUX dictionary payload:6:; ./B.h:7:15: error: type 'A' is not a direct or virtual base of 'B'; B(int arg) : A(arg) {}; ^; Error in <TInterpreter::AutoParse>: Error parsing payload code for class A with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H. Error in <TInterpreter::AutoParse>: Error parsing payload code for class B with content:. #line 1 ""ADictUX dictionary payload"". #define _BACKWARD_BACKWARD_WARNING_H; // Inline headers; #include ""A.h""; #include ""B.h"". #undef _BACKWARD_BACKWARD_WARNING_H; ```. ### What is the expected behaviour?. The correct output is:; ```. Loading A.sl. Processing macro.cc...; init A with arg=0; test A; init A with arg=0; test A; ```. ### How to reproduce?. ```; unzip linker_example.zip; make; root.exe -b -q -q macro.cc; ```. ### ROOT version. Any v6 version. ### How did you install ROOT?. any. ### Which operating system are you using?. linux. ### Additional context. The problem might have been introduced by commit 3081bf5e006. In particular applying this diff 'fixes' the problem:; ```; diff --git a/core/dictgen/src/rootcling_impl.cxx b/core/dictgen/src/rootcling_impl.cxx; index f56ce23b7a..7cd24d2c63 100644; --- a/core/dictgen/src/rootcling_impl.cxx; +++ b/core/dictgen/src/rootcling_impl.cxx; @@ -4971,7 +4971,7 @@ int RootClingMain(int argc,; if (!gOptCxxModule) {; headersClassesMapString = GenerateStringFromHeadersForClasses(headersDeclsMap,; detectedUmbrella,; - true);; + false);; if (!gDriverConfig->fBuildingROOTStage1) {; if (!gOptWriteEmptyRootPCM); fwdDeclsString = GenerateFwdDeclString(scan, interp);; ```; This introd",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13034:1379,Load,Loading,1379,https://root.cern,https://github.com/root-project/root/issues/13034,1,['Load'],['Loading']
Performance,"; at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #157 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #158 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=306702, b=..., ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #159 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x555556982288, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #160 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #161 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #162 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x55555700e030, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #163 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x555556982270, conf=0x55555700e030); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #164 0x00007ffff783f24d in TStreamerInfoActions::TConfiguredAction::operator() (object=0x555556982270, buffer=..., ; this=0x55555701cfa0) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #165 TBufferFile::ApplySequence (this=0x7fffffffdd60, sequence=..., obj=0x555556982270); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBuffe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:35870,optimiz,optimized,35870,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,3,['optimiz'],['optimized']
Performance,"; entry=0x7f7cea140168, locals=locals; entry=0x7f7cea140168) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/ceval.c:669; #32 0x00007f7ce9cd74a6 in run_mod (arena=0x1c94380, flags=0x7f7ce8c8d7b0, locals=0x7f7cea140168, globals=0x7f7cea140168, filename=0x7f7ce9d04875 ""<string>"", mod=<optimized out>) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/pythonrun.c:1385; #33 PyRun_StringFlags (str=str; entry=0x1c67010 ""from PyCool import cool; cool.FieldSelectionn"", start=start; entry=257, globals=0x7f7cea140168, locals=0x7f7cea140168, flags=flags; entry=0x7ffc3c9f58ec) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/pythonrun.c:1348; #34 0x00007f7ce9cd8a9b in PyRun_SimpleStringFlags (command=command; entry=0x1c67010 ""from PyCool import cool; cool.FieldSelectionn"", flags=flags; entry=0x7ffc3c9f58ec) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Python/pythonrun.c:983; #35 0x00007f7ce9cebe0f in Py_Main (argc=3, argv=<optimized out>) at /workspace/build/externals/Python-2.7.16/src/Python/2.7.16/Modules/main.c:589; #36 0x00007f7ce8ee1555 in __libc_start_main () from /lib64/libc.so.6; #37 0x00000000004006be in _start (); ===========================================================. *** Break *** abort. ===========================================================; There was a crash (kSigAbort).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f7ce8f8446c in waitpid () from /lib64/libc.so.6; #1 0x00007f7ce8f01f62 in do_system () from /lib64/libc.so.6; #2 0x00007f7ce1c6d484 in TUnixSystem::Exec (this=0x1d21040, shellcmd=0x11c2f7d0 ""/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Mon/ROOT/HEAD/x86_64-centos7-gcc8-dbg/etc/gdb-backtrace.sh 27438 1>&2"") at /workspace/build/projects/ROOT-HEAD/src/ROOT/HEAD/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f7ce1c6dce0 in TUnixSystem::StackTrace (this=0x1d21040) at /workspace/build/projects/ROOT-H",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6359#issuecomment-694290624:12880,optimiz,optimized,12880,https://root.cern,https://github.com/root-project/root/issues/6359#issuecomment-694290624,1,['optimiz'],['optimized']
Performance,; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.return.roottest_cling_return_constRetrunTest_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.cling.stl/vector/roottest_cling_stl_vector_Run_WILL_FAIL/); - [projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.cling/typedef_global/roottest_cling_typedef_global_scopeTest2/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_runforeign](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11345/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_runforeign/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343509208:3659,cache,cache,3659,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343509208,2,['cache'],['cache']
Performance,; specified path differs in case from file name on disk [-Wnonportable-include-path] . And 10 more. ### Failing tests:; - [projectroot.roottest.cling.return.roottest_cling_return_constRetrunTest_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.cling/return/roottest_cling_return_constRetrunTest_WILL_FAIL/); - [projectroot.roottest.root.collection.roottest_root_collection_execTClonesArrayAbsorb_auto](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root/collection/roottest_root_collection_execTClonesArrayAbsorb_auto/); - [projectroot.roottest.root.io.json.roottest_root_io_json_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root.io/json/roottest_root_io_json_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.cling.stl.vector.roottest_cling_stl_vector_Run_WILL_FAIL](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.cling.stl/vector/roottest_cling_stl_vector_Run_WILL_FAIL/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_runforeign](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_runforeign/); - [projectroot.roottest.cling.array.roottest_cling_array_runarray1](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.cling/array/roottest_cling_array_runarray1/); - [projectroot.roottest.cling.typedef_global.roottest_cling_typedef_global_scopeTest2](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/11412/testReport/projectroot.roottest.cling/typedef_global/roottest_cling_typedef_global_scopeTest2/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1306#issuecomment-343735053:3599,cache,cache,3599,https://root.cern,https://github.com/root-project/root/pull/1306#issuecomment-343735053,1,['cache'],['cache']
Performance,; tmva/inc/TMVA/Configurable.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataInputHandler.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSet.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetFactory.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetInfo.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/DataSetManager.h: MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ExpectedErrorPruneTool.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/FitterBase.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticAlgorithm.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/GeneticPopulation.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/KDEKernel.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/LDA.h: mutable MsgLogger *fLogger; // message logging service; tmva/inc/TMVA/ModulekNN.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/OptimizeConfigParameters.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/PDEFoam.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDEFoamDensityBase.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/PDEFoamKernelBase.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/PDF.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCalc.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ROCCurve.h: mutable MsgLogger *fLogger; //! message logger; tmva/inc/TMVA/Ranking.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/Reader.h: mutable MsgLogger* fLogger; // message logger; tmva/inc/TMVA/Results.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsClassification.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsMulticlass.h: mutable MsgLogger* fLogger; //! message logger; tmva/inc/TMVA/ResultsRegression.h: mutable MsgLogger* fLogger; ,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9792:1454,Optimiz,OptimizeConfigParameters,1454,https://root.cern,https://github.com/root-project/root/issues/9792,1,['Optimiz'],['OptimizeConfigParameters']
Performance,"; where (starting at some point) it is invalidated at each entry *and* the basket; from the previous cluster boundary up to some entry number less than the current; entry are loaded over and over again (until the entry number reaches the next cluster; boundary).; ; In a case encountered by CMS, a TTree has a recorded cluster size of 165 events. However the TTree; appears to not have been clustered; most basket size are the same and seem to be flushed at 139 events; interval. A few branches are flushed less frequently, for example EventAuxiliary is flushed every 459; entries.; ; As a consequence when entry 417 is requested, the cluster boundary is calculated as 330 and; the first end as 495. Then all basket containing entries in that range are loaded, including; EventAuxiliary's basket containing entries 459 to 917. Then 917 is the highest available (partial); entry available. Thus the next time the TTreeCache is invalidated is when entry 918 is requested.; As that point the cluster boundary is calculated as 845 and the first end as 495, however; (with the small enough TTreeCache size), the cache is full as soon as the basket for EventAuxiliary; is added. This resulted in a 'valid' range for this cache of 845 to 917 and lead to the reading; all the baskets added so far ... and thus eventhough none of them would be used for reading; and they already had been read once in memory. Then for entry 919, the exact same behavior; repeated.; ; The solution consist on marking the 'minimum' valid range as being 'at least' one cluster wide.; ; Thus in the example above for entry 918 through 989, **only** the missing baskets are read; individually resulting in 'degraded' performance but **not** a wild over-read.; ; A future enhancement would be, in those cases, restart the next buffer from the last valid; entry + 1 rather than the previous event boundary. This would result in a 'slightly' over-read; (some baskets might be read twice) rather than the wild useless over-read we had.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1778:1334,cache,cache,1334,https://root.cern,https://github.com/root-project/root/pull/1778,3,"['cache', 'perform']","['cache', 'performance']"
Performance,"; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------; ```. typed `.Class`; and I got:. ```; ===========================================================================; struct std::_Head_base<_Idx, _Head, true>; SIZE: (NA) FILE: tuple LINE: -1; List of member variables: -------------------------------------------------. *** Break *** segmentation violation. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f37ae96a45a in __GI___wait4 (pid=36789, stat_loc=stat_loc; entry=0x7ffd3cfe1cd8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f37ae96a41b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffd3cfe1cd8, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f37ae8d0bcb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f37af034824 in TUnixSystem::StackTrace() () from /tmp/root/lib/libCore.so.6.29; #4 0x00007f37af031b55 in TUnixSystem::DispatchSignals(ESignals) () from /tmp/root/lib/libCore.so.6.29; #5 <signal handler called>; #6 0x00007f37abf32000 in clang::ASTContext::getTypeInfoImpl(clang::Type const*) const () from /tmp/root/lib/libCling.so; #7 0x00007f37abf23b62 in clang::ASTContext::getTypeInfo(clang::Type const*) const () from /tmp/root/lib/libCling.so; #8 0x00007f37abf2ecab in clang::ASTContext::getTypeInfoInChars(clang::Type const*) const () from /tmp/root/lib/libCling.so; #9 0x00007f37abf2ed79 in clang::ASTContext::getTypeInfoInChars(clang::QualType) const () from /tmp/root/lib/libCling.so; #10 0x00007f37ac2694c5 in (anonymous namespace)::ItaniumRecordLayoutBuilder::LayoutField(clang::FieldDecl const*, bool) () from /tmp/root/lib/libCling.so; #11 0x00007f37ac26a907 in (anonymous namespace)::ItaniumRecordLayoutBuilder::",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10140#issuecomment-1365035386:1448,optimiz,optimized,1448,https://root.cern,https://github.com/root-project/root/issues/10140#issuecomment-1365035386,1,['optimiz'],['optimized']
Performance,";\0A\0A}\0A\0A\00\00\00\00\00"", section "".nv_fatbin"", align 8; @__cuda_fatbin_wrapper = dso_local constant { i32, i32, i8*, i8* } { i32 1180844977, i32 1, i8* getelementptr inbounds ([249 x i8], [249 x i8]* @1, i64 0, i64 0), i8* null }, section "".nvFatBinSegment"", align 8; @__cuda_gpubin_handle = dso_local global i8** null, align 8; @llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* bitcast (void (i8*)* @__cuda_module_ctor_cling_module_6 to void ()*), i8* null }]. ; Function Attrs: noinline uwtable; define dso_local void @_Z7kernel2v() #0 {; %1 = alloca %struct.dim3.463, align 8; %2 = alloca %struct.dim3.463, align 8; %3 = alloca i64, align 8; %4 = alloca i8*, align 8; %5 = alloca { i64, i32 }, align 8; %6 = alloca { i64, i32 }, align 8; %7 = alloca i8*, i64 1, align 16; %8 = call i32 @__cudaPopCallConfiguration(%struct.dim3.463* %1, %struct.dim3.463* %2, i64* %3, i8** %4); %9 = load i64, i64* %3, align 8; %10 = load i8*, i8** %4, align 8; %11 = bitcast { i64, i32 }* %5 to i8*; %12 = bitcast %struct.dim3.463* %1 to i8*; call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false); %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 0; %14 = load i64, i64* %13, align 8; %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 1; %16 = load i32, i32* %15, align 8; %17 = bitcast { i64, i32 }* %6 to i8*; %18 = bitcast %struct.dim3.463* %2 to i8*; call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false); %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0; %20 = load i64, i64* %19, align 8; %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1; %22 = load i32, i32* %21, align 8; %23 = bitcast i8* %10 to %struct.CUstream_st.464*; %24 = call i32 @cudaLaunchKernel(i8* bitcast (void ()* @_Z7kernel2v to i8*), i64 %14, i32 %16, i64 %20, i32 %22, i8** %7, i64 %9, %struct.CUstream_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1156850209:19579,load,load,19579,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1156850209,2,['load'],['load']
Performance,"<G__G__ANALYSIS_215_0_109(G__value*, char const*, G__param*, int)>, result7=result7; entry=0x7ffcac8c2c90, funcname=funcname; entry=0x249df80 """", libp=libp; entry=0x7ffcac8c2cd0, hash=hash; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/Api.cxx:393; #10 0x00007fba3322b094 in G__execute_call (result7=result7; entry=0x7ffcac8c2c90, libp=libp; entry=0x7ffcac8c2cd0, ifunc=ifunc; entry=0x249df80, ifn=ifn; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/newlink.cxx:2408; #11 0x00007fba3322b38b in G__call_cppfunc (result7=result7; entry=0x7ffcac8c2c90, libp=libp; entry=0x7ffcac8c2cd0, ifunc=ifunc; entry=0x249df80, ifn=ifn; entry=0) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/newlink.cxx:2612; #12 0x00007fba33212c9f in G__interpret_func (result7=result7; entry=0x7ffcac8c2c90, funcname=0xfa4210 ""InitAnalysis"", libp=libp; entry=0x7ffcac8c2cd0, hash=1240, p_ifunc=0x249df80, funcmatch=funcmatch; entry=1, memfunc_flag=<optimized out>) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/ifunc.cxx:5791; #13 0x00007fba33204f55 in G__getfunction (item=item; entry=0xe73375 ""InitAnalysis()"", known3=known3; entry=0x7ffcac8ce1a4, memfunc_flag=<optimized out>, memfunc_flag; entry=1) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/func.cxx:2660; #14 0x00007fba332cc07c in G__getstructmem (store_var_type=store_var_type; entry=112, varname=..., membername=membername; entry=0xe73375 ""InitAnalysis()"", memnamesize=memnamesize; entry=2147483647, tagname=tagname; entry=0xfa35e0 ""mgr"", known2=0x7ffcac8ce1a4, varglobal=0x7fba33a89180 <G__global>, objptr=2) at /home/gnp78160/alice/sw/SOURCES/ROOT/v5-34-30-alice10/v5-34-30-alice10/cint/cint/src/var.cxx:6821; #15 0x00007fba332c51b5 in G__getvariable (item=item; entry=0xe73370 ""mgr->InitAnalysis()"", known=known; entry=0x7ffcac8ce1a4, varg",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6977:3197,optimiz,optimized,3197,https://root.cern,https://github.com/root-project/root/issues/6977,1,['optimiz'],['optimized']
Performance,"<built-in method release of _thread.lock object at remote 0x7faec0dc70f0>, _waiters=<collections.deque at remote 0x7faec0dcd340>) at remote 0x7faec0dc7250>, _flag=True) at remote 0x7faec0dc7fa0>, _is_stopped=False, _initialized=True, _stderr=<_io.TextIOWrapper at remote 0x7faec0ecfe10>, _invoke_excepthook=<function at remote 0x7faea81bb940>)...(truncated), tstate=0x389e880) at ./Include/internal/pycore_ceval.h:40; #52 function_code_fastcall (tstate=0x389e880, co=<optimized out>, args=<optimized out>, nargs=0x1, globals=<optimized out>) at Objects/call.c:330; #53 0x00007faec083dc70 in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7faea820a7b8, callable=<function at remote 0x7faeaa8ac040>, tstate=0x389e880) at ./Include/cpython/abstract.h:118; #54 PyObject_Vectorcall (kwnames=0x0, nargsf=<optimized out>, args=0x7faea820a7b8, callable=<function at remote 0x7faeaa8ac040>) at ./Include/cpython/abstract.h:127; #55 call_function (kwnames=0x0, oparg=<optimized out>, pp_stack=<synthetic pointer>, tstate=0x389e880) at Python/ceval.c:5077; #56 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:3506; #57 0x00007faec08360ab in _PyEval_EvalFrame (throwflag=0x0, f=Frame 0x7faea820a640, for file /cvmfs/ilc.desy.de/key4hep/spackages/python/3.9.10/x86_64-centos7-gcc11.2.0-opt/7j5vqgmqodwjxxe2ssf42zxb2uqxi374/lib/python3.9/threading.py, line 973, in _bootstrap_inner (self=<Thread(_target=<function at remote 0x7faea81bb8b0>, _name='Thread-1', _args=(<PyROOTApplication(_is_ipython=False, keep_polling=True, process_root_events=<...>) at remote 0x7faec0dc7280>,), _kwargs={}, _daemonic=True, _ident=140388121413376, _native_id=34896, _tstate_lock=<_thread.lock at remote 0x7faea82355d0>, _started=<Event(_cond=<Condition(_lock=<_thread.lock at remote 0x7faec0dc70f0>, acquire=<built-in method acquire of _thread.lock object at remote 0x7faec0dc70f0>, release=<built-in method release of _thread.lock object a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564100129:14283,optimiz,optimized,14283,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564100129,2,['optimiz'],['optimized']
Performance,"<command line>"" 1; # 1 ""<built-in>"" 2; # 1 ""/dev/null"" 2. sftnight@macphsft18 ~ % clang++ -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -x c++ /dev/null -E -v; Apple clang version 16.0.0 (clang-1600.0.26.3); Target: x86_64-apple-darwin23.6.0; Thread model: posix; InstalledDir: /Library/Developer/CommandLineTools/usr/bin; ignoring nonexistent directory ""/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1""; ""/Library/Developer/CommandLineTools/usr/bin/clang"" -cc1 -triple x86_64-apple-macosx14.0.0 -Wundef-prefix=TARGET_OS_ -Wdeprecated-objc-isa-usage -Werror=deprecated-objc-isa-usage -Werror=implicit-function-declaration -E -disable-free -clear-ast-before-backend -disable-llvm-verifier -discard-value-names -main-file-name null -mrelocation-model pic -pic-level 2 -mframe-pointer=all; -fno-strict-return -ffp-contract=on -fno-rounding-math -funwind-tables=2 -target-sdk-version=15.0 -fvisibility-inlines-hidden-static-local-var -fno-modulemap-allow-subdirectory-search -target-cpu penryn -tune-cpu generic -debugger-tuning=lldb -target-linker-version 1115.7.3 -v -fcoverage-compilation-dir=/Users/sftnight -resource-dir /Library/Developer/CommandLineTools/usr/lib/clang/16 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1 -internal-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/local/include -internal-isystem /Library/Developer/CommandLineTools/usr/lib/clang/16/include -internal-externc-isystem /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include -internal-externc-isystem /Library/Developer/CommandLineTools/usr/include -Wno-reorder-init-list -Wno-implicit-int-float-conversion -Wno-c99-designator -Wno-final-dtor-non-final-class -Wno-extra-semi-stmt -Wno-misleading-indentation -Wno-quoted-include-in-framework-header -Wno-implicit-fallthrough -Wno-enum-enum-conversion -Wno-enum-float-conversion -Wno-elaborated-enum-base -Wno-reser",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16494#issuecomment-2373214590:5650,tune,tune-cpu,5650,https://root.cern,https://github.com/root-project/root/pull/16494#issuecomment-2373214590,2,['tune'],['tune-cpu']
Performance,"<details>; <summary>Here's the full data from yesterday:</summary>. ```; ntpl-perf01:/data/ssdext4/jonas/20231113; 00-master; 0:26.13; 0:26.11; 0:26.53; 0:28.10; 0:30.30; 0:34.19; 0:52.34; 2:11.26. 01-limit; 0:25.86; 0:26.09; 0:26.86; 0:28.11; 0:30.24; 0:33.25; 0:53.51; 1:50.53. 02-no-queue; 0:26.04; 0:26.54; 0:26.85; 0:28.03; 0:29.89; 0:33.16; 0:49.10; 1:40.39. ntpl-perf01:/data/hddext4/jonas/20231113; 00-master; 0:27.11; 0:30.00; 0:33.98; 0:42.73; 0:59.20; 1:26.24; 2:29.70; 4:35.79. 01-limit; 0:27.70; 0:29.85; 0:32.01; 0:42.52; 1:00.22; 1:17.40; 2:26.46; 4:37.90. 02-no-queue; 0:31.03; 0:30.05; 0:34.06; 0:42.76; 1:00.26; 1:30.60; 2:29.95; 4:34.74; ```; </details>. ![ssdext4](https://github.com/root-project/root/assets/1613332/6aa4706c-d23e-4ab0-8f94-0f1d7cf66d23); ![hddext4](https://github.com/root-project/root/assets/1613332/be804c42-1f99-4d2c-9f73-f758c01c896a). From this one measurement it looks like no queue would be slower at 32 threads, but this is within experiment uncertainty: Re-running the same benchmark, I measure 1m14s for both versions. I would have to run a lot more sophisticated tests to quantify the error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1809726974:286,queue,queue,286,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1809726974,3,['queue'],['queue']
Performance,"<https://bugs.gentoo.org/>.; Find the GDB manual and other documentation resources online at:; <http://www.gnu.org/software/gdb/documentation/>. For help, type ""help"".; Type ""apropos word"" to search for commands related to ""word""...; Reading symbols from bin/root.exe...; (gdb) break f; Function ""f"" not defined.; Make breakpoint pending on future shared library load? (y or [n]) y; Breakpoint 1 (f) pending.; (gdb) run; Starting program: /srv/root/build/bin/root.exe ; warning: File ""/srv/root/build/lib/libCore.so-gdb.py"" auto-loading has been declined by your `auto-load safe-path' set to ""$debugdir:$datadir/auto-load"".; To enable execution of this file add; 	add-auto-load-safe-path /srv/root/build/lib/libCore.so-gdb.py; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; To completely disable this security protection add; 	set auto-load safe-path /; line to your configuration file ""/home/amadio/.config/gdb/gdbinit"".; For more information about this security protection see the; ""Auto-loading safe path"" section in the GDB manual. E.g., run from the shell:; 	info ""(gdb)Auto-loading safe path""; [Thread debugging using libthread_db enabled]; Using host libthread_db library ""/usr/lib64/libthread_db.so.1"".; [Detaching after vfork from child process 798483]; [Detaching after vfork from child process 800084]; [Detaching after vfork from child process 800087]; ------------------------------------------------------------------; | Welcome to ROOT 6.27/01 https://root.cern |; | (c) 1995-2022, The ROOT Team; conception: R. Brun, F. Rademakers |; | Built for linuxx8664gcc on Dec 13 2022, 14:33:20 |; | From heads/cling-profile-debug@v6-25-02-3189-gf5fced388b |; | With c++ (Gentoo 12.2.1_p20221203 p3) 12.2.1 20221203 |; | Try '.help'/'.?', '.demo', '.license', '.credits', '.quit'/'.q' |; ------------------------------------------------------------------. [Detaching after vfork from child process 800350]; root [0] double f(double x) { return x*x; }; root [1] double y = ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11882:1871,load,loading,1871,https://root.cern,https://github.com/root-project/root/pull/11882,1,['load'],['loading']
Performance,"<optimized out>, mode=<optimized out>) at ./dlfcn/dlopen.c:81; #26 0x00007f7902a01a07 in TROOT::InitInterpreter() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #27 0x00007f7902a01bcf in ROOT::Internal::GetROOT2() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #28 0x00007f79029ae41d in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #29 0x00005572a86f2327 in main ; Aborted (core dumped); ```. *****************************************************************************************************************************; run the demo macro of TMapFile, similar error appears,; ```; Fatal in <operator new>: with std::align_val_t is not implemented yet; aborting; #0 0x00007f1de22ea3ea in __GI___wait4 (pid=10442, stat_loc=stat_loc; entry=0x7ffc77af3ad8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007f1de22ea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffc77af3ad8, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007f1de2250bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007f1de3b13034 in TUnixSystem::StackTrace() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #4 0x00007f1de39d0702 in DefaultErrorHandler(int, bool, char const*, char const*) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #5 0x00007f1de3a96fe9 in ErrorHandler () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #6 0x00007f1de3a97b69 in Fatal(char const*, char const*, ...) () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #7 0x00007f1de3cb56ed in operator new(unsigned long, std::align_val_t) () from /home/koala/ROOT/root_v6.30.02/lib/libNew.so; #8 0x00007f1de01f5430 in std::pair<llvm::StringMapIterator<llvm::cl::Option*>, bool> llvm::StringMap<llvm::cl::Option*, llvm::MallocAllocator>::try_emplace<llvm::cl::Option*>(llvm::StringRef, llvm::cl::Option*&&) () from /home/koala/ROOT/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:5057,optimiz,optimized,5057,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,1,['optimiz'],['optimized']
Performance,"<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #17 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #18 0x00007ffff7931b46 in TStreamerInfo::ReadBuffer<TVirtualCollectionProxy> (this=0x555556c6f630, b=..., arr=..., compinfo=0x55555864f9a0,; first=first@entry=0, last=16, narr=2, eoffset=0, arrayMode=1) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #19 0x00007ffff787d2bd in TStreamerInfo::ReadBufferSTL (v7=<optimized out>, eoffset=<optimized out>, nc=<optimized out>, cont=<optimized out>, b=...,; this=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1741; #20 TStreamerInfo::ReadBufferSTL (this=<optimized out>, b=..., cont=<optimized out>, nc=<optimized out>, eoffset=<optimized out>, v7=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1737; #21 0x00007ffff793f598 in TStreamerInfo::ReadBuffer<char**> (this=0x555558602630, b=..., arr=@0x7fffffffd740: 0x55555862ab20,; compinfo=compinfo@entry=0x55555862ab08, first=first@entry=0, last=last@entry=1, narr=2, eoffset=0, arrayMode=3); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoReadBuffer.cxx:1274; #22 0x00007ffff77f92ac in TStreamerInfoActions::VectorLooper::GenericRead (buf=..., start=<optimized out>, end=0x555556a3aaa0, loopconfig=<optimized out>,; config=0x55555862aaf0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1883; #23 0x00007ffff76e978c in TStreamerInfoActions::TConfiguredAction::operator() (loopconf=0x55555862a9e0, end_collection=0x555556a3aaa0,; start_collection=0x555556a3a850, buffer=..., this=0x",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:4353,optimiz,optimized,4353,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,2,['optimiz'],['optimized']
Performance,"<pre>@@ -49,6 +49,14 @@; &lt;/div&gt;; &lt;script&gt;; if (typeof require !== &apos;undefined&apos;) {{; + try {{; + var base_url = JSON.parse(document.getElementById(&apos;jupyter-config-data&apos;).innerHTML).baseUrl;; + }} catch(_) {{; + var base_url = &apos;/&apos;;; + }};; + require.config({{; + baseUrl: base_url + &apos;static/&apos;; + }});; ; // All requirements met (we are in jupyter notebooks or we loaded requirejs before).; display_{jsDivId}();; </pre>",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8459#issuecomment-863161884:412,load,loaded,412,https://root.cern,https://github.com/root-project/root/issues/8459#issuecomment-863161884,1,['load'],['loaded']
Performance,"= 0x000000043c5a70 → 0x00000d0000000d (""\r""?),; $rsi = 0x00000000000000,; $rdx = 0x000000ffffffff,; $rcx = 0x007fffd8004400 → 0x0000000000000000,; $r8 = 0x007fffd801d870 → 0x0000000000000000,; $r9 = 0x007fffd80044b0 → 0x007fffd801d870 → 0x0000000000000000; ); ─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── threads ────; [#0] Id 1, Name: ""python3"", stopped 0x7ffff71d7de2 in pthread_cond_timedwait@@GLIBC_2.3.2 (), reason: SIGSEGV; [#1] Id 2, Name: ""python3"", stopped 0x7fffddef621d in TCanvas::Resize (), reason: SIGSEGV; ───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────── trace ────; [#0] 0x7fffddef621d → TCanvas::Resize(this=0x4729d00); [#1] 0x7fffd6c2bae8 → TRootCanvas::HandleContainerConfigure(this=0x463e910); [#2] 0x7fffd6b68a3d → TGFrame::HandleEvent(this=0x46940a0, event=0x7fffdf211150); [#3] 0x7fffd6b186ba → TGClient::HandleEvent(this=0x3aed770, event=0x7fffdf211150); [#4] 0x7fffd6b189ed → TGClient::ProcessOneEvent(this=0x3aed770); [#5] 0x7fffd6b189ed → TGClient::ProcessOneEvent(this=0x3aed770); [#6] 0x7fffd6b18a2b → TGClient::HandleInput(this=0x3aed770); [#7] 0x7ffff593e9b0 → TUnixSystem::DispatchOneEvent(this=0x7034f0, pendingOnly=<optimized out>); [#8] 0x7ffff5866a1a → TSystem::ProcessEvents(this=0x7034f0); [#9] 0x7ffff7fd6012 → mov rcx, QWORD PTR [rsp+0x10]; ───────────────────────────────────────────────────────────; ```. While sometimes it executes normally:. ```gdb; [Detaching after fork from child process 40508]; [Detaching after fork from child process 40510]; [Detaching after fork from child process 40514]; [Detaching after fork from child process 40516]; [Detaching after fork from child process 40519]; [Detaching after fork from child process 40523]; [Detaching after fork from child process 40526]; [New Thread 0x7fffdf212700 (LWP 40534)]; [*] Failed to find objfile or not a valid file format: [Er",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564113510:5950,optimiz,optimized,5950,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564113510,1,['optimiz'],['optimized']
Performance,"=..., addr=0x55555855a0c0, conf=0x555558626dd0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1405; #27 0x00007ffff76e9c05 in TStreamerInfoActions::TConfiguredAction::operator() (object=0x55555855a0c0, buffer=..., this=0x55555812a1b0); at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfoActions.h:123; #28 TBufferFile::ApplySequence (this=0x7fffffffd9d0, sequence=..., obj=0x55555855a0c0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3580; #29 0x00007ffff76f1b94 in TBufferFile::ReadClassBuffer (this=0x7fffffffd9d0, cl=0x555558490b70, pointer=<optimized out>, onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3499; #30 0x00007ffff778a22e in TClass::Streamer (onfile_class=0x0, b=..., obj=0x55555855a0c0, this=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:610; #31 TKey::ReadObjectAny (this=0x5555569f77a0, expectedClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/src/TKey.cxx:1108; #32 0x00007ffff774aa1b in TDirectoryFile::GetObjectChecked (this=0x555556a15ce0, namecycle=<optimized out>, expectedClass=0x555558490b70); at /home/rembserj/spaces/master/root/src/root/io/io/src/TDirectoryFile.cxx:1111; #33 0x00005555555551f6 in TDirectory::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectory.h:207; #34 TDirectoryFile::Get<RooStats::HistFactory::Measurement> (this=0x555556a15ce0, namecycle=<optimized out>); at /home/rembserj/spaces/master/root/src/build/../install/include/root/TDirectoryFile.h:84; #35 repro () at repro.C:10; ```. So the crash is here (https://github.com/root-project/root/blob/master/io/io/src/TBufferFile.cxx#L245):; ```c++; if (nwh == 255) {; *this >> nbig;; obj->resize(nbig,'\0');; ReadFastArray((char*)obj->data(),nbig);; }; ```; I have put some debug pr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12967#issuecomment-1581261520:7054,optimiz,optimized,7054,https://root.cern,https://github.com/root-project/root/issues/12967#issuecomment-1581261520,2,['optimiz'],['optimized']
Performance,"=..., isa=0x477430, dfil=0x7ffff7cb8cab ""TGlobal.h"",; ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25, silent=false) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:1273; #7 0x00007ffff7c3a72a in ROOT::CreateClass (cname=0x7ffff7cb7638 ""TGlobal"", id=id@entry=2, info=..., isa=isa@entry=0x477430, dfil=dfil@entry=0x7ffff7cb8cab ""TGlobal.h"",; ifil=ifil@entry=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dl=27, il=25) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TClass.cxx:5607; #8 0x00007ffff7c4b552 in ROOT::Internal::TDefaultInitBehavior::CreateClass (il=25, dl=27, ifil=0x7ffff7cccf88 ""/local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGlobal.cxx"", dfil=0x7ffff7cb8cab ""TGlobal.h"",; isa=0x477430, info=..., id=2, cname=<optimized out>, this=0x7ffff7da7508 <ROOT::Internal::DefineBehavior(void*, void*)::theDefault>) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/Rtypes.h:176; #9 ROOT::TGenericClassInfo::GetClass (this=0x7ffff7dab660 <ROOT::GenerateInitInstanceLocal(TGlobal const*)::instance>) at /local2/pcanal/cint_working/rootcling/v6-14-00-patches/core/meta/src/TGenericClassInfo.cxx:250; #10 0x00007ffff7b1a2d8 in TGlobal::Class () at /home/pcanal/root_builds/v6-14-00-patches/opt/core/base/G__Core.cxx:17156; #11 0x00007ffff7ac01de in TGlobal::IsA (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #12 TGlobal::CheckTObjectHashConsistency (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TGlobal.h:48; #13 0x00007ffff7be9dcd in TObject::CheckedHash (this=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/TObject.h:314; #14 THashTable::GetCheckedHashValue (this=0xe65a20, obj=0xee3bc0) at /home/pcanal/root_builds/v6-14-00-patches/opt/include/THashTable.h:94; #15 THashTable::Add (this=0xe65a20, o",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2776:4486,optimiz,optimized,4486,https://root.cern,https://github.com/root-project/root/pull/2776,2,['optimiz'],['optimized']
Performance,"=..., obj=0x555557688140); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:3577; #10 0x00007ffff7846fc2 in TBufferFile::ReadClassBuffer (this=0x7fffffffdd60, cl=0x5555571443e0, pointer=0x555557688140, ; onFileClass=<optimized out>) at /home/rembserj/spaces/master/root/src/root/io/io/inc/TStreamerInfo.h:209; #11 0x00007ffff5e5fff1 in RooRealVar::Streamer (this=0x5555566050f0, R__b=...); at /home/rembserj/spaces/master/root/src/root/roofit/roofitcore/src/RooRealVar.cxx:1272; #12 0x00007ffff7847c32 in TClass::Streamer (onfile_class=0x0, b=..., obj=<optimized out>, this=0x5555571ca9b0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #13 TBufferFile::ReadObjectAny (this=0x7fffffffdd60, clCast=0x555555ea1490); at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:2472; #14 0x00007ffff78c4b2e in TGenCollectionStreamer::ReadObjects (this=0x555556815d80, nElements=7, b=..., onFileClass=<optimized out>); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:395; #15 0x00007ffff78c5587 in TGenCollectionStreamer::ReadBufferGeneric (this=0x555556815d80, b=..., obj=0x55555767ce00, onFileClass=0x0); at /home/rembserj/spaces/master/root/src/root/io/io/src/TGenCollectionStreamer.cxx:1368; #16 0x00007ffff78406e9 in TClass::Streamer (onfile_class=0x555556b0ffa0, b=..., obj=<optimized out>, this=0x555556b0ffa0); at /home/rembserj/spaces/master/root/src/root/core/meta/inc/TClass.h:609; #17 TBufferFile::ReadFastArray (this=0x7fffffffdd60, start=<optimized out>, cl=0x555556b0ffa0, n=<optimized out>, ; streamer=<optimized out>, onFileClass=0x555556b0ffa0) at /home/rembserj/spaces/master/root/src/root/io/io/src/TBufferFile.cxx:1608; #18 0x00007ffff796698e in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x555557625580, addr=<optimized out>, buf=...); at /home/rembserj/spaces/master/root/src/root/io/io/src/TStreamerInfoActions.cxx:1362; #19 TStreamerInfoActions::ReadSTL<&TStreamerInfoAct",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10282#issuecomment-1084517200:3417,optimiz,optimized,3417,https://root.cern,https://github.com/root-project/root/issues/10282#issuecomment-1084517200,1,['optimiz'],['optimized']
Performance,"=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:406; #20 0x00007ffff6e86144 in TSystem::Run (this=0x5555557f57c0) at /opt/root_src/core/base/src/TSystem.cxx:356; #21 0x00007ffff6e0f64b in TApplication::Run (this=0x7ffffffdce30, retrn=false) at /opt/root_src/core/base/src/TApplication.cxx:1604; #22 0x00005555555695a5 in main (argc=3, argv=0x7fffffffded8) at /home/huesof/Desktop/zdt/gui/main.cxx:112; (gdb) print (('ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>' * const)ROOT::gCoreMutex)->fMutex; $1 = {<std::__mutex_base> = {_M_mutex = pthread_mutex_t = {Type = Normal, Status = Acquired, possibly with no waiters, Owner ID = Unknown, Robust = No, Shared = No, Protocol = None}}, <No data fields>}; (gdb) . ```. Valgrind:; ![image](https://user-images.githubusercontent.com/10653970/125307579-783b0000-e330-11eb-803c-2e738711fca8.png). And in another computer:; ```; Thread 1 ""runGUI"" received signal SIGINT, Interrupt.; futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183; 183	../sysdeps/nptl/futex-internal.h: No such file or directory.; (gdb) info threads; Id Target Id Frame ; * 1 Thread 0x7ffff523cb80 (LWP 705986) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556a28e98) at ../sysdeps/nptl/futex-internal.h:183; 2 Thread 0x7ffee552f700 (LWP 706016) ""runGUI"" futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183; (gdb) thread apply all bt. Thread 2 (Thread 0x7ffee552f700 (LWP 706016)):; #0 futex_wait_cancelable (private=<optimized out>, expected=0, futex_word=0x555556c5e1ec) at ../sysdeps/nptl/futex-internal.h:183; #1 __pthread_cond_wait_common (abstime=0x0, clockid=0, mutex=0x5555579d0380, cond=0x555556c5e1c0) at pthread_cond_wait.c:508; #2 __pthread_cond_wait (cond=0x555556c5e1c0, mutex=0x5555579d0380) at pthread_cond_wait.c:638; #3 0x00007ffff66c5077 in TPosixCo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8365#issuecomment-878288640:15502,optimiz,optimized,15502,https://root.cern,https://github.com/root-project/root/issues/8365#issuecomment-878288640,1,['optimiz'],['optimized']
Performance,"=0x7ffa510d24e0 ""libcppyy3_10"", pathname=0x7ffa510b53d0 ""/home/rebrobles/anaconda3/envs/my_root_env/lib/python3.10/site-packages/libcppyy3_10.so"", fp=0x0) at /usr/local/src/conda/python-3.10.4/Python/dynload_shlib.c:100; #36 0x000055b06815e707 in _PyImport_LoadDynamicModuleWithSpec (fp=0x0, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/importdl.c:137; #37 _imp_create_dynamic_impl (module=<optimized out>, file=<optimized out>, spec=0x7ffa510d2ce0) at /usr/local/src/conda/python-3.10.4/Python/import.c:2049; #38 _imp_create_dynamic (module=<optimized out>, args=<optimized out>, nargs=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/clinic/import.c.h:330; #39 0x000055b06807e5bf in cfunction_vectorcall_FASTCALL (func=0x7ffa51345530, args=0x7ffa510d1528, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/methodobject.c:430; #40 0x000055b0680733ac in do_call_core (kwdict=0x7ffa50ee20c0, callargs=0x7ffa510d1510, func=0x7ffa51345530, trace_info=0x7fff519cc0d0, tstate=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5891; #41 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:4277; #42 0x000055b06807e3cf in _PyEval_EvalFrame (throwflag=0, f=0x7ffa512ddb40, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5052; #43 _PyEval_Vector (kwnames=<optimized out>, argcount=<optimized out>, args=<optimized out>, locals=0x0, con=0x7ffa512f9520, tstate=0x55b069159680) at /usr/local/src/conda/python-3.10.4/Python/ceval.c:5065; #44 _PyFunction_Vectorcall (func=0x7ffa512f9510, stack=<optimized out>, nargsf=<optimized out>, kwnames=<optimized out>) at /usr/local/src/conda/python-3.10.4/Objects/call.c:342; #45 0x000055b06807229b in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=<optimized out>, args=0x7ffa512c1bc8, callable=0x7ffa512f9510, tstate=0x55b069159680) at /usr/loc",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10676:6502,optimiz,optimized,6502,https://root.cern,https://github.com/root-project/root/issues/10676,1,['optimiz'],['optimized']
Performance,"=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:26; #36 0x00007f109602416c in _dl_init (main_map=0x55f90e715250, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-init.c:117; #37 0x00007f1095d561a5 in _dl_catch_exception () from /lib64/libc.so.6; #38 0x00007f109602ab5e in dl_open_worker (a=0x7ffc2594db30) at dl-open.c:822; #39 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #40 0x00007f109602af5f in _dl_open (file=<optimized out>, mode=-2147483390, caller_dlopen=0x7f1094968e1a <py_dl_open+138>, nsid=-2, argc=1, argv=0x7ffc2594fdc8, env=0x55f90e6d77e0) at dl-open.c:898; #41 0x00007f1095c85cbc in dlopen_doit () from /lib64/libc.so.6; #42 0x00007f1095d56148 in _dl_catch_exception () from /lib64/libc.so.6; #43 0x00007f1095d56213 in _dl_catch_error () from /lib64/libc.so.6; #44 0x00007f1095c8578e in _dlerror_run () from /lib64/libc.so.6; #45 0x00007f1095c85d71 in dlopen; GLIBC_2.2.5 () from /lib64/libc.so.6; #46 0x00007f1094968e1a in py_dl_open (self=<optimized out>, args=<optimized out>) at /usr/local/src/conda/python-3.11.9/Modules/_ctypes/callproc.c:1538; #47 0x000055f90886ab28 in cfunction_call (func=0x7f1094a5b0b0, args=<optimized out>, kwargs=<optimized out>) at /usr/local/src/conda/python-3.11.9/Objects/methodobject.c:553; #48 0x000055f9088498b3 in _PyObject_MakeTpCall (tstate=0x55f908be5998 <_PyRuntime+166328>, callable=0x7f1094a5b0b0, args=<optimized out>, nargs=2, keywords=0x0) at /usr/local/src/conda/python-3.11.9/Objects/call.c:214; #49 0x000055f9088573b6 in _PyEval_EvalFrameDefault (tstate=<optimized out>, frame=<optimized out>, throwflag=<optimized out>) at /usr/local/src/conda/python-3.11.9/Python/ceval.c:4769; #50 0x000055f90887a981 in _PyEval_EvalFrame (throwflag=0, frame=0x7f1096012c30, tstate=0x55f908be5998 <_PyRuntime+166328>) at /usr/local/src/conda/python-3.11.9/Include/internal/pycore_ceval.h:73; #51 _PyEval_Vector (kwnames=<optimized out>, argcount=3, args=0x7ffc2594e0a0, locals=0x0, func=<optimized out>, tstate=0x55f908",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15970:14136,optimiz,optimized,14136,https://root.cern,https://github.com/root-project/root/issues/15970,4,['optimiz'],['optimized']
Performance,"=0x7ffc77af7128) at ./elf/dl-init.c:117; #15 0x00007f1de2374905 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7f1de3cc8f40 <call_dl_init>, args=args; entry=0x7ffc77af6a80) at ./elf/dl-error-skeleton.c:182; #16 0x00007f1de3cc8ff6 in dl_open_worker (a=0x7ffc77af6c20) at ./elf/dl-open.c:808; #17 dl_open_worker (a=a; entry=0x7ffc77af6c20) at ./elf/dl-open.c:771; #18 0x00007f1de23748a8 in __GI__dl_catch_exception (exception=exception; entry=0x7ffc77af6c00, operate=operate; entry=0x7f1de3cc8f60 <dl_open_worker>, args=args; entry=0x7ffc77af6c20) at ./elf/dl-error-skeleton.c:208; #19 0x00007f1de3cc934e in _dl_open (file=<optimized out>, mode=-2147483647, caller_dlopen=0x7f1de3a01a07 <TROOT::InitInterpreter()+1031>, nsid=-2, argc=1, argv=<optimized out>, env=0x7ffc77af7128) at ./elf/dl-open.c:883; #20 0x00007f1de229063c in dlopen_doit (a=a; entry=0x7ffc77af6e90) at ./dlfcn/dlopen.c:56; #21 0x00007f1de23748a8 in __GI__dl_catch_exception (exception=exception; entry=0x7ffc77af6df0, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:208; #22 0x00007f1de2374973 in __GI__dl_catch_error (objname=0x7ffc77af6e48, errstring=0x7ffc77af6e50, mallocedp=0x7ffc77af6e47, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:227; #23 0x00007f1de229012e in _dlerror_run (operate=operate; entry=0x7f1de22905e0 <dlopen_doit>, args=args; entry=0x7ffc77af6e90) at ./dlfcn/dlerror.c:138; #24 0x00007f1de22906c8 in dlopen_implementation (dl_caller=<optimized out>, mode=<optimized out>, file=<optimized out>) at ./dlfcn/dlopen.c:71; #25 ___dlopen (file=<optimized out>, mode=<optimized out>) at ./dlfcn/dlopen.c:81; #26 0x00007f1de3a01a07 in TROOT::InitInterpreter() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #27 0x00007f1de3a01bcf in ROOT::Internal::GetROOT2() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #28 0x000055a9220122ec in main (); Aborted (core dumped); ```. *********************************",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:7944,optimiz,optimized,7944,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,2,['optimiz'],['optimized']
Performance,"=0x7ffcc0391e90, location=0x7fb64cd545ca ""RecursiveRemove"", fmt=0x7fb64cd54560 ""Output file of the TFile Merger (targeting %s) has been deleted (likely due to a TTree larger than 100Gb)"") at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:922; #9 0x00007fb64cb218de in TFileMerger::RecursiveRemove (this=0x7ffcc0391e90, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:965; #10 0x00007fb64d1c6dba in THashList::RecursiveRemove (this=0x1cedde0, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/cont/src/THashList.cxx:354; #11 0x00007fb64d0fa3c5 in TROOT::RecursiveRemove (this=0x7fb64d51ae20 <ROOT::Internal::GetROOT1()::alloc>, obj=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TROOT.cxx:2458; #12 0x00007fb64d869597 in ROOT::CallRecursiveRemoveIfNeeded (obj=...) at /home/vpadulan/Programs/rootproject/root/core/base/inc/TROOT.h:400; #13 0x00007fb64d148388 in TNamed::~TNamed (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TNamed.cxx:45; #14 0x00007fb64d12a257 in TDirectory::~TDirectory (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/core/base/src/TDirectory.cxx:91; #15 0x00007fb64cb0f88e in TDirectoryFile::~TDirectoryFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TDirectoryFile.cxx:178; #16 0x00007fb64cb26cf9 in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:503; #17 0x00007fb64cb26d1c in TFile::~TFile (this=0x3c283e0, __in_chrg=<optimized out>) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFile.cxx:542; #18 0x00007fb64d14909f in TObject::Delete (this=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/core/base/src/TObject.cxx:178; #19 0x00007fb64bd29fcd in TTree::ChangeFile (this=0x3c045e0, file=0x3c283e0) at /home/vpadulan/Programs/rootproject/root/t",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6640:5216,optimiz,optimized,5216,https://root.cern,https://github.com/root-project/root/issues/6640,1,['optimiz'],['optimized']
Performance,"=0x7ffeb2a74d08) at ./elf/dl-init.c:117; #15 0x00007f7901b74905 in __GI__dl_catch_exception (exception=exception; entry=0x0, operate=operate; entry=0x7f7902d71f40 <call_dl_init>, args=args; entry=0x7ffeb2a74550) at ./elf/dl-error-skeleton.c:182; #16 0x00007f7902d71ff6 in dl_open_worker (a=0x7ffeb2a746f0) at ./elf/dl-open.c:808; #17 dl_open_worker (a=a; entry=0x7ffeb2a746f0) at ./elf/dl-open.c:771; #18 0x00007f7901b748a8 in __GI__dl_catch_exception (exception=exception; entry=0x7ffeb2a746d0, operate=operate; entry=0x7f7902d71f60 <dl_open_worker>, args=args; entry=0x7ffeb2a746f0) at ./elf/dl-error-skeleton.c:208; #19 0x00007f7902d7234e in _dl_open (file=<optimized out>, mode=-2147483647, caller_dlopen=0x7f7902a01a07 <TROOT::InitInterpreter()+1031>, nsid=-2, argc=1, argv=<optimized out>, env=0x7ffeb2a74d08) at ./elf/dl-open.c:883; #20 0x00007f7901a9063c in dlopen_doit (a=a; entry=0x7ffeb2a74960) at ./dlfcn/dlopen.c:56; #21 0x00007f7901b748a8 in __GI__dl_catch_exception (exception=exception; entry=0x7ffeb2a748c0, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:208; #22 0x00007f7901b74973 in __GI__dl_catch_error (objname=0x7ffeb2a74918, errstring=0x7ffeb2a74920, mallocedp=0x7ffeb2a74917, operate=<optimized out>, args=<optimized out>) at ./elf/dl-error-skeleton.c:227; #23 0x00007f7901a9012e in _dlerror_run (operate=operate; entry=0x7f7901a905e0 <dlopen_doit>, args=args; entry=0x7ffeb2a74960) at ./dlfcn/dlerror.c:138; #24 0x00007f7901a906c8 in dlopen_implementation (dl_caller=<optimized out>, mode=<optimized out>, file=<optimized out>) at ./dlfcn/dlopen.c:71; #25 ___dlopen (file=<optimized out>, mode=<optimized out>) at ./dlfcn/dlopen.c:81; #26 0x00007f7902a01a07 in TROOT::InitInterpreter() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #27 0x00007f7902a01bcf in ROOT::Internal::GetROOT2() () from /home/koala/ROOT/root_v6.30.02/lib/libCore.so; #28 0x00007f79029ae41d in TApplication::TApplication(char const*, int*, char**, void*, int) () f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1867607489:3481,optimiz,optimized,3481,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1867607489,2,['optimiz'],['optimized']
Performance,"=0x7fff9d900168 ""hpx"", title=0x7fff9d90016c ""This is the px distribution"", nbins=100, xlow=-4, xup=4) at /builddir/build/BUILD/root-6.24.00/hist/hist/src/TH1.cxx:685; #14 0x00007fff9cb0a3c8 in TH1F::TH1F (this=<optimized out>, name=<optimized out>, title=<optimized out>, nbins=<optimized out>, xlow=<optimized out>, xup=<optimized out>) at /builddir/build/BUILD/root-6.24.00/hist/hist/src/TH1.cxx:9873; #15 0x00007fff9d57071c in ?? (); #16 0x00007fff9d570050 in ?? (); #17 0x00007fffa8b0c810 in cling::IncrementalExecutor::executeWrapper (this=0x1366e8cf0, function=..., returnValue=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/IncrementalExecutor.cpp:376; #18 0x00007fffa8a45a50 in cling::Interpreter::RunFunction (this=0x1366e76e0, FD=0x1379d9920, res=0x7fffc5bcba10) at /usr/include/c++/10/bits/basic_string.h:907; #19 0x00007fffa8a4f2b4 in cling::Interpreter::EvaluateInternal (this=0x1366e76e0, input=..., CO=..., V=0x7fffc5bcba10, wrapPoint=<optimized out>) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1391; #20 0x00007fffa8a4fd74 in cling::Interpreter::echo (this=0x1366e76e0, input=""hsimple() /* '.x' tries to invoke a function with the same name as the macro */"", V=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/Interpreter/Interpreter.cpp:1043; #21 0x00007fffa8ba224c in cling::MetaSema::actOnxCommand (this=0x137078a00, file=..., args=..., result=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaSema.cpp:145; #22 0x00007fffa8bb2c10 in cling::MetaParser::isXCommand (this=0x137036da0, actionResult=; 0x7fffc5bcb810: cling::MetaSema::AR_Success, resultValue=0x7fffc5bcba10) at /builddir/build/BUILD/root-6.24.00/interpreter/cling/lib/MetaProcessor/MetaParser.cpp:319; #23 0x00007fffa8bb50b0 in cling::MetaParser::isCommand (this=0x137036da0, actionResult=; 0x7fffc5bcb810: cling::MetaSema::AR_Success, resultValue=0x7fffc5bcba10",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8072#issuecomment-844784432:3994,optimiz,optimized,3994,https://root.cern,https://github.com/root-project/root/issues/8072#issuecomment-844784432,1,['optimiz'],['optimized']
Performance,"=14472. ```; 1242/2175 Test #950: tutorial-v7-ntuple-ntpl007_mtFill .........................................................***Failed 2.52 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; Warning in <[ROOT.NTuple] Warning C:\ROOT-CI\src\tree\ntuple\v7\src\RPageStorageFile.cxx:52 in __thiscall ROOT::Experimental::Detail::RPageSinkFile::RPageSinkFile(class std::basic_string_view<char,struct std::char_traits<char> >,const class ROOT::Experimental::RNTupleWriteOptions &)>: The RNTuple file format will change. Do not store real data with this version of RNTuple!; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ```; 1254/2175 Test #959: tutorial-v7-concurrentfill.cxx ............................................................***Failed 5.91 sec; ; Processing C:/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; CMake Error at C:/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: Access violation; ```. ### Mac 14 ARM. https://github.com/root-project/root/actions/runs/7693740131/job/20963072938?pr=14472. ```; 1373/2419 Test #1052: tutorial-v7-ntuple-ntpl007_mtFill .................................................................***Failed 1.32 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/ntuple/ntpl007_mtFill.C...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```. ```; 1384/2419 Test #1067: tutorial-v7-concurrentfill.cxx ....................................................................***Failed 1.76 sec; ; Processing /Users/sftnight/ROOT-CI/src/tutorials/v7/concurrentfill.cxx...; IncrementalExecutor::executeFunction: symbol '__emutls_get_address' unresolved while linking [cling interface function]!; CMake Error at /Users/sftnight/ROOT-CI/build/RootTestDriver.cmake:232 (message):; error code: 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1915527940:3463,concurren,concurrentfill,3463,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1915527940,4,['concurren'],['concurrentfill']
Performance,"=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:88; #1 tcmalloc::SLL_PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, head=0x45a0a0) at src/linked_list.h:79; #2 tcmalloc::ThreadCache::FreeList::PopRange (end=<synthetic pointer>, start=<synthetic pointer>, N=32, this=0x45a0a0) at src/thread_cache.h:238; #3 tcmalloc::ThreadCache::ReleaseToCentralCache (this=this@entry=0x45a040, src=src@entry=0x45a0a0, cl=<optimized out>, N=N@entry=32) at src/thread_cache.cc:206; #4 0x00007ffff57dff2c in tcmalloc::ThreadCache::ListTooLong (this=0x45a040, list=0x45a0a0, cl=<optimized out>) at src/thread_cache.cc:164; #5 0x00007ffff6dc2465 in TString::UnLink (this=0xcbb820) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/inc/TString.h:265; --Type <RET> for more, q to quit, c to continue without paging--c; #6 0x00007ffff68a2266 in TString::~TString (this=0xcbb820, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TString.cxx:249; #7 0x00007ffff68ac37f in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TStyle.cxx:478; #8 0x00007ffff68ac46c in TStyle::~TStyle (this=0xcbb500, __in_chrg=<optimized out>) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/base/src/TStyle.cxx:483; #9 0x00007ffff68fa74e in TCollection::GarbageCollect (obj=0xcbb500) at /data/cmsbld/jenkins/workspace/build-any-ib/w/BUILD/el8_amd64_gcc11/lcg/root/6.29.01-192f857c68d2f0a1a8cb821f03f5a854/root-6.29.01/core/cont/src/TCollection.cxx:736; #10 0x00007ffff6902c6f in TList::Delete (this=0xcb8070, option=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13429:2382,optimiz,optimized,2382,https://root.cern,https://github.com/root-project/root/issues/13429,1,['optimiz'],['optimized']
Performance,"=<synthetic pointer>, trace_info=0x7af5721fec90, tstate=0x5fe0e89423b0) at Python/ceval.c:5893; #30 _PyEval_EvalFrameDefault (tstate=<optimized out>, f=<optimized out>, throwflag=<optimized out>) at Python/ceval.c:4198; #31 0x00007af5873c6e54 in _PyEval_EvalFrame (throwflag=0, f=0x7af5723f17e0, tstate=0x5fe0e89423b0) at ./Include/internal/pycore_ceval.h:46; #32 _PyEval_Vector (tstate=0x5fe0e89423b0, con=0x7af5864a5640, locals=<optimized out>, args=<optimized out>, argcount=<optimized out>, kwnames=<optimized out>) at Python/ceval.c:5067; #33 0x00007af5872cd9bc in _PyObject_VectorcallTstate (kwnames=0x0, nargsf=1, args=0x7af5721feda8, callable=0x7af5864a5630, tstate=0x5fe0e89423b0) at ./Include/cpython/abstract.h:114; #34 method_vectorcall (method=<optimized out>, args=0x7af586bf8088, nargsf=<optimized out>, kwnames=0x0) at Objects/classobject.c:61; #35 0x00007af58747b509 in thread_run (boot_raw=0x7af5722ab3f0) at ./Modules/_threadmodule.c:1100; #36 0x00007af58741c5ab in pythread_wrapper (arg=<optimized out>) at Python/thread_pthread.h:248; #37 0x00007af586e94ac3 in start_thread (arg=<optimized out>) at ./nptl/pthread_create.c:442; #38 0x00007af586f26850 in clone3 () at ../sysdeps/unix/sysv/linux/x86_64/clone3.S:81. Thread 1 (Thread 0x7af58764d740 (LWP 292754) ""python""):; #0 0x00007af586eea42f in __GI___wait4 (pid=292773, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007af586eea3ab in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffea3a8ed78, options=options; entry=0) at ./posix/waitpid.c:38; #2 0x00007af586e50bdb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007af586112468 in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x5fe0e479def0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/core/unix/src/TUnixSystem.cxx:2120; #4 TUnixSystem::StackTrace (this=0",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:9142,optimiz,optimized,9142,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"=======; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fe989ecb46c in waitpid () from /lib64/libc.so.6; #1 0x00007fe989e48f62 in do_system () from /lib64/libc.so.6; #2 0x00007fe98ba740bc in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libCore.so; #3 0x00007fe98ba716d5 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libCore.so; #4 <signal handler called>; #5 0x00007fe98b1ddee9 in TPad::FillCollideGrid(TObject*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fe98b1de2eb in TPad::PlaceBox(TObject*, double, double, double&, double&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /afs/cern.ch/user/a/averbyts/Projects/zevis/test/pad2.cxx:84; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fe98b1ddee9 in TPad::FillCollideGrid(TObject*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fe98b1de2eb in TPad::PlaceBox(TObject*, double, double, double&, double&) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Wed/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x0000000000401293 in main (argc=<optimized out>, argv=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428:1247,optimiz,optimized,1247,https://root.cern,https://github.com/root-project/root/issues/6428,2,['optimiz'],['optimized']
Performance,"========; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc; entry=0x7ffce938d760, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120; #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411; #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649; #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407; #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620; #7 <signal handler called>; #8 0x0000000000000000 in ?? (); #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782; #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697; #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668; #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669; #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16; ===========================================================. ```; master/gcc4.8.5/CentOS7. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6537#issuecomment-702879711:1914,optimiz,optimized,1914,https://root.cern,https://github.com/root-project/root/pull/6537#issuecomment-702879711,4,['optimiz'],['optimized']
Performance,"=============; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; rax 0xfffffffffffffe00 rbx 0x00007ffe6d80d638 rcx 0x00007ff0e8af95c7; rdx 0x0000000000000000 rsi 0x00007ffe6d80d638 rdi 0x00000000000d979c; rbp 0x00007ffe6d80d6a0 rsp 0x00007ffe6d80d628 r8 0x0000000000000001; r9 0x0000000000000000 r10 0x0000000000000000 r11 0x0000000000000202; r12 0x0000000000000000 r13 0x00007ffe6d80d660 r14 0x00007ffe6d80df50; r15 0x0000000000691200 rip 0x00007ff0e8af95c7 eflags [ IF ] ; cs 0x00000033 ss 0x0000002b ds 0x00000000 ; es 0x00000000 fs 0x00000000 gs 0x00000000 ; #0 0x00007ff0e8af95c7 in __GI___wait4 (pid=890780, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007ff0e8af958b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0) at waitpid.c:38; #2 0x00007ff0e8a7035b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007ff0e930771d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007ff0e9305774 in TUnixSystem::DispatchSignals (this=0x691200, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_p",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:12575,optimiz,optimized,12575,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8bac1c8 in TUnixSystem::DispatchSignals (this=0x11eee5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #6 0x00007fffa8ba308c in sighandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3586; #7 0x00007fffa8b9d428 in textinput::TerminalConfigUnix::HandleSignal (this=0x7fffa8db70c0 <textinput::TerminalConfigUnix::Get()::s>, signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:99; #8 0x00007fffa8b9d47c in (anonymous namespace)::TerminalConfigUnix__handleSignal (signum=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/textinput/src/textinput/TerminalConfigUnix.cpp:36; #9 <signal handler called>; ===========================================================; The lines below might hint at the cause of the crash. If you see question; marks as part of the stack trace, try to recompile with debugging information; enabled and export CLING_DEBUG=1 environment variable before running.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ==============",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:13550,optimiz,optimized,13550,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"======================; #9 0x00007af5858a404a in ?? (); #10 0x00007af585c29540 in ?? () from /home/tmadlener/work/.spack/spackages/gcc-runtime/12.3.0/skylake-ubuntu22.04-gcc12.3.0/hio32wy/lib/libstdc++.so.6; #11 0x00005fe0e89d9090 in ?? (); #12 0x00007ffea3a91a60 in ?? (); #13 0x00007af5858a1017 in ?? (); #14 0x0000000000000001 in ?? (); #15 0x00007af587611dfe in WrapperCall (method=<optimized out>, nargs=140731644189264, args_=0x7ffea3a91d50, self=0x0, result=0x0) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:785; #16 0x00007af5870bd70b in GILCallV (ctxt=0x7ffea3a91d30, self=0x0, method=105419582700640) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:68; #17 CPyCppyy::(anonymous namespace)::VoidExecutor::Execute (this=<optimized out>, method=105419582700640, self=0x0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/Executors.cxx:410; #18 0x00007af5870a95eb in CPyCppyy::CPPMethod::ExecuteFast (self=<optimized out>, offset=<optimized out>, ctxt=<optimized out>, this=<optimized out>) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:74; #19 0x00007af5870ac098 in CPyCppyy::CPPMethod::ExecuteProtected (this=this; entry=0x5fe0e8c18c70, self=0x0, offset=0, ctxt=0x7ffea3a91d30) at /home/tmadlener/work/.spack/spack-build-stage/spack-stage-root-6.30.04-26bzoxf2purznzcogecypb6xctskrjc3/spack-src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:149; #20 0x00007af5870aa84d in CPyCppyy::CPPMethod::Execute (this=0x5fe0e8c18c70, self=<optimized out>, offset=<optimized out>, ctxt=<optimized ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15117:19052,optimiz,optimized,19052,https://root.cern,https://github.com/root-project/root/issues/15117,1,['optimiz'],['optimized']
Performance,"========================; pure virtual method called; terminate called without an active exception; ~~~. There are failures running from Python:. ~~~; 427/1192 Test #397: pyunittests-dataframe-histograms ....................................***Failed 191.35 sec; test_histo1D (dataframe_histograms.HistogramsFromRDF) ... *** Break *** segmentation violation; ===========================================================; There was a crash (#8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fff89ef2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fff89e5a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fff8ac49ad8 in system_compat () from /lib64/glibc-hwcaps/power9/libpthread-2.28.so; #3 0x00007fff7c7a9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x16573fa50) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007fff7ca8eefc in (anonymous namespace)::do_trace (sig=1) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:182; #6 (anonymous namespace)::TExceptionHandlerImp::HandleException (this=<optimized out>, sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:195; #7 0x00007fff7c7ac09c in TUnixSystem::DispatchSignals (this=0x16573fa50, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3610; #8 0x00007fff7c7ac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395; #9 0x00007fff7c7a308c in sighandler (sig=<optimized out>) at /buil",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:27109,optimiz,optimized,27109,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"===========================; rax 0xfffffffffffffe00 rbx 0x00007ffe6d80d638 rcx 0x00007ff0e8af95c7; rdx 0x0000000000000000 rsi 0x00007ffe6d80d638 rdi 0x00000000000d979c; rbp 0x00007ffe6d80d6a0 rsp 0x00007ffe6d80d628 r8 0x0000000000000001; r9 0x0000000000000000 r10 0x0000000000000000 r11 0x0000000000000202; r12 0x0000000000000000 r13 0x00007ffe6d80d660 r14 0x00007ffe6d80df50; r15 0x0000000000691200 rip 0x00007ff0e8af95c7 eflags [ IF ] ; cs 0x00000033 ss 0x0000002b ds 0x00000000 ; es 0x00000000 fs 0x00000000 gs 0x00000000 ; #0 0x00007ff0e8af95c7 in __GI___wait4 (pid=890780, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:30; #1 0x00007ff0e8af958b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffe6d80d638, options=options; entry=0) at waitpid.c:38; #2 0x00007ff0e8a7035b in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:171; #3 0x00007ff0e930771d in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2104; #4 TUnixSystem::StackTrace (this=0x691200) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:2395; #5 0x00007ff0e9305774 in TUnixSystem::DispatchSignals (this=0x691200, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.26.10-1.fc37.x86_64/core/unix/src/TUnixSystem.cxx:3615; #6 <signal handler called>; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (th",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:12679,optimiz,optimized,12679,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"=============================; #0 0x00007fc0d7d5e46c in waitpid () from /lib64/libc.so.6; #1 0x00007fc0d7cdbf62 in do_system () from /lib64/libc.so.6; #2 0x00007fc0d99070bc in TUnixSystem::StackTrace() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libCore.so; #3 0x00007fc0d99046d5 in TUnixSystem::DispatchSignals(ESignals) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libCore.so; #4 <signal handler called>; #5 0x00007fc0d9056288 in TPad::Close(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fc0d905f746 in TPad::~TPad() [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x00007fc0d905f919 in TPad::~TPad() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #8 0x000000000040124b in main (argc=<optimized out>, argv=<optimized out>) at test/pad6.cxx:9; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc0d9056288 in TPad::Close(char const*) () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #6 0x00007fc0d905f746 in TPad::~TPad() [clone .part.0] () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so; #7 0x00007fc0d905f919 in TPad::~TPad() () from /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3python3/Fri/x86_64-centos7-gcc10-opt/lib/libGpad.so;",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6453:1329,optimiz,optimized,1329,https://root.cern,https://github.com/root-project/root/issues/6453,2,['optimiz'],['optimized']
Performance,"=============================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007f16b818a46c in __libc_waitpid (pid=29363, stat_loc=stat_loc; entry=0x7ffeea3c7360, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007f16b8107f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f16bb30b5dc in TUnixSystem::StackTrace (this=0x19fb980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007f16bb30e06a in TUnixSystem::DispatchSignals (this=0x19fb980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007f16ba505719 in TPad::PlaceBox (this=0x237b240, o=<optimized out>, w=20, h=20, xl=; 0x7ffeea3c9dc0: 0, yb=; 0x7ffeea3c9dc8: 20) at /usr/src/debug/root-6.22.02/graf2d/gpad/src/TPad.cxx:3108; #6 0x0000000000400c65 in main (argc=<optimized out>, argv=<optimized out>) at test/pad5.cxx:87; ===========================================================. ```. This result is seen on CentOS7/EPEL/root6220/gcc485 as well as on. lxplus with . ```; source /cvmfs/sft.cern.ch/lcg/views/dev3python3/latest/x86_64-centos7-gcc10-opt/setup.sh; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6428#issuecomment-698590998:3963,optimiz,optimized,3963,https://root.cern,https://github.com/root-project/root/issues/6428#issuecomment-698590998,6,['optimiz'],['optimized']
Performance,"===============================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #7 0x00007ff0ead432c8 in std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:346; #8 std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release (this=0x2456450) at /usr/include/c++/12/bits/shared_ptr_base.h:317; #9 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count (this=0x22dee00, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1071; #10 std::__shared_ptr<ROOT::Detail::RDF::RDefineBase, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr_base.h:1524; #11 std::shared_ptr<ROOT::Detail::RDF::RDefineBase>::~shared_ptr (this=0x22dedf8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/shared_ptr.h:175; #12 std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >::~pair (this=0x22dedd8, __in_chrg=<optimized out>) at /usr/include/c++/12/bits/stl_pair.h:185; #13 std::__new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> >, true> >::destroy<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::shared_ptr<ROOT::Detail::RDF::RDefineBase> > > (__p=0x22dedd8, this=<optimized out>) at /usr/include/c++/12/bits/new_allocator.h:181; #14 std::allocator_traits<std::allocator<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12023:23327,optimiz,optimized,23327,https://root.cern,https://github.com/root-project/root/issues/12023,1,['optimiz'],['optimized']
Performance,"========================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum https://root.cern/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at https://root.cern/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007f05215c1076 in TClingClassInfo::Property() const () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #7 0x00007f052152ab45 in TCling::SetClassInfo(TClass*, bool) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCling.so; #8 0x00007f0525f60963 in TClass::SetUnloaded() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #9 0x00007f0525f07b38 in ROOT::RemoveClass(char const*) () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #10 0x00007f0525f7c1cf in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /software/root/6.26.06/x86_64-ubuntu2004-gcc9-opt/lib/libCore.so; #11 0x00007f05257728a7 in __run_exit_handlers (status=0, listp=0x7f0525918718 <__exit_funcs>, run_list_atexit=run_list_atexit; entry=true, run_dtors=run_dtors; entry=true) at exit.c:108; #12 0x00007f0525772a60 in __GI_exit (status=<optimized out>) at exit.c:139; #13 0x00007f052575008a in __libc_start_main (main=0x556722a83100 <main>, argc=5, argv=0x7ffc6b5a37b8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=0x7ffc6b5a37a8) at ../csu/libc-start.c:342; #14 0x0000556722a8568e in _start (); ===========================================================. [bash][atspot01]:self-reference >; ```. ### Setup. I tried various (but not too many) ROOT 6.2X/YY versions. They all failed to handle this example type correctly. ### Additional context. This is connected to (for ATLAS users only): https://its.cern.ch/jira/browse/ATLASG-2456",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12358:10955,optimiz,optimized,10955,https://root.cern,https://github.com/root-project/root/issues/12358,4,['optimiz'],['optimized']
Performance,"===========================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; gdb.printing.register_pretty_printer(gdb.current_objfile(),; #0 0x00007fc2c245846c in __libc_waitpid (pid=25123, stat_loc=stat_loc; entry=0x7ffefaecb520, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31; #1 0x00007fc2c23d5f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fc2c55d95dc in TUnixSystem::StackTrace (this=0xcf6980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408; #3 0x00007fc2c55dc06a in TUnixSystem::DispatchSignals (this=0xcf6980, sig=kSigSegmentationViolation) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646; #4 <signal handler called>; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #5 0x00007fc2c54dd41d in TObject::AppendPad (this=0x190c210, option=0x400c96 """") at /usr/src/debug/root-6.22.02/core/base/src/TObject.cxx:112; #6 0x0000000000400b76 in main (argc=<optimized out>, argv=<optimized out>) at test/pad4.cxx:13; ===========================================================. ```. ## Expected behavior; No crash. ## To Reproduce; Code:. ```; #include <TCanvas.h>; #include <TText.h>; #include <TPad.h>; #include <fenv.h>. int ma",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6447:1194,optimiz,optimized,1194,https://root.cern,https://github.com/root-project/root/issues/6447,2,['optimiz'],['optimized']
Performance,"======================================================; The lines below might hint at the cause of the crash.; You may get help by asking at the ROOT forum http://root.cern.ch/forum; Only if you are really convinced it is a bug in ROOT then please submit a; report at http://root.cern.ch/bugs Please post the ENTIRE stack trace; from above as an attachment in addition to anything else; that might help us fixing this issue.; ===========================================================; #6 0x00007fd13fdbd1d8 in TCling::CallFunc_Factory() const () from /home/huagen/root/6.20.00.bin/lib/libCling.so; #7 0x00007fd14446e452 in TMethodCall::Init(TFunction const*) () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #8 0x00007fd144397703 in TPluginHandler::SetupCallEnv() () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #9 0x00007fd144397b93 in TPluginHandler::CheckForExecPlugin(int) () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #10 0x00007fd14435c0c4 in TApplication::LoadGraphicsLibs() () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #11 0x00007fd14435b67a in TApplication::InitializeGraphics() () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #12 0x00007fd144361088 in TApplication::TApplication(char const*, int*, char**, void*, int) () from /home/huagen/root/6.20.00.bin/lib/libCore.so.6.20; #13 0x0000558ef4e6f2cc in main (); ===========================================================; ```. ROOT 6.22.00 (binary); TMapFile: works, TApplication: failed; ```; huagen@ikp191:~/Codes/root_debug$ ./appdemo ; *** Break *** segmentation violation; ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f3f00a51c3a in __GI___wait4 (pid=48533, stat_loc=stat_loc; entry=0x7fff7b0eece8, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f3f00a51bfb in __G",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13511#issuecomment-1710747993:3779,Load,LoadGraphicsLibs,3779,https://root.cern,https://github.com/root-project/root/issues/13511#issuecomment-1710747993,1,['Load'],['LoadGraphicsLibs']
Performance,=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6126-mac1014-python3&date=2020-08-05).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91515/console).; ### Failing tests:; - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseWrite_1](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91515/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseWrite_1/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDictTXMLFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91515/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDictTXMLFile/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execOld](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91515/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execOld/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91515/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_11](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91515/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseRead_11/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_colWiseRead_12](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91515/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_colWiseRead_12/); - [projectroot.roottest.root.io.transient.roottest_root_io_transient_execNew](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91515/testReport/projectroot.roottest.root.io/transient/roottest_root_io_transient_execNew/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6126#issuecomment-669155197:1204,cache,cache,1204,https://root.cern,https://github.com/root-project/root/pull/6126#issuecomment-669155197,2,['cache'],['cache']
Performance,> ### Failing tests:; > ; > * [projectroot.roottest.cling.dict.ROOT-7879.roottest_cling_dict_ROOT_7879_skipLinkDefDict](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.cling.dict/ROOT-7879/roottest_cling_dict_ROOT_7879_skipLinkDefDict/); > ; > * [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); > ; > * [projectroot.roottest.root.aclic.misc.roottest_root_aclic_misc_assertROOT7027](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.aclic/misc/roottest_root_aclic_misc_assertROOT7027/); > ; > * [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/); > ; > * [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_customDeleteError](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_customDeleteError/); > ; > * [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_modelReadDict2TFile](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_modelReadDict2TFile/); > ; > * [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_ioreadrulesfailonwarning](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/143298/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_ioreadrulesfailonwarning/); > ; > * [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genrefle,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10457#issuecomment-1110847529:869,load,load,869,https://root.cern,https://github.com/root-project/root/pull/10457#issuecomment-1110847529,1,['load'],['load']
Performance,"> (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). Isn't it the already same in the in `Read/WriteFastArrayDouble32` ? (Furthermore for reading the common case is to call `TBufferFile::ReadWithFactor/ReadWithNbits`). > The implementation is, logically speaking, exactly the same. Thank you for clarifying :). > As a last divergence point, Double32_t silently clamps the values that fall our of range, while Real32Quant will throw in that situation. (If not already done) this should be called out in the doc.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16390#issuecomment-2361871567:21,perform,performant,21,https://root.cern,https://github.com/root-project/root/pull/16390#issuecomment-2361871567,1,['perform'],['performant']
Performance,"> (delta understanding why there was a +8 ""in case object is placed in a deleted gap"". I am now guessing that this was a micro optimization to better manage the memory. We should also consider to remove it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14523#issuecomment-1932905744:127,optimiz,optimization,127,https://root.cern,https://github.com/root-project/root/pull/14523#issuecomment-1932905744,1,['optimiz'],['optimization']
Performance,"> * An important part of this PR is deciding the naming scheme for the new user-facing API. I see two main ways: being pedantic or being coherent. Pedantic would mean that the function for headers should be `IncludeHeaders`, the one for shared libraries probably should be `LoadSharedLibs` etc. Instead if we want to be coherent and also hint at the fact that this is a tool for distributed execution, we could decide to name everything `Distribute*` so that it is already clear in the name of the function that the code/header/file will be uploaded to the workers somehow. Personally, I would go for the `Distribute*` approach but we can discuss this next week in person. . > * I believe we need a section in the docs in `RDataFrame.cxx` describing these functions, with examples of usage. Ideally what I would like to see is something like a transition help guide, just to give an example; > ; > ```python; > # If you do this in your local RDataFrame script; > ROOT.gInterpreter.Declare(""my_code""); > df.Define(...); > ; > # Do this in distributed RDF; > ROOT.RDF.Distributed.DistributeCode(""my_code""); > df.Define(...); > ```. sure, I will do that next. . I implemented all your comments (but the leftover debug statements - on purpose, as there are a few things we still need to debug - see my comments in the roottest PR - especially multiple declarations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16309#issuecomment-2317916267:274,Load,LoadSharedLibs,274,https://root.cern,https://github.com/root-project/root/pull/16309#issuecomment-2317916267,1,['Load'],['LoadSharedLibs']
Performance,"> 1. You add ""Browse..."" button to load files using default file open dialog from the web browser. FYI, this button is there since day one...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4646#issuecomment-575628120:35,load,load,35,https://root.cern,https://github.com/root-project/root/pull/4646#issuecomment-575628120,1,['load'],['load']
Performance,"> 29 ns/number is still an excellent time!. I tried a bit and found a few tweaks to get the average time of the portable and standard-compliant version down to 24ns. Using the extension `__int128` (if supported), I can improve this to 13ns which is pretty close to the assembly version. I'm still experimenting a bit, will submit the optimizations as a follow-up PR once this one is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6794#issuecomment-726084280:334,optimiz,optimizations,334,https://root.cern,https://github.com/root-project/root/pull/6794#issuecomment-726084280,1,['optimiz'],['optimizations']
Performance,"> 8.20 MB clang::SourceManager::AllocateLoadedSLocEntries(unsigned int, unsigned int). Yes, that's what I was talking about. [That's](https://github.com/llvm/llvm-project/blob/5bf142749e2ee1f7d60e728bf7ac4262e1c22da0/clang/lib/Serialization/ASTReader.cpp#L3489) the relevant line of code that we need to ""fix"" in clang. And this operation we try hard to avoid by delaying the module loads until possible with the global module index (modules.idx) file. However, the QualType thing is new to me. Do you think we go through [here](https://github.com/root-project/root/blob/3b9d1ed0dc8968d5aee99541e090bd6dc61b96dd/interpreter/llvm-project/clang/lib/Serialization/ASTReader.cpp#L3300)? One can see the module file contents by running in ROOT:. ```; make llvm-bcanalyzer; llvm-bcanalyzer $ROOTSYS/lib/some_file.pcm; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1615868351:383,load,loads,383,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1615868351,1,['load'],['loads']
Performance,"> ; > > ```; > > 2. The name lookup is not so cheap.; > > ```; > ; > The name lookup is cheap per se. However, the module load is not a no-op due to the number of things we still eagerly deserialize upon load. Maybe due to we have different workloads. In our work loads there are many redundant/duplicated named declarations. So while a single name lookup is cheap, it is not cheap to lookup a name with many declarations. But it sounds good that you didn't meet the problems. > ; > > ```; > > 3. We will load a lot of source location informations.; > > ```; > ; > Yes, that is right. The problem comes just from a single [line](https://github.com/llvm/llvm-project/blob/5bf142749e2ee1f7d60e728bf7ac4262e1c22da0/clang/lib/Serialization/ASTReader.cpp#L3489) in clang. However fixing this would be very hard and might need to rework the source location management. That will be probably a good thing for clang since it is a bit inefficient how. We might be able to use some sort of binary tree to model them. I heard you talked this before. It looks interesting. And similar to above, I feel it will be more interesting to merge/re-use the source locations. Did you meet the problem of duplicated declarations?. For example, in C++20 modules, it is common:. ```; // A.cppm; module;; #include <iostream>; export module A;; ... // B.cppm; module;; #include <iostream>; export module A;; ... // C.cpp; import A;; import B;; ```. Did you have similar cases?. > ; > In fact the other issue might be easier to fix and less intrusive. That is, the way we load types eagerly [here](https://github.com/llvm/llvm-project/blob/5bf142749e2ee1f7d60e728bf7ac4262e1c22da0/clang/lib/Serialization/ASTReader.cpp#L3216). I am not sure how feasible it is to load types eagerly. Since many types are constructed in ASTContext locally (e.g., some types for CXXRecords). And I am sure how can we load types before deserialize the decls. > ; > The third major issue which is solved for us but not yet upstream is https://revie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1617522592:122,load,load,122,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1617522592,4,['load'],"['load', 'loads']"
Performance,"> ==22765== by 0x93F15DF: (anonymous namespace)::ConstantFoldConstantImpl(llvm::Constant const*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*, llvm::SmallDenseMap<llvm::Constant*, llvm::Constant*, 4u, llvm::DenseMapInfo<llvm::Constant*>, llvm::detail::DenseMapPair<llvm::Constant*, llvm::Constant*> >&) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x93F38B7: llvm::ConstantFoldInstruction(llvm::Instruction*, llvm::DataLayout const&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x91305C5: AddReachableCodeToWorklist(llvm::BasicBlock*, llvm::DataLayout const&, llvm::SmallPtrSetImpl<llvm::BasicBlock*>&, llvm::InstCombineWorklist&, llvm::TargetLibraryInfo const*) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x9139861: combineInstructionsOverFunction(llvm::Function&, llvm::InstCombineWorklist&, llvm::AAResults*, llvm::AssumptionCache&, llvm::TargetLibraryInfo&, llvm::DominatorTree&, llvm::OptimizationRemarkEmitter&, llvm::BlockFrequencyInfo*, llvm::ProfileSummaryInfo*, bool, llvm::LoopInfo*) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x913A00E: llvm::InstructionCombiningPass::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x9E4CCC7: llvm::FPPassManager::runOnFunction(llvm::Function&) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x9E4CE00: llvm::FPPassManager::runOnModule(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x9E4BEE5: llvm::legacy::PassManagerImpl::run(llvm::Module&) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== by 0x6F12B5A: cling::IncrementalExecutor::runStaticInitializersOnce(cling::Transaction&) (in /build/vvassilev/root-release-master/lib/libCling.so); > ==22765== ; > ==22765== Warning: set address range perms: large range [0x1cfd0000, 0x31242000) (def",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1250619567:3812,Optimiz,OptimizationRemarkEmitter,3812,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1250619567,1,['Optimiz'],['OptimizationRemarkEmitter']
Performance,"> > > > @hahnjo, this looks good to me but can we not fix the `llvm::identify_magic` as well or instead?; > > > ; > > > ; > > > The question is whether `llvm::identify_magic` should be prepared to deal with files that are modified concurrently. As far as I understand, Cling uses this code path to auto-detect libraries and distinguish them from random binary files. If the answer is yes, then I can try to fix `llvm::identify_magic` upstream so we get it with some future LLVM upgrade.; > > ; > > ; > > I think this is a valid use-case. Moreover, we are planning to upstream that functionality from cling which suggests which library is needed on a missing symbol to the jit infrastructure.; > ; > Ok, I've added a `TODO` comment. Note that we can fix it now, and backport the change. Otherwise I fear the `TODO` will just stay forever there.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11174#issuecomment-1212879019:231,concurren,concurrently,231,https://root.cern,https://github.com/root-project/root/pull/11174#issuecomment-1212879019,1,['concurren'],['concurrently']
Performance,"> > > > @vgvassilev Great!; > > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.; > > > ; > > > ; > > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ?; > > ; > > ; > > Yes; > ; > @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?. Weird. It compiles good locally. I don't know why it can work in my local environment as it accesses the protected type actually. I just tried to refactor this as the newest commit in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1979007390:40,perform,performances,40,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1979007390,1,['perform'],['performances']
Performance,"> > > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me.; > > > ; > > > ; > > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.; > > ; > > ; > > Got it. Thanks.; > > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4); > > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566); > > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.; > ; > @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens. @ChuanqiXu9, the tests look good on our side. I will compare performance but I think we should bring these changes to the upstream pull request and ask the google folks to test the scalability of the patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978559674:309,load,loading,309,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978559674,4,"['load', 'perform', 'scalab']","['loading', 'performance', 'scalability']"
Performance,"> > > @hahnjo, this looks good to me but can we not fix the `llvm::identify_magic` as well or instead?; > > ; > > ; > > The question is whether `llvm::identify_magic` should be prepared to deal with files that are modified concurrently. As far as I understand, Cling uses this code path to auto-detect libraries and distinguish them from random binary files. If the answer is yes, then I can try to fix `llvm::identify_magic` upstream so we get it with some future LLVM upgrade.; > ; > I think this is a valid use-case. Moreover, we are planning to upstream that functionality from cling which suggests which library is needed on a missing symbol to the jit infrastructure. Ok, I've added a `TODO` comment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11174#issuecomment-1212777116:223,concurren,concurrently,223,https://root.cern,https://github.com/root-project/root/pull/11174#issuecomment-1212777116,1,['concurren'],['concurrently']
Performance,"> > > @vgvassilev Great!; > > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.; > > ; > > ; > > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ?; > ; > Yes. @ChuanqiXu9, looks like the commit I took is broken. Did you forget to push your latest changes?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978995469:36,perform,performances,36,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978995469,1,['perform'],['performances']
Performance,"> > > Could it be that the issue is TBranch now has Experimental::Internal::TBulkBranchRead as a member?; > > ; > > ; > > Yes! Very likely.; > ; > That's actually it. If I remove the Experimental namespace and simply use Internal::TBulkBranchRead, it does not load the other Experimental bits either. However, that in practice shows a more generic design problem in the clang modules system. That is, then we make a lookup of a namespace identifier clang (rightfully) tries to collect all namespace partitions from all reachable modules. This has to do with things like overload resolution. Due to the autoloading system, ROOT essentially considers all modules reachable and thus loads them. The only reliable way to fix this is to make the clang module loads a no-op which is a bit of a challenge…",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1615514852:260,load,load,260,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1615514852,6,['load'],"['load', 'loads']"
Performance,"> > > It should also be mentioned explicitly somewhere that if a pythonization is defined after the class has been instantiated for the first time by PyROOT, it is ignored.; > ; > > I think we should either get an exception if the class was already instantiated (but what about name prefixes?) or make sure pythonizations are applied also to already instantiated classes.; > ; > I would be more in favour of documenting well that pythonizations should be registered at the beginning of the application, before classes are used, instead of complicating the implementation by looking for already instantiated classes that match the class names / prefixes. The problem I see is that we are not always in control of the order modules are loaded. I may take care that I first configure the pythonizations I need then load the classes I want, but if somebody loads those classes before importing my module, then the code relying on the pythonizations is broken in unpredictable ways.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128#issuecomment-972647280:734,load,loaded,734,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-972647280,3,['load'],"['load', 'loaded', 'loads']"
Performance,"> > > Why not conditionally enumerate the produced modules as by-product modules in cmake? This protection is done to make sure clients know about the produced artifacts so that they can move them accordingly to the install locations.; > > ; > > ; > > Because, as written in the commit message, libc++ split its modules into one module per public header ([llvm/llvm-project@571178a](https://github.com/llvm/llvm-project/commit/571178a21a8bc105bf86cf4bf92f842e07792e1a)). We could enumerate them for the current version in CMake, but then we have to play catch-up for every XCode upgrade. I really don't think we want to go there.; > ; > That patch does not enable the feature for libc++ but for all system modules. You are right we will need to change this only when a new top-level header shows up which is very rarely. The C++ modules feature is very sensitive and I'd not want to use a sledgehammer when it is not necessary. Alternatively we can provide our own modulemap for libc++ the same way we do for libstdc++. Note that the notion of modules in the C++ language (and libc++) is different from the notion of modules we use in the dictionary system. The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1985324759:1220,perform,performance,1220,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1985324759,1,['perform'],['performance']
Performance,"> > > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me.; > > ; > > ; > > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.; > ; > Got it. Thanks.; > ; > @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. [ChuanqiXu9@570fd78](https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4); > ; > There is also another bug about the order to remove iterators: [ChuanqiXu9@7fb4aa9](https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566); > ; > Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again. @ChuanqiXu9, that is really awesome! Apologies for the oversight of the ExternalASTSource. I've pushed these changes and let's see what happens.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978147182:301,load,loading,301,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978147182,2,['load'],['loading']
Performance,"> > > ```; > > > 2. The name lookup is not so cheap.; > > > ```; > > ; > > ; > > The name lookup is cheap per se. However, the module load is not a no-op due to the number of things we still eagerly deserialize upon load.; > ; > ; > Maybe due to we have different workloads. In our work loads there are many redundant/duplicated named declarations. So while a single name lookup is cheap, it is not cheap to lookup a name with many declarations. But it sounds good that you didn't meet the problems.; > ; > ; > > > ```; > > > 3. We will load a lot of source location informations.; > > > ```; > > ; > > ; > > Yes, that is right. The problem comes just from a single [line](https://github.com/llvm/llvm-project/blob/5bf142749e2ee1f7d60e728bf7ac4262e1c22da0/clang/lib/Serialization/ASTReader.cpp#L3489) in clang. However fixing this would be very hard and might need to rework the source location management. That will be probably a good thing for clang since it is a bit inefficient how. We might be able to use some sort of binary tree to model them.; > ; > ; > I heard you talked this before. It looks interesting. And similar to above, I feel it will be more interesting to merge/re-use the source locations. Did you meet the problem of duplicated declarations?; > ; > ; > For example, in C++20 modules, it is common:; > ; > ; > ```; > // A.cppm; > module;; > #include <iostream>; > export module A;; > ...; > ; > // B.cppm; > module;; > #include <iostream>; > export module A;; > ...; > ; > // C.cpp; > import A;; > import B;; > ```; > ; > ; > ; > ; > ; > Did you have similar cases?. If the question is if we have multiple duplication due to textual inclusion of header files we have almost none. We have worked very very hard to modularize things bottom up, including libc, libstdc++, libxml, boost, etc. > ; > ; > > In fact the other issue might be easier to fix and less intrusive. That is, the way we load types eagerly [here](https://github.com/llvm/llvm-project/blob/5bf142749e2ee1f7d60e728b",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1617552329:134,load,load,134,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1617552329,4,['load'],"['load', 'loads']"
Performance,"> > @hahnjo, this looks good to me but can we not fix the `llvm::identify_magic` as well or instead?; > ; > The question is whether `llvm::identify_magic` should be prepared to deal with files that are modified concurrently. As far as I understand, Cling uses this code path to auto-detect libraries and distinguish them from random binary files. If the answer is yes, then I can try to fix `llvm::identify_magic` upstream so we get it with some future LLVM upgrade. I think this is a valid use-case. Moreover, we are planning to upstream that functionality from cling which suggests which library is needed on a missing symbol to the jit infrastructure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11174#issuecomment-1212736785:211,concurren,concurrently,211,https://root.cern,https://github.com/root-project/root/pull/11174#issuecomment-1212736785,1,['concurren'],['concurrently']
Performance,"> > @lmoneta, shouldn't we link the whole archive of libVc.a into MathCore? We see some failures such as:; > > ```; > > root.exe -q -l -b test/testGenVectorVc.cxx ; > > ; > > Processing test/testGenVectorVc.cxx...; > > IncrementalExecutor::executeFunction: symbol '_ZN4Vc_13SSE9c_general14signMaskDoubleE' unresolved while linking function '_GLOBAL__sub_I_cling_module_9'!; > > You are probably missing the definition of Vc_1::SSE::c_general::signMaskDouble; > > Maybe you need to load the corresponding shared library?; > > IncrementalExecutor::executeFunction: symbol '_ZN4Vc_13SSE9c_general13absMaskDoubleE' unresolved while linking function '_GLOBAL__sub_I_cling_module_9'!; > > You are probably missing the definition of Vc_1::SSE::c_general::absMaskDouble; > > Maybe you need to load the corresponding shared library?; > > IncrementalExecutor::executeFunction: symbol '_ZN4Vc_16Common10AllBitsSetE' unresolved while linking function '_GLOBAL__sub_I_cling_module_9'!; > > You are probably missing the definition of Vc_1::Common::AllBitsSet; > > Maybe you need to load the corresponding shared library?; > > warning: Failed to call `testGenVectorVc()` to execute the macro.; > > Add this function or rename the macro. Falling back to `.L`.; > > ```; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > ; > > Where:; > > ```; > > nm externals/usr/local/lib/libVc.a | grep _ZN4Vc_13SSE9c_general14signMaskDoubleE; > > 0000000000000580 R _ZN4Vc_13SSE9c_general14signMaskDoubleE; > > ```; > ; > @lmoneta ping. @lmoneta, ping 2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8788#issuecomment-931977759:481,load,load,481,https://root.cern,https://github.com/root-project/root/pull/8788#issuecomment-931977759,3,['load'],['load']
Performance,"> > @pcanal has suggested leveraging the old behavior to disable optimizations before, so I would wait for his ok before merging.; > EDIT: just to be clear, I am convinced the old behavior is a bug. The old behavior was:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g (and default compiler optimization); + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; The new behavior seems to be:; ```; +g -> -g (and default compiler optimization); +O -> -O3 (or more exactly the optimization level select at ROOT configuration time); +gO -> -g -O3 ; + -> -g or -O3 depending on whether ROOT was build in debug mode ... except that this is broken since the move to CMake :( so actually always -O3; ```; So this is fine as we **MUST** have a way to completely disable optimization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7382#issuecomment-791547695:65,optimiz,optimizations,65,https://root.cern,https://github.com/root-project/root/pull/7382#issuecomment-791547695,14,['optimiz'],"['optimization', 'optimizations']"
Performance,"> > @pcanal proposes to add the literal diagnostic, which helps understand ""recent failure"" in two years, and which allows to search if we run into this again, e.g. in 6-26:; > > ```; > > [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; > > ; > > /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:491:10: error: module 'std.bits/ranges_base.h' requires feature 'cplusplus20'; > > module ""bits/ranges_base.h"" {; > > ^; > > /usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here; > > #include <bits/ranges_base.h> // enable_borrowed_range, enable_view; > > ^; > > In file included from input_line_3:2:; > > ; > > /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; > > #include ""TIsAProxy.h""; > > ~~~~~~~~^~~~~~~~~~~~~; > > ; > > Error: Error loading the default rootcling header files.; > > gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; > > ```; > ; > The commit message says exactly that. I don't think I want to paste the error to say actually the same thing as the commit message says. I think I see where the confusion comes from, now. I added the PR title in the commit message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429235250:970,load,loading,970,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429235250,1,['load'],['loading']
Performance,"> > @vgvassilev Great!; > > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.; > ; > Do you mean this one: [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5) ?. Yes",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978582934:32,perform,performances,32,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978582934,1,['perform'],['performances']
Performance,"> > Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works.; > > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?; > ; > Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation. I see, thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-794110806:368,multi-thread,multi-threaded,368,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-794110806,1,['multi-thread'],['multi-threaded']
Performance,"> > As far as I can see, just from looking at the code,; > ; > I assume it should be in the generated dictionary and not in the code, isn't it?. My comment was about where this error is likely introduced. > > Both of them load just fine in a PowerPC build of ROOT.; > ; > Do you mean both the `older` libceleritas_root.so and the new one or something else?. I tested both current `master` and the commit before the refactoring. In both cases, `.L src/libceleritas_root.so` or `.L src/libceleritas_io.so` work without warnings or errors. > ; > > Both of them load just fine in a PowerPC build of ROOT.; > ; > If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC). For a start, I would suggest not using Spack but building yourself and being aware which flags are used.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1079019110:222,load,load,222,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1079019110,2,['load'],['load']
Performance,"> > Could it be that the issue is TBranch now has Experimental::Internal::TBulkBranchRead as a member?; > ; > Yes! Very likely. That's actually it. If I remove the Experimental namespace and simply use Internal::TBulkBranchRead, it does not load the other Experimental bits either.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1615245128:241,load,load,241,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1615245128,2,['load'],['load']
Performance,"> > Could you post performance numbers before and after that change? I am interested in how much that affects single line statements as well as a 1000 line code snippet.; > ; > Did you see the numbers posted initially and just above last week? I think they cover the most relevant cases, including an instantiation of a a full `ROOT::RDataFrame`. And all examples where Clings is spending most of the time in the passes themselves don't really change, it's just how they are called... Ok, overlooked that. If we are testing the pass manager re-creation over a every transaction, why we test things that do not have multiple transactions. That is, we need tests that call ProcessLine many many times to be able to measure the eventual overhead...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1914254356:19,perform,performance,19,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1914254356,1,['perform'],['performance']
Performance,"> > I don't want to bikeshed on this PR but why did you end up with so much code - wasn't just looking at the `gOptModuleByproducts` enough?; > ; > Please propose a PR; I don't see how else to do it. And btw ""so much code"": it's adding 15 lines; the rest just moves code around to help the logic / control flow. I think this is good to go, thus added an approval - no need to spend tons of time to optimize a diagnostic ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12067#issuecomment-1398182028:398,optimiz,optimize,398,https://root.cern,https://github.com/root-project/root/pull/12067#issuecomment-1398182028,1,['optimiz'],['optimize']
Performance,"> > I thought you wanted to support non-explicit linking, too.; > ; > Yes, true. But the explicit linking case is seemingly broken now. Yes, it is broken because when calling `rootcling -lib-list-prefix` (and no `-cxxmodule`) we do not load any modules and [this code](https://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L561-L562) is dead. We should implement some new option in rootcling which says preload all modules because ROOT/ACLiC is in `runtime_cxxmodules` mode but we do not intend to build a module (via `-cxxmodule` flag.). > ; > > we should just get all loaded libraries and append them. Just to be clear, I was not proposing to go that route, but in principle we could filter out ""user"" libraries... > ; > That is where we started a long time and ago and led to spurrious failures. For example:; > ; > ```; > root; > root [] .L A.C+; > root [] .L B.C+; > root [] .q; > rm A.C A_C*; # User give up on A.C; > root; > root [] .L B.C+; > // linking error complaining about A_C.so not found.; > ```; > ; > > By symbol you mean clang::Decl?; > ; > Not sure. I meant that during parsing, 'missing' symbols provoke call to 'auto-parsing' mechanism that get info from the rootmap file (humm I realize that this is not necessary quite an accurate description :( ); > ; > > That is the power of the new dynamic loader.; > ; > It works solely if it is loaded though :). Nope, it is able to visit the elf/mach-o binary format and extract whatever information is needed without dlopening the library. > ; > We do have users that use ACLiC to generate libraries (from a Makefile) to be used to link to a main executable. I thought we have coverage for that case. I would recommend to go forward with this approach to fix the bug while I am working on fixing the explicit linking in general.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-607811483:236,load,load,236,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-607811483,8,['load'],"['load', 'loaded', 'loader']"
Performance,"> > If we only care about if the identifier we look up is a top-level namespace or not, maybe we don't need to store the `DeckKind` info in GlobalModuleIndex, I plan to rework a little bit and only use a `char` to represent the state. I believe it decreases `modules.idx` size a little bit as well. WDYT? @vgvassilev; > ; > We care if the identifier is a namespace. The top namespace is just a heuristic which we use now. However, I expect to be able to avoid loading of all namespaces until another declaration is needed. OK, but this may not only need just record some flags in the GMI but also other work. For now, I think the implementation is good enough.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1186229770:460,load,loading,460,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1186229770,1,['load'],['loading']
Performance,"> > In the example from the bug report that would be spec_func_C.so; > ; > The intent is for this library to be hard linked to its dependencies. What does ""hard linked"" mean? Using explicit linking?. > To do so rootcling needs a mapping ""symbols to library"" (previously provided by rootmap) and output a list of used library. Previously, if I am not mistaken, rootcling will list all loaded libraries in the existing session and then replay them when loading the ACLiC library. That seems suboptimal as may redundant things can be loaded, especially when the `.L ...++` is not the first command to execute. > ; > hence my question "" Doesn't rootcling have access to the information (connection symbol to library) through the pcm files?"". I has it, but it is lazily obtained by the visiting the undefined symbols when the library is loaded as intended avoid loading of libraries which existed in the session but are irrelevant to the ACLiC-produced library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605494767:384,load,loaded,384,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605494767,5,['load'],"['loaded', 'loading']"
Performance,"> > It works solely if it is loaded though :); > Nope, it is able to visit the elf/mach-o binary format and extract whatever information is needed without dlopening the library. Do you mean that if the user link the library to an executable, it will still work?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-607936381:29,load,loaded,29,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-607936381,1,['load'],['loaded']
Performance,"> > Looks like we fail with [...]; > ; > Yes, that's exactly what I posted 45 minutes ago...; > ; > > @hahnjo, the area in clang which @ktf touches hasn't been changing for years. Maybe we just discovered something that upstream has not and we need to tune the patch...; > ; > Yes, that's what I'm saying. And IMHO that ""tuning"" should not happen after we broke everybody's ROOT in a minor patch release... Agreed, let's fix the failures in the master and re-evaluate what should be done next.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1750224655:252,tune,tune,252,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1750224655,1,['tune'],['tune']
Performance,"> > My version of os/compiler/valgrind seems to work better and I got some useful information.; > > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz); > ; > Thanks for the details. I've pushed the further optimization of `Value::Value`. Can you remeasure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1262860929:682,optimiz,optimization,682,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262860929,4,['optimiz'],['optimization']
Performance,"> > Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change.; > ; > Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it... Right, I can see a quite measurable effect when turning off the cluster cache *and* drop the file system cache before running the benchmarks for reading the converted files. In that setup, on my system, I see up to a factor 3x (!) difference for the LHCb analysis (average over 20 repetitions) and less for the other benchmarks. The current hypothesis is that this is related to the flat data model and quite dense reading of the LHCb data. For all benchmarks, the difference is much reduced with either of the caching turned back on. ![image](https://github.com/root-project/root/assets/1613332/514636a2-695b-4c5f-986a-1df42306804d)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14616#issuecomment-1932250935:106,perform,performance,106,https://root.cern,https://github.com/root-project/root/pull/14616#issuecomment-1932250935,3,"['cache', 'perform']","['cache', 'performance']"
Performance,"> > Or even make a single libPyROOT work both with Python 2.x and 3.x if possible. As far as I understand, that should be possible too if we don't link directly to the Python library, but let symbols be resolved from the already loaded Python interpreter.; > ; > I don't think that is even possible, since extension modules like libPyROOT need to define a different interface for Python2 and Python3. Moreover, there are differences also in the Python APIs between versions (even between 3.X versions) that also impose those `#if`s in our PyROOT code. If the differences are only symbol names, then providing both symbols should be ok if we're not linking to Python. If the implementation needs to change, we can get rid of all the `#if PY_VERSION_HEX ...` by replacing them with a regular `if (Py_GetVersion() ...)`, which is computed at runtime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396#issuecomment-462722332:229,load,loaded,229,https://root.cern,https://github.com/root-project/root/pull/3396#issuecomment-462722332,1,['load'],['loaded']
Performance,"> > Rather than not generating the rdict file we could use it only in the cases when it will improve things.; > ; > What are the cases where it doesn't?. See the performance data. It doesn't improve things basically for entire roottest -- on the contrary it shows 2% slowdown. > ; > > What is the best way to detect if we are in MakeProject mode?; > ; > What is special about the ""MakeProject mode""?. I was hoping you to be able to tell. You crafted an example on top of roottest's MakeProject which was able to demonstrate the usefulness of rdicts. None of that so far is obvious to me. > ; > I don't think we can (really) detect it. What MakeProject does is generate a set of header files, a linkdef file and a build script. Except for the fact that there no function besides the constructor and destructor, it is distinguishable from regular user code. The struct are not even guaranteed to be POD because of inheritance. In addition, the user could take the initial generation and start developing a full library based on it. So even heuristic bases on the way MakeProject generates the code would detect that you are ""really"" in MakeProject mode. Sigh... Are you saying that the 'patched' version of MakeProject had many more headers thus read data beyond some threshold which makes rdicts significantly improve the situation?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-649813095:162,perform,performance,162,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-649813095,1,['perform'],['performance']
Performance,"> > The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction.; > ; > Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules. I just proposed one -- take the old version of the modulemap and use the virtual file system overlay to mount it on top. EDIT: As I mentioned, what Apple is using _standard_ C++ modules for is completely different from what we used them for in our dictionaries. I am happy to talk about that over a video call if necessary.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1985394696:66,perform,performance,66,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1985394696,1,['perform'],['performance']
Performance,"> > This doesn't always happen, ...; > ; > This actually quite concerning ... In the use case you show, there should be not practical difference as the filename should be strictly the same before and after the expand. (As opposed to load ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"" vs ""$MY_EOS_DIR/Run2012BC_DoubleMuParked_Muons.root"" where the redirection would work only for the 1st one without the expansion).; > ; > In the first strace, I see:; > ; > ```; > getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; > getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; > ```; > ; > vs; > ; > ```; > getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 25; > getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch/"", 25) = 25; > ```; > ; > which ""seems"" to mean that given the exact same input `getxattr` returns different result. Why would that be?. Good question, and I'm not sure. This seems to be a problem with EOS (see below). @apeters1971 Do you know what could cause this? To reproduce, all you need is to copy a file with a different name, then call `getfattr` on it and it will return the wrong URL, at least the first time (but potentially several times):. ```bash; $ cp hsimple.root mytest.root; $ getfattr -n eos.url.xroot hsimple.root && getfattr -n eos.url.xroot mytest.root; # file: hsimple.root; eos.url.xroot=""root://eoshome-a.cern.ch//eos/user/a/amadio/hsimple.root"". # file: mytest.root; eos.url.xroot=""root://eoshome-a.cern.ch/""; ```. So I guess we *could* move the code after the expansion after all, as the problem is not coming from ROOT, but from EOS. When the wrong URL is returned, all that happens is that the opening via XRootD fails and it falls back to use FUSE, so I guess it should still be fine to merge this, if only for allowing people to test more easily once ROOT master is installed somewhere in CVMFS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311728952:233,load,load,233,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311728952,1,['load'],['load']
Performance,"> > What did you check, and what worked? Did you build a module? For me, LLVM 9 and LLVM 13 give the same result: including json.hpp into a header in one module is fine, merging from multiple modules doesn't work in either version.; > ; > I compile with llvm13 and directly include json.hpp in REve classes and can load and use it. This already works with LLVM 9 for me. Last time we discussed, the issues you mentioned were due to GCC12. > But I did not try to use json.hpp from several libraries - may be this makes problem. Yes, this will be a problem as discussed at CERN a while back.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1245022087:315,load,load,315,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1245022087,1,['load'],['load']
Performance,"> > What does ""hard linked"" mean? Using explicit linking?; > ; > Yes, I meant explicit linking. I thought you wanted to support non-explicit linking, too. If we want to support the same explicit-linking which we supported with rootmaps we should `just` get all loaded libraries and append them. This will not solve ROOT-10637, though. In order to solve it we should probably keep track of all modules which we have deserialized declarations from and get their corresponding libraries. Both seem to be very inaccurate to me. > ; > > rootcling will list all loaded libraries in the existing session and; > ; > If I remember correctly, it is passed a rootmap file which is then leverage to obtains (from cling) the actual symbol and thus actual library needed and then issue a list of library needed. This is used to at least load the depend library that has not been loaded yet and is (or should be/could be) used to limit the explicit linking. By symbol you mean `clang::Decl`?. > ; > > y the visiting the undefined symbols when the library is loaded; > ; > Humm that is a challenge as rootcling can not load any libraries. That is the power of the new dynamic loader. It can scan for symbols without opening and loading the library. At the moment it is done when the library is being loaded, however, it can be a step or rootcling. If we want accurate explicit linking, that would require two steps: (a) build the library without explicit linking; (b) walk the undefined symbols, resolve them and relink the library. I think all of that is feasible to implement, however, this PR should fix the original issue in the least intrusive way.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605588365:261,load,loaded,261,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605588365,9,['load'],"['load', 'loaded', 'loader', 'loading']"
Performance,"> > Why is this seen only in the cxxmodule case?; > https://epsft-jenkins.cern.ch/view/ROOT/job/root-nightly-runtime-cxxmodules/lastBuild/BUILDTYPE=Debug,COMPILER=gcc62,LABEL=slc6/testReport/projectroot/runtutorials/tutorial_graphs_gerrors2/. I see the following steps on the stack trace (retaining only a few frame for clarity); ```; #10 0x00007f892fc17090 in ?? (); #11 0x00007f89305d4d23 in cling::IncrementalExecutor::executeInit (this=0x2239550, function=...) at .../IncrementalExecutor.h:275; ...; #19 0x00007f893906e732 in TROOT::RegisterModule .... TROOT.cxx:2588; ...; #35 0x00007f89306dcd17 in cling::utils::platform::DLOpen ... PlatformPosix.cpp:112; ...; #36 0x00007f89304c2143 in cling::DynamicLibraryManager::loadLibrary ... DynamicLibraryManager.cpp:207; ... ; #47 0x00007f893927253b in TUnixSystem::Load (module=""./h1analysisTreeReader_C.so"", ...) ... TCling.cxx:5935; #48 0x00007f893035ef96 in LazyFunctionCreatorAutoloadForModule ... TCling.cxx:5935; #49 0x00007f893035f1dc in TCling::LazyFunctionCreatorAutoload ....TCling.cxx:5953; ...; #100 0x00007f89391010ae in TApplication::ProcessLine (... line="".x /.../tutorials/graphs/gerrors2.C"", ...) at ... TApplication.cxx:1002; ...; #103 in main ; ```. And from that I do not see how this PR would materially change the behavior (i.e. it does 'more' work but ends up calling DynamicLibraryManager as this PR does and I do not see how the removed behavior would cause the problem ... i.e. looking at the stack I would expect the same crash to happen with or without this PR). To help better understand the problem (and whether this PR is the best solution), I think we need to understand a bit better what is cause the crash at IncrementalExecutor.h:275 and why the similar code path works when not relying on modules).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394482259:723,load,loadLibrary,723,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394482259,2,"['Load', 'load']","['Load', 'loadLibrary']"
Performance,"> > Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me.; > ; > Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic. Got it. Thanks. ---. @vgvassilev It turns out that the reason for so many failures is we have an ExternalASTSource in root out of the llvm tree, so we don't update that. https://github.com/ChuanqiXu9/root/commit/570fd783875671d346c7cdc0d98a8a9afcad05a4. There is also another bug about the order to remove iterators: https://github.com/ChuanqiXu9/root/commit/7fb4aa9d11c6966b54745009187928dd13cec566; ; Now I can build the project in https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/. I only run `make` instead of `ctest`. But it may be fine as we said the logic happens at build time actually. I think you can push the 2 commits to the branch to test it with the CI again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1976338232:289,load,loading,289,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1976338232,2,['load'],['loading']
Performance,"> > a meta-question might be whether we should veto these tutorials on all but the fastest of our testing platforms, i don't know how many more multi-thread multi-minute tutorials we can add before nightlies and incrementals become noticeably slower; > ; > If you label them `longtest`, they are skipped on a lot of machines. The `multicore` e.g. will run them. Ah damn, missed that you pushed to my branch :see_no_evil: I've added the flag again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6107#issuecomment-667881359:144,multi-thread,multi-thread,144,https://root.cern,https://github.com/root-project/root/pull/6107#issuecomment-667881359,1,['multi-thread'],['multi-thread']
Performance,"> > is there a way to re-run the CI against this roottest PR ? [root-project/roottest#1069 (files)](https://github.com/root-project/roottest/pull/1069/files); > ; > If/when the new CI or jenkins build are re-run they will pick up the new branch since it has the same name as this PR's branch.; > ; > However the change is surprising:; > ; > ```; > -Estimate cluster size: 3; > +Estimate cluster size: 3030; > ```; > ; > does not seem like it is close to the limits and is unclear why it is changed. This is because, there was some clamping happening, but the value of cacheSize was not being taken into account, as this line was missing in the code:; `cacheSize = pf->GetBufferSize();`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14818#issuecomment-1986493108:568,cache,cacheSize,568,https://root.cern,https://github.com/root-project/root/pull/14818#issuecomment-1986493108,2,['cache'],['cacheSize']
Performance,> > or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory; > ; > I would go for this solutions (add missing information). Sounds good. And also document well what Used means in the MemInfo struct (as it is ambiguous and it does not correspond to any value in /proc/meminfo).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196#issuecomment-778312591:78,cache,cached,78,https://root.cern,https://github.com/root-project/root/issues/7196#issuecomment-778312591,1,['cache'],['cached']
Performance,"> > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons.; > ; > Isn't that solved/avoided by having a complete set of explicit comparison operator?. Yes, if you catch all of them :) So as I said, try to debug and step through some unit tests to figure out where the compiler picks something unexpected and then implement in the missing comparison operator.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1479713682:52,perform,perform,52,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1479713682,1,['perform'],['perform']
Performance,"> > the performance of the llvm::SmallVector comes from the fact it is not exception safe; > ; > Can you elaborate a bit? For us, the performance boost in RVec 2.0 comes from the small buffer optimization, which reduces the amount of heap allocations during analysis event loops. The implementation of SmallVector in llvm assumes it is used in codebases without exception support (like llvm itself). Thus the implementation can make some assumptions which the general std::vector cannot. See some terse documentation [here](https://llvm.org/doxygen/classllvm_1_1SmallVector.html). There are two things I'd encourage you to try and see if you can reach the same level of small buffer optimization as you got now:; * Make a wrapper class which always takes an assumed size over std::vector and call std::vector::reserve; * Make a wrapper class which takes a template argument assumed size and try to allocate the assumed size on the stack, if it exceeds that, call underlying std::vector and move things there. If either gets similar performance that'd be probably better approach in my opinion as it'd be exception safe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-818864506:8,perform,performance,8,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-818864506,5,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"> > there would be an additional write option like SetBigClusters() or so.; > ; > This might be an okay temporary solution but we probably should think of way to make the switch automatic (we wouldn't want a user many hours jobs fails because the limit is reached unexpectedly because there is a few unexpectedly large events (unless I mis-understood the point/goal and this is 'just' an optimization). Fair point. I guess that's possible but a little hairy to implement correctly. Perhaps as a first step, let's see the difference with splitting and compression in file size between 64bit and 32bit offsets. Because another option would be 64bit on-disk offsets by default and an option ""I promise my events and clusters are small"" `SetSmallClusters()`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12331#issuecomment-1434268569:388,optimiz,optimization,388,https://root.cern,https://github.com/root-project/root/pull/12331#issuecomment-1434268569,1,['optimiz'],['optimization']
Performance,"> @ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. . Great! I'll try to invite Google to test for it. > If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:; > ; > master	this pr	this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5); > user time:	0.53s	0.50s	0.49s; > rss:	309436	310196	310192; > It is surprising that we lose 1MB somewhere between D41416 and your changes... It looks like it is slightly faster (I know it is not accurate). The size overhead may comes from the hash table I guess. Time/Space trade offs. I guess it makes sense in the high level in some degree. > ; > @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1980600340:44,Perform,Performance,44,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1980600340,1,['Perform'],['Performance']
Performance,"> @SClarkPhysics that's also with friends and multi-threading, and disappearing if you don't use friends or turn off multi-threading (or both)?. No, my issue seems a bit different and I am still investigating to see when it happens. I am **not** using multiprocessing or friends but am still getting the error "" Error in <TCollectionLessSTLReader::GetCP()>: Read error in TBranchProxy. ""; Not exactly sure how to recreate the error yet so I need to do some investigating on my own, but it definitely doesn't happen on every file I run over and it seems that it may be related to one of the custom cpp functions I am using to define a new column. Can report back when I learn a bit more",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9106#issuecomment-944305281:46,multi-thread,multi-threading,46,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944305281,4,['multi-thread'],['multi-threading']
Performance,> @VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`. Dear Enrico @eguiraud . I'll do it tomorrow,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864081946:90,optimiz,optimized,90,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864081946,1,['optimiz'],['optimized']
Performance,"> @andresailer reports; > ; > ```; > ...; > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; > Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h; > requested to autoload type IOIMPL::TrackerPulseIOImpl; > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; > Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h; > requested to autoload type IOIMPL::TrackerRawDataIOImpl; > Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; > Missing FileEntry for include/IOIMPL/VertexIOImpl.h; > requested to autoload type IOIMPL::VertexIOImpl; > Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:; > ; > #line 1 ""EVENT dictionary payload""; > ...; > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; > Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; > ```; > ; > and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade. Perhaps, the last fix I pushed will fix it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11921#issuecomment-1357863281:763,Load,LoadClassInfo,763,https://root.cern,https://github.com/root-project/root/pull/11921#issuecomment-1357863281,3,['Load'],['LoadClassInfo']
Performance,"> @bellenot do you know why linux does not see this issue?. Well, not sure, but since the left-hand side variable (`clustersInThisFileSize`) of the equation:; ```; const auto nFolds = clustersInThisFileSize / maxTasksPerFile;; ```; is zero, maybe on Linux (due to some optimization?) the result is always zero, whatever the right-hand side value (`maxTasksPerFile`) is. Maybe you could check on Linux if `maxTasksPerFile` is zero at some point...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4953#issuecomment-583405770:269,optimiz,optimization,269,https://root.cern,https://github.com/root-project/root/pull/4953#issuecomment-583405770,1,['optimiz'],['optimization']
Performance,"> @bernhardmgruber @jalopezg-git is there a way for us to fix `TString`'s traditional comparison ops, to avoid having to define an `op<=>`?. Yes, but I have far to little context to understand what you are trying to solve here. I assume something broke when you switched to C++20. C++20 (leaving `operator<=>` on the side for now) introduced comparison rewrite rules which may be a potential cause. E.g. an expression `tstring == charptr` can now be rewritten by the compiler to `operator==(charptr, tstring)`. This is further complicated by the presence of non-`explicit` unary constructors, since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Looking at `TString.h`, I see lots of non-explicit constructors, non-explicit conversion operators (to `std::string_view` and `std::string`) in the header file (clang-tidy fills up the file with warnings on these). I strongly suspect that the compiler could somehow rewrite a comparison using any of the conversions and find a better match. I strongly believe adding `operator<=>` does not solve anything but just hides an existing problem. Also this block:; ```c++; #ifndef WIN32; // To avoid ambiguities.; inline Bool_t operator==(const char *s1, const std::string_view &s2) { ... }; inline Bool_t operator==(const std::string_view &s1, const char *s2) { ... }; #endif; ```; fosters my believe that there is already something fishy. I would advice to step through a failing unit test in C++20 mode and observe what overloads and conversions are picked .; I am also scared by e.g. defining `operator==(const TString &s1, const char *s2);` at the beginning of the file and the symmetric `operator==(const char *s1, const TString &s2)` at the end. If there is any call to ` charptr == tstring` anywhere in-between, you would get a conversion in C++17 `TString(charptr) == tstring` and a rewrite in C++20, which could change behavior if there is an inconsistency anywhere. I would advice to refacto",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1479606106:641,perform,perform,641,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1479606106,1,['perform'],['perform']
Performance,"> @eguiraud As long as we don't leak the interface to users, I guess TBB is fine. @jblomer @Axel-Naumann does that mean we can include TBB headers in our headers? I thought that wasn't the case. If we cannot it will be impossible (or at least very awkward) to use TBB's concurrent queue e.g. in template code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8715#issuecomment-887277679:270,concurren,concurrent,270,https://root.cern,https://github.com/root-project/root/pull/8715#issuecomment-887277679,2,"['concurren', 'queue']","['concurrent', 'queue']"
Performance,"> @etejedor @vgvassilev What do you want to do about libz3? Should we disable that in the builtin LLVM? It's probably a good idea not to let the builtin LLVM be influenced by whatever may be found on the system at build time. The option to disable is called LLVM_ENABLE_Z3_SOLVER. That's @vgvassilev or @Axel-Naumann 's call, the Python test is just notifying a new library that is loaded at `import ROOT` time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-824020800:382,load,loaded,382,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-824020800,1,['load'],['loaded']
Performance,"> @hahnjo, according to our ci this patch seems fine. IIUC `LoadExternalSpecializationsLazily` is still off by default, right? But good that it passes now in this off-by-default mode :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1923239998:60,Load,LoadExternalSpecializationsLazily,60,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1923239998,1,['Load'],['LoadExternalSpecializationsLazily']
Performance,"> @hahnjo, this looks good to me but can we not fix the `llvm::identify_magic` as well or instead?. The question is whether `llvm::identify_magic` should be prepared to deal with files that are modified concurrently. As far as I understand, Cling uses this code path to auto-detect libraries and distinguish them from random binary files. If the answer is yes, then I can try to fix `llvm::identify_magic` upstream so we get it with some future LLVM upgrade.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11174#issuecomment-1212376080:203,concurren,concurrently,203,https://root.cern,https://github.com/root-project/root/pull/11174#issuecomment-1212376080,1,['concurren'],['concurrently']
Performance,"> @jblomer thanks for this. In your comment; > ; > > The page pool will require more work.; > ; > Is that just an optimization or will it be needed to read back the values properly?. The ""more work"" is only on optimization, not on correctness.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16810#issuecomment-2454581709:114,optimiz,optimization,114,https://root.cern,https://github.com/root-project/root/pull/16810#issuecomment-2454581709,2,['optimiz'],['optimization']
Performance,"> @junaire, this looks good to me, but can you check if we do not regress in terms of memory. I think `time -v` on `hsimple.C` should be good enough. Sure, I'll trigger a build for CMSSW. BTW, I think this is a **fix** so we shouldn't be blocked by performance issues.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11423#issuecomment-1264544237:249,perform,performance,249,https://root.cern,https://github.com/root-project/root/pull/11423#issuecomment-1264544237,1,['perform'],['performance']
Performance,"> @lmoneta, shouldn't we link the whole archive of libVc.a into MathCore? We see some failures such as:; > ; > ```; > root.exe -q -l -b test/testGenVectorVc.cxx ; > ; > Processing test/testGenVectorVc.cxx...; > IncrementalExecutor::executeFunction: symbol '_ZN4Vc_13SSE9c_general14signMaskDoubleE' unresolved while linking function '_GLOBAL__sub_I_cling_module_9'!; > You are probably missing the definition of Vc_1::SSE::c_general::signMaskDouble; > Maybe you need to load the corresponding shared library?; > IncrementalExecutor::executeFunction: symbol '_ZN4Vc_13SSE9c_general13absMaskDoubleE' unresolved while linking function '_GLOBAL__sub_I_cling_module_9'!; > You are probably missing the definition of Vc_1::SSE::c_general::absMaskDouble; > Maybe you need to load the corresponding shared library?; > IncrementalExecutor::executeFunction: symbol '_ZN4Vc_16Common10AllBitsSetE' unresolved while linking function '_GLOBAL__sub_I_cling_module_9'!; > You are probably missing the definition of Vc_1::Common::AllBitsSet; > Maybe you need to load the corresponding shared library?; > warning: Failed to call `testGenVectorVc()` to execute the macro.; > Add this function or rename the macro. Falling back to `.L`.; > ```; > ; > Where:; > ; > ```; > nm externals/usr/local/lib/libVc.a | grep _ZN4Vc_13SSE9c_general14signMaskDoubleE; > 0000000000000580 R _ZN4Vc_13SSE9c_general14signMaskDoubleE; > ```. @lmoneta ping.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8788#issuecomment-899807507:469,load,load,469,https://root.cern,https://github.com/root-project/root/pull/8788#issuecomment-899807507,3,['load'],['load']
Performance,"> @marsupial, I can make the inclusion of ConvertUTF.h conditionally included if LLVM_UTF8 is set. It is not clear to me what would be the benefit, though. It already is conditional. Look a few lines below the include to see it. The benefit is to use the C++ lib to do conversion when it can so client conversion will match, as well as not allocate 4x the string length which is what the LLVM routines do. > Can you give an example of which case you are thinking go?. Have a memory of virtual file names being inserted into the cache so clang thinks it already hold a buffer to them, which would make the following not work:; ```; $ int Val = 5; // input_line_1; $ #include ""input_line_1"" // input_line_2; $ #include ""input_line_3"" // input_line_3; $ #include ""input_line_5"" // input_line_4; $ Val = 6; // input_line_5; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/589#issuecomment-305206910:528,cache,cache,528,https://root.cern,https://github.com/root-project/root/pull/589#issuecomment-305206910,1,['cache'],['cache']
Performance,"> @mxxo @jblomer This work will be resumed soon as we suspect that not reusing addresses is affecting RDMA data transfers (which has an impact on the measured throughput in the DAOS backend). Specifically, we need to confirm that not reusing addresses that appear in the IOVs array in `daos_obj_{fetch,update}()` is related to a higher overhead due to RDMA MR registration. Also, as discussed with @jblomer, this is a separate problem that will be addressed in a separate PR if need be (CC: also FYI, @glmiotto :-)).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8634#issuecomment-1424850942:159,throughput,throughput,159,https://root.cern,https://github.com/root-project/root/pull/8634#issuecomment-1424850942,2,['throughput'],['throughput']
Performance,"> @oshadura yes, the following minimal reproducer runs in 13 seconds on my workstation with built-in LZMA, and in 6 with LZMA installed from system packages. 75% of the runtime is spent in `R__zipLZMA` in the slow case, 48% in the fast case.; > ; > This patch fixes that runtime difference.; > ; > (EDIT: plus from the [build log](https://github.com/root-project/root/files/5049830/LZMA-build-out.log) of built-in LZMA you can see no optimization flags are added at the moment); > ; > ```c++; > // write_lzma.cpp; > #include <ROOT/RDataFrame.hxx> ; > #include <TStopwatch.h> ; > #include <iostream> ; > ; > int main() { ; > ROOT::RDF::RSnapshotOptions opts; ; > opts.fCompressionAlgorithm = ROOT::kLZMA; ; > opts.fCompressionLevel = 6; ; > opts.fLazy = true; ; > auto trigger = ROOT::RDataFrame(50000000).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"", {""x""}, opts); ; > TStopwatch s; ; > s.Start(); ; > *trigger; ; > s.Stop(); ; > std::cout << s.RealTime() << std::endl; ; > return 0; ; > }; > ```. btw, nice benchmark!!! I vote to add it in rootbench.git :+1: . (Actually even just to tune parameters: https://github.com/root-project/rootbench/blob/master/root/io/io/TFile_RDFSnapshot.cxx )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6144#issuecomment-671240797:434,optimiz,optimization,434,https://root.cern,https://github.com/root-project/root/pull/6144#issuecomment-671240797,2,"['optimiz', 'tune']","['optimization', 'tune']"
Performance,"> @pcanal proposes to add the literal diagnostic, which helps understand ""recent failure"" in two years, and which allows to search if we run into this again, e.g. in 6-26:; > ; > ```; > [ 70%] Generating G__Core.cxx, ../lib/Core.pcm; > ; > /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:491:10: error: module 'std.bits/ranges_base.h' requires feature 'cplusplus20'; > module ""bits/ranges_base.h"" {; > ^; > /usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here; > #include <bits/ranges_base.h> // enable_borrowed_range, enable_view; > ^; > In file included from input_line_3:2:; > ; > /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; > #include ""TIsAProxy.h""; > ~~~~~~~~^~~~~~~~~~~~~; > ; > Error: Error loading the default rootcling header files.; > gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; > ```. The commit message says exactly that. I don't think I want to paste the error to say actually the same thing as the commit message says.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1429231571:940,load,loading,940,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1429231571,1,['load'],['loading']
Performance,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time.; > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds.; > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-); > ; > @Axel-Naumann @oshadura ping?. So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly?. I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-821808128:227,cache,cache,227,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-821808128,1,['cache'],['cache']
Performance,"> @vgvassilev Do we actually have any tests that checks that things still work if the files used to produce the pcm (or the pch) are gone and/or not longer accessible? (i.e. the test framework would have to explicitly hides/move/removes some files to achieve this). We seem to have builders that use the PCH (nortcxxmod). Then, we have cmssw that has the hybrid model, forward declarations and modules, including relocating the ROOT build - I doubt we would not catch the failure of this patch. I suspect what saves us here is several optimizations we did over the years where rootcling does not produce a lot of virtual file entries and basically pch/pcm files have less (but not 0) virtual files. @Axel-Naumann, I think you should know better - you created the patch long time ago ;) My memory is that we were trying to fix something with cms/atlas and PCH?. > * for this PR to be correctly validated we need to have tested a setup where the build directory is not available anymore at runtime. Does CMS test this, @smuzaffar @vgvassilev ?. Oh, yes, they do :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10633#issuecomment-1139459615:535,optimiz,optimizations,535,https://root.cern,https://github.com/root-project/root/pull/10633#issuecomment-1139459615,1,['optimiz'],['optimizations']
Performance,"> @vgvassilev Great!; > ; > For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash. Do you mean this one: https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5 ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978581313:32,perform,performances,32,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978581313,1,['perform'],['performances']
Performance,"> @vgvassilev I see ` In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates.`. Could you explicit in the commit log why an unrelated fully qualified name (`TMVA::Event`) takes precedence over another fully qualified name (`X::Event`). The GMI contains Identifier->list_of_modules mapping. This means that a lookup for `Event` will give all modules in a fully modularized system. However, until today, we have not considered (nor had the tests for) the hybrid approach where parts of the names are resolved from a rootmap files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9592#issuecomment-1014883004:125,load,load,125,https://root.cern,https://github.com/root-project/root/pull/9592#issuecomment-1014883004,1,['load'],['load']
Performance,"> @vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. . Thanks for doing this. That sounds good. > For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. I agree, we should also land this PR since it supports now constexpr constructs which can be anywhere in external codes. > Consider that many of those newfstatat calls are spurious and I'm trying to understand where they come from. . These are likely garbage that's put by rootcling into the pcm files. We can verify if that theory is right if we make a build with `-Druntime_cxxmodules=Off` and see if we still get them at such high numbers...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1867435765:68,perform,performance,68,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1867435765,1,['perform'],['performance']
Performance,"> @vgvassilev are things ok now?. Yes, I just commit, trigger a build and revert. So no harm should be done unless your build is unlucky to stay in the queue and be executed in this 10s slot :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5845#issuecomment-642210385:152,queue,queue,152,https://root.cern,https://github.com/root-project/root/pull/5845#issuecomment-642210385,1,['queue'],['queue']
Performance,"> @vgvassilev do you object to me merging? I'd want to see this exposed to users earlier rather than later, to hear feedback before we tag v6.26. I have opened an issue #9312 to keep track. No objections. What I'd like to understand is how much code regressed. But also, is the performance benefit significant outside of RDF. Both probably require more field testing... I suspect that for many cases we will be okay. There will be a number of regressed cases. What is unclear is how many are going to be the significantly improved cases. I believe for RDF we control the environment and compile even with -O2.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9301#issuecomment-973325971:278,perform,performance,278,https://root.cern,https://github.com/root-project/root/pull/9301#issuecomment-973325971,2,['perform'],['performance']
Performance,> @vgvassilev on `ROOT-performance-centos8-multicore/cxx17` PR does not work. Can you make this header [optional]?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12765#issuecomment-1536039620:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/12765#issuecomment-1536039620,1,['perform'],['performance-']
Performance,"> @vgvassilev on `ROOT-performance-centos8-multicore/cxx17` PR does not work. Yes, `bits/utility.h` doesn't exist with GCC 8.5.0 on EL8. You can try marking it `[optional]`, but I really get the feeling that we need to re-evaluate our approach to `std.modulemap` in the medium and longer term...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12765#issuecomment-1535982913:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/12765#issuecomment-1535982913,1,['perform'],['performance-']
Performance,"> @vgvassilev yes the bulk of the code is from LLVM SmallVector but see my comment above: we patch it to add a feature, and it does not work with (our version of) cppyy as-is. So exposing LLVM's SmallVectore as a core library would not help here, we'd still need to roll our own SmallVector-based RVec.; > ; > > I thought we have a way to do that with TMemFile already.; > ; > It's a different ""level"" of adoption: this is after deserialization, TMemFile might make an on-disk blob available as a memory buffer but that would be before deserialization. Another thing to keep in mind is that the performance of the llvm::SmallVector comes from the fact it is not exception safe as llvm does not compile with exceptions. I suspect that may not apply for many parts of ROOT.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-817094299:595,perform,performance,595,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-817094299,1,['perform'],['performance']
Performance,"> @yamaguchi1024 You will need an example that has a large fraction of libraries with rdicts (eg. hsimple is almost only using libraries that do not have any rdict).; > ; > For example after doing `ctest -R MakeProject`, you could test:; > ; > ```; > {; > gSystem->Load(""roottest/root/meta/MakeProject/cms310/cms310.so"");; > auto f = TFile::Open(""roottest_src_directory/root/meta/MakeProject/CMSSW_3_1_0_pre11-RelValZTT-default-copy.root"");; > TTree *tree = nullptr; f->GetObject(""Events"", tree);; > for(Long64_t e = 0; e < tree->GetEntriesFast(); ++e) tree->GetEntry(e);; > }; > ```; > ; > Or other similar large user libraries. @vgvassilev @yamaguchi1024 When mentioning the MakeProject in the PR description. Do you mean the test as it is in the repository or the extent test I proposed (the former does *not* even load the root-pcm file, i.e. it just generates it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-471050063:265,Load,Load,265,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-471050063,2,"['Load', 'load']","['Load', 'load']"
Performance,"> AFAIK the new autoloading is not available for COFF?; > ; > Do we understand (as in reproduced and debugged) where the original issue is coming from? Let's _first_ do that and _then_ try to repair, please. We do have coff support in symbol resolution and it is default already: https://github.com/vgvassilev/cling/blob/329af99e47a39526df49c27abd10d3306fbc7c9b/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L933. I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10330#issuecomment-1089868124:518,load,load,518,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1089868124,4,['load'],"['load', 'loading']"
Performance,"> Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it. In the contrary, this is for the case where the elf header does not contain the information and instead the information is/was in the rootmap file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394475678:23,Load,Load,23,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394475678,2,"['Load', 'load']","['Load', 'loading']"
Performance,"> Ah yes, I had not thought about the py2 compatibility! I have now pushed the fix for that. Hope that works.; > ; > Unfortunately I don't have access to the details of the failing tests. Is there something else to do for the other test that @hageboeck mentioned?. Nope, you cannot do anything on the python side. It's a numerical instability that arises due to multi-threaded processing, and it's not related to the pythonisation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7314#issuecomment-794106136:362,multi-thread,multi-threaded,362,https://root.cern,https://github.com/root-project/root/pull/7314#issuecomment-794106136,1,['multi-thread'],['multi-threaded']
Performance,"> Almost 10/10, only denied by the a spurious failure on `Windows 10 x64 Release`... Thanks for approving. The error is only a test failure (`tutorial-v7-concurrentfill.cxx`)...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14314#issuecomment-1882988047:154,concurren,concurrentfill,154,https://root.cern,https://github.com/root-project/root/pull/14314#issuecomment-1882988047,1,['concurren'],['concurrentfill']
Performance,"> Almost there! slightly_smiling_face; > ; > Please, test the implementation after applying the suggestions; after that, I think we can squash into a single commit and merge. It's working well, but we have a crash if I perform the following (stupid) sequence:. - press CTRL+S; - write 'int'; - press CTRL+S again. ```; ===========================================================; #10 __memchr_avx2 () at ../sysdeps/x86_64/multiarch/memchr-avx2.S:65; #11 0x00007f9a4575a505 in std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::find(char const*, unsigned long, unsigned long) const () from /usr/lib/x86_64-linux-gnu/libstdc++.so.6; #12 0x00007f9a45e00162 in textinput::Editor::UpdateHistSearch (this=0x560b564df640, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:124; #13 0x00007f9a45e00a77 in textinput::Editor::ProcessCommand (this=0x560b564df640, M=textinput::Editor::kCmdForwardSearch, R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:285; #14 0x00007f9a45dffb48 in textinput::Editor::Process (this=0x560b564df640, cmd=..., R=...) at /opt/root_src/core/textinput/src/textinput/Editor.cpp:67; #15 0x00007f9a45e1049d in textinput::TextInput::ProcessNewInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>, in=..., R=...) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:174; #16 0x00007f9a45e10117 in textinput::TextInput::ReadInput (this=0x7f9a462fd880 <(anonymous namespace)::TextInputHolder::getHolder()::sTIHolder>) at /opt/root_src/core/textinput/src/textinput/TextInput.cpp:126; #17 0x00007f9a45dfe363 in Getlinem (mode=kOneChar, prompt=0x0) at /opt/root_src/core/textinput/src/Getline.cxx:256; ===========================================================; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10208#issuecomment-1082943729:219,perform,perform,219,https://root.cern,https://github.com/root-project/root/pull/10208#issuecomment-1082943729,1,['perform'],['perform']
Performance,"> Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything. This is solved, too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10208#issuecomment-1083174430:90,load,loads,90,https://root.cern,https://github.com/root-project/root/pull/10208#issuecomment-1083174430,2,['load'],"['load', 'loads']"
Performance,> Anything else we can try here? I would really love to get rid of the overhead from ROOT. Apologies for being slow. I am attending a workshop these past several days... This is what ROOT (without the suggested patch does for me):. ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep Preloading | wc -l; 21; vvassilev@vv-nuc /build/vvassilev/root_build $ ROOTDEBUG=7 root.exe -l -b -q 2>&1 | grep 'on demand' | cut -d' ' -f 2 | sort | uniq | wc -l; 35. Essentially it loads 56 pcm files at startup. That's still pretty bad but not 100. /usr/bin/time -v root.exe -l -b -q shows ; 	User time (seconds): 0.08; 	System time (seconds): 0.04; 	Maximum resident set size (kbytes): 179344. Still probably too much memory being used but that's what the state of the art modules technology allows us. The numbers are not great but not I cannot reproduce the pcm loads that you report. Can you prepare some debug environment for me to check it out. I will need a standard build of ROOT perhaps with `-DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug`?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1610182084:458,load,loads,458,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1610182084,2,['load'],['loads']
Performance,"> Approving but consider rewording the commit log to include some (anecdotal) performance result. Thank you @pcanal, just updated the wording.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6983#issuecomment-756094858:78,perform,performance,78,https://root.cern,https://github.com/root-project/root/pull/6983#issuecomment-756094858,1,['perform'],['performance']
Performance,"> As I said before, we should have just a TArrayL, a TH1L and THnSparseL all based on Long64_t. We could use as typedef TArrayL64 to TArrayL. It does not make any sense to keep a TArrayL based on Long_t that is not portable, using a 32 bit integer on a 32 bit machine and a 64 bit integrated on a 64 bit machine. @Axel-Naumann , @pcanal do you agree with this ?. Note: there are some functions within ROOT that use explicitly Long_t and TArrayL. If the change is performed, then these functions would need to be modified, too. For example: https://github.com/root-project/root/blob/master/graf2d/asimage/src/TASImage.cxx#L2405. But still not sure if any of these could break backward compatibility. Maybe it's easier to just mark TArrayL as deprecated in the documentation, recommending instead TArrayL64??",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8546#issuecomment-1320906798:463,perform,performed,463,https://root.cern,https://github.com/root-project/root/pull/8546#issuecomment-1320906798,1,['perform'],['performed']
Performance,"> As a side remark, it sounds expensive to recreate all managers and passes for every module. Is this also what upstream does if it runs on multiple input files?. I agree that it might not be very efficient to recreate all managers/passes for every module. I've been looking upstream and couldn't find any instance where populating pass/analysis managers and running passes are separated (unlike the legacy pass manager). . I used this as a reference for this PR: https://reviews.llvm.org/D123425. [This issue](https://discourse.llvm.org/t/segmentation-faults-running-the-new-llvm-modulepassmanager-with-default-pipeline/59105) is what I think happened with the failing tests for us. From the thread, they recommend using a new instance every time we perform codegen as the analyses might not be cleared. I could also try using the clear() method instead,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1864281326:751,perform,perform,751,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1864281326,2,['perform'],['perform']
Performance,"> As far as I can tell this requires the user code to be thread safe, which does not seem to be the case of the example. Yes the example is meant to be single threaded. If users run the analysis on multiple threads they have to make sure the callback can be called by multiple threads concurrently. > it is not clear whether the call back will see the global partial result or the partial result so far on the 'current' thread. No guarantees there: it's going to be a ""partial result"".; If it's ""thread-local partial"" or ""global partial"" depends on what each action's `PartialUpdate` method will do in practice. For some kind of actions it might be fine in terms of RAM and runtime to expose the ""global"" partial result, for others it could be an issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331171774:285,concurren,concurrently,285,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331171774,2,['concurren'],['concurrently']
Performance,"> As far as I understood, this only happens after some other libraries have been loaded? I tested .L libceleritas_root.so as the first action in a fresh root REPL, what else did you execute before that to make the error appear?. Nothing else :). The 'more' libraries comes from the fact that `libceleritas_root.so` is explicitly linked to many library and we tested that loading any and all those dependent libraries by themselves does not introduce any (noticeable) problems.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1090214128:81,load,loaded,81,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1090214128,2,['load'],"['loaded', 'loading']"
Performance,"> As to where these come from, my primary suspect would be fused-multiply-add instructions or other optimized floating point instructions that are not fully IEEE-754 compliant. I don't know exactly where, but I also don't think that you want to disable them globally and pay the performance penalty... Yep: At least for the first difference in `testRooAbsL` that I hunted down, mac13arm has a fused instruction in `RooAbsPdf::extendedTerm`. If instead of; https://github.com/root-project/root/blob/b7b8646c53724503b3c603de4cf633bc78270b5f/roofit/roofitcore/src/RooAbsPdf.cxx#L820-L822; I put; ```c++; printf("" expected = %.17g, log = %.17g\n"", expected, std::log(expected));; double test = sumEntries * std::log(expected);; printf("" test = %.17g\n"", test);; test = expected - test;; printf("" test = %.17g\n"", test);; #if 0; double extra = doOffset; ? (expected - sumEntries) - sumEntries * (std::log(expected) - std::log(sumEntries)); : expected - sumEntries * std::log(expected);; #endif; double extra = expected - sumEntries * std::log(expected);; printf("" extra = %.17g\n"", extra);; ```; I get the following output:; ```; test = 2390.5943542960845; test = -1990.5943542960845; extra = -1990.5943542960847; ```; with the corresponding assembly code being (with some annotations; the `fmsub` is at `ca518`); ```; ca4d0: 00 41 60 1e fmov d0, d8; ca4d4: c9 1c 07 94 bl 0x2917f8 <_write+0x2917f8> # likely the call to std::log; ca4d8: 0b 40 60 1e fmov d11, d0; ca4dc: e0 07 00 fd str d0, [sp, #8]; ca4e0: e8 03 00 fd str d8, [sp]; ca4e4: 20 10 00 f0 adrp x0, 0x2d1000 <RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&)+0x6e8>; ca4e8: 00 78 36 91 add x0, x0, #3486; ca4ec: ff 1c 07 94 bl 0x2918e8 <_write+0x2918e8> # print ""expected = %.17g, log = %.17g""; ca4f0: 6c 09 6a 1e fmul d12, d11, d10 # test = sumEntries * std::log(expected); ca4f4: ec 03 00 fd str d12, [sp]; ca4f8: 33 10 00 f0 adrp x19, 0x2d1000 <RooAbsPdf::createNLL(RooAbsData&, RooLinkedList const&)+0x6fc>; ca4fc: 73 16 37 91 add x1",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1540239366:100,optimiz,optimized,100,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1540239366,2,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,> Assigning to @vgvassilev as modulemap contamination seems to be the only blocker. Maybe `--rootbuild` should refrain from loading all the world's modulemaps?. I don't think this is the only blocker. There is also the problem that header files from the existing build can be picked up in the compilation:; * https://github.com/root-project/root/issues/13101,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7128#issuecomment-1798589918:124,load,loading,124,https://root.cern,https://github.com/root-project/root/issues/7128#issuecomment-1798589918,1,['load'],['loading']
Performance,"> Before, it was loading the library which doesn't exists (It was gSystem->Load ing; even when gSystem->DynamicPathName fails). Maybe. Before, it was calling gSystem->Load even when gSystem->DynamicPathName did not find the library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167#issuecomment-396281189:17,load,loading,17,https://root.cern,https://github.com/root-project/root/pull/2167#issuecomment-396281189,3,"['Load', 'load']","['Load', 'loading']"
Performance,"> Btw, I also found weird that the TDirectory destructor, by getting gROOT .... ends up calling . This is because it is the very first access to `gROOT` in this process and thus it triggers the initialization of the global `TROOT` object including the loading of various library related information (for all loaded library).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13691#issuecomment-1728650146:252,load,loading,252,https://root.cern,https://github.com/root-project/root/issues/13691#issuecomment-1728650146,2,['load'],"['loaded', 'loading']"
Performance,> Build failed on ROOT-performance-centos7-multicore/default.; > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build; > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-14).; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/console).; > ### Failing tests:; > ; > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/test/test_stressIOPlugins_xroot/); > ; > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/); > ; > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/); > ; > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/); > ; > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/); > ; > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/86837/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). This is likely infrastructure related. If I login and rerun those tests they all pass.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-643914463:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-643914463,2,['perform'],['performance-']
Performance,> Build failed on ROOT-performance-centos7-multicore/default.; > Running on olhswep22.cern.ch:/data/sftnight/workspace/root-pullrequests-build; > [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-performance-centos7-multicore-default&date=2020-06-16).; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/console).; > ### Failing tests:; > ; > * [projectroot.test.test_stressIOPlugins_xroot](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/test/test_stressIOPlugins_xroot/); > ; > * [projectroot.tree.treeplayer.test.gtest_tree_treeplayer_test_treeprocessormt_remotefiles](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/); > ; > * [projectroot.runtutorials.tutorial_dataframe_df102_NanoAODDimuonAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df102_NanoAODDimuonAnalysis/); > ; > * [projectroot.runtutorials.tutorial_dataframe_df101_h1Analysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df101_h1Analysis/); > ; > * [projectroot.runtutorials.tutorial_dataframe_df103_NanoAODHiggsAnalysis](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_dataframe_df103_NanoAODHiggsAnalysis/); > ; > * [projectroot.runtutorials.tutorial_tmva_tmva103_Application](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/87069/testReport/projectroot/runtutorials/tutorial_tmva_tmva103_Application/). Those fail all over the place.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-644850315:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-644850315,2,['perform'],['performance-']
Performance,"> Build failed on ROOT-performance-centos7-multicore/default.; > [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71269/console).; > ; > ### Warnings:; > * CMake Warning at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message):; > * CMake Warning at bindings/pyroot_experimental/cppyy/cppyy/CMakeLists.txt:33 (message):; > * /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:1695:38: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]; > * /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPScope.cxx:72:12: warning: unused parameter ‘pyclass’ [-Wunused-parameter]; > * /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPScope.cxx:72:12: warning: unused parameter ‘pyname’ [-Wunused-parameter]; > * /data/sftnight/workspace/root-pullrequests-build/root/bindings/pyroot_experimental/cppyy/CPyCppyy/src/CPPScope.cxx:72:12: warning: unused parameter ‘pyval’ [-Wunused-parameter]; > * cc1plus: warning: unrecognized command line option ""-Wno-register"" [enabled by default]; > ; > ### Failing tests:; > * [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71269/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_pyz_ttree_branch_attr/); > * [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71269/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/). The failing tests in this machine are not introduced by this PR. ; It can be seen in this dummy PR; https://github.com/root-project/root/pull/4576",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-547602777:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-547602777,1,['perform'],['performance-']
Performance,"> Build failed on ROOT-performance-centos7-multicore/default.; > [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71797/console).; > ; > ### Warnings:; > * CMake Warning at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:892 (message):; > ; > ### Failing tests:; > * [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_pyz_ttree_branch_attr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71797/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_pyz_ttree_branch_attr/); > * [projectroot.bindings.pyroot_experimental.PyROOT.ROOT.test.pyunittests_pyroot_pyz_ttree_setbranchaddress](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71797/testReport/projectroot.bindings.pyroot_experimental.PyROOT.ROOT/test/pyunittests_pyroot_pyz_ttree_setbranchaddress/); > * [projectroot.roottest.python.basic.roottest_python_basic_operator](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/71797/testReport/projectroot.roottest.python/basic/roottest_python_basic_operator/). In the failing tests involving TNtuples, the main difference between a successful working environment and this machine is in the root file used by the above mentioned tests: in this case, the TNtupleD is saved in the root file without name, so when it's called by name a TObject nullptr is returned, making the tests fail.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4279#issuecomment-550358311:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/4279#issuecomment-550358311,1,['perform'],['performance-']
Performance,"> Build failed on ROOT-performance-centos8-multicore/cxx17. These failure are pre-existing, I opened https://github.com/root-project/root/issues/13058. I briefly discussed with Axel, and we decided to merge this for now. In the worst case, somebody building their own ROOT binaries without C++ runtime modules will complain when installing on a system with non-matching headers, in which case we'll investigate (hopefully all experiments enable C++ runtime modules by now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13054#issuecomment-1600977888:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/13054#issuecomment-1600977888,1,['perform'],['performance-']
Performance,"> Build failed on ROOT-performance-centos8-multicore/cxx17.; > Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151655/console).; >; > ### Failing tests:; > ; > * [projectroot.runtutorials.tutorial_roostats_rs701_BayesianCalculator](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151655/testReport/projectroot/runtutorials/tutorial_roostats_rs701_BayesianCalculator/); > ; > * [projectroot.runtutorials.tutorial_roostats_rs401c_FeldmanCousins](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/151655/testReport/projectroot/runtutorials/tutorial_roostats_rs401c_FeldmanCousins/). This is the ""known"" problem about `llvm::identify_magic`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11163#issuecomment-1210685075:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/11163#issuecomment-1210685075,1,['perform'],['performance-']
Performance,"> Build failed on ROOT-performance-centos8-multicore/default. Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/133542/console).; > ### Warnings:; > ; > * [2022-01-11T10:04:05.940Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/mathtext/src/table/adobeglyphlist.h:128:44: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=]; > ; > * [2022-01-11T10:04:05.940Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/mathtext/src/table/adobeglyphlist.h:128:55: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=]; > ; > * [2022-01-11T10:09:45.837Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:44: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=]; > ; > * [2022-01-11T10:09:45.837Z] /data/sftnight/workspace/root-pullrequests-build/root/graf2d/postscript/src/AdobeGlyphList.h:110:55: warning: unpaired UTF-8 bidirectional character detected [-Wbidirectional=]. Ok, that node needs to be updated to a compiler that supports the new command line option, or we'll see warnings on all PRs. Who can do that?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9532#issuecomment-1009822701:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/9532#issuecomment-1009822701,1,['perform'],['performance-']
Performance,> Build failed on ROOT-performance-centos8-multicore/default. Running on olbdw-01.cern.ch:/data/sftnight/workspace/root-pullrequests-build [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/136652/console).; > ### Failing tests:; > ; > * [projectroot.tmva.tmva.test.crossvalidation.gtest_tmva_tmva_test_crossvalidation_testCrossValidationIntVar](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/136652/testReport/projectroot.tmva.tmva.test/crossvalidation/gtest_tmva_tmva_test_crossvalidation_testCrossValidationIntVar/). Is the failing test related to this PR ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9761#issuecomment-1074226391:23,perform,performance-,23,https://root.cern,https://github.com/root-project/root/pull/9761#issuecomment-1074226391,1,['perform'],['performance-']
Performance,"> Build failed on windows10/cxx14.; > Running on null:C:\build\workspace\root-pullrequests-build; > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console).; > ### Failing tests:; > ; > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606#issuecomment-808856045:698,load,load,698,https://root.cern,https://github.com/root-project/root/pull/6606#issuecomment-808856045,1,['load'],['load']
Performance,"> But I don't kow how big TChains can get and whether such a check would become expensive at some point. Yes, sorry I should have given a bit more context. A `TChain` could also have O(10^3) files, in extreme cases O(10^4). . Personally, I agree with @enirolf as I still think getting the first name is not that bad of an idea. It's surely not super elegant, but I believe it is at least better than giving it an arbitrary name like it's done currently. Maybe a compromise could be:. 1. Check how many files the `TChain` has.; 2. If it's less than `THRESHOLD`, then run the check that all files have the same tree name. The `THRESHOLD` number should probably be decided after a few performance benchmarks. If the files don't have all the same tree, I still think we should give the first tree name (and maybe issue a warning that we're doing so).; 3. If it's more, just take the first tree name (with a warning).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13088#issuecomment-1606966381:682,perform,performance,682,https://root.cern,https://github.com/root-project/root/issues/13088#issuecomment-1606966381,1,['perform'],['performance']
Performance,"> But the fine grained options in-between -- some columns in vector writes and some columns not -- are, I think, not tested. I'm not even sure if such cases can occur in practice.; > One option is to just add a comment on that possible optimization and to remove the more sophisticated parts of the vector write logic - i.e. either one big vector write or all scalar writes. Those cases could occur, but I think it is probably a misuse of the API. I have updated the test cases to include that. Let me know what you think; otherwise, as you said, we could just remove that possible per-column vector write optimization.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10775#issuecomment-1169370262:236,optimiz,optimization,236,https://root.cern,https://github.com/root-project/root/pull/10775#issuecomment-1169370262,2,['optimiz'],['optimization']
Performance,"> But why can't we use builtins at compile time only?. ZeroMQ is already part of LCG, so unless we are *absolutely sure* that no symbol will be leaked, we should use the external one. Like with LLVM, which has bitten with this many times because of mesa using it too and linking to it, there's always the risk of having multiple incompatible versions of symbols loaded into the same running process. Builtins are evil, and patched builtins are extra evil. Please just disable it by default, else you are running the risk of breaking experiment software that uses both ROOT and ZeroMQ because of enabling the builtin. Remember what builtin LZMA without optimizations has caused to CMS already and please don't repeat that mistake.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9078#issuecomment-981792646:362,load,loaded,362,https://root.cern,https://github.com/root-project/root/pull/9078#issuecomment-981792646,2,"['load', 'optimiz']","['loaded', 'optimizations']"
Performance,"> Can it be a problem that I'm profiling a debug build?. `RelWithDebInfo` is ok, a `Debug` build on the other hand is not necessarily indicative of the performance of the corresponding optimized code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7904#issuecomment-821819545:152,perform,performance,152,https://root.cern,https://github.com/root-project/root/pull/7904#issuecomment-821819545,2,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,> Can we book all operations before using the results?. @eguiraud Thanks! We are going to change it. I'm wondering if this pattern won't eventually create problems for larger analysis macros because it stretches the space between booking an operation and actually performing the operation. Has this ever been an issue?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7107#issuecomment-778196041:264,perform,performing,264,https://root.cern,https://github.com/root-project/root/pull/7107#issuecomment-778196041,1,['perform'],['performing']
Performance,"> Can we cap the memory used by the caches? For example we could just keep 1 buffer and assign it to the tree cache of the chain associated to the RDF pulled from the worker's rdfs cache before using that RDF to process data (effectively using 1 single cache). . I believe this is at least in theory possible because we are in the situation that 1 worker == 1 core thus all the tasks the single worker processes are actually just sequential runs taken from a queue. The main obstacles on the way:. * This will need exposing quite a few TTree-only details from RDF, breaking the generic approach.; * This will need to be at the same time generic enough that it doesn't interfere with non-TTree-based executions (notably RNTuple).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16094#issuecomment-2247086850:36,cache,caches,36,https://root.cern,https://github.com/root-project/root/pull/16094#issuecomment-2247086850,5,"['cache', 'queue']","['cache', 'caches', 'queue']"
Performance,"> Can we change that?. Interpreter is initialized in `ROOT::Internal::gGetROOT = &ROOT::Internal::GetROOT2;` in `TROOT::TROOT`, and the comment says `It must be the first ROOT related action that is performed by a program.`. I think in theory we can change the order of initialization (Parse option before initialization of TROOT) but I wasn't sure it was the right thing to do..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2561#issuecomment-418092392:199,perform,performed,199,https://root.cern,https://github.com/root-project/root/pull/2561#issuecomment-418092392,1,['perform'],['performed']
Performance,"> Can you debug the produced executable to see why it does not trigger the problem (I.e. why when it reaches the TDirectoryFile destructor gROOT is already set). It seems that `TROOT::getROOT` is called in either case. But, when the executable compiled with cmake reaches this if statement in [`TCling::RegisterModule`](https://github.com/root-project/root/blob/1d5baf0bc77c0abb0ac7ffc8d549f8a7875d03e9/core/metacling/src/TCling.cxx#L2299), it's always false. Thus, `TCling::LoadPCM` is never called and a new `TFile` is never created at https://github.com/root-project/root/blob/1d5baf0bc77c0abb0ac7ffc8d549f8a7875d03e9/core/metacling/src/TCling.cxx#L1879. Finally, `TDirectory::RecursiveRemove` is never called.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13692#issuecomment-1730092957:475,Load,LoadPCM,475,https://root.cern,https://github.com/root-project/root/pull/13692#issuecomment-1730092957,1,['Load'],['LoadPCM']
Performance,"> Can you run a profiler and/or callgrind on the benchmark?. I found nothing interesting there. However, I rebuilt my master and PR in both Release (not RelWithDebInfo) and now I see the speedup of my patch in your example. Average of 3 runs of `root.exe -l -b -q /build/vvassilev/callfuncbench.C\(2000000000\)` master 13.05s and this PR (with the enum what-i-thought optimization) 11.16s and 11.16s. The ctest benchmarks show slight effect towards the enum optimization but it is really negligible. I thought the RelWithDebInfo is almost the same but for LLVM Release means -O3 and RelWithDebInfo means -O2. . Things are looking good for the ctest examples, too:. <summary>Master Release Mode </summary>; <details>. ```; ctest -R .*treefor.* ; Test project /build/vvassilev/root-callfunc-master/release; Start 2216: roottest-root-treeformula-array-make; 1/19 Test #2216: roottest-root-treeformula-array-make ............. Passed 26.16 sec; Start 2217: roottest-root-treeformula-casting-make; 2/19 Test #2217: roottest-root-treeformula-casting-make ........... Passed 2.84 sec; Start 2218: roottest-root-treeformula-clones-make; 3/19 Test #2218: roottest-root-treeformula-clones-make ............ Passed 0.79 sec; Start 2219: roottest-root-treeformula-depth-make; 4/19 Test #2219: roottest-root-treeformula-depth-make ............. Passed 0.23 sec; Start 2220: roottest-root-treeformula-event-make; 5/19 Test #2220: roottest-root-treeformula-event-make ............. Passed 3.82 sec; Start 2221: roottest-root-treeformula-evolution-make; 6/19 Test #2221: roottest-root-treeformula-evolution-make ......... Passed 5.06 sec; Start 2222: roottest-root-treeformula-formulaio-make; 7/19 Test #2222: roottest-root-treeformula-formulaio-make ......... Passed 0.47 sec; Start 2223: roottest-root-treeformula-function-make; 8/19 Test #2223: roottest-root-treeformula-function-make .......... Passed 11.50 sec; Start 2224: roottest-root-treeformula-morrison-make; 9/19 Test #2224: roottest-root-treeformula-morr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1252919323:368,optimiz,optimization,368,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1252919323,2,['optimiz'],['optimization']
Performance,"> Certainly - but the perf impact we're concerned about is the `if` in the case where no diagnostic is emitted, not the subsequent warning. Ok, I see. Probably it doesn't make a difference performance-wise, but there are functions to calculate what the next available float value is:; `https://en.cppreference.com/w/cpp/numeric/math/nextafter`. Side note: we are already losing some performance in TH1I by checking for overflow, but not for TH1F. See:; ```; void TH1I::AddBinContent(Int_t bin, Double_t w); {; Long64_t newval = fArray[bin] + Long64_t(w);; if (newval > -INT_MAX && newval < INT_MAX) {fArray[bin] = Int_t(newval); return;}; if (newval < -INT_MAX) fArray[bin] = -INT_MAX;; if (newval > INT_MAX) fArray[bin] = INT_MAX;; }; ```. vs. ```; void TH1F::AddBinContent(Int_t bin, Double_t w); {fArray[bin] += Float_t (w);}; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-800451031:189,perform,performance-wise,189,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-800451031,2,['perform'],"['performance', 'performance-wise']"
Performance,"> Could `gSystem->Load(""..."")` be used... Could libPyROOT be the unlinked one you load from Python, and libPyROOT37, etc. be ones you load from ROOT and are linked to a particular Python? Then the ""hacky"" part would just be replacing a request to load libPyROOT with the largest available libPyROOTXX.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396#issuecomment-462755612:18,Load,Load,18,https://root.cern,https://github.com/root-project/root/pull/3396#issuecomment-462755612,4,"['Load', 'load']","['Load', 'load']"
Performance,"> Could it be related to empty base class optimization, or in this case the lack thereof due to multiple inheritance? But in this case, why is the padding missing for `std::variant<X>`, with `struct X {int i; bool b;};`?. So it turns out this is due to EBCO, or rather its non-happening: The reason is that both `std::variant` and `std::optional` inherit from `__sfinae_ctor_base` and `__sfinae_assign_base` and EBCO is not allowed to optimize two empty types at the same offset. That's why the inner type has to have at least one byte of padding, which increases to 4 bytes offset due to alignment. A simplified example is; ```c++; class Empty {};; class Inner : private Empty {; int i;; };; class Outer1 {; Inner i;; };; class Outer2 : private Empty {; Inner i;; };. static_assert(sizeof(Outer1) == 4);; static_assert(sizeof(Outer2) == 8);; ```; (https://godbolt.org/z/6dGdTK6ha) where `Outer2` mimics the case of `std::variant<std::optional<...>>`. Naturally, `struct X` on the other hand does not inherit from the same empty base classes and doesn't need the padding. The problem for RNTuple code is that this can happen for other STL (value) containers as well; we should probably check `std::pair`, `std::tuple` and maybe also maps (not familiar with the implementation). `std::vector`s should be fine because we only need to locate the pointer. (Edit: after further investigation, it appears that this problem is specific to the combination of `std::variant` and `std::optional` that are the only ones using the `__sfinae_*` base classes). ~(FWIW I will also report this to the libc++ developers; they can't do much about it without breaking the ABI, but at least I want to make them aware of this inefficiency in the implementation.)~ (edit: does a `std::variant<std::optional<...>>` actually make much sense?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15534#issuecomment-2133063596:42,optimiz,optimization,42,https://root.cern,https://github.com/root-project/root/issues/15534#issuecomment-2133063596,4,['optimiz'],"['optimization', 'optimize']"
Performance,"> Could you post performance numbers before and after that change? I am interested in how much that affects single line statements as well as a 1000 line code snippet. Did you see the numbers posted initially and just above last week? I think they cover the most relevant cases, including an instantiation of a a full `ROOT::RDataFrame`. And all examples where Clings is spending most of the time in the passes themselves don't really change, it's just how they are called...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1914198895:17,perform,performance,17,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1914198895,1,['perform'],['performance']
Performance,> Did you make any performance studies?. I wanted to see with rootbench. I did a simple `root hsimple.C` comparison where I neither expected nor saw noticeable differences.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8804#issuecomment-893758696:19,perform,performance,19,https://root.cern,https://github.com/root-project/root/pull/8804#issuecomment-893758696,2,['perform'],['performance']
Performance,> Do we have an idea of what the performance numbers are after landing this PR?. I sent it to you privately on mattermost earlier,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13133#issuecomment-2010091566:33,perform,performance,33,https://root.cern,https://github.com/root-project/root/pull/13133#issuecomment-2010091566,1,['perform'],['performance']
Performance,"> Do we intent on allowing the user to elect whether to store the data in big-endian or little-endian order (i.e. in case they want to optmized read performance on big-endian platforms)?. AFAICT, not now, but we might have such column types in the future. . > What do you mean by ""inherently"" here? And what are the columns are not in that category?. I have fixed the sentence; it was meant to say ""as per the v1 specification"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10402#issuecomment-1099667069:149,perform,performance,149,https://root.cern,https://github.com/root-project/root/pull/10402#issuecomment-1099667069,1,['perform'],['performance']
Performance,> Do you have a standalone example where this happens that does not involve the entire Celeritas code base?. No and it seemed like the number of libraries and/or code size mattered. > Both of them load just fine in a PowerPC build of ROOT. Do you mean both the `older` libceleritas_root.so and the new one or something else?. > Both of them load just fine in a PowerPC build of ROOT. If you can not reproduce the problem with the older library and with your PowerPC then we need compare more carefully the hardware/OS you have and the one @sethrj is using (part of the Summit HPC).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1079012395:197,load,load,197,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1079012395,2,['load'],['load']
Performance,"> Do you see a measurable build time reduction?. I do not think that performance plays big role here. . > so we'll need more convincing arguments than usually. The only argument here - sanitise code and include that one really using. . As a compromise - we can add special define into RConfig.h which let switch on/off such convenience includes. Now there are several places: . * TDirectory.h, ; * TVirtualPad.h (where TVirtualX.h was removed); * TGWindow.h (also TVirtualX.h was removed); * TROOT.h (I removed TSystem.h). There are other candidates where such ifdef can be used.; And at any time we could decide that should be default value for such `define`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5123#issuecomment-597504360:69,perform,performance,69,https://root.cern,https://github.com/root-project/root/pull/5123#issuecomment-597504360,1,['perform'],['performance']
Performance,"> Does this also fix cling with devtoolset?. No. > Or could a similar approach be used? (I forgot the exact library name that provides the extra symbols.). Not quite, for that we actually have to load the full static library and stuff it into a `StaticLibraryDefinitionGenerator`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13286#issuecomment-1645258281:196,load,load,196,https://root.cern,https://github.com/root-project/root/pull/13286#issuecomment-1645258281,1,['load'],['load']
Performance,"> Especially those https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/108798/testReport/projectroot.tree.treeplayer/test/gtest_tree_treeplayer_test_treeprocessormt_remotefiles/ and friends seem relevant. These look similar to something that I addressed in the past, that currently is taken care of with https://github.com/root-project/root/blob/master/cmake/modules/XROOTDApplePostInstall.cmake . I tried to look for the messages from that script in the logs of the build (e.g. ""Adjusting LC_RPATH variable of XRootD libraries in ${install_libdir}"" ) but there was none so maybe that's weird. That being said, in this particular case the error is that `libNetxNG.6.25.01.so` doesn't find the reference of `@rpath/libXrdUtils.3.dylib` to load, whereas in the past the issue was that all `libXrD*` libraries couldn't load other xrootd libs in the same install folder. So, possibly, it's the RPATH of `libNetxNG` that should be changed in this case",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7335#issuecomment-790698646:759,load,load,759,https://root.cern,https://github.com/root-project/root/pull/7335#issuecomment-790698646,2,['load'],['load']
Performance,"> Even-though this might be true, the C++ standard explicit says that it is undefined behavior to read a value concurrently with an update with any explicit synchronization mechanism (for example std::atomic). In practice, this means that the same 'happenstance' you describe might not be true on other platforms. Furthermore the compiler is also allowed to re-order code in 'surprising ways' that would thwart/foil the assumption on the happenstance you describe.; > ; > Thus our policy, consistent with the standard is that if a value can be updated while being read, it either must be an atomic or both the read and write must be protected by a lock. [This is not meant to preclude any other means of synchronization to achieve the same goal]. Yes, you are right. I will redo the changes while also making them thread-safe. On ARM a 64bit store can use more than one instruction, actually. I will also add comments explaining the code, I agree it's a bit confusing at the moment.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/957#issuecomment-327844814:111,concurren,concurrently,111,https://root.cern,https://github.com/root-project/root/pull/957#issuecomment-327844814,1,['concurren'],['concurrently']
Performance,"> Fixed pretty-printing, remaining issues seem related to autoloading:; > ; > ```; > IncrementalExecutor::executeFunction: symbol '_ZN4ROOT6VecOps15SmallVectorBaseIjE8grow_podEPvmm' unresolved while linking [cling interface function]!; > You are probably missing the definition of ROOT::VecOps::SmallVectorBase<unsigned int>::grow_pod(void*, unsigned long, unsigned long); > Maybe you need to load the corresponding shared library?; > ```; > ; > Not sure what's going on on Windows, will have to investigate. Could be due to an an inline function?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-815675983:393,load,load,393,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-815675983,1,['load'],['load']
Performance,"> For the `TObject` documentation I would add something along the line of:; > ; > ```; > Classes derived from `TObject` can not use the `= default` syntax for their constructor as some compilers implement optimizations that prevents the `TObject::kIsOnHeap` detection mechanism from working properly.; > ```. Can we move this into another PR? (I would suggest you opening it), because it's still not clear whether the main target of the current PR is actually desired or not. And TBH, I don't have the resources to perform a proper benchmark, nor do I have good other arguments why the proposed style is better (for example more readable, more maintainable, etc).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15469#issuecomment-2151703325:205,optimiz,optimizations,205,https://root.cern,https://github.com/root-project/root/pull/15469#issuecomment-2151703325,4,"['optimiz', 'perform']","['optimizations', 'perform']"
Performance,"> For the record, the new top offender is actually findOrCreateModule.; > ; > ![image](https://user-images.githubusercontent.com/10544/267616262-3be43a68-6a43-47f3-b81e-9d97ebcfae44.png). That's probably the loading of module `std.pcm`...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1718040163:208,load,loading,208,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1718040163,1,['load'],['loading']
Performance,"> From the snippet added above:. So we see that the list of data member is empty but the `StreamerInfo` is correct. This is the intended state of an auto-generated `TClass` for `std::pair` without its information loaded in the interpreter (that loading is more likely to have happened with module enabled). So technically the issue is that the test is too stringent and need to be changed ... However the code that follow may actually rely on the data member information, if it does then it also needs to be updated to use the `TStreamerInfo` information instead.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14084#issuecomment-1821595350:213,load,loaded,213,https://root.cern,https://github.com/root-project/root/issues/14084#issuecomment-1821595350,2,['load'],"['loaded', 'loading']"
Performance,"> Good job @devajithvs . I am in favour of merging this PR but before doing so could you please check that we do not experience performance regressions of any sort, for example:; > ; > * max RSS and walltime to boot root `root -b -q`; > ; > * max RSS and walltime to minimal root use `root -b -q -e ""ROOT::RDataFrame(8)""`; > ; > * max RSS and walltime to boot PyROOT `python -c ""import ROOT""; > ; > * max RSS and walltime for minimal PyROOT use `python -c ""import ROOT; ROOT.RDataFrame(8)""; > ; > ; > Cheers, D. Current master branch:; ```bash; $ /usr/bin/ti/usr/bin/time -v root/builddir/bin/root -b -q; ...; 	Command being timed: ""root/builddir/bin/root -b -q""; 	User time (seconds): 0.08; 	System time (seconds): 0.07; 	Percent of CPU this job got: 98%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.16; 	...; 	Maximum resident set size (kbytes): 205412; ...; ```. ```bash; $ /usr/bin/time -v root/builddir/bin/root -b -q -e ""ROOT::RDataFrame(8)""; ...; (ROOT::RDataFrame) An empty data frame that will create 8 entries; ...; 	Command being timed: ""root/builddir/bin/root -b -q -e ROOT::RDataFrame(8)""; 	User time (seconds): 0.23; 	System time (seconds): 0.13; 	Percent of CPU this job got: 98%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.38; 	...; 	Maximum resident set size (kbytes): 298432; ...; ```. ```bash; $ /usr/bin/time -v python3 -c ""import ROOT"". 	User time (seconds): 0.69; 	System time (seconds): 0.19; 	Percent of CPU this job got: 100%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:00.88; 	...; 	Maximum resident set size (kbytes): 493440; 	...; ```. ```bash; $ /usr/bin/time -v python3 -c ""import ROOT; ROOT.RDataFrame(8)"". 	User time (seconds): 0.96; 	System time (seconds): 0.21; 	Percent of CPU this job got: 98%; 	Elapsed (wall clock) time (h:mm:ss or m:ss): 0:01.18; 	...; 	Maximum resident set size (kbytes): 553892; 	...; ```. With new passmanager:. ```bash; $ /usr/bin/time -v root/newpassmanager/bin/root -b -q; ...; 	Command being timed: ""root/newpassmanage",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14267#issuecomment-1909867628:128,perform,performance,128,https://root.cern,https://github.com/root-project/root/pull/14267#issuecomment-1909867628,1,['perform'],['performance']
Performance,"> Guilherme tells me that it's actually TChain that strips the file:// from the filename. @pcanal could it not do that? smile. The first call to `TFile::Open` happens here:; ```; #0 0x00007ffff580b7c0 in TFile::Open(char const*, char const*, char const*, int, int)@plt (); from libTree.so; #1 0x00007ffff5856d3a in TChain::LoadTree (this=0x1027b50, entry=0) at core/base/inc/TString.h:244; #2 0x00007ffff58545d2 in TChain::GetListOfBranches (this=0x1027b50) at tree/tree/src/TChain.cxx:1116; #3 0x00007ffff3ee03a6 in (anonymous namespace)::GetBranchNamesImpl (t=..., bNamesReg=std::set with 0 elements, ; bNames=std::vector of length 0, capacity 0, analysedTrees=std::set with 1 element = {...}, friendName="""", ; allowDuplicates=true) at tree/dataframe/src/RLoopManager.cxx:142; #4 0x00007ffff3ee0e7c in ROOT::Internal::RDF::GetBranchNames[abi:cxx11](TTree&, bool) (t=..., ; allowDuplicates=<optimized out>) at tree/dataframe/src/RLoopManager.cxx:341; #5 0x00007ffff3ee0f1d in ROOT::Detail::RDF::RLoopManager::GetBranchNames[abi:cxx11]() (this=0x16502a0); at tree/dataframe/src/RLoopManager.cxx:1015; #6 0x000000000046121e in ROOT::RDF::RInterface<ROOT::Detail::RDF::RLoopManager, void>::Filter(std::basic_string_view<char, std::char_traits<char> >, std::basic_string_view<char, std::char_traits<char> >) (); #7 0x000000000045e376 in df102_NanoAODDimuonAnalysis(char const*) (); #8 0x000000000045eb60 in main (); ```; by this time, the `file://` prefix is already stripped.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1297140083:323,Load,LoadTree,323,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1297140083,2,"['Load', 'optimiz']","['LoadTree', 'optimized']"
Performance,"> Hi @AaronBallman !; > ; > > it isn't reliably maintained and bit rots nearly continually. If that wasn't the case, I'd have no concerns about continuing to carry the functionality in the compiler.; > ; > I understand that perception, but given this, do you prefer to improve the AST printing, remove it, or keep it ""rotten"" as you put it? We have significant coverage of it, and we can witness that it's doing a good job. I have two answers (sorry!). My preference is for someone to step up and maintain it because, as you point out, it can perform useful work that people are already using today and so it should be actively maintained. However, I don't have the time to commit to it myself, and code reviewers have never traditionally required patch authors to spend much effort on -ast-print support, so this maintenance isn't likely to happen without someone dedicating effort to it. If nobody steps up to maintain it, my personal preference would be to remove the feature, but it'd definitely require a community RFC to do so -- that gives everyone an opportunity to speak up about why it's critical to keep it (and hopefully drums up a volunteer to maintain it with more regularity). It's not at all clear to me how the community would react to such an RFC, and it's also not clear to me whether we'd need to do OTHER work to prep for removing the functionality (e.g., if ObjC modernization rewriting relies on -ast-print being ""good enough"", we might want to also rip out ObjC moderanization rewriting at the same time, which is another RFC, and so on). FWIW, I'd be happy to be a reviewer for any reviews maintaining or improving `-ast-print` behavior in community (not trying to apply pressure!). > We'd be happy to keep this change minimal, e.g. escape only what needs to be escaped rather than going all in on showing the original spelling of the source code. I think for something that minimal, the cost / benefit ration would be about right. That's just my opinion; your opinion is what",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10830#issuecomment-1171474521:543,perform,perform,543,https://root.cern,https://github.com/root-project/root/pull/10830#issuecomment-1171474521,2,['perform'],['perform']
Performance,"> Hi @ShamrockLee , specifying a binning for the histogram is often better than disabling multi-threading (which potentially implies a large performance decrease), but yes that also works :D; > ; > The fundamental problem here is the lack of a good multi-thread auto-binning algorithm that does not require synchronization between threads (which we want to avoid at all costs in order to scale well to large amounts of cores and large amounts of histograms produced). Hi @eguiraud , thanks for replying.; I do specify a binning for every histogram being generated. However, the bin number is about ~20000 each histogram in order to guarantee there's no unexpected overflow/underflow. Maybe I should lower it a bit, but it would still be nice if there could be a way to control the memory usage other than disabling the multi-threading totally.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-937768950:90,multi-thread,multi-threading,90,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-937768950,4,"['multi-thread', 'perform']","['multi-thread', 'multi-threading', 'performance']"
Performance,"> Hi @smuzaffar , looking at the CMSSW tests, it seems this patch worked for CMS: could you confirm that?. Yes @dpiparo , this worked for CMS too. Local tests also show that with this update CMSSW/ROOT symbols mentioned in https://github.com/cms-sw/cmssw/issues/43077#issuecomment-1867640888 also do not trigger loading of all shared libs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1870070172:312,load,loading,312,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1870070172,1,['load'],['loading']
Performance,"> Hi Stephan, thanks for taking a look!; > ; > Indeed, I assume that for RooArgSet there are much more of these pointer comparisons around. That's why I only cover RooDataSet here, motivated by this strange increase in memory that is observed then using the memory pool for RooDataSet. So far, I have not seen any problems arising from the memory pool for RooArgSet. No, I don't know. I only noticed that when disabling the mempool for RooArg**Set**, *some* test *rarely* fail on *some* machines in the nightlies. It's an evil Heisenbug because it only shows up when the OS decides that it's now time to recycle a pointer. That's when I stopped and went back to the memory pool.; > ; > Do you happen to know other locations where things are cached based on the RooDataSet?; No, sorry. You can only really now with a static code analyser or clang plugin.; > ; > I think I can fix the counter initialization problem by putting them in the .cxx sources of the class that uses the counter.; > ; I think so, too. > About the multi-threading problem: it's a very good point! But making the counter a `std::atomic` should solve this, right?; > ; Yes, when it becomes desirable, you can do that. There's anyway many other thread-unsafe things that need fixing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8324#issuecomment-859719866:741,cache,cached,741,https://root.cern,https://github.com/root-project/root/pull/8324#issuecomment-859719866,2,"['cache', 'multi-thread']","['cached', 'multi-threading']"
Performance,"> Hi,; > The PR looks good to me.; > Just a couple of small comments:; > ; > * I don't like that there is now an Initialisation.cxx file in roofitcore and one in batchcompute. Maybe it is better having different names; > * what was the reasoning for the change of name from the library from libRooFitCompute_* to libRooBatchCompute* ? The old name looks nicer to me. roofitcore/Initialisation used to be roofitcore/RooBanner.cxx and Stephan converted it so that he could add the library loading code. This code is now moved, but I still believe it's a good idea to stay Initialisation.cxx in case there's a need in the future for other init routines to be added. (static functions shouldn't exist in random files but only in a specified Initialisation.cxx file). batchcompute/Initialisation.cxx for the moment only inspects the hardware and loads the correct version of the library, so it is again initializing... . I find RooBatchCompute more specific. The library contains all the utilities for making batch computations. RooFit can work without it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6968#issuecomment-754544065:487,load,loading,487,https://root.cern,https://github.com/root-project/root/pull/6968#issuecomment-754544065,2,['load'],"['loading', 'loads']"
Performance,> How about remembering the number of methods in TClassRef? I don't know if this will solve the performance problem but at least we don't have to iterate on same classes. I am a bit lost .... What performance problem are we addressing here? [i.e. as far as I can tell most time the number of methods is accessed this is followed by an iteration over all methods]. Can you be more specific on which (part of which) benchmark you are optimizing and how much this change would improve the run-time of this benchmark?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1743#issuecomment-373170242:96,perform,performance,96,https://root.cern,https://github.com/root-project/root/pull/1743#issuecomment-373170242,3,"['optimiz', 'perform']","['optimizing', 'performance']"
Performance,"> How does the new cache handle the typical cache of a file being edited and then reloaded?. While being loaded by the same path and when being matched against itself, it should hit the strncmp logic and exit the function. The race condition causing false positives or false negatives can only be triggered by accessing via different paths to what was or should now be the same file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9010#issuecomment-921304029:19,cache,cache,19,https://root.cern,https://github.com/root-project/root/pull/9010#issuecomment-921304029,4,"['cache', 'load', 'race condition']","['cache', 'loaded', 'race condition']"
Performance,"> However it is a bit surprising it also affects the master to the point that the timing are similar (actually it is a bit too close to make fully sense so I think we are missing something). I'm actually not that surprised: even with the queuing, some thread has to merge the resulting buffers while holding a lock. The queuing mechanism just allows that to be spread out a bit more, at the expense of some overhead to prepare the buffer and not merging from the in-memory `TTree`. > Another surprising results is the fact that the case for 10 columns does not scale that well. Yes, it is surprising. On the other hand, this is just filling the same `long` ""event id"" into many branches, so the parallel part of the application is quite negligible. In any case, these are the results that I have so far, and for me they show convincingly that this PR doesn't make things worse and certainly improves memory usage and even scalability for some cases. If you have other benchmarks that show the queuing mechanism improving scalability, I'm happy to run them but so far I'm not aware of any.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1813955876:922,scalab,scalability,922,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1813955876,2,['scalab'],['scalability']
Performance,"> I _installed_ ROOT on Fedora 29 nodes to show the problem that roottest is picking it up instead of the ROOT being tested. > > I am confused, it is because you uninstalled root binaries at fedora node?. I see, thanks, I will submit separate fix for it. So if I understand correctly, root binaries is not anymore installed on this node, and I need to clean cache (build directory)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3940#issuecomment-502763394:358,cache,cache,358,https://root.cern,https://github.com/root-project/root/pull/3940#issuecomment-502763394,1,['cache'],['cache']
Performance,> I am not sure if we should touch this code. I did not look into but I thought you said this would be blocking progress in TBufferText and TBufferFile optimizations.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1817#issuecomment-378674506:152,optimiz,optimizations,152,https://root.cern,https://github.com/root-project/root/pull/1817#issuecomment-378674506,1,['optimiz'],['optimizations']
Performance,> I did not look into but I thought you said this would be blocking progress in TBufferText and TBufferFile optimizations. Now I check it more precisely - TBufferSQL cannot support objects or even simple TString in TBasketSQL. Therefore it can be used even when we change streamer actions.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1817#issuecomment-378675077:108,optimiz,optimizations,108,https://root.cern,https://github.com/root-project/root/pull/1817#issuecomment-378675077,2,['optimiz'],['optimizations']
Performance,"> I don't when it was restricted to single test but the original intent was to apply the load/unload to all the clang test to have as ""complete"" of a coverage as possible:; > ; > ```; > commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac; > Add a test that loads every clang test and unloads it; > ```. That would be commit 2a420c374054d51441c601d54d13a6d73fc8814e (maybe by accident), after commit 180be8392b9fae67a6d99cc5c35de3dde8aea71d noted that the ""test is a no-op in CMake"".",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16258#issuecomment-2306437590:89,load,load,89,https://root.cern,https://github.com/root-project/root/pull/16258#issuecomment-2306437590,2,['load'],"['load', 'loads']"
Performance,"> I find doxygen really slow. I tried to optimize that and found many complaints (https://stackoverflow.com/questions/28628348/why-does-doxygen-always-reprocess-every-file). Maybe THtml still _could_ be useful, at least partially.; > UPD: I opened a feature request for `doxygen`. Yes it takes time to generate the full documentation. But ROOT is huge. I never do it fully. Only the nightlies build it completely regularly. It takes several hours. As said [here](https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation) look at the list of folders scanned to build the reference guide. It is quite big. When I modify a piece of documentation I shorten this list to generate only what I am working on.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7295#issuecomment-787906738:41,optimiz,optimize,41,https://root.cern,https://github.com/root-project/root/issues/7295#issuecomment-787906738,2,['optimiz'],['optimize']
Performance,"> I guess if libTree_is_loaded would mean calling TInterpreter::IsLibraryLoaded, which might involve a fair amount of string comparisons. It can be reduced to a Hash lookup:. ```; auto islibTreeLoaded = TClassTable::GetDict(""TTree"") != null;; ```. (and once the answer is true, you can cache the result).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2799#issuecomment-431291042:286,cache,cache,286,https://root.cern,https://github.com/root-project/root/pull/2799#issuecomment-431291042,1,['cache'],['cache']
Performance,> I guessed it means fMethod already has list for methods. That is its purpose but the content is brought it only on demand (i.e. if the user ask for the list to be loaded).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1743#issuecomment-373069875:165,load,loaded,165,https://root.cern,https://github.com/root-project/root/pull/1743#issuecomment-373069875,1,['load'],['loaded']
Performance,"> I have both Qt4 and Qt5 installed on my computer, and I'm using -Dqt=ON -Dqtgsi=ON -Dqt5web=ON. Now should be solved. ; When loading qt4, it adds additional rules and one have to set property for generated files, which I not aware of at all.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1623#issuecomment-367675925:127,load,loading,127,https://root.cern,https://github.com/root-project/root/pull/1623#issuecomment-367675925,1,['load'],['loading']
Performance,"> I have not thoroughly tested it but LGTM. Please just run the configuration step and let us know if it fails for you. As mentioned in the description, it works for me with many concurrent versions of clang installed in the system. However, I have vanilla clang only, so the build step fails due to API incompatibilities from ROOT's patches. > PS: Consider improving the commit log. Sure, I will add some explanation text.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3807#issuecomment-492090162:179,concurren,concurrent,179,https://root.cern,https://github.com/root-project/root/pull/3807#issuecomment-492090162,1,['concurren'],['concurrent']
Performance,"> I just dislike the submission computer having to open all files. Distributed RDF employs yet another strategy that doesn't require opening all files before submitting data processing tasks but potentially produces more unbalanced tasks or some empty tasks (it's unclear to me if that has any visible performance impact or not). For local, multi-thread RDF, I guess we can either do the same that distributed RDF does or come up with a way to schedule this graph of tasks efficiently (with data processing task `#N` depending on ttree-entry-retrieval tasks `#1`, `#2`, ..., `#N`), e.g. via TBB task graphs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190#issuecomment-1413975769:302,perform,performance,302,https://root.cern,https://github.com/root-project/root/issues/12190#issuecomment-1413975769,2,"['multi-thread', 'perform']","['multi-thread', 'performance']"
Performance,"> I just took a quick look on this. The problems stated now is:; > ; > 1. Clang will load modules eagerly. That's what our system does. We want to preload all modules as if we have something like `import *`. > ; > 2. The name lookup is not so cheap. The name lookup is cheap per se. However, the module load is not a no-op due to the number of things we still eagerly deserialize upon load. > ; > 3. We will load a lot of source location informations. Yes, that is right. The problem comes just from a single [line](https://github.com/llvm/llvm-project/blob/5bf142749e2ee1f7d60e728bf7ac4262e1c22da0/clang/lib/Serialization/ASTReader.cpp#L3489) in clang. However fixing this would be very hard and might need to rework the source location management. That will be probably a good thing for clang since it is a bit inefficient how. We might be able to use some sort of binary tree to model them. In fact the other issue might be easier to fix and less intrusive. That is, the way we load types eagerly [here](https://github.com/llvm/llvm-project/blob/5bf142749e2ee1f7d60e728bf7ac4262e1c22da0/clang/lib/Serialization/ASTReader.cpp#L3216). The third major issue which is solved for us but not yet upstream is https://reviews.llvm.org/D41416 Some polishing is done by @hahnjo in root-project/root#13139. > ; > ; > Do I understand right? Then we can try to add these things separately to llvm issues pages. Then we can try to work on then separately. I am not sure if issues will help but we can add them if you prefer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1617499424:85,load,load,85,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1617499424,5,['load'],['load']
Performance,"> I noticed that in the logs of the CI runs of this particular PR, The two relevant tutorials are being run 3 times on the windows nodes, e.g. searching for; > ; > ```; > Start 959: tutorial-v7-concurrentfill.cxx; > ```; > ; > Returns 3 results. Now this is extremely weird, but I could not see it happening in any other PR or in the nightlies. I even triggered a [CI run](https://github.com/root-project/root/pull/14481) to print the target tutorials created at configuration time and that still returned only 1 target tutorial. Running 3 times is intentional and because of; https://github.com/root-project/root/blob/aea6318989b0e4da60e48226c379d202ab51f691/.github/workflows/root-ci-config/build_root.py#L128-L130",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14472#issuecomment-1916208136:194,concurren,concurrentfill,194,https://root.cern,https://github.com/root-project/root/pull/14472#issuecomment-1916208136,1,['concurren'],['concurrentfill']
Performance,"> I profiled the CMS toy fit example:; > ; > * [with the mempool](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new); > * [without the mempool](https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_2_new_nomempool); > ; > Actually it runs about 20 % faster without the memory pool. Is that expected? Can it be a problem that I'm profiling a debug build?. Yes, totally @guitargeek. The mempool alone already checks that you don't do double deletes when in debug mode.; There's *a lot* of other checks (e.g. checking the cached result against one that's force-evaluated on the fly) when you are in debug mode.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7904#issuecomment-822222511:579,cache,cached,579,https://root.cern,https://github.com/root-project/root/pull/7904#issuecomment-822222511,1,['cache'],['cached']
Performance,> I propose we close this after disabling optimizations in the graphics code. see #9467,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9312#issuecomment-997887337:42,optimiz,optimizations,42,https://root.cern,https://github.com/root-project/root/issues/9312#issuecomment-997887337,1,['optimiz'],['optimizations']
Performance,"> I see lots of non-explicit constructors, non-explicit conversion operators (to std::string_view and std::string) in the header file . They (at least a wide majority of them) are necessary to support existing code which rely on implicit conversion from `TString` to `const char*` and `std::string_view` (etc.). > since the compiler can use such constructors to perform conversions in order to be able to rewrite comparisons. Isn't that solved/avoided by having a complete set of explicit comparison operator?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12525#issuecomment-1479677945:362,perform,perform,362,https://root.cern,https://github.com/root-project/root/pull/12525#issuecomment-1479677945,1,['perform'],['perform']
Performance,"> I see many `NumberOfImages*.dat` and `stdout*.dat` files in the build directory. That's new. Not doing as before ? why are these file unique for a pid ?. Because I added multi-threading. If two process write at the same time to NumberOfImages.dat, you will get a corrupted number. So you need unique filenames for each thread.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077398011:172,multi-thread,multi-threading,172,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077398011,1,['multi-thread'],['multi-threading']
Performance,"> I think TResultHandle would suffer from the same problems as TResultProxy: the name is too generic, the average physicist will not know how to use it, it's not clear if I can make a std::vector of those, default construct one, assign one, copy.... One could give the exact same argument against TResultPtr ;) .... One difference with a pointer is the life-time of the pointee. > the average physicist will not know how to use it,. A lot of the frameworks have the concept of 'Handle' already to indicate this kind of delay-loaded accessor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1855#issuecomment-381102689:525,load,loaded,525,https://root.cern,https://github.com/root-project/root/pull/1855#issuecomment-381102689,2,['load'],['loaded']
Performance,"> I think it might be hard to come up with a proper heuristic. For example is the threshold ""per dictionary"" (in which case it might be achiveable) or is it an accumulative cost, i.e. per whole set of library (in which case it is impossible) and is it lightly or highly dependent of the fraction of the generated dicitonary entries and/or header that are actually used?; > ; > > Users do not use make project; > ; > MakeProject is irrelevant here. It is ""only"" just to quickly produce an emulation of the ""Experiment Framework"" type of problem size. The relevant part is (as you noted) the amount of classes needed for I/O. One part that example does not emulate is the (high) number of libraries and dictionary. So _yes_ this type of problem is extremely relevant and no it is actually not directly represented in roottest. (and it is unknown which fraction of the roottests are exercising this code path (i.e. not only loading but also using the rootpcms). In principle the new implementation due to modules should allow us to easily turn off rootpcms and test in the cmssw context. Then I guess the results should be more reliable. > ; > Also I suppose there are ways to reduce the up-front cost of the rootpcms (for example delaying their loading until needed). That's what I am after. Do you have something in particular in mind?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-659503189:921,load,loading,921,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-659503189,2,['load'],['loading']
Performance,"> I think that is sufficient efficient evidence albeit there is one more simple test to do, is to introduce a synchronization point every once in a while to insure that the queue is actually filled/used and then later emptied. Right; for this I went back to the variant of the benchmark that has perfectly balanced time per event and fills identical data into 10 branches. Then I added barriers around the call to `TBufferMergerFile::Write()` to make sure there is as much synchronization and contention as possible. With that, only the run with 64 threads on `/data/ssdext4` is measurably slower (4m16s instead of 3m57s, 9%), lower numbers of threads show very similar performance within noise. However, I then realized that the second barrier after the call to `Write()` is actually not necessary since we want contention when going into the merging / queuing, but the second barrier prevents threads that exit merging early from making further progress. With *only one barrier* before the call to `TBufferMergerFile::Write()` the version without any queuing is consistently faster at higher thread counts. I think this supports my hypothesis that things will balance out automagically. Finally, on `/data/hddext4/` I cannot measure any difference at all outside of noise.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14034#issuecomment-1823482567:173,queue,queue,173,https://root.cern,https://github.com/root-project/root/pull/14034#issuecomment-1823482567,4,"['perform', 'queue']","['performance', 'queue']"
Performance,"> I think the error is due to the fact that there is no VDT on Windows. Did you try without VDT on other platforms?. I don't think it's that. :thinking: `ROOTConfig.cmake` will not look for VDT in this PR's setup if VDT was not used in the build. I instead believe that I was just trying to set the `CMAKE_PREFIX_PATH` environment variable incorrectly in the Windows shell. Since Windows provides a few different shells, each of which comes with a slightly different formalism, in the end I reverted back to passing `CMAKE_PREFIX_PATH` as a cache variable to that test. On Linux that works. Hopefully it will work on Windows too. I tried to set up a build on Windows on my laptop, but when after about 20 minutes it was still failing in one of the externals, I just gave up. :frowning:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11844#issuecomment-1342794108:541,cache,cache,541,https://root.cern,https://github.com/root-project/root/pull/11844#issuecomment-1342794108,1,['cache'],['cache']
Performance,"> I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded. Actually it does say it knows it:; ```; ROOT_prompt_6:1:16: error: variable has incomplete type 'SiStripCluster'; SiStripCluster obj;; ^; libStrip dictionary forward declarations' payload:5:132: note: forward declaration of 'SiStripCluster'; ...__attribute__((annotate(""$clingAutoload$SiStripCluster.h""))) SiStripCluster;; ```; it even points to the expected rootmap-based forward declaration. What no longer works is the (redo of the) autoloading. . What is weird is that it does works without the ""moving function definition of IPruneTool"". I recommend that we start by understanding this behavior. First, when it works, does it work because the AutoLoading is redone or does it work because the unloading is not effective enough?. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-435078550:208,load,loaded,208,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-435078550,1,['load'],['loaded']
Performance,"> I think there is a pretty clear explanation where this comes from in the commit history. We could not load `gRandom`. That was with the very old dyld-based approach to loading symbols. This PR checks if the new approach has the same problem. Note that:; - We can still not reproduce the issue; - With this change, I got the following test failure on Windows (not tested in our CI):; ```; 988: Processing C:/Users/sftnight/git/master/tutorials/rcanvas/symlog.cxx...; 988: IncrementalExecutor::executeFunction: symbol '_imp_?gRandom@@3PAVTRandom@@A' unresolved while linking function '_GLOBAL__sub_I_cling_module_5'!; 988: You are probably missing the definition of _imp_?gRandom@@3PAVTRandom@@A; 988: Maybe you need to load the corresponding shared library?; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10330#issuecomment-1091405727:104,load,load,104,https://root.cern,https://github.com/root-project/root/pull/10330#issuecomment-1091405727,6,['load'],"['load', 'loading']"
Performance,"> I think this is good to go, thus added an approval - no need to spend tons of time to optimize a diagnostic ;). Just FYI, it's more, there *is* a functional change: missing headers that are in byproducts won't be forcefully added to the main PCM anymore.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12067#issuecomment-1398200005:88,optimiz,optimize,88,https://root.cern,https://github.com/root-project/root/pull/12067#issuecomment-1398200005,1,['optimiz'],['optimize']
Performance,"> I think we need to think about mapping and the view interface, which uses `RField<T>::Map()` where available. I'd be in favor of ignoring read callbacks for mapping. Mapping should be the interface to get the fastest possible performance. Of course, that would break views on simple types with read callback. One way to deal with it is to simply not allow creating a view on a field with a mappable type and a read callback. Good point; I agree on that :+1:. However, given that any `RField<T>` instance that has an on-disk field ID set (such as the one internally kept by `RNTupleView`) can be connected to a page source, additional bookkeeping is required somewhere else. (**EDIT:** see the pull request description - everything discussed there)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11731#issuecomment-1334547546:228,perform,performance,228,https://root.cern,https://github.com/root-project/root/pull/11731#issuecomment-1334547546,2,['perform'],['performance']
Performance,"> I thought prefetching was part of it, but apparently it is not. The names are really confusing ... sorry. * `SetCacheSize` enables/extend the `TTreeCache`, which 'real' job is to actually prefetch (early grab from disk) the compressed data. This is the tuning that control the size of the read from disk; * `SetClusterPrefetch` enables the early decompression of the baskets of the current cluster (whose compressed data is already in memory if used in conjunction with the `TTreeCache`). This affects performance *only* in conjunction with non-sequential use/load/read of the entries.; * `gEnv->SetValue(""TFile.AsyncPrefetching"", 1)`, in conjunction with a `TFileCacheRead` (for example the `TTreeCache`) will asynchronously grab early the compressed data of the 'next' cluster while the current cluster is being processed (i.e. is subject of `GetEntry`). This later setting might be of interest in your case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2407232434:504,perform,performance,504,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2407232434,2,"['load', 'perform']","['load', 'performance']"
Performance,"> I thought you wanted to support non-explicit linking, too. . Yes, true. But the explicit linking case is seemingly broken now. > we should just get all loaded libraries and append them. That is where we started a long time and ago and led to spurrious failures. For example:; ```; root; root [] .L A.C+; root [] .L B.C+; root [] .q; rm A.C A_C*; # User give up on A.C; root; root [] .L B.C+; // linking error complaining about A_C.so not found.; ```; > By symbol you mean clang::Decl?. Not sure. I meant that during parsing, 'missing' symbols provoke call to 'auto-parsing' mechanism that get info from the rootmap file (humm I realize that this is not necessary quite an accurate description :( ). > That is the power of the new dynamic loader. . It works solely if it is loaded though :). We do have users that use ACLiC to generate libraries (from a Makefile) to be used to link to a main executable.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-606092136:154,load,loaded,154,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-606092136,3,['load'],"['loaded', 'loader']"
Performance,"> I tried the route of ClassDefInline with poor results. . Rigth ... When not creating a dictionary, the information about data member, etc. has to come from the interpreter at run-time .. i.e. it needs to loads the definition .... So indeed if the goal is to keep this class declared only in a source file, this is not the solution.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13134#issuecomment-1638507751:206,load,loads,206,https://root.cern,https://github.com/root-project/root/pull/13134#issuecomment-1638507751,1,['load'],['loads']
Performance,"> I usually run startup time and hsimple for performance measurements. This is a good first step but it not sufficient to stress test the difference (Most of the libraries loaded in this case do not have a rdict.pcm, to stress test we need to test a variety of cases with large number of user libraries and classes). > Removing _rdict.pcm files is whole another story which atm we are not tackling. Fair enough. However before we can 'release' the module for user to start using we need to decided whether rootcling/genreflex will. a) generate both a pcm and a rdict.pcm; b) generate a file still named rdict.pcm that contains both the clang pcm and the rdict.pcm; c) generate a file with a new extension that contains both the clang pcm and the rdict.pcm; d) generate only the pcm (renaming it rdict.pcm) ; e) generate only the pcm (and drop usage of rdict.pcm). The reason we **need** to make a decision is because option a), c) and e) **requires** the user to update their build system to copy yet another file to their install lib directory [For **only** the libraries that have migrated to pcms] [On the other hand b) and d) only require adding an option to the rootcling/genreflex]. Cheers,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-435348431:45,perform,performance,45,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-435348431,2,"['load', 'perform']","['loaded', 'performance']"
Performance,> I was enabling SetClusterPrefetch as part of the attempt to reduce read_calls when processing our AODs. Apriori it does not intend have an effect on that. > Indeed I now notice that it's enough to simply do:. What is the change (increase of the cache size or explicit cache learning or both)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2406995100:247,cache,cache,247,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2406995100,4,['cache'],['cache']
Performance,"> I will provide you the output for ROOTDEBUG=7.; > ; > Could you elaborate a bit on the mmap?. The pcm files are ""mmapped"" when being opened. That practically uses some virtual memory with the promise it won't increase your rss, unless something is needed from that file. Here is how this is achieved: https://github.com/root-project/root/blob/6eb7f64bd7d93c492226b1a5ea5048a149814278/interpreter/llvm/src/tools/clang/lib/Serialization/ModuleManager.cpp#L216. I believe your issue is that due to some identifier lookup we start loading pcm files which have sections that require eager deserialization where the mmap manifests into a real rss increase. > I would expect that using MAP_SHARED would be enough of a workaround for our (ALICE) use case, because what is really killing us is the fact the memory is not shared among the many processes we have. Any reason why that cannot be done? Did I misunderstand something?. The reason is that the serialization in Clang has deficiencies and reads from disk when a pcm file is loaded. I've been hunting down these cases and sometimes we could avoid them. That's why I was looking for some output that could help us do that. That being said, we could make some effort to split the startup phase of ROOT into loading and initialization. Then we could move the registration of pcm files and setting up the ROOT's runtime as part of the initialization process but realistically, if you use ROOT for anything you'd probably need these both...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1591024599:529,load,loading,529,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1591024599,3,['load'],"['loaded', 'loading']"
Performance,"> I will try to get rid of ThreadFileMerger by just fusing its functionality into TFileMergeServer. At this point, I don't think that is necessary. That class is in one the use case (i.e. using a ROOT collection). So unless it is clear that replacing THashTable with an equivalent stl collection is much more performant, there is no need to waste time changing the code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/533#issuecomment-299450733:309,perform,performant,309,https://root.cern,https://github.com/root-project/root/pull/533#issuecomment-299450733,1,['perform'],['performant']
Performance,"> I would propose to change the title to ""[ci] Further speedup mac and linux builds by caching dependencies"". The word ""instead"" can be misleading. Our goal is to have feedback from the CI as soon as possible. Having several nodes, allows to scale horizontally. We are not increasing the number of nodes in the CI because we are lazy, we just need many nodes AND fast CI, e.g. through caches or quicker tests :). The proposed rename works for me. It's not only for mac and linux, it covers any platform.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14987#issuecomment-2001954686:385,cache,caches,385,https://root.cern,https://github.com/root-project/root/issues/14987#issuecomment-2001954686,2,['cache'],['caches']
Performance,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > ; > Independently, was `.L` not used for loading libraries?. Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6606#issuecomment-808855465:368,load,loading,368,https://root.cern,https://github.com/root-project/root/pull/6606#issuecomment-808855465,2,['load'],"['loaded', 'loading']"
Performance,"> I'm not quite convinced but I wouldn't object either. This is not a performance-critical method but it's one used for reporting. I think having it return a `const char *` makes its use in many cases a little more cumbersome (convert to `std::string` first). Being this a public API we cannot know a priori whether it's gonna be performance-critical for an application or not, so in my opinion we should default to giving the user the most flexibility. I don't think it gets particularly more cumbersome to use, because yes, in some cases it requires wrapping it in a `std::string` but in other cases it avoids calling `.c_str()`, so it kind of balances out (and in any case it's a trivial change to make).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16695#issuecomment-2419263518:70,perform,performance-critical,70,https://root.cern,https://github.com/root-project/root/pull/16695#issuecomment-2419263518,2,['perform'],['performance-critical']
Performance,"> I.e. it seems that we can not fork if any thread is doing anything else (because that something else might be taking any fundamental locks (malloc, ROOT, dlopen, etc...). Yep, which is why (as you quoted earlier):; > After a fork(2) in a multithreaded process returns in the child, the child should call only async-signal-safe functions (see signal-safety(7)) until such time as it calls execve(2) to execute a new program. ie, no locks and things like that. Now, we can guarantee for ROOT's own source code that we're not interacting with threads, in particular that the actions performed in the workers after `fork()` are safe, require no locks and don't result in calls to an external library. What we cannot guarantee is what libraries did before / during the `fork()` and what consequences this has for their `atexit` handlers.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-764936542:582,perform,performed,582,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-764936542,1,['perform'],['performed']
Performance,"> IIUC, ACLiC is kind of interpreting code before generating so files to get the list of libraries that need to be loaded beforehand by passing all rootmap files to rootcling, right? If so, maybe we can do the same with modules by interpreting code beforehand, get a callback from cling and make a list of dependency libraries. We can keep this list and load them just before loading hsimple_C.so?. Yes (where there later is simply changing the input and output of the rootcling invocation in CompileMacro, and tweaking rootcling to handle this new input/output). > Anyway, these discussions are addressed (or not addressed) in another PR. I want to revert ""not generating rootmapfiles"" patch for now. Fair enough :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2187#issuecomment-396920577:115,load,loaded,115,https://root.cern,https://github.com/root-project/root/pull/2187#issuecomment-396920577,6,['load'],"['load', 'loaded', 'loading']"
Performance,"> If I am not mistaken, a more up-to-date version of this file seems to be already part of `master`. Yes, could now drop the first commit. FWIW the PR is still in Draft mode because we want to solve the problem more fundamentally, by having a list of column ids cached in the field descriptor.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14366#issuecomment-1939258557:262,cache,cached,262,https://root.cern,https://github.com/root-project/root/pull/14366#issuecomment-1939258557,1,['cache'],['cached']
Performance,"> If RDF relies on the elements of a bulk of RVec being all consecutively in memory. It doesn't really, at the moment. Bulk RDF only expects the RVec objects in the bulk to be consecutive in memory, not their contents. But it's desirable that the elements be consecutive as well: in the future we would like to expose the flattened array elements to computation kernels for performance reasons.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13382#issuecomment-1662669363:374,perform,performance,374,https://root.cern,https://github.com/root-project/root/pull/13382#issuecomment-1662669363,1,['perform'],['performance']
Performance,"> If the incremental build downloaded from S3 is up to date the build purely relies on it. It then behaves as if it's just downloading, rebasing the PR and building.; > ; > If the existing artifact is not up to date, or it doesn't exist, the job first builds the target branch to populate S3 with the newer version, and then continues as usual. This only adds a few minutes to that run and then proceeding runs will behave like usual as the artifacts are now up to date again. We should always have an up-to-date build from `master`, so this shouldn't be a problem in practice. Plus it generates a race condition between the build on `master` and any PR build. > Consider a CI where PR builds don't upload, and you have a PR where the CMake options are changed. An existing build artifact for the new options doesn't exist so the first run will be from scratch and take ~40 minutes. An issue arises and the PR is gets a new commit, and a new job starts. This job will then also take ~40 minutes to complete because the previous commit didn't upload any clean artifacts to use. I'm probably missing the place where it downloads a previous PR build, I only see `download_latest`. And in any case, I would argue it is ok for a PR changing CMake options to take ~40 minutes on subsequent pushes (the initial push will take that long anyway, and even spend time on first building the base, see above). You really want that to build cleanly, ROOT's build system is not always the greatest on incremental builds...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12201#issuecomment-1415734845:598,race condition,race condition,598,https://root.cern,https://github.com/root-project/root/pull/12201#issuecomment-1415734845,1,['race condition'],['race condition']
Performance,"> If the question is if we have multiple duplication due to textual inclusion of header files we have almost none. We have worked very very hard to modularize things bottom up, including libc, libstdc++, libxml, boost, etc. Yes, this is our problem : (. > It feels feasible to me, since there is no need of any of these types unless they were needed. We could possibly store their hash and offset and deserialize them on demand. . I am still confused about the intention. How could you know the necessary types to be loaded ahead of time?. > I can open these issue reports. It would take me some time to put sufficient information to make them actionable though. Thank you for your time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1617565017:517,load,loaded,517,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1617565017,1,['load'],['loaded']
Performance,"> If this analysis is correct, then we already have potential deadlock problems, ... Indeed but the only we can really affect is the code that is intentionally (and necessarily) called during library loading. The rest (for better and worse) has to be left to the user (to avoid). > I'm not sure that there's any good way of addressing this short of having ROOT release the core mutex before calling dlopen. I don't think so either. The only way where we could have support this would be we could (and of course we can not :) ) enforce that all `dlopen` have to go through the ROOT wrapper for it. > We could add locking within TClassTable. . So I think this is the only choice ....",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11263#issuecomment-1232082088:200,load,loading,200,https://root.cern,https://github.com/root-project/root/pull/11263#issuecomment-1232082088,1,['load'],['loading']
Performance,"> If this was mostly for unloading, then the test failures are telling us we might need this for something else. Maybe, maybe not: lookup performs unloading, and these tests' missing symbols are typical examples for templates instantiated during lookups.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10696#issuecomment-1146253227:138,perform,performs,138,https://root.cern,https://github.com/root-project/root/pull/10696#issuecomment-1146253227,1,['perform'],['performs']
Performance,> If we call TCling::Load on an already loaded library we dlclose and dlopen the library. Do we still distinguish (as I think we ought to) between the case .L which might reload the library (probably 'only' if it changed) and the case gSystem->Load which should not unload the library (and for that matter I would also not really expect ```.L name.so``` to reload the library (by .L script.C yes and .L script.C+ yes if the library was recreated).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-617459568:21,Load,Load,21,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-617459568,3,"['Load', 'load']","['Load', 'loaded']"
Performance,"> If we only care about if the identifier we look up is a top-level namespace or not, maybe we don't need to store the `DeckKind` info in GlobalModuleIndex, I plan to rework a little bit and only use a `char` to represent the state. I believe it decreases `modules.idx` size a little bit as well. WDYT? @vgvassilev. We care if the identifier is a namespace. The top namespace is just a heuristic which we use now. However, I expect to be able to avoid loading of all namespaces until another declaration is needed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1186227694:452,load,loading,452,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1186227694,1,['load'],['loading']
Performance,"> If you are not carefully, this might lead to the case where at start up for n-core/n-tasks, we might issue (n(n+1) / 2) files opens (eg. at the very least the first file being requested to be open n times). Mmmh that's right...we'll have to be careful. > the global number is needed to load the proper friend. What I'm saying only applies when there are no friends. In case there are friend trees (or a TEntryList) currently TTreeProcessorMT opens all files once at the beginning to recover all tree entry numbers, and each task builds the full chain (and then processes a certain range of global entry numbers).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190#issuecomment-1412173371:288,load,load,288,https://root.cern,https://github.com/root-project/root/issues/12190#issuecomment-1412173371,1,['load'],['load']
Performance,"> If you use the name as before, but Derived::fMember in case the derived re-uses a member name from a base, then it should be strictly an improvement, and backwards compatible?. It will require search for member names in all base classes for each write operation - huge performance degradation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8181#issuecomment-842299522:271,perform,performance,271,https://root.cern,https://github.com/root-project/root/pull/8181#issuecomment-842299522,1,['perform'],['performance']
Performance,"> Iiuc https://maskray.me/blog/2021-05-16-elf-interposition-and-bsymbolic argues that -Bsymbolic should be fine for libCling and is superior to no symbolic interposition. Thanks, Axel, for the link to this interesting article. By ""accidental"", I meant that, if we assume the gcc manpage description of the flag correct and complete (*), then we rely on a side-effect of compiler optimizations. The article you quoted mention another optimization that should make it work for all calls to functions defined in the same compilation unit (**), while I wrote it will be limited to inline functions. The -Bsymbolic, which is an option of the linker, instead of compiler, addresses directly what we target. The ld manpage description reads as ""When creating a shared library, bind references to global symbols to the definition within the shared library, if any. "". Philippe. (*) ""with -fno-semantic-interposition the compiler assumes that if interposition happens for functions the overwriting function will have precisely the same semantics (and side effects). "". (**) Although the statement on LD_PRELOAD confuses me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-885451125:379,optimiz,optimizations,379,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-885451125,2,['optimiz'],"['optimization', 'optimizations']"
Performance,"> In ROOT-10637, which is the library that does not have rootmap file nor a modulemap file?. In the example from the bug report that would be `spec_func_C.so`. It has no `spec_func_C.rootmap` nor `spec_func_C.pcm/module.modulemap`. > > In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies; > ; > Technically the 'problem' is that the rootcling executable that is run by ACLiC is not reporting to the list of dependencies of the source file it parsed. Doesn't rootcling have access to the information (connection symbol to library) through the pcm files? [Note: rootcling must not load any library]. Do you mean this code [here](https://github.com/root-project/root/blob/master/core/dictgen/src/rootcling_impl.cxx#L557-L573). The content of `spec_func_C_ACLiC_map.out` and `spec_func_C_ACLiC_map.in` [here](https://paste.ubuntu.com/p/WGcBqPTRwH/). I suspect it worked before because accidentally we had libHist's description stored.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605463982:678,load,load,678,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605463982,1,['load'],['load']
Performance,"> In `AddColumnsFromField` and `CollectColumns` we now produce both, the vector of `RColumnInfo` records and the `RCluster::ColumnSet_t`. To me it seems that the source of truth is the `RColumnInfo` vector, and it may be clearer to generate and `RCluster::ColumnSet_t` from the `RColumnInfo` vector. It was a small optimization to avoid looping over all columns twice and get all the data we need at once. I can separate the loops if you prefer, it should make little difference.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15954#issuecomment-2210678615:315,optimiz,optimization,315,https://root.cern,https://github.com/root-project/root/pull/15954#issuecomment-2210678615,2,['optimiz'],['optimization']
Performance,> In cases where ACLiC builds a library without a rootmap file or a modulemap file we have no reasonable way to detect what are the library dependencies. Technically the 'problem' is that the rootcling executable that is run by ACLiC is not reporting to the list of dependencies of the source file it parsed. Doesn't rootcling have access to the information (connection symbol to library) through the pcm files? [Note: rootcling must not load any library],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605269705:438,load,load,438,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605269705,1,['load'],['load']
Performance,"> Indeed, placing #include <nlohmann/json.hpp> into one of the existing io/ headers seems to work. Not really. One can generate dictionary and compile code.; But if one tries to load such include in ROOT session, it terminates with error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1217537659:178,load,load,178,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1217537659,1,['load'],['load']
Performance,"> Is there a reason why modules do not go through: interpreter/cling/lib/Interpreter/ValuePrinter.cpp:936 Interp->declare(""#include \""cling/Interpreter/RuntimePrintValue.h\"""");. Because when IncrementalParser::Compile compiles code, for example `cling::printValue(""hoge"")`, w/o modules cling emits a callback saying that ""we can't find cling::printValue"" and fallback to printValueInternal. However with preloading modules, we find the declaration in overloaded function (Eg. `core/base/src/TObject.cxx:std::string cling::printValue(TObject *val) {`) but not in RuntimePrintValue.h, because RuntimePrintValue.h is not contained in pcm because this is required to be loaded only once at the startup time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2194#issuecomment-397319682:666,load,loaded,666,https://root.cern,https://github.com/root-project/root/pull/2194#issuecomment-397319682,1,['load'],['loaded']
Performance,"> Isn't it the already same in the in Read/WriteFastArrayDouble32?. Yes, I had misread the function the first time, you are right. But anyway performance is not really our concern as regards our motivation for Real32Quant :). > (If not already done) this should be called out in the doc. Our idea is, at least for now, to say that the behavior in case of out-of-range is undefined, because we don't want to preclude ourselves to change our mind or our implementation in the future. At the moment we throw an exception but we might decide something different in the future, e.g. for performance reasons. ; ~~You can see the exact wording in this very commit (in the specifications.md file), so if you have some specific suggestion feel free to comment on it.~~. Edit: I was wrong, we're currently not specifying the behavior in the specifications.md but only in the code. Should we also explicitly say the behavior is undefined in the specs? I'm not sure it makes sense because the specs in principle only refer to the binary format; should they also say how a writer should behave when receiving wrong input from the user? @jblomer thoughts about this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16390#issuecomment-2362989229:142,perform,performance,142,https://root.cern,https://github.com/root-project/root/pull/16390#issuecomment-2362989229,2,['perform'],['performance']
Performance,> It does not hit the cache because the unloading clears the memory buffers behind the FileID. This means we have cache but it is unreachable after unloading by design. Fair enough. Which part of the new code make it unreacheable? [I am distracted by LookupHelper.cpp line 87/88 that get an Invalid flag but 'only' assert on it],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-413992581:22,cache,cache,22,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-413992581,4,['cache'],['cache']
Performance,"> It doesn't improve things basically for entire roottest -- on the contrary it shows 2% slowdown. I think that if we want to harvest this 2% (by skipping the root-pcm sometimes) we are going to have to understand better what in the ""user"" code (i.e. the set of headers and functionality) and what in our code makes the difference. For example, if in the large example, the gain from the root-pcm is thanks to avoiding a large number of data-member offset calculations and large number of AST nodes loading from the module to get the information, and (still for example), if the cost in the other cases (the 2%) is due to loading the TProtoClass but not using them because the example does not do any I/O, then the conclusion would be that the ""cost of doing faster I/O is the 2% slowdown and that their would be 2 options (speed-up the module case even more than now or speed-up the root-pcm case when no I/O is done). [Of course in either we would have the challenge of doing so without costing (more?) for the other user cases]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-649819717:499,load,loading,499,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-649819717,2,['load'],['loading']
Performance,"> It seems to be reproducible via vanilla cppyy as shown below. . The example above isn't a proper leak check b/c the `range()` call will have Python cache integers, the first `obj.leak` call will compile a wrapper (loading all kinds of stuff the first time around) etc. Below is an actual test, which doesn't leak on ""vanilla cppyy"" although it may still be on the one included in ROOT as there are differences:. ```; import cppyy, gc, os, psutil. cppyy.cppdef(""""""; #include <string>; class foo {; public:; const std::string leak (std::size_t size) const {; std::string result;; result.reserve(size);; return result;; }; };; """"""). process = psutil.Process(os.getpid()). # warmup; obj = cppyy.gbl.foo(); for i in range(1000000):; s = obj.leak(2048). gc.collect(). last = process.memory_info().rss. for i in range(1000000):; s = obj.leak(2048). gc.collect(); assert last == process.memory_info().rss; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15703#issuecomment-2145734725:150,cache,cache,150,https://root.cern,https://github.com/root-project/root/issues/15703#issuecomment-2145734725,2,"['cache', 'load']","['cache', 'loading']"
Performance,"> It's working well, but we have a crash if I perform the following (stupid) sequence:; > ; > * press CTRL+S; > ; > * write 'int'; > ; > * press CTRL+S again. This is now solved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10208#issuecomment-1083173723:46,perform,perform,46,https://root.cern,https://github.com/root-project/root/pull/10208#issuecomment-1083173723,1,['perform'],['perform']
Performance,"> Just had a quick look, and I think that we have too many `#if PY_VERSION_HEX ...` to make ROOT work with more than one Python version. We will need to reduce those or use a different strategy to support multiple Python versions. I think using a single ROOT build from multiple python versions [is already possible to hack in](https://github.com/willsALMANJ/pyroot_link_to_binary). It's harder to support accessing multiple Python versions from C++ (i.e. `TPython`). Could `gSystem->Load(""..."")` be used to replace `libPyROOT.so` with a different version like `libPyROOT37.so`? Or are there differences in the `libPyROOT` ABI for different Python versions?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396#issuecomment-462720972:484,Load,Load,484,https://root.cern,https://github.com/root-project/root/pull/3396#issuecomment-462720972,1,['Load'],['Load']
Performance,"> Just out of curiosity: did you consider the alternative of not loading Rint.pcm, at least not for rootcling?. I did not .. but I suspect there would be a risk that its content may then inadvertently be included in another pcm, isn't ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11687#issuecomment-1311667066:65,load,loading,65,https://root.cern,https://github.com/root-project/root/pull/11687#issuecomment-1311667066,1,['load'],['loading']
Performance,> LGTM.; > ; > What is wrong with the originals?. Can't find the Jira ticket on the spot but the data is not stored correctly but in the metadata of the tree. So you open the tree and bam you load all data at once :see_no_evil:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6051#issuecomment-660126369:192,load,load,192,https://root.cern,https://github.com/root-project/root/pull/6051#issuecomment-660126369,1,['load'],['load']
Performance,> Lastest performance results indicates an addition 2.5%; > [callgrind-callfunc-v2.tar.gz](https://github.com/root-project/root/files/9687253/callgrind-callfunc-v2.tar.gz). Do you mean 2.5% slower than master?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1264253934:10,perform,performance,10,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1264253934,1,['perform'],['performance']
Performance,"> Let's see if now it would start... Yes, now you inserted it at the very end of the queue. See you in two days...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13269#issuecomment-1641951069:85,queue,queue,85,https://root.cern,https://github.com/root-project/root/pull/13269#issuecomment-1641951069,1,['queue'],['queue']
Performance,> Likely a cmake race condition. mmh i love those :smile:,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5603#issuecomment-642504459:17,race condition,race condition,17,https://root.cern,https://github.com/root-project/root/pull/5603#issuecomment-642504459,1,['race condition'],['race condition']
Performance,"> Looking at the docs of `createChi2` I see that it points to `RooChi2Var` ctor. Is it ok given that you are now discouraging usage of `RooChi2Var`? Furthermore, in https://root-forum.cern.ch/t/failing-chi2-fit/56309/8 you say that `createChi2` supports more options. You are right, things are not really consistent in the RooFit Chi2 world, and you will find small bugs and inconsistencies under every stone you turn around I think. The chi2 are only third-class citizens in RooFit, and since they are not used that much they also didn't get much bugfixes in the last years :(. What I would prefer for now is to merge this PR first, as it already contains quite some changes. Then afterwards, I would like to revise the structure of these chi2 methods, before finally coming back to the docs. It doesn't make that much sense to ""optimize"" the docs when the interfaces will probably change anyway. For example, what I don't like is that there are overloads of `createChi2/fitToChi2` for each RooDataHist and RooDataSet, and also reimplementations in RooAbsPdf and RooAbsReal. There are so many entry points that the documentation gets overly verbose and it's hard to keep it in sync. The goal would be to only have one entry point for chi2 instantiation and fitting in RooAbsReal, and then bring all the docs there. Including the part that is not in RooChi2Var. Does that sound okay to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13638#issuecomment-1715735600:830,optimiz,optimize,830,https://root.cern,https://github.com/root-project/root/pull/13638#issuecomment-1715735600,1,['optimiz'],['optimize']
Performance,"> Looks good to me ! I agree with the implemented logic.; > ; > Maybe I have missed, and it is already there, but I think we should have an INFO message (also with gDebug=0), telling which type of library is loaded. If you set gDebug to 0 you will get the message from SystemLoad().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7415#issuecomment-793964719:208,load,loaded,208,https://root.cern,https://github.com/root-project/root/pull/7415#issuecomment-793964719,1,['load'],['loaded']
Performance,"> Looks great, thank you very much.; > ; > I would suggest one change, namely that if the user clicks in the area outside the menu, the popup menu closes with no action performed, as done usually with a TCanvas menu. Or alternatively, provide an additional row in the popup menu, with the name ""Cancel"". Should be fixed now, can you give it a try and confirm?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7352#issuecomment-799377034:169,perform,performed,169,https://root.cern,https://github.com/root-project/root/pull/7352#issuecomment-799377034,1,['perform'],['performed']
Performance,"> Looks great, thank you very much.; > ; > I would suggest one change, namely that if the user clicks in the area outside the menu, the popup menu closes with no action performed, as done usually with a TCanvas menu. Or alternatively, provide an additional row in the popup menu, with the name ""Cancel"". Yes, I saw this and I will fix it, thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7352#issuecomment-799318812:169,perform,performed,169,https://root.cern,https://github.com/root-project/root/pull/7352#issuecomment-799318812,1,['perform'],['performed']
Performance,"> Looks like it's a problem in the dictionary generation. The following snippet comes from `G__vectorDict.cxx`:; > ; > ```c++; > static const char* includePaths[] = { ; > ""/home/eguiraud/ROOT/build_dbg_includepaths/include"", ; > ""/home/eguiraud/ROOT/build_dbg_includepaths/include"", ; > 0 ; > }; ; > ```. Libraries are free to use the interpreter during their static initialization after being loaded. In that case this library decided to add an extra include path. If we do not need this include path (eg there is no useful header to resolve from there). In fact we ignore such include paths [here](https://github.com/root-project/root/blob/666cd7981afcaeed4728c86591cbdfa5e20df4d2/cmake/modules/RootMacros.cmake#L329). What is `build_dbg_includepaths`? Is it your build folder?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7108#issuecomment-968088527:394,load,loaded,394,https://root.cern,https://github.com/root-project/root/issues/7108#issuecomment-968088527,1,['load'],['loaded']
Performance,"> Looks like we fail with [...]. Yes, that's exactly what I posted 45 minutes ago... > @hahnjo, the area in clang which @ktf touches hasn't been changing for years. Maybe we just discovered something that upstream has not and we need to tune the patch... Yes, that's what I'm saying. And IMHO that ""tuning"" should not happen after we broke everybody's ROOT in a minor patch release...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1750214441:237,tune,tune,237,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1750214441,1,['tune'],['tune']
Performance,"> Maybe it makes sense to open a new PR once this works, such that we get rid of the part ""make it work on all platforms""?. Yes I agree, this PR was just to check the state of the feature on all platforms from time to time and to provide a preview of the changes to you (the early commits are fixed, it's just that they cannot be merged on their own as they degrade performance). > Do you expect to significantly reduce the performance impact for a batch size of 1, or what's the path forward?. I don't know of a way to fix the performance degradation with batch/bulk size of 1, so the idea would be to use a larger bulk size by default when this is merged, but:; - performance is not always better at the moment: as TTree I/O does not provide bulks, I have to perform extra copies to w.r.t. the non-bulk case that sometimes are more expensive than the bulk processing gains; - since I have to copy values into contiguous buffers, a number of use cases break (polymorphic use of TBranches, branch types with no default constructor, move-only branch types, TClonesArrays, ...). The plan is to try to fix the use cases that break as well as the performance issues so we can always turn bulk processing (with bulk size >> 1) on. It's going to be difficult, fingers crossed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11517#issuecomment-1422254977:366,perform,performance,366,https://root.cern,https://github.com/root-project/root/pull/11517#issuecomment-1422254977,6,['perform'],"['perform', 'performance']"
Performance,"> My guess is that because a binning is not specified RDF is storing `std::vector<double>`s with all entries of all columns and that's just too much. I don't think anyone ever tried to fill so many histograms with so many entries each (no filters) without specifying a binning.; > ; > We could do something like `TTree::Draw` does and estimate the binning from the first N entries, but we always avoided it because it requires locking during a multi-thread event loop. Let's see what massif says first though. Ah, thanks for the explanation. That makes sense, the file has around 8 GB (compressed size).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6676#issuecomment-712871248:444,multi-thread,multi-thread,444,https://root.cern,https://github.com/root-project/root/issues/6676#issuecomment-712871248,1,['multi-thread'],['multi-thread']
Performance,"> My understanding is that one possible optimization is related to auto-loading of namespaces. At the moment, we load all modules, which can be a problem for ""widespread"" namespaces such as `ROOT::Experimental`. However, we need this for `ROOT::RDF` and so on which live in libraries / modules that are not eagerly loaded.; > ; > FWIW yesterday I thought about this, and it seems to me that once we know that something is a namespace that we've already seen somewhere, we don't actually need to do anything - contained classes will be loaded on demand from the modules that actually contain them. My idea was to add a check to `TClingCallbacks::LookupObject(const DeclContext* DC, DeclarationName Name)` and if `Name` already resolves to a known namespace, just `return false`. That's a bit tricky though because if we do a name lookup from there, it will recursively call Cling again. We might be able to cut this loop with a boolean flag that we set just before doing the lookup, but I stopped my experiments here. If somebody wants to try it further, be my guest 😅. Do you mean this https://github.com/root-project/root/pull/10969 We tried something along these lines but see the verdict...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1625120999:40,optimiz,optimization,40,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1625120999,5,"['load', 'optimiz']","['load', 'loaded', 'loading', 'optimization']"
Performance,"> My version of os/compiler/valgrind seems to work better and I got some useful information.; > ; > For `root.exe -b -l -q callfuncbench.cxx+(1000)`.; > ; > The new code is a big faster: `42,696,463,692` instead of `45,892,859,389`; > ; > Some of the calculation are shifted to `Value::Value`: `5,000,000,988` vs `3,100,001,703` (it grows by 2 billions when the overall goes down by 3 billions).; > ; > The gains comes from the disappearance of `TClingCallFunc::InitRefAndExec` (minus 3.8 billions) and the simplifications of `std::function_handler (removed) and TClingCallFunc::exec` (minus 1.2 billions).; > ; > So it is getting better and `Value::Value` is a potential source of further optimization (see related comment).; > ; > [callgrind-callfund.tar.gz](https://github.com/root-project/root/files/9665974/callgrind-callfund.tar.gz). Thanks for the details. I've pushed the further optimization of `Value::Value`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1262680556:690,optimiz,optimization,690,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1262680556,4,['optimiz'],['optimization']
Performance,"> Nice idea! Can you open a PR for that? This is a very common case indeed, it's nice to optimize it. Yes, I could. But not before next week (I am quite busy this week). > By the way, there are `clang-tidy` checks to do this automatically. Oh, I didn't know. Which ones do you mean?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15434#issuecomment-2098581209:89,optimiz,optimize,89,https://root.cern,https://github.com/root-project/root/issues/15434#issuecomment-2098581209,1,['optimiz'],['optimize']
Performance,"> Nice, this works!! Thanks!. Since the reporter of the issue was happy with the solution... > @hageboeck, I am happy with what we have now, should we close this issue?. ...Vassill too... > I leave it to you three if you are happy to close this issue. ...there was radio silence after it... ```; lxplus962:~> /usr/bin/time root -b -q -e '.L ~tnanut/public/Stephan/RooThreshold.cpp+O' >/dev/null; Warning in <ACLiC>: /afs/cern.ch/user/t/tnanut/public/Stephan is not writable!; Warning in <ACLiC>: Output will be written to /tmp/rembserj/rembserj; Info in <TUnixSystem::ACLiC>: creating shared library /tmp/rembserj/rembserj//afs/cern.ch/user/t/tnanut/public/Stephan/RooThreshold_cpp.so; 6.09user 1.24system 0:09.84elapsed 74%CPU (0avgtext+0avgdata 317852maxresident)k; 146152inputs+8568outputs (206major+212245minor)pagefaults 0swaps; lxplus962:~> /usr/bin/time root -b -q -e '.L ~tnanut/public/Stephan/RooThreshold.cpp+O' >/dev/null; Warning in <ACLiC>: /afs/cern.ch/user/t/tnanut/public/Stephan is not writable!; Warning in <ACLiC>: Output will be written to /tmp/rembserj/rembserj; 0.32user 0.08system 0:00.44elapsed 91%CPU (0avgtext+0avgdata 282696maxresident)k; 0inputs+8outputs (0major+22646minor)pagefaults 0swaps; lxplus962:~>; ```. ...and after @hageboeck's last measurements the compile+loading time went from 30s to 10s, and the loading time reduced from 10s to 0.5s, I think we can close this issue :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774#issuecomment-1861438699:1296,load,loading,1296,https://root.cern,https://github.com/root-project/root/issues/7774#issuecomment-1861438699,2,['load'],['loading']
Performance,"> No longer performing this override in TViewPubFunction.h fixes the type back to TList and the call to GetBaseOffset no longer happens. Unfortunately, it does not solve the problem but rather prevents the warning but giving inaccurate information to the routine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16177#issuecomment-2271691905:12,perform,performing,12,https://root.cern,https://github.com/root-project/root/pull/16177#issuecomment-2271691905,1,['perform'],['performing']
Performance,"> Not only should writing be faster but pages are also ordered by columns, so we may see better reading performance with this change. Yes, I've been trying to measure this with the `iotools` analyses, we'll have to see if we get convincing numbers out of it...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14616#issuecomment-1931932416:104,perform,performance,104,https://root.cern,https://github.com/root-project/root/pull/14616#issuecomment-1931932416,1,['perform'],['performance']
Performance,> Note that concurrent access to different elements of a std::vector is guaranteed to be safe. Do you have a reference and/or clear explanation :) ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425180877:12,concurren,concurrent,12,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425180877,2,['concurren'],['concurrent']
Performance,> Note that this code path is 'performance critical'. Yes. I see. And array too large (500 entries) to initialize it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7430#issuecomment-800014963:31,perform,performance,31,https://root.cern,https://github.com/root-project/root/issues/7430#issuecomment-800014963,1,['perform'],['performance']
Performance,"> Note that we might still face the problem with DLLs loaded from somewhere else, and for which there is no .lib,. Yes, I agree. This is clearly a problem/risk. > but it looks like an overkill to me, especially if I have to search all volumes (imagine NFS). Why ""all"" volumes? Wouldn't we be limited with the set of ""directory of the dll"" and directorys in %PATH% and other path variables?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6156#issuecomment-672220061:54,load,loaded,54,https://root.cern,https://github.com/root-project/root/pull/6156#issuecomment-672220061,2,['load'],['loaded']
Performance,"> Note: at least on Intel architectures, a single 64bit pointer cannot be split into more than one cache line due to alignment of 8 bytes (i.e. it's thread-safe to read it). . Even-though this might be true, the C++ standard explicit says that it is undefined behavior to read a value concurrently with an update with any explicit synchronization mechanism (for example std::atomic). In practice, this means that the same 'happenstance' you describe might not be true on other platforms. Furthermore the compiler is also allowed to re-order code in 'surprising ways' that would thwart/foil the assumption on the happenstance you describe. Thus our policy, consistent with the standard is that if a value can be updated while being read, it either must be an atomic or both the read and write must be protected by a lock. [This is not meant to preclude any other means of synchronization to achieve the same goal]. > Therefore, any thread will either see fBase == nullptr and acquire a lock to create the list of bases, or it will find the value already computed and return it immediately. In this case this true simply due to the fact that fBase is already an std::atomic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/957#issuecomment-327819102:99,cache,cache,99,https://root.cern,https://github.com/root-project/root/pull/957#issuecomment-327819102,4,"['cache', 'concurren']","['cache', 'concurrently']"
Performance,"> Note: this is a partial (?) duplicate . As I can see, #9883 is automatically generated and can be redone after merging this PR.; Most interesting here is that commit - https://github.com/root-project/root/pull/9932/commits/cbd307b1f9b0416f0b92b651af5b661e727c31a0. It improves performance of plain `GetBinContent` for TH2 and TH3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9932#issuecomment-1044781326:279,perform,performance,279,https://root.cern,https://github.com/root-project/root/pull/9932#issuecomment-1044781326,1,['perform'],['performance']
Performance,"> Ok, let me know if you have other tests which you would like me to do. I was a bit surprised to learn that:. > > Thank you for the nice investigations. What are the next steps? I tried #13139 but that does not help us. I see a different memory profile, but the extra memory due to ROOT is stil around 70MB (even a bit more with that PR, AFAICT).; > ; > Is that with or without opening the file? My expectation is that `root.exe -l -b -q` will take a lot less rss. ping. > One more question for my understanding. Are those big vectors actually needed at all when reading a file? If not why aren't they swapped out to disk either implicitly via some madvise or by simply caching to disk the results? The latter might even give some startup advantage, assuming they are offsets to the pcms and they do not change (not the basic root ones, at least). They are not needed upon module loads. We tried to implement some sparse vectors to mitigate this issue. However, I feel like we did not have the persistence to make it work. That is, we can implement a lazy vector structure that behaves just like vector but the reserve operation does not allocate. Instead, we allocate slabs around the access pattern (we override the subscript operator, etc). This would help us avoid eager allocations and hopefully, depending on whether there is a clear access pattern to optimize things. Our implementation seems to be still [here](https://github.com/Teemperor/llvm/commit/a06b21cbc55c6d2f1d2bf6f39771411ccc17342b). Another easier thing to try is reviving https://reviews.llvm.org/D89749",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1629035353:881,load,loads,881,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1629035353,4,"['load', 'optimiz']","['loads', 'optimize']"
Performance,"> On Linux, that's totally fine, users are in charge of whether their program is multi-threaded or not. Okay, then we should change the `tExecutor` test to make sure that all threads are joined before `fork`ing. > I don't understand whether Mac makes your applications multi-thread with no warning or not. My understanding is that yes, `com.apple.NSEventThread` is always started. Who's our Mac expert, @Axel-Naumann ? If that's the case, should we disable `TProcessExecutor` on Mac?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-766744713:81,multi-thread,multi-threaded,81,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-766744713,2,['multi-thread'],"['multi-thread', 'multi-threaded']"
Performance,"> One idea I had was to split the test into two parts, ie one ""bad"" part that tests the behavior with an incomplete class and one ""good"" part that loads inst2lib. I am not following the details but the nature of the test is to see what happens if you late load the right declaration after the partial one has been used/tickled, so It sounds like splitting the test would render it 'moot'.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1768951805:147,load,loads,147,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1768951805,2,['load'],"['load', 'loads']"
Performance,> Opening the file can be an expensive operation (especially if it is a remote file) so you only want to do it once (per file) and keeping around opened files (that you are not using 'right' this moment) does not scales (think of running over more than 1000 files). Currently TTreeProcessorMT does a pre-emptive pass of all input files to check cluster boundaries.; I agree this is something we might want to optimize and if I am not mistaken @etejedor 's future work might go in that direction.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/828#issuecomment-319818749:409,optimiz,optimize,409,https://root.cern,https://github.com/root-project/root/pull/828#issuecomment-319818749,1,['optimiz'],['optimize']
Performance,"> Or even make a single libPyROOT work both with Python 2.x and 3.x if possible. As far as I understand, that should be possible too if we don't link directly to the Python library, but let symbols be resolved from the already loaded Python interpreter. I don't think that is even possible, since extension modules like libPyROOT need to define a different interface for Python2 and Python3. Moreover, there are differences also in the Python APIs between versions (even between 3.X versions) that also impose those `#if`s in our PyROOT code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3396#issuecomment-462717945:227,load,loaded,227,https://root.cern,https://github.com/root-project/root/pull/3396#issuecomment-462717945,1,['load'],['loaded']
Performance,"> PGO has been investigated in detail by some HEP experiments, e.g. CMS https://indico.cern.ch/event/1106990/contributions/4991214/ . There was no symbol coming from ROOT which was really sticking out. Thanks a lot for sharing the results!. > At the moment don' see clearly how a general purpose framework such as ROOT could benefit from PGO, given the variety of workflows that use ROOT - from HLT to Reco, to Simulation and analysis - and all in different experiments, with very different software stacks. I agree that various workloads can benefit from PGO differently. What we can do is try to measure PGO performance improvements in multiple scenarios (like all the scenarios you mentioned above), and post the results somewhere (e.g. here). If the performance improvement is measurable for some scenarios - put this information into the project's documentation. In this case, users will be aware about additional ways to optimize Root. > Do you have something in particular in mind? Can you invest some time in the topic to prove your point? It would be interesting for us to comment on concrete measurements. Actually, I don't have in mind any specific workload since I don't have enough experience with Root (at least yet). Later maybe I will be able to spend some time on an experiment with PGO and Root. However, my TODO list for such experiments is a bit [huge](https://github.com/zamazan4ik/awesome-pgo/blob/main/are_we_pgo_yet.md) so I cannot promise any results soon.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778#issuecomment-2154412824:610,perform,performance,610,https://root.cern,https://github.com/root-project/root/issues/15778#issuecomment-2154412824,6,"['optimiz', 'perform']","['optimize', 'performance']"
Performance,"> Problems with loading dictionaries created with 6.22.06 by the 6.22.08. Dictionary source files and related files (rootmap, rootpcm and pcm) must be rebuild whenever the ROOT version change.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7781#issuecomment-813537920:16,load,loading,16,https://root.cern,https://github.com/root-project/root/issues/7781#issuecomment-813537920,1,['load'],['loading']
Performance,"> Profiles of RNTuple benchmarks (`iotools/cms, lhcb`) showed ~10-20% of; > total runtime is due to allocations in `RPageSource::UnsealPage`. @mxxo @jblomer This work will be resumed soon as we suspect that not reusing addresses is affecting RDMA data transfers (which has an impact on the measured throughput in the DAOS backend). Specifically, we need to confirm that not reusing addresses that appear in the IOVs array in `daos_obj_{fetch,update}()` is related to a higher overhead due to RDMA MR registration. Therefore, this PR might actually have some other side benefits besides reducing memory allocations and heap fragmentation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8634#issuecomment-1300054951:299,throughput,throughput,299,https://root.cern,https://github.com/root-project/root/pull/8634#issuecomment-1300054951,2,['throughput'],['throughput']
Performance,"> Quickfix: #include <ROOT/RDFHelpers.hxx>. Thank you @ikabadzhov , can you open a PR with the missing include please?. > I am not sure if this is intentional, but all Filters and Histos are jitted. I am now writing a fully compiled version. I would suggest either having a separate fully compiled version, or directly migrate to fully compiled version. One consideration here is that tutorials are optimized for readability/user-friendliness, not for performance, so a fully compiled version is only interesting if it's more readable/easy to understand for the average user (could be, I don't know -- but typically a mix of helper C++ functions and expressions in strings is closer to the sweet spot). > The tutorials are interpreted anyway right?. 2 of the RDF tutorials have includes and a `main` function in order to show to users how to compile complex RDF code. ```; $ ls *.C | wc -l; 34; $ rg -l 'int main' *.C | wc -l; 2; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11124#issuecomment-1206549344:399,optimiz,optimized,399,https://root.cern,https://github.com/root-project/root/issues/11124#issuecomment-1206549344,2,"['optimiz', 'perform']","['optimized', 'performance']"
Performance,"> Regular unloading will invalidate the SourceManager memory buffer and we will not hit the cache for the particular FID. I don't understand why. line 87 assumes/assert that the FID points to a valid buffer. Also upon unloading are the FIDs 'released' or kept as is; in other words can the FID be re-used? . And if they are still valid, for 'real' files that unloaded and modified by the user and then reloaded, what happens (to the FID of the first load and the FID of the second load)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2483#issuecomment-413919076:92,cache,cache,92,https://root.cern,https://github.com/root-project/root/pull/2483#issuecomment-413919076,3,"['cache', 'load']","['cache', 'load']"
Performance,"> Remove all the artifacts of that shared library (e.g. rm file1*), while keeping the Python session open. This mark for deletion a in-use file (`file1_cxx.so`). > The two files are completely unrelated, . But ACLiC does not know. The current heuristic is to link the generated library against all the currently loaded libraries. To solve this problem you need to explicitly unload the library:; ```; gSystem->Unload(""file1_cxx"");; ```. Cheers,; Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10640#issuecomment-1136357383:312,load,loaded,312,https://root.cern,https://github.com/root-project/root/issues/10640#issuecomment-1136357383,1,['load'],['loaded']
Performance,"> Remove test/CodeUnloading/RunAgainstClangTestSuite; > .... clang/test/Sema/address-constant.c is a very arbitrary Clang test. I don't know when it was restricted to single test but the original intent was to apply; the load/unload to all the clang test to have as ""complete"" of a coverage as; possible:. ```; commit 2334a2089ecda6998bb0fbbc3e63bf027a52ddac; Add a test that loads every clang test and unloads it; ```. This test is probably better off being move to clang-repl.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16258#issuecomment-2302848580:221,load,load,221,https://root.cern,https://github.com/root-project/root/pull/16258#issuecomment-2302848580,2,['load'],"['load', 'loads']"
Performance,> Reuse vs. destruct/reallocate for collection items: suggested by @pcanal https://github.com/root-project/root/pull/11525#discussion_r997337292 and https://github.com/root-project/root/pull/11525#discussion_r997343681. The 2nd one is actual about resize/pre-allocate in one go (instead of incrementally). The pattern can be applied to all containers. Even with non-vector containers it is an optimization as it cut the number of allocation (of user objects) in half (i.e only the final object rather than create a temporary object and copy over to the final object).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11671#issuecomment-1307618666:393,optimiz,optimization,393,https://root.cern,https://github.com/root-project/root/issues/11671#issuecomment-1307618666,1,['optimiz'],['optimization']
Performance,"> Should the limit be lowered to `EnableExplicitMT()` (i.e. when called with the default argument)? If 32bit and > 8 cores, cap it at 8 threads? Else we run the risk of exhausting the address space again soon enough with some other test, or on some user's analysis... What do you think? Or is this the user's responsibility?. I have the strong opinion that it's the user's responsibility. Mainly because the limit of 8 threads is not necessarily a sane default, it depends on the program you execute concurrently.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6842#issuecomment-730185356:500,concurren,concurrently,500,https://root.cern,https://github.com/root-project/root/pull/6842#issuecomment-730185356,1,['concurren'],['concurrently']
Performance,"> Should we just adopt that clang-tidy file?. Yes, why not! They enforced it in all their CMSSW code base and it apparently worked fine for them. There are, however, also checks in that file I don't like. It's this `performance-unnecessary-copy-initialization` and `performance-for-range-copy`:. * https://clang.llvm.org/extra/clang-tidy/checks/performance/for-range-copy.html; * https://releases.llvm.org/10.0.0/tools/clang/tools/extra/docs/clang-tidy/checks/performance-unnecessary-copy-initialization.html. They assume that it's fair to replace a const copy with a const reference if only const methods are called on it. But with all the `mutable` and `const_cast` going on for example in RooFit, this is not a good assumption, unfortunately. These checks don't apply to this PR, by the way. I'll go ahead later and make a PR with that file, minus these two checks, and then we can continue the discussion there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13892#issuecomment-1770295789:216,perform,performance-unnecessary-copy-initialization,216,https://root.cern,https://github.com/root-project/root/pull/13892#issuecomment-1770295789,4,['perform'],"['performance', 'performance-for-range-copy', 'performance-unnecessary-copy-initialization']"
Performance,> So I think we're generally toast here. But I now understand how removing =default can avoid triggering this compiler optimization. Are there chance to disable such optimization for TObject? ; Any kind of compiler flags or compiler macros?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4320#issuecomment-526637054:119,optimiz,optimization,119,https://root.cern,https://github.com/root-project/root/pull/4320#issuecomment-526637054,2,['optimiz'],['optimization']
Performance,"> So also in the standard RDF workflows we have lots of ReadLock() still present, but managed to avoid the thread scaling problems by eliminating all of the WriteLock() occurrences. Are you talking about the previous improvements or a new improvements? (ReadLock should indeed not affect 'too much' scalability unless there are write locks)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7710#issuecomment-1623851818:299,scalab,scalability,299,https://root.cern,https://github.com/root-project/root/issues/7710#issuecomment-1623851818,1,['scalab'],['scalability']
Performance,"> So if a library A depends on library B, and we load A without loading B first wouldn't we get the same callback allowing us to resolve that dependency?. The missing symbol would be issue by dlopen, do we have a hook there that would callback our code? Either way, I recommend you set up such an example to see it in action. :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394478889:49,load,load,49,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394478889,2,['load'],"['load', 'loading']"
Performance,"> So in this case by invoking gMinuit we're loading not only libMinuit.so but also depending libraries such as:. Yes, ROOT is being with explicit-link of dependent library by default. In this case dlopen does the library loading with the information from the elf library. To emulate other use case you would need to either rebuild ROOT without explicit linking or create two separate library that are not linked against each other and when generating a dictionary make sure to provide the dependency information.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394483209:44,load,loading,44,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394483209,2,['load'],['loading']
Performance,"> So it does not need to be in the pcm but it still need to be generated at some point .... Updated the patch as `if (!(useCxxModules && IsFromRootCling()) && strncmp(cl->GetName(),""tuple<"",strlen(""tuple<""))==0) {` so we won't put TEmulatedTuple in pcm but still generate when called from ROOT. Is that what you meant?. FYI, this was a stack trace of TEmulatedTuple re-definition error.; ```; (gdb) bt; #0 0x00007ffff57626d0 in cling::IncrementalParser::ParseInternal(llvm::StringRef) () from /home/yuka/module-release/lib/libCling.so ; #1 0x00007ffff5763ffb in cling::IncrementalParser::Compile(llvm::StringRef, cling::CompilationOptions const&) () from /home/yuka/module-release/lib/libCling.so ; #2 0x00007ffff56ff415 in cling::Interpreter::declare(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, cling::Transaction**) () ; from /home/yuka/module-release/lib/libCling.so; #3 0x00007ffff5698388 in TCling::LoadText(char const*) const () from /home/yuka/module-release/lib/libCling.so ; #4 0x00007ffff5687b7b in TCling::Declare(char const*) () from /home/yuka/module-release/lib/libCling.so; #5 0x00007ffff568a383 in AtlernateTuple[abi:cxx11](char const*) () from /home/yuka/module-release/lib/libCling.so ; #6 0x00007ffff568a99e in TCling::SetClassInfo(TClass*, bool) () from /home/yuka/module-release/lib/libCling.so ; #7 0x00007ffff47dbc58 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) () from /home/yuka/module-release/lib/libCore.so ; #8 0x00007ffff47db6ec in TClass::TClass(char const*, short, bool) () from /home/yuka/module-release/lib/libCore.so ; #9 0x00007ffff568bdde in TCling::GenerateTClass(char const*, bool, bool) () from /home/yuka/module-release/lib/libCling.so ; #10 0x00007ffff47d92bf in TClass::GetClass(char const*, bool, bool) () from /home/yuka/module-release/lib/libCore.so ; #11 0x00007ffff47d9884 in TBuildRealData::Inspect(TClass*, char const*,",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2615#issuecomment-421939105:948,Load,LoadText,948,https://root.cern,https://github.com/root-project/root/pull/2615#issuecomment-421939105,1,['Load'],['LoadText']
Performance,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly?. Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it.; And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-822265380:248,CACHE,CACHE,248,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-822265380,1,['CACHE'],['CACHE']
Performance,"> So the problem somehow seems to be related to multithreaded IO?. Are you doing multi-threaded I/O in that example?. Note that the commit mentioned in the original post, helps with thread scalability but will effect serial code too. The fact that before this commit, the reproducer works but reverting the commit on the master is not resolving the problem is strange, i.e. indicates some interaction between that commit and some other non-obvious commit. (The other non obvious commit could be found by running a bisect where after each commit is checked out, one reverts the noted commits (according to the description this should lead to a working state up to the point where some other commit is make things 'worse' for this use case).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12783#issuecomment-1537737951:81,multi-thread,multi-threaded,81,https://root.cern,https://github.com/root-project/root/issues/12783#issuecomment-1537737951,2,"['multi-thread', 'scalab']","['multi-threaded', 'scalability']"
Performance,"> So you mean extern template the new ExecImp?. Yes, this what I meant. > because you still have to instantiate the ""front-facing"" template . it is a trivial function, that we could even mark as 'force inline' to make it disappear. > Maybe, but I doubt that it actually achieves the goal of reducing compile time .... and neither [of the functions] seems particularly expensive to generate. . I started from the assumption that the existing code was there for a reason. Indeed if the functions are also simple/trivial, the extern template are not needed, however then the git log need to be enhanced to justify/explain that the existing optimization was in fact not needed (assuming this is the case :) )",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16176#issuecomment-2271543583:637,optimiz,optimization,637,https://root.cern,https://github.com/root-project/root/pull/16176#issuecomment-2271543583,2,['optimiz'],['optimization']
Performance,"> So, would the error still be there if you change the example to something like:; > ; > ```; > #include <TROOT.h>; > static auto force_init = gROOT->GetInterpreter();; > int main(int argc, char** argv) {; > return 0;; > }; > ```; Well, in that case it depends on what is loaded first, but there could be other static objects loading symbols from the other LLVM, so even if this would work, it would be only by chance. It just depends on the order.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564005524:272,load,loaded,272,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564005524,2,['load'],"['loaded', 'loading']"
Performance,> Stays like this forever for me (Google Chrome on Linux). Can you check messages in browser console (Ctrl + Shift + I)?; And try to cleanup browser cache - you can have by chance some old JSROOT scripts there.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3235#issuecomment-453484366:149,cache,cache,149,https://root.cern,https://github.com/root-project/root/pull/3235#issuecomment-453484366,1,['cache'],['cache']
Performance,"> Suppose I have N threads creating M png files in batch. Will this work?. Yes, this is that I want to achieve. . But replacing `gPad` is first step. . Most critical point are `gVirtualX` and `gVirtualPS` instances which are same for all threads. ; And therefore we need to make sure that concurrent calls from different threads are correct.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15937#issuecomment-2194148225:289,concurren,concurrent,289,https://root.cern,https://github.com/root-project/root/pull/15937#issuecomment-2194148225,1,['concurren'],['concurrent']
Performance,"> TCanvas objects are not made thread-safe. That is true but you are not using TCanvases from multiple threads concurrently :smile: In fact you only run code in one thread in your code above, no multi-thread code is actually run as far as I can tell.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12496#issuecomment-1564637180:111,concurren,concurrently,111,https://root.cern,https://github.com/root-project/root/issues/12496#issuecomment-1564637180,2,"['concurren', 'multi-thread']","['concurrently', 'multi-thread']"
Performance,"> TClass::GetClass can know tuple<> is declared or not in current infrastructure?. That depends what you mean by 'declared'. If you mean 'known' to the interpreter, then we would need to ask TCling/cling directly (for tuples). if you mean 'has its dictionary/library been loaded yet and/or do we have a rootmap for it', you need to use TClass::IsLoaded. I am still unclear what you mean by; ```; TClass::GetClass tries to lookup for tuple<..>, but it can't find the defenition; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093#issuecomment-392935754:272,load,loaded,272,https://root.cern,https://github.com/root-project/root/pull/2093#issuecomment-392935754,1,['load'],['loaded']
Performance,"> TStreamerInfoActions:255. This is the inner most part of the I/O and the most commonly uses code. Consequently this will (should) have a very severe impact on performance. Furthermore, that (inner) function contract is that it is being passed a valid address. The problem (to be solved) is that . ```; b->SetAddress(nullptr);; ```; seems to be ignored. It should lead to the internal of `TBranchElement` to now point to a newly created (as a result of this code) object (of the right type) owned by the branch. Similarly, we ought to detect (this time we can probably just error out) the case:; ```; f = nullptr;; t->Fill();; ```; early in the `FIll` stack, maybe as soon:; ```; #6 0x7fcd22016441 in TBranchElement::FillImpl(ROOT::Internal::TBranchIMTHelper*) root/tree/tree/src/TBranchElement.cxx:1290; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8027#issuecomment-2080082428:161,perform,performance,161,https://root.cern,https://github.com/root-project/root/issues/8027#issuecomment-2080082428,1,['perform'],['performance']
Performance,"> Thank you for the improvements! Apart from the new comments here, please address [#6969 (comment)](https://github.com/root-project/root/pull/6969#discussion_r618406433); > ; > I'd still appreciate hearing your opinion on; > ; > > That's quite some code - much of that would be much better off being hosted by llvm :-/ Is it worth trying to move the RPath handling upstream?; > ; > Isn't there existing ""load that library"" code anywhere in llvm, that either already handles RPATH or would be better off having RPATH support?. Yes, that is further down the road, the idea for this is to become a high-performance, default`llvm::orc::DefinitionGenerator`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6969#issuecomment-845695225:405,load,load,405,https://root.cern,https://github.com/root-project/root/pull/6969#issuecomment-845695225,2,"['load', 'perform']","['load', 'performance']"
Performance,"> Thank you for the nice investigations. What are the next steps? I tried #13139 but that does not help us. I see a different memory profile, but the extra memory due to ROOT is stil around 70MB (even a bit more with that PR, AFAICT). Is that with or without opening the file? My expectation is that `root.exe -l -b -q` will take a lot less rss. > ; > Besides actually solving the module loading problem, I was wondering if there is not something pathological in some of the pcms. As a said Genetic.pcm, RooStats.pcm, ROOTDataFrame, MathCore seem to be particularly responsible for the increase of the TypesLoaded vector. Maybe we can get some gain already via some headers cleanups?. That's my feeling as well. Could you apply that patch and rebuild the dictionaries for the modules which have most types? Note that will probably print a lot of text on screen... ```diff; diff --git a/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp b/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp; index d0895a76df..21038e4eac 100644; --- a/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp; +++ b/interpreter/llvm-project/clang/lib/Serialization/ASTWriter.cpp; @@ -2866,6 +2866,7 @@ void ASTWriter::WriteType(QualType T) {; ; // Record the offset for this type.; unsigned Index = Idx.getIndex() - FirstTypeID;; + T.dump();; if (TypeOffsets.size() == Index); TypeOffsets.emplace_back(Offset);; else if (TypeOffsets.size() < Index) {; ```. Apologies for not being more helpful but currently I am in between some internal deadlines...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1624825735:388,load,loading,388,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1624825735,1,['load'],['loading']
Performance,> Thanks. Could you maybe check with the CI whether an update to the tbb version we currently use in master is working well?. Thanks for the comment. I updated the PR to do this. It's also important to note that there is no runtime performance change for major benchmarks such as RDF's in the master branch when changing the TBB version (it happened in May 2023).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13724#issuecomment-1736898626:232,perform,performance,232,https://root.cern,https://github.com/root-project/root/pull/13724#issuecomment-1736898626,1,['perform'],['performance']
Performance,"> That's what I was about to say, now the JIT takes the ownership of the `llvm::Module` and then, once it is done JITing, returns it back to the transaction.; > ; > I think what your patch is doing is that, it forces the JIT to run on the `llvm::Module` and return the ownership to the transaction. Maybe not the best in terms of performance, but we should review the entire model where we have Transaction holding a pointer to a `llvm::Module`... I would not say, that the ownership model is the problem in my case. I implemented the device interpreter not well. Most of the functions of the Class `IncrementalCUDADeviceCompiler` should be integrated in an inherited version of `cling::Interprerter`. I discussed this already with Axel [here](https://github.com/root-project/cling/pull/284#discussion_r330985700). So, if the implementation would be clear, the incremental executor should never executed in the device interpreter, because the device code is not direct execute. The code is indirect executed via library function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6385#issuecomment-777286355:330,perform,performance,330,https://root.cern,https://github.com/root-project/root/pull/6385#issuecomment-777286355,2,['perform'],['performance']
Performance,"> The PR somehow seems to die with some old memory corruption which I am pretty sure I fixed and I cannot reproduce anymore. Is there any need to clean some cache?. I cannot reproduce it either, but a number of Linux builds agree that the assertion can still be triggered. PRs should be built from a clean state (in Jenkins), but even if not you are not changing the on-disk format so incremental builds must also work correctly. This needs investigation. > Notice I have also submitted the patch to llvm itself and it passes their CI ([llvm/llvm-project#66430 (comment)](https://github.com/llvm/llvm-project/pull/66430#issuecomment-1720164026)). Very likely the pre-merge CI does not test a large scale module setup. You will have to test this yourself and prove that the changes don't regress the case when modules are used (almost) completely. This will be needed to convince the wider community that it is solving an actual problem, or at least not regressing the ""normal"" compiler use case.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1721001471:157,cache,cache,157,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1721001471,1,['cache'],['cache']
Performance,"> The ZeroMQ symbols is a good point, I'm not sure about that. How can we check for this?. Load your RooFit libraries, then do; ```; root [1] dlsym(0, ""zmq_version""); (void *) nullptr; ```; If that shows anything but `nullptr` then we have a problem. Inversely, we must protect your libzmq from user-libzmq semantic interposition. We need to build zmq in a special way, see https://github.com/root-project/root/pull/8204 on how to do that. Bottom line: please use the system zmq. If that is impossible to pull off, then don't use zmq. Else things get extremely involved. We cannot merge this as is; or e.g. ALICE will be unable to use ROOT: they use RooFit and zmq themselves.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8385#issuecomment-870468297:91,Load,Load,91,https://root.cern,https://github.com/root-project/root/pull/8385#issuecomment-870468297,1,['Load'],['Load']
Performance,"> The best would be for ROOT to be smart enough to lazily load the pcms when they are actually needed, not upfront. Yes, and unfortunately that is as good as it gets with the current infrastructure. Here I've put a bit more details about what could be improved to further reduce the memory footprint: https://github.com/cms-sw/cmssw/issues/41810#issuecomment-1578982627. Note that the loading of the pcm files is mmap-ed and is a no-op. The problem is that some sections of the PCMs are not lazy and they are eagerly deserialized. Using a PCH won't make the things much better since the PCH still deserializes eagerly some sections. That is, the deficiency is not in ROOT but in Clang itself. Could you rerun using `export ROOTDEBUG=7` and attach the output. Sometimes we lookup an identifier like `I` or something which is not found and it triggers deserialization of entities. That sometimes could be avoided.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1590819376:58,load,load,58,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1590819376,2,['load'],"['load', 'loading']"
Performance,"> The cache mechanics looks good, but I think we need to discuss it a little more:; > ; > * I don't think a thread-local page cache works. In `UnzipClusterImpl()` we allocate pages in (TBB) tasks.; > . Oh, you are absolutely right! I didn't thought enough about the implications of this; it might actually happen that pages are returned by a totally different thread (not TBB's). Simplest thing would be to go for a locked data structure (while trying to keep the critical section small). > * I think we should pass a pre-allocated page to `UnsealPage()` instead of the column id. That would result in symmetric appearance of the cache page allocator for allocation an deallocation. I agree that it would result in symmetric use; however, `UnsealPage()` has to reserve an additional buffer for unpacking the page, if needed. Thus, I would leave it as-is or pass a page allocator as an additional (maybe template) argument.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12279#issuecomment-1428033452:6,cache,cache,6,https://root.cern,https://github.com/root-project/root/pull/12279#issuecomment-1428033452,3,['cache'],['cache']
Performance,"> The first large gap (just before 4s) seems longer in the 'after'. Do we know where the other threads are stopped (and what the running thread does) both in the before and the after. Yes, that's the point at which `LoadClassInfo()` gets called. One thread works on that, while others are waiting for it to finish. That particular gap only happens once. > Do we know where (some of) the gaps are stopped in the main regime?. These stops are on the global lock at several points of the code, it's not a single type of wait. >> TBufferMerger random number generation test on my machine (Core i7 6700).; > Is that with or without the lock removed (both test are needed to get a clear view). I wanted to test the impact of your changes, so that means this branch against master (i.e., no, the lock was not removed). I will test with the lock removed tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1251#issuecomment-343755018:216,Load,LoadClassInfo,216,https://root.cern,https://github.com/root-project/root/pull/1251#issuecomment-343755018,1,['Load'],['LoadClassInfo']
Performance,"> The idea (of having the stress test run both compiled and interpreted) was to ensure that the code worked in both environment (i.e. that the interpreter is working for the syntax used here) **and** to monitor the performance differential (arguably the later has not been followed through). Wouldn't you agree, though, that this was an issue in cint times, but not any more in cling times?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6019#issuecomment-656544638:215,perform,performance,215,https://root.cern,https://github.com/root-project/root/pull/6019#issuecomment-656544638,1,['perform'],['performance']
Performance,"> The intent is the opposite. The RDirectory's internal representation and what it returns is a kind of shared_ptr. The user register the same name twice then if they hold a 'reference' to it, they keep and if they don't it is deleted. I do appreciate that as written it works and prevents a leak. New and delete have also worked for 20 years of root, and when written correctly do prevent leaks and get the job done, so there's no crisis of course. This offers a little more protection in some usages, but maybe new things to understand in others. I think stack-based lifetime management is simple, intuitive, encourages top-down code design and configuration, and avoids side effects. The smart pointer is interesting. It wasn't obvious to me that create would behave like shared_ptr::reset(), in the sense of allowing copies to persist (rather than redirecting some pointers they contain to the the new thing). . I kind of see a way now that it's possible to get the scalability (produce variable N plots at a time) without editing the PR routine. From my caller I'd need to call the subroutine, then do an RDirectory::Find() to get a shared pointer which will preserve the created thing, then call the routine again to get a new one. And if I still want to keep the first one for the interactive prompt, I have to make it global again with a new RDirectory::Add() of the contained thing, with a new name. So that cat can be skinned, but it's a bit comical compared to just passing the pointer, and certainly less obvious.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7305#issuecomment-795003958:970,scalab,scalability,970,https://root.cern,https://github.com/root-project/root/pull/7305#issuecomment-795003958,2,['scalab'],['scalability']
Performance,"> The last three commits are for Cling's CUDA support. It still doesn't fully work on my machine, but the errors are the same as `master` with LLVM 9 (complains about not finding symbols from `libcudart.so` even though that has been loaded; could be related to the CUDA version?) _without_ assertions that I see tripping on `master`. Do we know which setup used to work for these tests? Maybe I'll have to install older versions of CUDA... That sounds pretty good! I remember @SimeonEhrig mentioning some issues when loading the cuda library. . PS: if the cuda test state is the same as it is in the master maybe we can go off hunting the root test failures and eventually come back to cuda after?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1093338608:233,load,loaded,233,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1093338608,2,['load'],"['loaded', 'loading']"
Performance,"> The libTree.6.21.01.so libTree.so are the same library . And it would not (and should not) matter except that it _currently_ leads to the library being reloaded yet an additional time (for every macro that is loaded and uses TTree!!!). > If we decide that it won't ever reload (which I do not see issues with) . I think TSystem::Load should behave the same as dlopen (once upon a time it was a thin layer around it). . > we should reimplement the calls to gInterpreter->Load as it translates them to .L libName which reloads. Alternatively, we could check if the library changed and only reload it if it changed. There a case to be made for returning TSystem::Load to never reload while keeping gInterpreter->Load and "".L"" being the same (so TSystem::Load and gInterpreter->Load behaving differently). In my opinion "".L ...so"" (and thus gInterpreter->Load) have several possibilities but they are indeed intimately link to the behavior of "".L ....C"" and "".L ...C+"", so exhaustive list:. (1.a) never reload *.so, never reload *.C and *.C+; (1.b) never reload *.so only reload *.C and *.C+ when changed; (1.c) never reload *.so always reload *.C only reload *.C+ when changed (I think this was v5 behavior); (1.d) never reload *.so, always reload *.C and *.C+. (2.a) only reload *.so when changed, never reload *.C and *.C+; (2.b) only reload *.so when changed only reload *.C and *.C+ when changed; (2.c) only reload *.so when changed always reload *.C only reload *.C+ when changed ; (2.d) only reload *.so when changed, always reload *.C and *.C+. (3.a) always reload *.so, never reload *.C and *.C+; (3.b) always reload *.so only reload *.C and *.C+ when changed; (3.c) always reload *.so always reload *.C only reload *.C+ when changed ; (3.d) always reload *.so, always reload *.C and *.C+ (current behavior if I understood correctly). Note: CompileMacro was implemented with the ""only reload *.C+ when changed in mind). (2.b) has the minimal amount of unloading but consequently has an 'unpredi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-618962323:211,load,loaded,211,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-618962323,8,"['Load', 'load']","['Load', 'loaded']"
Performance,"> The overall pcm per header approach scales poorly in terms of performance because we get a lot more content duplication in the pcms that depend on them. In the early days I've tried that and did not work well, unless things have changed I'd be very cautious about going in that direction. Maybe, but this is what libc++ maintainers and Apple are going for. We have to fix ROOT for the recent XCode update, and this change allows us to go there. If you think another approach would be better, please provide a different solution that doesn't require us to enumerate all private std modules.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14903#issuecomment-1985330570:64,perform,performance,64,https://root.cern,https://github.com/root-project/root/pull/14903#issuecomment-1985330570,1,['perform'],['performance']
Performance,"> The problem I see is that we are not always in control of the order modules are loaded. I may take care that I first configure the pythonizations I need then load the classes I want, but if somebody loads those classes before importing my module, then the code relying on the pythonizations is broken in unpredictable ways. I see, thank you for pointing this out. Then I'll try to do something like this: before the pythonizor is registered, I can check what cppyy has cached in all the namespaces concerned by the pythonizor (cppyy stores class proxies in their namespaces the first time they are accessed). If I find some class proxy that matches the condition of the pythonizor, I run the pythonizor on that proxy. That should detect the classes that were already used before the pythonizor is registered and are concerned by the pythonizor. I'd also like to know your opinion on this discussion: https://github.com/root-project/root/pull/9128#discussion_r751289042 , thanks a lot!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9128#issuecomment-972801025:82,load,loaded,82,https://root.cern,https://github.com/root-project/root/pull/9128#issuecomment-972801025,4,"['cache', 'load']","['cached', 'load', 'loaded', 'loads']"
Performance,> The rdict file does not show performance benefits anymore and we are as good as having only a C++ module. @vgvassilev What scenario did we test it with to come to this conclusion? What was the performance gains in the old system on those scenarios and what is the performance difference in the new one? (Memory and run-time)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-440329756:31,perform,performance,31,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-440329756,3,['perform'],['performance']
Performance,"> There is a nice thread about performance of application of pythonisations, but it's independent from the approval I think. Sure, I'm just trying to understand why things are as they are.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2656#issuecomment-423923356:31,perform,performance,31,https://root.cern,https://github.com/root-project/root/pull/2656#issuecomment-423923356,1,['perform'],['performance']
Performance,"> There seems to be some problem with the new commit structure. Take for example this commit; > ; > [124dfb5](https://github.com/root-project/root/commit/124dfb5bf6ef077134458ef12bf8c6adfef41542); > ; > The title is; > ; > ```; > [tmva][sofie-gnn] Fix on loading required packages (sonnet, graph_nets) and restricting numpy version; > ```; > ; > But the diff is much larger than that. From the github diff I can see that commit practically touches all the files of the PR, not only the ones needed to `fix on loading required packages...`. Please revisit your commit layout and make sure each one only contains atomic changes, for the files touched by what the commit title/message say. I think the full commit message describes the changes for that commit that is a merge of several ones. This is probably the main change. I think it is difficult to describe in a line several things at the same time. If we want atomic commit we need to go back to 50 or more. I would not waste too much time on this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11208#issuecomment-1702812061:255,load,loading,255,https://root.cern,https://github.com/root-project/root/pull/11208#issuecomment-1702812061,2,['load'],['loading']
Performance,> This basically means we are loading the llvm libraries twice. This can happen by linking the llvm symbols to a library outside libCling for instance. After reading this again - we don't want to link libLLVM then? Then this might be an artifact of https://github.com/root-project/root/pull/12154 where I changed the linking of object to linking of target - I guess this leads to dependencies (i.e. libLLVM) being linked as well.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1661994062:30,load,loading,30,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1661994062,1,['load'],['loading']
Performance,"> This behavior is a **very significant** departure from the existing behavior (where, because the libraries were added to the link line, the library were never reloaded).; > ; > Reloading arbitrary depend library is never a good idea since they (are likely to) include static object that may do things that are **essential** to do only once (initialization, connection to db).; > ; > Technically CompileMacro could (as it does elsewhere) first check if the library is loaded.; > ; > But still several questions:; > ; > 1. Why is libTree listed twice in the list of depend library?. The libTree.6.21.01.so libTree.so are the same library -- one is linked to the other (forgot which way it was). The dependent symbol scanner currently does not work well with symlinks. This PR fixes it: https://github.com/root-project/root/pull/4717. > ; > 2. When should gSystem->Load automatically reload a library, if ever?. If we decide that it won't ever reload (which I do not see issues with) then we should reimplement the calls to `gInterpreter->Load` as it translates them to `.L libName` which reloads. Alternatively, we could check if the library changed and only reload it if it changed. > ; > ; > @Axel-Naumann @vgvassilev opinions?; > ; > PS. Even-though the set of test would be fixed by updating gSystem->Load and/or CompileMacro, the PR is still likely necessary for the case where CompileMacro generates a pcm (and thus need to support reload) or the case where the user explicitly unload a library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-618361118:469,load,loaded,469,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-618361118,4,"['Load', 'load']","['Load', 'loaded']"
Performance,"> This check is performed in theTProfile::Copy` function, . Such check must be introduced in all Copy methods in all classes.; To avoid such checks, I propose directly call method of appropriate class and do not use `virtual` interface.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10942#issuecomment-1203840133:16,perform,performed,16,https://root.cern,https://github.com/root-project/root/pull/10942#issuecomment-1203840133,1,['perform'],['performed']
Performance,"> This doesn't always happen, ... This actually quite concerning ... In the use case you show, there should be not practical difference as the filename should be strictly the same before and after the expand. (As opposed to load ""/eos/home-a/amadio/Run2012BC_DoubleMuParked_Muons.root"" vs ""$MY_EOS_DIR/Run2012BC_DoubleMuParked_Muons.root"" where the redirection would work only for the 1st one without the expansion). In the first strace, I see:. ```; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 79; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch//eos/us""..., 79) = 79; ```; vs; ```; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", NULL, 0) = 25; getxattr(""Run2012BC_DoubleMuParked_Muons.root"", ""eos.url.xroot"", ""root://eoshome-a.cern.ch/"", 25) = 25; ```; which ""seems"" to mean that goven the exact same input `getxattr` returns different result. Why would that be?. >More puzzling, here are two consecutive runs without changing anything (using expandedUrl):. That seems ""consistent"" with the ""inconsistent"" behavior I just talked about. So there is something wrong about `expandfilename` that we need to fix since:. (a) it is semantically necessary to call it; (b) it behaves oddly in this case but also probably also in other case without us knowing. so since we have a running failing example of the odd behavior we may as well investigate it now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11644#issuecomment-1311682016:224,load,load,224,https://root.cern,https://github.com/root-project/root/pull/11644#issuecomment-1311682016,1,['load'],['load']
Performance,"> This is a bug. The intent is for it to be found. (And 'usually'/'as-far-as-I-knew' it did, what is the 'new' circurnstances)?. New'circumstance is ""When we get a callback(that interpreter couldn't find mangled_name's definition) to TCling::LazyFunctionCreatorAutoload we'll load missing library"". The same thing is also done in pch. As far as I read, tuple<..> is not declared as it is and I wonder how TClass::GetClass can know tuple<> is declared or not in current infrastructure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2093#issuecomment-392932497:276,load,load,276,https://root.cern,https://github.com/root-project/root/pull/2093#issuecomment-392932497,1,['load'],['load']
Performance,"> This is something we can handle by batching submissions. If small ring sizes have a serious impact on performance then we might want to issue an error message, telling users to adjust their rlimit (and how) for much improved I/O performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6162#issuecomment-673314896:104,perform,performance,104,https://root.cern,https://github.com/root-project/root/pull/6162#issuecomment-673314896,2,['perform'],['performance']
Performance,"> This should be tested - I compile llvm13 branch, replace forward declaration in eve7 and add TJSONFile with nlohmann/json in header. It works, but makes lot of warnings. Indeed, placing `#include <nlohmann/json.hpp>` into one of the existing `io/` headers seems to work; but already with `master` / LLVM9. Maybe it's because RIO is ""special"" and loaded during generation of other modules? Anyway, adding the include to `tree/dataframe/inc/ROOT/RDataFrame.hxx` leads to the same errors during generation of `lib/modules.idx` (which btw is not recognized by the build system as an error...)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11130#issuecomment-1217534028:348,load,loaded,348,https://root.cern,https://github.com/root-project/root/issues/11130#issuecomment-1217534028,1,['load'],['loaded']
Performance,"> This test is with uncompressed data already. However, the bottleneck is not the merging process. Merging can go as fast as the output disk can write, which is the fastest we can do. What I see in profiles is a lot of time being spent creating and destroying task arenas for `TTree::Fill()`, as well as a lot of calculations of the pool size for the arenas and lots of context switches. I think we should focus on these parts first. Fair enough ; I had misunderstood where the memory mentioned in ""the total amount of used memory is still high since tasks are accumulating large chunks of data into the"" was located (and it is on the 'client/producer' side rather than the 'writer-to-disk' side). > we reuse zlib dictionaries, so the whole file is a single stream. Not that I know off. They are limited to each TBuffer/TBasket. > Nevertheless, this is dealing with data generation, so there are no pre-defined clusters. Yes and the chunking of the generation is determining the clusters size . Smaller clusters size means smaller basket which means smaller compression ratio (usually), smaller baskets also means more baskets which means more meta data (always). Smaller clusters means that the default TTreeCache size when reading the file will be smaler which means higher number of individual reads which means lower performance (especially over high latency links). Of course this is a trade-off; the gain from reducing the memory during the writing may offset the above mentioned loss but this is often challenging since the files are (usually) write once read many times. > spent creating and destroying task arenas for `TTree::Fill()`, as well as a lot of calculations of the pool size for the arenas and lots of context switches. This is a bit surprising. The TTree is supposed to be re-using as much as possible the memory chunk (both the compression buffer and the TBuffer) as much as possible. Maybe we are creating too many TTree objects and we could re-use some of them or maybe the re-u",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385#issuecomment-461138586:60,bottleneck,bottleneck,60,https://root.cern,https://github.com/root-project/root/pull/3385#issuecomment-461138586,1,['bottleneck'],['bottleneck']
Performance,"> Those cases could occur, but I think it is probably a misuse of the API. I have updated the test cases to include that. Let me know what you think; otherwise, as you said, we could just remove that possible per-column vector write optimization. That's a nice way to test it! Still, for reasons of maintainability I'd be more in favor of removing the per-column vector write optimization. It's quite some code that is most likely never executed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10775#issuecomment-1169652245:233,optimiz,optimization,233,https://root.cern,https://github.com/root-project/root/pull/10775#issuecomment-1169652245,2,['optimiz'],['optimization']
Performance,"> To be correct, gDebug (and it's replacement) should be an atomic. Depending on the performance impact of checking an atomic in that many places in ROOT, from potentially hundreds of threads, it might be good that gDebug is just an int...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6875#issuecomment-735627850:85,perform,performance,85,https://root.cern,https://github.com/root-project/root/pull/6875#issuecomment-735627850,1,['perform'],['performance']
Performance,> To be honest I am not sure if this is the right change to do. . I am sure it is pure workaround and not a solution. . For now I have no clue how to make in all situations main thread id assigned properly. ; As I mentioned - maybe for python we could agree to initialize it when PyROOT libraries are loaded. ; In best case it should be assigned at the place where `gROOT` is initialized - but this can have too many side effects.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15825#issuecomment-2162951237:301,load,loaded,301,https://root.cern,https://github.com/root-project/root/pull/15825#issuecomment-2162951237,1,['load'],['loaded']
Performance,"> To suppress them, one need to initialize array:. Note that this code path is 'performance critical'",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7430#issuecomment-799492256:80,perform,performance,80,https://root.cern,https://github.com/root-project/root/issues/7430#issuecomment-799492256,1,['perform'],['performance']
Performance,"> Using the same file in multiple tests is never good, they might run concurrently. You are right, I changed the filename in the latest commit :+1:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8740#issuecomment-896015112:70,concurren,concurrently,70,https://root.cern,https://github.com/root-project/root/pull/8740#issuecomment-896015112,1,['concurren'],['concurrently']
Performance,"> Very good. How did you notice?. The `cmake` configure output didn't show the options that I was expecting, in particular `-std=c++17` for macOS... The `CMAKE_BUILD_TYPE` override isn't really nice because we are changing it behind the script's back; it would be nicer if the binary cache was also put into the correct directory, right now it's always `RelWithDebInfo`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14108#issuecomment-1826088590:284,cache,cache,284,https://root.cern,https://github.com/root-project/root/pull/14108#issuecomment-1826088590,1,['cache'],['cache']
Performance,"> We can do something like this and try not to invoke this with true, but it doesn't solve any problems. . I agree that it does not solve the problem as the user that invokes this function is likely to want to be informed about **all** methods and so would call it always with ""load==true"". > Ideally we want to remove all methods like this (GetNmethods, GetListOfMethods, GetListOf... ) . I disagree that we should. Those are valid operations that are have no possible replacement; for example when wanting to print to the screen the list of all methods. What we need to do is to look at their **usage** and see if they can be replaced by something else (for example when an iteration through the methods can be replaced by a lookup). Note that in the case of the code in binding/pyroot, you would first discuss with @etejedor as this code may soon be replaced by a new version/implementation that has different characteristics.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1743#issuecomment-373084155:278,load,load,278,https://root.cern,https://github.com/root-project/root/pull/1743#issuecomment-373084155,1,['load'],['load']
Performance,"> We can plan to support it if needed. It might take a little bit of time, since we need to support in SOFIE sequence of tensors which are the output of Split. For which type of model do you need Split?. I want to convert my model to the raw code to improve the prediction speed. As I saw from your slide the raw code generated through tmva has better performance than the original onnx runtime.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10360#issuecomment-1923779469:352,perform,performance,352,https://root.cern,https://github.com/root-project/root/issues/10360#issuecomment-1923779469,1,['perform'],['performance']
Performance,"> We have this standard tutorial: https://root.cern/doc/master/canvas2_8C.html; > Without your change the axis titles appear as you see on the reference guide online.; > With your change all the titles disappear. Ok I've just run this demo, thanks for pointing me to it, and yes I confirm with my fix the titles disappear. But that was only because an offset of ""5"" was now too big, so I reduced it to ""1"" and they reappear. But I see now that the way they reappear for the x-axis is great but for the y-axis they depended on the height of the pad, so I concede that the fix as it stands isn't going to giver desirable behaviour. I think what I was trying to achieve here was a title offset that scales sensibly with the label offset, so that you dont have to tune the title offset for each pad size you work with. For example, if I take the histogram from the example and plot it to its own canvas in current ROOT, suddenly the offset of 5 is way too big and the titles disappear. I tried the following which seems to work well. ```; charheight /= (gPad->GetWh()*((x1==x0) ? gPad->GetAbsWNDC() : gPad->GetAbsHNDC()));; ```. With this change, and making the titleoffsets in the example=1, things look pretty, and also if I plot the histogram to its own canvas the same offsets then things still look good. . See the attached screenshot. The plots on the left are existing ROOT and note the title offsets are 5 in both cases, so ok for top left but no good for bottom left. But with the line above in TGAxis, title offset of 1 in both cases looks pretty reasonable to me. But I appreciate this is a change in behaviour that may be undesirable. I dunno, what are your thoughts?; ![Screenshot 2021-05-25 at 15 41 38](https://user-images.githubusercontent.com/18280829/119517952-fb4bcb00-bd6f-11eb-86fc-7829ba2c4191.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8235#issuecomment-847929734:760,tune,tune,760,https://root.cern,https://github.com/root-project/root/pull/8235#issuecomment-847929734,2,['tune'],['tune']
Performance,"> We measured that sweeping a dataset with 59 files on eos within CERN network checking entries numbers in trees took ~.3s per file. Isn't this perf hit too large?. I am not 'too' worried about the user side (albeit, some TChain may have 1000s of files) but on the server side (i.e. trying to avoid a denial-of-services attack on the server). I still strongly recommend that we do not open all the files at once we 'stop'/'throttle' once you reach the number of task/threads you are going to have (then take a pause, start the actual tasks/jobs and then restart 'slowly' to get the rest of the information).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3051#issuecomment-442089455:423,throttle,throttle,423,https://root.cern,https://github.com/root-project/root/pull/3051#issuecomment-442089455,2,['throttle'],['throttle']
Performance,"> We need to break the total run into more tasks or call `Write()` more often to further reduce memory usage. Wouldn't that reduce the cluster size and hence decrease compression ratio and likely overall read performance of the produced files?. We may also want to speed up the merging process (if I am remembering correctly the current bottleneck is likely the uncompression and unstreaming of the input TTree, if we could find a way to avoid having to do that ... maybe 'just' not compressing the TTree in the TMemFile might help [yes at the cost of memory but ...])",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385#issuecomment-461114793:209,perform,performance,209,https://root.cern,https://github.com/root-project/root/pull/3385#issuecomment-461114793,2,"['bottleneck', 'perform']","['bottleneck', 'performance']"
Performance,"> We should always give the most performant version to users (even those who pick up a ROOT build with `-march=...`). For experts we need to have a way to select a certain computational library, but I'm convinced that this should not be at configure time - again, to ensure that users get exposed to the most performant version. We have this, if they set `RooFit.ComputationLibraryArch=<arch>` in .rootrc they will get what they ask for. If they don't set it at all then the default is auto, which selects the best library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7415#issuecomment-793966296:33,perform,performant,33,https://root.cern,https://github.com/root-project/root/pull/7415#issuecomment-793966296,2,['perform'],['performant']
Performance,"> We try to keep ROOT platform independent, this isn't helping :-/ I'll merge this as a stop-gap solution, but I'd like you @ferdymercury and @pcanal to consider reverting this feature. I am not sure I have seen any discussion on motivation, and why the use of e.g. tbb isn't a more appropriate solution. Hi, the discussion is here: https://root-forum.cern.ch/t/performance-effects-in-a-root-based-data-acquisition/45519/3, I am developing a 40Gbps DAQ system where readout performance is critical to not lose data. Depending on which CPU the DAQ thread is located, the readout is fast enough to not lose any data. That's why setting CPU affinity was proposed. Without it, some readouts were not fast enough to catch up with the data rate. I do not know about TBB, thus not sure if it would be better or worse. In any case, I am not a thread expert, so if there is a better solution, I would be happy to try it instead of the current attempt with CPU affinity. Just as a side note, for my application, I do not need highly parallel tasks, I just need two threads (one for the GUI, one for the DAQ). If I do not set the affinity, Linux puts them both on the same CPU and thus the DAQ readout performance is reduced. (That being said, it's true that this feature could be expanded to Windows and MacOS, however I do not have any of these OS to test it.)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8563#issuecomment-870438974:362,perform,performance-effects-in-a-root-based-data-acquisition,362,https://root.cern,https://github.com/root-project/root/pull/8563#issuecomment-870438974,3,['perform'],"['performance', 'performance-effects-in-a-root-based-data-acquisition']"
Performance,"> We're already adding `-fno-semantic-interposition` since commit [e564c8a](https://github.com/root-project/root/commit/e564c8a04feb2b6fa18a2f429d8fb5a103825a34) / PR #8204 which I _think_ should already set the visibility such that LLVM symbols are hidden from other libraries. Did you recently test a `master` build or 6.24/02?. Interesting. From my understanding of g++ document, this flag with accidentally solves the problem if the compiler optimize the code by in-lining it but it is not guarranted. In addition it can create confusing situations where the problem disappears as soon as you try to debug it using the debugged version of the code. That said, we are in a confusing situation, as I'm not able to reproduce the problem as soon as I recompile ROOT. Nevertheless, I recompiled many time ROOT last week, and then the problem was systematic. It could be that it is due to the ROOT code version I used. The problem is there for LCG100 which used ROOT 6.24/00, but not for `/cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.24.02/x86_64-centos7-gcc48-opt/`. So it would confirm that `-fno-semantic-interposition` has solved the problem if it has happened between the two versions. Nevertheless, as I wrote before, in my understanding, it's accidental and won't be as reliable as the -Bsymbolic option. Philippe.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8717#issuecomment-885033654:446,optimiz,optimize,446,https://root.cern,https://github.com/root-project/root/pull/8717#issuecomment-885033654,1,['optimiz'],['optimize']
Performance,"> What about another overload taking an std::string?. The performance gains of skipping a string construction would be almost non-existing (both STLs have small-string optimizations so this is not even a heap allocation in most cases), and this function is not called in a hot loop and it might even invoke the interpreter.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7060#issuecomment-765318984:58,perform,performance,58,https://root.cern,https://github.com/root-project/root/pull/7060#issuecomment-765318984,2,"['optimiz', 'perform']","['optimizations', 'performance']"
Performance,"> What did you check, and what worked? Did you build a module? For me, LLVM 9 and LLVM 13 give the same result: including json.hpp into a header in one module is fine, merging from multiple modules doesn't work in either version. I compile with llvm13 and directly include json.hpp in REve classes and can load and use it. ; But I did not try to use json.hpp from several libraries - may be this makes problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11268#issuecomment-1245018324:306,load,load,306,https://root.cern,https://github.com/root-project/root/pull/11268#issuecomment-1245018324,1,['load'],['load']
Performance,"> What does ""hard linked"" mean? Using explicit linking?. Yes, I meant explicit linking. > rootcling will list all loaded libraries in the existing session and. If I remember correctly, it is passed a rootmap file which is then leverage to obtains (from cling) the actual symbol and thus actual library needed and then issue a list of library needed. This is used to at least load the depend library that has not been loaded yet and is (or should be/could be) used to limit the explicit linking. > y the visiting the undefined symbols when the library is loaded. Humm that is a challenge as rootcling can not load any libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605537324:114,load,loaded,114,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605537324,5,['load'],"['load', 'loaded']"
Performance,"> What is root-io-pcm? Do you mean rdict.pcm?. Yes. > I once tried to kill rdict.pcm for modules like we're doing here for rootmap, but it made no difference for the performance. What test did you run? What did you measure?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-435211605:166,perform,performance,166,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-435211605,1,['perform'],['performance']
Performance,"> What is the change (increase of the cache size or explicit cache learning or both)?. Doing the caching at all. I thought prefetching was part of it, but apparently it is not.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2407188475:38,cache,cache,38,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2407188475,4,['cache'],['cache']
Performance,"> What is this error in readTotemNtuple? eyes. It's always been there, the file contains classes that are not known to ROOT and opening it triggers complaints from TClass. The test in roottest always expected them, but during the first execution https://github.com/root-project/roottest/pull/995 . In the sibling PR I am removing the warning from the `.ref` file because since for this PR I use `RIgnoreErrorLevelRAII` there shouldn't be any output to stderr. And in fact on my workstation the test passes correctly, but somehow jenkins doesn't agree with me... Btw, note that this kind of warning is very common, it's enough to have some dataset with classes coming from an external library (e.g. CMSSW) that is not loaded during the execution of the RDF program",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13090#issuecomment-1658748624:717,load,loaded,717,https://root.cern,https://github.com/root-project/root/pull/13090#issuecomment-1658748624,1,['load'],['loaded']
Performance,"> What should we do for TChains? Override that calculation so that it errors out?. Humm .. i think it somehow get delegated to the underlying TTree. > But it's not super cheap, . it should be a one time (per TTree) cost in the case where the user did not specify the cache size and fAutoFlush is to zero (because after that the CacheSize is set). > add a TTree method that evaluates that thing and call it from TTree::GetCacheAutoSize. I would do that. Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8714#issuecomment-890428321:267,cache,cache,267,https://root.cern,https://github.com/root-project/root/pull/8714#issuecomment-890428321,2,"['Cache', 'cache']","['CacheSize', 'cache']"
Performance,"> What's the performance impact of [#6671 (comment)](https://github.com/root-project/root/issues/6671#issuecomment-791443564)? I guess that's the question. Otherwise, I'd be all in!. A warning would be helpful indeed, but maybe only for the first time this happens? Just to avoid getting 1000 lines printed out in the terminal. Just as a side note, there is another TTree.Draw bug out there concerning double (or ULong) precision / failing silently as in this issue:; https://sft.its.cern.ch/jira/browse/ROOT-8009",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6671#issuecomment-799651042:13,perform,performance,13,https://root.cern,https://github.com/root-project/root/issues/6671#issuecomment-799651042,1,['perform'],['performance']
Performance,"> Why this error doesn't happen in the single-threaded regime?. I could not figure out exactly the chain of events that caused that error, so the most correct answer is ""I don't know"". _But_ the error has to do with loading a new tree, which RDF worker threads do all the time (each thread processes many tasks, each task runs through a batch of events, and when a new task starts it loads the tree it needs) -- in the single-thread version there is no TTree-loading happening other than at the very beginning (when both main tree and friend tree are well-behaved).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9106#issuecomment-944334705:216,load,loading,216,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944334705,3,['load'],"['loading', 'loads']"
Performance,"> With this patch (as is), we seem to no longer support an asynchronous merging. I.e. if the user would like to have TBufferMerger::Push (always) return 'immediately' and have the work done in parallel of the pushing thread continuing to work. Yes, now the merging is done by the worker threads/tasks themselves. This is necessary to avoid oversubscription, which happens if we launch the extra thread for merging. Only one worker will be ""blocked"" at a time, unless data production is faster than what the disk can take, in which case blocking the workers is good to keep memory consumption down instead of letting it growing it indefinitely. As is, this actually has improved slightly the performance for the same number of workers. I think that this is the best way to satisfy the requirement by CMS. I will measure performance again in several setups as a follow up to these changes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1737#issuecomment-372715116:691,perform,performance,691,https://root.cern,https://github.com/root-project/root/pull/1737#issuecomment-372715116,2,['perform'],['performance']
Performance,"> Would it be possible to create the libraries from the main thread only, before starting the ""worker"" threads?; > P.S.: Currently all libraries have the same function - is that fine?. Sure, I added another test that creates one shared library per thread before starting execution. Each shared library contains different code (same function body but the function name is changed). Each thread then `Load`s/`Unload`s its own different library.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13348#issuecomment-1659062317:399,Load,Load,399,https://root.cern,https://github.com/root-project/root/pull/13348#issuecomment-1659062317,1,['Load'],['Load']
Performance,"> Wouldn't that reduce the cluster size and hence decrease compression ratio and likely overall read performance of the produced files?. According to @Axel-Naumann, we reuse zlib dictionaries, so the whole file is a single stream, which means that this shouldn't be a problem. Nevertheless, this is dealing with data generation, so there are no pre-defined clusters. > We may also want to speed up the merging process (if I am remembering correctly the current bottleneck is likely the uncompression and unstreaming of the input TTree, if we could find a way to avoid having to do that ... maybe 'just' not compressing the TTree in the TMemFile might help [yes at the cost of memory but ...]). This test is with uncompressed data already. However, the bottleneck is not the merging process. Merging can go as fast as the output disk can write, which is the fastest we can do. What I see in profiles is a lot of time being spent creating and destroying task arenas for `TTree::Fill()`, as well as a lot of calculations of the pool size for the arenas and lots of context switches. I think we should focus on these parts first.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3385#issuecomment-461133086:101,perform,performance,101,https://root.cern,https://github.com/root-project/root/pull/3385#issuecomment-461133086,3,"['bottleneck', 'perform']","['bottleneck', 'performance']"
Performance,"> Wow, this looks worse than my original patch. But it shows these errors are build time errors instead of runtime errors. It is slightly odd to me. Yes, it fails during ROOT's build but already in a stage where we are running some built tools to build our modules. This involves loading modules of dependent libraries, so it will trigger the template specialization loading logic.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1972843020:280,load,loading,280,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1972843020,2,['load'],['loading']
Performance,"> Yes, that's the point at which LoadClassInfo() gets called. One thread works on that, while others are waiting for it to finish. That particular gap only happens once. One thing I would like to explore is why it is (or seems to be) larger in the new case and why there is additional waits 'just' right after.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1251#issuecomment-343762725:33,Load,LoadClassInfo,33,https://root.cern,https://github.com/root-project/root/pull/1251#issuecomment-343762725,1,['Load'],['LoadClassInfo']
Performance,"> You added XRD_LOGLEVEL=Debug to previous jobs already, e.g. https://bigpanda.cern.ch/job?pandaid=4925837464 [lcg-se01.icepp.jp:1094] Found 1 address(es): [::ffff:157.82.116.96]:1094 ; > […](#). OK, right. Sorry about the comment. I guess I was looking at the libs loaded comments in this output. So you're saying that there is nothing useful in this debug output?. see you, RD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-757974177:266,load,loaded,266,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-757974177,1,['load'],['loaded']
Performance,"> [1965517:tpc-tracker]: i= 2, mPadSubset type= 23, offset= 56, len=2, method=0 [optimized]; > as I would have expected it to be len=1. Can you explain me what is going on?. If the next data member (which should not be listed right after it) is of the same type, `TStreamerInfo` will collate them (note the `optimized` part).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16312#issuecomment-2332279496:81,optimiz,optimized,81,https://root.cern,https://github.com/root-project/root/issues/16312#issuecomment-2332279496,2,['optimiz'],['optimized']
Performance,"> ```; > root [4] func(&a); > IncrementalExecutor::executeFunction: symbol '_ZN11__cling_N514funcEPN11__cling_N523ABCE' unresolved while linking [cling interface function]!; > You are probably missing the definition of __cling_N51::func(__cling_N52::ABC*); > Maybe you need to load the corresponding shared library?; > ```; This pull request improves the situation; cling now emits a diagnostic; ```c++; root [4] func(&a); ROOT_prompt_4:1:1: error: no matching function for call to 'func'; func(&a); ^~~~; ROOT_prompt_1:1:6: note: candidate function not viable: no known conversion from '__cling_N52::ABC *' to '__cling_N50::ABC *' for 1st argument; void func(ABC*) {}; ^; ```; meaning: function `func()` takes a different version of `class ABC` (for which you provided a different definition in a following step). Despite the sequence you described being valid C++, if definition shadowing is enabled (as per the current implementation), you need to also redefine the function so that the type of the first argument is that of the latest definition of `class ABC`:; ```c++; root [5] void func(ABC*) {}; root [6] func(&a); ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9782#issuecomment-1030227274:277,load,load,277,https://root.cern,https://github.com/root-project/root/pull/9782#issuecomment-1030227274,1,['load'],['load']
Performance,"> a meta-question might be whether we should veto these tutorials on all but the fastest of our testing platforms, i don't know how many more multi-thread multi-minute tutorials we can add before nightlies and incrementals become noticeably slower. If you label them `longtest`, they are skipped on a lot of machines. The `multicore` e.g. will run them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6107#issuecomment-667198665:142,multi-thread,multi-thread,142,https://root.cern,https://github.com/root-project/root/pull/6107#issuecomment-667198665,1,['multi-thread'],['multi-thread']
Performance,"> and ~~be done with it~~ never protect TFile::ReadProcessID. Thus obviously leading to random crash (simple conclusion from reading the code). > TTreeProcessorMT::Process respects (and if not, it's a bug and not intentional) the ""one file, one thread"" rule. As I rediscovered the protection are for that case. . From what I can infer the ""limitation"" of the protection to 'just' the TTreeProcessorMT::Process is a bad thing. So I propose:. - Remove TParTreeProcessingRAII and friends; - Replace R__RWLOCK_ACQUIRE_WRITE/READ by the regular R__WRITE/READ_LOCKGUARD; - Remove fgRwLock; - Refind test case containing and using TRef or TRefArray (thus exercising TFile::ReadProcessID and co); - Test with both TTreeProcessorMT::Process and RDF. @etejedor Do you still have (and/or remember) the test files you used to develop/test this code?. [Comment left on queue for a while :( ]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-610506869:856,queue,queue,856,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-610506869,2,['queue'],['queue']
Performance,"> but that scripts worked before, they were not shell dependant. That's weird. Yes, but I added the multi-threading capability now, so it has been changed a bit. ![image](https://user-images.githubusercontent.com/10653970/159881470-9a8f123d-634e-4fa9-8236-2c833c60bcf7.png)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9966#issuecomment-1077397237:100,multi-thread,multi-threading,100,https://root.cern,https://github.com/root-project/root/pull/9966#issuecomment-1077397237,1,['multi-thread'],['multi-threading']
Performance,"> but the same callback; might be invoked concurrently by different worker threads if implicit multi-threading; is enabled. As far as I can tell this requires the user code to be thread safe, which does not seem to be the case of the example. Also, in the blur, in it is not clear whether the call back will see the global partial result or the partial result so far on the 'current' thread. The case 'global partial result' requires merging of the thread's histograms in the case there is one histo copy per thread/worker.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331163715:42,concurren,concurrently,42,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331163715,4,"['concurren', 'multi-thread']","['concurrently', 'multi-threading']"
Performance,"> by gSystem->Load. Calling dlopen and dlsim do the same job. Note that the 2 are not completely functionally equivalent. TSystem::Load does 2 additional things:. (a) Load any dependent libraries (as provided by a rootmap files); (b) Check that the version of ROOT used to build the library is the same as the version of ROOT running. (a) is necessary in the case the user is not using explicit linking for their own library. (b) is 'nice' to have to avoid having to debug 'bad' builds. If neither of those features are needed, it ought to be explain why in at least the commit log. Also, it seems that the code may have changed but the commit log has not yet been changed (as the code does not use dlopen or dlsym, at least not directly but seem to use functions from DynamicLibraryManager). > Segfaults in runtime_cxxmodules nightly was caused by recursive "".x"" handling by gSystem->Load. Why is this seen only in the cxxmodule case? . Thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394462603:14,Load,Load,14,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394462603,4,['Load'],['Load']
Performance,"> cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory; > Error in <TInterpreter::TCling::AutoLoad>: failure loading library libASImage.so for TASImage; > cling::DynamicLibraryManager::loadLibrary(): libAfterImage.so.0: cannot open shared object file: No such file or directory. A workaround to solve this is to do sudo apt install libafterimage0-dev, then it should work with the precompiled binary. (In the meantime, this issue will be solved in the next release, see https://github.com/root-project/root/pull/14402). So for the moment, I would suggest to try to go download the precompiled binary from the website, and install that missing dependency.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14479#issuecomment-1916342665:32,load,loadLibrary,32,https://root.cern,https://github.com/root-project/root/issues/14479#issuecomment-1916342665,3,['load'],"['loadLibrary', 'loading']"
Performance,"> could we set the cachesize to a better value than the autoflush default of ~30MB?. Yes, you could use the `median` of `fClusterSize` (weighted by the number of cluster, which is encoded in `fClusterRangeEnd`, see `TTree::Print` for usage example) [`median` (or something higher) is better here than the average as we want to the size to cover most cluster (the average is likely to be slightly too small)]",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8714#issuecomment-885149827:19,cache,cachesize,19,https://root.cern,https://github.com/root-project/root/pull/8714#issuecomment-885149827,1,['cache'],['cachesize']
Performance,> disable the callback when we're instantiating templates. As long as we do before hand the side effects. ie seeing `templateclass<MyClass>` we need to load the module for `MyClass` first.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11514#issuecomment-1284262373:152,load,load,152,https://root.cern,https://github.com/root-project/root/pull/11514#issuecomment-1284262373,1,['load'],['load']
Performance,"> e.g. LHC experiments, of this change in case something behaves differently in that context. This move is necessary for the Python environments but there is a clear limitation in its current form, that is it breaks the usage of TPython from C++:. ```; root.exe -l -b -q -x -e 'TPython::Exec(""print(\""1 + 1 =\"", 1+1)"")'. cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.so, 0x0009): symbol not found in flat namespace '_PyBool_Type'; Error in <AutoloadLibraryMU>: Failed to load library /Users/vpadulan/Programs/rootproject/rootbuild/master-4e3ca10195-pyroot-debug/lib/libROOTTPython.socling JIT session error: Failed to materialize symbols: { (main, { __ZN7TPython4ExecEPKc }) }; ```. This is not surprising, we are purposely removing the linking against libPython so TPython cannot find the symbols. From within a Python interpreter, libpython is automatically injected and linked at the global scope, but that doesn't happen when a symbol from libpython is needed from an executable outside of Python itself. Bottom line, we will need to investigate how to properly manage both the requirements of Python packaging systems and embedding libpython in other cases.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15891#issuecomment-2180639835:351,load,loadLibrary,351,https://root.cern,https://github.com/root-project/root/pull/15891#issuecomment-2180639835,4,['load'],"['load', 'loadLibrary']"
Performance,"> has to do with these issues?. Nothing. You are right. I completely misread the text when responding. TLDR: Read just the last paragraph. > Can you expand what a seemingly broken test design. Can you tell me what is broken in the test design?. It is testing a ""natural"" control flow for a REPL:; ```; First Load a bunch of stuff that, in this case, include a forward declaration. Second do:; if (some entity (directly or indirectly) that happens to have a forward declaration is not defined yet); load the definition for the entity.; ```; (here the entity is `std::pair<int, Inner<int>>` and the forward declared type is `Inner<int>`). The test is properly revealing that (as described by Jonas) this pattern is now broken because some intermediary template does not get recalculated or reinstantiated when the definition is loaded. One could be tempted to 'improve' the test with a less intrusive way of checking but this would likely render the test useless for its intended purpose. In the real use case those same test are buried deep in the Core/Meta and I/O and should then be changed there too (assuming it is 'possible' to do so). For more details on the original problem see: ; https://sft.its.cern.ch/jira/browse/ROOT-7462; and detailed analyis:; https://github.com/root-project/roottest/blob/master/root/meta/ROOT-7462/README; ; So most likely than not we need to find a way to solve this within Cling and/or Core/Meta. One hint is that the reproducer symptoms as described by Jonas seem familiar. For example, it shows a failure to instantiate the template `std::is_default_constructible_v`. When this is triggered by Core/Meta/Cling, eg `ClassInfo` the error is (supposed to be) supressed **AND** the failed template instantiation is supposed to be cleaned up and removed. It seems that the problem might be that with Clang16 some side-effects of the failed instantiation are no longer fully removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13815#issuecomment-1756311089:308,Load,Load,308,https://root.cern,https://github.com/root-project/root/issues/13815#issuecomment-1756311089,3,"['Load', 'load']","['Load', 'load', 'loaded']"
Performance,"> how is the size of the queue usually determined? We seem to use here values of 4 or 8 but is there a systematic approach in finding a good/feasible value?. I do not understand whether the size of the ring affects performance meaningfully (my guess is no). We probably have a hard limit in the neighbourhood of 1024 files because the ring uses a certain amount of `memlocked` memory. . I say a hard limit because we probably don't want our users to have to adjust these settings, and we can batch submit calls when the number of files is larger than the ring size. From the liburing [readme](https://github.com/axboe/liburing/blob/332a17f3d9e4a34e9dacc42f11ba5bc3fcf4cc0b/README#L22-L25): . > io_uring accounts memory it needs under the rlimit memlocked option, which; > can be quite low on some setups (64K). The default is usually enough for; > most use cases, but bigger rings or things like registered buffers deplete; > it quickly. root isn't under this restriction, but regular users are. Going. If I run this code:; ```c; #include <stdio.h>; #include ""liburing.h""; #include ""liburing/io_uring.h"". int main(int argc, char* argv[]) {. int num_files = 1;; struct io_uring ring;; while(!io_uring_queue_init(num_files, &ring, 0)) {; io_uring_queue_exit(&ring);; num_files++;; }; perror("""");; printf(""queue init failed at %d files\n"", num_files);; return 0;; }. ```; we can see this in action: ; ```shell; $ ./ring_size ; Cannot allocate memory; queue init failed at 1079 files; $ ./ring_size ; Cannot allocate memory; queue init failed at 851 files; $ ./ring_size ; Cannot allocate memory; queue init failed at 992 files ; ```. ```shell; sudo ./ring_size; Cannot allocate memory; queue init failed at 9343 files; ```; These are all being rounded up to the next power of two. . By default the completion queue size is twice that of the submission queue (what we specify in the setup call). Before kernel 5.5., this means we run the risk of overflowing the completion queue buffer if we keep submitti",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5919#issuecomment-658821831:25,queue,queue,25,https://root.cern,https://github.com/root-project/root/pull/5919#issuecomment-658821831,2,"['perform', 'queue']","['performance', 'queue']"
Performance,"> if I run with ctest --output-on-failure -R roottest-root-dataframe then tests pass. See my comment in the other issue: I did not manage to reproduce the problem outside of ctest and without running multiple tests concurrently -- it also seems that one of the tests ""has"" to be roottest-root-dataframe-test_snapshot_manytasks. > I guess some test dependencies may be missing?. why would a missing dependency make the test _pass_ if it's run alone and fail if it's run together with others?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-823937084:215,concurren,concurrently,215,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-823937084,1,['concurren'],['concurrently']
Performance,"> is a custom memory allocator used in ROOT to output more information about memory pressure. This is not the only purpose. The other purpose is to allow the use of shared memory for inter process communication. > the functionality of libNew is only available in rootn.exe and libNew is statically linked to the binary. This is not the only usage. > we should make it a static library. This is backward incompatible. Having it as a static library means that you must link libNew against every single library that will be using it (as opposed to allowing other possible way to use it, including LD_PRELOAD). Besides, having it as a static library does eliminate the broken case described above (it is just delayed until a library linked against libNew is loaded). That said, libNew should be excluded from any auto-loading mechanism and should only be loaded/linked explicitly by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4722#issuecomment-571236827:754,load,loaded,754,https://root.cern,https://github.com/root-project/root/pull/4722#issuecomment-571236827,3,['load'],"['loaded', 'loading']"
Performance,"> isn't that what an xrootd server does?. They don't have infinite resources either :). > or possibly something smarter. Definitively the way to go .... :). > I would still argue that all of this is beyond the scope of this PR -- which is meant to go back to the same, sane state of v6.14. Fair enough. However a final note. In its first implementations, TChain was doing exactly that but we had to stop (and introduce GetEntriesFast) because it was too slow. For example, a number was quote earlier (~.3s) that is 'small' looking but I have to assume that this number is for a low latency link (CERN to CERN maybe) to a high quality server with 'small' TTree objects. We will eventually have to measure the cost for large chains (1000s files) through a high latency link (to a crummy server) with 'large' TTree objects [aka worst case scenario] so that we have a better picture of the trade-off that we are choosing to make.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3051#issuecomment-442110156:582,latency,latency,582,https://root.cern,https://github.com/root-project/root/pull/3051#issuecomment-442110156,2,['latency'],['latency']
Performance,"> it still seems to target all possible archs. Uh, I missed the most important case of `freebsdamd64`. Should be fixed with the most recent push, maybe you can try another round of (only) `cmake` after the build finished (it's an optimization only).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14115#issuecomment-1827355195:230,optimiz,optimization,230,https://root.cern,https://github.com/root-project/root/pull/14115#issuecomment-1827355195,1,['optimiz'],['optimization']
Performance,"> it would at least give you a warning to be careful with external LLVM. I don't see how it would! It:; - check for a visible llvm symbol; - then loads libCling. If the external llvm was built with visible symbols then the check would be happy. If you have a tool that you link yourself against llvm then it would barf if that your-llvm had exported symbols. But now: so what, not an issue. Summary: I understand that you believe that there is something to check, but I don't see how it relates to *this* check? David - what's the *second* llvm that you are dealing with? There's that of libCling, but there must be a second one that was linked against your binary or else you'd not see the warning. You did you link against libCling?!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4736#issuecomment-572082033:146,load,loads,146,https://root.cern,https://github.com/root-project/root/pull/4736#issuecomment-572082033,1,['load'],['loads']
Performance,> libNew depends on libCore. If you use LD_PRELOAD I am quite sure libCore will be loaded beforehand . Using libNew for libCore (and the MemCheck usage) is only one of the usage. Another one is the use of TMapFile and support for allocation within a shared memory block.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4722#issuecomment-571305757:83,load,loaded,83,https://root.cern,https://github.com/root-project/root/pull/4722#issuecomment-571305757,1,['load'],['loaded']
Performance,"> macro fails if `${ROOTSYS}/test` is not in the include path.. games.C seems to do that already in my case, see below:; ```. /opt/root_bld/tutorials/gui $ root -l; root [0] .include; root [1] Int_t st1 = gSystem->Load(""$(ROOTSYS)/test/Aclock"");; root [2] st1; (int) 0; root [3] Int_t st2 = gSystem->Load(""$(ROOTSYS)/test/Hello"");; root [4] Int_t st3 = gSystem->Load(""$(ROOTSYS)/test/Tetris"");; root [5] st2; (int) 0; root [6] st3; (int) 0; root [7] .include; (...); /opt/root_bld/test/; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7184#issuecomment-778230588:214,Load,Load,214,https://root.cern,https://github.com/root-project/root/pull/7184#issuecomment-778230588,3,['Load'],['Load']
Performance,"> not really, but maybe I don't understand the question. what problems would you expect?. I'm thinking of a macro where somewhere in the first 100 lines you define filters, derived columns, etc. and eventually a Histo1D `histAbc`. The macro goes on. In line 300, you start using `histAbc`, position the legend, tune the axis, etc. At this point, however, you don't see anymore what the histogram contains because it has been defined way up. A bit like variable declarations in Pascal, where they always have to be at the beginning of a function.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7107#issuecomment-778201421:311,tune,tune,311,https://root.cern,https://github.com/root-project/root/pull/7107#issuecomment-778201421,1,['tune'],['tune']
Performance,> or add a new variable inside the MemInfo_t struct that specifies the 9.3 'cached' memory. I would go for this solutions (add missing information). This would requires update in `GetLinuxMemInfo` and `GetDarwinMemInfo` in `TUnixSystem.cxx` and `GetWinNTMemInfo` in `TWinNTSystem.cxx`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196#issuecomment-778310928:76,cache,cached,76,https://root.cern,https://github.com/root-project/root/issues/7196#issuecomment-778310928,1,['cache'],['cached']
Performance,"> or the expected usage. humm ... here it is. ```; gInterpreter->Calc("" ..... ""); Take Read Lock x N times; Take Write Lock x M times; suspend before calling User Code; UserCode; start multiple threads; Take WriteLock *** DEAD LOCK here without this infrastructure; ReleaseWriteLock; restore mutex state; Release Write Lock x M times; Release Read Lock x N times; ```; The recurse count is for this case (simplified to show just the salient point); ```; gInterpreter->SomeEntry("" ..... ""); Take Write Lock; Snapshot 1; Take Write Lock x M times; gInterpreter->Load("" ..... ""); Take Write Lock; Snapshot 2; Take Write Lock x N times; gInterpreter->Calc("" ..... ""); Take WriteLock; Snapshot 3; suspend before calling User Code; restore mutex state; Forget 3; Release Write Lock; Release Write Lock x N times; Forget 2; Release Write Lock; Release Write Lock x M times; Forget 1; Release Write Lock; ```; (I don't recall the exact set of possible re-entry points into the interpreter, so this one is inaccurate but in the spirit); where essentially Snapshot 2 and 3 needs to be ignored, i.e. we need to rewind to the top; but also we need to remember to skip the ""Forget 2"" and ""Forget 3""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301#issuecomment-687294851:560,Load,Load,560,https://root.cern,https://github.com/root-project/root/pull/6301#issuecomment-687294851,1,['Load'],['Load']
Performance,"> probably due to filtering and skimming using a software that has the new persistency. CloneTree currently can only handle schema evolution if the 'fast' option is selected. For slow cloning it does not (yet?) deal well with the fact that the on-file and in-memory representation does not match (the reading part is 'sorta' fine but the writing part is confused because the cloned branches are (for now) the exact same as the input and thus we are now in the case were we attempt to write in a different format than the one in memory. The ""Info"" above are clear/exact that some data is lost because those field are no longer in memory (but they still have a branch for them on the output, so behavior will be strange). I am unclear why this leads to the behavior I have seen/reported but it might be linked. Thanks to your new file (that I can clone to a smaller if I make sure to load none of the pluto libraries), I seem to be back on track. thanks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7754#issuecomment-966525290:882,load,load,882,https://root.cern,https://github.com/root-project/root/issues/7754#issuecomment-966525290,2,['load'],['load']
Performance,> projectroot.roottest.root.meta.loadAllLibs.roottest_root_meta_loadAllLibs_LoadAllLibsAZ. Is this problem reproducible locally or is it a jenkins glitch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1253#issuecomment-341204193:33,load,loadAllLibs,33,https://root.cern,https://github.com/root-project/root/pull/1253#issuecomment-341204193,1,['load'],['loadAllLibs']
Performance,"> run even an expression with zero side effects without leaking. Indeed, see my comment on the child interpreter. clang is a compiler, cling adds to its translation unit - it's growing, and even `42` is source code that clang wants to remain in memory, corresponds to AST nodes, and object code that's emitted by the JIT. So whether something is ""zero side effects"" depends on who you talk to :-). > I'll let you know once I implemented the optimization for integer returns - thanks for reporting that!. That's actually already there, see https://github.com/root-project/root/blob/34fc1dcd8c12b49349c3e54c033effdb6f6354f0/core/metacling/src/TCling.cxx#L7636. > a failed transaction (such as the lookup of a type or function that does not exist) also leaks. I bet that's the memory buffer and the bump allocator in the clang AST: for invalid code we don't codegen (so no leak there), the transaction gets recycled (no leak there either), and nothing gets run (no values leaking). I don't have plans to change the allocator for the clang AST (if that's at all ""possible"" i.e. ""reasonably feasible""). @vgvassilev do you think that's something you might be interested in? With the AST nodes sticking around we also need the memory buffer that they point to (`SourceLocation`-wise). > a trivial augmentation would be to take a pointer to a value wrapper. We have `TCling::Evaluate(const char* code, TInterpreterValue& value)`. Is that enough for you, or what is missing?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7201#issuecomment-806013491:441,optimiz,optimization,441,https://root.cern,https://github.com/root-project/root/issues/7201#issuecomment-806013491,1,['optimiz'],['optimization']
Performance,"> should be t.GetTree()->GetListOfFriends() instead of t.GetListOfFriends()? (t is almost always a TChain). Yes, as long as LoadTree have been already called. Note that this syntax will work for both TChain and TTree object.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6741#issuecomment-754803603:124,Load,LoadTree,124,https://root.cern,https://github.com/root-project/root/issues/6741#issuecomment-754803603,1,['Load'],['LoadTree']
Performance,> so it's only wasting CPU cycles. The idea (of having the stress test run both compiled and interpreted) was to ensure that the code worked in both environment (i.e. that the interpreter is working for the syntax used here) **and** to monitor the performance differential (arguably the later has not been followed through).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6019#issuecomment-656417348:248,perform,performance,248,https://root.cern,https://github.com/root-project/root/pull/6019#issuecomment-656417348,1,['perform'],['performance']
Performance,"> suggests that cppyy is reading some unallocated memory; > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468#issuecomment-700880760:103,cache,cache,103,https://root.cern,https://github.com/root-project/root/issues/6468#issuecomment-700880760,2,"['cache', 'perform']","['cache', 'performance']"
Performance,"> sure, it's running. but some questions:; > ; > * Shouldn't this `std.modulemap` be generated from the state of the STL include tree?. It should but there are headers which are not modules friendly and (at least in the old days) required quite a bit of manual work. > ; > * Let's say, even if ROOT will compile then with this approach, how does it help an experiment library that uses something from the STL that ROOT does not (by chance), isn't that file then missing from the `std.modulemap`, too?. Not really, the module `std.pcm` contains all of STL, however, some header files (which are implementation details such as the ones in `bits`) are re-exported from the submodules, that is, the submodule keeps a textual duplicate of the internal header. This in principle should only affect performance, however clang-9 has bugs when merging two definitions coming from the same textual header but re-exported by a different submodule. > ; > * Also, isn't this compiler version dependent?. STL is vendor dependent to the extent of the internal implemenation. The std.modulemap is the modulemap that ships with the gnu libstdc++. libc++ (used in osx) comes with its own modulemap which we happily find and use. The std.modulemap works (with minor tweaks from time to time) with libstdc++ from 5.1 to 11 (now you just enabled it for 12). In practice, it libstdc++ rarely removes headers and that's what we are exploiting ;)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10478#issuecomment-1113999465:792,perform,performance,792,https://root.cern,https://github.com/root-project/root/issues/10478#issuecomment-1113999465,1,['perform'],['performance']
Performance,"> the function TClass::GetClassInfo() is used routinely outside of the global interpreter lock, e.g. This is (of course) the intent. > because TObject::TestBit is not thread safe. Even-though this is accurate, it is unlikely to be the issue. At least the `kLoading` bit will only be set in the constructor and thus wont change after the user is able to use the `TClass` object. The other possibility is that some other bit setting leads to a weird interaction where the dirty memory is misread, but I also find it unlikely. Nonetheless, can you try the following patch to see if it helps:; ```; diff --git a/core/meta/inc/TClass.h b/core/meta/inc/TClass.h; index 2c94343377..c68eec6bbc 100644; --- a/core/meta/inc/TClass.h; +++ b/core/meta/inc/TClass.h; @@ -429,7 +429,7 @@ public:; ROOT::DesFunc_t GetDestructor() const;; ROOT::DelArrFunc_t GetDeleteArray() const;; ClassInfo_t *GetClassInfo() const {; - if (fCanLoadClassInfo && !TestBit(kLoading)); + if (fCanLoadClassInfo); LoadClassInfo();; return fClassInfo;; }; diff --git a/core/meta/src/TClass.cxx b/core/meta/src/TClass.cxx; index 06ef48c017..6e0475a4c1 100644; --- a/core/meta/src/TClass.cxx; +++ b/core/meta/src/TClass.cxx; @@ -5827,7 +5827,7 @@ void TClass::LoadClassInfo() const; ; // Return if another thread already loaded the info; // while we were waiting for the lock; - if (!fCanLoadClassInfo); + if (!fCanLoadClassInfo || TestBit(kLoading)); return;; ; bool autoParse = !gInterpreter->IsAutoParsingSuspended();; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15090#issuecomment-2027369620:978,Load,LoadClassInfo,978,https://root.cern,https://github.com/root-project/root/issues/15090#issuecomment-2027369620,3,"['Load', 'load']","['LoadClassInfo', 'loaded']"
Performance,"> the mode or the median which ever cover more clusters and/or the largest fraction of the file. Alright, can do that. But it's not super cheap, so I have two questions. 1. Should I:; a. add a TTree method that evaluates that thing and call it from `TTree::GetCacheAutoSize`; b. add a TTree method that evaluates that thing and add a data member to TTree to cache its value after the first time I compute it; c. evaluate that thing in TTree's constructor and store it in a data member; d. add a free function that takes a TTree and evaluates that thing; e. none of the above, something else. 2. What should we do for TChains? Override that calculation so that it errors out?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8714#issuecomment-887647556:358,cache,cache,358,https://root.cern,https://github.com/root-project/root/pull/8714#issuecomment-887647556,1,['cache'],['cache']
Performance,"> the performance of the llvm::SmallVector comes from the fact it is not exception safe. Can you elaborate a bit? For us, the performance boost in RVec 2.0 comes from the small buffer optimization, which reduces the amount of heap allocations during analysis event loops.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-817721910:6,perform,performance,6,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-817721910,3,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,> there would be an additional write option like SetBigClusters() or so. This might be an okay temporary solution but we probably should think of way to make the switch automatic (we wouldn't want a user many hours jobs fails because the limit is reached unexpectedly because there is a few unexpectedly large events (unless I mis-understood the point/goal and this is 'just' an optimization).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12331#issuecomment-1433394689:379,optimiz,optimization,379,https://root.cern,https://github.com/root-project/root/pull/12331#issuecomment-1433394689,1,['optimiz'],['optimization']
Performance,> to figure out how to handle the case when $ROOTSYS is not writable . One can try to load fonts from current directory.; http server uses `http://server/currentdir/` alias for files from current directory.; One can use it to load fonts.; The only to be done - call `win.SetUseCurrentDir(true);` in REve initialization - because of security reasons option is by default off. Feature available only in master since 2 days - please rebase your code,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2175645489:86,load,load,86,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2175645489,2,['load'],['load']
Performance,> to remember the number of methods in TClassRef. I'm trying to optimize memory . TClassRef is supposed to be a light weight object (a smart pointer) which might be duplicated many times. Increasing the size of this object would unnecessarily increased the memory consumption by a little bit in many places. I also do not see the point of caching the value there since it is *already* cached in the list itself (i.e. doing GetListOfMethods(kFALSE)->GetEntries() would cost 'only' the cost of the two functions calls to retrieve whatever was the 'previous' value of the number of methods).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1743#issuecomment-373175235:64,optimiz,optimize,64,https://root.cern,https://github.com/root-project/root/pull/1743#issuecomment-373175235,2,"['cache', 'optimiz']","['cached', 'optimize']"
Performance,"> using SO_LoadedLast (which is somewhat counter-intuitive to our use case) seems to work. I agree `SO_LoadedLast` shouldn't be what your after especially if it works with `SO_LoadedFirst` here.; Diff-ing my PR1 vs your JITRTLD_LOCAL shows something went screwy, in particular:; DynamicLibrary.h@91 should be:; ```; enum SearchOrdering {; /// SO_Linker - Search as a call to dlsym(dlopen(NULL)) would when; /// DynamicLibrary::getPermanentLibrary(NULL) has been called or; /// search the list of explcitly loaded symbols if not.; SO_Linker,; /// SO_LoadedFirst - Search all loaded libraries, then as SO_Linker would.; SO_LoadedFirst,; /// SO_LoadedLast - Search as SO_Linker would, then loaded libraries.; /// Only useful to search if libraries with RTLD_LOCAL have been added.; SO_LoadedLast,; /// SO_LoadOrder - Or this in to search libraries in the ordered loaded.; /// The default bahaviour is to search loaded libraries in reverse.; SO_LoadOrder = 4; };; ```. > Thanks for helping me out to sort this out!. No problem, but lets sort if it can be accomplished with `SO_LoadedFirst`. > My personal opinion is that it should be the default, being close to the old behavior. I understand that but do my examples or the fact the old behavior completely breaks down on Windows give you no pause?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/744#issuecomment-313811536:506,load,loaded,506,https://root.cern,https://github.com/root-project/root/pull/744#issuecomment-313811536,5,['load'],['loaded']
Performance,"> we could do nothing: rdfentry_ would be unstable and it could not be relied upon to e.g. index into manually added ""friend columns"" . Indeed, the global number is needed to load the proper friend. For example we could have a friend which is a chain which contains files that have different lengths (number of entries)( (but same total lengths) than the files in the main chain (consequently a single file in the main chain maybe have to use/open 2 or more files from the friend chain). I.e. we would also need to keep a running total for the friends",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12190#issuecomment-1411098558:175,load,load,175,https://root.cern,https://github.com/root-project/root/issues/12190#issuecomment-1411098558,1,['load'],['load']
Performance,"> we would need to remove TProcessExecutor. It has always been the case that forking from a multi-thread program is dangerous/broken.; Usage of `TProcessExecutor` is fine as long as the program is not multi-thread.; On Linux, that's totally fine, users are in charge of whether their program is multi-threaded or not.; I don't understand whether Mac makes your applications multi-thread with no warning or not. (We don't want to call `exec`, we really want to take advantage of the copy-on-write memory-cloning of `fork`)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-765316954:92,multi-thread,multi-thread,92,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-765316954,4,['multi-thread'],"['multi-thread', 'multi-threaded']"
Performance,"> where we want to 'stop' wasting time for the rest of the process by not even trying to use IoURing. That makes sense, but I feel this is a fairly niche optimization. It is only expected to arise if someone has requested the uring feature but does not have a viable system configuration for it to work (which unfortunately is the case for most distro default settings today). And in that case, I think it's reasonable to have a potential slight slowdown (and/or some repeated warnings) on an improperly configured machine. Especially since the fix doesn't require recompilation but a one-line adjustment to the user's `memlock` limits (we can improve documentation about this). To minimize the chances of it showing up at all, we could also reduce the default queue size -- maybe 1024 is too large.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7942#issuecomment-824312511:154,optimiz,optimization,154,https://root.cern,https://github.com/root-project/root/pull/7942#issuecomment-824312511,2,"['optimiz', 'queue']","['optimization', 'queue']"
Performance,"> whether it should return a std::vector<std::string> or std::vector<std::string_view>. I'd say definitely `vector<string>`, otherwise calling things like `split(std::move(mystr))` or `split(""a temporary str""s)` is broken or impractical. Thanks to short string optimization, creating several small strings is cheap.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8807#issuecomment-895071129:261,optimiz,optimization,261,https://root.cern,https://github.com/root-project/root/issues/8807#issuecomment-895071129,1,['optimiz'],['optimization']
Performance,"> why should the RVec cast of the ""jets"" column work if it is in fact an std::vector<float>. I understand why it currently doesn't, but I believe we agree that reading any collection as an RVecs via RNTupleDS _should_ work. I think we agreed to:; - [ ] throw an exception from RNTupleDS in case type on disk and type requested do not match -- this will make the bug noisy instead of silent and will possibly catch other issues in the future; - [x] wait for the RVec redesign that adds a small vector optimization and then provide a type-erased deserialization function for RVecs which RNTupleDS can take advantage of -- the redesign will make it simpler to implement such a function in a robust way",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6347#issuecomment-692682651:500,optimiz,optimization,500,https://root.cern,https://github.com/root-project/root/issues/6347#issuecomment-692682651,2,['optimiz'],['optimization']
Performance,">> Also I suppose there are ways to reduce the up-front cost of the rootpcms (for example delaying their loading until needed); > That's what I am after. Do you have something in particular in mind. Currently, the rootpcms file is loaded when the library is loaded. Instead it could be open whenever there is a call to TClassTable::GetProtoClass for one of its content. This would require:. (a) have a (persistent) data structure that list of the available content of the rootpcms.; (b) extend the TClassTable data structure to record that information; (c) in TClassTable::GetProtoClass if the TProtoClass is no there but there is rootpcms listed, then open the rootpcms and load. When opening the rootpcms one should load all the TProtoClasses since opening the file takes time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-659533156:105,load,loading,105,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-659533156,5,['load'],"['load', 'loaded', 'loading']"
Performance,">> Obviously the removal of this preload is a necessary precursor to making the use of module the ; >> default. Do we have a mechanism to 'not' forget to remove it?. > @pcanal, can you elaborate a little because I cannot understand both sentences ;). @vgvassilev I was apparently mistakenly talking about 'preloading the library' rather than what you seem to have meant ('preloading the module'). Since it is 'only' the module and that we already do this pre-loading of the AST node via the PCH, removing this 'pre-attaching of the AST nodes via preloading the module' is indeed not a pre-requisite to making the use of module the default mechanism. [It is rather a question of optimization and/or implementation of the replacement for the rootmap forward declaration].",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1697#issuecomment-372419135:459,load,loading,459,https://root.cern,https://github.com/root-project/root/pull/1697#issuecomment-372419135,2,"['load', 'optimiz']","['loading', 'optimization']"
Performance,>Failed to load module RGL; >Failed to load module Fumili; >Failed to load module Net; >Failed to load module Geom; >Failed to load module RooFitMore; >Failed to load module ROOTGpadv7; >Failed to load module X3d; >Failed to load module Cling_Runtime; >Failed to load module SPlot; >Failed to load module EGPythia8; >Failed to load module RooFit; >Failed to load module RCsg; >Failed to load module Rint; >Failed to load module XMLParser; >Failed to load module MultiProc; >Failed to load module RooStats; >Failed to load module GeomBuilder; >Failed to load module Proof; >Failed to load module FITSIO; >Failed to load module Ged; >Failed to load module Recorder; >Failed to load module FFTW; >Failed to load module GuiBld; >Failed to load module ROOTWebDisplay; >Failed to load module RooFitCore; >Failed to load module Gui; >Failed to load module SQLIO; >Failed to load module XMLIO; >Failed to load module ROOT_Rtypes; >Failed to load module std; >Failed to load module ROOTHistDraw; >Failed to load module GX11TTF; >Failed to load module RIO; >Failed to load module ProofPlayer; >Failed to load module ASImage; >Failed to load module libc; >Failed to load module ROOT_Foundation_C; >Failed to load module MathMore; >Failed to load module Foam; >Failed to load module RSQLite; >Failed to load module SpectrumPainter; >Failed to load module Minuit2; >Failed to load module Core; >Failed to load module MLP; >Failed to load module ROOTDataFrame; >Failed to load module GenVector; >Failed to load module NetxNG; >Failed to load module ROOTBrowserv7; >Failed to load module Minuit; >Failed to load module RootAuth; >Failed to load module Graf3d; >Failed to load module TMVA; >Failed to load module ASImageGui; >Failed to load module Graf; >Failed to load module GX11; >Failed to load module Gdml; >Failed to load module ProofBench; >Failed to load module Cling_Runtime_Extra; >Failed to load module MathCore; >Failed to load module Gviz3d; >Failed to load module WebGui6; >Failed to load module ROOTTPy,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7055:5487,load,load,5487,https://root.cern,https://github.com/root-project/root/issues/7055,1,['load'],['load']
Performance,">first == pyprop->fOffset) {; (gdb) bt; #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33; #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0; #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0; #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0; #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0; #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0; #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0; #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0; #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0; #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0; #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0; #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0; #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6; #13 0x000055555555507e in _start (); (gdb) list; 28 {; 29 // cache lookup for low level views; 30 if (pyprop->fFlags & kIsCachable) {; 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();; 32 for (auto it = cache.begin(); it != cache.end(); ++it) {; 33 if (it->first == pyprop->fOffset) {; 34 if (it->second) {; 35 Py_INCREF(it->second);; 36 return it->second;; 37 } else. (gdb) p *pyprop; $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12, fConverter = 0x555556ff99f0, fEnclosingScope = 24, ; fName = 0x7fffdc42ebf0}. (gdb) p *pyobj; $10 = {ob_base = {ob_refcnt = 2, ob_type = 0x555558872b90}, fObject = 0x55555781aeb0, fFlags = 1031}; ```; Looks like maybe there is something wrong with the cppyy data member cache in this case? (whatever that is).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6468#issuecomment-699684843:1536,cache,cache,1536,https://root.cern,https://github.com/root-project/root/issues/6468#issuecomment-699684843,5,['cache'],['cache']
Performance,"@Axel-Naumann , root v.6.24 branch is still broken for us. Testing root commit 0ae9f99 ( which is tip of v6.24 patches branch) generated multiple runtime errors [a] for us. @makortel @Dr15Jones is it something CMSSW related or root is causing this ?; Testing eda45838695204139e372d712b1d72c9d5370160 + https://github.com/cms-sw/root/pull/155/files looks good though [b] . Only difference is the addition commit https://github.com/root-project/root/commit/3480394c02a6335d271f95fcf160274811091155 , do you think 3480394c02a6335d271f95fcf160274811091155 might be causing these crashes?. [a] https://github.com/cms-sw/cmsdist/pull/6787#issuecomment-814302828; https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-efd635/14020/addOnTests/pat1/cmsRun__data_cmsbld_jenkins_workspace_ib-run-pr-addon_CMSSW_11_3_ROOT624_X_2021-04-05-2300_src_PhysicsTools_PatAlgos_test_IntegrationTest_cfg.py.log. ```; cmsRun: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_11_3_ROOT624_X_2021-04-05-2300/src/FWCore/Concurrency/src/WaitingTaskList.cc:57: void edm::WaitingTaskList::reset(): Assertion `m_head == nullptr' failed. ```. [b] https://github.com/cms-sw/root/pull/155#issuecomment-812869144",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-814343554:1017,Concurren,Concurrency,1017,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-814343554,1,['Concurren'],['Concurrency']
Performance,"@Axel-Naumann ; I have one relatively small [module](https://github.com/OstapHEP/ostap/blob/master/ostap/core/core.py) , that loads many native ROOT classes and many my own C++ classes and then performs some ""decoration"" for these classes - no loops, no CPU expensive data manipulations. It takes 3s with ROOT 6.26 (LCG_102 release) and 190s with ROOT 6.27 (dev3 LCG nightly slot). It demonstrates the scale of the problem (and probably indirectly indicates the source of it)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11927#issuecomment-1360957504:126,load,loads,126,https://root.cern,https://github.com/root-project/root/issues/11927#issuecomment-1360957504,2,"['load', 'perform']","['loads', 'performs']"
Performance,"@Axel-Naumann @couet . I guess, one can review my changes now.; Main idea how multi-threading for graphics should look like you can see in new tutorials/v7/draw_mt.cxx macro (in this PR)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2487#issuecomment-415332036:78,multi-thread,multi-threading,78,https://root.cern,https://github.com/root-project/root/pull/2487#issuecomment-415332036,1,['multi-thread'],['multi-threading']
Performance,"@Axel-Naumann @eguiraud One of my dataframe tests fails because of this:; ```; 27/155 Test #1500: roottest-root-dataframe-test_snapshot .........................***Failed 13.13 sec; ...; --- /srv/root/src/roottest/root/dataframe/test_snapshot.ref	Tue Mar 17 09:11:36 2020; +++ /srv/root/build/roottest/root/dataframe/test_snapshot.log	Fri Apr 23 09:56:40 2021; @@ -1,4 +1,5 @@; ; +cling::DynamicLibraryManager::loadLibrary():/srv/root/build/roottest/root/dataframe/par:cannotdynamicallyloadposition-independentexecutable; ----Nowwithatreeintherootdirectory; Branch:b1; Branch:b1_square. -- END OUTDIFF OUTPUT --; CMake Error at /srv/root/build/RootTestDriver.cmake:264 (message):; compare 'stdout' error: 1; ```; Somehow ROOT should address the case of binaries built with -fpie, as at least Gentoo has enabled that by default in GCC to improve security. Other distros may do the same in the future. See e.g. https://docs.fedoraproject.org/en-US/packaging-guidelines/#_pie",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7936#issuecomment-825474655:411,load,loadLibrary,411,https://root.cern,https://github.com/root-project/root/issues/7936#issuecomment-825474655,2,['load'],['loadLibrary']
Performance,"@Axel-Naumann @pcanal . Just to have some performance numbers.; If I compare with root6.18.04, dependency tree in our small ROOT-based project reduced by 5%. If one considers only ROOT-related includes - it is about 10%. It is approx gain in compilation compared to previous releases. And with `less_includes` switch one could keep longer transition period to let users adjust their code.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5123#issuecomment-597731899:42,perform,performance,42,https://root.cern,https://github.com/root-project/root/pull/5123#issuecomment-597731899,1,['perform'],['performance']
Performance,"@Axel-Naumann @pcanal @dpiparo ; What do you think about changing the behaviour so that only one thread calls the callbacks?; So users don't have to worry about concurrency which might be a useless complication.; For histograms we wouldn't want to do synchronized partial merges of the thread-local copies anyway, I guess...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331202048:161,concurren,concurrency,161,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331202048,1,['concurren'],['concurrency']
Performance,"@Axel-Naumann I don't understand why locally everything works, but not in Jenkins....Could it be connected with that some executables/cache are not cleaned properly between PRs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6466#issuecomment-702695617:134,cache,cache,134,https://root.cern,https://github.com/root-project/root/pull/6466#issuecomment-702695617,1,['cache'],['cache']
Performance,"@Axel-Naumann I will merge after refactoring the tests then. One topic that I am not addressing in the PR is what should happen if the user gets an iterator, possibly uses it, then loads a new entry and tries to keep using the old iterator.; We could document that iterators on a certain entry are to be considered invalidated when the entry is switched, but _actually_ invalidating the iterators would be a bit cumbersome (and beyond the scope of this PR).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1259#issuecomment-342938316:181,load,loads,181,https://root.cern,https://github.com/root-project/root/pull/1259#issuecomment-342938316,1,['load'],['loads']
Performance,@Axel-Naumann Shouldn't matter (beside performance) at the moment if a module can't be loaded. So far we only print a message to inform that our loading setup is still wrong and then continue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1511#issuecomment-358260047:39,perform,performance,39,https://root.cern,https://github.com/root-project/root/pull/1511#issuecomment-358260047,3,"['load', 'perform']","['loaded', 'loading', 'performance']"
Performance,"@Axel-Naumann Thank you for looking at this! I thought of your approach also; using move semantics to transfer ownership means TGraph does not need to make a copy either. The idea on this branch is to demonstrate the potential for a significant performance speed-up in the constructor by not making a copy of the data. Additionally, sharing ownership with TGraph means a user can use the data for things apart from in a TGraph and/or update a TGraph after modifying the data. . In either approach, a user would still be able to use the existing TGraph constructors, however the ROOT file writing classes need an update to write `shared_ptr` or `vector` objects to a ROOT file. Thinking about this, another solution would be to use move semantics and to add a non-const accessor to the TGraph interface, which may work better when writing to a ROOT file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9610#issuecomment-1056881682:245,perform,performance,245,https://root.cern,https://github.com/root-project/root/pull/9610#issuecomment-1056881682,1,['perform'],['performance']
Performance,"@Axel-Naumann commented that we also need to cover the case in which we use `TPython`. In that case, we need the object erase callback to be initialized, but Python has not been initialized when we use `TPython` (since we use it from C++). So the sequence of events is loading libPyROOT -> running the static initialization block of `TMemoryRegulator.cxx` -> using `TPython`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3111#issuecomment-444887619:269,load,loading,269,https://root.cern,https://github.com/root-project/root/pull/3111#issuecomment-444887619,1,['load'],['loading']
Performance,"@Axel-Naumann do you know what means next on ROOT-fedora27/noimt:; `09:35:57 From https://github.com/oshadura/root; 09:35:57 * [new branch] alfonso-zst-final -> oshadura-alfonso-zst-final; 09:35:57 Auto packing the repository in background for optimum performance.; 09:35:57 See ""git help gc"" for manual housekeeping.; 09:35:57 error: The last gc run reported the following. Please correct the root cause; 09:35:57 and remove .git/gc.log.; 09:35:57 Automatic cleanup will not be performed until the file is removed.; 09:35:57 ; 09:35:57 warning: There are too many unreachable loose objects; run 'git prune' to remove them.`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4323#issuecomment-540964530:252,perform,performance,252,https://root.cern,https://github.com/root-project/root/pull/4323#issuecomment-540964530,2,['perform'],"['performance', 'performed']"
Performance,"@Axel-Naumann yes, testing is one of the motivations, in particular continuous testing to prevent future regressions (now we can check against an external implementation, instead of just copying the current values and declaring them ""known-good""). The other reason, and why I think this might provide benefit for users, is performance: The original RANLUX implementation by James (at least its implementation in GSL) needs 40 seconds to sum 1 million numbers at luxury level 3, `gsl_rng_ranlux389` (luxury level 4) takes a bit more than 1 minute. The same sequence takes less than 8 seconds with `RanluxppCompatEngineJamesP[34]`, respectively (due to the LCG, you don't even pay for higher decorrelation!).; The difference is even larger for `std::ranlux48` (used directly, not through `std::uniform_real_distribution` which eats up more than one number per iteration): 2m55s compared to 12 seconds with `RanluxppCompatEngineStdRanlux48`. And because we can generate the same sequence, switching the generator won't change the output of a simulation / analysis / ... (only the interface is slightly different). Plus the users get the possibility to skip in the very same sequence without generating the intermediate numbers. Now we could argue that all users should switch to `RanluxppEngine2048`, which on top of that provides better seeding and even higher decorrelation. On the other hand, the implementations above have been around for some time now and are so widely available (`std::ranlux{24,48}` comes with any C++ compiler) that they will remain used...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8383#issuecomment-857732772:323,perform,performance,323,https://root.cern,https://github.com/root-project/root/pull/8383#issuecomment-857732772,1,['perform'],['performance']
Performance,"@Axel-Naumann, @pcanal, it is debatable if should make `projectroot.roottest.python.JupyROOT.roottest_python_JupyROOT_cppcompleter_doctest` work. In [TTabCom](https://github.com/root-project/root/blob/master/core/rint/src/TTabCom.cxx#L458) we explicitly request to iterate over the currently available names. With GMI on if we write `TH1<tab>` we will get TH1{C,D,F,I,K,S} (and not TH1Editor from gui/ged) because `TH1` caused loading of Hist.pcm. If we type `TH<tab>` we will get {THashList,THashTable,THashTableIter}. I am leaning towards fixing the reference file... Do you see another way out?. EDIT1: The same holds of making `projectroot.bindings.pyroot.pythonizations.test.pyunittests_pyroot_pyz_rdataframe_asnumpy` work as it does call `gInterpreter->Declare(""TLorentzVector v;"")` where the `TCling::Declare` [promises](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L2936-L2961) that interface to behave as ""a compiler"" -- turning the GMI intentionally off...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-640116570:427,load,loading,427,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-640116570,1,['load'],['loading']
Performance,"@Axel-Naumann, I shrunk down the demonstrator a bit further too. . In the release notes, I see three candidates.; https://sft.its.cern.ch/jira/browse/ROOT-10658 --> But looking further into it, the symptoms don't match to this affecting me. https://sft.its.cern.ch/jira/browse/ROOT-10663 --> This to me is the prime candidate, since it directly affects auto-loading which _seems_ to be at the core here. I took a look at the PR, https://github.com/root-project/root/pull/5713/files, but can't at a glance identify anything more. On the surface, https://sft.its.cern.ch/jira/browse/ROOT-10798 could also apply, but the fix really seems to boil down to something completely different.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8250#issuecomment-854857980:358,load,loading,358,https://root.cern,https://github.com/root-project/root/issues/8250#issuecomment-854857980,1,['load'],['loading']
Performance,"@Axel-Naumann, not easily. This crash happens when clang tries to load the dependencies of MathCore, so no easy way to diagnose. Maybe if we iterate over all modules, read their dependencies and respect the loading of the dependencies in that order, we might be able to diagnose this. However, to go through the dependencies of a given PCM without loading it requires implementing some binary reading. I've seen such code, and it is doable but..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9594#issuecomment-1034710024:66,load,load,66,https://root.cern,https://github.com/root-project/root/issues/9594#issuecomment-1034710024,3,['load'],"['load', 'loading']"
Performance,"@Axel-Naumann, we did experiment with this when developing the PR. So the performance should be better. We have two options here: a) test it on the same setup as the initial bug (eg afs); b) close the issue as resolved.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7774#issuecomment-931943063:74,perform,performance,74,https://root.cern,https://github.com/root-project/root/issues/7774#issuecomment-931943063,1,['perform'],['performance']
Performance,"@Axel-Naumann. I implement several changes you requested:; - Use R__ERROR_HERE(""WebDisplay""); - Move comments to implementation; - use std::vector as container (is it ok for potentially large queues of std::string?); - Hide THttpWSEngine from end-user; this is interface change; add to docu; - Few function signature changes in THttpWSEngine. I propose to merge this PR - it was rather bugfix PR and not redesign of THttpServer.; Currently I want rather to continue with TWebDisplay and clients implementations",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1493#issuecomment-356378851:192,queue,queues,192,https://root.cern,https://github.com/root-project/root/pull/1493#issuecomment-356378851,1,['queue'],['queues']
Performance,"@ChuanqiXu9, this looks good on our side. Performance is also within the same ballpark. If I run `/usr/bin/time -v root.exe -l -b -q tutorials/hsimple.C ` I get:. | | master | this pr | this PR w/o [ChuanqiXu9@2467fe7](https://github.com/ChuanqiXu9/root/commit/2467fe73721150e3b70bc17cb36e03507257c6e5); |--------|----------|:-------------:|------:|; user time: | 0.53s | 0.50s| 0.49s |; |rss: | 309436 | 310196 | 310192|. It is surprising that we lose 1MB somewhere between D41416 and your changes... @smuzaffar, can you test this PR against cmssw?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1980589145:42,Perform,Performance,42,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1980589145,1,['Perform'],['Performance']
Performance,"@MrCarroll do not worry. These things happen, especially when one is under heavy load at work. Never hesitate to report issues as you encounter them, feedback is very important for us!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14138#issuecomment-1832630669:81,load,load,81,https://root.cern,https://github.com/root-project/root/issues/14138#issuecomment-1832630669,2,['load'],['load']
Performance,"@SClarkPhysics that's also with friends and multi-threading, and disappearing if you don't use friends or turn off multi-threading (or both)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9106#issuecomment-944065025:44,multi-thread,multi-threading,44,https://root.cern,https://github.com/root-project/root/issues/9106#issuecomment-944065025,2,['multi-thread'],['multi-threading']
Performance,@VanyaBelyaev can you please post that stacktrace but using a debug build instead of an optimized build? e.g. `/cvmfs/sft-nightlies.cern.ch/lcg/nightlies/dev3/Fri/ROOT/HEAD/x86_64-centos7-gcc9-dbg/`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8474#issuecomment-864070846:88,optimiz,optimized,88,https://root.cern,https://github.com/root-project/root/issues/8474#issuecomment-864070846,1,['optimiz'],['optimized']
Performance,"@amadio @Axel-Naumann . By the way, it would be nice, if #1623 will be merged.; Many macros from tutorials/v7/ runs only in compiled mode (due to use of lambdas).; And if I try to run same macro twice, ACLiC fails to load ``libcef.so`` library, which is linked to ``libROOTWebDisplay.so``. #1623 should solve this problem.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1653#issuecomment-367034914:217,load,load,217,https://root.cern,https://github.com/root-project/root/pull/1653#issuecomment-367034914,1,['load'],['load']
Performance,"@amadio Rebased. There was no content from previous PRs in here, but I understand the confusion. To clarify the now rebased ~6~ 8 commits:. - 8cc7dbb adds constructors to KahanSum that are necessary for serializing them and sending over a ZMQ socket.; - 2c35731 fixes up the zmq header installation, which was still being installed, so this is indeed a fixup of previous PRs.; - 359b585 is an optimization of part of MultiProcess. It isn't strictly necessary, but improves performance (I tried it out while trying to fix the bug in this PR), and it was something I wanted to do for a while already, so decided to keep it in.; - ee89d0c turns off building MultiProcess by default, as requested by you, @amadio.; - 84ac86e fixes a few remaining copyright/license headers that were introduced in #8700.; - 38c6de9 fixes some include dir variables in MultiProcess and RooFitZMQ.; - ~78aac0b~ 568ffdf is about building `MultiProcess` on Windows (includes @amadio's earlier review suggestion).; - ~5ab91be 0e21b70~ 1c5084f finally is what this PR is really about: adding the MP-based TestStatistics calculator classes and a README.md file with usage instructions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9349#issuecomment-984509014:393,optimiz,optimization,393,https://root.cern,https://github.com/root-project/root/pull/9349#issuecomment-984509014,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,@amadio after we go back to a working state I agree we should look into optimizing this region of the code. edit: (in master though :P ),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1084#issuecomment-333470883:72,optimiz,optimizing,72,https://root.cern,https://github.com/root-project/root/pull/1084#issuecomment-333470883,1,['optimiz'],['optimizing']
Performance,"@andresailer This fixes it, which is great (for me), but perhaps you want to undertake some steps so that this obscure fix doesn't need to be performed by everyone in the future?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10963#issuecomment-1189895061:142,perform,performed,142,https://root.cern,https://github.com/root-project/root/issues/10963#issuecomment-1189895061,1,['perform'],['performed']
Performance,"@andresailer reports; ```; ...; Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; Missing FileEntry for include/IOIMPL/TrackerPulseIOImpl.h; requested to autoload type IOIMPL::TrackerPulseIOImpl; Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; Missing FileEntry for include/IOIMPL/TrackerRawDataIOImpl.h; requested to autoload type IOIMPL::TrackerRawDataIOImpl; Error in cling::AutoLoadingVisitor::InsertIntoAutoLoadingState:; Missing FileEntry for include/IOIMPL/VertexIOImpl.h; requested to autoload type IOIMPL::VertexIOImpl; Error in <TInterpreter::AutoParse>: Error parsing payload code for class EVENT::LCEvent with content:. #line 1 ""EVENT dictionary payload""; ...; Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; Error in <TClass::LoadClassInfo>: no interpreter information for class EVENT::LCEvent is available even though it has a TClass initialization routine.; ```; and more, http://cdash.cern.ch/testDetails.php?test=16531307&build=211395 from `Test: LCIO_pyLCIO_import_test (Passed)` (cough cough) - this might be pre-existing before the llvm13 upgrade",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11921#issuecomment-1357852969:723,Load,LoadClassInfo,723,https://root.cern,https://github.com/root-project/root/pull/11921#issuecomment-1357852969,3,['Load'],['LoadClassInfo']
Performance,"@bbockelm . MappingTask waits for its children (UnzipTask) to finish and return:; https://github.com/zzxuanyuan/root/blob/wip-atomic-tbb-unzip/tree/tree/src/TTreeCacheUnzip.cxx#L699. At the end of FillBuffer(), it needs to call ResetCache(). So ResetCache waits for MappingTask to finish and then it starts resetting the cache:; https://github.com/zzxuanyuan/root/blob/wip-atomic-tbb-unzip/tree/tree/src/TTreeCacheUnzip.cxx#L464",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/785#issuecomment-320775678:321,cache,cache,321,https://root.cern,https://github.com/root-project/root/pull/785#issuecomment-320775678,1,['cache'],['cache']
Performance,"@bbockelm @pcanal @dpiparo . Here is the new imt unzipping basket with TTaskGroup interface. Comparing to #785 , I noticed there are still 3%(in Real Time) ~ 5%(in CPU Time) performance drops in new implementation. The degradation is caused by tbb function:. tbb::internal::custom_scheduler<tbb::internal::IntelSchedulerTraits>::receive_or_steal_task(long&). I suspect the reason is because #785 in the following function:. https://github.com/zzxuanyuan/root/blob/15cceff19b48dfe4a4b0c69c1ec07ea75bd1ccb5/tree/tree/src/TTreeCacheUnzip.cxx#L708. CreateTasks() explicitly creates 2 tasks (empty_task and MappingTask; and set_ref_count(2) means 2 tasks in total). The scheduler might make a better decision here since it knows there will be only one task except empty_task running in future. On the other hand, TTaskGroup uses tbb::task_group which calls the following function:. https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L108. task_group_base() also first creates a empty_task. However, it only creates 1 task(itself) by setting reference count as 1 (set_ref_count(1)). When it invoke another task by calling . https://github.com/01org/tbb/blob/b9805bacadd4d0474fd3358cf0c7153042ce50c3/include/tbb/task_group.h#L103. allocate_additional_child() will create a new task as child and increment reference count by 1. I guess accumulating tasks on-the-fly might degrade the performance since the tbb scheduler could spend more time on finding tasks to work on. In a short, I think explicitly defining the total number of tasks and task graph should have better performance (more efficient for scheduler I guess) than adding more tasks to task_group as the program runs. There are two alternative approaches that might improve the performance. ; 1. Since we have already know we will only have one task (except empty_task) to add into the task_group, we could revise TTaskGroup interface and notify it what task is going to run in advance.; 2. We coul",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010:174,perform,performance,174,https://root.cern,https://github.com/root-project/root/pull/1010,1,['perform'],['performance']
Performance,"@bbockelm @pcanal This patch copies the code of signal handling in CMSSW. It avoids async-unsafe functions in signal handler functions. . For reference, see the link https://github.com/bbockelm/cmssw/blob/stacktrace_handler_revisit/FWCore/Services/src/InitRootHandlers.cc. I tried this patch with some simple multi-thread test cases and it worked fine. Is there any complicated test cases I can run? I think this patch is not very ready to merge, but it achieved basic functions. Any criticisms are welcome.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/97:309,multi-thread,multi-thread,309,https://root.cern,https://github.com/root-project/root/pull/97,1,['multi-thread'],['multi-thread']
Performance,"@bbockelm I fix several issues addressed in your comments. Could you look at it now?; clang-tidy-modernize fails due to ""sleep(0.2)"". I tried to change it to ""usleep(200000)"", however, the performance was much slower. Removing sleep function also causes slow down.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-332305935:189,perform,performance,189,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-332305935,1,['perform'],['performance']
Performance,"@bbockelm we can start to review PR.. I cant reproduce failures on ROOT-performance-centos7-multicore/default both as separate build on node and or even in build directory, I suspect it could be a problem of ""very"" parallel builds (-j56). I will test and let you know..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3947#issuecomment-503461511:72,perform,performance-,72,https://root.cern,https://github.com/root-project/root/pull/3947#issuecomment-503461511,1,['perform'],['performance-']
Performance,@bellenot ; yes:. -- Cling version (from VERSION file): ROOT_1.0~dev; -- Cling will look for C++ headers in '/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/x86_64-redhat-linux:/usr/lib/gcc/x86_64-redhat-linux/8/../../../../include/c++/8/backward' at runtime.; -- And then fallback to: 'c++'; -- clad=OFF; -- Performing Test found_stdstringview; -- Performing Test found_stdstringview - Failed; -- Performing Test found_stdexpstringview,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872175065:383,Perform,Performing,383,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872175065,3,['Perform'],['Performing']
Performance,"@bellenot; I just had a brief look in the code. I think its because of:. [file: /core/metacling/src/CMakeLists.txt]; [...]; //# We need to paste the content of the cling plugins disabling link symbol optimizations.; set(CLING_PLUGIN_LINK_LIBS); if (clad); if (APPLE); set(CLING_PLUGIN_LINK_LIBS -Wl,-force_load cladPlugin -Wl,-force_load cladDifferentiator); elseif(MSVC); set(CLING_PLUGIN_LINK_LIBS cladPlugin cladDifferentiator); set(CLAD_LIBS ""-WHOLEARCHIVE:cladPlugin.lib -WHOLEARCHIVE:cladDifferentiator.lib""); else(); set(CLING_PLUGIN_LINK_LIBS -Wl,--whole-archive cladPlugin cladDifferentiator -Wl,--no-whole-archive); endif(); endif(); [..]. why don't you switch off clad completely when there is no internet (I think at the moment you are only checking if (clad && NO_INTERNET) ). CORRECTION:; I checked your code... you did already. I never worked with CMake before.. if clad if off it shouldn't set these libs.. Might it be a matter of scope definition of the variable clad?? What I mean is: Is the variable clad the same as turned off because of no internet?. Georg",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872020099:200,optimiz,optimizations,200,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872020099,1,['optimiz'],['optimizations']
Performance,"@bendavid I am confused. In none of the PR listed, I see `struct RecurseCountsShared`. Indeed here I see:. > So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. So the question really is back to, for the case where we can't use TBB is there a point in introducing RecurseCountsShared?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-800522649:245,optimiz,optimized,245,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-800522649,1,['optimiz'],['optimized']
Performance,"@bendavid I think this is good to go except for adding some trace in the repository (either commit or, probably better, in the release notes) of the performance improvement.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7260#issuecomment-804459686:149,perform,performance,149,https://root.cern,https://github.com/root-project/root/pull/7260#issuecomment-804459686,1,['perform'],['performance']
Performance,@bluehood @dpiparo Just added two tests to `$ROOTSYS/tree/dataframe/test/dataframe_ranges.cxx` instead of `$ROOTSYS/tree/dataframe/test/dataframe_simple.cxx` to avoid running `Range` with implicit multi-threading.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2062#issuecomment-391268541:197,multi-thread,multi-threading,197,https://root.cern,https://github.com/root-project/root/pull/2062#issuecomment-391268541,1,['multi-thread'],['multi-threading']
Performance,@build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6729#issuecomment-718967840:20,perform,performance-,20,https://root.cern,https://github.com/root-project/root/pull/6729#issuecomment-718967840,1,['perform'],['performance-']
Performance,"@dan131riley What I had in mind was to replace the `WriteOutputFile()` function that now runs in a separate thread with a different function that does only one merging step and then calling that function from the worker threads/tasks when a buffer is pushed. That is, when the worker task or thread calls `Write()` on the `TBufferMergerFile` and something gets pushed to the queue, there will be a check that launches a merge task if needed. That way we completely do away with the extra thread. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1706#issuecomment-371492510:375,queue,queue,375,https://root.cern,https://github.com/root-project/root/pull/1706#issuecomment-371492510,1,['queue'],['queue']
Performance,@dpiparo @amadio do you know where this `<TCling::LoadModule>: Module VecOps not found!` could come from?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2166#issuecomment-395495883:50,Load,LoadModule,50,https://root.cern,https://github.com/root-project/root/pull/2166#issuecomment-395495883,1,['Load'],['LoadModule']
Performance,"@dpiparo @bbockelm ,. Hi Danilo,. Based on current cache replacement policy, the cache will be invalidated (set fIsTransferred to kFALSE) immediately once the first event miss occurs. In my current implementation, each task monitors fIsTransferred and return immediately without doing actual unzipping work. But we still need to create tasks corresponding to the number of baskets. I am wondering if we should add task_group.cancel() function into TTaskGroup interface? In that case, the main thread only needs to cancel all tasks once the cache is invalid. . With event simulation benchmark, I did not see too much difference between task_group wait and cancel. But I guess it could be more efficient once the number of baskets in cache buffer becomes larger.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-335903089:51,cache,cache,51,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-335903089,4,['cache'],['cache']
Performance,"@dpiparo @vepadulano as discussed offline, the issue is that Centos 7 uses `_TIME_H` while RHEL 8 uses `_STRUCT_TIMESPEC` to guard against double definition of `struct_timespec`. The new ROOT seems to have the C7 version cached in some module, hence the issue when `<sys/stat.h>` is included. As discussed, I have protected the issue on our side with:. ```C++; #ifdef _TIME_H; #define _STRUCT_TIMESPEC; #endif; ```. and it works, however I guess this can happen also elsewhere / for other guards, so in the long term it would be good if a solution at the Cling / ROOT level can be provided. As a sidenote we are indeed deprecating C7, however the process is always long and in general the ability to run a given build on different ABI compatible platforms strong desiderata on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14272#issuecomment-1862573288:221,cache,cached,221,https://root.cern,https://github.com/root-project/root/issues/14272#issuecomment-1862573288,1,['cache'],['cached']
Performance,"@dpiparo I agree the cast is not nice, but isn't that issue separate from the one this PR addresses?; If I understand correctly pyROOT users have always been required to perform that cast due to the C++ signatures of `TH*`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1294#issuecomment-342940407:170,perform,perform,170,https://root.cern,https://github.com/root-project/root/pull/1294#issuecomment-342940407,1,['perform'],['perform']
Performance,@dpiparo I see PyROOT is manually loading libMathCore in ROOT.py. Yes I think we don't have to do this for modules.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2854#issuecomment-433662612:34,load,loading,34,https://root.cern,https://github.com/root-project/root/pull/2854#issuecomment-433662612,1,['load'],['loading']
Performance,"@dpiparo I wouldn't discard the idea of SBO in general, we can reintroduce it (with full optimizations) as soon as the crash in ROOT-10079 is resolved. Or we can fix that crash rather than revert but as far as I understood that was not happening for 6.18.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3845#issuecomment-494710885:89,optimiz,optimizations,89,https://root.cern,https://github.com/root-project/root/pull/3845#issuecomment-494710885,1,['optimiz'],['optimizations']
Performance,"@dpiparo What do we make of this? It needs a refresh, but is this the right approach performance wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1019#issuecomment-349961583:85,perform,performance,85,https://root.cern,https://github.com/root-project/root/pull/1019#issuecomment-349961583,1,['perform'],['performance']
Performance,@dpiparo Yes. I was measuring the performance recently. I am considering to adopt TThreadExecutor to replace UnzipTask since all baskets data are independent. I guess I still need to keep MappingTask because it is a single ttb task that manages spawned UnzipTasks. I will look at name convention.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/785#issuecomment-319522718:34,perform,performance,34,https://root.cern,https://github.com/root-project/root/pull/785#issuecomment-319522718,1,['perform'],['performance']
Performance,"@dpiparo absolutely right! Nice test!; But, if to build ROOT with Optimized build and try exactly the same example, we have next output:; ```; oksana@oksana-ThinkPad-E470:~/CERN_sources/root-opt/builds$ cat ../../test.C ; #ifdef __FAST_MATH__; aaaa; #endif; =========; root [1] .X ../../test.C ; root [2] ; ```; Could it be connected to llvm/clang/cling interpreter? It is actually mentioned in clang code: https://github.com/root-project/root/blob/dc9a26819b6549b51b7bd380be61235edde8f21f/interpreter/llvm/src/tools/clang/lib/Driver/ToolChains/Clang.cpp#L2403; It makes sense then because for linux+clang fast math build, the flags are: ; ```; ""-O3 -ffast-math ..""; ````; and it work fine.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/971#issuecomment-329006796:66,Optimiz,Optimized,66,https://root.cern,https://github.com/root-project/root/pull/971#issuecomment-329006796,1,['Optimiz'],['Optimized']
Performance,"@dpiparo this PR restores the behavior to what we do in v6.14. I agree that if you are opening 60 files via eos the performance hit you get is important, but after discussions with you and @etejedor, I don't know how else to fix the (critical) bug. @pcanal this is doubling the number of file opens, but the load on the remote server will be the same as during a parallel event loop. Note however that this PR does not introduce the parallel sweep yet.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3051#issuecomment-442000636:116,perform,performance,116,https://root.cern,https://github.com/root-project/root/pull/3051#issuecomment-442000636,2,"['load', 'perform']","['load', 'performance']"
Performance,@eguiraud . > Is that correct?. yes :). > to have critical sections that end before user code is executed and then start again after user code is done running:. The problem we encountered and couldn't solve in a tractable amount of time is that many code path can and will lead to the inner part that does the Jitting and there can even be cases (hence the recursive count) where the external/user API is being called from within a critical section (eg TInterpreter Load ending up calling Calc or Evaluate).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301#issuecomment-688952731:466,Load,Load,466,https://root.cern,https://github.com/root-project/root/pull/6301#issuecomment-688952731,1,['Load'],['Load']
Performance,"@eguiraud Thank you for your detailed response!. I currently create some TDirectories representing different stages of seloctions, and write histograms into it. For some reason, I would like to have TTree output also in some of the stages, and for that I need to use the `Snapshot` method. The way I had thought of (haven't tested yet, sorry) would be creating all the directories first and close the file, snapshotting to that file (not sure if the sub-directory could be, specified), and then open it for histogram writing. I have little knowledge about multi-threading, and was just (naïvely) looking for an RDataFrame anology of creating a TTree inside a TDirectory. It simply seemed strange to have to close the file and reopen. If feasible, it would be great if the (official) way to create a snapshot and to store into a certain sub-directory of a TFile, along with the multi-threading consideration, could be documented, so that users switching from the imperative pattern would be easier to understand.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9225#issuecomment-958037006:556,multi-thread,multi-threading,556,https://root.cern,https://github.com/root-project/root/issues/9225#issuecomment-958037006,4,['multi-thread'],['multi-threading']
Performance,"@eguiraud this is another idea I had to work around the problem of long functions mixing `std::string_view` and `new`. In my preliminary tests, this improves performance in general (less heap allocations) so it might be worth it in addition to #9328. If that makes sense, I'd like to investigate `std::initializer_list` instead of arrays with a dummy element, but this seems to work for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9329#issuecomment-977843229:158,perform,performance,158,https://root.cern,https://github.com/root-project/root/pull/9329#issuecomment-977843229,1,['perform'],['performance']
Performance,"@en. > Hi Ivan, thank you, I have some doubts about the changes:; > ; > * I don't think calling GetEntries more than once is actually expensive: the result is cached after the first call; > * the error message was listing the entry range in the usual start-inclusive/end-exclusive way (same as what happens in typical for loops), I'm not sure the patch is less ambiguous. Maybe we can say instead ""Start entry (X) must be lower than the available entries (Y). Ignoring entry range."".; > ; > Minor other thing, the commit message should use `[treereader]` insteadof `[DF]`. @eguiraud noted! This PR now only gives a clearer error message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10705#issuecomment-1148590657:159,cache,cached,159,https://root.cern,https://github.com/root-project/root/pull/10705#issuecomment-1148590657,2,['cache'],['cached']
Performance,"@etejedor That sounds like a good idea. I've said before that this diff is so old that the Numpy parts can be cleanly removed and reimplemented on top of new developments from the past year. That should include TTree::AsMatrix. I was also thinking of some jagged and object types, which are considered ""destructive"" storage by BulkIO, yet are not too hard to reconstruct. The code I've written to interpret these raw buffers as structured data has been separated out of uproot so that it can be used independently*. I'll present that on Monday at the ROOT Workshop and we could talk about it then. * For instance, PyROOT could ""optionally"" depend on them, only performing a Python import inside a method call. The two libraries I'm taking about are awkward-array (for jaggedness and similarly difficult array structures) and uproot-methods (for Pythonic array-at-a-time operations).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2519#issuecomment-418329858:661,perform,performing,661,https://root.cern,https://github.com/root-project/root/pull/2519#issuecomment-418329858,1,['perform'],['performing']
Performance,"@etejedor nice data source! As you could see, there is an issue with compilation due to the recent XCode9 compatibility changes.; Once this is done, before the full review, I think one could add; - Some Doxy documentation, for example about the kind of csv supported, how to write headers etc. In general aspects specific to the csvs we expect; - One or more tutorials, both in Python and C++, should be prepared. An idea could be an little analysis performed on a csv or a conversion from csv to ROOT with a Snapshot (de facto it will be the very first one we do with TDF!!). An example analysis can be found in the SWAN examples: https://github.com/dpiparo/swanExamples/blob/master/notebooks/CMSDimuon_py.ipynb. Cheers,; D",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1160#issuecomment-335399004:450,perform,performed,450,https://root.cern,https://github.com/root-project/root/pull/1160#issuecomment-335399004,1,['perform'],['performed']
Performance,@etejedor thanks a lot for digging out this nice solution. We had similar solution before https://github.com/root-project/root/commit/ba383e2411d3be0d3cad0bec4f15902217179f41 except $PYTHON_EXECUTABLE was cached and causing other problem (@maxgalli fixed in commit I showed before). Do you know a reproducer that we can check that @maxgalli's issue fixed by him is not back?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5906#issuecomment-648004598:205,cache,cached,205,https://root.cern,https://github.com/root-project/root/pull/5906#issuecomment-648004598,1,['cache'],['cached']
Performance,"@etejedor thanks for taking a look!. 1. correct. making concurrent usage of different RDFs from different threads safe is the topic of the recently created [ROOT-10694](https://sft.its.cern.ch/jira/browse/ROOT-10694); 2. avoiding re-jitting across computation graphs needs #5356 , but the general machinery is exercised by current tests (demonstrated by the current test failures) and tutorials (results I showed in the PPP were on df104, df105, df106). What kind of test would you like to see? (i.e. what should it test exactly?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5329#issuecomment-615292186:56,concurren,concurrent,56,https://root.cern,https://github.com/root-project/root/pull/5329#issuecomment-615292186,1,['concurren'],['concurrent']
Performance,"@ferdymercury I look through the messages and did not found critical errors. ; Most of nullptr access or dereferencing are false positives, other did not checked due to performance reasons. ; But if I oversee memory leak or use of uninitialized variable (beside large block in TTreeFormula::EvalInstance), please let us know here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7430#issuecomment-800017654:169,perform,performance,169,https://root.cern,https://github.com/root-project/root/issues/7430#issuecomment-800017654,1,['perform'],['performance']
Performance,"@gargvaibhav64, this PR should get you going. What we should do next is we should put a separate module for vcruntime* header files which seem to connect to both libc and std. That would mean we will have to have a separate modulemap vcruntime.h, corecrt.h (?) and vcruntime_string.h. On the ROOT side, before loading libc [here](https://github.com/root-project/root/blob/master/core/metacling/src/TCling.cxx#L1145-L1149) we should load the new `vcruntime`module.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5376:310,load,loading,310,https://root.cern,https://github.com/root-project/root/pull/5376,2,['load'],"['load', 'loading']"
Performance,"@georgtroska I cannot reproduce the problem (i.e. it compiles fine on CentOS and Windows). Could you try to add `message(STATUS ""clad = ${clad}"")` in `core/metacling/src/CMakeLists.txt`, at line 93, as shown below:; ```; # We need to paste the content of the cling plugins disabling link symbol optimizations.; set(CLING_PLUGIN_LINK_LIBS); message(STATUS ""clad = ${clad}""); if (clad); ```; and type `cmake .` in the build directory? You should see something like:; ```; -- [...]; -- And then fallback to: 'c++'; -- clad = OFF; -- Performing Test found_stdstringview; -- [...]; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8292#issuecomment-872164716:295,optimiz,optimizations,295,https://root.cern,https://github.com/root-project/root/issues/8292#issuecomment-872164716,2,"['Perform', 'optimiz']","['Performing', 'optimizations']"
Performance,"@guitargeek thanks for the heads-up, I will fix those later. I have made a new commit, which addresses your and @hageboeck's review comments as much as possible. Point by point, let me quickly explain what changed:. - ""Upgraded"" comments on new functionality to doxygen. I did not doxygen document everything, because most functionality was copy-pasted from the old RooMinimizerFcn. The new things are now documented though.; - Renamed snake_case to dromedary.; - Use unique_ptr for parameter lists, as suggested by Stephan.; - Remove a few obsolete __ROOFIT_NOROOMINIMIZER flags (I guess these are part of the merge conflicts).; - I realized that part of what I changed in PR #8596 could (and imho should) have been introduced here already. I moved functionality to RooAbsMinimizerFcn, namely storage of the to-be-minimized function and constant term optimization information, but did not yet remove it (in this PR) from RooMinimizer. Now it has been removed.; - While going over the above, I realized I had actually *completely* forgot to add back in a backwards compatible way of enabling offsetting for numerical precision! This has now been correctly added back in. Then, about what I did not change:. - I did not have time for doing the include reordering/optimization that @hageboeck suggested. I tried to quickly figure it out, but I couldn't change things fast enough and still be able to guarantee that everything will still work in the later PRs that build on this one. I agree it would be nice, but I hope we can postpone this to some future PR, perhaps after the other additions have been merged.; - As mentioned earlier, RooAbsMinimizerFcn is basically a way to reduce code duplication. This should be seen in light of RooGradMinimizerFcn as well (see again PR #8596) and will also be used for a later addition. I think removing all data members and also the protected vs private suggestion would complicate this goal. I think it's good to merge like this (after fixing the conflict of c",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8569#issuecomment-875559598:852,optimiz,optimization,852,https://root.cern,https://github.com/root-project/root/pull/8569#issuecomment-875559598,1,['optimiz'],['optimization']
Performance,"@guitargeek, could we get a reproducer for the windows failure by any chance?. In addition, maybe now it is a good time to check performance of clad. Do you think you can do this on this PR while we are working on getting things merged properly in the clad master?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14165#issuecomment-1925420859:129,perform,performance,129,https://root.cern,https://github.com/root-project/root/pull/14165#issuecomment-1925420859,1,['perform'],['performance']
Performance,"@hageboeck Ok, here:. ```; /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ...; -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set.; -- Performing Test GLIBCXX_USE_CXX11_ABI; -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed; -- ROOT Platform: linux; -- ROOT Compiler: GNU 4.8.5; -- ROOT Processor: x86_64; -- ROOT Architecture: linuxx8664gcc; -- Build Type: 'Release' (flags = 'foo'); -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo; ...; ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-822487104:223,Perform,Performing,223,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-822487104,2,['Perform'],['Performing']
Performance,"@hageboeck thanks for another Herculean reviewing effort :) Your comments make total sense; indeed, all the copy-pasted stuff still has to be merged with all the modernization and optimization work that was done in the past two years. I will go through as much of your suggestions as I can before I will be on leave after tomorrow for three weeks. After that, if anyone else has time to work on some of the issues, I'd of course welcome the help. As you know, my time on the project is running out, so I probably won't have time to integrate everything. For instance, Manos' mini computation library I have only learned about in the last few months and don't know it in enough detail to make any kind of sensible estimate of how to do it, let alone how much time this would take. Let's discuss detailed plans in our meeting at 14:00 today.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8700#issuecomment-884045031:180,optimiz,optimization,180,https://root.cern,https://github.com/root-project/root/pull/8700#issuecomment-884045031,2,['optimiz'],['optimization']
Performance,"@hageboeck, an constructor w/o arguments (or a more complicate one) is needed to do I/O, for example save a RooWorkspace to file and load it later.; I verified the first implementation: ; ~~~c++; inline RooGenericPdf(){}; ~~~; I assumed that the =default was behaving the same but looking at the thread it seems not to. . I reverted the =default to the previous stage.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4482#issuecomment-539069010:133,load,load,133,https://root.cern,https://github.com/root-project/root/pull/4482#issuecomment-539069010,1,['load'],['load']
Performance,"@hahnjo `countIncludePaths` is fine to fail with `-Dclingtest=On` - that's exactly what we're trying to catch with this test :-) We could filter a bit (better), maybe? In the end what we want to catch with this test is CMake changes (e.g. during upgrade) or rootcling changes that inject a load of irrelevant / wrong `-I`s. We had an instance of that in the past.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8204#issuecomment-845925405:290,load,load,290,https://root.cern,https://github.com/root-project/root/pull/8204#issuecomment-845925405,1,['load'],['load']
Performance,"@hahnjo the problem is this build (default RelWithDebInfo) does not build cling with debug info and it is all optimized out. I did try building the interpreter in debug mode, but on my small machine it took about a full day and stopped with some error (was already quite some time ago). Not sure If I have the resources right now to try again.; I remember I had this modules.idx problem early on when I worked on the ""first"" batch of freebsd patches - it went away after some doing, not sure why, I was fixing some other issues as well in parallel and at some point it just started working. I did not investigate what exactly made it work. Apparently I should have :D. I suspect then it was some uninitialized string, that was what I was hunting down at the moment I think.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14075#issuecomment-1819856030:110,optimiz,optimized,110,https://root.cern,https://github.com/root-project/root/issues/14075#issuecomment-1819856030,1,['optimiz'],['optimized']
Performance,"@hahnjo, the area in clang which @ktf touches hasn't been changing for years. Maybe we just discovered something that upstream has not and we need to tune the patch...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13808#issuecomment-1750211947:150,tune,tune,150,https://root.cern,https://github.com/root-project/root/pull/13808#issuecomment-1750211947,1,['tune'],['tune']
Performance,@jblomer Very nice find. Thanks. The failure in roottest_root_multicore_tp_process_imt is unrelated (due to the performance vagaries of root.cern.ch).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2089#issuecomment-392032278:112,perform,performance,112,https://root.cern,https://github.com/root-project/root/pull/2089#issuecomment-392032278,1,['perform'],['performance']
Performance,@jblomer as far as I am concerned the PR could enter the CI as is. We know already that performance in MT mode will not be breath taking with the current implementation but also that SQLite deals with FS locks too which would inder the performance and that users will not be after minimal runtime with this DS. I would be in favour of merging the code.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2322#issuecomment-412536818:88,perform,performance,88,https://root.cern,https://github.com/root-project/root/pull/2322#issuecomment-412536818,2,['perform'],['performance']
Performance,@jblomer thanks for this. In your comment. > The page pool will require more work. Is that just an optimization or will it be needed to read back the values properly?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16810#issuecomment-2454455317:99,optimiz,optimization,99,https://root.cern,https://github.com/root-project/root/pull/16810#issuecomment-2454455317,1,['optimiz'],['optimization']
Performance,@krasznaa : here are the shared libs loaded by the client:; ```; /usr/lib64/libnss_dns-2.17.so; /usr/lib64/libnss_files-2.17.so; /usr/lib64/libbz2.so.1.0.6; /usr/lib64/libelf-0.176.so; /usr/lib64/libpcre.so.1.2.0; /usr/lib64/libattr.so.1.1.0; /usr/lib64/libkeyutils.so.1.5; /usr/lib64/libkrb5support.so.0.1; /usr/lib64/libdw-0.176.so; /usr/lib64/libresolv-2.17.so; /usr/lib64/libgpg-error.so.0.10.0; /usr/lib64/libgcrypt.so.11.8.2; /usr/lib64/liblz4.so.1.8.3; /usr/lib64/liblzma.so.5.2.2; /usr/lib64/libselinux.so.1; /usr/lib64/libcap.so.2.22; /usr/lib64/libk5crypto.so.3.1; /usr/lib64/libcom_err.so.2.1; /usr/lib64/libkrb5.so.3.3; /usr/lib64/libgssapi_krb5.so.2.2; /usr/lib64/libxml2.so.2.9.1; /usr/lib64/libsystemd.so.0.6.0; /usr/lib64/libcrypto.so.1.0.2k; /usr/lib64/libssl.so.1.0.2k; /usr/lib64/libdl-2.17.so; /usr/lib64/librt-2.17.so; /usr/lib64/libz.so.1.2.7; /usr/lib64/libuuid.so.1.3.0; /usr/lib64/libpthread-2.17.so; /xrootd/build/src/libXrdXml.so.3.0.0; /usr/lib64/libc-2.17.so; /usr/lib64/libgcc_s-4.8.5-20150702.so.1; /usr/lib64/libm-2.17.so; /usr/lib64/libstdc++.so.6.0.19; /xrootd/build/src/libXrdUtils.so.3.0.0; /xrootd/build/src/libXrdAppUtils.so.2.0.0; /xrootd/build/src/XrdCl/libXrdCl.so.3.0.0; /usr/lib64/ld-2.17.so; ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-757877632:37,load,loaded,37,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-757877632,1,['load'],['loaded']
Performance,"@ktf, I was just on a call with @hahnjo and we seem that we can re-introduce a memory optimization that we lost over the last llvm upgrade. That is a version of https://github.com/root-project/root/pull/12062/commits/5280ade7529803007742b004a3afa1f72360d6b3 .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1614540970:86,optimiz,optimization,86,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1614540970,1,['optimiz'],['optimization']
Performance,"@ktf,. ```; cat /Users/vvassilev/Downloads/log\ 2.txt | grep 'on demand'; [89725:internal-dpl-aod-reader]: Loading 'Core' on demand for 'TArrayF'; [89725:internal-dpl-aod-reader]: Loading 'Cling_Runtime' on demand for 'T'; [89725:internal-dpl-aod-reader]: Loading 'Smatrix' on demand for 'MatRepStd'; [89725:internal-dpl-aod-reader]: Loading 'MathCore' on demand for 'R'; [89725:internal-dpl-aod-reader]: Loading 'std' on demand for 'complex'; [89725:internal-dpl-aod-reader]: Loading 'GenVector' on demand for 'Cartesian2D'; [89725:internal-dpl-aod-reader]: Loading 'ROOT_Foundation_Stage1_NoRTTI' on demand for 'TVirtualIsAProxy'; [89725:internal-dpl-aod-reader]: Loading 'Tree' on demand for 'TIOFeatures'; [89725:internal-dpl-aod-reader]: Loading 'MultiProc' on demand for 'ReadBuffer'; [89725:internal-dpl-aod-reader]: Loading 'Hist' on demand for 'TH1'; [89725:internal-dpl-aod-reader]: Loading 'TreePlayer' on demand for 'TTreeFormula'; [89725:internal-dpl-aod-reader]: Loading 'RIO' on demand for 'TMapFile'; [89725:internal-dpl-aod-reader]: Loading 'ROOT_Rtypes' on demand for 'UChar_t'; ```. Looks quite good. However, for some reason we pre-load a lot more modules than I expect. Do you have an up-to-date ROOTSYS/lib/modules.idx file?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13000#issuecomment-1598833198:107,Load,Loading,107,https://root.cern,https://github.com/root-project/root/issues/13000#issuecomment-1598833198,14,"['Load', 'load']","['Loading', 'load']"
Performance,@linev - is your concern that we break ABI with ROOT versions that are greater than 5 years old? Has there ever been a promise that applications predating ROOT 6.02 will be able to link against ROOT 6.22 without recompilation?. There's no intent to have performance gains here: the intent is to have clearer interfaces.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4060#issuecomment-510887484:254,perform,performance,254,https://root.cern,https://github.com/root-project/root/pull/4060#issuecomment-510887484,2,['perform'],['performance']
Performance,@linev I have pushed changes. I have rebased to master and squashed commits to reduce the load on git repository. There are some pending changes from Matevz. Please wait for his commit.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15812#issuecomment-2166450300:90,load,load,90,https://root.cern,https://github.com/root-project/root/pull/15812#issuecomment-2166450300,1,['load'],['load']
Performance,@linev Thanks Sergey! I'm looking forward to optimized openui5 table redraws that come with this version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4433#issuecomment-536056495:45,optimiz,optimized,45,https://root.cern,https://github.com/root-project/root/pull/4433#issuecomment-536056495,1,['optimiz'],['optimized']
Performance,"@linev, sadly i just checked that while compiling civetweb, ROOT has already -pthead flag, that is actually a global ROOT CXX flag and warning is still there.; I think my fix is actually could be right, can you check it please again?; ```; cd /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/net/http && /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/bin/ccache /cvmfs/sft.cern.ch/lcg/contrib/llvm/latest/x86_64-slc6-gcc62-opt/bin/clang -DHTTP_WITHOUT_FASTCGI -DNO_SSL_DL -DUSE_WEBSOCKET -I/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include -I/cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/lib/cmake/VecCore/../../../include -isystem /cvmfs/sft.cern.ch/lcg/views/LCG_rootext20180517/x86_64-slc6-gcc62-opt/include -Qunused-arguments -fcolor-diagnostics -pipe -m64 -Wall -W -pthread -fmodules -fmodules-cache-path=/mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/pcms/ -fno-autolink -fdiagnostics-show-note-include-stack -Wno-module-import-in-extern-c -ivfsoverlay /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/build/include/modulemap.overlay.yaml -Xclang -fmodules-local-submodule-visibility -g -fPIC -pthread -o CMakeFiles/RHTTP.dir/civetweb/civetweb.c.o -c /mnt/build/jenkins/workspace/root-nightly-cxxmodules/BUILDTYPE/Debug/COMPILER/clang_gcc62/LABEL/slc6/root/net/http/civetweb/civetweb.c; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2581#issuecomment-418732291:971,cache,cache-path,971,https://root.cern,https://github.com/root-project/root/pull/2581#issuecomment-418732291,1,['cache'],['cache-path']
Performance,@lmoneta @stwunsch Can you please review? And for Adadelta the meanAbsoluteError is of the order of 1e-3. So I would like to discuss on the threshold value for testing the optimizer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2441#issuecomment-410548934:172,optimiz,optimizer,172,https://root.cern,https://github.com/root-project/root/pull/2441#issuecomment-410548934,1,['optimiz'],['optimizer']
Performance,@lmoneta @stwunsch Can you please review? And for RMSProp the meanAbsoluteError is of the order of 1e-2. So I would like to discuss on the threshold value for testing the optimizer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2440#issuecomment-410543401:171,optimiz,optimizer,171,https://root.cern,https://github.com/root-project/root/pull/2440#issuecomment-410543401,1,['optimiz'],['optimizer']
Performance,"@lmoneta @stwunsch I guess we are good to merge this PR. Once this is merged, I'll rebase and update the next PR for Adagrad optimizer.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2438#issuecomment-411026677:125,optimiz,optimizer,125,https://root.cern,https://github.com/root-project/root/pull/2438#issuecomment-411026677,1,['optimiz'],['optimizer']
Performance,"@lmoneta Once this PR is merged, we should add/update the tutorials in PyKeras to explain the usage of user python code or show this by implementing any other useful user defined function before loading the model.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5632#issuecomment-641967518:195,load,loading,195,https://root.cern,https://github.com/root-project/root/pull/5632#issuecomment-641967518,1,['load'],['loading']
Performance,"@lmoneta, shouldn't we link the whole archive of libVc.a into MathCore? We see some failures such as:; ```; root.exe -q -l -b test/testGenVectorVc.cxx . Processing test/testGenVectorVc.cxx...; IncrementalExecutor::executeFunction: symbol '_ZN4Vc_13SSE9c_general14signMaskDoubleE' unresolved while linking function '_GLOBAL__sub_I_cling_module_9'!; You are probably missing the definition of Vc_1::SSE::c_general::signMaskDouble; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4Vc_13SSE9c_general13absMaskDoubleE' unresolved while linking function '_GLOBAL__sub_I_cling_module_9'!; You are probably missing the definition of Vc_1::SSE::c_general::absMaskDouble; Maybe you need to load the corresponding shared library?; IncrementalExecutor::executeFunction: symbol '_ZN4Vc_16Common10AllBitsSetE' unresolved while linking function '_GLOBAL__sub_I_cling_module_9'!; You are probably missing the definition of Vc_1::Common::AllBitsSet; Maybe you need to load the corresponding shared library?; warning: Failed to call `testGenVectorVc()` to execute the macro.; Add this function or rename the macro. Falling back to `.L`.; ```. Where: ; ```; nm externals/usr/local/lib/libVc.a | grep _ZN4Vc_13SSE9c_general14signMaskDoubleE; 0000000000000580 R _ZN4Vc_13SSE9c_general14signMaskDoubleE; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8788#issuecomment-890588377:447,load,load,447,https://root.cern,https://github.com/root-project/root/pull/8788#issuecomment-890588377,3,['load'],['load']
Performance,"@makortel . > In CMSSW; > ; > * we use `oneapi::tbb::global_control` to set the process' maximum number of threads usable by TBB; > ; > * we create a top-level `oneapi::tbb::task_arena` (with the same number of threads), and all data processing is run within one `task_arena::execute()` call; > ; > * every call to ROOT I/O is isolated with `oneapi::tbb::this_task_arena::isolate()` call; > ; > ; > By adding (or using) a global task arena to ROOT, does this mean, if multiple `TFile`s are writing concurrently, can their tasks be intermingled?. Yes, but I think that's already the case right now because we (incorrectly) use the surrounding task arena for everything. That said, `TTaskGroup` and the wrapped TBB's `task_group` prioritize tasks belonging to that group in their `Wait()` / `wait()` functionality. > Our guess is that ROOT's global task arena would trump the use of `this_task_arena::isolate()`, and allow such intermingling, but we don't really know. Possible that ROOT's task arena ""wins"", I don't know enough about TBB's scheduling internals; I see that you opened an issue to investigate what this means. > We are concerned that by sharing one task arena for unrelated activities it would cause synchronization of those activities because of task stealing. (assuming the explicit arena would trump the `this_task_arena::isolate()` call). As argued above, it's not worse than before except that this fixes the bug that ROOT must only use the resources that it was allowed by the user.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14807#issuecomment-1965963868:498,concurren,concurrently,498,https://root.cern,https://github.com/root-project/root/pull/14807#issuecomment-1965963868,2,['concurren'],['concurrently']
Performance,"@mrodozov, yes we will need to rebase it. ; @oshadura, yes, I want performance numbers. What’s broken ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4088#issuecomment-511461378:67,perform,performance,67,https://root.cern,https://github.com/root-project/root/pull/4088#issuecomment-511461378,1,['perform'],['performance']
Performance,"@oshadura yes, the following minimal reproducer runs in 13 seconds on my workstation with built-in LZMA, and in 6 with LZMA installed from system packages. 75% of the runtime is spent in `R__zipLZMA` in the slow case, 48% in the fast case. This patch fixes that runtime difference. (EDIT: plus from the [build log](https://github.com/root-project/root/files/5049830/LZMA-build-out.log) of built-in LZMA you can see no optimization flags are added at the moment). ```cpp; // write_lzma.cpp; #include <ROOT/RDataFrame.hxx> ; #include <TStopwatch.h> ; #include <iostream> ; ; int main() { ; ROOT::RDF::RSnapshotOptions opts; ; opts.fCompressionAlgorithm = ROOT::kLZMA; ; opts.fCompressionLevel = 6; ; opts.fLazy = true; ; auto trigger = ROOT::RDataFrame(50000000).Define(""x"", [] { return 42; }).Snapshot<int>(""t"", ""f.root"", {""x""}, opts); ; TStopwatch s; ; s.Start(); ; *trigger; ; s.Stop(); ; std::cout << s.RealTime() << std::endl; ; return 0; ; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6144#issuecomment-671236231:418,optimiz,optimization,418,https://root.cern,https://github.com/root-project/root/pull/6144#issuecomment-671236231,1,['optimiz'],['optimization']
Performance,"@pcanal , this change is still part of root master and v6-26 branch and it causes runtime failures in cmssw [a]. Is there any plan to revert this for root master and v6-26 branches too?. [a] https://cmssdt.cern.ch/SDT/cgi-bin/logreader/slc7_amd64_gcc10/CMSSW_12_3_ROOT626_X_2022-01-11-0800/pyRelValMatrixLogs/run/134.807_RunDoubleEGPrpt2015C+RunDoubleEGPrpt2015C+HLTDR2_25ns+RECODR2_25nsreHLT_HIPM+HARVESTDR2/step2_RunDoubleEGPrpt2015C+RunDoubleEGPrpt2015C+HLTDR2_25ns+RECODR2_25nsreHLT_HIPM+HARVESTDR2.log#/; ```; cmsRun: /data/cmsbld/jenkins/workspace/build-any-ib/w/tmp/BUILDROOT/997e45a2cab6f1aa8d23229a1e263b28/opt/cmssw/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_3_ROOT626_X_2022-01-11-0800/src/FWCore/Concurrency/src/WaitingTaskList.cc:57: void edm::WaitingTaskList::reset(): Assertion `m_head == nullptr' failed. A fatal system signal has occurred: abort signal; The following is the call stack containing the origin of the signal. Tue Jan 11 18:56:50 CET 2022; Thread 10 (Thread 0x2b61c6c00700 (LWP 19510) ""cmsRun""):; #0 0x00002b6177e159fd in nanosleep () from /lib64/libc.so.6; #1 0x00002b6177e15894 in sleep () from /lib64/libc.so.6; #2 0x00002b617d88eca0 in sig_pause_for_stacktrace () from /cvmfs/cms-ib.cern.ch/nweek-02715/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_3_ROOT626_X_2022-01-11-0800/lib/slc7_amd64_gcc10/pluginFWCoreServicesPlugins.so; #3 <signal handler called>; #4 0x00002b61752e3570 in check_match () from /lib64/ld-linux-x86-64.so.2; #5 0x00002b61752e3dbb in do_lookup_x () from /lib64/ld-linux-x86-64.so.2; #6 0x00002b61752e409f in _dl_lookup_symbol_x () from /lib64/ld-linux-x86-64.so.2; #7 0x00002b61752e8dee in _dl_fixup () from /lib64/ld-linux-x86-64.so.2; #8 0x00002b61752f09ea in _dl_runtime_resolve_xsave () from /lib64/ld-linux-x86-64.so.2; #9 0x00002b61754a9961 in edm::WaitingTaskList::reset() () from /cvmfs/cms-ib.cern.ch/nweek-02715/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_3_ROOT626_X_2022-01-11-0800/lib/slc7_amd64_gcc10/libFWCoreConcurrency.so; #10 0x00002b61757aa998 in edm",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7837#issuecomment-1010312773:701,Concurren,Concurrency,701,https://root.cern,https://github.com/root-project/root/pull/7837#issuecomment-1010312773,1,['Concurren'],['Concurrency']
Performance,"@pcanal - the local caching mechanism in `TFilePrefetch` is permanent cache -- it lives on the local disk beyond the lifetime of the actual process. This is a buffer -- it uses the system memory (i.e., the page cache and, eventually, the filesystem) to pull the data locally in large, storage-friendly reads. This allows us to do latency hiding for the duration of the running process. It does *not* cache the data beyond the lifetime of the running process. It is much simpler than the `TFilePrefetch` mechanism as the buffering is only done on demand. Overall, it's a pretty useful improvement - a modest improvement, admittedly - that we've used for many years in CMS.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/146#issuecomment-327365789:70,cache,cache,70,https://root.cern,https://github.com/root-project/root/pull/146#issuecomment-327365789,4,"['cache', 'latency']","['cache', 'latency']"
Performance,"@pcanal . My implementation also load `libHist` only when function was not found.; I see no difference. . Of course, I can remove locking.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14969#issuecomment-1997803043:33,load,load,33,https://root.cern,https://github.com/root-project/root/pull/14969#issuecomment-1997803043,1,['load'],['load']
Performance,"@pcanal : Thx, I have seen that. For MacOS, as I said in the OP, I was expecting problems..; I am really puzzled by the segfaults though. I mean, if it was working before, I do not see how the RTLD_DEEPBIND should break something.; That basically means, that there is already a global symbol of something loaded, that should have precedence over symbols in libCling and libCling's dependencies. But OK, I am not that much an expert of the ROOT internals.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-561345680:305,load,loaded,305,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-561345680,1,['load'],['loaded']
Performance,"@pcanal ; Hi Philippe, this failure is not only with modules. Just moving function definition of IPruneTool causes cmsUnload test failure with master, which can be seen in https://github.com/root-project/root/pull/2848 or https://github.com/root-project/root/commit/258d5c41f042dc260adfd24d5d51906a9c326236. This is very weird. Cling is failing to correctly unload AutoParse regardless of whether it has modules or not. I also thought that Cling was only partially removing transaction for AutoParse, but actually AutoParse was stored in one transaction so it wasn't a problem. I think the problem is that Cling is removing ""Names"" of SiStripCluster when unloading AutoParse (which is kind of expected) but then it complains that it doesn't know SiStripCluster even if libStrip.so is loaded.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2852#issuecomment-435040825:784,load,loaded,784,https://root.cern,https://github.com/root-project/root/pull/2852#issuecomment-435040825,1,['load'],['loaded']
Performance,@pcanal ; I will add special testing into `roottest` once PR merged into master; Basic functionality does not changed - just less checks are performed while json decoding,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3837#issuecomment-493991588:141,perform,performed,141,https://root.cern,https://github.com/root-project/root/pull/3837#issuecomment-493991588,1,['perform'],['performed']
Performance,"@pcanal ; What is root-io-pcm? Do you mean rdict.pcm?; I once tried to kill rdict.pcm for modules like we're doing here for rootmap, but it made no difference for the performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2396#issuecomment-435198987:167,perform,performance,167,https://root.cern,https://github.com/root-project/root/pull/2396#issuecomment-435198987,1,['perform'],['performance']
Performance,"@pcanal @bbockelm . The updates address some issues for random read case and the code should be good now. Some updates after last Friday meeting:. As we discussed last Friday, random read performance is very slow. It technically cannot be improved if we decide to use cache. I also tried random read workload with pthread. The performance was the same with tbb. I think the reason is obvious that reading next random event will invalidate current cache and all baskets need to be reset and cache buffer has to be filled by next cluster of events. Based on current cache replacement policy, the slow performance is reasonable. Philippe pointed out the common use case for ROOT should be mostly sequential reads plus little random reads. I was thinking it would be not helpful if we store decompressed baskets by main thread (when cache miss happens) back to cache. Because for sequential read, they will not be accessed again, neither random reads since the cache will be invalidate and all decompressed baskets in cache should be marked as invalid.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-335354319:188,perform,performance,188,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-335354319,11,"['cache', 'perform']","['cache', 'performance']"
Performance,"@pcanal @jblomer The failure on windows has nothing to do with this patch, there is a git failure due to a concurrency issue. I'll give a new try.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4888#issuecomment-580150404:107,concurren,concurrency,107,https://root.cern,https://github.com/root-project/root/pull/4888#issuecomment-580150404,1,['concurren'],['concurrency']
Performance,@pcanal I agree with adding the comment. Note that concurrent access to different elements of a `std::vector` is guaranteed to be safe (except for `vector<bool>`.......),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425173652:51,concurren,concurrent,51,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425173652,1,['concurren'],['concurrent']
Performance,"@pcanal I saw the `ClingLoadUnloadFile.ConcurrentLoadUnloadOneLibPerThread` test failing on the new CI for this PR, on fedora38 and alma8; could you check?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13451#issuecomment-1685044018:39,Concurren,ConcurrentLoadUnloadOneLibPerThread,39,https://root.cern,https://github.com/root-project/root/pull/13451#issuecomment-1685044018,1,['Concurren'],['ConcurrentLoadUnloadOneLibPerThread']
Performance,"@pcanal I understand this as follows: the `RRawFileDavix` class would move into the io/davix source space, which creates a libRRawFileDavix. The libRRawFileDavix statically depends on libRDavix. And libRIO dynamically loads libRRawFileDavix. Is this correct?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030#issuecomment-441665999:218,load,loads,218,https://root.cern,https://github.com/root-project/root/pull/3030#issuecomment-441665999,1,['load'],['loads']
Performance,"@pcanal I wrote a testing program on my own. For compression, it basically reads the root file given in your ticket and compress all the trees in it and write out to another file. For decompression, it simply iterates all entries in the compressed file. I used TStopWatch to measure the performance. I did not use TTreePerfStats in my program.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/81#issuecomment-142029158:287,perform,performance,287,https://root.cern,https://github.com/root-project/root/pull/81#issuecomment-142029158,1,['perform'],['performance']
Performance,"@pcanal Note that we might still face the problem with DLLs loaded from somewhere else, and for which there is no `.lib`, so maybe I should try to find every import library for every DLL, but it looks like an overkill to me, especially if I have to search all volumes (imagine NFS). Another option would be to search in the `%LIB%` list of directories, so if a library is really needed, the user would have to add its location in `%LIB%`. I'll try to evaluate the cost and maybe come with something.; And note also that until now, we only had `ACLiC` trying to link with to many (non existing) libraries on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6156#issuecomment-672203580:60,load,loaded,60,https://root.cern,https://github.com/root-project/root/pull/6156#issuecomment-672203580,1,['load'],['loaded']
Performance,"@pcanal Probably ""solve"" is too much, these incompatibilities are anyway already solved in gcc72. I just want to reduce the risk of doing dangerous things. (Also this was bad for the performance)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1821#issuecomment-379066604:183,perform,performance,183,https://root.cern,https://github.com/root-project/root/pull/1821#issuecomment-379066604,1,['perform'],['performance']
Performance,@pcanal ROOT-performance-centos8-multicore/default is dead temporary.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6952#issuecomment-745355559:13,perform,performance-,13,https://root.cern,https://github.com/root-project/root/pull/6952#issuecomment-745355559,1,['perform'],['performance-']
Performance,"@pcanal The implementation is, logically speaking, exactly the same (see `TBufferFile.cxx:Read/WriteDouble32`. ; The main difference is design-wise, for the fact that RNTuple's quantization is:; - not bound to the type of the variable (you can quantize any `float` or `double`, not just a `Double32_t`; - not statically chosen (you can set the value range and the bit width at runtime rather than deciding once and for all via the variable comments). We can discuss in more details, but in my opinion those are the two main points of difference. The implementation itself is trivial and it's akin to `Read/WriteFastArrayDouble32` (but slightly more performant in principle, as it doesn't have to check the min/max/scale factor for each element - they are all the same within a call to Pack/Unpack). . As a last divergence point, `Double32_t` silently clamps the values that fall our of range, while Real32Quant will throw in that situation.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16390#issuecomment-2360136674:649,perform,performant,649,https://root.cern,https://github.com/root-project/root/pull/16390#issuecomment-2360136674,1,['perform'],['performant']
Performance,"@pcanal actually my idea to transform the error into a warning does not work: without VecGeom support, the plugin mechanism already issues errors if I do:; ```; root [1] gROOT->GetPluginManager()->FindHandler(""TVirtualGeoConverter"")->LoadPlugin(); Module ConverterVG not found.; Error in <TCling::LoadPCM>: ROOT PCM /Users/agheata/root/root_install/lib/libConverterVG_rdict.pcm file does not exist; ... long list of PCM's tried by LoadPCM; (int) 0; ```; The return value looks wrong by the way, I would expect -1 in this case. Is there a way to check if a module was compiled without issuing errors?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12315#issuecomment-1430946012:234,Load,LoadPlugin,234,https://root.cern,https://github.com/root-project/root/pull/12315#issuecomment-1430946012,3,['Load'],"['LoadPCM', 'LoadPlugin']"
Performance,"@pcanal can you point me to the part of the code that accesses the same TFile concurrently? Since I'm with ROOT we have been very careful to follow the ""one file per thread"" rule.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608548474:78,concurren,concurrently,78,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608548474,1,['concurren'],['concurrently']
Performance,"@pcanal it works for me (master on Ubuntu 20.04.6). E.g:; ```; ubuntu@root-cmake-devel:~/build/ninja$ rm -rf *-prefix builtins; ubuntu@root-cmake-devel:~/build/ninja$ ninja; [0/1] Re-running CMake...; CMake Deprecation Warning at CMakeLists.txt:35 (cmake_policy):; The OLD behavior for policy CMP0116 will be removed from a future version; of CMake. The cmake-policies(7) manual explains that the OLD behaviors of all; policies are deprecated and that a policy should be set to OLD only under; specific short-term circumstances. Projects should be ported to the NEW; behavior and not rely on setting a policy to OLD. -- Building ROOT version 6.33.01. ... [106/527] Performing download step (download, verify and extract) for 'BUILTIN_cppzmq'; -- Downloading...; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; timeout='none'; inactivity timeout='none'; -- Using src='http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/sources/cppzmq-4.8.1.tar.gz'; -- [download 100% complete]; -- verifying file...; file='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; -- Downloading... done; -- extracting...; src='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/BUILTIN_cppzmq'; -- extracting... [tar xfz]; -- extracting... [analysis]; -- extracting... [rename]; -- extracting... [clean up]; -- extracting... done; [287/527] Generating G__ROOTHist.cxx, ../../lib/ROOTHist.pcm. ... [106/527] Performing download step (download, verify and extract) for 'BUILTIN_cppzmq'; -- Downloading...; dst='/home/ubuntu/build/ninja/builtins/zeromq/cppzmq/BUILTIN_cppzmq-prefix/src/cppzmq-4.8.1.tar.gz'; timeout='none'; inactivity timeout='none'; -- Using src='http://lcgpackages.web.cern.ch/lcgpackages/tarFiles/sources/cppzmq-4.8.1.tar.gz'; -- [download 100% complete]; -- verifying file...; file='/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/16227#issuecomment-2288847307:665,Perform,Performing,665,https://root.cern,https://github.com/root-project/root/issues/16227#issuecomment-2288847307,1,['Perform'],['Performing']
Performance,"@pcanal it's in the standard, section 23.2.2 on ""Container data races"", point 2 reads:; > Notwithstanding (17.6.5.9), implementations are required to avoid data races when the contents of the contained object in different elements in the same container, excepting `vector<bool>`, are modified concurrently. (where 17.6.5.9 is unrelated to the topic at hand). EDIT: excepting `vector<bool>`, not excepting `vector` :). Extra notes:; * this is one of the main reasons why `vector<bool>` was a horrible horrible decision; * your point about cache lines still means that concurrent access to different vector elements will suffer from false sharing, but that is a second-order effect (one day we might try to switch all these vectors for `std::list` and see if there is any benefit)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2708#issuecomment-425183688:293,concurren,concurrently,293,https://root.cern,https://github.com/root-project/root/pull/2708#issuecomment-425183688,3,"['cache', 'concurren']","['cache', 'concurrent', 'concurrently']"
Performance,"@pcanal now users can register a drawing of a result histogram in the same way in single- and multi-thread analysis, like this:. ```c++; // Draw partial result on canvas every 500 events; TCanvas c(""c"", ""Running event loop..."");; h.OnPartialResult(100, [&c](TH1D &h_) {; c.cd();; h_.Draw();; c.Update();; });; ```; @Axel-Naumann users can open a `TBrowser` and check result updates while the event loop is running quite easily:; ```c++; // create ""TDFResults"" directory in TBrowser; TBrowser b(""b"", ""event loop peeper"");; TMemFile m(""TDFResults"", ""RECREATE"");. // add partial result to the ""TDFResults""; m.Browse(&b); // it would be cool if we could change the current directory in the TBrowser to `TDFResults` here; h.OnPartialResult(decltype(h)::kOnce, [&m](TH1D &h_) { m.Add(&h_); });. // call ProcessEvents every once in a while during the event loop to allow users to navigate the TBrowser; h.OnPartialResult(50, [](TH1D &hist) { gSystem->ProcessEvents(); });; ```; @peremato here is how one would implement a thread-safe progress bar for a TDF multi-thread analysis; ```c++; // Update progress bar every 100 events; std::string progress;; std::mutex bar_mutex;; c.OnPartialResultSlot(nEvents / 100, [&progress, &bar_mutex](unsigned int, ULong64_t &c_) {; std::lock_guard<std::mutex> lg(bar_mutex);; progress.push_back('#');; std::cout << ""\r["" << std::left << std::setw(100) << progress << ']' << std::flush;; });; ```. Here are the corresponding self-contained, fully working code examples:; [draw_partial_result.txt](https://github.com/root-project/root/files/1327464/draw_partial_result.txt); [inspect_analysis.txt](https://github.com/root-project/root/files/1327466/inspect_analysis.txt); [progress_bar.txt](https://github.com/root-project/root/files/1327469/progress_bar.txt); (for some reason github does not allow files with `.cpp` extension :man_shrugging: ). For common-enough callbacks one can always imagine to provide helper functions of course.; I like this feature a lot. What do y",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1037#issuecomment-331722007:94,multi-thread,multi-thread,94,https://root.cern,https://github.com/root-project/root/pull/1037#issuecomment-331722007,2,['multi-thread'],['multi-thread']
Performance,"@pcanal proposes to add the literal diagnostic, which helps understand ""recent failure"" in two years, and which allows to search if we run into this again, e.g. in 6-26:. ```; [ 70%] Generating G__Core.cxx, ../lib/Core.pcm. /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/etc/cling/std.modulemap:491:10: error: module 'std.bits/ranges_base.h' requires feature 'cplusplus20'; module ""bits/ranges_base.h"" {; ^; /usr/include/c++/12/experimental/string_view:43:10: note: submodule of top-level module 'std' implicitly imported here; #include <bits/ranges_base.h> // enable_borrowed_range, enable_view; ^; In file included from input_line_3:2:. /home/sftnight/build/night/LABEL/ROOT-fedora36/SPEC/default/V/master/build/include/Rtypes.h:195:10: fatal error: could not build module 'ROOT_Foundation_Stage1_NoRTTI'; #include ""TIsAProxy.h""; ~~~~~~~~^~~~~~~~~~~~~. Error: Error loading the default rootcling header files.; gmake[2]: *** [core/CMakeFiles/G__Core.dir/build.make:474: core/G__Core.cxx] Error 1; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12276#issuecomment-1427500535:896,load,loading,896,https://root.cern,https://github.com/root-project/root/pull/12276#issuecomment-1427500535,1,['load'],['loading']
Performance,@pcanal thanks for reviewing! (note that `ROOT-performance-centos7-multicore` always runs with `-DCTEST_TEST_EXCLUDE_NONE=On`),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6081#issuecomment-664510182:47,perform,performance-,47,https://root.cern,https://github.com/root-project/root/pull/6081#issuecomment-664510182,1,['perform'],['performance-']
Performance,@pcanal what do you think? Shall I just drop the second commit and forget about derived classes? setting load to kTRUE would make many more tests failing. The only other thing I can think of is to unload after load...; Or to modify the failing test .ref,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14930#issuecomment-1992117429:105,load,load,105,https://root.cern,https://github.com/root-project/root/pull/14930#issuecomment-1992117429,2,['load'],['load']
Performance,"@pcanal, @gemmeren : This PR causes a crash in loading PyTorch model with torch.jit, due to the usage of std::regex, see this open pytorch issue; https://github.com/pytorch/pytorch/issues/49460. and the failures happening in Jenkins after this commit: ; https://lcgapp-services.cern.ch/root-jenkins/view/ROOT%20Nightly/job/root-nightly-master/LABEL=ROOT-ubuntu2204,SPEC=cxx20,V=master/3756/. Can we avoid here to use std::regexp ?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14716#issuecomment-1949940758:47,load,loading,47,https://root.cern,https://github.com/root-project/root/pull/14716#issuecomment-1949940758,1,['load'],['loading']
Performance,"@pcanal, could you give us a hand here?. This PR removes the generation of rootmap files when we have a module. It fails because of similar to this error:. ```; Fatal in <TClass::SetUnloaded>: The TClass for ROOT::Math::SMatrix<double,4,3,ROOT::Math::MatRepStd<double,4,3> > is being unloaded when in state 3. aborting; #0 0x00007fe869e2a07a in __GI___waitpid (pid=12953, stat_loc=stat_loc; entry=0x7ffd87834410, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007fe869da2fbb in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007fe86af40302 in TUnixSystem::StackTrace() () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCore.so; #3 0x00007fe86ae177ba in DefaultErrorHandler(int, bool, char const*, char const*) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCore.so; #4 0x00007fe86ae17152 in ErrorHandler () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCore.so; #5 0x00007fe86ae2ddbe in TObject::Fatal(char const*, char const*, ...) const () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCore.so; #6 0x00007fe86aee13b6 in TClass::SetUnloaded() () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCore.so; #7 0x00007fe86ae94f94 in ROOT::RemoveClass(char const*) () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCore.so; #8 0x00007fe86af00bef in ROOT::TGenericClassInfo::~TGenericClassInfo() () from /mnt/build/workspace/root-pullrequests-build/build/lib/libCore.so; #9 0x00007fe869d97ff8 in __run_exit_handlers (status=1, listp=0x7fe86a1225f8 <__exit_funcs>, run_list_atexit=run_list_atexit; entry=true) at exit.c:82; ```. Here we are destroying a TGenericClassInfo object which has never been loaded. I would guess that without having rootmap files around we load less classes (i.e. only the ones we actually need). Could you give an example when this happens or even better tell how to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2542#issuecomment-440651726:525,optimiz,optimized,525,https://root.cern,https://github.com/root-project/root/pull/2542#issuecomment-440651726,3,"['load', 'optimiz']","['load', 'loaded', 'optimized']"
Performance,"@pcanal, my performance quest did not bring a lot of fruit unfortunately. The good news is that this PR does not introduce significant performance regression. There is 2-5% slowdown on some tests but I think the improvement of type consistency is worth it. The tests were primarily focused at the TClingCallFunc performance I have not excessively tested the performance of other `cling::Value`-related code as we do not really have an idiom which is widely used. Here are some performance benchmarks details:. <summary>master</summary>; <details>. ```; ctest -R .*callfunc.* ; Test project /build/vvassilev/root-callfunc-master/release; Start 1829: roottest-root-meta-callfunc-assertUnload-auto; 1/5 Test #1829: roottest-root-meta-callfunc-assertUnload-auto ......... Passed 0.25 sec; Start 1830: roottest-root-meta-callfunc-assertUnloadHelper-auto; 2/5 Test #1830: roottest-root-meta-callfunc-assertUnloadHelper-auto ... Passed 0.16 sec; Start 1831: roottest-root-meta-callfunc-execResolveAt-auto; 3/5 Test #1831: roottest-root-meta-callfunc-execResolveAt-auto ........ Passed 0.43 sec; Start 1832: roottest-root-meta-callfunc-runmemberFunc-auto; 4/5 Test #1832: roottest-root-meta-callfunc-runmemberFunc-auto ........ Passed 0.34 sec; Start 1833: roottest-root-meta-callfunc-runsimpleFunc-auto; 5/5 Test #1833: roottest-root-meta-callfunc-runsimpleFunc-auto ........ Passed 0.40 sec. ctest -R .*treefor.* ; Test project /build/vvassilev/root-callfunc-master/release; Start 2217: roottest-root-treeformula-array-make; 1/19 Test #2217: roottest-root-treeformula-array-make ............. Passed 34.53 sec; Start 2218: roottest-root-treeformula-casting-make; 2/19 Test #2218: roottest-root-treeformula-casting-make ........... Passed 3.28 sec; Start 2219: roottest-root-treeformula-clones-make; 3/19 Test #2219: roottest-root-treeformula-clones-make ............ Passed 0.91 sec; Start 2220: roottest-root-treeformula-depth-make; 4/19 Test #2220: roottest-root-treeformula-depth-make ............. Passe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11252#issuecomment-1252723800:12,perform,performance,12,https://root.cern,https://github.com/root-project/root/pull/11252#issuecomment-1252723800,5,['perform'],['performance']
Performance,"@phsft-bot Build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3221#issuecomment-454798055:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/3221#issuecomment-454798055,2,['perform'],['performance-']
Performance,@phsft-bot build ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11956#issuecomment-1362882629:22,perform,performance-,22,https://root.cern,https://github.com/root-project/root/pull/11956#issuecomment-1362882629,1,['perform'],['performance-']
Performance,"@phsft-bot build also on ROOT-debian10-i386/cxx14, ROOT-performance-centos8-multicore/default, ROOT-ubuntu16/nortcxxmod, ROOT-ubuntu2004/soversion, mac1015/python3, mac11/cxx17, windows10/cxx14 with flags -Droofit_multiprocess=ON -Dbuiltin_zeromq=ON -Dbuiltin_cppzmq=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9473#issuecomment-998024699:56,perform,performance-,56,https://root.cern,https://github.com/root-project/root/pull/9473#issuecomment-998024699,1,['perform'],['performance-']
Performance,"@phsft-bot build just ROOT-performance-centos7-multicore/default, mac1015/cxx17 on with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-630407267:27,perform,performance-,27,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-630407267,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6070#issuecomment-668712782:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/6070#issuecomment-668712782,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6445#issuecomment-698670983:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/6445#issuecomment-698670983,68,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4395#issuecomment-532667956:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/4395#issuecomment-532667956,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605622842:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605622842,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_BUILD_TYPE=Debug -DKEEP_PR_BUILDS_FOR_A_DAY=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4395#issuecomment-532514688:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/4395#issuecomment-532514688,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-641916442:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-641916442,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_BUILD_TYPE=Debug -DLLVM_BUILD_TYPE=Debug -DKEEP_PR_BUILDS_FOR_A_DAY=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4395#issuecomment-532269397:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/4395#issuecomment-532269397,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_BUILD_TYPE=Release,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605696904:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605696904,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_CXX_FLAGS=-DR__SUGGEST_NEW_INTERFACE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-458540675:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-458540675,2,['perform'],['performance-']
Performance,"@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_CXX_FLAGS=\""-O2 -DNDEBUG -DR__SUGGEST_FASTER_FUNCTIONS -DR__SUGGEST_FASTER_CLASSES\""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-448576567:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-448576567,1,['perform'],['performance-']
Performance,"@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCMAKE_CXX_FLAGS=\\""-O2 -DNDEBUG -DR__SUGGEST_FASTER_FUNCTIONS -DR__SUGGEST_FASTER_CLASSES\\""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-448576657:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-448576657,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3873#issuecomment-496538551:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3873#issuecomment-496538551,5,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DDIAGNOSTICS_FAIL_TESTS=ON -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5591#issuecomment-642524568:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/5591#issuecomment-642524568,7,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DKEEP_PR_BUILDS_FOR_A_DAY=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5842#issuecomment-647010399:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/5842#issuecomment-647010399,12,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DKEEP_PR_BUILDS_FOR_A_DAY=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4395#issuecomment-532525455:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/4395#issuecomment-532525455,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default with flags -DKEPP_PR_BUILDS_FOR_A_DAY=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5842#issuecomment-647009609:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/5842#issuecomment-647009609,1,['perform'],['performance-']
Performance,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3735#issuecomment-486727554:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3735#issuecomment-486727554,1,['perform'],['performance-']
Performance,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, ROOT-fedora29/python3 with flags -Dpyroot_experimental=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3298#issuecomment-456424455:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3298#issuecomment-456424455,1,['perform'],['performance-']
Performance,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, ROOT-fedora29/python3 with flags -Dpyroot_experimental=ON -DCTEST_TEST_EXCLUDE_NONE=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3298#issuecomment-456535617:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3298#issuecomment-456535617,1,['perform'],['performance-']
Performance,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, ROOT-fedora29/python3, mac1014/cxx17 with flags -Dpyroot_experimental=ON",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3322#issuecomment-457595370:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3322#issuecomment-457595370,2,['perform'],['performance-']
Performance,"@phsft-bot build just on ROOT-performance-centos7-multicore/default, mac1015/cxx17 on with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-630408204:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-630408204,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6445#issuecomment-698669477:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/6445#issuecomment-698669477,1,['perform'],['performance-']
Performance,"@phsft-bot build just on ROOT-performance-centos7-multicore/default. Updated the failing test roottest:#509, so just checking on one machine if that worked.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5599#issuecomment-627306786:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/5599#issuecomment-627306786,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos7-multicore/noimt,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3216#issuecomment-455207762:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3216#issuecomment-455207762,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11755#issuecomment-1355639640:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/11755#issuecomment-1355639640,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10858#issuecomment-1170868849:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/10858#issuecomment-1170868849,12,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17 -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12274#issuecomment-1433510272:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/12274#issuecomment-1433510272,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11347#issuecomment-1243429014:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/11347#issuecomment-1243429014,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On -Druntime_cxxmodules=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13112#issuecomment-1614197389:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/13112#issuecomment-1614197389,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/defaul with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6854#issuecomment-734003581:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/6854#issuecomment-734003581,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6532#issuecomment-704987976:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/6532#issuecomment-704987976,45,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default because the error is unexpected.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6877#issuecomment-733960015:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/6877#issuecomment-733960015,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCMAKE_CXX_FLAGS_RELEASE=brokenFlag,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7932#issuecomment-823138608:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/7932#issuecomment-823138608,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6854#issuecomment-734009404:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/6854#issuecomment-734009404,6,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11609#issuecomment-1283613722:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/11609#issuecomment-1283613722,2,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF -Droot7=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-1282869530:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-1282869530,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DBUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9486#issuecomment-1026986959:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/9486#issuecomment-1026986959,2,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DLLVM_BUILD_TYPE=Debug -DCMAKE_BUILD_TYPE=Debug,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-1027009008:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-1027009008,13,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9437#issuecomment-993458387:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/9437#issuecomment-993458387,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dr=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9819#issuecomment-1033734991:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/9819#issuecomment-1033734991,2,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -Dvdt=OFF -Dbuiltin_vdt=OFF,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7247#issuecomment-781296077:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/7247#issuecomment-781296077,1,['perform'],['performance-']
Performance,"@phsft-bot build just on ROOT-performance-centos8-multicore/default, mac1015/python3, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9342#issuecomment-980048844:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/9342#issuecomment-980048844,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3760#issuecomment-1022683558:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3760#issuecomment-1022683558,1,['perform'],['performance-']
Performance,@phsft-bot build just on ROOT-performance-centos8-multicore/soversion,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14031#issuecomment-1863077859:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/14031#issuecomment-1863077859,5,['perform'],['performance-']
Performance,"@phsft-bot build just on mac1014/python3, ROOT-performance-centos7-multicore/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6036#issuecomment-659474542:47,perform,performance-,47,https://root.cern,https://github.com/root-project/root/pull/6036#issuecomment-659474542,1,['perform'],['performance-']
Performance,@phsft-bot build just on slc6/clang_gcc62 with flags -Dcxxmodules=On; @vgvassilev had to clear the build queue as something screwed up and made the PR by @xvallspl get built 8 times,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/470#issuecomment-290209174:105,queue,queue,105,https://root.cern,https://github.com/root-project/root/pull/470#issuecomment-290209174,1,['queue'],['queue']
Performance,"@phsft-bot build on ROOT-debian10-i386/cxx14, ROOT-performance-centos7-multicore/default, ROOT-fedora29/python3, ROOT-fedora30/cxx14, ROOT-fedora31/noimt, ROOT-ubuntu16/nortcxxmod, mac1015/cxx17, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5235#issuecomment-605791178:51,perform,performance-,51,https://root.cern,https://github.com/root-project/root/pull/5235#issuecomment-605791178,3,['perform'],['performance-']
Performance,"@phsft-bot build on ROOT-debian10-i386/cxx14, ROOT-performance-centos7-multicore/default, ROOT-fedora30/cxx14, ROOT-fedora31/noimt, ROOT-ubuntu16/nortcxxmod, mac1014/python3, mac1015/cxx17, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5800#issuecomment-640163945:51,perform,performance-,51,https://root.cern,https://github.com/root-project/root/pull/5800#issuecomment-640163945,1,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos7-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3533#issuecomment-472619384:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/3533#issuecomment-472619384,1,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos7-multicore/default with flags -Dfail-on-missing=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5148#issuecomment-599439059:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/5148#issuecomment-599439059,1,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos7-multicore/default with flags -Dfail-on-missing=ON -Dcudnn=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5148#issuecomment-599447398:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/5148#issuecomment-599447398,1,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos7-multicore/default with flags -Dfail-on-missing=ON -Dcudnn=On -Dcuda=ON -Dtmva-gpu=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5148#issuecomment-599452833:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/5148#issuecomment-599452833,1,['perform'],['performance-']
Performance,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-fedora30/cxx14, ROOT-ubuntu16/nortcxxmod, ROOT-ubuntu18.04-i386/cxx14, mac1014/cxx17, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4742#issuecomment-572418603:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/4742#issuecomment-572418603,1,['perform'],['performance-']
Performance,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-fedora30/cxx14, ROOT-ubuntu16/nortcxxmod, ROOT-ubuntu18.04-i386/cxx14, mac1014/cxx17, windows10/cxx14 with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4675#issuecomment-567422581:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/4675#issuecomment-567422581,1,['perform'],['performance-']
Performance,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, ROOT-ubuntu18.04-i386/cxx14, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3695#issuecomment-483737778:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/3695#issuecomment-483737778,1,['perform'],['performance-']
Performance,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3631#issuecomment-479489789:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/3631#issuecomment-479489789,4,['perform'],['performance-']
Performance,"@phsft-bot build on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17, windows10/default with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3873#issuecomment-502397287:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/3873#issuecomment-502397287,5,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos8-multicore/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10760#issuecomment-1175292408:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/10760#issuecomment-1175292408,2,['perform'],['performance-']
Performance,"@phsft-bot build on ROOT-performance-centos8-multicore/cxx17, windows10/cxx14",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10787#issuecomment-1162811921:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/10787#issuecomment-1162811921,1,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9184#issuecomment-995003213:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/9184#issuecomment-995003213,2,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8956#issuecomment-912536895:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/8956#issuecomment-912536895,1,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9437#issuecomment-993459580:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/9437#issuecomment-993459580,1,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dcuda=On -Dtmva-gpu=On -Dfail-on-missing=Off,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9437#issuecomment-993473461:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/9437#issuecomment-993473461,1,['perform'],['performance-']
Performance,@phsft-bot build on ROOT-performance-centos8-multicore/default with flags -Dminuit2_omp=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9327#issuecomment-996543655:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/9327#issuecomment-996543655,1,['perform'],['performance-']
Performance,"@phsft-bot build on ROOT-performance-centos8-multicore/default, mac1015/noimt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9464#issuecomment-996868918:25,perform,performance-,25,https://root.cern,https://github.com/root-project/root/pull/9464#issuecomment-996868918,1,['perform'],['performance-']
Performance,@phsft-bot build only on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3237#issuecomment-454440056:30,perform,performance-,30,https://root.cern,https://github.com/root-project/root/pull/3237#issuecomment-454440056,1,['perform'],['performance-']
Performance,@phsft-bot build with flags -DCMAKE_BUILD_TYPE=Optimized,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/971#issuecomment-328751885:47,Optimiz,Optimized,47,https://root.cern,https://github.com/root-project/root/pull/971#issuecomment-328751885,1,['Optimiz'],['Optimized']
Performance,@phsft-bot build with flags -DCMAKE_CXX_FLAGS=-DR__SUGGEST_NEW_INTERFACE just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-458493963:86,perform,performance-,86,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-458493963,1,['perform'],['performance-']
Performance,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On -Dxml=Off just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10104#issuecomment-1066813190:80,perform,performance-,80,https://root.cern,https://github.com/root-project/root/pull/10104#issuecomment-1066813190,2,['perform'],['performance-']
Performance,"@phsft-bot build with flags -DCXXFLAGS=""${CXXFLAGS} -DR__SUGGEST_NEW_INTERFACE"" just on ROOT-performance-centos7-multicore/default",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-458450918:93,perform,performance-,93,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-458450918,1,['perform'],['performance-']
Performance,@phsft-bot build with flags -Druntime_cxxmodules=On -DCMAKE_BUILD_TYPE=Optimized,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1229#issuecomment-339350950:71,Optimiz,Optimized,71,https://root.cern,https://github.com/root-project/root/pull/1229#issuecomment-339350950,1,['Optimiz'],['Optimized']
Performance,@phsft-bot build with flags just on ROOT-performance-centos7-multicore/default -DCMAKE_CXX_FLAGS=-DR__SUGGEST_NEW_INTERFACE,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3100#issuecomment-458458552:41,perform,performance-,41,https://root.cern,https://github.com/root-project/root/pull/3100#issuecomment-458458552,2,['perform'],['performance-']
Performance,"@phsft-bot on ROOT-performance-centos7-multicore/default, ROOT-fedora27/noimt, ROOT-fedora29/python3, ROOT-ubuntu16/rtcxxmod, mac1014/cxx17 with flags -DCTEST_TEST_EXCLUDE_NONE=On",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2911#issuecomment-483845817:19,perform,performance-,19,https://root.cern,https://github.com/root-project/root/pull/2911#issuecomment-483845817,2,['perform'],['performance-']
Performance,"@pikacic This could be one way for multi-threaded writing. I think we have still some issues regarding the life time of the memory regions used for filling. In this example, `REntry::Get` returns a raw pointer (not a shared pointer like `RNTupleModel::MakeField`). But the basics seems to work. Please let me know if you have comments!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8688#issuecomment-881329144:35,multi-thread,multi-threaded,35,https://root.cern,https://github.com/root-project/root/pull/8688#issuecomment-881329144,1,['multi-thread'],['multi-threaded']
Performance,"@rdschaffer : could you add following code to your job:. ```; #include <link.h>; #include <stdlib.h>; #include <stdio.h>. static int; callback(struct dl_phdr_info *info, size_t size, void *data); {; int j;. printf(""name=%s (%d segments)\n"", info->dlpi_name,; info->dlpi_phnum);. for (j = 0; j < info->dlpi_phnum; j++); printf(""\t\t header %2d: address=%10p\n"", j,; (void *) (info->dlpi_addr + info->dlpi_phdr[j].p_vaddr));; return 0;; }; ```. and then at the beginning of your `main`:. ` dl_iterate_phdr(callback, NULL);`. This will print paths of all the loaded shared libraries to stdout.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6948#issuecomment-747386366:556,load,loaded,556,https://root.cern,https://github.com/root-project/root/issues/6948#issuecomment-747386366,1,['load'],['loaded']
Performance,"@sawenzel I get your point about thread safety, and agree that even the previous version was thread-unsafe, so I will deal with this later. The current version introduces a rather large critical section in `TGeoParallelWorld::InitSafetyVoxel` that blocks all concurrent threads even if they want to update the cache of different voxels, I would have pushed that lock a bit below where the update of the cache actually happens. But since this does not run in MT mode this is not critical now. Could you also do clang-formatting using ROOT style for the `bvh` part only (The entirety of TGeo is not yet formatted, but we will do it at some point), however the new files should be formatted. I looked and the internal thread pool is actually used for building the BVH in parallel, which is cool, but there may still be some unused headers, such as `sphere.h` - could you cross-check that and remove whatever is not needed?. The compilation errors on Mac are unrelated to your PR. Still, the compilation on alma8 with gcc8.5 fails, although it should not because the standard is set correctly to C++17 and the header <numeric> is included. ; ```; Error: /github/home/ROOT-CI/src/geom/geom/inc/bvh/v2/vec.h:99:17: error: ‘transform_reduce’ is not a member of ‘std’; ```; So @dpiparo what do we do about this since the `gcc` compliance with C++17 is known to be stable only starting with the gcc9 series? Why do we still test gcc8.5 with C++17?. I'll do also some more testing on my side for your PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442#issuecomment-2360336308:259,concurren,concurrent,259,https://root.cern,https://github.com/root-project/root/pull/16442#issuecomment-2360336308,3,"['cache', 'concurren']","['cache', 'concurrent']"
Performance,"@simonspa from a quick check, performance has improved but the issue isn't resolved; probing the 16 threads shows that almost all threads now instead lock the global ROOT mutex when in the TObject destructor:; ```; #0 0x00007ffff0de186c in __lll_lock_wait () from /nix/store/27x7pinqdsl9f3rpbm8bsszd9fhwq266-glibc-2.27/lib/libpthread.so.0; #1 0x00007ffff0ddab65 in pthread_mutex_lock () from /nix/store/27x7pinqdsl9f3rpbm8bsszd9fhwq266-glibc-2.27/lib/libpthread.so.0; #2 0x00007ffff18b445e in ROOT::TReentrantRWLock<std::mutex, ROOT::Internal::RecurseCounts>::ReadLock() () from /nix/store/0wmj1ywknywy8kkbrd343iy17h97j54l-root-6.16/lib/libThread.so; #3 0x00007ffff4c4d66d in ROOT::TReadLockGuard::TReadLockGuard(ROOT::TVirtualRWMutex*) () from /nix/store/0wmj1ywknywy8kkbrd343iy17h97j54l-root-6.16/lib/libCore.so; #4 0x00007ffff4c4422e in TROOT::RecursiveRemove(TObject*) () from /nix/store/0wmj1ywknywy8kkbrd343iy17h97j54l-root-6.16/lib/libCore.so; #5 0x00007ffff4cfc24c in TObject::~TObject() () from /nix/store/0wmj1ywknywy8kkbrd343iy17h97j54l-root-6.16/lib/libCore.so; ```. ---. This happens during message destruction, which I don't think is mimicked in `root-test`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2381#issuecomment-408680078:30,perform,performance,30,https://root.cern,https://github.com/root-project/root/pull/2381#issuecomment-408680078,1,['perform'],['performance']
Performance,"@smuzaffar I am still doing something odd. I get:; ```; Begin processing the 1st record. Run 1, Event 2, LumiSection 1 on stream 0 at 07-Apr-2021 21:41:09.524 CEST; cmsRun: /data/cmsbld/jenkins/workspace/ib-run-pr-tests/CMSSW_11_3_ROOT6_X_2021-04-05-2300/src/FWCore/Concurrency/src/WaitingTaskList.cc:57: void edm::WaitingTaskList::reset(): Assertion `m_head == nullptr' failed. Thread 1 ""cmsRun"" received signal SIGABRT, Aborted.; 0x00007ffff4ae33d7 in raise () from /lib64/libc.so.6; (gdb) bt; #0 0x00007ffff4ae33d7 in raise () from /lib64/libc.so.6; #1 0x00007ffff4ae4ac8 in abort () from /lib64/libc.so.6; #2 0x00007ffff4adc1a6 in __assert_fail_base () from /lib64/libc.so.6; #3 0x00007ffff4adc252 in __assert_fail () from /lib64/libc.so.6; #4 0x00007ffff7e8fd19 in edm::WaitingTaskList::reset() () from /build/pcanal/CMSSW_11_3_ROOT6_X_2021-04-05-2300/lib/slc7_amd64_gcc900/libFWCoreConcurrency.so; #5 0x00007ffff7ce3cbb in edm::Worker::reset() () from /build/pcanal/CMSSW_11_3_ROOT6_X_2021-04-05-2300/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #6 0x00007ffff7ce2664 in edm::WorkerManager::resetAll() () from /build/pcanal/CMSSW_11_3_ROOT6_X_2021-04-05-2300/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #7 0x00007ffff7be8df0 in edm::StreamSchedule::processOneStreamAsync<edm::OccurrenceTraits<edm::LuminosityBlockPrincipal, (edm::BranchActionType)2> >(edm::WaitingTaskHolder, edm::OccurrenceTraits<edm::LuminosityBlockPrincipal, (edm::BranchActionType)2>::TransitionInfoType&, edm::ServiceToken const&, bool)::{lambda()#2}::operator()() (); from /build/pcanal/CMSSW_11_3_ROOT6_X_2021-04-05-2300/lib/slc7_amd64_gcc900/libFWCoreFramework.so; #8 0x00007ffff7be9124 in tbb::internal::function_task<edm::StreamSchedule::processOneStreamAsync<edm::OccurrenceTraits<edm::LuminosityBlockPrincipal, (edm::BranchActionType)2> >(edm::WaitingTaskHolder, edm::OccurrenceTraits<edm::LuminosityBlockPrincipal, (edm::BranchActionType)2>::TransitionInfoType&, edm::ServiceToken const&, bool)::{lambda()#3}>::exe",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7718#issuecomment-815176998:266,Concurren,Concurrency,266,https://root.cern,https://github.com/root-project/root/issues/7718#issuecomment-815176998,1,['Concurren'],['Concurrency']
Performance,"@stwunsch : The machine running the installation of the reference guide is root-ubuntu-2004-2. I logged on this machine and simply tried (stupidly) to type ""pyspark"". I know nothing about this tool but surprisingly I got an answer saying it seems wrongly installed there ... Dod you have an idea about that ? what should be done ? A Python expert might know better. ```; sftnight@root-ubuntu-2004-2:~$ pyspark; Could not find valid SPARK_HOME while searching ['/home', '/usr/local/bin']. Did you install PySpark via a package manager such as pip or Conda? If so,; PySpark was not found in your Python environment. It is possible your; Python environment does not properly bind with your package manager. Please check your default 'python' and if you set PYSPARK_PYTHON and/or; PYSPARK_DRIVER_PYTHON environment variables, and see if you can import; PySpark, for example, 'python -c 'import pyspark'. If you cannot import, you can install by using the Python executable directly,; for example, 'python -m pip install pyspark [--user]'. Otherwise, you can also; explicitly set the Python executable, that has PySpark installed, to; PYSPARK_PYTHON or PYSPARK_DRIVER_PYTHON environment variables, for example,; 'PYSPARK_PYTHON=python3 pyspark'. /usr/local/bin/pyspark: line 24: /bin/load-spark-env.sh: No such file or directory; /usr/local/bin/pyspark: line 68: /bin/spark-submit: No such file or directory; sftnight@root-ubuntu-2004-2:~$ . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7802#issuecomment-822528404:1279,load,load-spark-env,1279,https://root.cern,https://github.com/root-project/root/issues/7802#issuecomment-822528404,2,['load'],['load-spark-env']
Performance,"@stwunsch @etejedor @dpiparo I think it's highly desirable to have a (silenceable) warning if `DeclareCppCallable` needs to skip numba and fallback to the ""Generic"" backend. The rationale is that, otherwise, I'm 100% sure that PyROOT+RDF users will love this feature and start using it _all the time_, shooting performance down with a bazooka without even realizing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3488#issuecomment-480243328:311,perform,performance,311,https://root.cern,https://github.com/root-project/root/pull/3488#issuecomment-480243328,1,['perform'],['performance']
Performance,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds.; You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6577#issuecomment-821318359:214,cache,cache,214,https://root.cern,https://github.com/root-project/root/issues/6577#issuecomment-821318359,1,['cache'],['cache']
Performance,"@sudo-panda @vgvassilev FYI after these changes rootbench (https://github.com/root-project/rootbench) is not compiling anymore:; ```; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx: In function ‘void BM_TFormulaPerf(benchmark::State&, const char*, F&&, bool)’:. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:30:13: error: ‘GradientStorage’ is not a member of ‘TFormula’; TFormula::GradientStorage result(Npar);; ^~~~~~~~~~~~~~~. /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/default/rootbench/root/hist/hist/TFormulaGradientBenchmarks.cxx:38:19: error: ‘result’ was not declared in this scope; eval(h, f, x, result.data());; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8371#issuecomment-903671179:215,perform,performance-,215,https://root.cern,https://github.com/root-project/root/pull/8371#issuecomment-903671179,3,['perform'],['performance-']
Performance,"@vepadulano , Looks like `python3 -c 'import ROOT;print(ROOT.kError);` is still loading all shared libs. I am testing locally to see which symbol is causing this",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14261#issuecomment-1863067950:80,load,loading,80,https://root.cern,https://github.com/root-project/root/pull/14261#issuecomment-1863067950,1,['load'],['loading']
Performance,"@vepadulano . Actually, it is enough to call `TThread::SelfId()` method to make macro working. Without it `libThread` will be initialized from other thread - and internal `TThread::fgMainId` will be set wrongly.; Looks like it is main reason why `gPad` will not work properly after that. . Probably I can make workaround for `TWebCanvas` - but may be one can always load and initialize threads library already with `import ROOT`?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15498#issuecomment-2162356633:366,load,load,366,https://root.cern,https://github.com/root-project/root/issues/15498#issuecomment-2162356633,1,['load'],['load']
Performance,"@vepadulano @dpiparo . This PR fixes. - https://github.com/root-project/root/issues/7196. This issue is very case-dependent.; When trying to calculate memory usage, normally the actual free memory on the system is `free + buffer + cached `. If shared memory usage is high (e.g mmaping a big cache) the calculation is slightly different:; `(free + buffer/cache) - shared`. The author of **htop** mentions on [this](https://stackoverflow.com/questions/55090900/how-can-i-calculate-memory-utilisation-of-a-linux-server-using-sar-report) question that htop uses this convention(in 2016):. - Total used memory = MemTotal - MemFree; - Non cache/buffer memory = Total used memory - (Buffers + Cached memory). Now htop (managed by htop-dev) uses this (on https://github.com/htop-dev/htop/blob/main/linux/LinuxMachine.c#L210):. ```; const memory_t usedDiff = freeMem + cachedMem + sreclaimableMem + buffersMem;; host->usedMem = (totalMem >= usedDiff) ? totalMem - usedDiff : totalMem - freeMem;; ```. This issue intends to merge the total used memory to include cached instead of just free which isn't strictly a correct solution. This PR implements the current approach utilised by **htop** which includes the following fields to calculate `MemUsed`, `MemAvailable` and `SwapUsed`:. ```; Int_t fMemAvailable; // available RAM in MB; Int_t fMemCached; // cached RAM in MB; Int_t fMemBuffer; // buffer RAM in MB; Int_t fMemShared; // shared RAM in MB; Int_t fSwapCached; // cached swap in MB; Int_t fSReclaimable // slab that might be reclaimed; ```. Results:. ```; ➜ ROOT free -h; total used free shared buff/cache available; Mem: 23Gi 3.4Gi 7.4Gi 214Mi 12Gi 19Gi; Swap: 7.6Gi 2.1Gi 5.5Gi; ```. ```; ➜ ROOT root -l; root [0] MemInfo_t memInfo; gSystem->GetMemInfo(&memInfo);; root [1] cout << memInfo.fMemTotal << "" "" << memInfo.fMemUsed << "" "" << memInfo.fMemFree << endl;; 23877 2786 7562; root [2] ; ```; Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14695:231,cache,cached,231,https://root.cern,https://github.com/root-project/root/pull/14695,10,"['Cache', 'cache']","['Cached', 'cache', 'cached', 'cachedMem']"
Performance,"@vgvassilev (and @Axel-Naumann @jalopezg-r00t ), Chris also noted that with gDebug > 2, the failing case gets:; ```; Module 'TMVA' already loaded for 'Event'; ```; I noted (with gdb) that in the working case (class name `gallery::GalleryEvent`), ` TCling__AutoParseCallback` is (as expected) called with that class name as an argument (full stack trace in the next comment). While in the broken case (class name `gallery::Event`), ` TCling__AutoParseCallback` is never called with anything abount `Event`). I.e. it is ""acting"" as if the fact that `TMVA::Event` is known to `Cling` make it think it does not need to autoload/autoparse` for `gallery::Event`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9583#issuecomment-1013459154:139,load,loaded,139,https://root.cern,https://github.com/root-project/root/issues/9583#issuecomment-1013459154,1,['load'],['loaded']
Performance,"@vgvassilev , this failed to build for cmssw externals e.g. `hepdata-lib` failed to build with [error](https://cmssdt.cern.ch/SDT/jenkins-artifacts/pull-request-integration/PR-6342e6/25491/external/py3-hepdata-lib/0.8.1-ec986c2493f655785ae2df5c3741f2df/log); ```; + pip3 install --no-clean --no-deps --no-index --no-build-isolation --no-cache-dir --disable-pip-version-check --user -v hepdata_lib-0.8.1.tar.gz; Using pip 22.0.4 from /data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/external/py3-pip/22.0.4-84448601ef6fb03288e044db5008fd92/lib/python3.9/site-packages/pip (python 3.9); Processing ./hepdata_lib-0.8.1.tar.gz; Preparing metadata (setup.py): started; Running command python setup.py egg_info; input_line_1:1:2: fatal error: module 'libc' in AST file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm' found in a different module map file (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/etc/cling/libc.modulemap) than when the importing AST file was built (/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/BUILD/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/build/etc/cling/libc.modulemap); #include <new>; ^; input_line_1:1:2: note: imported by module 'std' in '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/std.pcm'; Warning in cling::IncrementalParser::CheckABICompatibility():; Failed to extract C++ standard library version.; Replaced symbol atexit cannot be found in JIT!; Replaced symbol at_quick_exit cannot be found in JIT!; <<< cling interactive line includer >>>: fatal error: module file '/data/cmsbld/jenkins/workspace/ib-run-pr-tests/testBuildDir/el8_amd64_gcc10/lcg/root/6.27.01-fcb9eae806144b267f209fdf3fa8dc2e/lib/libc.pcm' is out of date and needs to be rebuilt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1154135015:337,cache,cache-dir,337,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1154135015,2,['cache'],['cache-dir']
Performance,"@vgvassilev , though PR tests for https://github.com/cms-sw/root/pull/163 passed ( may be because it was a partial/incremental build of cmssw) but all tests in CMSSW IBs are failing with errors like ; ```; Error in <TCling::LoadPCM>: ROOT PCM /cvmfs/cms-ib.cern.ch/nweek-02721/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_3_ROOT6_X_2022-02-20-0000/bin/slc7_amd64_gcc10/libNet_rdict.pcm file does not exist; Info in <TCling::LoadPCM>: In-memory ROOT PCM candidate /cvmfs/cms-ib.cern.ch/nweek-02721/slc7_amd64_gcc10/lcg/root/6.27.01-41fc432df04c8b3cb067f93c7cebe91f/lib/libASImageGui_rdict.pcm; ...; ...; terminate called after throwing an instance of 'edm::Exception'; what(): An exception of category 'FatalRootError' occurred.; Additional Info:; [a] Fatal Root Error: @SUB=TCling::LoadPCM; ROOT PCM /cvmfs/cms-ib.cern.ch/nweek-02721/slc7_amd64_gcc10/cms/cmssw/CMSSW_12_3_ROOT6_X_2022-02-20-0000/bin/slc7_amd64_gcc10/libPhysics_rdict.pcm file does not exist; ```. see the full log here https://cmssdt.cern.ch/SDT/cgi-bin/logreader/slc7_amd64_gcc10/CMSSW_12_3_ROOT6_X_2022-02-20-0000/pyRelValMatrixLogs/run/4.24_WMuSkim2011A+WMuSkim2011A+HLTDSKIM+RECODR1reHLT+HARVESTDR1reHLT/step2_WMuSkim2011A+WMuSkim2011A+HLTDSKIM+RECODR1reHLT+HARVESTDR1reHLT.log#/ . Somehow `cling` is looking for root pcm files under the CMSSW/bin/arch directory ( this is the directory from where the `cmsRun` executable was picked up)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9884#issuecomment-1046310352:224,Load,LoadPCM,224,https://root.cern,https://github.com/root-project/root/pull/9884#issuecomment-1046310352,3,['Load'],['LoadPCM']
Performance,"@vgvassilev : I do not see how I could control this.; https://github.com/root-project/root/blob/master/core/base/src/TROOT.cxx#L2037 states that InitInterpreter() should be called after main(). Therefore, as we link to libgandiva, which links to llvm libs, the system LLVM symbols will always be in the global namespace by design. They are loaded before main(), while InitInterpreter() loads libCling only after main().",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4668#issuecomment-564012304:340,load,loaded,340,https://root.cern,https://github.com/root-project/root/pull/4668#issuecomment-564012304,2,['load'],"['loaded', 'loads']"
Performance,"@vgvassilev : I have tried this patch but I am now getting a crash when starting ROOT :. ```; ===========================================================; There was a crash (kSigSegmentationViolation).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007f55d03b3dba in __GI___wait4 (pid=532952, stat_loc=stat_loc; entry=0x7ffff97a6338, options=options; entry=0, usage=usage; entry=0x0) at ../sysdeps/unix/sysv/linux/wait4.c:27; #1 0x00007f55d03b3d7b in __GI___waitpid (pid=<optimized out>, stat_loc=stat_loc; entry=0x7ffff97a6338, options=options; entry=0) at waitpid.c:38; #2 0x00007f55d03230e7 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:172; #3 0x00007f55d0b7b962 in TUnixSystem::Exec (this=0x560a89b6d800, shellcmd=0x560a8a395ad0 ""/home/moneta/rootgit/root-build-debug/etc/gdb-backtrace.sh 532935 1>&2"") at /home/moneta/rootgit/root/core/unix/src/TUnixSystem.cxx:2120; #4 0x00007f55d0b7c24d in TUnixSystem::StackTrace (this=0x560a89b6d800) at /home/moneta/rootgit/root/core/unix/src/TUnixSystem.cxx:2411; #5 0x00007f55d0b7ffc5 in TUnixSystem::DispatchSignals (this=0x560a89b6d800, sig=kSigSegmentationViolation) at /home/moneta/rootgit/root/core/unix/src/TUnixSystem.cxx:3649; #6 0x00007f55d0b7744e in SigHandler (sig=kSigSegmentationViolation) at /home/moneta/rootgit/root/core/unix/src/TUnixSystem.cxx:407; #7 0x00007f55d0b7fece in sighandler (sig=11) at /home/moneta/rootgit/root/core/unix/src/TUnixSystem.cxx:3620; #8 <signal handler called>; #9 0x00007f55cc6e3ef2 in clang::ASTReader::ReadModuleMapFileBlock(llvm::SmallVector<unsigned long, 64u>&, clang::serialization::ModuleFile&, clang::serialization::ModuleFile const*, unsigned int) () from /home/moneta/rootgit/root-build-debug/lib/libCling.so; #10 0x00007f55cc6f9cfa in clang::ASTReader::ReadControlBlock(clang::serialization::ModuleFile&, llvm::SmallVectorImpl<clang::ASTReader::ImportedModule>&, clang::serialization::ModuleFile const*, unsigne",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6999#issuecomment-756878096:542,optimiz,optimized,542,https://root.cern,https://github.com/root-project/root/pull/6999#issuecomment-756878096,2,['optimiz'],['optimized']
Performance,"@vgvassilev Great!. For performances, it looks like you lack a commit from the branch https://github.com/ChuanqiXu9/root/commits/chuanqi_pr83233/, which tries to reduce the time we calculating the ODR Hash.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14495#issuecomment-1978574202:24,perform,performances,24,https://root.cern,https://github.com/root-project/root/pull/14495#issuecomment-1978574202,1,['perform'],['performances']
Performance,"@vgvassilev I see ` In case an identifier is defined in both (eg TMVA::Event and X::Event), the GMI will take priority and load the TMVA module without later allowing the system to look for other candidates.`. Could you explicit in the commit log why an unrelated fully qualified name (`TMVA::Event`) takes precedence over another fully qualified name (`X::Event`) and why this is usually not an issue (i.e. Is there any other cases (other than module vs rootmap) where this could lead to problems?)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9592#issuecomment-1014508200:123,load,load,123,https://root.cern,https://github.com/root-project/root/pull/9592#issuecomment-1014508200,1,['load'],['load']
Performance,"@vgvassilev It seems that the changes in this PR provide the same performance as the current master (after the two hotfixes), while supporting leaving the `k*` constants in `TError.h` as `constexpr` so without producing a symbol in `libCore.so`. For `TString::kNPOS` I guess we want to leave the commit there since it was anyway a real fix to a bug. Another problem which is still present in both the current master and even after this PR is that the number of file operations is still quite high, i.e.; ```; 532 newfstatat(3, ; 29 newfstatat(4, ; 10141 newfstatat(AT_FDCWD, ; 546 openat(AT_FDCWD, ; 843 readlink(; ```. which are exactly the same whether current master or this patch. Consider that many of those `newfstatat` calls are spurious and I'm trying to understand where they come from. Take the following as an example; ```; newfstatat(AT_FDCWD, ""/home/vpadulan/programs/rootproject/rootbuild/reduce-symbol-search-release/gui/sessionviewer/input_line_11"", 0x7ffde442f050, 0) = -1 ENOENT (No such file or directory); ```. Note the presence of the `rootbuild` directory, which is the path where I store the ROOT build artifacts, even though I am using ROOT from the install directory. I thought it was something in the machinery of `(T)cling` but so far my tests haven't brought me to any conclusion. Another suspicion is that the path to the build directory is hardcoded somehow in the `.pcm` or in the AST and doesn't get converted to the install directory.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1867410890:66,perform,performance,66,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1867410890,1,['perform'],['performance']
Performance,"@vgvassilev if ""not exception safe"" here means w.r.t. `bad_allocs`, ROOT in general does not care (nothing works in that case anyway). If ""not exception safe"" means ""might leak if constructors of elements throw"", I don't think we care too much:. - RVec is mostly used with fundamental types ; - anyway that's not a situation in which analyses can/want to keep running, typically. Regarding your alternative proposals: we can't use a vanilla `std::vector` as a workhorse because we want to be able to adopt existing memory buffers. That would require std::vector + a custom allocator (like in the current implementation of RVec) which is fairly tricky to implement correctly (in fact, the current implementation has [broken usecases](https://github.com/root-project/root/issues/6796)), and the more complex class layout makes it harder for RNTuple to perform I/O. `std::vector<bool>` weirdness complicates matters (and I/O) further. So the alternative is basically re-implementing vector-with-adoption-and-sbo ourselves. All considered I think we could be ok with leaving the object in a ""bad"" state in case the construction of vector elements throws (which I think is what ""not exception safe"" means in this context), for the two reasons mentioned above -- but I'd like @Axel-Naumann to make the call.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7502#issuecomment-818905333:850,perform,perform,850,https://root.cern,https://github.com/root-project/root/pull/7502#issuecomment-818905333,1,['perform'],['perform']
Performance,"@vgvassilev indeed you were right, the difference is huge! I opened an issue to keep track of this https://github.com/root-project/root/issues/14296 . If we understand how to fix the paths in the PCMs at install time there is an opportunity for a very substantial performance improvement!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14287#issuecomment-1867521327:264,perform,performance,264,https://root.cern,https://github.com/root-project/root/pull/14287#issuecomment-1867521327,1,['perform'],['performance']
Performance,@vgvassilev on `ROOT-performance-centos8-multicore/cxx17` PR does not work,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12765#issuecomment-1535934952:21,perform,performance-,21,https://root.cern,https://github.com/root-project/root/pull/12765#issuecomment-1535934952,1,['perform'],['performance-']
Performance,"@vgvassilev well, we use the same modulemap for building/runtime at the moment, so the names would be anyway equal :) Also if you try to trick root by placing other PCMs there you'll get an error because we check the clang version that generated the PCM before loading it, so you would have to do some serious work to get around this check.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/878#issuecomment-324616774:261,load,loading,261,https://root.cern,https://github.com/root-project/root/pull/878#issuecomment-324616774,1,['load'],['loading']
Performance,"@vgvassilev what do you want to measure? CMSSW performance numbers? Unfortunately C++ modules IBs are broken, so it will require some time fixing them..",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4088#issuecomment-511449951:47,perform,performance,47,https://root.cern,https://github.com/root-project/root/pull/4088#issuecomment-511449951,1,['perform'],['performance']
Performance,"@wdconinc now loading this file produces:; ```; root [0] TGeoManager::Import(""HCAL_Chimney_Sector_Half_Plate.gdml""); Info in <TGeoManager::Import>: Reading geometry from file: HCAL_Chimney_Sector_Half_Plate.gdml; Info in <TGeoManager::TGeoManager>: Geometry GDMLImport, Geometry imported from GDML created; Warning in <TGDMLParse::GDMLReadFile>: Found 2 GDML entities missing explicit units, while the default units are currently ROOT units [cm, deg]. This can cause unexpected behaviour with respect to the GDML schema. To remove this warning, either use explicit units or call the static method TGeoManager::SetDefaultUnits(kG4Units) before importing the GDML file HCAL_Chimney_Sector_Half_Plate.gdml ; ...; ```; Let me know if OK with you or if you want to do further local tests with #11801",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11781#issuecomment-1330758792:14,load,loading,14,https://root.cern,https://github.com/root-project/root/issues/11781#issuecomment-1330758792,1,['load'],['loading']
Performance,"@xvallspl as reported by Jenkins in multiple builds, this PR leads to failures in `pyunittests-pyroot-import-load-libs` and `roottest-root-tree-fastcloning-execCheckClusterRange` (can reproduce locally). The first looks like it just needs an update to the whitelist, not sure about the second one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7040#issuecomment-760992810:109,load,load-libs,109,https://root.cern,https://github.com/root-project/root/pull/7040#issuecomment-760992810,1,['load'],['load-libs']
Performance,"@yamaguchi1024 You will need an example that has a large fraction of libraries with rdicts (eg. hsimple is almost only using libraries that do not have any rdict). For example after doing ```ctest -R MakeProject```, you could test:; ```; {; gSystem->Load(""roottest/root/meta/MakeProject/cms310/cms310.so"");; auto f = TFile::Open(""roottest_src_directory/root/meta/MakeProject/CMSSW_3_1_0_pre11-RelValZTT-default-copy.root"");; TTree *tree = nullptr; f->GetObject(""Events"", tree);; for(Long64_t e = 0; e < tree->GetEntriesFast(); ++e) tree->GetEntry(e);; }; ```; Or other similar large user libraries.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-441271394:250,Load,Load,250,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-441271394,1,['Load'],['Load']
Performance,"A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return; a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9557:368,optimiz,optimizes,368,https://root.cern,https://github.com/root-project/root/pull/9557,1,['optimiz'],['optimizes']
Performance,"A RooAddPdf may have more PDFs than coefficients, in which case ""the coefficient of the last PDF is calculated automatically from the condition that the sum of all coefficients has to be 1"". In this case, the last call to `_coefList.at(i)` is supposed to return; a `nullptr` because the index is out of range, and dereferencing it is undefined behavior which Clang 13 optimizes away, leading to crashes. Fixes #9547. (cherry picked from commit 1f3f0fdc0544087042e6289376094bf06b2d259f, backport of PR #9557)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9568:368,optimiz,optimizes,368,https://root.cern,https://github.com/root-project/root/pull/9568,4,['optimiz'],['optimizes']
Performance,"A bit more research: ; Apparently on lxplus also 6.24 cannot correctly use `dill`; ```; [vpadulan@lxplus706 ~]$source /cvmfs/sft.cern.ch/lcg/views/dev4/latest/x86_64-centos7-gcc10-opt/setup.sh; [vpadulan@lxplus706 ~]$root --version; ROOT Version: 6.24/00; Built for linuxx8664gcc on Apr 14 2021, 14:33:50; From tags/v6-24-00@v6-24-00; [vpadulan@lxplus706 ~]$python -c ""import ROOT; import dill; print(type(dill.loads(dill.dumps(ROOT.TH1D()))))""; TBufferFile::WriteObjectAny:0: RuntimeWarning: since TROOT has no public constructor; which can be called without argument, objects of this class; can not be read with the current library. You will need to; add a default constructor before attempting to read it.; Error in <TClass::New>: cannot create object of class TROOT; Error in <TBufferFile::ReadObject>: could not create object of class TROOT; Error in <TSystem::TSystem>: only one instance of TSystem allowed; input_line_35:5:21: error: allocating an object of abstract class type 'TInterpreter'; *ret = new TInterpreter;; ```. But it seems that might be due to the `dill` version:; ```; [vpadulan@lxplus706 ~]$python; Python 3.8.6 (default, Dec 11 2020, 21:40:36) ; [GCC 10.1.0] on linux; Type ""help"", ""copyright"", ""credits"" or ""license"" for more information.; >>> import dill; >>> dill.__file__; '/cvmfs/sft-nightlies.cern.ch/lcg/views/dev4/Mon/x86_64-centos7-gcc10-opt/lib/python3.8/site-packages/dill/__init__.py'; >>> dill.__version__; '0.3.2'; >>> quit(); ```. Because on my machine I can correctly run the reproducer with 6.22/08 and ROOT master, as I posted above. Indeed, I have `dill` 0.3.3 on my laptop. If I install `0.3.2` instead I get the same error from ROOT; ```; vpadulan@fedorathinkpad-T550 [~]: python -m pip install dill==0.3.2; Defaulting to user installation because normal site-packages is not writeable; Collecting dill==0.3.2; Downloading dill-0.3.2.zip (177 kB); |████████████████████████████████| 177 kB 762 kB/s ; Building wheels for collected packages: dill; Building",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6370#issuecomment-822597548:411,load,loads,411,https://root.cern,https://github.com/root-project/root/issues/6370#issuecomment-822597548,1,['load'],['loads']
Performance,"A bug or lack of optimization is causing the tutorial `tutorial-tmva-TMVAMulticlass` to take forever to process. @ashlaban is working on optimizing this particular issue, so the ignore should be disabled once his patch is upstream.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/438:17,optimiz,optimization,17,https://root.cern,https://github.com/root-project/root/pull/438,2,['optimiz'],"['optimization', 'optimizing']"
Performance,"A context is responsible for preparing a cluster, and will be the unit of parallelisation for concurrent writing. Also has a commit to return `const` reference from `RNTupleWriter::GetModel()`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14391:94,concurren,concurrent,94,https://root.cern,https://github.com/root-project/root/pull/14391,1,['concurren'],['concurrent']
Performance,"A full stack trace with 256 threads is; [rootnetlockdebug.txt](https://github.com/root-project/root/files/9834797/rootnetlockdebug.txt); attached; (this run was also done with forcing SetEnablePrefetching(true) as suggested by @pcanal elsewhere for testing but this didn't affect performance much, so probably the lock contention is orthogonal)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7710#issuecomment-1286318016:280,perform,performance,280,https://root.cern,https://github.com/root-project/root/issues/7710#issuecomment-1286318016,1,['perform'],['performance']
Performance,"A priori a 2nd running of EndOfProcessCleanups should be 'harmless' (i.e. what ever list of things to delete would be empty on the 2nd run). The issue here (well there https://github.com/root-project/root/issues/10743) does not seems to be the 2nd running of EndOfProcessCleanups but rather that there is a bad interaction between the 'early' running of the cleanups and that something in RDataFrame is not properly informed that something is delete early. The early cleanups is necessary because of the following issue. * The python code (directly or indirectly) can load libraries (Ls); * The python code (directly or indirectly) can open TFile (Fs) and can elect to never delete them; * The python code (directly or indirectly) can attach objects based on the Libraries on to the TFile. Then the order of execution at tear down will be. (1) tear down python; (2) unload the loaded libraries (Ls); (3) execute the atexit registered by TROOT, ; (4) this includes EndOfProcessCleanups; (5) this includes flushing and closing the TFiles. During (5) the object attached the TFile (usually just histogram and `TTree` but can also be object from the user libraries. However if the libraries for the user objects are already unloaded, their code (including a Streamer function or even their dictionary) are gone and this result in crash at best or worse in data loss. In order to prevent that we introduced (in https://github.com/root-project/root/commit/7a592f5d62dda6c76f230bfa6fd879e5fa80582a and friends), running the `EndOfProcessCleanups` of cleanups as soon as possible (i.e. as soon as we can detect the process is starting to tear down). (i.e. make it part of (1)). More likely that not this means than rather than removing early this call to `EndOfProcessCleanups`, the solution is to inform `RDataFrame` of those early deletion (depending whether the things that are deleted that are annoying `RDataFrame`, they may or may not be having the trouble described above, so another solution might be ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10753#issuecomment-1155610874:568,load,load,568,https://root.cern,https://github.com/root-project/root/pull/10753#issuecomment-1155610874,2,['load'],"['load', 'loaded']"
Performance,"A proof that the problem exists before this PR is:; ```; cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_BUILD_TYPE=""Debug"" -DLLVM_BUILD_TYPE=""Debug"" -Dbuiltin_clang=""On"" -Dbuiltin_gsl=""On"" -Dbuiltin_llvm=""On"" -Dpython=""On"" -Droottest=""On"" -Druntime_cxxmodules=""On"" -Dx11=""Off"" /home/performance-test/src_master ; -- ROOT default compression algorithm: zlib; -- Found GCC. Major version 7, minor version 4; -- Found a 64bit system; -- Found GNU compiler collection; -- ROOT Platform: linux; -- ROOT Architecture: linuxx8664gcc; -- Build Type: Debug; -- Compiler Flags: -std=c++11 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread ; -- Looking for ZLib; -- Looking for Freetype; -- Looking for LZMA; -- Found LZMA includes at /usr/include; -- Found LZMA library at /usr/lib/x86_64-linux-gnu/liblzma.so; -- Building AfterImage library included in ROOT itself; -- Looking for GSL; -- Downloading and building GSL version 2.1; -- Looking for python; -- Enabled support for: builtin_afterimage builtin_clang builtin_ftgl builtin_glew builtin_gsl builtin_llvm builtin_lz4 builtin_openssl builtin_pcre builtin_tbb builtin_vdt builtin_xxhash clad exceptions explicitlink gdml http imt mathmore mlp python roofit runtime_cxxmodules shared ssl tmva spectrum vdt; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Constructing LLVMBuild project information; -- Linker detection: GNU ld; -- SysLibs: rt;dl;tinfo;-lpthread;/usr/lib/x86_64-linux-gnu/libz.so; -- Targeting X86; -- Clang version: 5.0.0; -- Cling version (from VERSION file): ROOT_0.6~dev; -- Cling will look for C++ headers in '/usr/include/c++/7:/usr/include/x86_64-linux-gnu/c++/7:/usr/include/c++/7/backward' at runtime.; -- And then fallback to: 'x86_64-linux-gnu-g++-7'; Recording the git rev",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3891#issuecomment-502686211:285,perform,performance-test,285,https://root.cern,https://github.com/root-project/root/pull/3891#issuecomment-502686211,1,['perform'],['performance-test']
Performance,"A reproducer:. ```cpp; #include <ROOT/RDataFrame.hxx>. int main() {; {; auto df = ROOT::RDataFrame(10).Define(""x"", [] { return 42; });; df.Snapshot(""t"", ""f.root"");; df.Snapshot(""fr"", ""fr.root"");; }. TFile f(""f.root"");; auto *t = f.Get<TTree>(""t"");; TFile frf(""fr.root"");; auto *fr = frf.Get<TTree>(""fr"");; t->AddFriend(fr);; ROOT::RDataFrame df(*t);; df.Filter(""x > 0 && fr.x > 0"").Count().GetValue();; }; ```. errors out with:. ```; input_line_32:2:67: error: use of undeclared identifier 'fr'; auto func0(const Int_t var0, const Int_t var1){return var0 > 0 && fr.var0 > 0; ^; ```. The reason is that in this case we substitute column names with `var0`, `var1` placeholder names starting with `""x""`, resulting in the broken expression with `fr.var0`. I think a possible fix is to perform these substitutions from the longest to the shortest column names. First reported at https://root-forum.cern.ch/t/rdataframe-string-filter-question/50872 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11002:781,perform,perform,781,https://root.cern,https://github.com/root-project/root/issues/11002,1,['perform'],['perform']
Performance,"A self-contained reproducer:. ```python; import ROOT. code = """"""; #include <ROOT/RDataFrame.hxx>. int Foo(ROOT::RDF::RNode d) {; ROOT::RDF::RResultPtr<int> ptr;; return 42;; }; """""". def main():; print(""first CompileMacro""); with open(""generatedcode.cpp"", ""w"") as f:; f.write(code); ROOT.gSystem.CompileMacro(""generatedcode.cpp""). d = ROOT.RDataFrame(10); r = ROOT.Foo(ROOT.RDF.AsRNode(d)). print(""second CompileMacro""); with open(""generatedcode.cpp"", ""w"") as f:; f.write(code); ROOT.gSystem.CompileMacro(""generatedcode.cpp"") # crashes. if __name__ == ""__main__"":; main(); ```. results in:. ```; ~/S/d/optimized_template_helper python repro_crash_compilemacro.py (cern-root) ; first CompileMacro; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; second CompileMacro; Info in <ACLiC>: modified script has already been compiled and loaded; Info in <ACLiC>: it will be regenerated and reloaded!; Info in <TUnixSystem::ACLiC>: creating shared library /home/blue/Scratchpad/df/optimized_template_helper/generatedcode_cpp.so; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>::value>; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:180:13: note: in instantiation of default argument for 'RIterationHelper<int>' required here; typename RIterationHelper<T>::Iterator_t begin(); ^~~~~~~~~~~~~~~~~~~; ./generatedcode.cpp:5:29: note: in instantiation of template class 'ROOT::RDF::RResultPtr<int>' requested here; ROOT::RDF::RResultPtr<int> ptr;; ^; In module 'ROOTDataFrame':; /home/blue/miniconda3/envs/cern-root/include/ROOT/RResultPtr.hxx:99:73: error: no member named 'value' in 'ROOT::TypeTraits::HasBeginAndEnd<int>'; template <typename V, bool hasBeginEnd = TTraits::HasBeginAndEnd<V>:",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7199:907,load,loaded,907,https://root.cern,https://github.com/root-project/root/issues/7199,1,['load'],['loaded']
Performance,A shortcut to perform Modified and Update,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14671:14,perform,perform,14,https://root.cern,https://github.com/root-project/root/pull/14671,1,['perform'],['perform']
Performance,"A while back you said; ``` OPAQUE_HANDLE h = interp->GetOverloads(""func_name"");; for (sig : sigs) {; f = interp->Match(h, sig);; if (f) break;; }; interp->Delete(h);; return f;; ```; That's super awkward to provide from compilers - some of the overloads; - need to be instantiated first; - are only visible through ADL; - are hidden friends; to name a couple of eeews that come to my mind. *[Edit 18:13]* Example code:; ```; #include <type_traits>. struct Eeew {; int func();; template <class T>; int func(T);; template <class T>; std::enable_if_t<std::is_integral_v<T>, int> func(int, T); ; };. namespace N {; struct Eeew2 {; friend int func(Eeew2, int);; };; int adl(Eeew2);; }. void findThat() {; Eeew().func();; Eeew().func(12);; Eeew().func(12, 12);; N::Eeew2 eeew2;; func(eeew2, 12);; adl(eeew2);; }; ```; Yes contrived, but all of this is becoming reality with current stdlibs. Operators are yet another whole chapter: by the C++20 standard that now clarifies this, lookup for those only works through expressions. *[End edit 18:13]*. The only reasonable way to do lookup in C++ is *with* the arguments, i.e. starting from an expression. Is that feasible for cppyy, e.g. possible code-path-wise, acceptable performance-wise?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6393#issuecomment-696792049:1214,perform,performance-wise,1214,https://root.cern,https://github.com/root-project/root/issues/6393#issuecomment-696792049,1,['perform'],['performance-wise']
Performance,A-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PKIUNAMgrid.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KEK.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.signing_policy' from CURLOPT_CAPATH; * failed to load,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:26314,load,load,26314,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,A.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustIGTFCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/84c78b97.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/ef7d3e44.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/530f7122.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/9c979c2b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/62c4a178.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a603ba9c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8dd53007.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridCA-1G2-Classic-2015.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d41ec82f.nam,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:14385,load,load,14385,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"ADOW - Success; -- Performing Test C_FLAG_WCAST_ALIGN; -- Performing Test C_FLAG_WCAST_ALIGN - Success; -- Performing Test CXX_FLAG_WCAST_ALIGN; -- Performing Test CXX_FLAG_WCAST_ALIGN - Success; -- Performing Test C_FLAG_WCAST_QUAL; -- Performing Test C_FLAG_WCAST_QUAL - Success; -- Performing Test CXX_FLAG_WCAST_QUAL; -- Performing Test CXX_FLAG_WCAST_QUAL - Success; -- Performing Test C_FLAG_WSTRICT_PROTOTYPES; -- Performing Test C_FLAG_WSTRICT_PROTOTYPES - Success; -- Building AfterImage library included in ROOT itself; -- Looking for XROOTD; -- Found Xrootd version num: 5.5.4 (setting -DROOTXRDVERS=500050004); -- libXrdMain not found: xproofd will be a wrapper around xrootd; -- libXrdClient not found: use built-in; -- include_dirs: /home/ubuntu/temp/install/include/xrootd;/home/ubuntu/git/root/proof/xrdinc; -- libraries: /home/ubuntu/temp/install/lib/libXrdUtils.so;/home/ubuntu/temp/install/lib/libXrdCl.so; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB; -- Performing Test ROOT_HAVE_CXX_ATOMICS_WITHOUT_LIB - Success; -- Building LLVM in 'Release' mode.; -- The ASM compiler identification is GNU; -- Found assembler: /usr/bin/cc; -- Found LibXml2: /usr/lib/x86_64-linux-gnu/libxml2.so (found version ""2.9.10""); -- Looking for backtrace; -- Looking for backtrace - found; -- backtrace facility detected in default set of libraries; -- Found Backtrace: /usr/include; -- Native target architecture is X86; -- Threads disabled.; -- Doxygen disabled.; -- Go bindings disabled.; -- Could NOT find OCaml (missing: OCAMLFIND OCAML_VERSION OCAML_STDLIB_PATH); -- OCaml bindings disabled.; -- Found Python module pygments; -- Found Python module pygments.lexers.c_cpp; -- Found Python module yaml; -- LLVM host triple: x86_64-unknown-linux-gnu; -- LLVM default target triple: x86_64-unknown-linux-gnu; -- Building with -fPIC; -- Found Python3: /usr/bin/python3.8 (found suitable version ""3.8.10"", minimum required is ""3.0"") found components: Interpreter; -- Linker detection: GNU ld; ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12631#issuecomment-1504751163:4401,Perform,Performing,4401,https://root.cern,https://github.com/root-project/root/issues/12631#issuecomment-1504751163,2,['Perform'],['Performing']
Performance,AG - Success; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed; -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG; -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed; -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG; -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_F,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:4234,Perform,Performing,4234,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['Perform'],['Performing']
Performance,"ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================; There was a crash.; This is the entire stack trace of all threads:; ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):; #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1; #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213; #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109; #5 R__zipMultipleAlgorithm (cxlevel=cxlevel; entry=1, srcsize=srcsize; entry=0x7ff4299869ac, src=src; entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S; \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300; zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <inco",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8931:930,optimiz,optimized,930,https://root.cern,https://github.com/root-project/root/issues/8931,1,['optimiz'],['optimized']
Performance,ALLTHROUGH_FLAG; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP - Failed; -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG; -- Performing Test C_SUPPORTS_STRING_CONVERSION_FLAG - Failed; -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG; -- Performing Test CXX_SUPPORTS_STRING_CONVERSION_FLAG - Failed; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test C_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG; -- Performing Test CXX_SUPPORTS_MISLEADING_INDENTATION_FLAG - Success; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FNO_FUNCTION_SECTIONS - Success; -- Performing Test C_SUPPORTS_FFUNCTION_SECTIONS; -- Performing Test C_SUPPORTS_FFUNCTION_SECTI,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:4414,Perform,Performing,4414,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['Perform'],['Performing']
Performance,APATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertAssuredIDRootCA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b1159c4c.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/727146a8.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/04f60c28.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/7ed47087.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-Root.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustECCCertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:2701,load,load,2701,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,APATH; * failed to load '/etc/grid-security/certificates/KEK.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/633dc6a4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/58b08cb5.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/TERENA-eScience-SSL-CA-3.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f5ead794.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e523eeaa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/PK-Grid-2007.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/38f7145f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/617ff41b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/67707166.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/QuoVadis-Grid-ICA-G2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridTrustCA-Classic.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/cert,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:25650,load,load,25650,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,APATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certif,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:19865,load,load,19865,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,APATH; * failed to load '/etc/grid-security/certificates/c7a717ce.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/8a21c0da.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/a883462e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeScienceSSLCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/e9cc934f.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c141eb07.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certific,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:18013,load,load,18013,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"ASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseClassTemplateDecl(clang::ClassTemplateDecl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1785; #24 0x00007f6907048eb0 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f68fdb166d8); at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:227; #25 0x00007f690707284c in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDeclContextHelper(clang::DeclContext *) (this=0x7f6918c66d10, DC=0x7f6918df4740); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1395; #26 0x00007f69070583d4 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseTranslationUnitDecl(clang::TranslationUnitDecl *) (this=0x7f6918c66d10, D=0x7f6918df4718); at /mnt/root/interpreter/llvm/src/tools/clang/include/clang/AST/RecursiveASTVisitor.h:1496; #27 0x00007f69070497f8 in clang::RecursiveASTVisitor<loadGlobalModuleIndex(cling::Interpreter&)::DefinitionFinder>::TraverseDecl(clang::Decl *) (this=0x7f6918c66d10, D=0x7f6918df4718); at /mnt/root-build-runtime_cxxmodules-ON/interpreter/llvm/src/tools/clang/include/clang/AST/DeclNodes.inc:621; #28 0x00007f690702b4fc in DefinitionFinder::DefinitionFinder (this=0x7f6918c66d10, IDs=..., TU=0x7f6918df4718) at /mnt/root/core/metacling/src/TCling.cxx:1124; #29 0x00007f690702ba84 in loadGlobalModuleIndex (interp=...) at /mnt/root/core/metacling/src/TCling.cxx:1175; #30 0x00007f690702c1e8 in RegisterCxxModules (clingInterp=...) at /mnt/root/core/metacling/src/TCling.cxx:1273; #31 0x00007f690702dce0 in TCling::TCling (this=0x7f6918d2a730, name=0x7f690c9df1c0 ""C++"", title=0x7f690c9df1a8 ""cling C++ Interpreter"", argv=0x7f6918c67348, inte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13845#issuecomment-1791689926:14365,load,loadGlobalModuleIndex,14365,https://root.cern,https://github.com/root-project/root/issues/13845#issuecomment-1791689926,1,['load'],['loadGlobalModuleIndex']
Performance,ATE_TIME - Success; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME; -- Performing Test CXX_SUPPORTS_WERROR_DATE_TIME - Success; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW; -- Performing Test CXX_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW - Failed; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG; -- Performing Test CXX_SUPPORTS_MISSING_FIELD_INITIALIZERS_FLAG - Success; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test C_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG; -- Performing Test CXX_SUPPORTS_IMPLICIT_FALLTHROUGH_FLAG - Success; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test C_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG; -- Performing Test CXX_SUPPORTS_COVERED_SWITCH_DEFAULT_FLAG - Failed; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG; -- Performing Test CXX_SUPPORTS_CLASS_MEMACCESS_FLAG - Success; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_REDUNDANT_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG; -- Performing Test CXX_SUPPORTS_PESSIMIZING_MOVE_FLAG - Success; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG; -- Performing Test CXX_SUPPORTS_NOEXCEPT_TYPE_FLAG - Success; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR; -- Performing Test CXX_WONT_WARN_ON_FINAL_NONVIRTUALDTOR - Failed; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG; -- Performing Test CXX_SUPPORTS_SUGGEST_OVERRIDE_FLAG - Success; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL; -- Performing Test CXX_WSUGGEST_OVERRIDE_ALLOWS_ONLY_FINAL - Success; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP; -- Performing Test C_WCOMMENT_ALLOWS_LINE_WRAP -,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:3696,Perform,Performing,3696,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,1,['Perform'],['Performing']
Performance,ATH; * failed to load '/etc/grid-security/certificates/3e0d64db.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b85d64aa.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustSecureCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5d9ea26d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG4-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/G,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:19773,load,load,19773,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,ATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustPrivateRootCAG4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/585d9326.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/23c77840.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/78351451.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CESNET-CA-4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/UKeScienceCA-2B.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/COMODO-RSA-CA.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2-Grid-FR.signing_po,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:9571,load,load,9571,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,ATH; * failed to load '/etc/grid-security/certificates/be44c37d.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5249c1ef.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/be44c37d.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b167aa9e.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/MYIFAM.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/5e9e302b.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalECCCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/GEANTeSciencePersonalCA4.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/943fd5f3.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d9343743.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigitalTrustAssuredCAG3-runbytheissuer.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/g,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:20835,load,load,20835,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,AXEL DEBUG: Node name is null; Build failed on ROOT-performance-centos7-multicore/default.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-2717-ROOT-performance-centos7-multicore-default&date=2020-04-20).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77414/console).; ### Errors:; - [2020-04-20T19:06:05.516Z] CMake Error at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:909 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2717#issuecomment-616750301:52,perform,performance-,52,https://root.cern,https://github.com/root-project/root/pull/2717#issuecomment-616750301,2,['perform'],['performance-']
Performance,AXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got an actionAXEL DEBUG: got a workspace; AXEL DEBUG: got a computer: root-jenkins-01.cern.ch; AXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got a stepstartnodeAXEL DEBUG: got an actionAXEL DEBUG: got a workspace; AXEL DEBUG: got a computer: olhswep22.cern.ch; Build failed on ROOT-performance-centos7-multicore/default.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5402-ROOT-performance-centos7-multicore-default&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77623/console).; ### Errors:; - [2020-04-21T12:16:14.317Z] CMake Error at CMakeLists.txt:9 (message): ; - [2020-04-21T12:16:14.317Z] CMake Error at /data/sftnight/workspace/root-pullrequests-build/rootspi/jenkins/root-build.cmake:941 (message):,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5402#issuecomment-617143091:1035,perform,performance-,1035,https://root.cern,https://github.com/root-project/root/pull/5402#issuecomment-617143091,2,['perform'],['performance-']
Performance,AXEL DEBUG: null workspace; Build failed on ROOT-performance-centos7-multicore/default.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5395-ROOT-performance-centos7-multicore-default&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77543/console).; ### Failing tests:; - [projectroot.bindings.pyroot_experimental.pythonizations.test.pyunittests_pyroot_pyz_rvec](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77543/testReport/projectroot.bindings.pyroot_experimental.pythonizations/test/pyunittests_pyroot_pyz_rvec/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5395#issuecomment-617045741:49,perform,performance-,49,https://root.cern,https://github.com/root-project/root/pull/5395#issuecomment-617045741,2,['perform'],['performance-']
Performance,AXEL DEBUG: null workspace; Build failed on ROOT-performance-centos7-multicore/default.; [See cdash ](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5412-ROOT-performance-centos7-multicore-default&date=2020-04-21).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/77575/console).; ### Warnings:; - [2020-04-21T09:50:35.548Z] /data/sftnight/workspace/root-pullrequests-build/root/math/foam/test/testTFoam.cxx:14:10: warning: unused parameter ‘nDim’ [-Wunused-parameter],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5412#issuecomment-617082277:49,perform,performance-,49,https://root.cern,https://github.com/root-project/root/pull/5412#issuecomment-617082277,2,['perform'],['performance-']
Performance,"According to my benchmarks with gcc 8.1, it brings ~3% performance improvement in the serialization of floats.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2089:55,perform,performance,55,https://root.cern,https://github.com/root-project/root/pull/2089,1,['perform'],['performance']
Performance,"Actually if gSystem->Load is reading ELF header section of libraries and loading depending libraries, I think it makes sense to keep it",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2135#issuecomment-394474003:21,Load,Load,21,https://root.cern,https://github.com/root-project/root/pull/2135#issuecomment-394474003,2,"['Load', 'load']","['Load', 'loading']"
Performance,Actually it looks like dyld has a hook that might help us here: _dyld_register_func_for_add_image (receive callback with image base on load). If ld.so has something similar then we might already have the tools that we need.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1104574959:135,load,load,135,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1104574959,1,['load'],['load']
Performance,"Actually the issue seems stranger than expected. At the moment, I can not reproduce the problem. Asan blames the; ```; #2 0x7f8857c60240 in TClass::Init(char const*, short, std::type_info const*, TVirtualIsAProxy*, char const*, char const*, int, int, ClassInfo_t*, bool) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx; ```; for calling operator delete but for some reason that (and only that) line is missing the line number. So my best guess for the line in question in never run in any of my tests. Furthermore ASAN blame the line: `hist/hist/G__Hist.cxx:15989` for the creation of the `TClass` object but this line is toward the end of the line and hence likely to be related to a `TClass` for one of the STL collection which should not be deleted. Finally ASAN thinks that both the deletion and creation are done via the same thread thus are less likely to be due to a race condition. Would be possible to get the following set of information:; * What is at line `hist/hist/G__Hist.cxx:15989`; * Confirm that the mystery line in TClass.cxx is the delete at line 1589 (on my copy of TCLass.cxx):; ```; if (oldcl) {. oldcl->ReplaceWith(this);; delete oldcl;; ```; * Rerun the test with ASAN and a single thread by using the following patch:; ```; diff --git a/root/meta/race-12552/exec_dlopenrace.C b/root/meta/race-12552/exec_dlopenrace.C; index 946d8d0b7c..1c3c8ac5b4 100644; --- a/root/meta/race-12552/exec_dlopenrace.C; +++ b/root/meta/race-12552/exec_dlopenrace.C; @@ -40,8 +40,8 @@ int exec_dlopenrace(); ROOT::EnableThreadSafety();; constexpr auto iter = 10000;; std::thread openlib{repeatopen, iter};; - std::thread lookup{repeatlookup, iter};; +// std::thread lookup{repeatlookup, iter};; openlib.join();; - lookup.join();; +// lookup.join();; return 0;; }; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715#issuecomment-1553774228:921,race condition,race condition,921,https://root.cern,https://github.com/root-project/root/issues/12715#issuecomment-1553774228,1,['race condition'],['race condition']
Performance,"Actually, I am not sure the ntop implementation is correct.; This seems more accurate: https://stackoverflow.com/questions/14371521/how-to-find-the-current-system-cache-size-on-windows",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7196#issuecomment-2301457994:163,cache,cache-size-on-windows,163,https://root.cern,https://github.com/root-project/root/issues/7196#issuecomment-2301457994,1,['cache'],['cache-size-on-windows']
Performance,"Actually, this is fix but might still not be doing what is meant :( .... and I am not sure if you actually need to use this features. What do you intend on gain by calling `SetClusterPrefetch`?. The feature enabled by `SetClusterPrefetch` is to load all the basket of the cluster in memory so that within a cluster you can have cheap random to the entries (instead of having to decompress again and again). (At least) there is optimization in place that actually counter to this and need to be removed (the optimization avoids a memory copy by sending the uncompressed buffer back to the user as is ... but then it is no longer there. And in essence the fix we have here is also incorrect :(. When the 'ClusterPrefetching' is on, we actually should always leave the basket as is in the list of basket for the next call to possibly use (at least until the end of the cluster). So you could indeed proceed with using this as it function (return the right result) but does not yet implement the `ClusterPrefetching` optimization (i.e. does not do what it is supposed to do), so you could also just as well turn it off (temporarily).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16640#issuecomment-2406212799:245,load,load,245,https://root.cern,https://github.com/root-project/root/pull/16640#issuecomment-2406212799,4,"['load', 'optimiz']","['load', 'optimization']"
Performance,Add .cache directory to .gitignore,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8838:5,cache,cache,5,https://root.cern,https://github.com/root-project/root/pull/8838,1,['cache'],['cache']
Performance,Add 1-vs-rest and 1-vs-1 performance measures to TMVA multiclass output,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/597:25,perform,performance,25,https://root.cern,https://github.com/root-project/root/pull/597,1,['perform'],['performance']
Performance,"Add Size() interface to TListOfFunctions and call this from GetNmethods,; so that we don't have to allocate memory for this. Profiled the peak meory performance in valgrind; total(B) ; master: 427,544,680; HEAD: 427,542,328",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1762:149,perform,performance,149,https://root.cern,https://github.com/root-project/root/pull/1762,1,['perform'],['performance']
Performance,Add a class to perform compensate summation,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/372:15,perform,perform,15,https://root.cern,https://github.com/root-project/root/pull/372,1,['perform'],['perform']
Performance,Add a new option in PyKeras to execute user python code before loading the model,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5632:63,load,loading,63,https://root.cern,https://github.com/root-project/root/pull/5632,1,['load'],['loading']
Performance,"Add a new page source and sink that use S3 as the backing store. Davix; is used as the S3 interface. The implementation is nearly identical; to the DAOS backend and there is a lot of duplicated code. ```cpp; std::string s3Uri(""s3://$(S3_BUCKET).$(S3_HOST)"");; {; auto model = RNTupleModel::Create();; auto pt = model->MakeField<float>(""pt"");; auto vec = model->MakeField<std::vector<int>>(""vec"");; // create a new RNTuple named `my_ntuple`; // -- objects are written to /bucket/my_ntuple/; auto writer = RNTupleWriter::Recreate(std::move(model), ""my_ntuple"", s3Uri);; for (int i = 0; i < 100; i++) {; *pt = 42.0;; *vec = {1, 2, 3};; writer->Fill();; }; }. // opens the RNTuple at the path /bucket/my_ntuple/; auto ntuple = RNTupleReader::Open(""my_ntuple"", s3Uri);; ```; results in the following objects stored in the bucket:; ```shell; my_ntuple/0 # page 0, 1, ... ; my_ntuple/1; my_ntuple/18446744073709551613 # footer; my_ntuple/18446744073709551614 # header; my_ntuple/18446744073709551615 # anchor; my_ntuple/2; ```; Like the current DAOS backend, one object is allocated for every page,; plus three for the header, footer, and anchor. Performance will not be; very good yet as only a single request at a time is issued. Pages are issued keys sequentially from 0, like the DAOS backend. There; are three reserved keys:; * anchor: u64(-1); * header: u64(-2); * footer: u64(-3). S3 access is controlled using the (ROOT & Davix-compatible) envvars:; * S3_REGION; * S3_SECRET_KEY; * S3_ACCESS_KEY. Perhaps these should be changed to the official AWS envvars. Todo:; - [ ] re-add cluster caching functionality to `PopulatePageFromCluster`; - [ ] implement `LoadCluster`; - [ ] test mocks; - [ ] test with real RNTuples; - [ ] issue concurrent requests to S3",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8525:1140,Perform,Performance,1140,https://root.cern,https://github.com/root-project/root/pull/8525,3,"['Load', 'Perform', 'concurren']","['LoadCluster', 'Performance', 'concurrent']"
Performance,Add a unit test that checks RNTuple serialization/deserialization of classes using empty base optimization. ## Checklist:; - [X] tested changes locally. This PR fixes #10323.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10481:94,optimiz,optimization,94,https://root.cern,https://github.com/root-project/root/pull/10481,1,['optimiz'],['optimization']
Performance,"Add methods TBufferMerger::GetQueueSize() and TBufferMerger::RegisterCallback() to alow user; to control the rate at which data is pushed into the merging queue. In our test, we use the callback; function to launch tasks asynchronously whenever a buffer is done processing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1001:155,queue,queue,155,https://root.cern,https://github.com/root-project/root/pull/1001,1,['queue'],['queue']
Performance,Add option to selectively turn off const optimization for pdf components,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9338:41,optimiz,optimization,41,https://root.cern,https://github.com/root-project/root/pull/9338,1,['optimiz'],['optimization']
Performance,"Add support for visualization of digit sets in the context of physics collections:; * tooltip related to selected collection item; * optimization for filtered items, e.g. only visible digits are streamed to client. Exmaple of RecHits visualization in CMS; ![Untitled](https://user-images.githubusercontent.com/2516492/175380176-3bf84d88-cd9a-410a-80db-264db1c5bed8.png)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10821:133,optimiz,optimization,133,https://root.cern,https://github.com/root-project/root/pull/10821,1,['optimiz'],['optimization']
Performance,"Add the concept of column representations to fields. Every fields can have a set of possible column representations for writing and additional column representations for reading. When reading, the column representation is fixed by the on-disk data. On writing, there is a default column representation but the user can pick a different one. This provides the framework to store data in different encodings (e.g., split, unsplit) and to load data from ""compatible columns"", e.g. `kInt32` column into `std::int64` type. As an example, the PR adds support for split and unsplit storage of `double`s. Follow-up PRs will complete the available encodings and select split encode as the default for writing.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12133:436,load,load,436,https://root.cern,https://github.com/root-project/root/pull/12133,1,['load'],['load']
Performance,"Add thread-safe, bounded queue to sychronize producer-consumer threads",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8715:25,queue,queue,25,https://root.cern,https://github.com/root-project/root/pull/8715,1,['queue'],['queue']
Performance,Adding -ffast-math flag to really activate Optimized builds for interpreter,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1051:43,Optimiz,Optimized,43,https://root.cern,https://github.com/root-project/root/pull/1051,1,['Optimiz'],['Optimized']
Performance,"Adding a point that @pcanal mentioned during yesterday's meeting: As far as I understood, this only happens after some other libraries have been loaded? I tested `.L libceleritas_root.so` as the first action in a fresh `root` REPL, what else did you execute before that to make the error appear?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10162#issuecomment-1088326588:145,load,loaded,145,https://root.cern,https://github.com/root-project/root/issues/10162#issuecomment-1088326588,1,['load'],['loaded']
Performance,"Address a number of AddressSanitizer failures with Python tests, due to the way we need to preload the ASan runtime and our configuration. If I count correctly (there were a number of failures introduced last night, so I don't have a proper baseline), this fixes 7 tests:; * `pyunittests-pyroot-import-load-libs`; * `tutorial-roofit-rf104_classfactory-py`; * `roottest-python-JupyROOT-simpleCppMagic_notebook`; * `roottest-python-JupyROOT-thread_local_notebook`; * `roottest-python-JupyROOT-ROOT_kernel_notebook`; * `roottest-python-basic-basic`; * `roottest-python-regression-regression`. Moreover, `tutorial-rcanvas-df104-py` will show a proper AdressSanitizer failure.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11621:302,load,load-libs,302,https://root.cern,https://github.com/root-project/root/pull/11621,1,['load'],['load-libs']
Performance,"Address: https://github.com/root-project/root/pull/12650#issuecomment-1517450219. From @hahnjo:. Hi @pcanal, our AddressSanitizer build reports a heap-buffer-overflow: https://lcgapp-services.cern.ch/root-jenkins/job/root-asan/LABEL=ROOT-centos8,SPEC=asan,V=master/lastCompletedBuild/testReport/projectroot.roottest.root.tree/stl/roottest_root_tree_stl_make/. I bisected this to commit https://github.com/root-project/root/commit/2fa93de2a51e248a56418d8c6488b043746d0925; the error message says ""0x60700022d458 is located 8 bytes to the left of 80-byte region"". However, the stack trace points to the loop immediately after the added condition to perform the binary search. Could you take a look, please? What does TMath::BinarySearch return in case the element is not found?. Answer: yep it was missing the error handling (return value of -1)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12695:647,perform,perform,647,https://root.cern,https://github.com/root-project/root/pull/12695,1,['perform'],['perform']
Performance,"Adds `RPageSource::LoadStructure[Impl]()`. This allows to load header and footer without processing them. Decompression and deserialization will still happen in Attach(), which calls LoadStructure if it hasn't been called before. This will facilitate asynchronous open of files for RDF MT scheduling.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15909:19,Load,LoadStructure,19,https://root.cern,https://github.com/root-project/root/pull/15909,3,"['Load', 'load']","['LoadStructure', 'load']"
Performance,"Adds a `RRawFile` class in the `ROOT::Experimental::Detail` namespace for accessing files byte-wise or line-wise. This is supposed to be used in RNTuple as well as in the CSV and SQlite `RDataSource` classes. Files are addressed by URLs (e.g. http://server/file or file:///local/path) and derived classes of `RRawFile` implement the protocol-dependent low-level read routine. The class allows for; - unified access to files, either local or remote; - Automatic handling of UNIX and Windows line breaks ; - Control of the I/O buffer mechanism. Current todos:; - [ ] Use upcoming `RStatus` / `RException` based error handling; - [ ] Use RRawFile in RCsvDS and RSqliteDS and compare the performance to the current implementation ; - [x] Implementation of Davix based I/O, using ROOT's plugin infrastructure in order to avoid a dependency of RIO to RDAVIX; - [x] Revised I/O buffering mechanism to avoid buffer thrashing on `Readln`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3030:684,perform,performance,684,https://root.cern,https://github.com/root-project/root/pull/3030,1,['perform'],['performance']
Performance,"Adds a new constructor to the RNTuple RDF data source that takes an ntuple name and a list of files. The data source then treats these files as a chain. Slightly simplifies the prototype construction in the RNTuple data source: instead of constructing full column reader prototypes, only the corresponding field prototypes are constructed. Multi-threaded work scheduling is as follows:. - As long as there are more files than slots: every slots get a file; - For the tail: slots get distributed over the remaining files and align on cluster boundaries. Some optimizations for follow-up PRs:. - Load the next ranges in the background. In particular that would open the next batch of files in the backgound; - Clone page sources without reopening the file; - The next set of ranges currently gives up to number of slots ranges. However, it would make more sense to use resource constraints such as available memory or number of open file descriptors as a limit and let slots work on more ranges at a time.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13329:340,Multi-thread,Multi-threaded,340,https://root.cern,https://github.com/root-project/root/pull/13329,3,"['Load', 'Multi-thread', 'optimiz']","['Load', 'Multi-threaded', 'optimizations']"
Performance,"Adds the `RClusterCache` I/O scheduler that, similar to `TTreeCache`, preloads upcoming data ranges based on the current request. The RClusterCache synchronously provides a certain cluster and, upon that request, asynchronously preloads the next cluster(s) in an I/O thread. The actual logic of populating a cluster for a particular set of active columns is handled by the page storage. The file page storage linearizes and coalesces requests and requests the corresponding byte range requests in bulks (using `RRawFile::ReadV`). Currently the cluster cache of packed and compressed pages is on the heap. In the future, another descendant of `RCluster` can implement mmap() memory management instead. Also left for future work is the use of concurrent streams in `LoadCluster()`. - [x] Add I/O metrics and show how to print them in a tutorial; - [x] Support changing active columns during the lifetime of an ntuple reader; - [x] Gracefully handle a change of active columns when cluster where already loaded",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5377:552,cache,cache,552,https://root.cern,https://github.com/root-project/root/pull/5377,4,"['Load', 'cache', 'concurren', 'load']","['LoadCluster', 'cache', 'concurrent', 'loaded']"
Performance,"After #10005 is merged, a couple of tests will fail due to a `heap-use-after-free`:; * `pyunittests-pyroot-pyz-rdataframe-makenumpy`; * `pyunittests-pyroot-numbadeclare`; * `gtest-tree-dataframe-test-dataframe-friends`; * `gtest-tree-dataframe-test-dataframe-cache`; * `gtest-tree-dataframe-test-dataframe-simple`; * `gtest-tree-dataframe-test-dataframe-snapshot`; * `gtest-tree-dataframe-test-datasource-more`; * `gtest-tree-dataframe-test-datasource-trivial`; * `gtest-tree-dataframe-test-dataframe-concurrency` (`RJittedDefine`); * `pyunittests-dataframe-misc` (`RJittedDefine`); * `pyunittests-dataframe-histograms` (`RJittedDefine`); * `pyunittests-dataframe-cache`; * `pyunittests-dataframe-merge-results`; * `tutorial-dataframe-df019_Cache`; * `tutorial-tmva-tmva003_RReader`; * `tutorial-dataframe-df000_simple-py` (`RJittedDefine`); * `tutorial-dataframe-df002_dataModel-py` (`RJittedDefine`); * `tutorial-dataframe-df003_profiles-py`; * `tutorial-dataframe-df007_snapshot-py` (`RJittedDefine`); * `tutorial-dataframe-df010_trivialDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df014_CSVDataSource-py` (`RJittedDefine`); * `tutorial-dataframe-df016_vecOps-py` (`RJittedDefine`); * `tutorial-dataframe-df017_vecOpsHEP-py` (`RJittedDefine`); * `tutorial-dataframe-df019_Cache-py`; * `tutorial-dataframe-df021_createTGraph-py` (`RJittedDefine`); * `tutorial-dataframe-df024_Display-py`; * `tutorial-dataframe-df031_Stats-py` (`RJittedDefine`); * `tutorial-dataframe-df103_NanoAODHiggsAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df105_WBosonAnalysis-py` (`RJittedDefine`); * `tutorial-dataframe-df106_HiggsToFourLeptons-py` (`RJittedDefine`); * `tutorial-dataframe-df107_SingleTopAnalysis-py` (`RJittedDefine`); * `tutorial-pyroot-pyroot004_NumbaDeclare-py` (`RJittedDefine`); * `tutorial-rcanvas-df105-py` (`RJittedDefine`); ; According to the stack traces, `~RDefineBase` / `~RJittedDefine` calls `RLoopManager::Deregister` on an already freed `RLoopManager`. Note: There may",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10007:259,cache,cache,259,https://root.cern,https://github.com/root-project/root/issues/10007,3,"['cache', 'concurren']","['cache', 'concurrency']"
Performance,"After calling:; ```; gApplication->ExitOnException(TApplication::kAbort);; ```; and doing .qqqq or other aborts you get stack traces like:; ```; * thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT; * frame #0: 0x00007fff5ab1f2c2 libsystem_kernel.dylib`__pthread_kill + 10; frame #1: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284; frame #2: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127; frame #3: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4; frame #4: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19; frame #5: 0x00000001000d71de libRint.so`TRint::HandleException(this=0x0000000101209850, sig=5) at TRint.cxx:666:18; frame #6: 0x000000010039b15c libCore.so`TUnixSystem::DispatchSignals(this=0x0000000101106340, sig=kSigAbort) at TUnixSystem.cxx:3638:27; frame #7: 0x000000010038fbb1 libCore.so`SigHandler(sig=kSigAbort) at TUnixSystem.cxx:403:32; frame #8: 0x000000010039b324 libCore.so`sighandler(sig=6) at TUnixSystem.cxx:3608:10; frame #9: 0x000000010037e060 libCore.so`textinput::TerminalConfigUnix::HandleSignal(this=0x0000000100637818, signum=6) at TerminalConfigUnix.cpp:100:11; frame #10: 0x000000010037de6b libCore.so`(anonymous namespace)::TerminalConfigUnix__handleSignal(signum=6) at TerminalConfigUnix.cpp:36:29; frame #11: 0x00007fff5abcfb5d libsystem_platform.dylib`_sigtramp + 29; frame #12: 0x00007fff5ab1f2c3 libsystem_kernel.dylib`__pthread_kill + 11; frame #13: 0x00007fff5abdabf1 libsystem_pthread.dylib`pthread_kill + 284; frame #14: 0x00007fff5aa896a6 libsystem_c.dylib`abort + 127; frame #15: 0x0000000100395b04 libCore.so`TUnixSystem::Abort(this=0x0000000101106340, (null)=0) at TUnixSystem.cxx:2156:4; frame #16: 0x00000001001530db libCore.so`TApplication::HandleException(this=0x0000000101209850, sig=5) at TApplication.cxx:612:19; frame #17: 0x00000001000d71de libRint.so`TRint::HandleException",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5034#issuecomment-588320347:158,queue,queue,158,https://root.cern,https://github.com/root-project/root/pull/5034#issuecomment-588320347,1,['queue'],['queue']
Performance,"After changes to RDF's internal logic, some of the classes used; during the event loop were triggering unnecessary, slow cling nullptr; checks. This patch turns these checks off. This resolves a performance regression in v6.23 w.r.t. v6.22 for RDF; macros run via the interpreter (`root dfMacro.C`).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7004:195,perform,performance,195,https://root.cern,https://github.com/root-project/root/pull/7004,1,['perform'],['performance']
Performance,"After importing `ROOT` in a Jupyter Notebook in which Jupyter Widgets are used, the performance of figure interactions like panning and zooming drastically falls off. After identifying ROOT as the culprit, I found that the poor performance is caused by sleeping invoked during [these hooks](https://github.com/root-project/root/blob/aedbc69c9c41a9d3eb6a5e24eb7382547141d85a/bindings/jupyroot/python/JupyROOT/helpers/utils.py#L400-L401) which are run for each kernel execution.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7684:84,perform,performance,84,https://root.cern,https://github.com/root-project/root/issues/7684,2,['perform'],['performance']
Performance,"After investigation, it turns out that the issue is slightly different than described above: `rootcling` *does* correctly honor the `-W` flag and the dictionary compiles fine. What's causing the problem is that upon loading the dictionary, some code is parsed again. This time it's under the Cling compilation flags and that's causing the error, unless changed with `EXTRA_CLING_ARGS=""-Wno-narrowing""` on the command line. I propose we close this issue (and the JIRA equivalent).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/14574#issuecomment-1941076291:216,load,loading,216,https://root.cern,https://github.com/root-project/root/issues/14574#issuecomment-1941076291,1,['load'],['loading']
Performance,"After messing up my git repository, I closed pull request 796 and re-created this one with the same changes. This pull request is the result of work done by David Clark as a summer intern at Argonne:; To prepare for multi-threaded workflows, a preloading and retaining clusters feature is introduced. This change will prevent additional reads from occurring when reading events out of sequence.; By setting TTree::SetClusterPrefetch(), an entire clusters will be loaded into memory, rather than single baskets.; By setting the MaxVirtualSize of the tree to a negative value, previous clusters will be retained - the absolute value of MaxVirtualSize indicates how many additional clusters will be kept in memory. If TTree CacheDoClusterPrefetch is set to true, GetEntry() will load the entire cluster into memory, not just the first basket. For this, GetBasket() is modified to call a new function GetFreshCluster(). This function is responsible for returning a new basket and clearing out clusters from memory. Because clusters can have varying numbers of baskets, GetFreshCluster() reuses the first basket and clear the rest of the baskets. Reusing all baskets may be more efficient, but adds significant complexity and would not affect the typical case where each cluster only contains a single basket (all the baskets will be reused here). To test the performance of the change, I read 1000 entries (about 1 GB) from a tree of randomly generated data consisting of 2000 branches. Every read had a 2.5% chance of reading 10 entries back or a 2.5% chance of reading 10 entries forward from the current entry.; Without the change enables there were 1.5 GB read in 31102 read calls.; With MaxVirtualSize set to -1 and CacheDoClusterPrefetch true, there were 1.1 GB read in 90 read calls.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1065:216,multi-thread,multi-threaded,216,https://root.cern,https://github.com/root-project/root/pull/1065,6,"['Cache', 'load', 'multi-thread', 'perform']","['CacheDoClusterPrefetch', 'load', 'loaded', 'multi-threaded', 'performance']"
Performance,"After pull-request #11525 is merged (which introduces `RField` support for user-defined classes that have an associated collection proxy), it is planned to apply further optimizations to the base implementation. ### Optional: share how it could be improved; Three different optimizations can be applied, in order:; - [x] Iteration over collection elements: suggestion by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997334570) is to use iterators instead of relying in `TVirtualCollectionProxy::At()`.; - [x] Reuse vs. destruct/reallocate for collection items: suggested by @pcanal [here](https://github.com/root-project/root/pull/11525#discussion_r997337292) and [here](https://github.com/root-project/root/pull/11525#discussion_r997343681).; - [ ] Maybe optimize the case of a `kSTLvector` collection, as elements are contiguous in memory (see [here](https://github.com/root-project/root/pull/11525#discussion_r997335574)). [marked as `TODO` in the source code]",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11671:170,optimiz,optimizations,170,https://root.cern,https://github.com/root-project/root/issues/11671,3,['optimiz'],"['optimizations', 'optimize']"
Performance,"After the complete run of readcms310.C we get (this is all with the current master). pch+rdict: master and build of test as is (run MAKEP in cms310 subdirectory to build it. pch-rdict: use previous but mv the rdict: ```mv cms310/cms310ProjectDict_rdict.pcm cms310/cms310ProjectDict_rdict.pcm.moved```. module+rdict: use ```runtime_cxxmodules=""ON""```. module-rdict: use previous but mv the rdict out of the way. configure line:. ```; cmake -DLLVM_BUILD_TYPE=""RelWithDebInfo"" -Dcxx17=""ON"" -Droottest=""ON"" [-Druntime_cxxmodules=""ON""] -Dtest=""ON"" -Dtmva=""OFF"" -Dxrootd=""OFF"" /local2/pcanal/cint_working/rootcling/root-module -G Ninja; ```. In the following table, the numbers are kB. They are as reported by ```/proc/${pid}/status```. phase | counter | pch+rdict | pch-rdict | module+rdict | module-rdict ; ------------ | ---------- | ------------ | ------------- | ------------ | ------------- ; after reading the entries | VmPeak | 413604 | 454132 | 490748 | 513176 ; after reading the entries | VmRSS | 140204 | 186148 | 169448 | 195008. For VmRSS. So without modules, avoiding to load the headers (i.e using the rdict) saves **46** MB ; Replacing the pch with modules add (as expected as the moment) **30** MB ; With modules, avoiding to load pcm content (i.e using the rdict) still saves **25** MB. For VmPeak. So without modules, avoiding to load the headers (i.e using the rdict) saves **40** MB;  Replacing the pch with modules add (as expected as the moment) **77** MB ; With modules, avoiding to load pcm content (i.e using the rdict) still saves **22** MB. So it seems to be me that the rdict are still as useful as they were, isn't it? (or am I still missing something?). Thanks,;  Philippe. PS. In run-time, I see an average of 1.20s for module+rdict vs an average of 1.3s for module-rdict (for a 'root.exe -b -l -q' average of .2s) ; and expected this is just an 'initialization' cost when increasing the number of entries read the difference stays around .1s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3012#issuecomment-473370043:1080,load,load,1080,https://root.cern,https://github.com/root-project/root/pull/3012#issuecomment-473370043,4,['load'],['load']
Performance,"After the new batch interface was merged, one can rewrite the Romberg integrator to use batch evaluations. It turned out that the old integrator has a bug: It sometimes stops too early. Here's the performance of different integrators as extracted from tests that come via this PR. The numbers are the relative deviation from the analytic solution:; ```; Integrating log(a*x), relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	0.0016594	0.00161012	0.00193414	0.00225071	0.0168282	t=0.04; 	new:	0.000505525	0.00049051	0.000589222	0.000685661	0.0168282	t=0.03; 	ROOT:	3.45732e-08	3.36752e-08	4.03318e-08	4.62674e-08	0.0168282	t=0.14; Integrating log(a*x), relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	2.45769e-05	2.45769e-05	2.4577e-05	2.4577e-05	2.4577e-05	t=0.19; 	new:	3.25114e-07	3.25114e-07	3.25115e-07	3.25115e-07	2.4577e-05	t=0.41; 	ROOT:	7.94638e-14	7.95337e-14	7.9692e-14	7.98497e-14	2.4577e-05	t=0.3; Old integrator reached poor precision: 2.45769e-05 +/- 4.91464e-11 instead of 1e-06; Integrating log(a*x), relEps = 1e-08; 	 	mean 	median 	q95 	q99 	max; 	old:	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	1.62946e-08	t=1.26; 	new:	3.98296e-10	3.98296e-10	3.98297e-10	3.98297e-10	1.62946e-08	t=1.48; 	ROOT:	7.94604e-14	7.95337e-14	7.96915e-14	7.98493e-14	1.62946e-08	t=0.38; [ OK ] Roo1DIntegrator.ConvergenceSettings_log (4402 ms); [ RUN ] Roo1DIntegrator.ConvergenceSettings_pol4; Integrating Polynomial 4th order, relEps = 0.001; 	 	mean 	median 	q95 	q99 	max; 	old:	3.01835e-16	1.45346e-16	5.65891e-16	2.22915e-15	1.15949e-13	t=0.04; 	new:	3.3408e-16	1.84038e-16	6.31068e-16	2.24297e-15	1.15949e-13	t=0.05; 	ROOT:	3.09356e-16	1.56283e-16	5.63307e-16	2.02418e-15	1.15949e-13	t=0.05; Integrating Polynomial 4th order, relEps = 1e-06; 	 	mean 	median 	q95 	q99 	max; 	old:	1.40432e-16	2.12767e-16	4.25546e-16	4.25569e-16	6.38354e-16	t=0.05; 	new:	1.77284e-16	2.12771e-16	4.25564e-16	6.38325e-16	6.38354e-16	t=0.04; 	ROOT:	1.44538e-16	2.12768e-16	4.25551e-16	4.25569e-16	6.383",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6632:197,perform,performance,197,https://root.cern,https://github.com/root-project/root/pull/6632,1,['perform'],['performance']
Performance,"After the patch of the linked PR, the `TGraph::Sort` method now forwards to `std::stable_sort` (probably in the future `std::sort` as soon as we are sure we can use a working libc++ implementation). So the worst case performance scenario mentioned in the issue is not possible anymore, since the standard implementers use a merge sort algorithm for `std::stable_sort`, this issue can be closed",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6352#issuecomment-1740597658:217,perform,performance,217,https://root.cern,https://github.com/root-project/root/issues/6352#issuecomment-1740597658,1,['perform'],['performance']
Performance,"After the update to Visual Studio v16.4.0, the /O2 optimization flag in the interpreter make many (25%) of the tests failing.; Try to re-enable /O2 after the upgrade of llvm & clang, or after updating Visual Studio (v16.5.0-pre.2.0 still doesn't work)",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4948:51,optimiz,optimization,51,https://root.cern,https://github.com/root-project/root/pull/4948,1,['optimiz'],['optimization']
Performance,"After the upgrade to LLVM 13, the test `roottest-root-meta-tclass-execInitOrder` will *crash* with AddressSanitizer instrumentation:; ```; 2187: Processing /home/jhahnfel/ROOT/src/roottest/root/meta/tclass/execInitOrder.cxx+...; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Error in <TClass::LoadClassInfo>: no interpreter information for class Derived is available even though it has a TClass initialization routine.; 2187: Derived is found to inherit from TObject; 2187:; 2187: *** Break *** segmentation violation; 2187:; 2187:; 2187:; 2187: ===========================================================; 2187: There was a crash.; 2187: This is the entire stack trace of all threads:; 2187: ===========================================================; 2187: #0 0x00007f2a616e15db in waitpid () from /lib64/libc.so.6; 2187: #1 0x00007f2a61643ce7 in do_system () from /lib64/libc.so.6; 2187: #2 0x00007f2a630125cb in TUnixSystem::StackTrace (this=<optimized out>) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:2395; 2187: #3 0x00007f2a6301c2df in TUnixSystem::DispatchSignals (this=0x617000000080, sig=kSigSegmentationViolation) at /home/jhahnfel/ROOT/src/core/unix/src/TUnixSystem.cxx:3615; 2187: #4 <signal handler called>; 2187: #5 0x00000000002d353e in __interceptor_strcmp.part.325 (); 2187: #6 0x00007f2a62e33daf in TClassTable::AddAlternate (normName=0x7f2a6007c780 <.str> ""UserClassViaTypedef"", alternate=0x7f2a6007c7c0 <.str> ""UserClass_t"") at /home/jhahnfel/ROOT/src/core/cont/src/TClassTable.cxx:447; 2187: #7 0x00007f2a62e382ed in ROOT::AddClassAlternate (normName=",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11867:253,Load,LoadClassInfo,253,https://root.cern,https://github.com/root-project/root/issues/11867,4,['Load'],['LoadClassInfo']
Performance,"Agreed! I'll make sure that is taken care of first, at the very least by throwing an exception if `fUpdate` is used with a multi-thread RDF. Again I am not sure that it can work at all, I need to go down the rabbit hole.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4965#issuecomment-592034386:123,multi-thread,multi-thread,123,https://root.cern,https://github.com/root-project/root/pull/4965#issuecomment-592034386,1,['multi-thread'],['multi-thread']
Performance,"Ah! Absolutely, you are right that normalization with the `RooAddPdf` is not well defined in your script!. The problem is that the normalization set should be in general passed to `getVal()`. However, not doing that works most of the time because the pdfs usually know what the observables are and cache the normalization set themselves. The `RooAddPdf` doesn't do that, so calling `getVal()` gives you wrong (unnormalized) results. In ROOT 6.24, we have implemented a warning in this case, so your script gives this output (with `option_normalize_hist=0`):; ```; ----------------------------; prepare model for index_process=0, signal; ----------------------------; prepare model for index_process=1, Continuum; nb_events=2201.5801859878; RooRealVar::n_signal = 1.58019 L(0 - 10000) ; RooRealVar::n_Continuum = 2200 L(0 - 10000) ; nb_entries=55; -----; data : m_yy=105.5, value data=40; [#0] WARNING:Eval -- Evaluating RooAddPdf without a defined normalization set. This can lead to ambiguos coefficients definition and incorrect results. Use RooAddPdf::fixCoefNormalization(nset) to provide a normalization set for defining uniquely RooAddPdf coefficients!; value_pdf total=39.9713; n_times_pdf_signal->getVal()*bin_width=[#0] WARNING:Eval -- Evaluating RooAddPdf without a defined normalization set. This can lead to ambiguos coefficients definition and incorrect results. Use RooAddPdf::fixCoefNormalization(nset) to provide a normalization set for defining uniquely RooAddPdf coefficients!; 0; n_times_pdf_continuum->getVal()*bin_width=[#0] WARNING:Eval -- Evaluating RooAddPdf without a defined normalization set. This can lead to ambiguos coefficients definition and incorrect results. Use RooAddPdf::fixCoefNormalization(nset) to provide a normalization set for defining uniquely RooAddPdf coefficients!; 40; pdf signal only : 0; pdf bkg only : 40; ```. If you do what the the warning suggests with `fixCoefNormalization`, or alternatively use `getVal(argset_m_yy)`, the script will give the r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7991#issuecomment-826978330:298,cache,cache,298,https://root.cern,https://github.com/root-project/root/issues/7991#issuecomment-826978330,1,['cache'],['cache']
Performance,"Ah, no, actually that first part can also be non-increasing, for instance if the reception of tasks on the queue for some reason pauses half way through, so e.g. you could get:; 1 [ reception pauses on queue here ]; 0 [ reception continues now, 2 comes in ]; 2 [ while executing 2, everything else is received ]; 9; 8; 7; 6; ... And that is still valid. I will just push one more update with a refactoring to not have this complicated expectation correction code duplicate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11627#issuecomment-1330826120:107,queue,queue,107,https://root.cern,https://github.com/root-project/root/pull/11627#issuecomment-1330826120,4,['queue'],['queue']
Performance,"Ah, sorry I missed that!. Well, the `RooMomentMorphFuncND` makes the mistake of having a pointer to the last cached normalization set as a data member, and it is not excluded from IO:; https://github.com/root-project/root/blob/master/roofit/roofit/inc/RooMomentMorphFuncND.h#L133. You can therefore make the writing work if you first evaluate your function with a normalization set, and make sure that the normalization set is still alive during `writeToFile()` such that the pointer is not invalid:. ```C++; RooArgSet nset{*myy};; morph_ND->getVal(&nset);; ; morph_ND->Print();; w->import(*morph_ND);; w->Print();; w->writeToFile(""test_workspace.root"");; ```. This is of course annoying, and I will quickly fix this. The `_curNormSet` member should be excluded from IO. But at least you have a workaround until the next ROOT release!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11876#issuecomment-1384348020:109,cache,cached,109,https://root.cern,https://github.com/root-project/root/issues/11876#issuecomment-1384348020,1,['cache'],['cached']
Performance,"AiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=h9OXPXSoNf6rog1YhZy1Iuiji7Tq8asNeePutHMw2rs%3D&reserved=0>,O=Grid,C=CA; >>>>>>> * 	start date: Apr 08 16:29:03 2021 GMT; >>>>>>> * 	expire date: May 08 16:29:03 2022 GMT; >>>>>>> * 	common name: dpool46.lcg.triumf.ca <http://dpool46.lcg.triumf.ca/>; >>>>>>> * 	issuer: CN=Grid Canada Certificate Authority,O=Grid,C=CA; >>>>>>> * NSS error -8179 (SEC_ERROR_UNKNOWN_ISSUER); >>>>>>> * Peer's Certificate issuer is not recognized.; >>>>>>> * Closing connection 0; >>>>>>> curl: (60) Peer's Certificate issuer is not recognized.; >>>>>>> More details here: http://curl.haxx.se/docs/sslcerts.html <https://can01.safelinks.protection.outlook.com/?url=http%3A%2F%2Fcurl.haxx.se%2Fdocs%2Fsslcerts.html&data=04%7C01%7Csimonliu%40triumf.ca%7C2bf615c9bb89486eaecd08d91571b94b%7Cc20535109cb34679a2d38f442e03b587%7C1%7C0%7C637564400460996291%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C1000&sdata=s%2FTzkvNzM41e0GBRqYtbxaUzcM3edlGm0YFY9wV%2BN2M%3D&reserved=0>; >>>>>>> ; >>>>>>> curl performs SSL certificate verification by default, using a ""bundle""; >>>>>>> of Certificate Authority (CA) public keys (CA certs). If the default; >>>>>>> bundle file isn't adequate, you can specify an alternate file; >>>>>>> using the --cacert option.; >>>>>>> If this HTTPS server uses a certificate signed by a CA represented in; >>>>>>> the bundle, the certificate verification probably failed due to a; >>>>>>> problem with the certificate (it might be expired, or the name might; >>>>>>> not match the domain name in the URL).; >>>>>>> If you'd like to turn off curl's verification of the certificate, use; >>>>>>> the -k (or --insecure) option.; >>>>>>> ***@***.*** t5]$ ; >>>>>> ; >>>>>> ; >>>>>> I am unfamiliar with how to use curl with X509 and everything I tried so far has not worked. eg; >>>>>> curl -v https://webdav.lcg.triumf.ca:2880/atlas/atlaslocalgroupdisk/rucio/user/desilva/a1/a8/myFile.1.root <ht",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840018942:6411,perform,performs,6411,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840018942,1,['perform'],['performs']
Performance,All the above Jenkins builds have now passed. Please take a look. `#125133 ROOT-performance-centos8-multicore/default ShamrockLee PR #8903`; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125133/. `#125134 mac1014/python3 ShamrockLee PR #8903`; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125134/. `#125135 windows10/cxx14 ShamrockLee PR #8903`; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125135/. `#125136 ROOT-ubuntu16/nortcxxmod ShamrockLee PR #8903`; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125136/. `#125137 ROOT-debian10-i386/cxx14 ShamrockLee PR #8903`; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125137/. `#125138 mac11.0/cxx17 ShamrockLee PR #8903`; https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/125138/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8903#issuecomment-907578552:80,perform,performance-,80,https://root.cern,https://github.com/root-project/root/pull/8903#issuecomment-907578552,1,['perform'],['performance-']
Performance,"Already mentioned that:; - Detect CXXFLAGS including LTO, issue a warning; - Provide an option to disable LTO for LLVM. LTO is more than just an optimization. It allows to find numerous coding issues which are only visible with whole program analysis, e.g. ODR violations, out-of-bound accesses across TUs, ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11135#issuecomment-1208051939:145,optimiz,optimization,145,https://root.cern,https://github.com/root-project/root/issues/11135#issuecomment-1208051939,1,['optimiz'],['optimization']
Performance,"Alright, here is a full reproducer without dask and cloudpickle:. ```python; # Pickle the payload for the distributed computation; import pickle. #import ROOT # Works fine if we have ROOT imported outside of foo; def foo(n):; import ROOT # Breaks if we import ROOT inside foo; return ROOT.TH1F(). with open('p.pkl', 'wb') as pkl:; pickle.dump(foo, pkl). # Distribute the payload among workers; from multiprocessing import Pool. def payload(n):; with open('p.pkl', 'rb') as pkl:; foo_unpickled = pickle.load(pkl); return foo_unpickled(n). with Pool(4) as p:; print(p.map(payload, range(4))); ```. So pickling a function with `import ROOT` in the body and using this in a multiprocessing environment causes a segfault with the attached stacktrace. The important part is again the following lines:. ```; #8 _Py_INCREF (op=0x0) at /usr/include/python3.8/object.h:459; #9 CPyCppyy::CreateScopeProxy (name=""TROOT"", parent=0x0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:656; #10 0x00007eff8858b32a in CPyCppyy::CreateScopeProxy (scope=3) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:494; #11 0x00007eff8858b384 in CPyCppyy::BindCppObjectNoCast (address=0x7eff7bd44f20 <ROOT::Internal::GetROOT1()::alloc>, klass=klass; entry=3, flags=flags; entry=0) at /home/stefan/src/root-dev/bindings/pyroot/cppyy/CPyCppyy/src/ProxyWrappers.cxx:809; #12 0x00007eff8876f873 in (anonymous namespace)::AddToGlobalScope (klass=3, obj=<optimized out>, label=0x7eff8877d71a ""gROOT"") at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:39; #13 PyROOT::Init () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTWrapper.cxx:59; #14 0x00007eff8876f49e in PyInit_libROOTPythonizations3_8 () at /home/stefan/src/root-dev/bindings/pyroot/pythonizations/src/PyROOTModule.cxx:150; #15 0x00007eff8acf4f8f in _PyImport_LoadDynamicModuleWithSpec () from /usr/lib/libpython3.8.so.1.0; ```. [stacktrace.log](https:/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6765#issuecomment-723066118:502,load,load,502,https://root.cern,https://github.com/root-project/root/issues/6765#issuecomment-723066118,1,['load'],['load']
Performance,"Alright, that hints towards the issue been real to the loading and unloading of the dictionary (some container might be growing when it shouldn't .. or something). Since the PR improves the situation (trades a crash for slowness), I propose we merge this as I continue to investigate.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12863#issuecomment-1559983308:55,load,loading,55,https://root.cern,https://github.com/root-project/root/pull/12863#issuecomment-1559983308,1,['load'],['loading']
Performance,"Alright, this gets more tricky than anticipated. I had to workaround a few more codegen/optimizer bugs in nvc++. I changed the PR to draft for now.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14139#issuecomment-1832581844:88,optimiz,optimizer,88,https://root.cern,https://github.com/root-project/root/pull/14139#issuecomment-1832581844,1,['optimiz'],['optimizer']
Performance,"Also any suggestion for testing is probably better to go as PR against this base branch:; https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2; which I don't know what Shahzad used to branch from (I think its master if we follow our name convention for naming branches) and which is now long list of commits behind (and as it seems unmergable); https://github.com/cms-sw/root/compare/cmscxx/master/610a87c0a2...vgvassilev:cmssw-no-rdicts?expand=1; A PR against this branch could be tested (for integration, not for performance) right away. ; This will make it easier to manual build with our tools and manually tested from there",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4088#issuecomment-511359239:526,perform,performance,526,https://root.cern,https://github.com/root-project/root/pull/4088#issuecomment-511359239,1,['perform'],['performance']
Performance,"Also fix TClusterIterator for the case of TTree with 1 entry (and no basket flush). Also Remove unnecessary thread local in TKey.cxx. And more changes to address issues seen in variation of the failing code in ROOT-10702. In particular, after this PR, the following will always work; ```; chain->SetBranchAdress(fullnameofbranch, &address_of_numerical_type);; ```. Prior to this PR, if the requested branch is a sub-branch of a split object, the user needs to **also** turn on MakeClass mode (also called Decomposed Object mode) explicit, now it is done implicitly. Prior to this PR doing:; ```; // Not setting the top level branch address.; chain->SetBranchAdress(sub_branch_name, &address);; chain->GetEntry(0);; ```; Resulted in the address set to be forgotten. Note that a work-around was:; ```; // Not setting the top level branch address.; chain->GetEntry(0);; chain->SetBranchAdress(sub_branch_name, &address);; ```; But also the address needed to (in most cases) also be set again after each new tree was loaded. Note that, the following:; ```; chain->SetBranchAdress(sub_branch_name, &address);; chain->SetBranchAdress(top_level_branch_name, &other_address);; chain->GetEntry(0);; ```; will result (as one would expect) with the first SetBranchAddress being ignored/over-ridden. With this PR, in addition to checking the address type in the case:; ```; chain->LoadTree(0);; chain->SetBranchAdress(branch_name, &address);; ```; will also check them in the case:; ```; chain->SetBranchAdress(branch_name, &address);; chain->LoadTree(0);; ```; (yep, it would silently fail before).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5721:1013,load,loaded,1013,https://root.cern,https://github.com/root-project/root/pull/5721,3,"['Load', 'load']","['LoadTree', 'loaded']"
Performance,Also it doesn't change performance at all with cling modules. (Also with non-modules); Without this patch:; ```; Processing /home/yuka/CERN/ROOT/memory.C...; cpu time = 0.233852 seconds; sys time = 0.092215 seconds; res memory = 210.836 Mbytes; vir memory = 346.195 Mbytes; ```. With this patch:; ```; Processing /home/yuka/CERN/ROOT/memory.C... ; cpu time = 0.248781 seconds ; sys time = 0.067224 seconds ; res memory = 210.258 Mbytes ; vir memory = 345.773 Mbytes ; ```. So I think there is not downside for this,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2591#issuecomment-422947446:23,perform,performance,23,https://root.cern,https://github.com/root-project/root/pull/2591#issuecomment-422947446,1,['perform'],['performance']
Performance,"Also provide latest JSROOT; And provide `ui5/canv/Component-preload.js`. Used for `RCanvas` and `TWebCanvas` components; Includes compressed versions of `Component.js`, `manifest.json`, views and controllers. ; Speed-up loading of the web components. Preliminary code to generate such file is:; https://github.com/linev/misc/tree/master/ui5comp. CAUTION! All changes in original scripts only will take effect after changes in preload script",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9213:220,load,loading,220,https://root.cern,https://github.com/root-project/root/pull/9213,1,['load'],['loading']
Performance,"Also reproducible on gentoo. ```; jonesmz@ymir ~ $ git clone git@github.com:root-project/cling.git; Cloning into 'cling'...; remote: Enumerating objects: 31202, done.; remote: Counting objects: 100% (651/651), done.; remote: Compressing objects: 100% (193/193), done.; remote: Total 31202 (delta 448), reused 561 (delta 442), pack-reused 30551; Receiving objects: 100% (31202/31202), 19.11 MiB | 22.64 MiB/s, done.; Resolving deltas: 100% (23380/23380), done.; jonesmz@ymir ~ $ cmake -S cling -B build-cling -Dbuiltin_llvm=OFF; -- The C compiler identification is GNU 11.3.1; -- The CXX compiler identification is GNU 11.3.1; -- Detecting C compiler ABI info; -- Detecting C compiler ABI info - done; -- Check for working C compiler: /usr/bin/cc - skipped; -- Detecting C compile features; -- Detecting C compile features - done; -- Detecting CXX compiler ABI info; -- Detecting CXX compiler ABI info - done; -- Check for working CXX compiler: /usr/bin/c++ - skipped; -- Detecting CXX compile features; -- Detecting CXX compile features - done; -- Found LLVM_CONFIG as /usr/lib/llvm/15/bin/llvm-config; -- Performing Test HAVE_FFI_CALL; -- Performing Test HAVE_FFI_CALL - Success; -- Found FFI: /usr/lib64/libffi.so; -- Performing Test Terminfo_LINKABLE; -- Performing Test Terminfo_LINKABLE - Success; -- Found Terminfo: /usr/lib64/libtinfo.so; -- Found ZLIB: /usr/lib64/libz.so (found version ""1.2.13""); -- Found LibXml2: /usr/lib64/libxml2.so (found version ""2.10.3""); -- Linker detection: GNU ld; -- Performing Test C_SUPPORTS_FPIC; -- Performing Test C_SUPPORTS_FPIC - Success; -- Performing Test CXX_SUPPORTS_FPIC; -- Performing Test CXX_SUPPORTS_FPIC - Success; -- Building with -fPIC; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test C_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION; -- Performing Test CXX_SUPPORTS_FNO_SEMANTIC_INTERPOSITION - Success; -- Performing Test SUPPORTS_FVISIBILITY_INLINES_HIDD",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11920#issuecomment-1370394653:1106,Perform,Performing,1106,https://root.cern,https://github.com/root-project/root/issues/11920#issuecomment-1370394653,2,['Perform'],['Performing']
Performance,"Also the previous comment about the handling of the case when a class is loaded, an instance printed, the class unloaded and the class reloaded but different has been addressed. For the cache of printing functions, now we do not use any more the class name, which is elegant but might not be unique in very rare corner cases, but the DeclID in the AST built by Cling.; For what concerns the test for this feature, I ran out of ideas since, as demonstrated before, PyROOT does not handle unloads and reloads properly.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/13876#issuecomment-1770488953:73,load,loaded,73,https://root.cern,https://github.com/root-project/root/pull/13876#issuecomment-1770488953,2,"['cache', 'load']","['cache', 'loaded']"
Performance,"Also, if I just press CTRL+R once, or CTRL+S once, before starting to type anything, it loads the last entry in the history. I think it shouldn't load anything.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10208#issuecomment-1082950179:88,load,loads,88,https://root.cern,https://github.com/root-project/root/pull/10208#issuecomment-1082950179,2,['load'],"['load', 'loads']"
Performance,"An attempt to build ROOT against the system Python3 on MacOS11/12 results in a build with no errors, but with some test failures:. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=mac12,SPEC=soversion,V=master/3084/. The following is the relevant error:. ```; cling::DynamicLibraryManager::loadLibrary(): dlopen(/Users/sftnight/build/jenkins/night/LABEL/mac12/SPEC/soversion/V/master/build/lib/libROOTTPython.6.25.02.so, 0x0009): Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3; ```. According to:. ```; $ otool -l lib/libROOTTPython.so | grep -C2 Python3; cmd LC_LOAD_DYLIB; cmdsize 72; name @rpath/Python3.framework/Versions/3.8/Python3 (offset 24); time stamp 2 Thu Jan 1 01:00:02 1970; current version 3.8.0; --; cmd LC_RPATH; cmdsize 104; path /Library/Developer/CommandLineTools/Library/Frameworks/Python3.framework/Versions/3.8/lib (offset 12); Load command 20; cmd LC_FUNCTION_STARTS; ```. RPATH is set, but the dylib load directive doesn't match.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9793:316,load,loadLibrary,316,https://root.cern,https://github.com/root-project/root/issues/9793,4,"['Load', 'load']","['Load', 'load', 'loadLibrary', 'loaded']"
Performance,"An empty list of linked libraries was interpreted as failure to extract; the list of linked libraries; the default ""-lCore -lRint..."" was taken instead.; When running python, no libs show up as linked. That caused ""-lRint"" to be claimed; as linked, which was preventing gSystem.Load(""libRint"") within python, claiming; that it is already loaded (as it is linked). Instead, if the library signaling the end of linked libraries is seen, and so far; no libraries have been found as linked, set the list-of-linked-libraries to "" "",; i.e. not empty, triggering the ""success"" path in TSystem::GetLibraries(), and correctly; reporting the linked libraries. This fixes JupyROOT-cppcompleter-doctest, JupyROOT-ROOT-kernel-notebook not finding; TTabCom::TTabCom() because loadling libRint was mistakenly a no-op.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5864:278,Load,Load,278,https://root.cern,https://github.com/root-project/root/pull/5864,3,"['Load', 'load']","['Load', 'loaded', 'loadling']"
Performance,"An even simpler example which doesn't depend on RDF:. ```python; import ROOT. ret = ROOT.gInterpreter.Declare('#include ""test.h""'). print(""declare ret"", ret). print(""creating helper""); helper = ROOT.Helper[ROOT.std.vector[""double""]](). res = ROOT.call_helper(helper); print(res); ```. test.h:; ```cpp; template <typename T>; class Helper {. public:. Helper() {}. std::size_t operator() () const {; const std::size_t res = 0;; res = T{0, 0}.size();; return res;; }. };. template <typename H>; std::size_t call_helper(const H &helper) {; return helper();; }; ```. Output (again with centos stream 8, root 6.26/10):; ```; declare ret True; creating helper; IncrementalExecutor::executeFunction: symbol '_ZNK6HelperISt6vectorIdSaIdEEEclEv' unresolved while linking symbol '__cf_11'!; You are probably missing the definition of Helper<std::vector<double, std::allocator<double> > >::operator()() const; Maybe you need to load the corresponding shared library?; 18446744073709551615; ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11854#issuecomment-1341802449:916,load,load,916,https://root.cern,https://github.com/root-project/root/issues/11854#issuecomment-1341802449,2,['load'],['load']
Performance,An small bug detected in LCG98 that only affect python2; JupyROOT is not loaded when you are importing ROOT in the notebook. this code fix this problem. Omar.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6305:73,load,loaded,73,https://root.cern,https://github.com/root-project/root/pull/6305,1,['load'],['loaded']
Performance,And FYI I notified @guitargeek about the RooStat failures on Windows (looks like race conditions in utility file creation),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14059#issuecomment-1813960564:81,race condition,race conditions,81,https://root.cern,https://github.com/root-project/root/pull/14059#issuecomment-1813960564,1,['race condition'],['race conditions']
Performance,And I just compare performance - after this PR build time improved by 3%,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5170#issuecomment-600577102:19,perform,performance,19,https://root.cern,https://github.com/root-project/root/pull/5170#issuecomment-600577102,1,['perform'],['performance']
Performance,And we need some feedback on performance of this.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1242#issuecomment-344890377:29,perform,performance,29,https://root.cern,https://github.com/root-project/root/pull/1242#issuecomment-344890377,2,['perform'],['performance']
Performance,"Another aspect of the problem is the way in which nested parallelism is tackled. Given the current interface, TThreadExecutor, I think we are pushing all items of work in the global queue, therewith ignoring potential optimisations put in place by the scheduler.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1468#issuecomment-352740564:182,queue,queue,182,https://root.cern,https://github.com/root-project/root/pull/1468#issuecomment-352740564,1,['queue'],['queue']
Performance,"Another stack trace:; ```; Error in ROOT::AddClass(): adding class with no name when real name is N4ROOT8Internal34TCheckHashRecurveRemoveConsistencyE; Fatal in <TClassTable::Add>: Trying to add class with empty name to TClassTable; aborting; #0 0x00007f888f092cbe in __GI___waitpid (pid=32497, stat_loc=stat_loc; entry=0x7ffea63dbc28, options=options; entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:29; #1 0x00007f888f00938f in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148; #2 0x00007f88900a1c0f in TUnixSystem::StackTrace (this=0x7ef1) at /home/amadio/src/root/core/unix/src/TUnixSystem.cxx:2412; #3 0x00007f888ff780e8 in DefaultErrorHandler (level=32497, abort_bool=40, location=0x0, msg=0x7f888f092cbe <__GI___waitpid+46> ""H="") at /home/amadio/src/root/core/base/src/TError.cxx:192; #4 0x00007f888ff77f16 in ErrorHandler (level=32497, location=0x7ffea63dbc28 """", fmt=0x0, ap=0x7f888f092cbe <__GI___waitpid+46>) at /home/amadio/src/root/core/base/src/TError.cxx:251; #5 0x00007f888ff77b04 in Fatal (location=0x7ef1 <error: Cannot access memory at address 0x7ef1>, fmt=0x7ffea63dbc28 """") at /home/amadio/src/root/core/base/src/TError.cxx:350; #6 0x00007f888ffed889 in TClassTable::Add (cname=0x7ef1 <error: Cannot access memory at address 0x7ef1>, id=-17368, info=..., dict=0x7f888f092cbe <__GI___waitpid+46>, pragmabits=-1892108864) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:347; #7 0x00007f888ffecd91 in ROOT::AddClass (cname=0x7ef1 <error: Cannot access memory at address 0x7ef1>, id=-17368, info=..., dict=0x7f888f092cbe <__GI___waitpid+46>, pragmabits=-1892108864) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:751; #8 0x00007f888ffecb94 in TClassTable::TClassTable (this=0x7ef1) at /home/amadio/src/root/core/cont/src/TClassTable.cxx:236; #9 0x00007f888fe70e34 in TROOT::InitInterpreter (this=0x7ef1) at /home/amadio/src/root/core/base/src/TROOT.cxx:2020; #10 0x00007f888fe6fffc in ROOT::Internal::GetROOT2 () at /home/amadio/src/root/core/base/src",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1389#issuecomment-347620537:448,optimiz,optimized,448,https://root.cern,https://github.com/root-project/root/pull/1389#issuecomment-347620537,1,['optimiz'],['optimized']
Performance,"Apologies for the delay. Can you apply that patch and see which is the output it currently fails upon:. ```diff; diff --git a/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp b/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp; index 3829014415..e4a2fab675 100644; --- a/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp; +++ b/interpreter/llvm/src/tools/clang/lib/Serialization/ASTWriter.cpp; @@ -2789,11 +2789,12 @@ unsigned ASTWriter::getLocalOrImportedSubmoduleID(Module *Mod) {; ; return SubmoduleIDs[Mod] = NextSubmoduleID++;; }; -; +extern ""C"" int printf(const char*,...);; unsigned ASTWriter::getSubmoduleID(Module *Mod) {; // FIXME: This can easily happen, if we have a reference to a submodule that; // did not result in us loading a module file for that submodule. For; // instance, a cross-top-level-module 'conflict' declaration will hit this.; + printf(""Submodule=%s\n"", Mod->Name.c_str());; unsigned ID = getLocalOrImportedSubmoduleID(Mod);; assert((ID || !Mod) &&; ""asked for module ID for non-local, non-imported module"");; ```. I need to remember how to reproduce your setup and I could be more helpful...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10861#issuecomment-1246577880:780,load,loading,780,https://root.cern,https://github.com/root-project/root/issues/10861#issuecomment-1246577880,1,['load'],['loading']
Performance,"Apparently xrootd 5.3.1 have a different sha256 hash (not clear how it could happened or if maybe in PR I was using old). Failure was detected on centos8 rootbench machine (https://lcgapp-services.cern.ch/root-jenkins/job/root-benchmark/):; ```; -- verifying file...; file='/data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz'; -- SHA256 hash of; /data/sftnight/workspace/root-benchmark/BUILDTYPE/Release/COMPILER/default/LABEL/performance-cc8/SPEC/nortcxxmod/build/builtins/xrootd/XROOTD-prefix/src/v5.3.1.tar.gz; does not match expected value; expected: '1194ba435dc1e243f3cdb8273f6385407183799faf7622a582a828f4aff6807d'; actual: '0800b4c6444591a6514c5b81b2c4c79439875136ab2267ce4bed99cb94ead6e6'; -- Hash mismatch, removing...; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9103:355,perform,performance-,355,https://root.cern,https://github.com/root-project/root/pull/9103,2,['perform'],['performance-']
Performance,"Appears when TGrpah2D drawn with ""cont5"" option; Many TGraph objects are leaked, especially when zooming is performed",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4984:108,perform,performed,108,https://root.cern,https://github.com/root-project/root/pull/4984,1,['perform'],['performed']
Performance,"Applies the clang-tidy suggestions from the following checks, which are the same as in the CMSSW `.clang-tidy`, only that the checks that replace copies with `const` references are removed:. ```; ,boost-use-to-string,; ,misc-definitions-in-headers,; ,misc-string-compare,; ,misc-uniqueptr-reset-release,; ,modernize-deprecated-headers,; ,modernize-make-shared,; ,modernize-make-unique,; ,modernize-use-bool-literals,; ,modernize-use-equals-delete,; ,modernize-use-nullptr,; ,modernize-use-override,; ,performance-inefficient-algorithm,; ,performance-inefficient-vector-operation,; ,performance-faster-string-find,; ,performance-move-const-arg,; ,readability-container-size-empty,; ,readability-redundant-string-cstr,; ,readability-static-definition-in-anonymous-namespace,; ,readability-uniqueptr-delete-release; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14011:501,perform,performance-inefficient-algorithm,501,https://root.cern,https://github.com/root-project/root/pull/14011,8,['perform'],"['performance-faster-string-find', 'performance-inefficient-algorithm', 'performance-inefficient-vector-operation', 'performance-move-const-arg']"
Performance,"Apply several improvements and fixes in MethodDL , mainly: . - Use now Float instead of Double. This makes the network 2 times faster without loosing performances in quality of results; - Compute now the regularisation term in the loss once/epoch when evaluating ; - Optimise the MultiThread execution on CPU by setting a minimum number of elements to execute per task ; - Optimise evaluation of the networks, by implementing GetMvaValues in MethodDL. This reduces significantly the time spent for network testing and evaluating in a TMVA session",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2219:150,perform,performances,150,https://root.cern,https://github.com/root-project/root/pull/2219,1,['perform'],['performances']
Performance,"Are you referring about a check that the final type of the source is the same final type pf the target, i.e. in this code below: ; ```; TH2D::TH2D(const TH2D &h2d) : TH2(), TArrayD(); {; ((TH2D&)h2d).Copy(*this);; }; ```; if `this` and 'h2d` are actually the same final types (e.g. both TProfile histograms). ; This check is performed in the `TProfile::Copy` function, see : ; https://github.com/root-project/root/blob/master/hist/hist/src/TProfile.cxx#L422",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10942#issuecomment-1203768320:325,perform,performed,325,https://root.cern,https://github.com/root-project/root/pull/10942#issuecomment-1203768320,1,['perform'],['performed']
Performance,"Arguments for removing the splash screen:; * It introduces a dependency of the `root` executable of graphics libraries, like X11 on Linux or Cocoa on macOS.; * The Windows version is not kept up to date ([see the list of core developers](https://github.com/root-project/root/blob/master/core/winnt/src/Win32Splash.cxx#L32)).; * According to [Wikipedia](https://en.wikipedia.org/wiki/Splash_screen), ""splash screens are typically used by particularly large applications to notify the user that the program is in the process of loading"". The ROOT interpreter takes almost no time to load today. Probably that was different in the past, and a splash screen was justified back then.; * Users don't see it unless they run `root` with the `-a` option. In this case, the interpreter quits immediately (I think the option only exists just to show the splash screen for the historical record).; * It [doesn't work on multi-display setups](https://github.com/root-project/root/issues/14819).; * `root -b -a` turns on display even if you think it should run in batch mode; * It doesn't work on Wayland (see #15723) --> EDIT: It does work on wayland, it's just that the Xs were not fine.; * We're avoiding three `FIXME`s in the CMakeLists.txt in case of Cocoa. Closes #14819.; Closes [ROOT-10948](https://its.cern.ch/jira/browse/ROOT-10948).",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15056:526,load,loading,526,https://root.cern,https://github.com/root-project/root/pull/15056,2,['load'],"['load', 'loading']"
Performance,"As RVec is a class template, even if ROOT is compiled with -DNDEBUG; these asserts might be compiled in user code depending on whether or; not they remember to include `-DNDEBUG` in their debug flags.; I think the performance penalty is too high w.r.t. the benefit.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9376:214,perform,performance,214,https://root.cern,https://github.com/root-project/root/pull/9376,1,['perform'],['performance']
Performance,As `TSystem::Load()` says: ` // don't load libraries that have already been loaded` - so I guess we should be using that interface?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5420#issuecomment-618951438:13,Load,Load,13,https://root.cern,https://github.com/root-project/root/pull/5420#issuecomment-618951438,3,"['Load', 'load']","['Load', 'load', 'loaded']"
Performance,"As a heads-up: I tried this PR to integrate RNTuple merging into `TBufferMerger`. It needs some change (for example `RPageSourceFile` needs to work with a `TMemFile`, ie we need a `RRawFileTFile` that wraps a `TFile` pointer), but then it mostly runs through. The only problem is that this code doesn't consider merging into a ntuple that already exists in the output file. As a result, all pages will be there but the meta data will only have the cluster(s) from the last merge. What we probably need is the `RPageSinkFile` for the destination to load an existing `RNTuple` anchor and append to it... If there are other approaches, I'm all ear but otherwise I don't think it should block this PR, just something to keep in mind for the future.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14398#issuecomment-1956782963:548,load,load,548,https://root.cern,https://github.com/root-project/root/pull/14398#issuecomment-1956782963,1,['load'],['load']
Performance,"As a stand alone function, it works as expected, but applying it before other actions, namely Cache and Foreach, distorts them.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15182#issuecomment-2063374304:94,Cache,Cache,94,https://root.cern,https://github.com/root-project/root/pull/15182#issuecomment-2063374304,1,['Cache'],['Cache']
Performance,"As agreed in the last ROOT planning meeting:. https://indico.cern.ch/event/884189/. This PR switches experimental PyROOT by default to `ON` in master. Note that, before 6.22, a more elaborated switch will be performed: the concept of experimental PyROOT will disappear and there will be a legacy PyROOT, which is the current one. Edit: the switch is not done on Windows for now.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5020:208,perform,performed,208,https://root.cern,https://github.com/root-project/root/pull/5020,1,['perform'],['performed']
Performance,"As discussed and mentioned before, we will require buffered writing with the `RNTupleParallelWriter` because of its better scalability and less fragmented output files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/14939#issuecomment-2255433117:123,scalab,scalability,123,https://root.cern,https://github.com/root-project/root/pull/14939#issuecomment-2255433117,1,['scalab'],['scalability']
Performance,"As discussed here:. https://bitbucket.org/wlav/cppyy/issues/65. some functions/classes in Cppyy's `TPython` are broken, e.g. `Import`, `LoadMacro` and `TPyClassGenerator`. They rely on some ROOT meta functionality that should be now be hidden to CPyCppyy, but they have not been reimplemented yet. Therefore, this PR disables the build of Cppyy's `TPython` and ports the `TPython` present in the old PyROOT to the new Cppyy API, so that all the functionality is still provided.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4195:136,Load,LoadMacro,136,https://root.cern,https://github.com/root-project/root/pull/4195,1,['Load'],['LoadMacro']
Performance,"As discussed in https://github.com/root-project/root/issues/9312, long generated functions triggers edge cases in the optimizer passes and takes very long to compile for little to no gain in runtime.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9467:118,optimiz,optimizer,118,https://root.cern,https://github.com/root-project/root/pull/9467,1,['optimiz'],['optimizer']
Performance,"As discussed with @Axel-Naumann, in the interest of more concise RNTuple tutorials this PR removes the ifdef around `R__LOAD_LIBRARY`. The library is simply always loaded.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6149:164,load,loaded,164,https://root.cern,https://github.com/root-project/root/pull/6149,1,['load'],['loaded']
Performance,"As discussed, having multiple ROOT versions is super common for our users. This means:; - we need to continue to support using multiple ROOT versions with python, also outside conda.; - we must not run `setup.py` as part of a ROOT installation (""make install"" / package install); this needs to be an explicit action for python experts.; - we should warn if setup.py is about to replace an existing ROOT version, to be helpful to python novices.; It would be great if `import ROOT` can auto-detect which `libPython` (python2 or python3) to load; that would take care of the multi-python case after `source thisroot.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3843#issuecomment-495131525:539,load,load,539,https://root.cern,https://github.com/root-project/root/pull/3843#issuecomment-495131525,1,['load'],['load']
Performance,"As discussed, this is still not enough to fully protect against all possible cases in multi-threaded programs.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7075#issuecomment-768374510:86,multi-thread,multi-threaded,86,https://root.cern,https://github.com/root-project/root/pull/7075#issuecomment-768374510,1,['multi-thread'],['multi-threaded']
Performance,"As explained above, we will move to creating the dictionary sources after the library, so this will unfortunately not work. We will think of a way to perform a similar check once the new system is in place.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3395#issuecomment-512751863:150,perform,perform,150,https://root.cern,https://github.com/root-project/root/pull/3395#issuecomment-512751863,1,['perform'],['perform']
Performance,"As far as I can tell, the only place in all of ROOT that creates a `TParTreeProcessingRAII` is `TTreeProcessorMT::Process`. `TTree::GetEntry` does not, for instance. So if `TTree::GetEntry` needs the locks enabled by `TParTreeProcessingRAII` when implicit multi-threading is enabled, calling `TTree::GetEntry` after `ROOT::EnableImplicitMT` (outside of `TTreeProcessorMT::Process`) is broken.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5288#issuecomment-608579248:256,multi-thread,multi-threading,256,https://root.cern,https://github.com/root-project/root/pull/5288#issuecomment-608579248,1,['multi-thread'],['multi-threading']
Performance,"As found here:; https://gitlab.kitware.com/cmake/cmake/-/issues/21947. we need to specify:; target_link_options(target-name PRIVATE ${Python3_LINK_OPTIONS}). so that libROOTTPython and libPyMVA are linked with the right; RPATH, when linking against the XCode Python(3) on MacOS(11,12). Otherwise, the following error appears when loading the libraries:; cling::DynamicLibraryManager::loadLibrary():; dlopen(.../mac12/SPEC/soversion/V/master/build/lib/libROOTTPython.6.25.02.so, 0x0009):; Library not loaded: @rpath/Python3.framework/Versions/3.8/Python3. Fixes #9793 .",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9802:330,load,loading,330,https://root.cern,https://github.com/root-project/root/pull/9802,3,['load'],"['loadLibrary', 'loaded', 'loading']"
Performance,"As it is now, cling is not capable to load library for outlined; functions. As long as modules not enabled by default - add; R__LOAD_LIBRARY macro to all test scripts",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/4517:38,load,load,38,https://root.cern,https://github.com/root-project/root/pull/4517,1,['load'],['load']
Performance,"As mentioned [here](https://root-forum.cern.ch/t/regex-usage-in-tsystem-listlibraries/52503), it is difficult to list libraries using regular expressions. The `regexp` parameter is in fact a wildcard that does not work when the libraries names contain `/` (see the help of [TRegexp::MakeWildcard](https://root.cern/doc/master/classTRegexp.html#ab2762d059ace7f79a45b76b0f3b1a1b1). An additional optional parameter allows to use the `regexp` parameter as a simple string. Only the libraries containing this character string will be listed.; Example:; ```; root [0] gSystem->ListLibraries(""Core""); ; Loaded shared libraries; =======================; -----------------------; 0 libraries loaded; =======================. root [1] gSystem->ListLibraries(""Core"",kFALSE); ; Loaded shared libraries; =======================; /Users/couet/git/couet-root-bin/lib/libCore.so; /Users/couet/git/couet-root-bin/lib/libMathCore.so; -----------------------; 2 libraries loaded; =======================; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11776:597,Load,Loaded,597,https://root.cern,https://github.com/root-project/root/pull/11776,4,"['Load', 'load']","['Loaded', 'loaded']"
Performance,"As pointed out by @eguiraud: We have to investigate the behaviour with different optimization levels. Here a test on just 1k LOC:. ```bash; $ /usr/bin/time clang++ -O0 -c compile_1k.cxx $(root-config --cflags); 4.27user 0.18system 0:04.64elapsed 96%CPU (0avgtext+0avgdata 316668maxresident)k; 146312inputs+5224outputs (652major+69301minor)pagefaults 0swaps. $ /usr/bin/time clang++ -O1 -c compile_1k.cxx $(root-config --cflags); 19.59user 0.27system 0:20.00elapsed 99%CPU (0avgtext+0avgdata 485228maxresident)k; 152088inputs+3984outputs (681major+157387minor)pagefaults 0swaps. $ /usr/bin/time clang++ -O2 -c compile_1k.cxx $(root-config --cflags); 171.13user 0.82system 2:52.27elapsed 99%CPU (0avgtext+0avgdata 680344maxresident)k; 153304inputs+2608outputs (688major+243079minor)pagefaults 0swap; ```. Doing the same exercise with 10k LOC results in a crazy compile time of >1h for O1! See here:. ```bash; $ /usr/bin/time clang++ -O0 -c compile_10k.cxx $(root-config --cflags); 29.44user 0.65system 0:30.36elapsed 99%CPU (0avgtext+0avgdata 1727376maxresident)k; 146312inputs+37672outputs (652major+317460minor)pagefaults 0swaps. $ /usr/bin/time clang++ -O1 -c compile_10k.cxx $(root-config --cflags); 3963.21user 16.08system 1:06:27elapsed 99%CPU (0avgtext+0avgdata 17906760maxresident)k; 213696inputs+25224outputs (967major+7615032minor)pagefaults 0swaps; ```. Here the same exercise with 1k LOC but another STL version. Surprisingly, with `-stdlib=libc++` O1 is reasonably fast, though O2 takes ages:. ```bash; $ /usr/bin/time clang++ -O0 -c compile_1k.cxx $(root-config --cflags) -stdlib=libc++; 3.92user 0.14system 0:04.18elapsed 97%CPU (0avgtext+0avgdata 275288maxresident)k; 145816inputs+4088outputs (653major+57802minor)pagefaults 0swaps. $ /usr/bin/time clang++ -O1 -c compile_1k.cxx $(root-config --cflags) -stdlib=libc++; 13.17user 0.18system 0:13.49elapsed 98%CPU (0avgtext+0avgdata 353276maxresident)k; 150736inputs+3160outputs (679major+86578minor)pagefaults 0swaps. $ /usr/bin/time clan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7604#issuecomment-802808997:81,optimiz,optimization,81,https://root.cern,https://github.com/root-project/root/issues/7604#issuecomment-802808997,1,['optimiz'],['optimization']
Performance,"As report by @scott-snyder in https://github.com/root-project/root/pull/11263. Earlier, ATLAS was seeing a nasty race condition involving ROOT dictionary; information (see ATR-25049). The ROOT internal class TClassTable records information about all classes; that could potentially be created. This is effectively a singleton,; but TClassTable itself does no locking. Rather, it depends on callers; already having acquired the root internal mutex. When a shared library; is loaded that contains dictionary information, TClassTable gets calls; to register information for classes defined in that file. However,; the ROOT lock is not acquired in that case. So a shared library load; could race with TClass::GetClass and result in corruption of TClassTable. This change modifies TGenericClassInfo::Init so that we will take the lock; when a shared library is loaded. (ATLAS is currently working around this by hacking shared library loading; in order to acquire the lock, but this hack is not possible with newer; versions of glibc, so this will eventually become a blocker for; moving to centos9.). See also https://github.com/root-project/root/pull/11263#issuecomment-1231069071",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12552:113,race condition,race condition,113,https://root.cern,https://github.com/root-project/root/issues/12552,5,"['load', 'race condition']","['load', 'loaded', 'loading', 'race condition']"
Performance,"As reported at https://github.com/root-project/roottest/pull/946#issuecomment-1519645135 and can be seen in the test; `roottest-root-meta-race-12552-exec_dlopenrace-auto`. The relevant output is below and the problem is a (real) quirk of the test. It linked to the repeated unload and loading of the same library in parallel. During the unloading and loading cycle the TClass object representing the user classes (from that library) are created and deleted and it seems that the pointer value is captured and used outside the main lock (and this is done concurrently we the deletion). This needs to be fixed but is unlikely to happen in the wild. ```; ==1544443==ERROR: AddressSanitizer: heap-use-after-free on address 0x616000617c20 at pc 0x7f8857c557ae bp 0x7f88265b3e60 sp 0x7f88265b3e50; READ of size 4 at 0x616000617c20 thread T1; #0 0x7f8857c557ad in TClass::Size() const /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/core/meta/src/TClass.cxx:5706:8; #1 0x7f8851923388 in TBufferFile::ReadFastArray(void*, TClass const*, int, TMemberStreamer*, TClass const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TBufferFile.cxx:1605:25; #2 0x7f8851cc28c1 in TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1364:11; #3 0x7f8851cc28c1 in int TStreamerInfoActions::ReadSTL<&(TStreamerInfoActions::ReadSTLMemberWiseSameClass(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short)), &(TStreamerInfoActions::ReadSTLObjectWiseFastArray(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*, short, unsigned int))>(TBuffer&, void*, TStreamerInfoActions::TConfiguration const*) /home/sftnight/build/night/LABEL/ROOT-centos8/SPEC/asan/V/master/root/io/io/src/TStreamerInfoActions.cxx:1407:10; #4 0x7f8851931ee7 in TStreamerInfoActions::TConfigu",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12715:285,load,loading,285,https://root.cern,https://github.com/root-project/root/issues/12715,3,"['concurren', 'load']","['concurrently', 'loading']"
Performance,"As reported by @behrenhoff MethodDL did not have so far an implementation for the dropout. ; (see https://root-forum.cern.ch/t/method-kdl-in-tmva/32863); This PR fixes the dropout for dense layers, implementing what has been done for the previous MethodDNN. . The implementation removes (by setting to zero) randomly input nodes and re-scale the surviving ones by a factor 1/(1.- dropout_probability). In this way no changes are needed for testing and evaluating a trained network with dropout. . The PR applies also some other small improvements such as print out of optimizer names and some fixes in the cross-evaluation function to avoid NaN outputs.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3516:568,optimiz,optimizer,568,https://root.cern,https://github.com/root-project/root/pull/3516,1,['optimiz'],['optimizer']
Performance,"As reported by Chris Jones:. > https://github.com/root-project/root/blob/6a1389a16625718f2750ba90156d3f8f9d5dfe8a/core/thread/src/RConcurrentHashColl.cxx#L53-L62; > There is a race condition between line 57 and 58. Between releasing the read lock and taking the write lock, another thread could have inserted the same hash. And indeed, the unconditional return of `true` within the write lock means that in the case of the race condition then the result is incorrect. (a) the only consequence of the race is a small performance loss and the return value of the function is incorrect (true instead of false). (b) but the function does not seem to be called anywhere. The consequence of (a) should be if (b) is incorrect that a StreamerInfo is being re-read when it does not need to, so 'only' a performance decrease when opening files. Also Matti noticed that the 2nd forms was always taking the write lock and that is because:. The proper use of that function is to do the check externally (via a call to Find) and then call the Insert if need be. The call to std::set::insert does a check internally to reject double inserts and return the status via the iterator. So that 2nd function is already doing (indirectly) the check Dan recommended. So the fix is to either fix the return value of the first function or have it call the 2nd function or .... just removing it.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11794:176,race condition,race condition,176,https://root.cern,https://github.com/root-project/root/pull/11794,4,"['perform', 'race condition']","['performance', 'race condition']"
Performance,As reported in https://root-forum.cern.ch/t/tmva-read-image-data-for-application-of-a-cnn-model/54181/15 ; and shown in this notebook example; https://cernbox.cern.ch/s/U7p6sgH7QN4GRlX. A CNN model that is trained on GPU and containing a BNORM layer produces wring results (all 0 or 1) when is evaluated (e.g. using RReader) on CPU. ; The evaluation that is done in the Classification macro (in `Factory::EvcaluateAllMethods`) is performed on GPU. ; This happens only when the model contains the BNORM layer.,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12589:430,perform,performed,430,https://root.cern,https://github.com/root-project/root/issues/12589,1,['perform'],['performed']
Performance,"As said in TODO, LoadDictionaryForSTLType is passing ""#include <...>"" to; CINT interface to parse and process it, and was expensive. In Cling, we; have a new interface GenerateDictionary which we can instead use to; generate dictionary.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1752:17,Load,LoadDictionaryForSTLType,17,https://root.cern,https://github.com/root-project/root/pull/1752,1,['Load'],['LoadDictionaryForSTLType']
Performance,"As seen by CMS on https://github.com/cms-sw/cmssw/issues/33466. The following piece of lookup:; ```; {; auto cls = TClass::GetClass(""std::vector<int>"");; auto meth = cls->GetMethodWithPrototype(""operator[]"",""int"",true,ROOT::kConversionMatch);; auto args = meth->GetListOfMethodArgs();; auto methArg = dynamic_cast<TMethodArg*>(args->First());; cout << args->GetEntries() << endl;; cout << methArg->GetTypeName() << endl;; }; ```; print; ```; 1; vector<TClass*>::size_type; ```; where one would expect; ```; 1; vector<int>::size_type; ```; This has catastrophic consequence when combined with autoloading of library. In the user's case the search is about `std::vector<reco::RecoTauPiZero>` but the argument found is `vector<ROOT::Experimental::REveTableEntry>::size_type` which ends up with a batch job trying to load ` libREve` and thus `libGui` and thus requiring the reading of `$HOME/.root.mimes` which fails badly if `$HOME` is not set (case of somce condor jobs) which issues a Fatal error.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7955:813,load,load,813,https://root.cern,https://github.com/root-project/root/issues/7955,1,['load'],['load']
Performance,As seen in https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/157773/console which the result of; ```; @phsft-bot build just on ROOT-performance-centos8-multicore/default with flags -DCTEST_TEST_EXCLUDE_NONE=On -Droofit=OFF; ```. Several tutorials fails because they can load the intentionally non existent roofit libraries. ```; 15:15:19 The following tests FAILED:; 15:15:19 	909 - tutorial-roostats-FourBinInstructional-py (Failed); 15:15:19 	910 - tutorial-roostats-IntervalExamples-py (Failed); 15:15:19 	911 - tutorial-roostats-MultivariateGaussianTest-py (Failed); 15:15:19 	912 - tutorial-roostats-Zbi_Zgamma-py (Failed); 15:15:19 	913 - tutorial-roostats-rs101_limitexample-py (Failed); 15:15:19 	914 - tutorial-roostats-rs401c_FeldmanCousins-py (Failed); 15:15:19 	915 - tutorial-roostats-rs601_HLFactoryexample-py (Failed); 15:15:19 	916 - tutorial-roostats-rs701_BayesianCalculator-py (Failed); 15:15:19 	917 - tutorial-roostats-rs_bernsteinCorrection-py (Failed); 15:15:19 	918 - tutorial-roostats-rs_numbercountingutils-py (Failed); 15:15:19 	1193 - roottest-python-pickle-write (Failed); 15:15:19 	1194 - roottest-python-pickle-read (Failed); 15:15:19 	1195 - roottest-python-pythonizations-pythonizations (Failed); 15:15:19 	1197 - roottest-python-regression-regression (Failed); ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11605:155,perform,performance-,155,https://root.cern,https://github.com/root-project/root/issues/11605,2,"['load', 'perform']","['load', 'performance-']"
Performance,"As seen in https://root-forum.cern.ch/t/wsl-build-from-source-error-rint-pcm-is-out-of-date-cannot-read-module-signature/47564/38, there is missing dependency on Rint that leads to out of order creation:. ```; <<< cling interactive line includer >>>: fatal error: module file '/home/neel/Desktop/Root/build/lib/Rint.pcm' is out of date and needs to be rebuilt: could not read module signature; <<< cling interactive line includer >>>: note: imported by module 'MathCore' in '/home/neel/Desktop/Root/build/lib/MathCore.pcm'; Error: Module 'MathCore.pcm' failed to load.; Error: Error loading the default rootcling header files.; make[2]: *** [math/mathmore/CMakeFiles/G__MathMore.dir/build.make:130: math/mathmore/G__MathMore.cxx] Error 1; ```. while indeed. ```; $ ls -lart lib/Net.pcm lib/MultiProc.pcm lib/Imt.pcm lib/MathCore.pcm lib/Rint.pcm; -rw-r--r-- 1 pcanal pcanal 1158548 Nov 10 20:26 lib/Net.pcm; -rw-r--r-- 1 pcanal pcanal 1278392 Nov 10 20:27 lib/MultiProc.pcm; -rw-r--r-- 1 pcanal pcanal 2032752 Nov 10 20:27 lib/Imt.pcm; -rw-r--r-- 1 pcanal pcanal 12911448 Nov 10 20:27 lib/MathCore.pcm; -rw-r--r-- 1 pcanal pcanal 444724 Nov 10 20:35 lib/Rint.pcm; ```. This out of order build is seen when using `CMake` with `gnu make` on Ubuntu 22 (on WSL). On the same platform, using `Ninja` leads to the creation in the right order.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11686:563,load,load,563,https://root.cern,https://github.com/root-project/root/issues/11686,2,['load'],"['load', 'loading']"
Performance,"As stayed in description, there is no easy way to enable http/webgui tutorials usage for testing. Every single macro need to be considered new and adjusted - if possible.; As first step - one need to have global ""TESING_MODE"" flag which can be used in such tutorials to perform only minimal checks and exit - while normally these tutorials are interactive ones and runs forever.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/6651#issuecomment-2074886748:270,perform,perform,270,https://root.cern,https://github.com/root-project/root/issues/6651#issuecomment-2074886748,1,['perform'],['perform']
Performance,"As the title reads: TChain Add does not properly resolve globs with `?#`. Consider:; ```cpp; auto dfWriter0 = ROOT::RDataFrame(5).Define(""z"", ""42"");; dfWriter0.Snapshot<int>(""tree"", ""specTestFile0.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile00.root"", {""z""});; dfWriter0.Snapshot<int>(""tree"", ""specTestFile000.root"", {""z""});. TChain c{};; c.Add(""specTestFile0*.root?#tree"");; for(auto i = 0u; i < c.GetEntries(); ++i); 	c.GetEntry(i);. gSystem->Unlink((""specTestFile0.root""));; gSystem->Unlink((""specTestFile00.root""));; gSystem->Unlink((""specTestFile000.root""));; ```; Current behaviour --> invalid parsing:; ```; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile0.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile00.root#tree; Error in <TChain::LoadTree>: Cannot find tree with name in file [...]/specTestFile000.root#tree; ```; ; @vepadulano and I just saw [here](https://root.cern/doc/master/classTChain.html#a78a896924ac6c7d3691b7e013bcbfb1c) that the question mark is a valid wildcard in the glob expansion of `Add`. Note that in this particular minimal reproducer, I can alternatively use:; ```cpp; TChain c{""tree""};; c.Add(""specTestFile0*.root"");; ```; I used precisely this example in order to show that even a single `Add` results in undesired behaviour.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/11483:649,Load,LoadTree,649,https://root.cern,https://github.com/root-project/root/issues/11483,3,['Load'],['LoadTree']
Performance,"As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to; skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8924:107,optimiz,optimization,107,https://root.cern,https://github.com/root-project/root/pull/8924,1,['optimiz'],['optimization']
Performance,"As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to; skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally; - [ ] updated the docs (if necessary). This PR fixes #",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8929:107,optimiz,optimization,107,https://root.cern,https://github.com/root-project/root/pull/8929,1,['optimiz'],['optimization']
Performance,"As we discussed, I prefer to have ROOT's code work with or without PCH or PCM. In general, let's use PCH and PCM as an optimization, but let's keep ROOT's code valid (and backward compatible for users) without:. - rootcling needs to be exposed to types as before, in case people (maybe unknowingly) rely on e.g. `<string>` being included and `using namespace std` being injected (`#pragma link C++ class MyClass<string>`). OTOH, `string.h` is likely not needed in rootcling's runtime.; - the interpreter-version of `ClassDef` should assume that the interpreter has not seed `Rtypes.h` before, for consistency. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2755#issuecomment-463971199:119,optimiz,optimization,119,https://root.cern,https://github.com/root-project/root/pull/2755#issuecomment-463971199,1,['optimiz'],['optimization']
Performance,"AsRNode lets Python users convert dataframe nodes to the generic RNode type, e.g. to pass them to functions that take an RNode as an argument. C++ users can rely on implicit casting or perform a cast manually, but don't need the helper function. For some reason the casting doesn't always work in PyROOT, but the helper function does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9611#issuecomment-1017213255:185,perform,perform,185,https://root.cern,https://github.com/root-project/root/pull/9611#issuecomment-1017213255,1,['perform'],['perform']
Performance,Assign directly to static variable to avoid race condition,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/48:44,race condition,race condition,44,https://root.cern,https://github.com/root-project/root/pull/48,1,['race condition'],['race condition']
Performance,"Assigning to @pcanal - but expect a higher response time. This is a well known issue with TTree: not all code paths allow for robust handling of data errors (even though here, Philippe seems to suggest that it can indeed be caught). Having access to this file could indeed be very useful. We should then be able to create another, public file from that which we can use for testing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/9154#issuecomment-950921176:43,response time,response time,43,https://root.cern,https://github.com/root-project/root/issues/9154#issuecomment-950921176,1,['response time'],['response time']
Performance,Assigning to @vgvassilev as modulemap contamination seems to be the only blocker. Maybe `--rootbuild` should refrain from loading all the world's modulemaps?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7128#issuecomment-826642167:122,load,loading,122,https://root.cern,https://github.com/root-project/root/issues/7128#issuecomment-826642167,1,['load'],['loading']
Performance,"At least with the [llvm13 branch](https://github.com/vgvassilev/root/tree/llvm13) on macOS, `cling::DynamicLibraryManager::searchLibrariesForSymbol` sometimes finds non-exported symbols and confuses the rest of the autoloading infrastructure because the symbol is not available after loading that library. ### Reproducer. Slightly modify the new `AutoloadLibraryGenerator`:; ```diff; diff --git a/core/metacling/src/TClingCallbacks.cxx b/core/metacling/src/TClingCallbacks.cxx; index 1401f04ee6..b538695533 100644; --- a/core/metacling/src/TClingCallbacks.cxx; +++ b/core/metacling/src/TClingCallbacks.cxx; @@ -188,6 +188,8 @@ public:; continue;; }. + printf(""found symbol '%s' in '%s'\n"", (*name).str().c_str(), libName.c_str());; +; found[libName].push_back(name);; }. ```. Then execute the following Python file:; ```py; import ROOT; print(ROOT.kTRUE); ```. The output (on `macitois22`) is:; ```; found symbol '__ZN5cling7runtime8internal15setValueNoAllocEPvS2_S2_cy' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libCling.so' ; found symbol '__ZL5kTRUE' in '/Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so'; 1; ```; where `kTRUE` should not be found. Or at least the symbols is still not available after loading `libRIO`, and:; ```; $ nm /Users/sftnight/jhahnfel/root.build.asserts/lib/libRIO.so | grep kTRUE; 0000000000272988 s __ZL5kTRUE; ```; From the `man`-page of `nm`:; > If the symbol is local (non-external), the symbol's type is instead represented by the corresponding lowercase letter.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10970:284,load,loading,284,https://root.cern,https://github.com/root-project/root/issues/10970,2,['load'],['loading']
Performance,"At the moment we have no evidence of potential PGO optimizations ROOT could provide, also given the contribution cited above (a paper is coming soon): no symbol in the ROOT libraries is appearing in the list of the ones that benefit from PGO. While I agree that it could be interesting to expand the findings, we do not have substantial effort to invest there at the moment. I propose to close this issue now and warmly invite you to re-open it as soon as you have concrete results to share and that can be transformed in a list of concrete actions to take on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/15778#issuecomment-2154453640:51,optimiz,optimizations,51,https://root.cern,https://github.com/root-project/root/issues/15778#issuecomment-2154453640,1,['optimiz'],['optimizations']
Performance,"Attaching the relevant insights gathered while working on the linked PR. One part of the stacktrace included in the issue description of which I did not immediately realise the relevance is; ```; #28 0x00007f770426a669 in TCling::LoadPCM (this=0x19ecfe0, pcmFileNameFullPath=""/home/vpadulan/programs/rootproject/rootinstall/master-8b7aa4957a-debug/lib/libNet_rdict.pcm"") at /home/vpadulan/programs/rootproject/rootsrc/core/metacling/src/TCling.cxx:1850; ```. `TCling::LoadPCM` is called in [this section](https://github.com/root-project/root/blob/1d5baf0bc77c0abb0ac7ffc8d549f8a7875d03e9/core/metacling/src/TCling.cxx#L2299-L2307) of `TCling::RegisterModule`, which in turn happens only if the module being registered is not in the [gIgnoredPCMNames](https://github.com/root-project/root/blob/1d5baf0bc77c0abb0ac7ffc8d549f8a7875d03e9/core/metacling/src/TCling.cxx#L1946) set. Practically, this means that the segfault is only visible if the reproducer is compiled linking to some library that is not included in that set. Loading the corresponding PCM then finally calls into `TDirectory::RecursiveRemove` triggering the segfault as seen in the description.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/13691#issuecomment-1731262350:230,Load,LoadPCM,230,https://root.cern,https://github.com/root-project/root/issues/13691#issuecomment-1731262350,3,['Load'],"['LoadPCM', 'Loading']"
Performance,Attempt to solve race conditions on roostats tests,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/362:17,race condition,race conditions,17,https://root.cern,https://github.com/root-project/root/pull/362,1,['race condition'],['race conditions']
Performance,"Attrs: argmemonly nofree nounwind willreturn; > declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #1; > ; > define weak dso_local void @__cuda_register_globals(i8** %0) {; > %2 = call i32 @__cudaRegisterFunction(i8** %0, i8* bitcast (void ()* @_Z22__device_stub__kernel1v to i8*), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @0, i64 0, i64 0), i32 -1, i8* null, i8* null, i8* null, i8* null, i32* null); > ret void; > }; > ; > declare dso_local i32 @__cudaRegisterFunction(i8**, i8*, i8*, i8*, i32, i8*, i8*, i8*, i8*, i32*); > ; > declare dso_local void @__cudaRegisterVar(i8**, i8*, i8*, i8*, i32, i64, i32, i32); > ; > declare dso_local void @__cudaRegisterManagedVar(i8**, i8*, i8*, i8*, i64, i32); > ; > declare dso_local void @__cudaRegisterSurface(i8**, i8*, i8*, i8*, i32, i32); > ; > declare dso_local void @__cudaRegisterTexture(i8**, i8*, i8*, i8*, i32, i32, i32); > ; > declare dso_local i8** @__cudaRegisterFatBinary(i8*); > ; > define weak dso_local void @__cuda_module_ctor_cling_module_4() {; > %1 = call i8** @__cudaRegisterFatBinary(i8* bitcast ({ i32, i32, i8*, i8* }* @__cuda_fatbin_wrapper to i8*)); > store i8** %1, i8*** @__cuda_gpubin_handle, align 8; > call void @__cuda_register_globals(i8** %1); > call void @__cudaRegisterFatBinaryEnd(i8** %1); > %2 = call i32 @atexit(void ()* @__cuda_module_dtor_cling_module_4); > ret void; > }; > ; > declare dso_local void @__cudaRegisterFatBinaryEnd(i8**); > ; > declare dso_local void @__cudaUnregisterFatBinary(i8**); > ; > define weak dso_local void @__cuda_module_dtor_cling_module_4() {; > %1 = load i8**, i8*** @__cuda_gpubin_handle, align 8; > call void @__cudaUnregisterFatBinary(i8** %1); > ret void; > }; > ; > declare dso_local i32 @atexit(void ()*); > ; > define hidden void @__orc_init_func.cling-module-4() {; > call void @__cuda_module_ctor_cling_module_4(); > ret void; > ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1164697687:6071,load,load,6071,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1164697687,1,['load'],['load']
Performance,Authority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/98ef0ee5.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/b4278411.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/f30dd6ad.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/35105088.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/KENETROOTCA.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.crl_url' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/CNRS2.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.info' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/DigiCertGridRootCA-Root.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/edca0fc0.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/2436bbb8.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/d58bb4bc.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/USERTrustRSACertificationAuthority.signing_policy' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/fc5a8f99.namespaces' from CURLOPT_CAPATH; * failed to load '/etc/grid-security/certificates/c2a48ab6.namespaces' from CURLOPT_CAPATH; * fai,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/8092#issuecomment-840048181:4605,load,load,4605,https://root.cern,https://github.com/root-project/root/issues/8092#issuecomment-840048181,1,['load'],['load']
Performance,"Avoid global stack for TCling's mutex states. This solves race condition and ordering issues for the content of TCling::fInitialMutex. Rather than relying on a global stack of state, leverage the fact that the code that temporarily; suspend the interpreter lock during user-code execution is already keeping/stashing away some; information. Extend that code to stash all the necessary information (was 'only' the delta; and is now the delta + initial state + recurse count.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6301:58,race condition,race condition,58,https://root.cern,https://github.com/root-project/root/pull/6301,1,['race condition'],['race condition']
Performance,"Avoid loading ROOT modules while Clang is instantiating a template class from STL, leading to ODR checks with an incomplete class.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11514:6,load,loading,6,https://root.cern,https://github.com/root-project/root/pull/11514,1,['load'],['loading']
Performance,Avoid race condition between tutorial/roofit/rf512_wsfactory_oper.C and tutorial/roofit/rf512_wsfactory_oper.py,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11643:6,race condition,race condition,6,https://root.cern,https://github.com/root-project/root/pull/11643,1,['race condition'],['race condition']
Performance,"Awesome progress!. Something that's making me scratch my head a bit is that, if the binned fit optimization is just taking the fact that this is self-normalized as a given, I would think you could make it work by getting rid of the bin width terms with `RooBinWidthFunction::disableClass()`. Then the value of the RooRealSum would just be (schematically) `Histogram[bin i]*normalization constants` which I would think would be exactly what the optimization expects... I'm missing something or else there is something happening under the hood that I don't mean to do... In any case, just FYI the issue is the same with the BBNLL or the vanilla NLL, so I don't think it can be a peculiar interaction with the RooBBNLL. . One thought of what might be different here is if in ATLAS's use case they are not using ExportOnly, then the setup and steering of the minimization might be different? I didn't see any magic code when I glanced at `MakeModelAndMeasurementFast` though. The only other intelligent thought I have right now is that, because of the recently-fixed issue, they definitely weren't working with 3D, and maybe something goes funny in more dimensions? It's not well fleshed out. But I thought I'd drop the thought since I'll be out of action for at least a week starting wednesday",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12729#issuecomment-1528027358:95,optimiz,optimization,95,https://root.cern,https://github.com/root-project/root/issues/12729#issuecomment-1528027358,2,['optimiz'],['optimization']
Performance,"Awesome, thanks!. > But an alternative is also forgoing an internal implementation a-la RBDT and just try to see if we can hook the xgboost Python API directly into e.g. the RDataFrame API. I don't think that the XGBoost API is thread safe (it doesn't have to be because of the GIL), so that might be a problem with implicit multi-threading in RDataFrame. I'm happy to continue the discussion later, but just for the record my 2 cents: I would still consider this a bugfix for 6.32.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/15173#issuecomment-2047825170:325,multi-thread,multi-threading,325,https://root.cern,https://github.com/root-project/root/pull/15173#issuecomment-2047825170,1,['multi-thread'],['multi-threading']
Performance,"A{\0A\0A\0A\09ret;\0A\0A}\0A\0A\00\00\00\00\00"", section "".nv_fatbin"", align 8; @__cuda_fatbin_wrapper = dso_local constant { i32, i32, i8*, i8* } { i32 1180844977, i32 1, i8* getelementptr inbounds ([249 x i8], [249 x i8]* @1, i64 0, i64 0), i8* null }, section "".nvFatBinSegment"", align 8; @__cuda_gpubin_handle = dso_local global i8** null, align 8; @llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* bitcast (void (i8*)* @__cuda_module_ctor_cling_module_4 to void ()*), i8* null }]. ; Function Attrs: noinline uwtable; define dso_local void @_Z7kernel1v() #0 {; %1 = alloca %struct.dim3, align 8; %2 = alloca %struct.dim3, align 8; %3 = alloca i64, align 8; %4 = alloca i8*, align 8; %5 = alloca { i64, i32 }, align 8; %6 = alloca { i64, i32 }, align 8; %7 = alloca i8*, i64 1, align 16; %8 = call i32 @__cudaPopCallConfiguration(%struct.dim3* %1, %struct.dim3* %2, i64* %3, i8** %4); %9 = load i64, i64* %3, align 8; %10 = load i8*, i8** %4, align 8; %11 = bitcast { i64, i32 }* %5 to i8*; %12 = bitcast %struct.dim3* %1 to i8*; call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 12, i1 false); %13 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 0; %14 = load i64, i64* %13, align 8; %15 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %5, i32 0, i32 1; %16 = load i32, i32* %15, align 8; %17 = bitcast { i64, i32 }* %6 to i8*; %18 = bitcast %struct.dim3* %2 to i8*; call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 12, i1 false); %19 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 0; %20 = load i64, i64* %19, align 8; %21 = getelementptr inbounds { i64, i32 }, { i64, i32 }* %6, i32 0, i32 1; %22 = load i32, i32* %21, align 8; %23 = bitcast i8* %10 to %struct.CUstream_st*; %24 = call i32 @cudaLaunchKernel(i8* bitcast (void ()* @_Z7kernel1v to i8*), i64 %14, i32 %16, i64 %20, i32 %22, i8** %7, i64 %9, %struct.CUstream_st* %23); br ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10294#issuecomment-1156850209:13984,load,load,13984,https://root.cern,https://github.com/root-project/root/pull/10294#issuecomment-1156850209,2,['load'],['load']
Performance,BBUnique (6940 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesSpin; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesSpin (4261 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReads; 76: [ OK ] RWLock.VeryLargeconcurrentReads (1071 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd; 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd (1077 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd14; 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd14 (1072 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStd17; 76: [ OK ] RWLock.VeryLargeconcurrentReadsStd17 (1072 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBB; 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBB (1071 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsStdTBBUnique; 76: [ OK ] RWLock.VeryLargeconcurrentReadsStdTBBUnique (1070 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsSpin; 76: [ OK ] RWLock.VeryLargeconcurrentReadsSpin (392 ms); 76: [ RUN ] RWLock.concurrentReadsAndWritesTL; 76: [ OK ] RWLock.concurrentReadsAndWritesTL (3193 ms); 76: [ RUN ] RWLock.LargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.LargeconcurrentReadsAndWritesTL (3102 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsAndWritesTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsAndWritesTL (6246 ms); 76: [ RUN ] RWLock.VeryLargeconcurrentReadsTL; 76: [ OK ] RWLock.VeryLargeconcurrentReadsTL (1072 ms); 76: [----------] 110 tests from RWLock (213032 ms total); 76: ; 76: [----------] 10 tests from TThreadedObject; 76: [ RUN ] TThreadedObject.CreateAndDestroy; 76: [ OK ] TThreadedObject.CreateAndDestroy (1 ms); 76: [ RUN ] TThreadedObject.Get; 76: [ OK ] TThreadedObject.Get (10 ms); 76: [ RUN ] TThreadedObject.GetAtSlot; 76: [ OK ] TThreadedObject.GetAtSlot (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotUnchecked; 76: [ OK ] TThreadedObject.GetAtSlotUnchecked (0 ms); 76: [ RUN ] TThreadedObject.GetAtSlotRaw; 76: [ OK ] TThreadedObject.GetAtSlotRaw (0 ms); 76: [ RUN ] TThreadedObject.SetAtSlot; 76: [ OK ] TThreadedObject.SetAtSlot (0 ms); 76: [ RUN ],MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-742071485:12695,concurren,concurrentReadsAndWritesTL,12695,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-742071485,1,['concurren'],['concurrentReadsAndWritesTL']
Performance,"BUILD/root-6.28.00/core/meta/inc/TClass.h:651; #49 EmitModel (inputfile=..., outname=""Add"") at /builddir/build/BUILD/root-6.28.00/ppc64le-redhat-linux-gnu/tmva/sofie/test/EmitFromRoot_all.cxx:26; #50 0x0000000108cd23dc in main (argc=<optimized out>, argv=<optimized out>) at /usr/include/c++/8/ext/new_allocator.h:79; ===========================================================; pure virtual method called; terminate called without an active exception; Subprocess aborted; ~~~. Disabling the SOFIE parser, so that the build completes. There are error during testing:. There are failures when running in interpreter mode:. ~~~; 98/1192 Test #779: tutorial-roofit-rf104_classfactory ..................................***Failed Error regular expression found in output. Regex=[segmentation violation]126.58 sec; Processing /builddir/build/BUILD/root-6.28.00/tutorials/roofit/rf104_classfactory.C...; *** Break *** segmentation violation; ===========================================================; There was a crash (#5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:395).; This is the entire stack trace of all threads:; ===========================================================; #0 0x00007fffa80f2f04 in waitpid () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #1 0x00007fffa805a38c in do_system () from /lib64/glibc-hwcaps/power9/libc-2.28.so; #2 0x00007fffa8ba9044 in TUnixSystem::Exec (shellcmd=<optimized out>, this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2104; #3 TUnixSystem::StackTrace (this=0x11eee5850) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:2395; #4 0x00007fffa8bac1c8 in TUnixSystem::DispatchSignals (this=0x11eee5850, sig=kSigSegmentationViolation) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUnixSystem.cxx:3615; #5 0x00007fffa8bac284 in SigHandler (sig=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/unix/src/TUn",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:12316,optimiz,optimized,12316,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"BUILD/root-6.28.00/interpreter/cling/lib/Interpreter/IncrementalJIT.cpp:572; #18 0x00007fff76a50690 in cling::IncrementalExecutor::getPointerToGlobalFromJIT (this=0x165848f30, name=...) at /usr/include/c++/8/bits/unique_ptr.h:345; #19 0x00007fff7699fe04 in cling::Interpreter::compileFunction (this=0x165715770, name=..., code=..., ifUnique=<optimized out>, withAccessControl=<optimized out>) at /usr/include/c++/8/bits/unique_ptr.h:345; #20 0x00007fff768fea38 in TClingCallFunc::compile_wrapper (this=<optimized out>, wrapper_name=..., wrapper=..., withAccessControl=<optimized out>) at /usr/include/c++/8/bits/basic_string.h:2306; #21 0x00007fff76908a68 in TClingCallFunc::make_wrapper (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:1006; #22 0x00007fff76908e78 in TClingCallFunc::IFacePtr (this=0x16b07b660) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TClingCallFunc.cxx:2004; #23 0x00007fff7682c3bc in TCling::CallFunc_IFacePtr (this=<optimized out>, func=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/metacling/src/TCling.cxx:7888; #24 0x00007fff7ca8f81c in GetCallFunc (method=<optimized out>) at /usr/include/c++/8/bits/locale_facets.h:877; #25 WrapperCall (method=6088041216, nargs=2, args_=0x7fffc4480880, self=0x16b1482f0, result=0x16b0b6990) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:765; #26 0x00007fff7ca90e5c in Cppyy::CallO (method=6088041216, self=0x16b1482f0, nargs=2, args=0x7fffc4480880, result_type=<optimized out>) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:883; #27 0x00007fff7cb6b8f0 in GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) at /builddir/build/BUILD/root-6.28.00/bindings/pyroot/cppyy/CPyCppyy/src/CallContext.h:91; #28 GILCallO (klass=<optimized out>, ctxt=0x7fffc4480860, self=<optimized out>, method=6088041216) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:31066,optimiz,optimized,31066,https://root.cern,https://github.com/root-project/root/issues/12372,2,['optimiz'],['optimized']
Performance,"Backport fix for ROOT-9556 ""Users might silently get wrong results when they process two trees as friends, one of which has been produced by a multi-thread Snapshot of the other""",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5239:143,multi-thread,multi-thread,143,https://root.cern,https://github.com/root-project/root/pull/5239,1,['multi-thread'],['multi-thread']
Performance,Backport mitigation of TFile caching race condition to v6.26,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9534:37,race condition,race condition,37,https://root.cern,https://github.com/root-project/root/pull/9534,2,['race condition'],['race condition']
Performance,"Backtrace for `core/rootcling_stage1/src/rootcling_stage1`:. ```; : CommandLine Error: Option 'W' registered more than once!; LLVM ERROR: inconsistency in registered CommandLine options. Program received signal SIGABRT, Aborted.; __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at ./nptl/pthread_kill.c:44; 44	./nptl/pthread_kill.c: No such file or directory.; (gdb) where; #0 __pthread_kill_implementation (threadid=<optimized out>, signo=signo@entry=6, no_tid=no_tid@entry=0) at ./nptl/pthread_kill.c:44; #1 0x00007ffff1ca9d2f in __pthread_kill_internal (signo=6, threadid=<optimized out>) at ./nptl/pthread_kill.c:78; #2 0x00007ffff1c5aef2 in __GI_raise (sig=sig@entry=6) at ../sysdeps/posix/raise.c:26; #3 0x00007ffff1c45472 in __GI_abort () at ./stdlib/abort.c:79; #4 0x00007ffff2b39e7d in llvm::report_fatal_error(llvm::Twine const&, bool) () from /usr/lib/llvm-13/lib/libLLVM-13.so.1; #5 0x00007ffff2b39ca6 in llvm::report_fatal_error(char const*, bool) () from /usr/lib/llvm-13/lib/libLLVM-13.so.1; #6 0x00007ffff2b271f4 in ?? () from /usr/lib/llvm-13/lib/libLLVM-13.so.1; #7 0x00007ffff2b191eb in llvm::cl::Option::addArgument() () from /usr/lib/llvm-13/lib/libLLVM-13.so.1; #8 0x0000555555d0f50a in llvm::cl::list<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool, llvm::cl::parser<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::list<char [2], llvm::cl::FormattingFlags, llvm::cl::NumOccurrencesFlag, llvm::cl::desc, llvm::cl::cat>(char const (&) [2], llvm::cl::FormattingFlags const&, llvm::cl::NumOccurrencesFlag const&, llvm::cl::desc const&, llvm::cl::cat const&) (); #9 0x0000555555c780e0 in __static_initialization_and_destruction_0(int, int) [clone .constprop.0] (); #10 0x00007ffff1c462b6 in call_init (env=<optimized out>, argv=0x7fffffffdd58, argc=1) at ../csu/libc-start.c:145; #11 __libc_start_main_impl (main=0x555555c78d70 <main>, argc=1, argv=0x7fff",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12156#issuecomment-1407693900:271,optimiz,optimized,271,https://root.cern,https://github.com/root-project/root/issues/12156#issuecomment-1407693900,3,['optimiz'],['optimized']
Performance,"Backtrace:; ```; * thread #1, queue = 'com.apple.main-thread', stop reason = breakpoint 1.1; * frame #0: 0x000000011a9d279c libCling.so`clang::TextDiagnosticPrinter::HandleDiagnostic(this=0x0000600002109a40, Level=Error, Info=0x00007ff7bfef1b30) at TextDiagnosticPrinter.cpp:112:40; frame #1: 0x0000000119cb30b1 libCling.so`(anonymous namespace)::FilteringDiagConsumer::HandleDiagnostic(this=0x0000600002605e00, DiagLevel=Error, Info=0x00007ff7bfef1b30) at IncrementalParser.cpp:196:22; frame #2: 0x00000001196dc5a2 libCling.so`CheckModuleBuildClient::HandleDiagnostic(this=0x0000600000c39b30, DiagLevel=Error, Info=0x00007ff7bfef1b30) at rootcling_impl.cxx:3599:18; frame #3: 0x000000011fb92e34 libCling.so`clang::DiagnosticIDs::EmitDiag(this=0x000060000000c090, Diag=0x0000000103008e00, DiagLevel=Error) const at DiagnosticIDs.cpp:804:16; frame #4: 0x000000011fb92c27 libCling.so`clang::DiagnosticIDs::ProcessDiag(this=0x000060000000c090, Diag=0x0000000103008e00) const at DiagnosticIDs.cpp:796:3; frame #5: 0x000000011fb838a9 libCling.so`clang::DiagnosticsEngine::ProcessDiag(this=0x0000000103008e00) at Diagnostic.h:1032:19; frame #6: 0x000000011fb8383b libCling.so`clang::DiagnosticsEngine::EmitCurrentDiagnostic(this=0x0000000103008e00, Force=false) at Diagnostic.cpp:556:15; frame #7: 0x0000000119835bbf libCling.so`clang::DiagnosticBuilder::Emit(this=0x00007ff7bfef4d98) at Diagnostic.h:1315:28; frame #8: 0x0000000119835b59 libCling.so`clang::DiagnosticBuilder::~DiagnosticBuilder(this=0x00007ff7bfef4d98) at Diagnostic.h:1356:26; frame #9: 0x00000001198345c5 libCling.so`clang::DiagnosticBuilder::~DiagnosticBuilder(this=0x00007ff7bfef4d98) at Diagnostic.h:1356:24; frame #10: 0x000000011acaf2d8 libCling.so`clang::ASTReader::diagnoseOdrViolations(this=0x0000000102887a00) at ASTReader.cpp:9572:7; frame #11: 0x000000011acbdf09 libCling.so`clang::ASTReader::FinishedDeserializing(this=0x0000000102887a00) at ASTReader.cpp:11674:5; frame #12: 0x0000000119cd953d libCling.so`cling::ExternalAST",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12788#issuecomment-1538921951:30,queue,queue,30,https://root.cern,https://github.com/root-project/root/issues/12788#issuecomment-1538921951,1,['queue'],['queue']
Performance,"Based on PR #858. Implements only parts relevant for CV. Rudimentary performance benchmark with ~60000 events with 2-fold CV; ```; Multiproc: root -l -b -q TMVACrossValidation.C 15.82s user 0.46s system 152% cpu 10.679 total; Standard: root -l -b -q TMVACrossValidation.C 14.31s user 0.25s system 99% cpu 14.652 total; ```; Which translates into a 4 second speed up. A different example, with a deeper bdt forest and 10-fold CV, almost halves the required time on my machine :); ```; Single : root -l -b -q TMVACrossValidation.C 33.66s user 1.99s system 98% cpu 36.369 total; Multiproc 2: root -l -b -q TMVACrossValidation.C 39.14s user 2.68s system 167% cpu 25.016 total; Multiproc 4: root -l -b -q TMVACrossValidation.C 46.52s user 3.50s system 233% cpu 21.420 total; ```. For the second example, these changes to `TMVACrossValidation.C` were used.; ```; /* ...snip... */; TString cvOptions = Form(""!V:NumWorkerProcs=4""; /* ...snip... */; cv.BookMethod(TMVA::Types::kBDT, ""BDTG"",; ""!H:!V:NTrees=1000:MinNodeSize=2.5%:BoostType=Grad""; "":NegWeightTreatment=Pray:Shrinkage=0.10:nCuts=20""; "":MaxDepth=6"");; /* ...snip... */; // cv.BookMethod(TMVA::Types::kFisher, ""Fisher"",; // ""!H:!V:Fisher:VarTransform=None"");; /* ...snip... */; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1869:69,perform,performance,69,https://root.cern,https://github.com/root-project/root/pull/1869,1,['perform'],['performance']
Performance,"Basic functionality remains in TRootSniffer class, ; extra methods for scanning TH1, TPad, TGraph, TTree classes moved to TRootSnifferFull. Default behavior of THttpServer will remain - it will create TRootSnifferFull.; But in webgui only basic functionality is required, therefore all ROOT6 libraries will not be loaded. Also add few parameters in rootrc file to configure THttpServer, used in webgui.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1695:314,load,loaded,314,https://root.cern,https://github.com/root-project/root/pull/1695,1,['load'],['loaded']
Performance,"Basically, the problem was twofold:; 1. Using the number of entries for scaling the basket size can be really incorrect -- rather, we want the cluster size. This is only available it OptimizeBaskets is called via AutoFlush.; 2. We only need to set aside extra metadata if there is an entry offset buffer.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1998:183,Optimiz,OptimizeBaskets,183,https://root.cern,https://github.com/root-project/root/pull/1998,1,['Optimiz'],['OptimizeBaskets']
Performance,"Batch mode, which is now only supported by Chrome, allows to run; JS code loaded from file and dump result to output file - no any; communication with host application required. Now extra headless mode is introduced, which allows to run client; code in the headless browser and communicate with it. It was original; way to produce batch images, therefore need to rename some methods; to clearly separate from old functionality. Adjust `tutorials/webgui/ping` tutorial to let it run in ""headless"" mode when -b specified.; In such case macro waits until 200 round-trip packets arrived and automatically ends.; Can be used in PR/Nightly testings. Testes on Windows/Mac/Linux",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7839:74,load,loaded,74,https://root.cern,https://github.com/root-project/root/pull/7839,1,['load'],['loaded']
Performance,Bdt performance,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/100:4,perform,performance,4,https://root.cern,https://github.com/root-project/root/pull/100,1,['perform'],['performance']
Performance,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5946:178,load,load,178,https://root.cern,https://github.com/root-project/root/pull/5946,2,['load'],['load']
Performance,"Because of these errors (see e.g. https://bit.ly/31y2jSa):. ```; Plugin dlopen(libXrdSecgsi-4.so, 256): image not found sec.protocol libXrdSecgsi-4.so; Secsss: 0x30 cryptography load failed; Protocol not supported; ```. @hageboeck i'm not sure whether this interferes with #5938",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5943:178,load,load,178,https://root.cern,https://github.com/root-project/root/pull/5943,1,['load'],['load']
Performance,"Before importing cppyy from PyROOT, instead of specifying the location of the PCH, we can just use the magic word 'none' to tell cppyy not to check the PCH. In both cases, the objective is to avoid a warning from cppyy when importing it. This needs to be merged after the next update of `cppyy-backend`, when a new release is out. The related discussion with Wim is here:; https://bitbucket.org/wlav/cppyy/issues/62/new-check-in-loaderpy-uses-wrong-include",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3555:429,load,loaderpy-uses-wrong-include,429,https://root.cern,https://github.com/root-project/root/pull/3555,1,['load'],['loaderpy-uses-wrong-include']
Performance,"Before this commit, RVec<T> objects were written to file as a normal; object with a single data member of type `std::vector<T, RAdoptAllocator<T>>`.; However, we want to:; - make use of the more generic ""collection proxy"" I/O mechanism that; reads/writes STL-like collections in a generic way making use of their; begin()/end()/size() API. This makes it possible to implicitly convert; RVec to any other collection at the I/O level, and it also makes it possible to...; - evolve RVec internals to implement a small-buffer optimization and; remove the `std::vector<T, RAdoptAllocator<T>>` data member without; breaking I/O. The most important changes performed:; - added ROOT::ESSTLType::kROOTRVec; - added special case for RVec in dictionary generation:; - RVecs are setup to use CollectionProxy; - RVecs are treated as an STL container (even if not in namespace std); - added special treatment of RVec<bool> (reusing the VectorLooper; specialized for std::vector<bool>). Philippe, Axel: what tests would you like to see?",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6960:522,optimiz,optimization,522,https://root.cern,https://github.com/root-project/root/pull/6960,2,"['optimiz', 'perform']","['optimization', 'performed']"
Performance,"Before this commit, a Cache call without template parameters would; trigger jitting and execution of the corresponding typed Cache call; on the spot, separately from the rest of RDF's jitting. With these changes the code needed by Cache is merged with the rest of; the code booked for jitting. Jitting is then triggered on the spot,; because a jitted Cache call needs the jitted code to produce its return; value. This resolves the Cache-related part of ROOT-9790, ""Lazy jitting of; Cache and Snapshot"".",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6590:22,Cache,Cache,22,https://root.cern,https://github.com/root-project/root/pull/6590,6,['Cache'],"['Cache', 'Cache-related']"
Performance,"Before this commit, if an action with a sample callback (currently; only Snapshot) or a DefinePerSample went out of scope, we did not; deregister the corresponding callbacks from the RLoopManager, which; would try to run them anyway during the following event loop.; As callbacks typically perform a call on the original action or; define objects, this could cause a use-after-delete. With this patch, we now associate each callback to the address of; the corresponding node of the computation graph and remove callbacks; when the nodes go out of scope. This fixes https://github.com/root-project/root/issues/11222.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11251:290,perform,perform,290,https://root.cern,https://github.com/root-project/root/pull/11251,1,['perform'],['perform']
Performance,"Before this commit, in single-thread event loops RDF was throwing; in case TTreeReader had an error flag at the end of the loop.; Now multi-thread loops perform the same check at the end of each task.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8748:134,multi-thread,multi-thread,134,https://root.cern,https://github.com/root-project/root/pull/8748,2,"['multi-thread', 'perform']","['multi-thread', 'perform']"
Performance,"Before this patch, TTreeProcessorMT::Process activated implicit; multi-threading features (and never disabled them). One undesired; side-effect was that ROOT's thread-pool was not destructed after; TTreeProcessorMT was destructed. After this patch, TTreeProcessorMT; multi-thread TTree processing and activation of implicit; multi-threading features are disentangled, and users are; required to call EnableImplicitMT explicitly to activate IMT.; This is consistent with TThreadExecutor's behavior.; This fixes ROOT-10656.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5304:65,multi-thread,multi-threading,65,https://root.cern,https://github.com/root-project/root/pull/5304,3,['multi-thread'],"['multi-thread', 'multi-threading']"
Performance,"Before this patch, if a RLoopManager went out of scope before running; its event loop (a rare occurrence, but indeed possible, especially in; interactive sessions), we were leaking certain weak_ptrs and shared_ptrs; to components of the computation graph, that were meant to be used by; lazily jitted code that was never actually jitted in the end. With this change, when _any_ RLoopManager runs the event loop, we; trigger execution of _all_ jitted code that was registered, even if; it was registered by an RLoopManager that is now out of scope. In the; latter case, the code only performs clean-up of the heap-allocated; weak_ptrs and shared_ptrs and exits. We still ""leak"" in the odd case; in which RDF jitted code is registered but the application never actually; triggers any RDF event loops, in which case the code to be lazily jitted; remains in the pipeline until the end of the application, and parts of; the computation graph are kept alive indefinitely by heap-allocated shared_ptrs. For this to work, we need to detect when compiled objects went out of scope and we don't actually have to run the jitted code but just perform the clean-up, so we switch from heap-allocated shared_ptrs to heap-allocated weak_ptrs for those objects.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5488:583,perform,performs,583,https://root.cern,https://github.com/root-project/root/pull/5488,2,['perform'],"['perform', 'performs']"
Performance,"Before we do name lookups, we must ensure any later redeclaration of the DeclContext has been loaded, since they may add names to the result of this lookup.; Signed-off-by: Jun Zhang <jun@junz.org>",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/11423:94,load,loaded,94,https://root.cern,https://github.com/root-project/root/pull/11423,1,['load'],['loaded']
Performance,"Before, it was loading the library which doesn't exists(by checking gSystem->DynamicPathName). It made no sence. This also fix our runtime cxxmodules.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2167:15,load,loading,15,https://root.cern,https://github.com/root-project/root/pull/2167,1,['load'],['loading']
Performance,"Before, the expensive `TUUID::AsString` function was used to generate; the key. This is a performance optimization that speeds up the RooRealVar; destructor by about a factor ten, which measurably benefits workflows; with large workspaces. Here a profile of a CMS combine toy experiment workflow to show this:; * before this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys; * after this PR: https://rembserj.web.cern.ch/rembserj/cgi-bin/igprof-navigator/combine_example_toys_2",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10151:90,perform,performance,90,https://root.cern,https://github.com/root-project/root/pull/10151,2,"['optimiz', 'perform']","['optimization', 'performance']"
Performance,"Below are the current results for ROOT master. No ""result2"" warning:. ```; /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:276:9: warning: Access to field 'fTopMessage' results in a dereference of a null pointer (loaded from variable 'evalue') [clang-analyzer-core.NullDereference]; 1: expanded from macro 'Py_XDECREF' in /usr/include/python2.7/object.h:825; 2: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:749; 3: Left side of '&&' is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:749; 4: Assuming 'args' is non-null in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:753; 5: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:753; 6: Assuming field 'fArgsRequired' is not equal to 0 in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:757; 7: Left side of '||' is true in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:757; 8: Calling 'CPPMethod::ConvertAndSetArgs' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:758; 9: Assuming 'argMax' is not equal to 'argc' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:683; 10: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:683; 11: Assuming 'argc' is < field 'fArgsRequired' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:685; 12: Taking true branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:685; 13: Calling 'CPPMethod::SetPyError_' in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:686; 14: 'evalue' initialized to a null pointer value in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:239; 15: Assuming the condition is false in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:240; 16: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/CPyCppyy/src/CPPMethod.cxx:240; 17: 'errtype' is null in /opt/root_sr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/issues/7400#issuecomment-824715675:228,load,loaded,228,https://root.cern,https://github.com/root-project/root/issues/7400#issuecomment-824715675,1,['load'],['loaded']
Performance,"Benchmarks for my RDF use-case with 256 threads look like:; ```; Std (current default); ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCounts>();. Percent of CPU this job got: 18920%; Elapsed (wall clock) time (h:mm:ss or m:ss): 3:08.67. Unique (subject to deadlocks previously); ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::UniqueLockRecurseCount>;. Percent of CPU this job got: 19670%; Elapsed (wall clock) time (h:mm:ss or m:ss): 2:54.53. Std17; ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::shared_mutex, ROOT::Internal::RecurseCountsShared>();. Percent of CPU this job got: 18352%; Elapsed (wall clock) time (h:mm:ss or m:ss): 3:07.97. TBB; ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBB>();. Percent of CPU this job got: 19507%; Elapsed (wall clock) time (h:mm:ss or m:ss): 2:55.56. TBBUnique; ROOT::gCoreMutex = new ROOT::TRWMutexImp<std::mutex, ROOT::Internal::RecurseCountsTBBUnique>();. Percent of CPU this job got: 19725%; Elapsed (wall clock) time (h:mm:ss or m:ss): 2:49.24; ```. So the general penalty from the shared_mutex appears to compensate for avoiding the exclusive lock in ReadLock(). This could be further optimized by using the shared_mutex only in RecurseCountsShared, but given the results, the tbb-based solution looks rather promising. In terms of sorting out the dependencies, one thing I could imagine is making core/imt an optional extra dependency of core/thread, and hiding the tbb stuff there (but open to other suggestions)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6919#issuecomment-744404292:1221,optimiz,optimized,1221,https://root.cern,https://github.com/root-project/root/pull/6919#issuecomment-744404292,1,['optimiz'],['optimized']
Performance,"Bertrand; Now Jenkins too smart - once failed, it will not start new compiling jobs. ; One need to add more commits and exclude `ROOT-performance-centos7-multicore/default`, which has problem with configuring cmake for LLVM",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3480#issuecomment-468235477:134,perform,performance-,134,https://root.cern,https://github.com/root-project/root/pull/3480#issuecomment-468235477,1,['perform'],['performance-']
Performance,"Besides the weird fact that mac10.13 vetoes ""239/815 tutorials"" while ROOT-performance-centos7-multicore vetoes ""239/815"", things seem ok",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5943#issuecomment-651111204:75,perform,performance-,75,https://root.cern,https://github.com/root-project/root/pull/5943#issuecomment-651111204,1,['perform'],['performance-']
Performance,"Both `Foo<double>` and `Foo<Double32_t>` have the same typeid.; Before this commit, TClass::GetClass(typeid(Foo<double>)) would return; whatever was registered *last*. This is not ""stable""; it depends on which; branch is accessed first, or which TClass::GetClass call happens first, or; which library is loaded first. Make this more reporducible by consistently preferring types will less; Double32_t / Float16_t occurrences uin the typename. While at this, only remove a TClass from the typeid=>TClass map if it; really is the value for the typename.",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12480:304,load,loaded,304,https://root.cern,https://github.com/root-project/root/pull/12480,1,['load'],['loaded']
Performance,"Boundary/FindNode implementations. * The use of a 3D voxel grid (TGeoVoxelGrid) structure, able to store properties ""local"" or in the vicinity of a cartesian coordinate P. This structure allows to reduce the (typical) algorithmic complexity for ""Safety"" queries to ~O(1) (with a constant factor determined by the voxel size). Filling of the 3D voxel grid cache for Safety is done on-the-fly (using the BVH once). * (Optional) Additional caching of ""last-call"" safety values for really quick return when the value is still valid at the next call. Ideas for these improvements come from prior work in related libraries such as VecGeom. -----. Implementation details:. * The implementation is, for now (until fully tested), provided in a backward compatible manner:. - By default, nothing changes; - Users have to activate the BVH mode by setting an environment variable TGEO_PW_USEBVH; - Users may hence compare the 2 modes. * Functions for Safety, FindNode, FindBoundary dispatch to some internal implementation. This causes an extra lookup/jump, which can be removed once BVH is fully validated. * For the BVH, a well known open source implementation is included in header-only form. The headers are copied from https://github.com/madmann91/bvh commit 66e445b92f68801a6dd8ef943fe3038976ecb4ff. * A new class, TGeoVoxelGrid is provided for the cartesian VoxelGrid container. ----. Performance examples:. In a test with the ALICE simulation framework including the ITS + TPC detectors with 48240 volumes on the parallel world, we see. * initialization time goes from TGeoVoxelFinder: 10s ---> BVH: 40ms; * Geant simulation time: 10s --> 2s; * memory usage: 3GB --> 1GB. Hence, this PR will make a big difference for the ALICE simulation program. It was verified, that identical results (number of hits, steps, etc) are obtained when going from TGeoVoxelFinder --> BVH+GRID. ----. Outlook:. Similar techniques could be applied to ordinary TGeoNavigator routines. Checklist:. - [x] tested changes locally",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/16442:2384,Perform,Performance,2384,https://root.cern,https://github.com/root-project/root/pull/16442,1,['Perform'],['Performance']
Performance,"Bring down the number of address sanitizer failures to ~ 36. In detail:; - Add use-after-scope checks for clang builds.; - Disable new/delete and malloc/free consistency checks.; Since interpreted code cannot be instrumented, address sanitizer cannot; check whether memory is managed consistently.; (Technical details: asan replaces new, delete, malloc and free. In non-instrumented code, the new/delete replacement doesn't work, though. To asan it therefore looks like something was `new`ed in instrumented code, but `free`d in JITted code and vice versa.); - Change the order in which libaries are `LD_PRELOADED`. Address sanitizer needs the config first, and runtimes later. Otherwise, it will ignore the configs.; - Fix a regex, so address sanitizer is `LD_PRELOADED` only when python is used. Before, it would be loaded twice for command lines such as `root.exe .... ..../python/....`",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5660:818,load,loaded,818,https://root.cern,https://github.com/root-project/root/pull/5660,1,['load'],['loaded']
Performance,"Btw, one additional thought on this accuracy/performance trade-off (also following earlier discussions in the PPP channel): perhaps a good way to ""solve"" this is by not hardcoding one trade-off choice, but by allowing the users to choose what's best for their particular problems. I could imagine users would like a fast-mode for iteration on designing RooFit models and a precision-mode for the final calculation, for instance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12389#issuecomment-1538768465:45,perform,performance,45,https://root.cern,https://github.com/root-project/root/pull/12389#issuecomment-1538768465,1,['perform'],['performance']
Performance,"Buffer (this=<optimized out>, b=..., obj=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/src/TGenCollectionStreamer.cxx:1232; #29 0x00007fffa933ff7c in TCollectionClassStreamer::Stream (onfileClass=0x10a860aa0, obj=0x109986cc0, b=..., this=<optimized out>) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:177; #30 TCollectionClassStreamer::Stream (this=<optimized out>, b=..., obj=0x109986cc0, onfileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/inc/TCollectionProxyFactory.h:172; #31 0x00007fffa8f04014 in TClass::StreamerExternal (pThis=<optimized out>, object=0x109986cc0, b=..., onfile_class=<optimized out>) at /builddir/build/BUILD/root-6.28.00/core/meta/src/TClass.cxx:6783; #32 0x00007fffa92db554 in TClass::Streamer (onfile_class=0x10a860aa0, b=..., obj=<optimized out>, this=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/core/meta/inc/TClass.h:610; #33 TBufferFile::ReadFastArray (streamer=0x0, onFileClass=0x10a860aa0, n=1, cl=0x10a860aa0, start=<optimized out>, this=0x7ffff83ea100) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1609; #34 TBufferFile::ReadFastArray (this=0x7ffff83ea100, start=<optimized out>, cl=0x10a860aa0, n=<optimized out>, streamer=<optimized out>, onFileClass=0x10a860aa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TBufferFile.cxx:1596; #35 0x00007fffa94a224c in TStreamerInfoActions::ReadSTLObjectWiseFastArray (conf=0x10a395fa0, addr=<optimized out>, buf=...) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1362; #36 TStreamerInfoActions::ReadSTL<&TStreamerInfoActions::ReadSTLMemberWiseSameClass, &TStreamerInfoActions::ReadSTLObjectWiseFastArray> (buf=..., addr=0x109986ba0, conf=0x10a395fa0) at /builddir/build/BUILD/root-6.28.00/io/io/src/TStreamerInfoActions.cxx:1405; #37 0x00007fffa92d3130 in TStreamerInfoActions::TConfiguredAction::operator() (this=0x109f4d790, this=0x109f4d790, object=0x109986ba0, buffer=...) at /builddir/build/BUILD/root-6",MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/12372:8345,optimiz,optimized,8345,https://root.cern,https://github.com/root-project/root/issues/12372,1,['optimiz'],['optimized']
Performance,"BufferExtNormal (this=0x2e97a30, buf=0x7f1616858010 <error: Cannot access memory at address 0x7f1616858010>, pos=286, len=1234974, loc=; 0x7ffdc1fcdf44: 0) at /home/zhe/root/io/io/src/TFileCacheRead.cxx:531; #9 0x00007f161a71794a in TTreeCacheUnzip::ReadBufferExt (this=0x2e97a30, buf=<optimized out>, pos=<optimized out>, len=<optimized out>, loc=<optimized out>) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:979; #10 0x00007f161a716b3c in TTreeCacheUnzip::GetUnzipBuffer (this=0x2e97a30, buf=0x7ffdc1fcdfe0, pos=286, len=1234974, free=0x7ffdc1fcdfdc) at /home/zhe/root/tree/tree/src/TTreeCacheUnzip.cxx:810; #11 0x00007f161a6a7d97 in TBasket::ReadBasketBuffers (this=this; entry=0x2e9b770, pos=286, len=1234974, file=file; entry=0x1e41b90) at /home/zhe/root/tree/tree/src/TBasket.cxx:474; #12 0x00007f161a6b22d0 in TBranch::GetBasket (this=this; entry=0x2f7f180, basketnumber=0) at /home/zhe/root/tree/tree/src/TBranch.cxx:1159; #13 0x00007f161a6b29db in TBranch::GetEntry (this=0x2f7f180, entry=0, getall=<optimized out>) at /home/zhe/root/tree/tree/src/TBranch.cxx:1285; #14 0x00007f161a6c6607 in TTree::<lambda()>::operator()(void) const (__closure=0x7ffdc1fce730) at /home/zhe/root/tree/tree/src/TTree.cxx:5478; #15 0x00007f161afe60b3 in std::function<void (unsigned int)>::operator()(unsigned int) const (__args#0=0, this=<optimized out>) at /usr/include/c++/5/functional:2267; #16 tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>::operator()(tbb::blocked_range<unsigned int> const&) const (r=..., this=0x7f161ab4bd58) at /home/zhe/buildimt/include/tbb/parallel_for.h:162; #17 tbb::interface9::internal::start_for<tbb::blocked_range<unsigned int>, tbb::internal::parallel_for_body<std::function<void (unsigned int)>, unsigned int>, tbb::auto_partitioner const>::run_body(tbb::blocked_range<unsigned int>&) (r=..., this=0x7f161ab4bd40) at /home/zhe/buildimt/include/tbb/parallel_for.h:102; #18 tbb::interface9::internal::balancing_partition_type<tbb::in",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/1010#issuecomment-362400295:16869,optimiz,optimized,16869,https://root.cern,https://github.com/root-project/root/pull/1010#issuecomment-362400295,2,['optimiz'],['optimized']
Performance,Bug in ROOT library loading - .dot sub-directories,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/issues/10704:20,load,loading,20,https://root.cern,https://github.com/root-project/root/issues/10704,1,['load'],['loading']
Performance,Build built-in LZMA with O3 optimization level,MatchSource.ISSUE,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6144:28,optimiz,optimization,28,https://root.cern,https://github.com/root-project/root/pull/6144,3,['optimiz'],['optimization']
Performance,Build failed on ROOT-centos7/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49265/console).; ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49265/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.python.basic.roottest_python_basic_overload](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49265/testReport/projectroot.roottest.python/basic/roottest_python_basic_overload/); - [projectroot.roottest.python.basic.roottest_python_basic_datatype](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49265/testReport/projectroot.roottest.python/basic/roottest_python_basic_datatype/); - [projectroot.roottest.python.basic.roottest_python_basic_basic](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49265/testReport/projectroot.roottest.python/basic/roottest_python_basic_basic/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_pythonizations](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49265/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_pythonizations/); - [projectroot.roottest.python.pythonizations.roottest_python_pythonizations_smartptr](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49265/testReport/projectroot.roottest.python/pythonizations/roottest_python_pythonizations_smartptr/); - [projectroot.roottest.python.stl.roottest_python_stl_stl](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49265/testReport/projectroot.roottest.python/stl/roottest_python_stl_stl/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49265/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.treeForeign.roottest_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2911#issuecomment-441722473:189,cache,cache,189,https://root.cern,https://github.com/root-project/root/pull/2911#issuecomment-441722473,2,['cache'],['cache']
Performance,Build failed on ROOT-centos7/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49835/console).; ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49835/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/); - [projectroot.roottest.root.io.compression.roottest_root_io_compression_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49835/testReport/projectroot.roottest.root.io/compression/roottest_root_io_compression_make/); - [projectroot.roottest.root.io.treeForeign.roottest_root_io_treeForeign_testForeignDraw](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49835/testReport/projectroot.roottest.root.io/treeForeign/roottest_root_io_treeForeign_testForeignDraw/); - [projectroot.roottest.root.tree.cloning.roottest_root_tree_cloning_exectrim](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49835/testReport/projectroot.roottest.root.tree/cloning/roottest_root_tree_cloning_exectrim/); - [projectroot.roottest.root.tree.fastcloning.roottest_root_tree_fastcloning_make](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/49835/testReport/projectroot.roottest.root.tree/fastcloning/roottest_root_tree_fastcloning_make/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/2911#issuecomment-444905086:189,cache,cache,189,https://root.cern,https://github.com/root-project/root/pull/2911#issuecomment-444905086,2,['cache'],['cache']
Performance,Build failed on ROOT-centos7/python3.; [See console output](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/console).; ### Failing tests:; - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writeUniqPtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data1_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data1_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data2_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data2_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data4_build](https://epsft-jenkins.cern.ch/job/root-pullrequests-build/50474/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data4_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data3_build](https://epsf,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/3183#issuecomment-447950115:190,load,load,190,https://root.cern,https://github.com/root-project/root/pull/3183#issuecomment-447950115,2,['load'],['load']
Performance,Build failed on ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5094-ROOT-debian10-i386-cxx14&date=2020-05-17).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82543/console).; ### Errors:; - [2020-05-17T06:55:49.848Z] 1108/1917 Test #843: tutorial-v7-concurrentfill.cxx ....................................................................***Failed Error regular expression found in output. Regex=[: error:] 0.99 sec . ### Failing tests:; - [projectroot.test.test_stressHistFactory](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82543/testReport/projectroot/test/test_stressHistFactory/); - [projectroot.roottest.root.multicore.roottest_root_multicore_tsenums](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82543/testReport/projectroot.roottest.root/multicore/roottest_root_multicore_tsenums/); - [projectroot.test.fit.test_fit_testFitPerf](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82543/testReport/projectroot.test/fit/test_fit_testFitPerf/); - [projectroot.runtutorials.tutorial_multicore_imt101_parTreeProcessing](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82543/testReport/projectroot/runtutorials/tutorial_multicore_imt101_parTreeProcessing/); - [projectroot.runtutorials.tutorial_roostats_StandardBayesianNumericalDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82543/testReport/projectroot/runtutorials/tutorial_roostats_StandardBayesianNumericalDemo/); - [projectroot.runtutorials.tutorial_roostats_StandardBayesianMCMCDemo](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/82543/testReport/projectroot/runtutorials/tutorial_roostats_StandardBayesianMCMCDemo/); - [projectroot.runtutorials.tutorial_roo,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5094#issuecomment-629755255:472,concurren,concurrentfill,472,https://root.cern,https://github.com/root-project/root/pull/5094#issuecomment-629755255,1,['concurren'],['concurrentfill']
Performance,Build failed on ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-6108-ROOT-debian10-i386-cxx14&date=2020-08-03).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91172/console).; ### Failing tests:; - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_reload](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/91172/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_reload/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6108#issuecomment-667931826:452,load,load,452,https://root.cern,https://github.com/root-project/root/pull/6108#issuecomment-667931826,2,['load'],['load']
Performance,Build failed on ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102531/console).; ### Failing tests:; - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102531/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102531/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writeUniqPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102531/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102531/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data1_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102531/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data1_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data2_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102531/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data2_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data3_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullreques,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6850#issuecomment-732311241:288,load,load,288,https://root.cern,https://github.com/root-project/root/pull/6850#issuecomment-732311241,2,['load'],['load']
Performance,Build failed on ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102573/console).; ### Failing tests:; - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102573/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102573/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writeUniqPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102573/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102573/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writePtrColls/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data1_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102573/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data1_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data2_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/102573/testReport/projectroot.roottest.root.meta/evolution/roottest_root_meta_evolution_data2_build/); - [projectroot.roottest.root.meta.evolution.roottest_root_meta_evolution_data3_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullreques,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/6850#issuecomment-732454787:288,load,load,288,https://root.cern,https://github.com/root-project/root/pull/6850#issuecomment-732454787,2,['load'],['load']
Performance,Build failed on ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111142/console).; ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_cachedChain](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111142/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_cachedChain/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TestCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111142/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TestCache/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111142/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TooSmall/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111142/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TestMissCache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111142/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TestMissCache/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_CacheRange](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111142/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_CacheRange/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_LastCluster](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/111142/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_LastCluster/); - [projectroot.roottest.root.tre,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/7586#issuecomment-802031726:287,cache,cache,287,https://root.cern,https://github.com/root-project/root/pull/7586#issuecomment-802031726,6,['cache'],['cache']
Performance,Build failed on ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/115797/console).; ### Errors:; - [2021-04-27T17:03:41.617Z] /home/sftnight/build/workspace/root-pullrequests-build/root/core/metacling/src/TCling.cxx:7209:31: error: no matching function for call to ‘TSystem::Load(std::__cxx11::string&)’,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/8017#issuecomment-827766546:424,Load,Load,424,https://root.cern,https://github.com/root-project/root/pull/8017#issuecomment-827766546,1,['Load'],['Load']
Performance,Build failed on ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126156/console).; ### Failing tests:; - [projectroot.roottest.root.io.double32.roottest_root_io_double32_make](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126156/testReport/projectroot.roottest.root.io/double32/roottest_root_io_double32_make/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/126156/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TooSmall/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9008#issuecomment-921324766:523,cache,cache,523,https://root.cern,https://github.com/root-project/root/pull/9008#issuecomment-921324766,2,['cache'],['cache']
Performance,Build failed on ROOT-debian10-i386/cxx14.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134325/console).; ### Failing tests:; - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadNamespace](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134325/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadNamespace/); - [projectroot.roottest.root.meta.autoloading.classInNamespace.roottest_root_meta_autoloading_classInNamespace_execClassInNamespace_auto](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134325/testReport/projectroot.roottest.root.meta.autoloading/classInNamespace/roottest_root_meta_autoloading_classInNamespace_execClassInNamespace_auto/); - [projectroot.roottest.root.meta.autoloading.headerParsingOnDemand.roottest_root_meta_autoloading_headerParsingOnDemand_execCheckComplexTypedefs](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/134325/testReport/projectroot.roottest.root.meta.autoloading/headerParsingOnDemand/roottest_root_meta_autoloading_headerParsingOnDemand_execCheckComplexTypedefs/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/9592#issuecomment-1013844259:288,load,load,288,https://root.cern,https://github.com/root-project/root/pull/9592#issuecomment-1013844259,2,['load'],['load']
Performance,Build failed on ROOT-debian10-i386/cxx14.; Running on pcepsft11.dyndns.cern.ch:/home/sftnight/build/workspace/root-pullrequests-build; [See cdash](http://cdash.cern.ch/index.php?project=ROOT&filtercount=1&field1=buildname/string&compare1=65&value1=PR-5932-ROOT-debian10-i386-cxx14&date=2020-06-25).; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/88064/console).; ### Errors:; - [2020-06-25T20:37:47.017Z] FAILED: hist/histv7/test/CMakeFiles/histhistv7testUnit.dir/binning.cxx.o ; - [2020-06-25T20:37:47.631Z] c++: fatal error: Terminated signal terminated program cc1plus ; - [2020-06-25T20:37:47.631Z] FAILED: hist/histv7/test/CMakeFiles/histhistv7testUnit.dir/concurrentfill.cxx.o,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/5932#issuecomment-649805109:710,concurren,concurrentfill,710,https://root.cern,https://github.com/root-project/root/pull/5932#issuecomment-649805109,1,['concurren'],['concurrentfill']
Performance,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153337/console).; ### Failing tests:; - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_classes_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153337/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_classes_libgen_build/); - [projectroot.roottest.root.meta.genreflex.roottest_root_meta_genreflex_MyClass_v1_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153337/testReport/projectroot.roottest.root.meta/genreflex/roottest_root_meta_genreflex_MyClass_v1_libgen_build/); - [projectroot.roottest.root.aclic.load.roottest_root_aclic_load_autoloadtest_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153337/testReport/projectroot.roottest.root.aclic/load/roottest_root_aclic_load_autoloadtest_build/); - [projectroot.roottest.root.io.complex.roottest_root_io_complex_classWithComplex_libgen_build](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153337/testReport/projectroot.roottest.root.io/complex/roottest_root_io_complex_classWithComplex_libgen_build/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writeUniqPtrColls](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153337/testReport/projectroot.roottest.root.io/uniquePointer/roottest_root_io_uniquePointer_writeUniqPtrColls/); - [projectroot.roottest.root.io.stdarray.roottest_root_io_stdarray_aclicModelWrite](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/153337/testReport/projectroot.roottest.root.io/stdarray/roottest_root_io_stdarray_aclicModelWrite/); - [projectroot.roottest.root.io.uniquePointer.roottest_root_io_uniquePointer_writePtrCol,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/10910#issuecomment-1232548569:866,load,load,866,https://root.cern,https://github.com/root-project/root/pull/10910#issuecomment-1232548569,1,['load'],['load']
Performance,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166965/console).; ### Failing tests:; - [projectroot.test.test_stressroofit_batchmode_cpu](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166965/testReport/projectroot/test/test_stressroofit_batchmode_cpu/); - [projectroot.test.test_stressroofit](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166965/testReport/projectroot/test/test_stressroofit/); - [projectroot.roottest.root.io.withoutDictionaries.roottest_root_io_withoutDictionaries_IOWithoutDictionaries](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166965/testReport/projectroot.roottest.root.io/withoutDictionaries/roottest_root_io_withoutDictionaries_IOWithoutDictionaries/); - [projectroot.roottest.root.meta.MakeProject.roottest_root_meta_MakeProject_stltest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166965/testReport/projectroot.roottest.root.meta/MakeProject/roottest_root_meta_MakeProject_stltest/); - [projectroot.roottest.root.meta.tclass.issue-6767.roottest_root_meta_tclass_issue_6767_reproducer](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166965/testReport/projectroot.roottest.root.meta.tclass/issue-6767/roottest_root_meta_tclass_issue_6767_reproducer/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_perfstattest](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166965/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_perfstattest/); - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_TooSmall](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/166965/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_TooSmall/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12173#issuecomment-1416435468:1523,cache,cache,1523,https://root.cern,https://github.com/root-project/root/pull/12173#issuecomment-1416435468,4,['cache'],['cache']
Performance,Build failed on ROOT-debian10-i386/soversion.; Running on pcepsft10.dyndns.cern.ch:/build/workspace/root-pullrequests-build; [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/172449/console).; ### Failing tests:; - [projectroot.roottest.root.tree.cache.roottest_root_tree_cache_autocache](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/172449/testReport/projectroot.roottest.root.tree/cache/roottest_root_tree_cache_autocache/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://github.com/root-project/root/pull/12650#issuecomment-1505873208:291,cache,cache,291,https://root.cern,https://github.com/root-project/root/pull/12650#issuecomment-1505873208,2,['cache'],['cache']
